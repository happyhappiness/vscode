<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1282_collectd-5.6.3.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">grpc<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">Status<pos:position pos:line="1" pos:column="13"/></name></name></type> <name pos:line="1" pos:column="14">queryValuesWrite<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">grpc<pos:position pos:line="1" pos:column="35"/></name><operator pos:line="1" pos:column="35">::<pos:position pos:line="1" pos:column="37"/></operator><name pos:line="1" pos:column="37">ServerContext<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ctx<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
					   <parameter><decl><type><name><name pos:line="2" pos:column="44">grpc<pos:position pos:line="2" pos:column="48"/></name><operator pos:line="2" pos:column="48">::<pos:position pos:line="2" pos:column="50"/></operator><name><name pos:line="2" pos:column="50">ServerWriter<pos:position pos:line="2" pos:column="62"/></name><argument_list type="generic" pos:line="2" pos:column="62">&lt;<argument><expr><name pos:line="2" pos:column="63">QueryValuesResponse<pos:position pos:line="2" pos:column="82"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="86"/></argument_list></name></name> <modifier pos:line="2" pos:column="84">*<pos:position pos:line="2" pos:column="85"/></modifier></type><name pos:line="2" pos:column="85">writer<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>,
					   <parameter><decl><type><name><name pos:line="3" pos:column="44">std<pos:position pos:line="3" pos:column="47"/></name><operator pos:line="3" pos:column="47">::<pos:position pos:line="3" pos:column="49"/></operator><name><name pos:line="3" pos:column="49">queue<pos:position pos:line="3" pos:column="54"/></name><argument_list type="generic" pos:line="3" pos:column="54">&lt;<argument><expr><name pos:line="3" pos:column="55">value_list_t<pos:position pos:line="3" pos:column="67"/></name></expr></argument>&gt;<pos:position pos:line="3" pos:column="71"/></argument_list></name></name> <modifier pos:line="3" pos:column="69">*<pos:position pos:line="3" pos:column="70"/></modifier></type><name pos:line="3" pos:column="70">value_lists<pos:position pos:line="3" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="82"/></parameter_list> <block pos:line="3" pos:column="83">{
		<while pos:line="4" pos:column="17">while <condition pos:line="4" pos:column="23">(<expr><operator pos:line="4" pos:column="24">!<pos:position pos:line="4" pos:column="25"/></operator><call><name><name pos:line="4" pos:column="25">value_lists<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">empty<pos:position pos:line="4" pos:column="43"/></name></name><argument_list pos:line="4" pos:column="43">()<pos:position pos:line="4" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="46"/></condition> <block pos:line="4" pos:column="47">{
			<decl_stmt><decl><type><name pos:line="5" pos:column="25">auto<pos:position pos:line="5" pos:column="29"/></name></type> <name pos:line="5" pos:column="30">vl<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><call><name><name pos:line="5" pos:column="35">value_lists<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">-&gt;<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="48">front<pos:position pos:line="5" pos:column="53"/></name></name><argument_list pos:line="5" pos:column="53">()<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="6" pos:column="25">QueryValuesResponse<pos:position pos:line="6" pos:column="44"/></name></type> <name pos:line="6" pos:column="45">res<pos:position pos:line="6" pos:column="48"/></name></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="7" pos:column="25">res<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">.<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">Clear<pos:position pos:line="7" pos:column="34"/></name></name><argument_list pos:line="7" pos:column="34">()<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>

			<decl_stmt><decl><type><name pos:line="9" pos:column="25">auto<pos:position pos:line="9" pos:column="29"/></name></type> <name pos:line="9" pos:column="30">status<pos:position pos:line="9" pos:column="36"/></name> <init pos:line="9" pos:column="37">= <expr><call><name pos:line="9" pos:column="39">marshal_value_list<pos:position pos:line="9" pos:column="57"/></name><argument_list pos:line="9" pos:column="57">(<argument><expr><operator pos:line="9" pos:column="58">&amp;<pos:position pos:line="9" pos:column="63"/></operator><name pos:line="9" pos:column="59">vl<pos:position pos:line="9" pos:column="61"/></name></expr></argument>, <argument><expr><call><name><name pos:line="9" pos:column="63">res<pos:position pos:line="9" pos:column="66"/></name><operator pos:line="9" pos:column="66">.<pos:position pos:line="9" pos:column="67"/></operator><name pos:line="9" pos:column="67">mutable_value_list<pos:position pos:line="9" pos:column="85"/></name></name><argument_list pos:line="9" pos:column="85">()<pos:position pos:line="9" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="88"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="89"/></decl_stmt>
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><operator pos:line="10" pos:column="29">!<pos:position pos:line="10" pos:column="30"/></operator><call><name><name pos:line="10" pos:column="30">status<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">.<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="37">ok<pos:position pos:line="10" pos:column="39"/></name></name><argument_list pos:line="10" pos:column="39">()<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42"> <block pos:line="10" pos:column="43">{
				<return pos:line="11" pos:column="33">return <expr><name pos:line="11" pos:column="40">status<pos:position pos:line="11" pos:column="46"/></name></expr>;<pos:position pos:line="11" pos:column="47"/></return>
			}<pos:position pos:line="12" pos:column="26"/></block></then></if>

			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><operator pos:line="14" pos:column="29">!<pos:position pos:line="14" pos:column="30"/></operator><call><name><name pos:line="14" pos:column="30">writer<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">-&gt;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="38">Write<pos:position pos:line="14" pos:column="43"/></name></name><argument_list pos:line="14" pos:column="43">(<argument><expr><name pos:line="14" pos:column="44">res<pos:position pos:line="14" pos:column="47"/></name></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="49"/></condition><then pos:line="14" pos:column="49"> <block pos:line="14" pos:column="50">{
				<return pos:line="15" pos:column="33">return <expr><name><name pos:line="15" pos:column="40">grpc<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">::<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="46">Status<pos:position pos:line="15" pos:column="52"/></name><operator pos:line="15" pos:column="52">::<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="54">CANCELLED<pos:position pos:line="15" pos:column="63"/></name></name></expr>;<pos:position pos:line="15" pos:column="64"/></return>
			}<pos:position pos:line="16" pos:column="26"/></block></then></if>

			<expr_stmt><expr><call><name><name pos:line="18" pos:column="25">value_lists<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">-&gt;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="38">pop<pos:position pos:line="18" pos:column="41"/></name></name><argument_list pos:line="18" pos:column="41">()<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">sfree<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name><name pos:line="19" pos:column="31">vl<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">.<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">values<pos:position pos:line="19" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></while>

		<return pos:line="22" pos:column="17">return <expr><name><name pos:line="22" pos:column="24">grpc<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">::<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">Status<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">::<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">OK<pos:position pos:line="22" pos:column="40"/></name></name></expr>;<pos:position pos:line="22" pos:column="41"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_312_collectd-4.10.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">disk_read<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">HAVE_IOKIT_IOKITLIB_H<pos:position pos:line="3" pos:column="26"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">io_registry_entry_t<pos:position pos:line="4" pos:column="28"/></name></type>	<name pos:line="4" pos:column="33">disk<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">io_registry_entry_t<pos:position pos:line="5" pos:column="28"/></name></type>	<name pos:line="5" pos:column="33">disk_child<pos:position pos:line="5" pos:column="43"/></name></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">io_iterator_t<pos:position pos:line="6" pos:column="22"/></name></type>		<name pos:line="6" pos:column="33">disk_list<pos:position pos:line="6" pos:column="42"/></name></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">CFDictionaryRef<pos:position pos:line="7" pos:column="24"/></name></type>		<name pos:line="7" pos:column="33">props_dict<pos:position pos:line="7" pos:column="43"/></name></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">CFDictionaryRef<pos:position pos:line="8" pos:column="24"/></name></type>		<name pos:line="8" pos:column="33">stats_dict<pos:position pos:line="8" pos:column="43"/></name></decl>;<pos:position pos:line="8" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">CFDictionaryRef<pos:position pos:line="9" pos:column="24"/></name></type>		<name pos:line="9" pos:column="33">child_dict<pos:position pos:line="9" pos:column="43"/></name></decl>;<pos:position pos:line="9" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">kern_return_t<pos:position pos:line="10" pos:column="22"/></name></type>           <name pos:line="10" pos:column="33">status<pos:position pos:line="10" pos:column="39"/></name></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="12" pos:column="9">signed<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">long<pos:position pos:line="12" pos:column="20"/></name> <name pos:line="12" pos:column="21">long<pos:position pos:line="12" pos:column="25"/></name></type> <name pos:line="12" pos:column="26">read_ops<pos:position pos:line="12" pos:column="34"/></name></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">signed<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">long<pos:position pos:line="13" pos:column="20"/></name> <name pos:line="13" pos:column="21">long<pos:position pos:line="13" pos:column="25"/></name></type> <name pos:line="13" pos:column="26">read_byt<pos:position pos:line="13" pos:column="34"/></name></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">signed<pos:position pos:line="14" pos:column="15"/></name> <name pos:line="14" pos:column="16">long<pos:position pos:line="14" pos:column="20"/></name> <name pos:line="14" pos:column="21">long<pos:position pos:line="14" pos:column="25"/></name></type> <name pos:line="14" pos:column="26">read_tme<pos:position pos:line="14" pos:column="34"/></name></decl>;<pos:position pos:line="14" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">signed<pos:position pos:line="15" pos:column="15"/></name> <name pos:line="15" pos:column="16">long<pos:position pos:line="15" pos:column="20"/></name> <name pos:line="15" pos:column="21">long<pos:position pos:line="15" pos:column="25"/></name></type> <name pos:line="15" pos:column="26">write_ops<pos:position pos:line="15" pos:column="35"/></name></decl>;<pos:position pos:line="15" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">signed<pos:position pos:line="16" pos:column="15"/></name> <name pos:line="16" pos:column="16">long<pos:position pos:line="16" pos:column="20"/></name> <name pos:line="16" pos:column="21">long<pos:position pos:line="16" pos:column="25"/></name></type> <name pos:line="16" pos:column="26">write_byt<pos:position pos:line="16" pos:column="35"/></name></decl>;<pos:position pos:line="16" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">signed<pos:position pos:line="17" pos:column="15"/></name> <name pos:line="17" pos:column="16">long<pos:position pos:line="17" pos:column="20"/></name> <name pos:line="17" pos:column="21">long<pos:position pos:line="17" pos:column="25"/></name></type> <name pos:line="17" pos:column="26">write_tme<pos:position pos:line="17" pos:column="35"/></name></decl>;<pos:position pos:line="17" pos:column="36"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="19" pos:column="9">int<pos:position pos:line="19" pos:column="12"/></name></type>  <name pos:line="19" pos:column="14">disk_major<pos:position pos:line="19" pos:column="24"/></name></decl>;<pos:position pos:line="19" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name></type>  <name pos:line="20" pos:column="14">disk_minor<pos:position pos:line="20" pos:column="24"/></name></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">char<pos:position pos:line="21" pos:column="13"/></name></type> <name><name pos:line="21" pos:column="14">disk_name<pos:position pos:line="21" pos:column="23"/></name><index pos:line="21" pos:column="23">[<expr><literal type="number" pos:line="21" pos:column="24">64<pos:position pos:line="21" pos:column="26"/></literal></expr>]<pos:position pos:line="21" pos:column="27"/></index></name></decl>;<pos:position pos:line="21" pos:column="28"/></decl_stmt>

	<comment type="block" pos:line="23" pos:column="9">/* Get the list of all disk objects. */</comment>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">IOServiceGetMatchingServices<pos:position pos:line="24" pos:column="41"/></name> <argument_list pos:line="24" pos:column="42">(<argument><expr><name pos:line="24" pos:column="43">io_master_port<pos:position pos:line="24" pos:column="57"/></name></expr></argument>,
				<argument><expr><call><name pos:line="25" pos:column="33">IOServiceMatching<pos:position pos:line="25" pos:column="50"/></name> <argument_list pos:line="25" pos:column="51">(<argument><expr><name pos:line="25" pos:column="52">kIOBlockStorageDriverClass<pos:position pos:line="25" pos:column="78"/></name></expr></argument>)<pos:position pos:line="25" pos:column="79"/></argument_list></call></expr></argument>,
				<argument><expr><operator pos:line="26" pos:column="33">&amp;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="34">disk_list<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call> <operator pos:line="26" pos:column="45">!=<pos:position pos:line="26" pos:column="47"/></operator> <name pos:line="26" pos:column="48">kIOReturnSuccess<pos:position pos:line="26" pos:column="64"/></name></expr>)<pos:position pos:line="26" pos:column="65"/></condition><then pos:line="26" pos:column="65">
	<block pos:line="27" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">ERROR<pos:position pos:line="28" pos:column="22"/></name> <argument_list pos:line="28" pos:column="23">(<argument><expr><literal type="string" pos:line="28" pos:column="24">"disk plugin: IOServiceGetMatchingServices failed."<pos:position pos:line="28" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="77"/></expr_stmt>
		<return pos:line="29" pos:column="17">return <expr><operator pos:line="29" pos:column="24">(<pos:position pos:line="29" pos:column="25"/></operator><operator pos:line="29" pos:column="25">-<pos:position pos:line="29" pos:column="26"/></operator><literal type="number" pos:line="29" pos:column="26">1<pos:position pos:line="29" pos:column="27"/></literal><operator pos:line="29" pos:column="27">)<pos:position pos:line="29" pos:column="28"/></operator></expr>;<pos:position pos:line="29" pos:column="29"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<while pos:line="32" pos:column="9">while <condition pos:line="32" pos:column="15">(<expr><operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">disk<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <call><name pos:line="32" pos:column="24">IOIteratorNext<pos:position pos:line="32" pos:column="38"/></name> <argument_list pos:line="32" pos:column="39">(<argument><expr><name pos:line="32" pos:column="40">disk_list<pos:position pos:line="32" pos:column="49"/></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call><operator pos:line="32" pos:column="50">)<pos:position pos:line="32" pos:column="51"/></operator> <operator pos:line="32" pos:column="52">!=<pos:position pos:line="32" pos:column="54"/></operator> <literal type="number" pos:line="32" pos:column="55">0<pos:position pos:line="32" pos:column="56"/></literal></expr>)<pos:position pos:line="32" pos:column="57"/></condition>
	<block pos:line="33" pos:column="9">{
		<expr_stmt><expr><name pos:line="34" pos:column="17">props_dict<pos:position pos:line="34" pos:column="27"/></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <name pos:line="34" pos:column="30">NULL<pos:position pos:line="34" pos:column="34"/></name></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">stats_dict<pos:position pos:line="35" pos:column="27"/></name> <operator pos:line="35" pos:column="28">=<pos:position pos:line="35" pos:column="29"/></operator> <name pos:line="35" pos:column="30">NULL<pos:position pos:line="35" pos:column="34"/></name></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="36" pos:column="17">child_dict<pos:position pos:line="36" pos:column="27"/></name> <operator pos:line="36" pos:column="28">=<pos:position pos:line="36" pos:column="29"/></operator> <name pos:line="36" pos:column="30">NULL<pos:position pos:line="36" pos:column="34"/></name></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>

		<comment type="block" pos:line="38" pos:column="17">/* `disk_child' must be released */</comment>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">(<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">status<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">=<pos:position pos:line="39" pos:column="30"/></operator> <call><name pos:line="39" pos:column="31">IORegistryEntryGetChildEntry<pos:position pos:line="39" pos:column="59"/></name> <argument_list pos:line="39" pos:column="60">(<argument><expr><name pos:line="39" pos:column="61">disk<pos:position pos:line="39" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="67">kIOServicePlane<pos:position pos:line="39" pos:column="82"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="84">&amp;<pos:position pos:line="39" pos:column="89"/></operator><name pos:line="39" pos:column="85">disk_child<pos:position pos:line="39" pos:column="95"/></name></expr></argument>)<pos:position pos:line="39" pos:column="96"/></argument_list></call><operator pos:line="39" pos:column="96">)<pos:position pos:line="39" pos:column="97"/></operator>
			       	<operator pos:line="40" pos:column="33">!=<pos:position pos:line="40" pos:column="35"/></operator> <name pos:line="40" pos:column="36">kIOReturnSuccess<pos:position pos:line="40" pos:column="52"/></name></expr>)<pos:position pos:line="40" pos:column="53"/></condition><then pos:line="40" pos:column="53">
		<block pos:line="41" pos:column="17">{
			<comment type="block" pos:line="42" pos:column="25">/* This fails for example for DVD/CD drives.. */</comment>
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">DEBUG<pos:position pos:line="43" pos:column="30"/></name> <argument_list pos:line="43" pos:column="31">(<argument><expr><literal type="string" pos:line="43" pos:column="32">"IORegistryEntryGetChildEntry (disk) failed: 0x%08x"<pos:position pos:line="43" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="86">status<pos:position pos:line="43" pos:column="92"/></name></expr></argument>)<pos:position pos:line="43" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="94"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="44" pos:column="25">IOObjectRelease<pos:position pos:line="44" pos:column="40"/></name> <argument_list pos:line="44" pos:column="41">(<argument><expr><name pos:line="44" pos:column="42">disk<pos:position pos:line="44" pos:column="46"/></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
			<continue pos:line="45" pos:column="25">continue;<pos:position pos:line="45" pos:column="34"/></continue>
		}<pos:position pos:line="46" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="48" pos:column="17">/* We create `props_dict' =&gt; we need to release it later */</comment>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><call><name pos:line="49" pos:column="21">IORegistryEntryCreateCFProperties<pos:position pos:line="49" pos:column="54"/></name> <argument_list pos:line="49" pos:column="55">(<argument><expr><name pos:line="49" pos:column="56">disk<pos:position pos:line="49" pos:column="60"/></name></expr></argument>,
					<argument><expr><operator pos:line="50" pos:column="41">(<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="42">CFMutableDictionaryRef<pos:position pos:line="50" pos:column="64"/></name> <operator pos:line="50" pos:column="65">*<pos:position pos:line="50" pos:column="66"/></operator><operator pos:line="50" pos:column="66">)<pos:position pos:line="50" pos:column="67"/></operator> <operator pos:line="50" pos:column="68">&amp;<pos:position pos:line="50" pos:column="73"/></operator><name pos:line="50" pos:column="69">props_dict<pos:position pos:line="50" pos:column="79"/></name></expr></argument>,
					<argument><expr><name pos:line="51" pos:column="41">kCFAllocatorDefault<pos:position pos:line="51" pos:column="60"/></name></expr></argument>,
					<argument><expr><name pos:line="52" pos:column="41">kNilOptions<pos:position pos:line="52" pos:column="52"/></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call>
				<operator pos:line="53" pos:column="33">!=<pos:position pos:line="53" pos:column="35"/></operator> <name pos:line="53" pos:column="36">kIOReturnSuccess<pos:position pos:line="53" pos:column="52"/></name></expr>)<pos:position pos:line="53" pos:column="53"/></condition><then pos:line="53" pos:column="53">
		<block pos:line="54" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="55" pos:column="25">ERROR<pos:position pos:line="55" pos:column="30"/></name> <argument_list pos:line="55" pos:column="31">(<argument><expr><literal type="string" pos:line="55" pos:column="32">"disk-plugin: IORegistryEntryCreateCFProperties failed."<pos:position pos:line="55" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="90"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="56" pos:column="25">IOObjectRelease<pos:position pos:line="56" pos:column="40"/></name> <argument_list pos:line="56" pos:column="41">(<argument><expr><name pos:line="56" pos:column="42">disk_child<pos:position pos:line="56" pos:column="52"/></name></expr></argument>)<pos:position pos:line="56" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">IOObjectRelease<pos:position pos:line="57" pos:column="40"/></name> <argument_list pos:line="57" pos:column="41">(<argument><expr><name pos:line="57" pos:column="42">disk<pos:position pos:line="57" pos:column="46"/></name></expr></argument>)<pos:position pos:line="57" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="48"/></expr_stmt>
			<continue pos:line="58" pos:column="25">continue;<pos:position pos:line="58" pos:column="34"/></continue>
		}<pos:position pos:line="59" pos:column="18"/></block></then></if>

		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><name pos:line="61" pos:column="21">props_dict<pos:position pos:line="61" pos:column="31"/></name> <operator pos:line="61" pos:column="32">==<pos:position pos:line="61" pos:column="34"/></operator> <name pos:line="61" pos:column="35">NULL<pos:position pos:line="61" pos:column="39"/></name></expr>)<pos:position pos:line="61" pos:column="40"/></condition><then pos:line="61" pos:column="40">
		<block pos:line="62" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="63" pos:column="25">DEBUG<pos:position pos:line="63" pos:column="30"/></name> <argument_list pos:line="63" pos:column="31">(<argument><expr><literal type="string" pos:line="63" pos:column="32">"IORegistryEntryCreateCFProperties (disk) failed."<pos:position pos:line="63" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="84"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="64" pos:column="25">IOObjectRelease<pos:position pos:line="64" pos:column="40"/></name> <argument_list pos:line="64" pos:column="41">(<argument><expr><name pos:line="64" pos:column="42">disk_child<pos:position pos:line="64" pos:column="52"/></name></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="65" pos:column="25">IOObjectRelease<pos:position pos:line="65" pos:column="40"/></name> <argument_list pos:line="65" pos:column="41">(<argument><expr><name pos:line="65" pos:column="42">disk<pos:position pos:line="65" pos:column="46"/></name></expr></argument>)<pos:position pos:line="65" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="48"/></expr_stmt>
			<continue pos:line="66" pos:column="25">continue;<pos:position pos:line="66" pos:column="34"/></continue>
		}<pos:position pos:line="67" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="69" pos:column="17">stats_dict<pos:position pos:line="69" pos:column="27"/></name> <operator pos:line="69" pos:column="28">=<pos:position pos:line="69" pos:column="29"/></operator> <operator pos:line="69" pos:column="30">(<pos:position pos:line="69" pos:column="31"/></operator><name pos:line="69" pos:column="31">CFDictionaryRef<pos:position pos:line="69" pos:column="46"/></name><operator pos:line="69" pos:column="46">)<pos:position pos:line="69" pos:column="47"/></operator> <call><name pos:line="69" pos:column="48">CFDictionaryGetValue<pos:position pos:line="69" pos:column="68"/></name> <argument_list pos:line="69" pos:column="69">(<argument><expr><name pos:line="69" pos:column="70">props_dict<pos:position pos:line="69" pos:column="80"/></name></expr></argument>,
				<argument><expr><call><name pos:line="70" pos:column="33">CFSTR<pos:position pos:line="70" pos:column="38"/></name> <argument_list pos:line="70" pos:column="39">(<argument><expr><name pos:line="70" pos:column="40">kIOBlockStorageDriverStatisticsKey<pos:position pos:line="70" pos:column="74"/></name></expr></argument>)<pos:position pos:line="70" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="77"/></expr_stmt>

		<if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><name pos:line="72" pos:column="21">stats_dict<pos:position pos:line="72" pos:column="31"/></name> <operator pos:line="72" pos:column="32">==<pos:position pos:line="72" pos:column="34"/></operator> <name pos:line="72" pos:column="35">NULL<pos:position pos:line="72" pos:column="39"/></name></expr>)<pos:position pos:line="72" pos:column="40"/></condition><then pos:line="72" pos:column="40">
		<block pos:line="73" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="74" pos:column="25">DEBUG<pos:position pos:line="74" pos:column="30"/></name> <argument_list pos:line="74" pos:column="31">(<argument><expr><literal type="string" pos:line="74" pos:column="32">"CFDictionaryGetValue (%s) failed."<pos:position pos:line="74" pos:column="67"/></literal></expr></argument>,
				       	<argument><expr><name pos:line="75" pos:column="41">kIOBlockStorageDriverStatisticsKey<pos:position pos:line="75" pos:column="75"/></name></expr></argument>)<pos:position pos:line="75" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="76" pos:column="25">CFRelease<pos:position pos:line="76" pos:column="34"/></name> <argument_list pos:line="76" pos:column="35">(<argument><expr><name pos:line="76" pos:column="36">props_dict<pos:position pos:line="76" pos:column="46"/></name></expr></argument>)<pos:position pos:line="76" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="77" pos:column="25">IOObjectRelease<pos:position pos:line="77" pos:column="40"/></name> <argument_list pos:line="77" pos:column="41">(<argument><expr><name pos:line="77" pos:column="42">disk_child<pos:position pos:line="77" pos:column="52"/></name></expr></argument>)<pos:position pos:line="77" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="78" pos:column="25">IOObjectRelease<pos:position pos:line="78" pos:column="40"/></name> <argument_list pos:line="78" pos:column="41">(<argument><expr><name pos:line="78" pos:column="42">disk<pos:position pos:line="78" pos:column="46"/></name></expr></argument>)<pos:position pos:line="78" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="48"/></expr_stmt>
			<continue pos:line="79" pos:column="25">continue;<pos:position pos:line="79" pos:column="34"/></continue>
		}<pos:position pos:line="80" pos:column="18"/></block></then></if>

		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><call><name pos:line="82" pos:column="21">IORegistryEntryCreateCFProperties<pos:position pos:line="82" pos:column="54"/></name> <argument_list pos:line="82" pos:column="55">(<argument><expr><name pos:line="82" pos:column="56">disk_child<pos:position pos:line="82" pos:column="66"/></name></expr></argument>,
					<argument><expr><operator pos:line="83" pos:column="41">(<pos:position pos:line="83" pos:column="42"/></operator><name pos:line="83" pos:column="42">CFMutableDictionaryRef<pos:position pos:line="83" pos:column="64"/></name> <operator pos:line="83" pos:column="65">*<pos:position pos:line="83" pos:column="66"/></operator><operator pos:line="83" pos:column="66">)<pos:position pos:line="83" pos:column="67"/></operator> <operator pos:line="83" pos:column="68">&amp;<pos:position pos:line="83" pos:column="73"/></operator><name pos:line="83" pos:column="69">child_dict<pos:position pos:line="83" pos:column="79"/></name></expr></argument>,
					<argument><expr><name pos:line="84" pos:column="41">kCFAllocatorDefault<pos:position pos:line="84" pos:column="60"/></name></expr></argument>,
					<argument><expr><name pos:line="85" pos:column="41">kNilOptions<pos:position pos:line="85" pos:column="52"/></name></expr></argument>)<pos:position pos:line="85" pos:column="53"/></argument_list></call>
				<operator pos:line="86" pos:column="33">!=<pos:position pos:line="86" pos:column="35"/></operator> <name pos:line="86" pos:column="36">kIOReturnSuccess<pos:position pos:line="86" pos:column="52"/></name></expr>)<pos:position pos:line="86" pos:column="53"/></condition><then pos:line="86" pos:column="53">
		<block pos:line="87" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="88" pos:column="25">DEBUG<pos:position pos:line="88" pos:column="30"/></name> <argument_list pos:line="88" pos:column="31">(<argument><expr><literal type="string" pos:line="88" pos:column="32">"IORegistryEntryCreateCFProperties (disk_child) failed."<pos:position pos:line="88" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="90"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="89" pos:column="25">IOObjectRelease<pos:position pos:line="89" pos:column="40"/></name> <argument_list pos:line="89" pos:column="41">(<argument><expr><name pos:line="89" pos:column="42">disk_child<pos:position pos:line="89" pos:column="52"/></name></expr></argument>)<pos:position pos:line="89" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="90" pos:column="25">CFRelease<pos:position pos:line="90" pos:column="34"/></name> <argument_list pos:line="90" pos:column="35">(<argument><expr><name pos:line="90" pos:column="36">props_dict<pos:position pos:line="90" pos:column="46"/></name></expr></argument>)<pos:position pos:line="90" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="91" pos:column="25">IOObjectRelease<pos:position pos:line="91" pos:column="40"/></name> <argument_list pos:line="91" pos:column="41">(<argument><expr><name pos:line="91" pos:column="42">disk<pos:position pos:line="91" pos:column="46"/></name></expr></argument>)<pos:position pos:line="91" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="48"/></expr_stmt>
			<continue pos:line="92" pos:column="25">continue;<pos:position pos:line="92" pos:column="34"/></continue>
		}<pos:position pos:line="93" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="95" pos:column="17">/* kIOBSDNameKey */</comment>
		<expr_stmt><expr><name pos:line="96" pos:column="17">disk_major<pos:position pos:line="96" pos:column="27"/></name> <operator pos:line="96" pos:column="28">=<pos:position pos:line="96" pos:column="29"/></operator> <operator pos:line="96" pos:column="30">(<pos:position pos:line="96" pos:column="31"/></operator><name pos:line="96" pos:column="31">int<pos:position pos:line="96" pos:column="34"/></name><operator pos:line="96" pos:column="34">)<pos:position pos:line="96" pos:column="35"/></operator> <call><name pos:line="96" pos:column="36">dict_get_value<pos:position pos:line="96" pos:column="50"/></name> <argument_list pos:line="96" pos:column="51">(<argument><expr><name pos:line="96" pos:column="52">child_dict<pos:position pos:line="96" pos:column="62"/></name></expr></argument>,
			       	<argument><expr><name pos:line="97" pos:column="33">kIOBSDMajorKey<pos:position pos:line="97" pos:column="47"/></name></expr></argument>)<pos:position pos:line="97" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="98" pos:column="17">disk_minor<pos:position pos:line="98" pos:column="27"/></name> <operator pos:line="98" pos:column="28">=<pos:position pos:line="98" pos:column="29"/></operator> <operator pos:line="98" pos:column="30">(<pos:position pos:line="98" pos:column="31"/></operator><name pos:line="98" pos:column="31">int<pos:position pos:line="98" pos:column="34"/></name><operator pos:line="98" pos:column="34">)<pos:position pos:line="98" pos:column="35"/></operator> <call><name pos:line="98" pos:column="36">dict_get_value<pos:position pos:line="98" pos:column="50"/></name> <argument_list pos:line="98" pos:column="51">(<argument><expr><name pos:line="98" pos:column="52">child_dict<pos:position pos:line="98" pos:column="62"/></name></expr></argument>,
			       	<argument><expr><name pos:line="99" pos:column="33">kIOBSDMinorKey<pos:position pos:line="99" pos:column="47"/></name></expr></argument>)<pos:position pos:line="99" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="100" pos:column="17">read_ops<pos:position pos:line="100" pos:column="25"/></name>  <operator pos:line="100" pos:column="27">=<pos:position pos:line="100" pos:column="28"/></operator> <call><name pos:line="100" pos:column="29">dict_get_value<pos:position pos:line="100" pos:column="43"/></name> <argument_list pos:line="100" pos:column="44">(<argument><expr><name pos:line="100" pos:column="45">stats_dict<pos:position pos:line="100" pos:column="55"/></name></expr></argument>,
				<argument><expr><name pos:line="101" pos:column="33">kIOBlockStorageDriverStatisticsReadsKey<pos:position pos:line="101" pos:column="72"/></name></expr></argument>)<pos:position pos:line="101" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><name pos:line="102" pos:column="17">read_byt<pos:position pos:line="102" pos:column="25"/></name>  <operator pos:line="102" pos:column="27">=<pos:position pos:line="102" pos:column="28"/></operator> <call><name pos:line="102" pos:column="29">dict_get_value<pos:position pos:line="102" pos:column="43"/></name> <argument_list pos:line="102" pos:column="44">(<argument><expr><name pos:line="102" pos:column="45">stats_dict<pos:position pos:line="102" pos:column="55"/></name></expr></argument>,
				<argument><expr><name pos:line="103" pos:column="33">kIOBlockStorageDriverStatisticsBytesReadKey<pos:position pos:line="103" pos:column="76"/></name></expr></argument>)<pos:position pos:line="103" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><name pos:line="104" pos:column="17">read_tme<pos:position pos:line="104" pos:column="25"/></name>  <operator pos:line="104" pos:column="27">=<pos:position pos:line="104" pos:column="28"/></operator> <call><name pos:line="104" pos:column="29">dict_get_value<pos:position pos:line="104" pos:column="43"/></name> <argument_list pos:line="104" pos:column="44">(<argument><expr><name pos:line="104" pos:column="45">stats_dict<pos:position pos:line="104" pos:column="55"/></name></expr></argument>,
				<argument><expr><name pos:line="105" pos:column="33">kIOBlockStorageDriverStatisticsTotalReadTimeKey<pos:position pos:line="105" pos:column="80"/></name></expr></argument>)<pos:position pos:line="105" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="82"/></expr_stmt>
		<expr_stmt><expr><name pos:line="106" pos:column="17">write_ops<pos:position pos:line="106" pos:column="26"/></name> <operator pos:line="106" pos:column="27">=<pos:position pos:line="106" pos:column="28"/></operator> <call><name pos:line="106" pos:column="29">dict_get_value<pos:position pos:line="106" pos:column="43"/></name> <argument_list pos:line="106" pos:column="44">(<argument><expr><name pos:line="106" pos:column="45">stats_dict<pos:position pos:line="106" pos:column="55"/></name></expr></argument>,
				<argument><expr><name pos:line="107" pos:column="33">kIOBlockStorageDriverStatisticsWritesKey<pos:position pos:line="107" pos:column="73"/></name></expr></argument>)<pos:position pos:line="107" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><name pos:line="108" pos:column="17">write_byt<pos:position pos:line="108" pos:column="26"/></name> <operator pos:line="108" pos:column="27">=<pos:position pos:line="108" pos:column="28"/></operator> <call><name pos:line="108" pos:column="29">dict_get_value<pos:position pos:line="108" pos:column="43"/></name> <argument_list pos:line="108" pos:column="44">(<argument><expr><name pos:line="108" pos:column="45">stats_dict<pos:position pos:line="108" pos:column="55"/></name></expr></argument>,
				<argument><expr><name pos:line="109" pos:column="33">kIOBlockStorageDriverStatisticsBytesWrittenKey<pos:position pos:line="109" pos:column="79"/></name></expr></argument>)<pos:position pos:line="109" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="81"/></expr_stmt>
		<comment type="block" pos:line="110" pos:column="17">/* This property describes the number of nanoseconds spent
		 * performing writes since the block storage driver was
		 * instantiated. It is one of the statistic entries listed
		 * under the top-level kIOBlockStorageDriverStatisticsKey
		 * property table. It has an OSNumber value. */</comment>
		<expr_stmt><expr><name pos:line="115" pos:column="17">write_tme<pos:position pos:line="115" pos:column="26"/></name> <operator pos:line="115" pos:column="27">=<pos:position pos:line="115" pos:column="28"/></operator> <call><name pos:line="115" pos:column="29">dict_get_value<pos:position pos:line="115" pos:column="43"/></name> <argument_list pos:line="115" pos:column="44">(<argument><expr><name pos:line="115" pos:column="45">stats_dict<pos:position pos:line="115" pos:column="55"/></name></expr></argument>,
				<argument><expr><name pos:line="116" pos:column="33">kIOBlockStorageDriverStatisticsTotalWriteTimeKey<pos:position pos:line="116" pos:column="81"/></name></expr></argument>)<pos:position pos:line="116" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="83"/></expr_stmt>

		<if pos:line="118" pos:column="17">if <condition pos:line="118" pos:column="20">(<expr><call><name pos:line="118" pos:column="21">ssnprintf<pos:position pos:line="118" pos:column="30"/></name> <argument_list pos:line="118" pos:column="31">(<argument><expr><name pos:line="118" pos:column="32">disk_name<pos:position pos:line="118" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="118" pos:column="43">sizeof <argument_list pos:line="118" pos:column="50">(<argument><expr><name pos:line="118" pos:column="51">disk_name<pos:position pos:line="118" pos:column="60"/></name></expr></argument>)<pos:position pos:line="118" pos:column="61"/></argument_list></sizeof></expr></argument>,
				<argument><expr><literal type="string" pos:line="119" pos:column="33">"%i-%i"<pos:position pos:line="119" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="119" pos:column="42">disk_major<pos:position pos:line="119" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="54">disk_minor<pos:position pos:line="119" pos:column="64"/></name></expr></argument>)<pos:position pos:line="119" pos:column="65"/></argument_list></call> <operator pos:line="119" pos:column="66">&gt;=<pos:position pos:line="119" pos:column="71"/></operator> <sizeof pos:line="119" pos:column="69">sizeof <argument_list pos:line="119" pos:column="76">(<argument><expr><name pos:line="119" pos:column="77">disk_name<pos:position pos:line="119" pos:column="86"/></name></expr></argument>)<pos:position pos:line="119" pos:column="87"/></argument_list></sizeof></expr>)<pos:position pos:line="119" pos:column="88"/></condition><then pos:line="119" pos:column="88">
		<block pos:line="120" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="121" pos:column="25">DEBUG<pos:position pos:line="121" pos:column="30"/></name> <argument_list pos:line="121" pos:column="31">(<argument><expr><literal type="string" pos:line="121" pos:column="32">"snprintf (major, minor) failed."<pos:position pos:line="121" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="122" pos:column="25">CFRelease<pos:position pos:line="122" pos:column="34"/></name> <argument_list pos:line="122" pos:column="35">(<argument><expr><name pos:line="122" pos:column="36">child_dict<pos:position pos:line="122" pos:column="46"/></name></expr></argument>)<pos:position pos:line="122" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="123" pos:column="25">IOObjectRelease<pos:position pos:line="123" pos:column="40"/></name> <argument_list pos:line="123" pos:column="41">(<argument><expr><name pos:line="123" pos:column="42">disk_child<pos:position pos:line="123" pos:column="52"/></name></expr></argument>)<pos:position pos:line="123" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="124" pos:column="25">CFRelease<pos:position pos:line="124" pos:column="34"/></name> <argument_list pos:line="124" pos:column="35">(<argument><expr><name pos:line="124" pos:column="36">props_dict<pos:position pos:line="124" pos:column="46"/></name></expr></argument>)<pos:position pos:line="124" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="125" pos:column="25">IOObjectRelease<pos:position pos:line="125" pos:column="40"/></name> <argument_list pos:line="125" pos:column="41">(<argument><expr><name pos:line="125" pos:column="42">disk<pos:position pos:line="125" pos:column="46"/></name></expr></argument>)<pos:position pos:line="125" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="48"/></expr_stmt>
			<continue pos:line="126" pos:column="25">continue;<pos:position pos:line="126" pos:column="34"/></continue>
		}<pos:position pos:line="127" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="128" pos:column="17">DEBUG<pos:position pos:line="128" pos:column="22"/></name> <argument_list pos:line="128" pos:column="23">(<argument><expr><literal type="string" pos:line="128" pos:column="24">"disk_name = %s"<pos:position pos:line="128" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="128" pos:column="42">disk_name<pos:position pos:line="128" pos:column="51"/></name></expr></argument>)<pos:position pos:line="128" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="53"/></expr_stmt>

		<if pos:line="130" pos:column="17">if <condition pos:line="130" pos:column="20">(<expr><operator pos:line="130" pos:column="21">(<pos:position pos:line="130" pos:column="22"/></operator><name pos:line="130" pos:column="22">read_byt<pos:position pos:line="130" pos:column="30"/></name> <operator pos:line="130" pos:column="31">!=<pos:position pos:line="130" pos:column="33"/></operator> <operator pos:line="130" pos:column="34">-<pos:position pos:line="130" pos:column="35"/></operator><literal type="number" pos:line="130" pos:column="35">1LL<pos:position pos:line="130" pos:column="38"/></literal><operator pos:line="130" pos:column="38">)<pos:position pos:line="130" pos:column="39"/></operator> <operator pos:line="130" pos:column="40">||<pos:position pos:line="130" pos:column="42"/></operator> <operator pos:line="130" pos:column="43">(<pos:position pos:line="130" pos:column="44"/></operator><name pos:line="130" pos:column="44">write_byt<pos:position pos:line="130" pos:column="53"/></name> <operator pos:line="130" pos:column="54">!=<pos:position pos:line="130" pos:column="56"/></operator> <operator pos:line="130" pos:column="57">-<pos:position pos:line="130" pos:column="58"/></operator><literal type="number" pos:line="130" pos:column="58">1LL<pos:position pos:line="130" pos:column="61"/></literal><operator pos:line="130" pos:column="61">)<pos:position pos:line="130" pos:column="62"/></operator></expr>)<pos:position pos:line="130" pos:column="63"/></condition><then pos:line="130" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="131" pos:column="25">disk_submit<pos:position pos:line="131" pos:column="36"/></name> <argument_list pos:line="131" pos:column="37">(<argument><expr><name pos:line="131" pos:column="38">disk_name<pos:position pos:line="131" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="49">"disk_octets"<pos:position pos:line="131" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="64">read_byt<pos:position pos:line="131" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="74">write_byt<pos:position pos:line="131" pos:column="83"/></name></expr></argument>)<pos:position pos:line="131" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="85"/></expr_stmt></block></then></if>
		<if pos:line="132" pos:column="17">if <condition pos:line="132" pos:column="20">(<expr><operator pos:line="132" pos:column="21">(<pos:position pos:line="132" pos:column="22"/></operator><name pos:line="132" pos:column="22">read_ops<pos:position pos:line="132" pos:column="30"/></name> <operator pos:line="132" pos:column="31">!=<pos:position pos:line="132" pos:column="33"/></operator> <operator pos:line="132" pos:column="34">-<pos:position pos:line="132" pos:column="35"/></operator><literal type="number" pos:line="132" pos:column="35">1LL<pos:position pos:line="132" pos:column="38"/></literal><operator pos:line="132" pos:column="38">)<pos:position pos:line="132" pos:column="39"/></operator> <operator pos:line="132" pos:column="40">||<pos:position pos:line="132" pos:column="42"/></operator> <operator pos:line="132" pos:column="43">(<pos:position pos:line="132" pos:column="44"/></operator><name pos:line="132" pos:column="44">write_ops<pos:position pos:line="132" pos:column="53"/></name> <operator pos:line="132" pos:column="54">!=<pos:position pos:line="132" pos:column="56"/></operator> <operator pos:line="132" pos:column="57">-<pos:position pos:line="132" pos:column="58"/></operator><literal type="number" pos:line="132" pos:column="58">1LL<pos:position pos:line="132" pos:column="61"/></literal><operator pos:line="132" pos:column="61">)<pos:position pos:line="132" pos:column="62"/></operator></expr>)<pos:position pos:line="132" pos:column="63"/></condition><then pos:line="132" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="133" pos:column="25">disk_submit<pos:position pos:line="133" pos:column="36"/></name> <argument_list pos:line="133" pos:column="37">(<argument><expr><name pos:line="133" pos:column="38">disk_name<pos:position pos:line="133" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="49">"disk_ops"<pos:position pos:line="133" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="133" pos:column="61">read_ops<pos:position pos:line="133" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="71">write_ops<pos:position pos:line="133" pos:column="80"/></name></expr></argument>)<pos:position pos:line="133" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="82"/></expr_stmt></block></then></if>
		<if pos:line="134" pos:column="17">if <condition pos:line="134" pos:column="20">(<expr><operator pos:line="134" pos:column="21">(<pos:position pos:line="134" pos:column="22"/></operator><name pos:line="134" pos:column="22">read_tme<pos:position pos:line="134" pos:column="30"/></name> <operator pos:line="134" pos:column="31">!=<pos:position pos:line="134" pos:column="33"/></operator> <operator pos:line="134" pos:column="34">-<pos:position pos:line="134" pos:column="35"/></operator><literal type="number" pos:line="134" pos:column="35">1LL<pos:position pos:line="134" pos:column="38"/></literal><operator pos:line="134" pos:column="38">)<pos:position pos:line="134" pos:column="39"/></operator> <operator pos:line="134" pos:column="40">||<pos:position pos:line="134" pos:column="42"/></operator> <operator pos:line="134" pos:column="43">(<pos:position pos:line="134" pos:column="44"/></operator><name pos:line="134" pos:column="44">write_tme<pos:position pos:line="134" pos:column="53"/></name> <operator pos:line="134" pos:column="54">!=<pos:position pos:line="134" pos:column="56"/></operator> <operator pos:line="134" pos:column="57">-<pos:position pos:line="134" pos:column="58"/></operator><literal type="number" pos:line="134" pos:column="58">1LL<pos:position pos:line="134" pos:column="61"/></literal><operator pos:line="134" pos:column="61">)<pos:position pos:line="134" pos:column="62"/></operator></expr>)<pos:position pos:line="134" pos:column="63"/></condition><then pos:line="134" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="135" pos:column="25">disk_submit<pos:position pos:line="135" pos:column="36"/></name> <argument_list pos:line="135" pos:column="37">(<argument><expr><name pos:line="135" pos:column="38">disk_name<pos:position pos:line="135" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="49">"disk_time"<pos:position pos:line="135" pos:column="60"/></literal></expr></argument>,
					<argument><expr><name pos:line="136" pos:column="41">read_tme<pos:position pos:line="136" pos:column="49"/></name> <operator pos:line="136" pos:column="50">/<pos:position pos:line="136" pos:column="51"/></operator> <literal type="number" pos:line="136" pos:column="52">1000<pos:position pos:line="136" pos:column="56"/></literal></expr></argument>,
					<argument><expr><name pos:line="137" pos:column="41">write_tme<pos:position pos:line="137" pos:column="50"/></name> <operator pos:line="137" pos:column="51">/<pos:position pos:line="137" pos:column="52"/></operator> <literal type="number" pos:line="137" pos:column="53">1000<pos:position pos:line="137" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="59"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="139" pos:column="17">CFRelease<pos:position pos:line="139" pos:column="26"/></name> <argument_list pos:line="139" pos:column="27">(<argument><expr><name pos:line="139" pos:column="28">child_dict<pos:position pos:line="139" pos:column="38"/></name></expr></argument>)<pos:position pos:line="139" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="140" pos:column="17">IOObjectRelease<pos:position pos:line="140" pos:column="32"/></name> <argument_list pos:line="140" pos:column="33">(<argument><expr><name pos:line="140" pos:column="34">disk_child<pos:position pos:line="140" pos:column="44"/></name></expr></argument>)<pos:position pos:line="140" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="141" pos:column="17">CFRelease<pos:position pos:line="141" pos:column="26"/></name> <argument_list pos:line="141" pos:column="27">(<argument><expr><name pos:line="141" pos:column="28">props_dict<pos:position pos:line="141" pos:column="38"/></name></expr></argument>)<pos:position pos:line="141" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="142" pos:column="17">IOObjectRelease<pos:position pos:line="142" pos:column="32"/></name> <argument_list pos:line="142" pos:column="33">(<argument><expr><name pos:line="142" pos:column="34">disk<pos:position pos:line="142" pos:column="38"/></name></expr></argument>)<pos:position pos:line="142" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="143" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="144" pos:column="9">IOObjectRelease<pos:position pos:line="144" pos:column="24"/></name> <argument_list pos:line="144" pos:column="25">(<argument><expr><name pos:line="144" pos:column="26">disk_list<pos:position pos:line="144" pos:column="35"/></name></expr></argument>)<pos:position pos:line="144" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="37"/></expr_stmt>
<comment type="block" pos:line="145" pos:column="1">/* #endif HAVE_IOKIT_IOKITLIB_H */</comment>

<cpp:elif pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">elif<pos:position pos:line="147" pos:column="6"/></cpp:directive> <expr><name pos:line="147" pos:column="7">KERNEL_LINUX<pos:position pos:line="147" pos:column="19"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="148" pos:column="9">FILE<pos:position pos:line="148" pos:column="13"/></name> <modifier pos:line="148" pos:column="14">*<pos:position pos:line="148" pos:column="15"/></modifier></type><name pos:line="148" pos:column="15">fh<pos:position pos:line="148" pos:column="17"/></name></decl>;<pos:position pos:line="148" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="149" pos:column="9">char<pos:position pos:line="149" pos:column="13"/></name></type> <name><name pos:line="149" pos:column="14">buffer<pos:position pos:line="149" pos:column="20"/></name><index pos:line="149" pos:column="20">[<expr><literal type="number" pos:line="149" pos:column="21">1024<pos:position pos:line="149" pos:column="25"/></literal></expr>]<pos:position pos:line="149" pos:column="26"/></index></name></decl>;<pos:position pos:line="149" pos:column="27"/></decl_stmt>
	
	<decl_stmt><decl><type><name pos:line="151" pos:column="9">char<pos:position pos:line="151" pos:column="13"/></name> <modifier pos:line="151" pos:column="14">*<pos:position pos:line="151" pos:column="15"/></modifier></type><name><name pos:line="151" pos:column="15">fields<pos:position pos:line="151" pos:column="21"/></name><index pos:line="151" pos:column="21">[<expr><literal type="number" pos:line="151" pos:column="22">32<pos:position pos:line="151" pos:column="24"/></literal></expr>]<pos:position pos:line="151" pos:column="25"/></index></name></decl>;<pos:position pos:line="151" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="152" pos:column="9">int<pos:position pos:line="152" pos:column="12"/></name></type> <name pos:line="152" pos:column="13">numfields<pos:position pos:line="152" pos:column="22"/></name></decl>;<pos:position pos:line="152" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="153" pos:column="9">int<pos:position pos:line="153" pos:column="12"/></name></type> <name pos:line="153" pos:column="13">fieldshift<pos:position pos:line="153" pos:column="23"/></name> <init pos:line="153" pos:column="24">= <expr><literal type="number" pos:line="153" pos:column="26">0<pos:position pos:line="153" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="153" pos:column="28"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="155" pos:column="9">int<pos:position pos:line="155" pos:column="12"/></name></type> <name pos:line="155" pos:column="13">major<pos:position pos:line="155" pos:column="18"/></name> <init pos:line="155" pos:column="19">= <expr><literal type="number" pos:line="155" pos:column="21">0<pos:position pos:line="155" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="155" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="156" pos:column="9">int<pos:position pos:line="156" pos:column="12"/></name></type> <name pos:line="156" pos:column="13">minor<pos:position pos:line="156" pos:column="18"/></name> <init pos:line="156" pos:column="19">= <expr><literal type="number" pos:line="156" pos:column="21">0<pos:position pos:line="156" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="156" pos:column="23"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="158" pos:column="9">counter_t<pos:position pos:line="158" pos:column="18"/></name></type> <name pos:line="158" pos:column="19">read_sectors<pos:position pos:line="158" pos:column="31"/></name>  <init pos:line="158" pos:column="33">= <expr><literal type="number" pos:line="158" pos:column="35">0<pos:position pos:line="158" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="158" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="159" pos:column="9">counter_t<pos:position pos:line="159" pos:column="18"/></name></type> <name pos:line="159" pos:column="19">write_sectors<pos:position pos:line="159" pos:column="32"/></name> <init pos:line="159" pos:column="33">= <expr><literal type="number" pos:line="159" pos:column="35">0<pos:position pos:line="159" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="159" pos:column="37"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="161" pos:column="9">counter_t<pos:position pos:line="161" pos:column="18"/></name></type> <name pos:line="161" pos:column="19">read_ops<pos:position pos:line="161" pos:column="27"/></name>      <init pos:line="161" pos:column="33">= <expr><literal type="number" pos:line="161" pos:column="35">0<pos:position pos:line="161" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="161" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="162" pos:column="9">counter_t<pos:position pos:line="162" pos:column="18"/></name></type> <name pos:line="162" pos:column="19">read_merged<pos:position pos:line="162" pos:column="30"/></name>   <init pos:line="162" pos:column="33">= <expr><literal type="number" pos:line="162" pos:column="35">0<pos:position pos:line="162" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="162" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="163" pos:column="9">counter_t<pos:position pos:line="163" pos:column="18"/></name></type> <name pos:line="163" pos:column="19">read_time<pos:position pos:line="163" pos:column="28"/></name>     <init pos:line="163" pos:column="33">= <expr><literal type="number" pos:line="163" pos:column="35">0<pos:position pos:line="163" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="163" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="164" pos:column="9">counter_t<pos:position pos:line="164" pos:column="18"/></name></type> <name pos:line="164" pos:column="19">write_ops<pos:position pos:line="164" pos:column="28"/></name>     <init pos:line="164" pos:column="33">= <expr><literal type="number" pos:line="164" pos:column="35">0<pos:position pos:line="164" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="164" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="165" pos:column="9">counter_t<pos:position pos:line="165" pos:column="18"/></name></type> <name pos:line="165" pos:column="19">write_merged<pos:position pos:line="165" pos:column="31"/></name>  <init pos:line="165" pos:column="33">= <expr><literal type="number" pos:line="165" pos:column="35">0<pos:position pos:line="165" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="165" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="166" pos:column="9">counter_t<pos:position pos:line="166" pos:column="18"/></name></type> <name pos:line="166" pos:column="19">write_time<pos:position pos:line="166" pos:column="29"/></name>    <init pos:line="166" pos:column="33">= <expr><literal type="number" pos:line="166" pos:column="35">0<pos:position pos:line="166" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="166" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="167" pos:column="9">int<pos:position pos:line="167" pos:column="12"/></name></type> <name pos:line="167" pos:column="13">is_disk<pos:position pos:line="167" pos:column="20"/></name> <init pos:line="167" pos:column="21">= <expr><literal type="number" pos:line="167" pos:column="23">0<pos:position pos:line="167" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="167" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="169" pos:column="9">diskstats_t<pos:position pos:line="169" pos:column="20"/></name> <modifier pos:line="169" pos:column="21">*<pos:position pos:line="169" pos:column="22"/></modifier></type><name pos:line="169" pos:column="22">ds<pos:position pos:line="169" pos:column="24"/></name></decl>, <modifier pos:line="169" pos:column="26">*<pos:position pos:line="169" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="169" pos:column="27">pre_ds<pos:position pos:line="169" pos:column="33"/></name></decl>;<pos:position pos:line="169" pos:column="34"/></decl_stmt>

	<if pos:line="171" pos:column="9">if <condition pos:line="171" pos:column="12">(<expr><operator pos:line="171" pos:column="13">(<pos:position pos:line="171" pos:column="14"/></operator><name pos:line="171" pos:column="14">fh<pos:position pos:line="171" pos:column="16"/></name> <operator pos:line="171" pos:column="17">=<pos:position pos:line="171" pos:column="18"/></operator> <call><name pos:line="171" pos:column="19">fopen<pos:position pos:line="171" pos:column="24"/></name> <argument_list pos:line="171" pos:column="25">(<argument><expr><literal type="string" pos:line="171" pos:column="26">"/proc/diskstats"<pos:position pos:line="171" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="45">"r"<pos:position pos:line="171" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="49"/></argument_list></call><operator pos:line="171" pos:column="49">)<pos:position pos:line="171" pos:column="50"/></operator> <operator pos:line="171" pos:column="51">==<pos:position pos:line="171" pos:column="53"/></operator> <name pos:line="171" pos:column="54">NULL<pos:position pos:line="171" pos:column="58"/></name></expr>)<pos:position pos:line="171" pos:column="59"/></condition><then pos:line="171" pos:column="59">
	<block pos:line="172" pos:column="9">{
		<expr_stmt><expr><name pos:line="173" pos:column="17">fh<pos:position pos:line="173" pos:column="19"/></name> <operator pos:line="173" pos:column="20">=<pos:position pos:line="173" pos:column="21"/></operator> <call><name pos:line="173" pos:column="22">fopen<pos:position pos:line="173" pos:column="27"/></name> <argument_list pos:line="173" pos:column="28">(<argument><expr><literal type="string" pos:line="173" pos:column="29">"/proc/partitions"<pos:position pos:line="173" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="173" pos:column="49">"r"<pos:position pos:line="173" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="173" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="54"/></expr_stmt>
		<if pos:line="174" pos:column="17">if <condition pos:line="174" pos:column="20">(<expr><name pos:line="174" pos:column="21">fh<pos:position pos:line="174" pos:column="23"/></name> <operator pos:line="174" pos:column="24">==<pos:position pos:line="174" pos:column="26"/></operator> <name pos:line="174" pos:column="27">NULL<pos:position pos:line="174" pos:column="31"/></name></expr>)<pos:position pos:line="174" pos:column="32"/></condition><then pos:line="174" pos:column="32">
		<block pos:line="175" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="176" pos:column="25">ERROR<pos:position pos:line="176" pos:column="30"/></name> <argument_list pos:line="176" pos:column="31">(<argument><expr><literal type="string" pos:line="176" pos:column="32">"disk plugin: fopen (/proc/{diskstats,partitions}) failed."<pos:position pos:line="176" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="93"/></expr_stmt>
			<return pos:line="177" pos:column="25">return <expr><operator pos:line="177" pos:column="32">(<pos:position pos:line="177" pos:column="33"/></operator><operator pos:line="177" pos:column="33">-<pos:position pos:line="177" pos:column="34"/></operator><literal type="number" pos:line="177" pos:column="34">1<pos:position pos:line="177" pos:column="35"/></literal><operator pos:line="177" pos:column="35">)<pos:position pos:line="177" pos:column="36"/></operator></expr>;<pos:position pos:line="177" pos:column="37"/></return>
		}<pos:position pos:line="178" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="180" pos:column="17">/* Kernel is 2.4.* */</comment>
		<expr_stmt><expr><name pos:line="181" pos:column="17">fieldshift<pos:position pos:line="181" pos:column="27"/></name> <operator pos:line="181" pos:column="28">=<pos:position pos:line="181" pos:column="29"/></operator> <literal type="number" pos:line="181" pos:column="30">1<pos:position pos:line="181" pos:column="31"/></literal></expr>;<pos:position pos:line="181" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="182" pos:column="10"/></block></then></if>

	<while pos:line="184" pos:column="9">while <condition pos:line="184" pos:column="15">(<expr><call><name pos:line="184" pos:column="16">fgets<pos:position pos:line="184" pos:column="21"/></name> <argument_list pos:line="184" pos:column="22">(<argument><expr><name pos:line="184" pos:column="23">buffer<pos:position pos:line="184" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="184" pos:column="31">sizeof <argument_list pos:line="184" pos:column="38">(<argument><expr><name pos:line="184" pos:column="39">buffer<pos:position pos:line="184" pos:column="45"/></name></expr></argument>)<pos:position pos:line="184" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="184" pos:column="48">fh<pos:position pos:line="184" pos:column="50"/></name></expr></argument>)<pos:position pos:line="184" pos:column="51"/></argument_list></call> <operator pos:line="184" pos:column="52">!=<pos:position pos:line="184" pos:column="54"/></operator> <name pos:line="184" pos:column="55">NULL<pos:position pos:line="184" pos:column="59"/></name></expr>)<pos:position pos:line="184" pos:column="60"/></condition>
	<block pos:line="185" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="186" pos:column="17">char<pos:position pos:line="186" pos:column="21"/></name> <modifier pos:line="186" pos:column="22">*<pos:position pos:line="186" pos:column="23"/></modifier></type><name pos:line="186" pos:column="23">disk_name<pos:position pos:line="186" pos:column="32"/></name></decl>;<pos:position pos:line="186" pos:column="33"/></decl_stmt>

		<expr_stmt><expr><name pos:line="188" pos:column="17">numfields<pos:position pos:line="188" pos:column="26"/></name> <operator pos:line="188" pos:column="27">=<pos:position pos:line="188" pos:column="28"/></operator> <call><name pos:line="188" pos:column="29">strsplit<pos:position pos:line="188" pos:column="37"/></name> <argument_list pos:line="188" pos:column="38">(<argument><expr><name pos:line="188" pos:column="39">buffer<pos:position pos:line="188" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="47">fields<pos:position pos:line="188" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="188" pos:column="55">32<pos:position pos:line="188" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="59"/></expr_stmt>

		<if pos:line="190" pos:column="17">if <condition pos:line="190" pos:column="20">(<expr><operator pos:line="190" pos:column="21">(<pos:position pos:line="190" pos:column="22"/></operator><name pos:line="190" pos:column="22">numfields<pos:position pos:line="190" pos:column="31"/></name> <operator pos:line="190" pos:column="32">!=<pos:position pos:line="190" pos:column="34"/></operator> <operator pos:line="190" pos:column="35">(<pos:position pos:line="190" pos:column="36"/></operator><literal type="number" pos:line="190" pos:column="36">14<pos:position pos:line="190" pos:column="38"/></literal> <operator pos:line="190" pos:column="39">+<pos:position pos:line="190" pos:column="40"/></operator> <name pos:line="190" pos:column="41">fieldshift<pos:position pos:line="190" pos:column="51"/></name><operator pos:line="190" pos:column="51">)<pos:position pos:line="190" pos:column="52"/></operator><operator pos:line="190" pos:column="52">)<pos:position pos:line="190" pos:column="53"/></operator> <operator pos:line="190" pos:column="54">&amp;&amp;<pos:position pos:line="190" pos:column="64"/></operator> <operator pos:line="190" pos:column="57">(<pos:position pos:line="190" pos:column="58"/></operator><name pos:line="190" pos:column="58">numfields<pos:position pos:line="190" pos:column="67"/></name> <operator pos:line="190" pos:column="68">!=<pos:position pos:line="190" pos:column="70"/></operator> <literal type="number" pos:line="190" pos:column="71">7<pos:position pos:line="190" pos:column="72"/></literal><operator pos:line="190" pos:column="72">)<pos:position pos:line="190" pos:column="73"/></operator></expr>)<pos:position pos:line="190" pos:column="74"/></condition><then pos:line="190" pos:column="74">
			<block type="pseudo"><continue pos:line="191" pos:column="25">continue;<pos:position pos:line="191" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="193" pos:column="17">major<pos:position pos:line="193" pos:column="22"/></name> <operator pos:line="193" pos:column="23">=<pos:position pos:line="193" pos:column="24"/></operator> <call><name pos:line="193" pos:column="25">atoll<pos:position pos:line="193" pos:column="30"/></name> <argument_list pos:line="193" pos:column="31">(<argument><expr><name><name pos:line="193" pos:column="32">fields<pos:position pos:line="193" pos:column="38"/></name><index pos:line="193" pos:column="38">[<expr><literal type="number" pos:line="193" pos:column="39">0<pos:position pos:line="193" pos:column="40"/></literal></expr>]<pos:position pos:line="193" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="193" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="194" pos:column="17">minor<pos:position pos:line="194" pos:column="22"/></name> <operator pos:line="194" pos:column="23">=<pos:position pos:line="194" pos:column="24"/></operator> <call><name pos:line="194" pos:column="25">atoll<pos:position pos:line="194" pos:column="30"/></name> <argument_list pos:line="194" pos:column="31">(<argument><expr><name><name pos:line="194" pos:column="32">fields<pos:position pos:line="194" pos:column="38"/></name><index pos:line="194" pos:column="38">[<expr><literal type="number" pos:line="194" pos:column="39">1<pos:position pos:line="194" pos:column="40"/></literal></expr>]<pos:position pos:line="194" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="194" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="43"/></expr_stmt>

		<expr_stmt><expr><name pos:line="196" pos:column="17">disk_name<pos:position pos:line="196" pos:column="26"/></name> <operator pos:line="196" pos:column="27">=<pos:position pos:line="196" pos:column="28"/></operator> <name><name pos:line="196" pos:column="29">fields<pos:position pos:line="196" pos:column="35"/></name><index pos:line="196" pos:column="35">[<expr><literal type="number" pos:line="196" pos:column="36">2<pos:position pos:line="196" pos:column="37"/></literal> <operator pos:line="196" pos:column="38">+<pos:position pos:line="196" pos:column="39"/></operator> <name pos:line="196" pos:column="40">fieldshift<pos:position pos:line="196" pos:column="50"/></name></expr>]<pos:position pos:line="196" pos:column="51"/></index></name></expr>;<pos:position pos:line="196" pos:column="52"/></expr_stmt>

		<for pos:line="198" pos:column="17">for <control pos:line="198" pos:column="21">(<init><expr><name pos:line="198" pos:column="22">ds<pos:position pos:line="198" pos:column="24"/></name> <operator pos:line="198" pos:column="25">=<pos:position pos:line="198" pos:column="26"/></operator> <name pos:line="198" pos:column="27">disklist<pos:position pos:line="198" pos:column="35"/></name></expr><operator pos:line="198" pos:column="35">,<pos:position pos:line="198" pos:column="36"/></operator> <expr><name pos:line="198" pos:column="37">pre_ds<pos:position pos:line="198" pos:column="43"/></name> <operator pos:line="198" pos:column="44">=<pos:position pos:line="198" pos:column="45"/></operator> <name pos:line="198" pos:column="46">disklist<pos:position pos:line="198" pos:column="54"/></name></expr>;<pos:position pos:line="198" pos:column="55"/></init> <condition><expr><name pos:line="198" pos:column="56">ds<pos:position pos:line="198" pos:column="58"/></name> <operator pos:line="198" pos:column="59">!=<pos:position pos:line="198" pos:column="61"/></operator> <name pos:line="198" pos:column="62">NULL<pos:position pos:line="198" pos:column="66"/></name></expr>;<pos:position pos:line="198" pos:column="67"/></condition> <incr><expr><name pos:line="198" pos:column="68">pre_ds<pos:position pos:line="198" pos:column="74"/></name> <operator pos:line="198" pos:column="75">=<pos:position pos:line="198" pos:column="76"/></operator> <name pos:line="198" pos:column="77">ds<pos:position pos:line="198" pos:column="79"/></name></expr><operator pos:line="198" pos:column="79">,<pos:position pos:line="198" pos:column="80"/></operator> <expr><name pos:line="198" pos:column="81">ds<pos:position pos:line="198" pos:column="83"/></name> <operator pos:line="198" pos:column="84">=<pos:position pos:line="198" pos:column="85"/></operator> <name><name pos:line="198" pos:column="86">ds<pos:position pos:line="198" pos:column="88"/></name><operator pos:line="198" pos:column="88">-&gt;<pos:position pos:line="198" pos:column="93"/></operator><name pos:line="198" pos:column="90">next<pos:position pos:line="198" pos:column="94"/></name></name></expr></incr>)<pos:position pos:line="198" pos:column="95"/></control>
			<block type="pseudo"><if pos:line="199" pos:column="25">if <condition pos:line="199" pos:column="28">(<expr><call><name pos:line="199" pos:column="29">strcmp<pos:position pos:line="199" pos:column="35"/></name> <argument_list pos:line="199" pos:column="36">(<argument><expr><name pos:line="199" pos:column="37">disk_name<pos:position pos:line="199" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="199" pos:column="48">ds<pos:position pos:line="199" pos:column="50"/></name><operator pos:line="199" pos:column="50">-&gt;<pos:position pos:line="199" pos:column="55"/></operator><name pos:line="199" pos:column="52">name<pos:position pos:line="199" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="199" pos:column="57"/></argument_list></call> <operator pos:line="199" pos:column="58">==<pos:position pos:line="199" pos:column="60"/></operator> <literal type="number" pos:line="199" pos:column="61">0<pos:position pos:line="199" pos:column="62"/></literal></expr>)<pos:position pos:line="199" pos:column="63"/></condition><then pos:line="199" pos:column="63">
				<block type="pseudo"><break pos:line="200" pos:column="33">break;<pos:position pos:line="200" pos:column="39"/></break></block></then></if></block></for>

		<if pos:line="202" pos:column="17">if <condition pos:line="202" pos:column="20">(<expr><name pos:line="202" pos:column="21">ds<pos:position pos:line="202" pos:column="23"/></name> <operator pos:line="202" pos:column="24">==<pos:position pos:line="202" pos:column="26"/></operator> <name pos:line="202" pos:column="27">NULL<pos:position pos:line="202" pos:column="31"/></name></expr>)<pos:position pos:line="202" pos:column="32"/></condition><then pos:line="202" pos:column="32">
		<block pos:line="203" pos:column="17">{
			<if pos:line="204" pos:column="25">if <condition pos:line="204" pos:column="28">(<expr><operator pos:line="204" pos:column="29">(<pos:position pos:line="204" pos:column="30"/></operator><name pos:line="204" pos:column="30">ds<pos:position pos:line="204" pos:column="32"/></name> <operator pos:line="204" pos:column="33">=<pos:position pos:line="204" pos:column="34"/></operator> <operator pos:line="204" pos:column="35">(<pos:position pos:line="204" pos:column="36"/></operator><name pos:line="204" pos:column="36">diskstats_t<pos:position pos:line="204" pos:column="47"/></name> <operator pos:line="204" pos:column="48">*<pos:position pos:line="204" pos:column="49"/></operator><operator pos:line="204" pos:column="49">)<pos:position pos:line="204" pos:column="50"/></operator> <call><name pos:line="204" pos:column="51">calloc<pos:position pos:line="204" pos:column="57"/></name> <argument_list pos:line="204" pos:column="58">(<argument><expr><literal type="number" pos:line="204" pos:column="59">1<pos:position pos:line="204" pos:column="60"/></literal></expr></argument>, <argument><expr><sizeof pos:line="204" pos:column="62">sizeof <argument_list pos:line="204" pos:column="69">(<argument><expr><name pos:line="204" pos:column="70">diskstats_t<pos:position pos:line="204" pos:column="81"/></name></expr></argument>)<pos:position pos:line="204" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="204" pos:column="83"/></argument_list></call><operator pos:line="204" pos:column="83">)<pos:position pos:line="204" pos:column="84"/></operator> <operator pos:line="204" pos:column="85">==<pos:position pos:line="204" pos:column="87"/></operator> <name pos:line="204" pos:column="88">NULL<pos:position pos:line="204" pos:column="92"/></name></expr>)<pos:position pos:line="204" pos:column="93"/></condition><then pos:line="204" pos:column="93">
				<block type="pseudo"><continue pos:line="205" pos:column="33">continue;<pos:position pos:line="205" pos:column="42"/></continue></block></then></if>

			<if pos:line="207" pos:column="25">if <condition pos:line="207" pos:column="28">(<expr><operator pos:line="207" pos:column="29">(<pos:position pos:line="207" pos:column="30"/></operator><name><name pos:line="207" pos:column="30">ds<pos:position pos:line="207" pos:column="32"/></name><operator pos:line="207" pos:column="32">-&gt;<pos:position pos:line="207" pos:column="37"/></operator><name pos:line="207" pos:column="34">name<pos:position pos:line="207" pos:column="38"/></name></name> <operator pos:line="207" pos:column="39">=<pos:position pos:line="207" pos:column="40"/></operator> <call><name pos:line="207" pos:column="41">strdup<pos:position pos:line="207" pos:column="47"/></name> <argument_list pos:line="207" pos:column="48">(<argument><expr><name pos:line="207" pos:column="49">disk_name<pos:position pos:line="207" pos:column="58"/></name></expr></argument>)<pos:position pos:line="207" pos:column="59"/></argument_list></call><operator pos:line="207" pos:column="59">)<pos:position pos:line="207" pos:column="60"/></operator> <operator pos:line="207" pos:column="61">==<pos:position pos:line="207" pos:column="63"/></operator> <name pos:line="207" pos:column="64">NULL<pos:position pos:line="207" pos:column="68"/></name></expr>)<pos:position pos:line="207" pos:column="69"/></condition><then pos:line="207" pos:column="69">
			<block pos:line="208" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="209" pos:column="33">free<pos:position pos:line="209" pos:column="37"/></name> <argument_list pos:line="209" pos:column="38">(<argument><expr><name pos:line="209" pos:column="39">ds<pos:position pos:line="209" pos:column="41"/></name></expr></argument>)<pos:position pos:line="209" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="43"/></expr_stmt>
				<continue pos:line="210" pos:column="33">continue;<pos:position pos:line="210" pos:column="42"/></continue>
			}<pos:position pos:line="211" pos:column="26"/></block></then></if>

			<if pos:line="213" pos:column="25">if <condition pos:line="213" pos:column="28">(<expr><name pos:line="213" pos:column="29">pre_ds<pos:position pos:line="213" pos:column="35"/></name> <operator pos:line="213" pos:column="36">==<pos:position pos:line="213" pos:column="38"/></operator> <name pos:line="213" pos:column="39">NULL<pos:position pos:line="213" pos:column="43"/></name></expr>)<pos:position pos:line="213" pos:column="44"/></condition><then pos:line="213" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><name pos:line="214" pos:column="33">disklist<pos:position pos:line="214" pos:column="41"/></name> <operator pos:line="214" pos:column="42">=<pos:position pos:line="214" pos:column="43"/></operator> <name pos:line="214" pos:column="44">ds<pos:position pos:line="214" pos:column="46"/></name></expr>;<pos:position pos:line="214" pos:column="47"/></expr_stmt></block></then>
			<else pos:line="215" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="216" pos:column="33">pre_ds<pos:position pos:line="216" pos:column="39"/></name><operator pos:line="216" pos:column="39">-&gt;<pos:position pos:line="216" pos:column="44"/></operator><name pos:line="216" pos:column="41">next<pos:position pos:line="216" pos:column="45"/></name></name> <operator pos:line="216" pos:column="46">=<pos:position pos:line="216" pos:column="47"/></operator> <name pos:line="216" pos:column="48">ds<pos:position pos:line="216" pos:column="50"/></name></expr>;<pos:position pos:line="216" pos:column="51"/></expr_stmt></block></else></if>
		}<pos:position pos:line="217" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="219" pos:column="17">is_disk<pos:position pos:line="219" pos:column="24"/></name> <operator pos:line="219" pos:column="25">=<pos:position pos:line="219" pos:column="26"/></operator> <literal type="number" pos:line="219" pos:column="27">0<pos:position pos:line="219" pos:column="28"/></literal></expr>;<pos:position pos:line="219" pos:column="29"/></expr_stmt>
		<if pos:line="220" pos:column="17">if <condition pos:line="220" pos:column="20">(<expr><name pos:line="220" pos:column="21">numfields<pos:position pos:line="220" pos:column="30"/></name> <operator pos:line="220" pos:column="31">==<pos:position pos:line="220" pos:column="33"/></operator> <literal type="number" pos:line="220" pos:column="34">7<pos:position pos:line="220" pos:column="35"/></literal></expr>)<pos:position pos:line="220" pos:column="36"/></condition><then pos:line="220" pos:column="36">
		<block pos:line="221" pos:column="17">{
			<comment type="block" pos:line="222" pos:column="25">/* Kernel 2.6, Partition */</comment>
			<expr_stmt><expr><name pos:line="223" pos:column="25">read_ops<pos:position pos:line="223" pos:column="33"/></name>      <operator pos:line="223" pos:column="39">=<pos:position pos:line="223" pos:column="40"/></operator> <call><name pos:line="223" pos:column="41">atoll<pos:position pos:line="223" pos:column="46"/></name> <argument_list pos:line="223" pos:column="47">(<argument><expr><name><name pos:line="223" pos:column="48">fields<pos:position pos:line="223" pos:column="54"/></name><index pos:line="223" pos:column="54">[<expr><literal type="number" pos:line="223" pos:column="55">3<pos:position pos:line="223" pos:column="56"/></literal></expr>]<pos:position pos:line="223" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="223" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name pos:line="224" pos:column="25">read_sectors<pos:position pos:line="224" pos:column="37"/></name>  <operator pos:line="224" pos:column="39">=<pos:position pos:line="224" pos:column="40"/></operator> <call><name pos:line="224" pos:column="41">atoll<pos:position pos:line="224" pos:column="46"/></name> <argument_list pos:line="224" pos:column="47">(<argument><expr><name><name pos:line="224" pos:column="48">fields<pos:position pos:line="224" pos:column="54"/></name><index pos:line="224" pos:column="54">[<expr><literal type="number" pos:line="224" pos:column="55">4<pos:position pos:line="224" pos:column="56"/></literal></expr>]<pos:position pos:line="224" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="224" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name pos:line="225" pos:column="25">write_ops<pos:position pos:line="225" pos:column="34"/></name>     <operator pos:line="225" pos:column="39">=<pos:position pos:line="225" pos:column="40"/></operator> <call><name pos:line="225" pos:column="41">atoll<pos:position pos:line="225" pos:column="46"/></name> <argument_list pos:line="225" pos:column="47">(<argument><expr><name><name pos:line="225" pos:column="48">fields<pos:position pos:line="225" pos:column="54"/></name><index pos:line="225" pos:column="54">[<expr><literal type="number" pos:line="225" pos:column="55">5<pos:position pos:line="225" pos:column="56"/></literal></expr>]<pos:position pos:line="225" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="225" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name pos:line="226" pos:column="25">write_sectors<pos:position pos:line="226" pos:column="38"/></name> <operator pos:line="226" pos:column="39">=<pos:position pos:line="226" pos:column="40"/></operator> <call><name pos:line="226" pos:column="41">atoll<pos:position pos:line="226" pos:column="46"/></name> <argument_list pos:line="226" pos:column="47">(<argument><expr><name><name pos:line="226" pos:column="48">fields<pos:position pos:line="226" pos:column="54"/></name><index pos:line="226" pos:column="54">[<expr><literal type="number" pos:line="226" pos:column="55">6<pos:position pos:line="226" pos:column="56"/></literal></expr>]<pos:position pos:line="226" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="226" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="227" pos:column="18"/></block></then>
		<elseif pos:line="228" pos:column="17">else <if pos:line="228" pos:column="22">if <condition pos:line="228" pos:column="25">(<expr><name pos:line="228" pos:column="26">numfields<pos:position pos:line="228" pos:column="35"/></name> <operator pos:line="228" pos:column="36">==<pos:position pos:line="228" pos:column="38"/></operator> <operator pos:line="228" pos:column="39">(<pos:position pos:line="228" pos:column="40"/></operator><literal type="number" pos:line="228" pos:column="40">14<pos:position pos:line="228" pos:column="42"/></literal> <operator pos:line="228" pos:column="43">+<pos:position pos:line="228" pos:column="44"/></operator> <name pos:line="228" pos:column="45">fieldshift<pos:position pos:line="228" pos:column="55"/></name><operator pos:line="228" pos:column="55">)<pos:position pos:line="228" pos:column="56"/></operator></expr>)<pos:position pos:line="228" pos:column="57"/></condition><then pos:line="228" pos:column="57">
		<block pos:line="229" pos:column="17">{
			<expr_stmt><expr><name pos:line="230" pos:column="25">read_ops<pos:position pos:line="230" pos:column="33"/></name>  <operator pos:line="230" pos:column="35">=<pos:position pos:line="230" pos:column="36"/></operator>  <call><name pos:line="230" pos:column="38">atoll<pos:position pos:line="230" pos:column="43"/></name> <argument_list pos:line="230" pos:column="44">(<argument><expr><name><name pos:line="230" pos:column="45">fields<pos:position pos:line="230" pos:column="51"/></name><index pos:line="230" pos:column="51">[<expr><literal type="number" pos:line="230" pos:column="52">3<pos:position pos:line="230" pos:column="53"/></literal> <operator pos:line="230" pos:column="54">+<pos:position pos:line="230" pos:column="55"/></operator> <name pos:line="230" pos:column="56">fieldshift<pos:position pos:line="230" pos:column="66"/></name></expr>]<pos:position pos:line="230" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="230" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><name pos:line="231" pos:column="25">write_ops<pos:position pos:line="231" pos:column="34"/></name> <operator pos:line="231" pos:column="35">=<pos:position pos:line="231" pos:column="36"/></operator>  <call><name pos:line="231" pos:column="38">atoll<pos:position pos:line="231" pos:column="43"/></name> <argument_list pos:line="231" pos:column="44">(<argument><expr><name><name pos:line="231" pos:column="45">fields<pos:position pos:line="231" pos:column="51"/></name><index pos:line="231" pos:column="51">[<expr><literal type="number" pos:line="231" pos:column="52">7<pos:position pos:line="231" pos:column="53"/></literal> <operator pos:line="231" pos:column="54">+<pos:position pos:line="231" pos:column="55"/></operator> <name pos:line="231" pos:column="56">fieldshift<pos:position pos:line="231" pos:column="66"/></name></expr>]<pos:position pos:line="231" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="231" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="69"/></expr_stmt>

			<expr_stmt><expr><name pos:line="233" pos:column="25">read_sectors<pos:position pos:line="233" pos:column="37"/></name>  <operator pos:line="233" pos:column="39">=<pos:position pos:line="233" pos:column="40"/></operator> <call><name pos:line="233" pos:column="41">atoll<pos:position pos:line="233" pos:column="46"/></name> <argument_list pos:line="233" pos:column="47">(<argument><expr><name><name pos:line="233" pos:column="48">fields<pos:position pos:line="233" pos:column="54"/></name><index pos:line="233" pos:column="54">[<expr><literal type="number" pos:line="233" pos:column="55">5<pos:position pos:line="233" pos:column="56"/></literal> <operator pos:line="233" pos:column="57">+<pos:position pos:line="233" pos:column="58"/></operator> <name pos:line="233" pos:column="59">fieldshift<pos:position pos:line="233" pos:column="69"/></name></expr>]<pos:position pos:line="233" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="233" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><name pos:line="234" pos:column="25">write_sectors<pos:position pos:line="234" pos:column="38"/></name> <operator pos:line="234" pos:column="39">=<pos:position pos:line="234" pos:column="40"/></operator> <call><name pos:line="234" pos:column="41">atoll<pos:position pos:line="234" pos:column="46"/></name> <argument_list pos:line="234" pos:column="47">(<argument><expr><name><name pos:line="234" pos:column="48">fields<pos:position pos:line="234" pos:column="54"/></name><index pos:line="234" pos:column="54">[<expr><literal type="number" pos:line="234" pos:column="55">9<pos:position pos:line="234" pos:column="56"/></literal> <operator pos:line="234" pos:column="57">+<pos:position pos:line="234" pos:column="58"/></operator> <name pos:line="234" pos:column="59">fieldshift<pos:position pos:line="234" pos:column="69"/></name></expr>]<pos:position pos:line="234" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="234" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="72"/></expr_stmt>

			<if pos:line="236" pos:column="25">if <condition pos:line="236" pos:column="28">(<expr><operator pos:line="236" pos:column="29">(<pos:position pos:line="236" pos:column="30"/></operator><name pos:line="236" pos:column="30">fieldshift<pos:position pos:line="236" pos:column="40"/></name> <operator pos:line="236" pos:column="41">==<pos:position pos:line="236" pos:column="43"/></operator> <literal type="number" pos:line="236" pos:column="44">0<pos:position pos:line="236" pos:column="45"/></literal><operator pos:line="236" pos:column="45">)<pos:position pos:line="236" pos:column="46"/></operator> <operator pos:line="236" pos:column="47">||<pos:position pos:line="236" pos:column="49"/></operator> <operator pos:line="236" pos:column="50">(<pos:position pos:line="236" pos:column="51"/></operator><name pos:line="236" pos:column="51">minor<pos:position pos:line="236" pos:column="56"/></name> <operator pos:line="236" pos:column="57">==<pos:position pos:line="236" pos:column="59"/></operator> <literal type="number" pos:line="236" pos:column="60">0<pos:position pos:line="236" pos:column="61"/></literal><operator pos:line="236" pos:column="61">)<pos:position pos:line="236" pos:column="62"/></operator></expr>)<pos:position pos:line="236" pos:column="63"/></condition><then pos:line="236" pos:column="63">
			<block pos:line="237" pos:column="25">{
				<expr_stmt><expr><name pos:line="238" pos:column="33">is_disk<pos:position pos:line="238" pos:column="40"/></name> <operator pos:line="238" pos:column="41">=<pos:position pos:line="238" pos:column="42"/></operator> <literal type="number" pos:line="238" pos:column="43">1<pos:position pos:line="238" pos:column="44"/></literal></expr>;<pos:position pos:line="238" pos:column="45"/></expr_stmt>
				<expr_stmt><expr><name pos:line="239" pos:column="33">read_merged<pos:position pos:line="239" pos:column="44"/></name>  <operator pos:line="239" pos:column="46">=<pos:position pos:line="239" pos:column="47"/></operator> <call><name pos:line="239" pos:column="48">atoll<pos:position pos:line="239" pos:column="53"/></name> <argument_list pos:line="239" pos:column="54">(<argument><expr><name><name pos:line="239" pos:column="55">fields<pos:position pos:line="239" pos:column="61"/></name><index pos:line="239" pos:column="61">[<expr><literal type="number" pos:line="239" pos:column="62">4<pos:position pos:line="239" pos:column="63"/></literal> <operator pos:line="239" pos:column="64">+<pos:position pos:line="239" pos:column="65"/></operator> <name pos:line="239" pos:column="66">fieldshift<pos:position pos:line="239" pos:column="76"/></name></expr>]<pos:position pos:line="239" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="239" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="79"/></expr_stmt>
				<expr_stmt><expr><name pos:line="240" pos:column="33">read_time<pos:position pos:line="240" pos:column="42"/></name>    <operator pos:line="240" pos:column="46">=<pos:position pos:line="240" pos:column="47"/></operator> <call><name pos:line="240" pos:column="48">atoll<pos:position pos:line="240" pos:column="53"/></name> <argument_list pos:line="240" pos:column="54">(<argument><expr><name><name pos:line="240" pos:column="55">fields<pos:position pos:line="240" pos:column="61"/></name><index pos:line="240" pos:column="61">[<expr><literal type="number" pos:line="240" pos:column="62">6<pos:position pos:line="240" pos:column="63"/></literal> <operator pos:line="240" pos:column="64">+<pos:position pos:line="240" pos:column="65"/></operator> <name pos:line="240" pos:column="66">fieldshift<pos:position pos:line="240" pos:column="76"/></name></expr>]<pos:position pos:line="240" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="240" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="79"/></expr_stmt>
				<expr_stmt><expr><name pos:line="241" pos:column="33">write_merged<pos:position pos:line="241" pos:column="45"/></name> <operator pos:line="241" pos:column="46">=<pos:position pos:line="241" pos:column="47"/></operator> <call><name pos:line="241" pos:column="48">atoll<pos:position pos:line="241" pos:column="53"/></name> <argument_list pos:line="241" pos:column="54">(<argument><expr><name><name pos:line="241" pos:column="55">fields<pos:position pos:line="241" pos:column="61"/></name><index pos:line="241" pos:column="61">[<expr><literal type="number" pos:line="241" pos:column="62">8<pos:position pos:line="241" pos:column="63"/></literal> <operator pos:line="241" pos:column="64">+<pos:position pos:line="241" pos:column="65"/></operator> <name pos:line="241" pos:column="66">fieldshift<pos:position pos:line="241" pos:column="76"/></name></expr>]<pos:position pos:line="241" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="241" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="79"/></expr_stmt>
				<expr_stmt><expr><name pos:line="242" pos:column="33">write_time<pos:position pos:line="242" pos:column="43"/></name>   <operator pos:line="242" pos:column="46">=<pos:position pos:line="242" pos:column="47"/></operator> <call><name pos:line="242" pos:column="48">atoll<pos:position pos:line="242" pos:column="53"/></name> <argument_list pos:line="242" pos:column="54">(<argument><expr><name><name pos:line="242" pos:column="55">fields<pos:position pos:line="242" pos:column="61"/></name><index pos:line="242" pos:column="61">[<expr><literal type="number" pos:line="242" pos:column="62">10<pos:position pos:line="242" pos:column="64"/></literal><operator pos:line="242" pos:column="64">+<pos:position pos:line="242" pos:column="65"/></operator> <name pos:line="242" pos:column="66">fieldshift<pos:position pos:line="242" pos:column="76"/></name></expr>]<pos:position pos:line="242" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="242" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="79"/></expr_stmt>
			}<pos:position pos:line="243" pos:column="26"/></block></then></if>
		}<pos:position pos:line="244" pos:column="18"/></block></then></if></elseif>
		<else pos:line="245" pos:column="17">else
		<block pos:line="246" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="247" pos:column="25">DEBUG<pos:position pos:line="247" pos:column="30"/></name> <argument_list pos:line="247" pos:column="31">(<argument><expr><literal type="string" pos:line="247" pos:column="32">"numfields = %i; =&gt; unknown file format."<pos:position pos:line="247" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="247" pos:column="75">numfields<pos:position pos:line="247" pos:column="84"/></name></expr></argument>)<pos:position pos:line="247" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="86"/></expr_stmt>
			<continue pos:line="248" pos:column="25">continue;<pos:position pos:line="248" pos:column="34"/></continue>
		}<pos:position pos:line="249" pos:column="18"/></block></else></if>

		<block pos:line="251" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="252" pos:column="25">counter_t<pos:position pos:line="252" pos:column="34"/></name></type> <name pos:line="252" pos:column="35">diff_read_sectors<pos:position pos:line="252" pos:column="52"/></name></decl>;<pos:position pos:line="252" pos:column="53"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="253" pos:column="25">counter_t<pos:position pos:line="253" pos:column="34"/></name></type> <name pos:line="253" pos:column="35">diff_write_sectors<pos:position pos:line="253" pos:column="53"/></name></decl>;<pos:position pos:line="253" pos:column="54"/></decl_stmt>

		<comment type="block" pos:line="255" pos:column="17">/* If the counter wraps around, it's only 32 bits.. */</comment>
			<if pos:line="256" pos:column="25">if <condition pos:line="256" pos:column="28">(<expr><name pos:line="256" pos:column="29">read_sectors<pos:position pos:line="256" pos:column="41"/></name> <operator pos:line="256" pos:column="42">&lt;<pos:position pos:line="256" pos:column="46"/></operator> <name><name pos:line="256" pos:column="44">ds<pos:position pos:line="256" pos:column="46"/></name><operator pos:line="256" pos:column="46">-&gt;<pos:position pos:line="256" pos:column="51"/></operator><name pos:line="256" pos:column="48">read_sectors<pos:position pos:line="256" pos:column="60"/></name></name></expr>)<pos:position pos:line="256" pos:column="61"/></condition><then pos:line="256" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><name pos:line="257" pos:column="33">diff_read_sectors<pos:position pos:line="257" pos:column="50"/></name> <operator pos:line="257" pos:column="51">=<pos:position pos:line="257" pos:column="52"/></operator> <literal type="number" pos:line="257" pos:column="53">1<pos:position pos:line="257" pos:column="54"/></literal> <operator pos:line="257" pos:column="55">+<pos:position pos:line="257" pos:column="56"/></operator> <name pos:line="257" pos:column="57">read_sectors<pos:position pos:line="257" pos:column="69"/></name>
					<operator pos:line="258" pos:column="41">+<pos:position pos:line="258" pos:column="42"/></operator> <operator pos:line="258" pos:column="43">(<pos:position pos:line="258" pos:column="44"/></operator><name pos:line="258" pos:column="44">UINT_MAX<pos:position pos:line="258" pos:column="52"/></name> <operator pos:line="258" pos:column="53">-<pos:position pos:line="258" pos:column="54"/></operator> <name><name pos:line="258" pos:column="55">ds<pos:position pos:line="258" pos:column="57"/></name><operator pos:line="258" pos:column="57">-&gt;<pos:position pos:line="258" pos:column="62"/></operator><name pos:line="258" pos:column="59">read_sectors<pos:position pos:line="258" pos:column="71"/></name></name><operator pos:line="258" pos:column="71">)<pos:position pos:line="258" pos:column="72"/></operator></expr>;<pos:position pos:line="258" pos:column="73"/></expr_stmt></block></then>
			<else pos:line="259" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="260" pos:column="33">diff_read_sectors<pos:position pos:line="260" pos:column="50"/></name> <operator pos:line="260" pos:column="51">=<pos:position pos:line="260" pos:column="52"/></operator> <name pos:line="260" pos:column="53">read_sectors<pos:position pos:line="260" pos:column="65"/></name> <operator pos:line="260" pos:column="66">-<pos:position pos:line="260" pos:column="67"/></operator> <name><name pos:line="260" pos:column="68">ds<pos:position pos:line="260" pos:column="70"/></name><operator pos:line="260" pos:column="70">-&gt;<pos:position pos:line="260" pos:column="75"/></operator><name pos:line="260" pos:column="72">read_sectors<pos:position pos:line="260" pos:column="84"/></name></name></expr>;<pos:position pos:line="260" pos:column="85"/></expr_stmt></block></else></if>
			<if pos:line="261" pos:column="25">if <condition pos:line="261" pos:column="28">(<expr><name pos:line="261" pos:column="29">write_sectors<pos:position pos:line="261" pos:column="42"/></name> <operator pos:line="261" pos:column="43">&lt;<pos:position pos:line="261" pos:column="47"/></operator> <name><name pos:line="261" pos:column="45">ds<pos:position pos:line="261" pos:column="47"/></name><operator pos:line="261" pos:column="47">-&gt;<pos:position pos:line="261" pos:column="52"/></operator><name pos:line="261" pos:column="49">write_sectors<pos:position pos:line="261" pos:column="62"/></name></name></expr>)<pos:position pos:line="261" pos:column="63"/></condition><then pos:line="261" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><name pos:line="262" pos:column="33">diff_write_sectors<pos:position pos:line="262" pos:column="51"/></name> <operator pos:line="262" pos:column="52">=<pos:position pos:line="262" pos:column="53"/></operator> <literal type="number" pos:line="262" pos:column="54">1<pos:position pos:line="262" pos:column="55"/></literal> <operator pos:line="262" pos:column="56">+<pos:position pos:line="262" pos:column="57"/></operator> <name pos:line="262" pos:column="58">write_sectors<pos:position pos:line="262" pos:column="71"/></name>
					<operator pos:line="263" pos:column="41">+<pos:position pos:line="263" pos:column="42"/></operator> <operator pos:line="263" pos:column="43">(<pos:position pos:line="263" pos:column="44"/></operator><name pos:line="263" pos:column="44">UINT_MAX<pos:position pos:line="263" pos:column="52"/></name> <operator pos:line="263" pos:column="53">-<pos:position pos:line="263" pos:column="54"/></operator> <name><name pos:line="263" pos:column="55">ds<pos:position pos:line="263" pos:column="57"/></name><operator pos:line="263" pos:column="57">-&gt;<pos:position pos:line="263" pos:column="62"/></operator><name pos:line="263" pos:column="59">write_sectors<pos:position pos:line="263" pos:column="72"/></name></name><operator pos:line="263" pos:column="72">)<pos:position pos:line="263" pos:column="73"/></operator></expr>;<pos:position pos:line="263" pos:column="74"/></expr_stmt></block></then>
			<else pos:line="264" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="265" pos:column="33">diff_write_sectors<pos:position pos:line="265" pos:column="51"/></name> <operator pos:line="265" pos:column="52">=<pos:position pos:line="265" pos:column="53"/></operator> <name pos:line="265" pos:column="54">write_sectors<pos:position pos:line="265" pos:column="67"/></name> <operator pos:line="265" pos:column="68">-<pos:position pos:line="265" pos:column="69"/></operator> <name><name pos:line="265" pos:column="70">ds<pos:position pos:line="265" pos:column="72"/></name><operator pos:line="265" pos:column="72">-&gt;<pos:position pos:line="265" pos:column="77"/></operator><name pos:line="265" pos:column="74">write_sectors<pos:position pos:line="265" pos:column="87"/></name></name></expr>;<pos:position pos:line="265" pos:column="88"/></expr_stmt></block></else></if>

			<expr_stmt><expr><name><name pos:line="267" pos:column="25">ds<pos:position pos:line="267" pos:column="27"/></name><operator pos:line="267" pos:column="27">-&gt;<pos:position pos:line="267" pos:column="32"/></operator><name pos:line="267" pos:column="29">read_bytes<pos:position pos:line="267" pos:column="39"/></name></name> <operator pos:line="267" pos:column="40">+=<pos:position pos:line="267" pos:column="42"/></operator> <literal type="number" pos:line="267" pos:column="43">512<pos:position pos:line="267" pos:column="46"/></literal> <operator pos:line="267" pos:column="47">*<pos:position pos:line="267" pos:column="48"/></operator> <name pos:line="267" pos:column="49">diff_read_sectors<pos:position pos:line="267" pos:column="66"/></name></expr>;<pos:position pos:line="267" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="268" pos:column="25">ds<pos:position pos:line="268" pos:column="27"/></name><operator pos:line="268" pos:column="27">-&gt;<pos:position pos:line="268" pos:column="32"/></operator><name pos:line="268" pos:column="29">write_bytes<pos:position pos:line="268" pos:column="40"/></name></name> <operator pos:line="268" pos:column="41">+=<pos:position pos:line="268" pos:column="43"/></operator> <literal type="number" pos:line="268" pos:column="44">512<pos:position pos:line="268" pos:column="47"/></literal> <operator pos:line="268" pos:column="48">*<pos:position pos:line="268" pos:column="49"/></operator> <name pos:line="268" pos:column="50">diff_write_sectors<pos:position pos:line="268" pos:column="68"/></name></expr>;<pos:position pos:line="268" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="269" pos:column="25">ds<pos:position pos:line="269" pos:column="27"/></name><operator pos:line="269" pos:column="27">-&gt;<pos:position pos:line="269" pos:column="32"/></operator><name pos:line="269" pos:column="29">read_sectors<pos:position pos:line="269" pos:column="41"/></name></name> <operator pos:line="269" pos:column="42">=<pos:position pos:line="269" pos:column="43"/></operator> <name pos:line="269" pos:column="44">read_sectors<pos:position pos:line="269" pos:column="56"/></name></expr>;<pos:position pos:line="269" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="270" pos:column="25">ds<pos:position pos:line="270" pos:column="27"/></name><operator pos:line="270" pos:column="27">-&gt;<pos:position pos:line="270" pos:column="32"/></operator><name pos:line="270" pos:column="29">write_sectors<pos:position pos:line="270" pos:column="42"/></name></name> <operator pos:line="270" pos:column="43">=<pos:position pos:line="270" pos:column="44"/></operator> <name pos:line="270" pos:column="45">write_sectors<pos:position pos:line="270" pos:column="58"/></name></expr>;<pos:position pos:line="270" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="271" pos:column="18"/></block>

		<comment type="block" pos:line="273" pos:column="17">/* Calculate the average time an io-op needs to complete */</comment>
		<if pos:line="274" pos:column="17">if <condition pos:line="274" pos:column="20">(<expr><name pos:line="274" pos:column="21">is_disk<pos:position pos:line="274" pos:column="28"/></name></expr>)<pos:position pos:line="274" pos:column="29"/></condition><then pos:line="274" pos:column="29">
		<block pos:line="275" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="276" pos:column="25">counter_t<pos:position pos:line="276" pos:column="34"/></name></type> <name pos:line="276" pos:column="35">diff_read_ops<pos:position pos:line="276" pos:column="48"/></name></decl>;<pos:position pos:line="276" pos:column="49"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="277" pos:column="25">counter_t<pos:position pos:line="277" pos:column="34"/></name></type> <name pos:line="277" pos:column="35">diff_write_ops<pos:position pos:line="277" pos:column="49"/></name></decl>;<pos:position pos:line="277" pos:column="50"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="278" pos:column="25">counter_t<pos:position pos:line="278" pos:column="34"/></name></type> <name pos:line="278" pos:column="35">diff_read_time<pos:position pos:line="278" pos:column="49"/></name></decl>;<pos:position pos:line="278" pos:column="50"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="279" pos:column="25">counter_t<pos:position pos:line="279" pos:column="34"/></name></type> <name pos:line="279" pos:column="35">diff_write_time<pos:position pos:line="279" pos:column="50"/></name></decl>;<pos:position pos:line="279" pos:column="51"/></decl_stmt>

			<if pos:line="281" pos:column="25">if <condition pos:line="281" pos:column="28">(<expr><name pos:line="281" pos:column="29">read_ops<pos:position pos:line="281" pos:column="37"/></name> <operator pos:line="281" pos:column="38">&lt;<pos:position pos:line="281" pos:column="42"/></operator> <name><name pos:line="281" pos:column="40">ds<pos:position pos:line="281" pos:column="42"/></name><operator pos:line="281" pos:column="42">-&gt;<pos:position pos:line="281" pos:column="47"/></operator><name pos:line="281" pos:column="44">read_ops<pos:position pos:line="281" pos:column="52"/></name></name></expr>)<pos:position pos:line="281" pos:column="53"/></condition><then pos:line="281" pos:column="53">
				<block type="pseudo"><expr_stmt><expr><name pos:line="282" pos:column="33">diff_read_ops<pos:position pos:line="282" pos:column="46"/></name> <operator pos:line="282" pos:column="47">=<pos:position pos:line="282" pos:column="48"/></operator> <literal type="number" pos:line="282" pos:column="49">1<pos:position pos:line="282" pos:column="50"/></literal> <operator pos:line="282" pos:column="51">+<pos:position pos:line="282" pos:column="52"/></operator> <name pos:line="282" pos:column="53">read_ops<pos:position pos:line="282" pos:column="61"/></name>
					<operator pos:line="283" pos:column="41">+<pos:position pos:line="283" pos:column="42"/></operator> <operator pos:line="283" pos:column="43">(<pos:position pos:line="283" pos:column="44"/></operator><name pos:line="283" pos:column="44">UINT_MAX<pos:position pos:line="283" pos:column="52"/></name> <operator pos:line="283" pos:column="53">-<pos:position pos:line="283" pos:column="54"/></operator> <name><name pos:line="283" pos:column="55">ds<pos:position pos:line="283" pos:column="57"/></name><operator pos:line="283" pos:column="57">-&gt;<pos:position pos:line="283" pos:column="62"/></operator><name pos:line="283" pos:column="59">read_ops<pos:position pos:line="283" pos:column="67"/></name></name><operator pos:line="283" pos:column="67">)<pos:position pos:line="283" pos:column="68"/></operator></expr>;<pos:position pos:line="283" pos:column="69"/></expr_stmt></block></then>
			<else pos:line="284" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="285" pos:column="33">diff_read_ops<pos:position pos:line="285" pos:column="46"/></name> <operator pos:line="285" pos:column="47">=<pos:position pos:line="285" pos:column="48"/></operator> <name pos:line="285" pos:column="49">read_ops<pos:position pos:line="285" pos:column="57"/></name> <operator pos:line="285" pos:column="58">-<pos:position pos:line="285" pos:column="59"/></operator> <name><name pos:line="285" pos:column="60">ds<pos:position pos:line="285" pos:column="62"/></name><operator pos:line="285" pos:column="62">-&gt;<pos:position pos:line="285" pos:column="67"/></operator><name pos:line="285" pos:column="64">read_ops<pos:position pos:line="285" pos:column="72"/></name></name></expr>;<pos:position pos:line="285" pos:column="73"/></expr_stmt></block></else></if>
			<expr_stmt><expr><call><name pos:line="286" pos:column="25">DEBUG<pos:position pos:line="286" pos:column="30"/></name> <argument_list pos:line="286" pos:column="31">(<argument><expr><literal type="string" pos:line="286" pos:column="32">"disk plugin: disk_name = %s; read_ops = %llu; "<pos:position pos:line="286" pos:column="80"/></literal>
					<literal type="string" pos:line="287" pos:column="41">"ds-&gt;read_ops = %llu; diff_read_ops = %llu;"<pos:position pos:line="287" pos:column="88"/></literal></expr></argument>,
					<argument><expr><name pos:line="288" pos:column="41">disk_name<pos:position pos:line="288" pos:column="50"/></name></expr></argument>,
					<argument><expr><name pos:line="289" pos:column="41">read_ops<pos:position pos:line="289" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="289" pos:column="51">ds<pos:position pos:line="289" pos:column="53"/></name><operator pos:line="289" pos:column="53">-&gt;<pos:position pos:line="289" pos:column="58"/></operator><name pos:line="289" pos:column="55">read_ops<pos:position pos:line="289" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="289" pos:column="65">diff_read_ops<pos:position pos:line="289" pos:column="78"/></name></expr></argument>)<pos:position pos:line="289" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="80"/></expr_stmt>

			<if pos:line="291" pos:column="25">if <condition pos:line="291" pos:column="28">(<expr><name pos:line="291" pos:column="29">write_ops<pos:position pos:line="291" pos:column="38"/></name> <operator pos:line="291" pos:column="39">&lt;<pos:position pos:line="291" pos:column="43"/></operator> <name><name pos:line="291" pos:column="41">ds<pos:position pos:line="291" pos:column="43"/></name><operator pos:line="291" pos:column="43">-&gt;<pos:position pos:line="291" pos:column="48"/></operator><name pos:line="291" pos:column="45">write_ops<pos:position pos:line="291" pos:column="54"/></name></name></expr>)<pos:position pos:line="291" pos:column="55"/></condition><then pos:line="291" pos:column="55">
				<block type="pseudo"><expr_stmt><expr><name pos:line="292" pos:column="33">diff_write_ops<pos:position pos:line="292" pos:column="47"/></name> <operator pos:line="292" pos:column="48">=<pos:position pos:line="292" pos:column="49"/></operator> <literal type="number" pos:line="292" pos:column="50">1<pos:position pos:line="292" pos:column="51"/></literal> <operator pos:line="292" pos:column="52">+<pos:position pos:line="292" pos:column="53"/></operator> <name pos:line="292" pos:column="54">write_ops<pos:position pos:line="292" pos:column="63"/></name>
					<operator pos:line="293" pos:column="41">+<pos:position pos:line="293" pos:column="42"/></operator> <operator pos:line="293" pos:column="43">(<pos:position pos:line="293" pos:column="44"/></operator><name pos:line="293" pos:column="44">UINT_MAX<pos:position pos:line="293" pos:column="52"/></name> <operator pos:line="293" pos:column="53">-<pos:position pos:line="293" pos:column="54"/></operator> <name><name pos:line="293" pos:column="55">ds<pos:position pos:line="293" pos:column="57"/></name><operator pos:line="293" pos:column="57">-&gt;<pos:position pos:line="293" pos:column="62"/></operator><name pos:line="293" pos:column="59">write_ops<pos:position pos:line="293" pos:column="68"/></name></name><operator pos:line="293" pos:column="68">)<pos:position pos:line="293" pos:column="69"/></operator></expr>;<pos:position pos:line="293" pos:column="70"/></expr_stmt></block></then>
			<else pos:line="294" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="295" pos:column="33">diff_write_ops<pos:position pos:line="295" pos:column="47"/></name> <operator pos:line="295" pos:column="48">=<pos:position pos:line="295" pos:column="49"/></operator> <name pos:line="295" pos:column="50">write_ops<pos:position pos:line="295" pos:column="59"/></name> <operator pos:line="295" pos:column="60">-<pos:position pos:line="295" pos:column="61"/></operator> <name><name pos:line="295" pos:column="62">ds<pos:position pos:line="295" pos:column="64"/></name><operator pos:line="295" pos:column="64">-&gt;<pos:position pos:line="295" pos:column="69"/></operator><name pos:line="295" pos:column="66">write_ops<pos:position pos:line="295" pos:column="75"/></name></name></expr>;<pos:position pos:line="295" pos:column="76"/></expr_stmt></block></else></if>

			<if pos:line="297" pos:column="25">if <condition pos:line="297" pos:column="28">(<expr><name pos:line="297" pos:column="29">read_time<pos:position pos:line="297" pos:column="38"/></name> <operator pos:line="297" pos:column="39">&lt;<pos:position pos:line="297" pos:column="43"/></operator> <name><name pos:line="297" pos:column="41">ds<pos:position pos:line="297" pos:column="43"/></name><operator pos:line="297" pos:column="43">-&gt;<pos:position pos:line="297" pos:column="48"/></operator><name pos:line="297" pos:column="45">read_time<pos:position pos:line="297" pos:column="54"/></name></name></expr>)<pos:position pos:line="297" pos:column="55"/></condition><then pos:line="297" pos:column="55">
				<block type="pseudo"><expr_stmt><expr><name pos:line="298" pos:column="33">diff_read_time<pos:position pos:line="298" pos:column="47"/></name> <operator pos:line="298" pos:column="48">=<pos:position pos:line="298" pos:column="49"/></operator> <literal type="number" pos:line="298" pos:column="50">1<pos:position pos:line="298" pos:column="51"/></literal> <operator pos:line="298" pos:column="52">+<pos:position pos:line="298" pos:column="53"/></operator> <name pos:line="298" pos:column="54">read_time<pos:position pos:line="298" pos:column="63"/></name>
					<operator pos:line="299" pos:column="41">+<pos:position pos:line="299" pos:column="42"/></operator> <operator pos:line="299" pos:column="43">(<pos:position pos:line="299" pos:column="44"/></operator><name pos:line="299" pos:column="44">UINT_MAX<pos:position pos:line="299" pos:column="52"/></name> <operator pos:line="299" pos:column="53">-<pos:position pos:line="299" pos:column="54"/></operator> <name><name pos:line="299" pos:column="55">ds<pos:position pos:line="299" pos:column="57"/></name><operator pos:line="299" pos:column="57">-&gt;<pos:position pos:line="299" pos:column="62"/></operator><name pos:line="299" pos:column="59">read_time<pos:position pos:line="299" pos:column="68"/></name></name><operator pos:line="299" pos:column="68">)<pos:position pos:line="299" pos:column="69"/></operator></expr>;<pos:position pos:line="299" pos:column="70"/></expr_stmt></block></then>
			<else pos:line="300" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="301" pos:column="33">diff_read_time<pos:position pos:line="301" pos:column="47"/></name> <operator pos:line="301" pos:column="48">=<pos:position pos:line="301" pos:column="49"/></operator> <name pos:line="301" pos:column="50">read_time<pos:position pos:line="301" pos:column="59"/></name> <operator pos:line="301" pos:column="60">-<pos:position pos:line="301" pos:column="61"/></operator> <name><name pos:line="301" pos:column="62">ds<pos:position pos:line="301" pos:column="64"/></name><operator pos:line="301" pos:column="64">-&gt;<pos:position pos:line="301" pos:column="69"/></operator><name pos:line="301" pos:column="66">read_time<pos:position pos:line="301" pos:column="75"/></name></name></expr>;<pos:position pos:line="301" pos:column="76"/></expr_stmt></block></else></if>

			<if pos:line="303" pos:column="25">if <condition pos:line="303" pos:column="28">(<expr><name pos:line="303" pos:column="29">write_time<pos:position pos:line="303" pos:column="39"/></name> <operator pos:line="303" pos:column="40">&lt;<pos:position pos:line="303" pos:column="44"/></operator> <name><name pos:line="303" pos:column="42">ds<pos:position pos:line="303" pos:column="44"/></name><operator pos:line="303" pos:column="44">-&gt;<pos:position pos:line="303" pos:column="49"/></operator><name pos:line="303" pos:column="46">write_time<pos:position pos:line="303" pos:column="56"/></name></name></expr>)<pos:position pos:line="303" pos:column="57"/></condition><then pos:line="303" pos:column="57">
				<block type="pseudo"><expr_stmt><expr><name pos:line="304" pos:column="33">diff_write_time<pos:position pos:line="304" pos:column="48"/></name> <operator pos:line="304" pos:column="49">=<pos:position pos:line="304" pos:column="50"/></operator> <literal type="number" pos:line="304" pos:column="51">1<pos:position pos:line="304" pos:column="52"/></literal> <operator pos:line="304" pos:column="53">+<pos:position pos:line="304" pos:column="54"/></operator> <name pos:line="304" pos:column="55">write_time<pos:position pos:line="304" pos:column="65"/></name>
					<operator pos:line="305" pos:column="41">+<pos:position pos:line="305" pos:column="42"/></operator> <operator pos:line="305" pos:column="43">(<pos:position pos:line="305" pos:column="44"/></operator><name pos:line="305" pos:column="44">UINT_MAX<pos:position pos:line="305" pos:column="52"/></name> <operator pos:line="305" pos:column="53">-<pos:position pos:line="305" pos:column="54"/></operator> <name><name pos:line="305" pos:column="55">ds<pos:position pos:line="305" pos:column="57"/></name><operator pos:line="305" pos:column="57">-&gt;<pos:position pos:line="305" pos:column="62"/></operator><name pos:line="305" pos:column="59">write_time<pos:position pos:line="305" pos:column="69"/></name></name><operator pos:line="305" pos:column="69">)<pos:position pos:line="305" pos:column="70"/></operator></expr>;<pos:position pos:line="305" pos:column="71"/></expr_stmt></block></then>
			<else pos:line="306" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="307" pos:column="33">diff_write_time<pos:position pos:line="307" pos:column="48"/></name> <operator pos:line="307" pos:column="49">=<pos:position pos:line="307" pos:column="50"/></operator> <name pos:line="307" pos:column="51">write_time<pos:position pos:line="307" pos:column="61"/></name> <operator pos:line="307" pos:column="62">-<pos:position pos:line="307" pos:column="63"/></operator> <name><name pos:line="307" pos:column="64">ds<pos:position pos:line="307" pos:column="66"/></name><operator pos:line="307" pos:column="66">-&gt;<pos:position pos:line="307" pos:column="71"/></operator><name pos:line="307" pos:column="68">write_time<pos:position pos:line="307" pos:column="78"/></name></name></expr>;<pos:position pos:line="307" pos:column="79"/></expr_stmt></block></else></if>

			<if pos:line="309" pos:column="25">if <condition pos:line="309" pos:column="28">(<expr><name pos:line="309" pos:column="29">diff_read_ops<pos:position pos:line="309" pos:column="42"/></name> <operator pos:line="309" pos:column="43">!=<pos:position pos:line="309" pos:column="45"/></operator> <literal type="number" pos:line="309" pos:column="46">0<pos:position pos:line="309" pos:column="47"/></literal></expr>)<pos:position pos:line="309" pos:column="48"/></condition><then pos:line="309" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="310" pos:column="33">ds<pos:position pos:line="310" pos:column="35"/></name><operator pos:line="310" pos:column="35">-&gt;<pos:position pos:line="310" pos:column="40"/></operator><name pos:line="310" pos:column="37">avg_read_time<pos:position pos:line="310" pos:column="50"/></name></name> <operator pos:line="310" pos:column="51">+=<pos:position pos:line="310" pos:column="53"/></operator> <operator pos:line="310" pos:column="54">(<pos:position pos:line="310" pos:column="55"/></operator><name pos:line="310" pos:column="55">diff_read_time<pos:position pos:line="310" pos:column="69"/></name>
						<operator pos:line="311" pos:column="49">+<pos:position pos:line="311" pos:column="50"/></operator> <operator pos:line="311" pos:column="51">(<pos:position pos:line="311" pos:column="52"/></operator><name pos:line="311" pos:column="52">diff_read_ops<pos:position pos:line="311" pos:column="65"/></name> <operator pos:line="311" pos:column="66">/<pos:position pos:line="311" pos:column="67"/></operator> <literal type="number" pos:line="311" pos:column="68">2<pos:position pos:line="311" pos:column="69"/></literal><operator pos:line="311" pos:column="69">)<pos:position pos:line="311" pos:column="70"/></operator><operator pos:line="311" pos:column="70">)<pos:position pos:line="311" pos:column="71"/></operator>
					<operator pos:line="312" pos:column="41">/<pos:position pos:line="312" pos:column="42"/></operator> <name pos:line="312" pos:column="43">diff_read_ops<pos:position pos:line="312" pos:column="56"/></name></expr>;<pos:position pos:line="312" pos:column="57"/></expr_stmt></block></then></if>
			<if pos:line="313" pos:column="25">if <condition pos:line="313" pos:column="28">(<expr><name pos:line="313" pos:column="29">diff_write_ops<pos:position pos:line="313" pos:column="43"/></name> <operator pos:line="313" pos:column="44">!=<pos:position pos:line="313" pos:column="46"/></operator> <literal type="number" pos:line="313" pos:column="47">0<pos:position pos:line="313" pos:column="48"/></literal></expr>)<pos:position pos:line="313" pos:column="49"/></condition><then pos:line="313" pos:column="49">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="314" pos:column="33">ds<pos:position pos:line="314" pos:column="35"/></name><operator pos:line="314" pos:column="35">-&gt;<pos:position pos:line="314" pos:column="40"/></operator><name pos:line="314" pos:column="37">avg_write_time<pos:position pos:line="314" pos:column="51"/></name></name> <operator pos:line="314" pos:column="52">+=<pos:position pos:line="314" pos:column="54"/></operator> <operator pos:line="314" pos:column="55">(<pos:position pos:line="314" pos:column="56"/></operator><name pos:line="314" pos:column="56">diff_write_time<pos:position pos:line="314" pos:column="71"/></name>
						<operator pos:line="315" pos:column="49">+<pos:position pos:line="315" pos:column="50"/></operator> <operator pos:line="315" pos:column="51">(<pos:position pos:line="315" pos:column="52"/></operator><name pos:line="315" pos:column="52">diff_write_ops<pos:position pos:line="315" pos:column="66"/></name> <operator pos:line="315" pos:column="67">/<pos:position pos:line="315" pos:column="68"/></operator> <literal type="number" pos:line="315" pos:column="69">2<pos:position pos:line="315" pos:column="70"/></literal><operator pos:line="315" pos:column="70">)<pos:position pos:line="315" pos:column="71"/></operator><operator pos:line="315" pos:column="71">)<pos:position pos:line="315" pos:column="72"/></operator>
					<operator pos:line="316" pos:column="41">/<pos:position pos:line="316" pos:column="42"/></operator> <name pos:line="316" pos:column="43">diff_write_ops<pos:position pos:line="316" pos:column="57"/></name></expr>;<pos:position pos:line="316" pos:column="58"/></expr_stmt></block></then></if>

			<expr_stmt><expr><name><name pos:line="318" pos:column="25">ds<pos:position pos:line="318" pos:column="27"/></name><operator pos:line="318" pos:column="27">-&gt;<pos:position pos:line="318" pos:column="32"/></operator><name pos:line="318" pos:column="29">read_ops<pos:position pos:line="318" pos:column="37"/></name></name> <operator pos:line="318" pos:column="38">=<pos:position pos:line="318" pos:column="39"/></operator> <name pos:line="318" pos:column="40">read_ops<pos:position pos:line="318" pos:column="48"/></name></expr>;<pos:position pos:line="318" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="319" pos:column="25">ds<pos:position pos:line="319" pos:column="27"/></name><operator pos:line="319" pos:column="27">-&gt;<pos:position pos:line="319" pos:column="32"/></operator><name pos:line="319" pos:column="29">read_time<pos:position pos:line="319" pos:column="38"/></name></name> <operator pos:line="319" pos:column="39">=<pos:position pos:line="319" pos:column="40"/></operator> <name pos:line="319" pos:column="41">read_time<pos:position pos:line="319" pos:column="50"/></name></expr>;<pos:position pos:line="319" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="320" pos:column="25">ds<pos:position pos:line="320" pos:column="27"/></name><operator pos:line="320" pos:column="27">-&gt;<pos:position pos:line="320" pos:column="32"/></operator><name pos:line="320" pos:column="29">write_ops<pos:position pos:line="320" pos:column="38"/></name></name> <operator pos:line="320" pos:column="39">=<pos:position pos:line="320" pos:column="40"/></operator> <name pos:line="320" pos:column="41">write_ops<pos:position pos:line="320" pos:column="50"/></name></expr>;<pos:position pos:line="320" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="321" pos:column="25">ds<pos:position pos:line="321" pos:column="27"/></name><operator pos:line="321" pos:column="27">-&gt;<pos:position pos:line="321" pos:column="32"/></operator><name pos:line="321" pos:column="29">write_time<pos:position pos:line="321" pos:column="39"/></name></name> <operator pos:line="321" pos:column="40">=<pos:position pos:line="321" pos:column="41"/></operator> <name pos:line="321" pos:column="42">write_time<pos:position pos:line="321" pos:column="52"/></name></expr>;<pos:position pos:line="321" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="322" pos:column="18"/></block></then></if> <comment type="block" pos:line="322" pos:column="19">/* if (is_disk) */</comment>

		<comment type="block" pos:line="324" pos:column="17">/* Don't write to the RRDs if we've just started.. */</comment>
		<expr_stmt><expr><name><name pos:line="325" pos:column="17">ds<pos:position pos:line="325" pos:column="19"/></name><operator pos:line="325" pos:column="19">-&gt;<pos:position pos:line="325" pos:column="24"/></operator><name pos:line="325" pos:column="21">poll_count<pos:position pos:line="325" pos:column="31"/></name></name><operator pos:line="325" pos:column="31">++<pos:position pos:line="325" pos:column="33"/></operator></expr>;<pos:position pos:line="325" pos:column="34"/></expr_stmt>
		<if pos:line="326" pos:column="17">if <condition pos:line="326" pos:column="20">(<expr><name><name pos:line="326" pos:column="21">ds<pos:position pos:line="326" pos:column="23"/></name><operator pos:line="326" pos:column="23">-&gt;<pos:position pos:line="326" pos:column="28"/></operator><name pos:line="326" pos:column="25">poll_count<pos:position pos:line="326" pos:column="35"/></name></name> <operator pos:line="326" pos:column="36">&lt;=<pos:position pos:line="326" pos:column="41"/></operator> <literal type="number" pos:line="326" pos:column="39">2<pos:position pos:line="326" pos:column="40"/></literal></expr>)<pos:position pos:line="326" pos:column="41"/></condition><then pos:line="326" pos:column="41">
		<block pos:line="327" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="328" pos:column="25">DEBUG<pos:position pos:line="328" pos:column="30"/></name> <argument_list pos:line="328" pos:column="31">(<argument><expr><literal type="string" pos:line="328" pos:column="32">"disk plugin: (ds-&gt;poll_count = %i) &lt;= "<pos:position pos:line="328" pos:column="78"/></literal>
					<literal type="string" pos:line="329" pos:column="41">"(min_poll_count = 2); =&gt; Not writing."<pos:position pos:line="329" pos:column="83"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="330" pos:column="41">ds<pos:position pos:line="330" pos:column="43"/></name><operator pos:line="330" pos:column="43">-&gt;<pos:position pos:line="330" pos:column="48"/></operator><name pos:line="330" pos:column="45">poll_count<pos:position pos:line="330" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="330" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="57"/></expr_stmt>
			<continue pos:line="331" pos:column="25">continue;<pos:position pos:line="331" pos:column="34"/></continue>
		}<pos:position pos:line="332" pos:column="18"/></block></then></if>

		<if pos:line="334" pos:column="17">if <condition pos:line="334" pos:column="20">(<expr><operator pos:line="334" pos:column="21">(<pos:position pos:line="334" pos:column="22"/></operator><name pos:line="334" pos:column="22">read_ops<pos:position pos:line="334" pos:column="30"/></name> <operator pos:line="334" pos:column="31">==<pos:position pos:line="334" pos:column="33"/></operator> <literal type="number" pos:line="334" pos:column="34">0<pos:position pos:line="334" pos:column="35"/></literal><operator pos:line="334" pos:column="35">)<pos:position pos:line="334" pos:column="36"/></operator> <operator pos:line="334" pos:column="37">&amp;&amp;<pos:position pos:line="334" pos:column="47"/></operator> <operator pos:line="334" pos:column="40">(<pos:position pos:line="334" pos:column="41"/></operator><name pos:line="334" pos:column="41">write_ops<pos:position pos:line="334" pos:column="50"/></name> <operator pos:line="334" pos:column="51">==<pos:position pos:line="334" pos:column="53"/></operator> <literal type="number" pos:line="334" pos:column="54">0<pos:position pos:line="334" pos:column="55"/></literal><operator pos:line="334" pos:column="55">)<pos:position pos:line="334" pos:column="56"/></operator></expr>)<pos:position pos:line="334" pos:column="57"/></condition><then pos:line="334" pos:column="57">
		<block pos:line="335" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="336" pos:column="25">DEBUG<pos:position pos:line="336" pos:column="30"/></name> <argument_list pos:line="336" pos:column="31">(<argument><expr><literal type="string" pos:line="336" pos:column="32">"disk plugin: ((read_ops == 0) &amp;&amp; "<pos:position pos:line="336" pos:column="75"/></literal>
					<literal type="string" pos:line="337" pos:column="41">"(write_ops == 0)); =&gt; Not writing."<pos:position pos:line="337" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="337" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="79"/></expr_stmt>
			<continue pos:line="338" pos:column="25">continue;<pos:position pos:line="338" pos:column="34"/></continue>
		}<pos:position pos:line="339" pos:column="18"/></block></then></if>

		<if pos:line="341" pos:column="17">if <condition pos:line="341" pos:column="20">(<expr><operator pos:line="341" pos:column="21">(<pos:position pos:line="341" pos:column="22"/></operator><name><name pos:line="341" pos:column="22">ds<pos:position pos:line="341" pos:column="24"/></name><operator pos:line="341" pos:column="24">-&gt;<pos:position pos:line="341" pos:column="29"/></operator><name pos:line="341" pos:column="26">read_bytes<pos:position pos:line="341" pos:column="36"/></name></name> <operator pos:line="341" pos:column="37">!=<pos:position pos:line="341" pos:column="39"/></operator> <literal type="number" pos:line="341" pos:column="40">0<pos:position pos:line="341" pos:column="41"/></literal><operator pos:line="341" pos:column="41">)<pos:position pos:line="341" pos:column="42"/></operator> <operator pos:line="341" pos:column="43">||<pos:position pos:line="341" pos:column="45"/></operator> <operator pos:line="341" pos:column="46">(<pos:position pos:line="341" pos:column="47"/></operator><name><name pos:line="341" pos:column="47">ds<pos:position pos:line="341" pos:column="49"/></name><operator pos:line="341" pos:column="49">-&gt;<pos:position pos:line="341" pos:column="54"/></operator><name pos:line="341" pos:column="51">write_bytes<pos:position pos:line="341" pos:column="62"/></name></name> <operator pos:line="341" pos:column="63">!=<pos:position pos:line="341" pos:column="65"/></operator> <literal type="number" pos:line="341" pos:column="66">0<pos:position pos:line="341" pos:column="67"/></literal><operator pos:line="341" pos:column="67">)<pos:position pos:line="341" pos:column="68"/></operator></expr>)<pos:position pos:line="341" pos:column="69"/></condition><then pos:line="341" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="342" pos:column="25">disk_submit<pos:position pos:line="342" pos:column="36"/></name> <argument_list pos:line="342" pos:column="37">(<argument><expr><name pos:line="342" pos:column="38">disk_name<pos:position pos:line="342" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="342" pos:column="49">"disk_octets"<pos:position pos:line="342" pos:column="62"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="343" pos:column="41">ds<pos:position pos:line="343" pos:column="43"/></name><operator pos:line="343" pos:column="43">-&gt;<pos:position pos:line="343" pos:column="48"/></operator><name pos:line="343" pos:column="45">read_bytes<pos:position pos:line="343" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="343" pos:column="57">ds<pos:position pos:line="343" pos:column="59"/></name><operator pos:line="343" pos:column="59">-&gt;<pos:position pos:line="343" pos:column="64"/></operator><name pos:line="343" pos:column="61">write_bytes<pos:position pos:line="343" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="343" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="74"/></expr_stmt></block></then></if>

		<if pos:line="345" pos:column="17">if <condition pos:line="345" pos:column="20">(<expr><operator pos:line="345" pos:column="21">(<pos:position pos:line="345" pos:column="22"/></operator><name><name pos:line="345" pos:column="22">ds<pos:position pos:line="345" pos:column="24"/></name><operator pos:line="345" pos:column="24">-&gt;<pos:position pos:line="345" pos:column="29"/></operator><name pos:line="345" pos:column="26">read_ops<pos:position pos:line="345" pos:column="34"/></name></name> <operator pos:line="345" pos:column="35">!=<pos:position pos:line="345" pos:column="37"/></operator> <literal type="number" pos:line="345" pos:column="38">0<pos:position pos:line="345" pos:column="39"/></literal><operator pos:line="345" pos:column="39">)<pos:position pos:line="345" pos:column="40"/></operator> <operator pos:line="345" pos:column="41">||<pos:position pos:line="345" pos:column="43"/></operator> <operator pos:line="345" pos:column="44">(<pos:position pos:line="345" pos:column="45"/></operator><name><name pos:line="345" pos:column="45">ds<pos:position pos:line="345" pos:column="47"/></name><operator pos:line="345" pos:column="47">-&gt;<pos:position pos:line="345" pos:column="52"/></operator><name pos:line="345" pos:column="49">write_ops<pos:position pos:line="345" pos:column="58"/></name></name> <operator pos:line="345" pos:column="59">!=<pos:position pos:line="345" pos:column="61"/></operator> <literal type="number" pos:line="345" pos:column="62">0<pos:position pos:line="345" pos:column="63"/></literal><operator pos:line="345" pos:column="63">)<pos:position pos:line="345" pos:column="64"/></operator></expr>)<pos:position pos:line="345" pos:column="65"/></condition><then pos:line="345" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="346" pos:column="25">disk_submit<pos:position pos:line="346" pos:column="36"/></name> <argument_list pos:line="346" pos:column="37">(<argument><expr><name pos:line="346" pos:column="38">disk_name<pos:position pos:line="346" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="346" pos:column="49">"disk_ops"<pos:position pos:line="346" pos:column="59"/></literal></expr></argument>,
					<argument><expr><name pos:line="347" pos:column="41">read_ops<pos:position pos:line="347" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="347" pos:column="51">write_ops<pos:position pos:line="347" pos:column="60"/></name></expr></argument>)<pos:position pos:line="347" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="62"/></expr_stmt></block></then></if>

		<if pos:line="349" pos:column="17">if <condition pos:line="349" pos:column="20">(<expr><operator pos:line="349" pos:column="21">(<pos:position pos:line="349" pos:column="22"/></operator><name><name pos:line="349" pos:column="22">ds<pos:position pos:line="349" pos:column="24"/></name><operator pos:line="349" pos:column="24">-&gt;<pos:position pos:line="349" pos:column="29"/></operator><name pos:line="349" pos:column="26">avg_read_time<pos:position pos:line="349" pos:column="39"/></name></name> <operator pos:line="349" pos:column="40">!=<pos:position pos:line="349" pos:column="42"/></operator> <literal type="number" pos:line="349" pos:column="43">0<pos:position pos:line="349" pos:column="44"/></literal><operator pos:line="349" pos:column="44">)<pos:position pos:line="349" pos:column="45"/></operator> <operator pos:line="349" pos:column="46">||<pos:position pos:line="349" pos:column="48"/></operator> <operator pos:line="349" pos:column="49">(<pos:position pos:line="349" pos:column="50"/></operator><name><name pos:line="349" pos:column="50">ds<pos:position pos:line="349" pos:column="52"/></name><operator pos:line="349" pos:column="52">-&gt;<pos:position pos:line="349" pos:column="57"/></operator><name pos:line="349" pos:column="54">avg_write_time<pos:position pos:line="349" pos:column="68"/></name></name> <operator pos:line="349" pos:column="69">!=<pos:position pos:line="349" pos:column="71"/></operator> <literal type="number" pos:line="349" pos:column="72">0<pos:position pos:line="349" pos:column="73"/></literal><operator pos:line="349" pos:column="73">)<pos:position pos:line="349" pos:column="74"/></operator></expr>)<pos:position pos:line="349" pos:column="75"/></condition><then pos:line="349" pos:column="75">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="350" pos:column="25">disk_submit<pos:position pos:line="350" pos:column="36"/></name> <argument_list pos:line="350" pos:column="37">(<argument><expr><name pos:line="350" pos:column="38">disk_name<pos:position pos:line="350" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="350" pos:column="49">"disk_time"<pos:position pos:line="350" pos:column="60"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="351" pos:column="41">ds<pos:position pos:line="351" pos:column="43"/></name><operator pos:line="351" pos:column="43">-&gt;<pos:position pos:line="351" pos:column="48"/></operator><name pos:line="351" pos:column="45">avg_read_time<pos:position pos:line="351" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="351" pos:column="60">ds<pos:position pos:line="351" pos:column="62"/></name><operator pos:line="351" pos:column="62">-&gt;<pos:position pos:line="351" pos:column="67"/></operator><name pos:line="351" pos:column="64">avg_write_time<pos:position pos:line="351" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="351" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="80"/></expr_stmt></block></then></if>

		<if pos:line="353" pos:column="17">if <condition pos:line="353" pos:column="20">(<expr><name pos:line="353" pos:column="21">is_disk<pos:position pos:line="353" pos:column="28"/></name></expr>)<pos:position pos:line="353" pos:column="29"/></condition><then pos:line="353" pos:column="29">
		<block pos:line="354" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="355" pos:column="25">disk_submit<pos:position pos:line="355" pos:column="36"/></name> <argument_list pos:line="355" pos:column="37">(<argument><expr><name pos:line="355" pos:column="38">disk_name<pos:position pos:line="355" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="355" pos:column="49">"disk_merged"<pos:position pos:line="355" pos:column="62"/></literal></expr></argument>,
					<argument><expr><name pos:line="356" pos:column="41">read_merged<pos:position pos:line="356" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="356" pos:column="54">write_merged<pos:position pos:line="356" pos:column="66"/></name></expr></argument>)<pos:position pos:line="356" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="357" pos:column="18"/></block></then></if> <comment type="block" pos:line="357" pos:column="19">/* if (is_disk) */</comment>
	}<pos:position pos:line="358" pos:column="10"/></block></while> <comment type="block" pos:line="358" pos:column="11">/* while (fgets (buffer, sizeof (buffer), fh) != NULL) */</comment>

	<expr_stmt><expr><call><name pos:line="360" pos:column="9">fclose<pos:position pos:line="360" pos:column="15"/></name> <argument_list pos:line="360" pos:column="16">(<argument><expr><name pos:line="360" pos:column="17">fh<pos:position pos:line="360" pos:column="19"/></name></expr></argument>)<pos:position pos:line="360" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="360" pos:column="21"/></expr_stmt>
<comment type="block" pos:line="361" pos:column="1">/* #endif defined(KERNEL_LINUX) */</comment>

<cpp:elif pos:line="363" pos:column="1">#<cpp:directive pos:line="363" pos:column="2">elif<pos:position pos:line="363" pos:column="6"/></cpp:directive> <expr><name pos:line="363" pos:column="7">HAVE_LIBKSTAT<pos:position pos:line="363" pos:column="20"/></name></expr></cpp:elif>
<cpp:if pos:line="364" pos:column="1"># <cpp:directive pos:line="364" pos:column="3">if<pos:position pos:line="364" pos:column="5"/></cpp:directive> <expr><name pos:line="364" pos:column="6">HAVE_KSTAT_IO_T_WRITES<pos:position pos:line="364" pos:column="28"/></name> <operator pos:line="364" pos:column="29">&amp;&amp;<pos:position pos:line="364" pos:column="39"/></operator> <name pos:line="364" pos:column="32">HAVE_KSTAT_IO_T_NWRITES<pos:position pos:line="364" pos:column="55"/></name> <operator pos:line="364" pos:column="56">&amp;&amp;<pos:position pos:line="364" pos:column="66"/></operator> <name pos:line="364" pos:column="59">HAVE_KSTAT_IO_T_WTIME<pos:position pos:line="364" pos:column="80"/></name></expr></cpp:if>
<cpp:define pos:line="365" pos:column="1">#  <cpp:directive pos:line="365" pos:column="4">define<pos:position pos:line="365" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="365" pos:column="11">KIO_ROCTETS<pos:position pos:line="365" pos:column="22"/></name></cpp:macro> <cpp:value pos:line="365" pos:column="23">reads<pos:position pos:line="365" pos:column="28"/></cpp:value></cpp:define>
<cpp:define pos:line="366" pos:column="1">#  <cpp:directive pos:line="366" pos:column="4">define<pos:position pos:line="366" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="366" pos:column="11">KIO_WOCTETS<pos:position pos:line="366" pos:column="22"/></name></cpp:macro> <cpp:value pos:line="366" pos:column="23">writes<pos:position pos:line="366" pos:column="29"/></cpp:value></cpp:define>
<cpp:define pos:line="367" pos:column="1">#  <cpp:directive pos:line="367" pos:column="4">define<pos:position pos:line="367" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="367" pos:column="11">KIO_ROPS<pos:position pos:line="367" pos:column="19"/></name></cpp:macro>    <cpp:value pos:line="367" pos:column="23">nreads<pos:position pos:line="367" pos:column="29"/></cpp:value></cpp:define>
<cpp:define pos:line="368" pos:column="1">#  <cpp:directive pos:line="368" pos:column="4">define<pos:position pos:line="368" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="368" pos:column="11">KIO_WOPS<pos:position pos:line="368" pos:column="19"/></name></cpp:macro>    <cpp:value pos:line="368" pos:column="23">nwrites<pos:position pos:line="368" pos:column="30"/></cpp:value></cpp:define>
<cpp:define pos:line="369" pos:column="1">#  <cpp:directive pos:line="369" pos:column="4">define<pos:position pos:line="369" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="369" pos:column="11">KIO_RTIME<pos:position pos:line="369" pos:column="20"/></name></cpp:macro>   <cpp:value pos:line="369" pos:column="23">rtime<pos:position pos:line="369" pos:column="28"/></cpp:value></cpp:define>
<cpp:define pos:line="370" pos:column="1">#  <cpp:directive pos:line="370" pos:column="4">define<pos:position pos:line="370" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="370" pos:column="11">KIO_WTIME<pos:position pos:line="370" pos:column="20"/></name></cpp:macro>   <cpp:value pos:line="370" pos:column="23">wtime<pos:position pos:line="370" pos:column="28"/></cpp:value></cpp:define>
<cpp:elif pos:line="371" pos:column="1"># <cpp:directive pos:line="371" pos:column="3">elif<pos:position pos:line="371" pos:column="7"/></cpp:directive> <expr><name pos:line="371" pos:column="8">HAVE_KSTAT_IO_T_NWRITTEN<pos:position pos:line="371" pos:column="32"/></name> <operator pos:line="371" pos:column="33">&amp;&amp;<pos:position pos:line="371" pos:column="43"/></operator> <name pos:line="371" pos:column="36">HAVE_KSTAT_IO_T_WRITES<pos:position pos:line="371" pos:column="58"/></name> <operator pos:line="371" pos:column="59">&amp;&amp;<pos:position pos:line="371" pos:column="69"/></operator> <name pos:line="371" pos:column="62">HAVE_KSTAT_IO_T_WTIME<pos:position pos:line="371" pos:column="83"/></name></expr></cpp:elif>
<cpp:define pos:line="372" pos:column="1">#  <cpp:directive pos:line="372" pos:column="4">define<pos:position pos:line="372" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="372" pos:column="11">KIO_ROCTETS<pos:position pos:line="372" pos:column="22"/></name></cpp:macro> <cpp:value pos:line="372" pos:column="23">nread<pos:position pos:line="372" pos:column="28"/></cpp:value></cpp:define>
<cpp:define pos:line="373" pos:column="1">#  <cpp:directive pos:line="373" pos:column="4">define<pos:position pos:line="373" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="373" pos:column="11">KIO_WOCTETS<pos:position pos:line="373" pos:column="22"/></name></cpp:macro> <cpp:value pos:line="373" pos:column="23">nwritten<pos:position pos:line="373" pos:column="31"/></cpp:value></cpp:define>
<cpp:define pos:line="374" pos:column="1">#  <cpp:directive pos:line="374" pos:column="4">define<pos:position pos:line="374" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="374" pos:column="11">KIO_ROPS<pos:position pos:line="374" pos:column="19"/></name></cpp:macro>    <cpp:value pos:line="374" pos:column="23">reads<pos:position pos:line="374" pos:column="28"/></cpp:value></cpp:define>
<cpp:define pos:line="375" pos:column="1">#  <cpp:directive pos:line="375" pos:column="4">define<pos:position pos:line="375" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="375" pos:column="11">KIO_WOPS<pos:position pos:line="375" pos:column="19"/></name></cpp:macro>    <cpp:value pos:line="375" pos:column="23">writes<pos:position pos:line="375" pos:column="29"/></cpp:value></cpp:define>
<cpp:define pos:line="376" pos:column="1">#  <cpp:directive pos:line="376" pos:column="4">define<pos:position pos:line="376" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="376" pos:column="11">KIO_RTIME<pos:position pos:line="376" pos:column="20"/></name></cpp:macro>   <cpp:value pos:line="376" pos:column="23">rtime<pos:position pos:line="376" pos:column="28"/></cpp:value></cpp:define>
<cpp:define pos:line="377" pos:column="1">#  <cpp:directive pos:line="377" pos:column="4">define<pos:position pos:line="377" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="377" pos:column="11">KIO_WTIME<pos:position pos:line="377" pos:column="20"/></name></cpp:macro>   <cpp:value pos:line="377" pos:column="23">wtime<pos:position pos:line="377" pos:column="28"/></cpp:value></cpp:define>
<cpp:else pos:line="378" pos:column="1"># <cpp:directive pos:line="378" pos:column="3">else<pos:position pos:line="378" pos:column="7"/></cpp:directive></cpp:else>
<cpp:error pos:line="379" pos:column="1">#  <cpp:directive pos:line="379" pos:column="4">error<pos:position pos:line="379" pos:column="9"/></cpp:directive> <cpp:literal pos:line="379" pos:column="10">"kstat_io_t does not have the required members"<pos:position pos:line="379" pos:column="57"/></cpp:literal></cpp:error>
<cpp:endif pos:line="380" pos:column="1"># <cpp:directive pos:line="380" pos:column="3">endif<pos:position pos:line="380" pos:column="8"/></cpp:directive></cpp:endif>
	<decl_stmt><decl><specifier pos:line="381" pos:column="9">static<pos:position pos:line="381" pos:column="15"/></specifier> <type><name pos:line="381" pos:column="16">kstat_io_t<pos:position pos:line="381" pos:column="26"/></name></type> <name pos:line="381" pos:column="27">kio<pos:position pos:line="381" pos:column="30"/></name></decl>;<pos:position pos:line="381" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="382" pos:column="9">int<pos:position pos:line="382" pos:column="12"/></name></type> <name pos:line="382" pos:column="13">i<pos:position pos:line="382" pos:column="14"/></name></decl>;<pos:position pos:line="382" pos:column="15"/></decl_stmt>

	<if pos:line="384" pos:column="9">if <condition pos:line="384" pos:column="12">(<expr><name pos:line="384" pos:column="13">kc<pos:position pos:line="384" pos:column="15"/></name> <operator pos:line="384" pos:column="16">==<pos:position pos:line="384" pos:column="18"/></operator> <name pos:line="384" pos:column="19">NULL<pos:position pos:line="384" pos:column="23"/></name></expr>)<pos:position pos:line="384" pos:column="24"/></condition><then pos:line="384" pos:column="24">
		<block type="pseudo"><return pos:line="385" pos:column="17">return <expr><operator pos:line="385" pos:column="24">(<pos:position pos:line="385" pos:column="25"/></operator><operator pos:line="385" pos:column="25">-<pos:position pos:line="385" pos:column="26"/></operator><literal type="number" pos:line="385" pos:column="26">1<pos:position pos:line="385" pos:column="27"/></literal><operator pos:line="385" pos:column="27">)<pos:position pos:line="385" pos:column="28"/></operator></expr>;<pos:position pos:line="385" pos:column="29"/></return></block></then></if>

	<for pos:line="387" pos:column="9">for <control pos:line="387" pos:column="13">(<init><expr><name pos:line="387" pos:column="14">i<pos:position pos:line="387" pos:column="15"/></name> <operator pos:line="387" pos:column="16">=<pos:position pos:line="387" pos:column="17"/></operator> <literal type="number" pos:line="387" pos:column="18">0<pos:position pos:line="387" pos:column="19"/></literal></expr>;<pos:position pos:line="387" pos:column="20"/></init> <condition><expr><name pos:line="387" pos:column="21">i<pos:position pos:line="387" pos:column="22"/></name> <operator pos:line="387" pos:column="23">&lt;<pos:position pos:line="387" pos:column="27"/></operator> <name pos:line="387" pos:column="25">numdisk<pos:position pos:line="387" pos:column="32"/></name></expr>;<pos:position pos:line="387" pos:column="33"/></condition> <incr><expr><name pos:line="387" pos:column="34">i<pos:position pos:line="387" pos:column="35"/></name><operator pos:line="387" pos:column="35">++<pos:position pos:line="387" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="387" pos:column="38"/></control>
	<block pos:line="388" pos:column="9">{
		<if pos:line="389" pos:column="17">if <condition pos:line="389" pos:column="20">(<expr><call><name pos:line="389" pos:column="21">kstat_read<pos:position pos:line="389" pos:column="31"/></name> <argument_list pos:line="389" pos:column="32">(<argument><expr><name pos:line="389" pos:column="33">kc<pos:position pos:line="389" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="389" pos:column="37">ksp<pos:position pos:line="389" pos:column="40"/></name><index pos:line="389" pos:column="40">[<expr><name pos:line="389" pos:column="41">i<pos:position pos:line="389" pos:column="42"/></name></expr>]<pos:position pos:line="389" pos:column="43"/></index></name></expr></argument>, <argument><expr><operator pos:line="389" pos:column="45">&amp;<pos:position pos:line="389" pos:column="50"/></operator><name pos:line="389" pos:column="46">kio<pos:position pos:line="389" pos:column="49"/></name></expr></argument>)<pos:position pos:line="389" pos:column="50"/></argument_list></call> <operator pos:line="389" pos:column="51">==<pos:position pos:line="389" pos:column="53"/></operator> <operator pos:line="389" pos:column="54">-<pos:position pos:line="389" pos:column="55"/></operator><literal type="number" pos:line="389" pos:column="55">1<pos:position pos:line="389" pos:column="56"/></literal></expr>)<pos:position pos:line="389" pos:column="57"/></condition><then pos:line="389" pos:column="57">
			<block type="pseudo"><continue pos:line="390" pos:column="25">continue;<pos:position pos:line="390" pos:column="34"/></continue></block></then></if>

		<if pos:line="392" pos:column="17">if <condition pos:line="392" pos:column="20">(<expr><call><name pos:line="392" pos:column="21">strncmp<pos:position pos:line="392" pos:column="28"/></name> <argument_list pos:line="392" pos:column="29">(<argument><expr><name><name pos:line="392" pos:column="30">ksp<pos:position pos:line="392" pos:column="33"/></name><index pos:line="392" pos:column="33">[<expr><name pos:line="392" pos:column="34">i<pos:position pos:line="392" pos:column="35"/></name></expr>]<pos:position pos:line="392" pos:column="36"/></index></name><operator pos:line="392" pos:column="36">-&gt;<pos:position pos:line="392" pos:column="41"/></operator><name pos:line="392" pos:column="38">ks_class<pos:position pos:line="392" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="392" pos:column="48">"disk"<pos:position pos:line="392" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="392" pos:column="56">4<pos:position pos:line="392" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="392" pos:column="58"/></argument_list></call> <operator pos:line="392" pos:column="59">==<pos:position pos:line="392" pos:column="61"/></operator> <literal type="number" pos:line="392" pos:column="62">0<pos:position pos:line="392" pos:column="63"/></literal></expr>)<pos:position pos:line="392" pos:column="64"/></condition><then pos:line="392" pos:column="64">
		<block pos:line="393" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="394" pos:column="25">disk_submit<pos:position pos:line="394" pos:column="36"/></name> <argument_list pos:line="394" pos:column="37">(<argument><expr><name><name pos:line="394" pos:column="38">ksp<pos:position pos:line="394" pos:column="41"/></name><index pos:line="394" pos:column="41">[<expr><name pos:line="394" pos:column="42">i<pos:position pos:line="394" pos:column="43"/></name></expr>]<pos:position pos:line="394" pos:column="44"/></index></name><operator pos:line="394" pos:column="44">-&gt;<pos:position pos:line="394" pos:column="49"/></operator><name pos:line="394" pos:column="46">ks_name<pos:position pos:line="394" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="394" pos:column="55">"disk_octets"<pos:position pos:line="394" pos:column="68"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="395" pos:column="41">kio<pos:position pos:line="395" pos:column="44"/></name><operator pos:line="395" pos:column="44">.<pos:position pos:line="395" pos:column="45"/></operator><name pos:line="395" pos:column="45">KIO_ROCTETS<pos:position pos:line="395" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="395" pos:column="58">kio<pos:position pos:line="395" pos:column="61"/></name><operator pos:line="395" pos:column="61">.<pos:position pos:line="395" pos:column="62"/></operator><name pos:line="395" pos:column="62">KIO_WOCTETS<pos:position pos:line="395" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="395" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="396" pos:column="25">disk_submit<pos:position pos:line="396" pos:column="36"/></name> <argument_list pos:line="396" pos:column="37">(<argument><expr><name><name pos:line="396" pos:column="38">ksp<pos:position pos:line="396" pos:column="41"/></name><index pos:line="396" pos:column="41">[<expr><name pos:line="396" pos:column="42">i<pos:position pos:line="396" pos:column="43"/></name></expr>]<pos:position pos:line="396" pos:column="44"/></index></name><operator pos:line="396" pos:column="44">-&gt;<pos:position pos:line="396" pos:column="49"/></operator><name pos:line="396" pos:column="46">ks_name<pos:position pos:line="396" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="396" pos:column="55">"disk_ops"<pos:position pos:line="396" pos:column="65"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="397" pos:column="41">kio<pos:position pos:line="397" pos:column="44"/></name><operator pos:line="397" pos:column="44">.<pos:position pos:line="397" pos:column="45"/></operator><name pos:line="397" pos:column="45">KIO_ROPS<pos:position pos:line="397" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="397" pos:column="55">kio<pos:position pos:line="397" pos:column="58"/></name><operator pos:line="397" pos:column="58">.<pos:position pos:line="397" pos:column="59"/></operator><name pos:line="397" pos:column="59">KIO_WOPS<pos:position pos:line="397" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="397" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="69"/></expr_stmt>
			<comment type="block" pos:line="398" pos:column="25">/* FIXME: Convert this to microseconds if necessary */</comment>
			<expr_stmt><expr><call><name pos:line="399" pos:column="25">disk_submit<pos:position pos:line="399" pos:column="36"/></name> <argument_list pos:line="399" pos:column="37">(<argument><expr><name><name pos:line="399" pos:column="38">ksp<pos:position pos:line="399" pos:column="41"/></name><index pos:line="399" pos:column="41">[<expr><name pos:line="399" pos:column="42">i<pos:position pos:line="399" pos:column="43"/></name></expr>]<pos:position pos:line="399" pos:column="44"/></index></name><operator pos:line="399" pos:column="44">-&gt;<pos:position pos:line="399" pos:column="49"/></operator><name pos:line="399" pos:column="46">ks_name<pos:position pos:line="399" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="399" pos:column="55">"disk_time"<pos:position pos:line="399" pos:column="66"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="400" pos:column="41">kio<pos:position pos:line="400" pos:column="44"/></name><operator pos:line="400" pos:column="44">.<pos:position pos:line="400" pos:column="45"/></operator><name pos:line="400" pos:column="45">KIO_RTIME<pos:position pos:line="400" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="400" pos:column="56">kio<pos:position pos:line="400" pos:column="59"/></name><operator pos:line="400" pos:column="59">.<pos:position pos:line="400" pos:column="60"/></operator><name pos:line="400" pos:column="60">KIO_WTIME<pos:position pos:line="400" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="400" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="400" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="401" pos:column="18"/></block></then>
		<elseif pos:line="402" pos:column="17">else <if pos:line="402" pos:column="22">if <condition pos:line="402" pos:column="25">(<expr><call><name pos:line="402" pos:column="26">strncmp<pos:position pos:line="402" pos:column="33"/></name> <argument_list pos:line="402" pos:column="34">(<argument><expr><name><name pos:line="402" pos:column="35">ksp<pos:position pos:line="402" pos:column="38"/></name><index pos:line="402" pos:column="38">[<expr><name pos:line="402" pos:column="39">i<pos:position pos:line="402" pos:column="40"/></name></expr>]<pos:position pos:line="402" pos:column="41"/></index></name><operator pos:line="402" pos:column="41">-&gt;<pos:position pos:line="402" pos:column="46"/></operator><name pos:line="402" pos:column="43">ks_class<pos:position pos:line="402" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="402" pos:column="53">"partition"<pos:position pos:line="402" pos:column="64"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="402" pos:column="66">9<pos:position pos:line="402" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="402" pos:column="68"/></argument_list></call> <operator pos:line="402" pos:column="69">==<pos:position pos:line="402" pos:column="71"/></operator> <literal type="number" pos:line="402" pos:column="72">0<pos:position pos:line="402" pos:column="73"/></literal></expr>)<pos:position pos:line="402" pos:column="74"/></condition><then pos:line="402" pos:column="74">
		<block pos:line="403" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="404" pos:column="25">disk_submit<pos:position pos:line="404" pos:column="36"/></name> <argument_list pos:line="404" pos:column="37">(<argument><expr><name><name pos:line="404" pos:column="38">ksp<pos:position pos:line="404" pos:column="41"/></name><index pos:line="404" pos:column="41">[<expr><name pos:line="404" pos:column="42">i<pos:position pos:line="404" pos:column="43"/></name></expr>]<pos:position pos:line="404" pos:column="44"/></index></name><operator pos:line="404" pos:column="44">-&gt;<pos:position pos:line="404" pos:column="49"/></operator><name pos:line="404" pos:column="46">ks_name<pos:position pos:line="404" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="404" pos:column="55">"disk_octets"<pos:position pos:line="404" pos:column="68"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="405" pos:column="41">kio<pos:position pos:line="405" pos:column="44"/></name><operator pos:line="405" pos:column="44">.<pos:position pos:line="405" pos:column="45"/></operator><name pos:line="405" pos:column="45">KIO_ROCTETS<pos:position pos:line="405" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="405" pos:column="58">kio<pos:position pos:line="405" pos:column="61"/></name><operator pos:line="405" pos:column="61">.<pos:position pos:line="405" pos:column="62"/></operator><name pos:line="405" pos:column="62">KIO_WOCTETS<pos:position pos:line="405" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="405" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="406" pos:column="25">disk_submit<pos:position pos:line="406" pos:column="36"/></name> <argument_list pos:line="406" pos:column="37">(<argument><expr><name><name pos:line="406" pos:column="38">ksp<pos:position pos:line="406" pos:column="41"/></name><index pos:line="406" pos:column="41">[<expr><name pos:line="406" pos:column="42">i<pos:position pos:line="406" pos:column="43"/></name></expr>]<pos:position pos:line="406" pos:column="44"/></index></name><operator pos:line="406" pos:column="44">-&gt;<pos:position pos:line="406" pos:column="49"/></operator><name pos:line="406" pos:column="46">ks_name<pos:position pos:line="406" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="406" pos:column="55">"disk_ops"<pos:position pos:line="406" pos:column="65"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="407" pos:column="41">kio<pos:position pos:line="407" pos:column="44"/></name><operator pos:line="407" pos:column="44">.<pos:position pos:line="407" pos:column="45"/></operator><name pos:line="407" pos:column="45">KIO_ROPS<pos:position pos:line="407" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="407" pos:column="55">kio<pos:position pos:line="407" pos:column="58"/></name><operator pos:line="407" pos:column="58">.<pos:position pos:line="407" pos:column="59"/></operator><name pos:line="407" pos:column="59">KIO_WOPS<pos:position pos:line="407" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="407" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="407" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="408" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="409" pos:column="10"/></block></for>
<comment type="block" pos:line="410" pos:column="1">/* #endif defined(HAVE_LIBKSTAT) */</comment>

<cpp:elif pos:line="412" pos:column="1">#<cpp:directive pos:line="412" pos:column="2">elif<pos:position pos:line="412" pos:column="6"/></cpp:directive> <expr><call><name pos:line="412" pos:column="7">defined<pos:position pos:line="412" pos:column="14"/></name><argument_list pos:line="412" pos:column="14">(<argument><expr><name pos:line="412" pos:column="15">HAVE_LIBSTATGRAB<pos:position pos:line="412" pos:column="31"/></name></expr></argument>)<pos:position pos:line="412" pos:column="32"/></argument_list></call></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="413" pos:column="9">sg_disk_io_stats<pos:position pos:line="413" pos:column="25"/></name> <modifier pos:line="413" pos:column="26">*<pos:position pos:line="413" pos:column="27"/></modifier></type><name pos:line="413" pos:column="27">ds<pos:position pos:line="413" pos:column="29"/></name></decl>;<pos:position pos:line="413" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="414" pos:column="9">int<pos:position pos:line="414" pos:column="12"/></name></type> <name pos:line="414" pos:column="13">disks<pos:position pos:line="414" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="414" pos:column="20">counter<pos:position pos:line="414" pos:column="27"/></name></decl>;<pos:position pos:line="414" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="415" pos:column="9">char<pos:position pos:line="415" pos:column="13"/></name></type> <name><name pos:line="415" pos:column="14">name<pos:position pos:line="415" pos:column="18"/></name><index pos:line="415" pos:column="18">[<expr><name pos:line="415" pos:column="19">DATA_MAX_NAME_LEN<pos:position pos:line="415" pos:column="36"/></name></expr>]<pos:position pos:line="415" pos:column="37"/></index></name></decl>;<pos:position pos:line="415" pos:column="38"/></decl_stmt>
	
	<if pos:line="417" pos:column="9">if <condition pos:line="417" pos:column="12">(<expr><operator pos:line="417" pos:column="13">(<pos:position pos:line="417" pos:column="14"/></operator><name pos:line="417" pos:column="14">ds<pos:position pos:line="417" pos:column="16"/></name> <operator pos:line="417" pos:column="17">=<pos:position pos:line="417" pos:column="18"/></operator> <call><name pos:line="417" pos:column="19">sg_get_disk_io_stats<pos:position pos:line="417" pos:column="39"/></name><argument_list pos:line="417" pos:column="39">(<argument><expr><operator pos:line="417" pos:column="40">&amp;<pos:position pos:line="417" pos:column="45"/></operator><name pos:line="417" pos:column="41">disks<pos:position pos:line="417" pos:column="46"/></name></expr></argument>)<pos:position pos:line="417" pos:column="47"/></argument_list></call><operator pos:line="417" pos:column="47">)<pos:position pos:line="417" pos:column="48"/></operator> <operator pos:line="417" pos:column="49">==<pos:position pos:line="417" pos:column="51"/></operator> <name pos:line="417" pos:column="52">NULL<pos:position pos:line="417" pos:column="56"/></name></expr>)<pos:position pos:line="417" pos:column="57"/></condition><then pos:line="417" pos:column="57">
		<block type="pseudo"><return pos:line="418" pos:column="17">return <expr><operator pos:line="418" pos:column="24">(<pos:position pos:line="418" pos:column="25"/></operator><literal type="number" pos:line="418" pos:column="25">0<pos:position pos:line="418" pos:column="26"/></literal><operator pos:line="418" pos:column="26">)<pos:position pos:line="418" pos:column="27"/></operator></expr>;<pos:position pos:line="418" pos:column="28"/></return></block></then></if>
		
	<for pos:line="420" pos:column="9">for <control pos:line="420" pos:column="13">(<init><expr><name pos:line="420" pos:column="14">counter<pos:position pos:line="420" pos:column="21"/></name><operator pos:line="420" pos:column="21">=<pos:position pos:line="420" pos:column="22"/></operator><literal type="number" pos:line="420" pos:column="22">0<pos:position pos:line="420" pos:column="23"/></literal></expr>;<pos:position pos:line="420" pos:column="24"/></init> <condition><expr><name pos:line="420" pos:column="25">counter<pos:position pos:line="420" pos:column="32"/></name> <operator pos:line="420" pos:column="33">&lt;<pos:position pos:line="420" pos:column="37"/></operator> <name pos:line="420" pos:column="35">disks<pos:position pos:line="420" pos:column="40"/></name></expr>;<pos:position pos:line="420" pos:column="41"/></condition> <incr><expr><name pos:line="420" pos:column="42">counter<pos:position pos:line="420" pos:column="49"/></name><operator pos:line="420" pos:column="49">++<pos:position pos:line="420" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="420" pos:column="52"/></control> <block pos:line="420" pos:column="53">{
		<expr_stmt><expr><call><name pos:line="421" pos:column="17">strncpy<pos:position pos:line="421" pos:column="24"/></name><argument_list pos:line="421" pos:column="24">(<argument><expr><name pos:line="421" pos:column="25">name<pos:position pos:line="421" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="421" pos:column="31">ds<pos:position pos:line="421" pos:column="33"/></name><operator pos:line="421" pos:column="33">-&gt;<pos:position pos:line="421" pos:column="38"/></operator><name pos:line="421" pos:column="35">disk_name<pos:position pos:line="421" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="421" pos:column="46">sizeof<argument_list pos:line="421" pos:column="52">(<argument><expr><name pos:line="421" pos:column="53">name<pos:position pos:line="421" pos:column="57"/></name></expr></argument>)<pos:position pos:line="421" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="421" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="421" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="422" pos:column="17">name<pos:position pos:line="422" pos:column="21"/></name><index pos:line="422" pos:column="21">[<expr><sizeof pos:line="422" pos:column="22">sizeof<argument_list pos:line="422" pos:column="28">(<argument><expr><name pos:line="422" pos:column="29">name<pos:position pos:line="422" pos:column="33"/></name></expr></argument>)<pos:position pos:line="422" pos:column="34"/></argument_list></sizeof><operator pos:line="422" pos:column="34">-<pos:position pos:line="422" pos:column="35"/></operator><literal type="number" pos:line="422" pos:column="35">1<pos:position pos:line="422" pos:column="36"/></literal></expr>]<pos:position pos:line="422" pos:column="37"/></index></name> <operator pos:line="422" pos:column="38">=<pos:position pos:line="422" pos:column="39"/></operator> <literal type="char" pos:line="422" pos:column="40">'\0'<pos:position pos:line="422" pos:column="44"/></literal></expr>;<pos:position pos:line="422" pos:column="45"/></expr_stmt> <comment type="block" pos:line="422" pos:column="46">/* strncpy doesn't terminate longer strings */</comment>
		<expr_stmt><expr><call><name pos:line="423" pos:column="17">disk_submit<pos:position pos:line="423" pos:column="28"/></name> <argument_list pos:line="423" pos:column="29">(<argument><expr><name pos:line="423" pos:column="30">name<pos:position pos:line="423" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="423" pos:column="36">"disk_octets"<pos:position pos:line="423" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="423" pos:column="51">ds<pos:position pos:line="423" pos:column="53"/></name><operator pos:line="423" pos:column="53">-&gt;<pos:position pos:line="423" pos:column="58"/></operator><name pos:line="423" pos:column="55">read_bytes<pos:position pos:line="423" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="423" pos:column="67">ds<pos:position pos:line="423" pos:column="69"/></name><operator pos:line="423" pos:column="69">-&gt;<pos:position pos:line="423" pos:column="74"/></operator><name pos:line="423" pos:column="71">write_bytes<pos:position pos:line="423" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="423" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="423" pos:column="84"/></expr_stmt>
		<expr_stmt><expr><name pos:line="424" pos:column="17">ds<pos:position pos:line="424" pos:column="19"/></name><operator pos:line="424" pos:column="19">++<pos:position pos:line="424" pos:column="21"/></operator></expr>;<pos:position pos:line="424" pos:column="22"/></expr_stmt>
	}<pos:position pos:line="425" pos:column="10"/></block></for>
<comment type="block" pos:line="426" pos:column="1">/* #endif defined(HAVE_LIBSTATGRAB) */</comment>

<cpp:elif pos:line="428" pos:column="1">#<cpp:directive pos:line="428" pos:column="2">elif<pos:position pos:line="428" pos:column="6"/></cpp:directive> <expr><call><name pos:line="428" pos:column="7">defined<pos:position pos:line="428" pos:column="14"/></name><argument_list pos:line="428" pos:column="14">(<argument><expr><name pos:line="428" pos:column="15">HAVE_PERFSTAT<pos:position pos:line="428" pos:column="28"/></name></expr></argument>)<pos:position pos:line="428" pos:column="29"/></argument_list></call></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="429" pos:column="9">counter_t<pos:position pos:line="429" pos:column="18"/></name></type> <name pos:line="429" pos:column="19">read_sectors<pos:position pos:line="429" pos:column="31"/></name></decl>;<pos:position pos:line="429" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="430" pos:column="9">counter_t<pos:position pos:line="430" pos:column="18"/></name></type> <name pos:line="430" pos:column="19">write_sectors<pos:position pos:line="430" pos:column="32"/></name></decl>;<pos:position pos:line="430" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="431" pos:column="9">counter_t<pos:position pos:line="431" pos:column="18"/></name></type> <name pos:line="431" pos:column="19">read_time<pos:position pos:line="431" pos:column="28"/></name></decl>;<pos:position pos:line="431" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="432" pos:column="9">counter_t<pos:position pos:line="432" pos:column="18"/></name></type> <name pos:line="432" pos:column="19">write_time<pos:position pos:line="432" pos:column="29"/></name></decl>;<pos:position pos:line="432" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="433" pos:column="9">counter_t<pos:position pos:line="433" pos:column="18"/></name></type> <name pos:line="433" pos:column="19">read_ops<pos:position pos:line="433" pos:column="27"/></name></decl>;<pos:position pos:line="433" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="434" pos:column="9">counter_t<pos:position pos:line="434" pos:column="18"/></name></type> <name pos:line="434" pos:column="19">write_ops<pos:position pos:line="434" pos:column="28"/></name></decl>;<pos:position pos:line="434" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="435" pos:column="9">perfstat_id_t<pos:position pos:line="435" pos:column="22"/></name></type> <name pos:line="435" pos:column="23">firstpath<pos:position pos:line="435" pos:column="32"/></name></decl>;<pos:position pos:line="435" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="436" pos:column="9">int<pos:position pos:line="436" pos:column="12"/></name></type> <name pos:line="436" pos:column="13">rnumdisk<pos:position pos:line="436" pos:column="21"/></name></decl>;<pos:position pos:line="436" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="437" pos:column="9">int<pos:position pos:line="437" pos:column="12"/></name></type> <name pos:line="437" pos:column="13">i<pos:position pos:line="437" pos:column="14"/></name></decl>;<pos:position pos:line="437" pos:column="15"/></decl_stmt>

	<if pos:line="439" pos:column="9">if <condition pos:line="439" pos:column="12">(<expr><operator pos:line="439" pos:column="13">(<pos:position pos:line="439" pos:column="14"/></operator><name pos:line="439" pos:column="14">numdisk<pos:position pos:line="439" pos:column="21"/></name> <operator pos:line="439" pos:column="22">=<pos:position pos:line="439" pos:column="23"/></operator> <call><name pos:line="439" pos:column="24">perfstat_disk<pos:position pos:line="439" pos:column="37"/></name><argument_list pos:line="439" pos:column="37">(<argument><expr><name pos:line="439" pos:column="38">NULL<pos:position pos:line="439" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="439" pos:column="44">NULL<pos:position pos:line="439" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="439" pos:column="50">sizeof<argument_list pos:line="439" pos:column="56">(<argument><expr><name pos:line="439" pos:column="57">perfstat_disk_t<pos:position pos:line="439" pos:column="72"/></name></expr></argument>)<pos:position pos:line="439" pos:column="73"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="439" pos:column="75">0<pos:position pos:line="439" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="439" pos:column="77"/></argument_list></call><operator pos:line="439" pos:column="77">)<pos:position pos:line="439" pos:column="78"/></operator> <operator pos:line="439" pos:column="79">&lt;<pos:position pos:line="439" pos:column="83"/></operator> <literal type="number" pos:line="439" pos:column="81">0<pos:position pos:line="439" pos:column="82"/></literal></expr>)<pos:position pos:line="439" pos:column="83"/></condition><then pos:line="439" pos:column="83"> 
	<block pos:line="440" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="441" pos:column="17">char<pos:position pos:line="441" pos:column="21"/></name></type> <name><name pos:line="441" pos:column="22">errbuf<pos:position pos:line="441" pos:column="28"/></name><index pos:line="441" pos:column="28">[<expr><literal type="number" pos:line="441" pos:column="29">1024<pos:position pos:line="441" pos:column="33"/></literal></expr>]<pos:position pos:line="441" pos:column="34"/></index></name></decl>;<pos:position pos:line="441" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="442" pos:column="17">WARNING<pos:position pos:line="442" pos:column="24"/></name> <argument_list pos:line="442" pos:column="25">(<argument><expr><literal type="string" pos:line="442" pos:column="26">"disk plugin: perfstat_disk: %s"<pos:position pos:line="442" pos:column="58"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="443" pos:column="33">sstrerror<pos:position pos:line="443" pos:column="42"/></name> <argument_list pos:line="443" pos:column="43">(<argument><expr><name pos:line="443" pos:column="44">errno<pos:position pos:line="443" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="443" pos:column="51">errbuf<pos:position pos:line="443" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="443" pos:column="59">sizeof <argument_list pos:line="443" pos:column="66">(<argument><expr><name pos:line="443" pos:column="67">errbuf<pos:position pos:line="443" pos:column="73"/></name></expr></argument>)<pos:position pos:line="443" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="443" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="443" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="443" pos:column="77"/></expr_stmt>
		<return pos:line="444" pos:column="17">return <expr><operator pos:line="444" pos:column="24">(<pos:position pos:line="444" pos:column="25"/></operator><operator pos:line="444" pos:column="25">-<pos:position pos:line="444" pos:column="26"/></operator><literal type="number" pos:line="444" pos:column="26">1<pos:position pos:line="444" pos:column="27"/></literal><operator pos:line="444" pos:column="27">)<pos:position pos:line="444" pos:column="28"/></operator></expr>;<pos:position pos:line="444" pos:column="29"/></return>
	}<pos:position pos:line="445" pos:column="10"/></block></then></if>

	<if pos:line="447" pos:column="9">if <condition pos:line="447" pos:column="12">(<expr><name pos:line="447" pos:column="13">numdisk<pos:position pos:line="447" pos:column="20"/></name> <operator pos:line="447" pos:column="21">!=<pos:position pos:line="447" pos:column="23"/></operator> <name pos:line="447" pos:column="24">pnumdisk<pos:position pos:line="447" pos:column="32"/></name> <operator pos:line="447" pos:column="33">||<pos:position pos:line="447" pos:column="35"/></operator> <name pos:line="447" pos:column="36">stat_disk<pos:position pos:line="447" pos:column="45"/></name><operator pos:line="447" pos:column="45">==<pos:position pos:line="447" pos:column="47"/></operator><name pos:line="447" pos:column="47">NULL<pos:position pos:line="447" pos:column="51"/></name></expr>)<pos:position pos:line="447" pos:column="52"/></condition><then pos:line="447" pos:column="52"> <block pos:line="447" pos:column="53">{
		<if pos:line="448" pos:column="17">if <condition pos:line="448" pos:column="20">(<expr><name pos:line="448" pos:column="21">stat_disk<pos:position pos:line="448" pos:column="30"/></name><operator pos:line="448" pos:column="30">!=<pos:position pos:line="448" pos:column="32"/></operator><name pos:line="448" pos:column="32">NULL<pos:position pos:line="448" pos:column="36"/></name></expr>)<pos:position pos:line="448" pos:column="37"/></condition><then pos:line="448" pos:column="37"> 
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="449" pos:column="25">free<pos:position pos:line="449" pos:column="29"/></name><argument_list pos:line="449" pos:column="29">(<argument><expr><name pos:line="449" pos:column="30">stat_disk<pos:position pos:line="449" pos:column="39"/></name></expr></argument>)<pos:position pos:line="449" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="449" pos:column="41"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="450" pos:column="17">stat_disk<pos:position pos:line="450" pos:column="26"/></name> <operator pos:line="450" pos:column="27">=<pos:position pos:line="450" pos:column="28"/></operator> <operator pos:line="450" pos:column="29">(<pos:position pos:line="450" pos:column="30"/></operator><name pos:line="450" pos:column="30">perfstat_disk_t<pos:position pos:line="450" pos:column="45"/></name> <operator pos:line="450" pos:column="46">*<pos:position pos:line="450" pos:column="47"/></operator><operator pos:line="450" pos:column="47">)<pos:position pos:line="450" pos:column="48"/></operator><call><name pos:line="450" pos:column="48">calloc<pos:position pos:line="450" pos:column="54"/></name><argument_list pos:line="450" pos:column="54">(<argument><expr><name pos:line="450" pos:column="55">numdisk<pos:position pos:line="450" pos:column="62"/></name></expr></argument>, <argument><expr><sizeof pos:line="450" pos:column="64">sizeof<argument_list pos:line="450" pos:column="70">(<argument><expr><name pos:line="450" pos:column="71">perfstat_disk_t<pos:position pos:line="450" pos:column="86"/></name></expr></argument>)<pos:position pos:line="450" pos:column="87"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="450" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="450" pos:column="89"/></expr_stmt>
	}<pos:position pos:line="451" pos:column="10"/></block></then></if> 
	<expr_stmt><expr><name pos:line="452" pos:column="9">pnumdisk<pos:position pos:line="452" pos:column="17"/></name> <operator pos:line="452" pos:column="18">=<pos:position pos:line="452" pos:column="19"/></operator> <name pos:line="452" pos:column="20">numdisk<pos:position pos:line="452" pos:column="27"/></name></expr>;<pos:position pos:line="452" pos:column="28"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="454" pos:column="9">firstpath<pos:position pos:line="454" pos:column="18"/></name><operator pos:line="454" pos:column="18">.<pos:position pos:line="454" pos:column="19"/></operator><name pos:line="454" pos:column="19">name<pos:position pos:line="454" pos:column="23"/></name><index pos:line="454" pos:column="23">[<expr><literal type="number" pos:line="454" pos:column="24">0<pos:position pos:line="454" pos:column="25"/></literal></expr>]<pos:position pos:line="454" pos:column="26"/></index></name><operator pos:line="454" pos:column="26">=<pos:position pos:line="454" pos:column="27"/></operator><literal type="char" pos:line="454" pos:column="27">'\0'<pos:position pos:line="454" pos:column="31"/></literal></expr>;<pos:position pos:line="454" pos:column="32"/></expr_stmt>
	<if pos:line="455" pos:column="9">if <condition pos:line="455" pos:column="12">(<expr><operator pos:line="455" pos:column="13">(<pos:position pos:line="455" pos:column="14"/></operator><name pos:line="455" pos:column="14">rnumdisk<pos:position pos:line="455" pos:column="22"/></name> <operator pos:line="455" pos:column="23">=<pos:position pos:line="455" pos:column="24"/></operator> <call><name pos:line="455" pos:column="25">perfstat_disk<pos:position pos:line="455" pos:column="38"/></name><argument_list pos:line="455" pos:column="38">(<argument><expr><operator pos:line="455" pos:column="39">&amp;<pos:position pos:line="455" pos:column="44"/></operator><name pos:line="455" pos:column="40">firstpath<pos:position pos:line="455" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="455" pos:column="51">stat_disk<pos:position pos:line="455" pos:column="60"/></name></expr></argument>, <argument><expr><sizeof pos:line="455" pos:column="62">sizeof<argument_list pos:line="455" pos:column="68">(<argument><expr><name pos:line="455" pos:column="69">perfstat_disk_t<pos:position pos:line="455" pos:column="84"/></name></expr></argument>)<pos:position pos:line="455" pos:column="85"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="455" pos:column="87">numdisk<pos:position pos:line="455" pos:column="94"/></name></expr></argument>)<pos:position pos:line="455" pos:column="95"/></argument_list></call><operator pos:line="455" pos:column="95">)<pos:position pos:line="455" pos:column="96"/></operator> <operator pos:line="455" pos:column="97">&lt;<pos:position pos:line="455" pos:column="101"/></operator> <literal type="number" pos:line="455" pos:column="99">0<pos:position pos:line="455" pos:column="100"/></literal></expr>)<pos:position pos:line="455" pos:column="101"/></condition><then pos:line="455" pos:column="101"> 
	<block pos:line="456" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="457" pos:column="17">char<pos:position pos:line="457" pos:column="21"/></name></type> <name><name pos:line="457" pos:column="22">errbuf<pos:position pos:line="457" pos:column="28"/></name><index pos:line="457" pos:column="28">[<expr><literal type="number" pos:line="457" pos:column="29">1024<pos:position pos:line="457" pos:column="33"/></literal></expr>]<pos:position pos:line="457" pos:column="34"/></index></name></decl>;<pos:position pos:line="457" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="458" pos:column="17">WARNING<pos:position pos:line="458" pos:column="24"/></name> <argument_list pos:line="458" pos:column="25">(<argument><expr><literal type="string" pos:line="458" pos:column="26">"disk plugin: perfstat_disk : %s"<pos:position pos:line="458" pos:column="59"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="459" pos:column="33">sstrerror<pos:position pos:line="459" pos:column="42"/></name> <argument_list pos:line="459" pos:column="43">(<argument><expr><name pos:line="459" pos:column="44">errno<pos:position pos:line="459" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="459" pos:column="51">errbuf<pos:position pos:line="459" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="459" pos:column="59">sizeof <argument_list pos:line="459" pos:column="66">(<argument><expr><name pos:line="459" pos:column="67">errbuf<pos:position pos:line="459" pos:column="73"/></name></expr></argument>)<pos:position pos:line="459" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="459" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="459" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="459" pos:column="77"/></expr_stmt>
		<return pos:line="460" pos:column="17">return <expr><operator pos:line="460" pos:column="24">(<pos:position pos:line="460" pos:column="25"/></operator><operator pos:line="460" pos:column="25">-<pos:position pos:line="460" pos:column="26"/></operator><literal type="number" pos:line="460" pos:column="26">1<pos:position pos:line="460" pos:column="27"/></literal><operator pos:line="460" pos:column="27">)<pos:position pos:line="460" pos:column="28"/></operator></expr>;<pos:position pos:line="460" pos:column="29"/></return>
	}<pos:position pos:line="461" pos:column="10"/></block></then></if>

	<for pos:line="463" pos:column="9">for <control pos:line="463" pos:column="13">(<init><expr><name pos:line="463" pos:column="14">i<pos:position pos:line="463" pos:column="15"/></name> <operator pos:line="463" pos:column="16">=<pos:position pos:line="463" pos:column="17"/></operator> <literal type="number" pos:line="463" pos:column="18">0<pos:position pos:line="463" pos:column="19"/></literal></expr>;<pos:position pos:line="463" pos:column="20"/></init> <condition><expr><name pos:line="463" pos:column="21">i<pos:position pos:line="463" pos:column="22"/></name> <operator pos:line="463" pos:column="23">&lt;<pos:position pos:line="463" pos:column="27"/></operator> <name pos:line="463" pos:column="25">rnumdisk<pos:position pos:line="463" pos:column="33"/></name></expr>;<pos:position pos:line="463" pos:column="34"/></condition> <incr><expr><name pos:line="463" pos:column="35">i<pos:position pos:line="463" pos:column="36"/></name><operator pos:line="463" pos:column="36">++<pos:position pos:line="463" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="463" pos:column="39"/></control> 
	<block pos:line="464" pos:column="9">{
		<expr_stmt><expr><name pos:line="465" pos:column="17">read_sectors<pos:position pos:line="465" pos:column="29"/></name> <operator pos:line="465" pos:column="30">=<pos:position pos:line="465" pos:column="31"/></operator> <name><name pos:line="465" pos:column="32">stat_disk<pos:position pos:line="465" pos:column="41"/></name><index pos:line="465" pos:column="41">[<expr><name pos:line="465" pos:column="42">i<pos:position pos:line="465" pos:column="43"/></name></expr>]<pos:position pos:line="465" pos:column="44"/></index></name><operator pos:line="465" pos:column="44">.<pos:position pos:line="465" pos:column="45"/></operator><name pos:line="465" pos:column="45">rblks<pos:position pos:line="465" pos:column="50"/></name><operator pos:line="465" pos:column="50">*<pos:position pos:line="465" pos:column="51"/></operator><name><name pos:line="465" pos:column="51">stat_disk<pos:position pos:line="465" pos:column="60"/></name><index pos:line="465" pos:column="60">[<expr><name pos:line="465" pos:column="61">i<pos:position pos:line="465" pos:column="62"/></name></expr>]<pos:position pos:line="465" pos:column="63"/></index></name><operator pos:line="465" pos:column="63">.<pos:position pos:line="465" pos:column="64"/></operator><name pos:line="465" pos:column="64">bsize<pos:position pos:line="465" pos:column="69"/></name></expr>;<pos:position pos:line="465" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name pos:line="466" pos:column="17">write_sectors<pos:position pos:line="466" pos:column="30"/></name> <operator pos:line="466" pos:column="31">=<pos:position pos:line="466" pos:column="32"/></operator> <name><name pos:line="466" pos:column="33">stat_disk<pos:position pos:line="466" pos:column="42"/></name><index pos:line="466" pos:column="42">[<expr><name pos:line="466" pos:column="43">i<pos:position pos:line="466" pos:column="44"/></name></expr>]<pos:position pos:line="466" pos:column="45"/></index></name><operator pos:line="466" pos:column="45">.<pos:position pos:line="466" pos:column="46"/></operator><name pos:line="466" pos:column="46">wblks<pos:position pos:line="466" pos:column="51"/></name><operator pos:line="466" pos:column="51">*<pos:position pos:line="466" pos:column="52"/></operator><name><name pos:line="466" pos:column="52">stat_disk<pos:position pos:line="466" pos:column="61"/></name><index pos:line="466" pos:column="61">[<expr><name pos:line="466" pos:column="62">i<pos:position pos:line="466" pos:column="63"/></name></expr>]<pos:position pos:line="466" pos:column="64"/></index></name><operator pos:line="466" pos:column="64">.<pos:position pos:line="466" pos:column="65"/></operator><name pos:line="466" pos:column="65">bsize<pos:position pos:line="466" pos:column="70"/></name></expr>;<pos:position pos:line="466" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="467" pos:column="17">disk_submit<pos:position pos:line="467" pos:column="28"/></name> <argument_list pos:line="467" pos:column="29">(<argument><expr><name><name pos:line="467" pos:column="30">stat_disk<pos:position pos:line="467" pos:column="39"/></name><index pos:line="467" pos:column="39">[<expr><name pos:line="467" pos:column="40">i<pos:position pos:line="467" pos:column="41"/></name></expr>]<pos:position pos:line="467" pos:column="42"/></index></name><operator pos:line="467" pos:column="42">.<pos:position pos:line="467" pos:column="43"/></operator><name pos:line="467" pos:column="43">name<pos:position pos:line="467" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="467" pos:column="49">"disk_octets"<pos:position pos:line="467" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="467" pos:column="64">read_sectors<pos:position pos:line="467" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="467" pos:column="78">write_sectors<pos:position pos:line="467" pos:column="91"/></name></expr></argument>)<pos:position pos:line="467" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="467" pos:column="93"/></expr_stmt>

		<expr_stmt><expr><name pos:line="469" pos:column="17">read_ops<pos:position pos:line="469" pos:column="25"/></name> <operator pos:line="469" pos:column="26">=<pos:position pos:line="469" pos:column="27"/></operator> <name><name pos:line="469" pos:column="28">stat_disk<pos:position pos:line="469" pos:column="37"/></name><index pos:line="469" pos:column="37">[<expr><name pos:line="469" pos:column="38">i<pos:position pos:line="469" pos:column="39"/></name></expr>]<pos:position pos:line="469" pos:column="40"/></index></name><operator pos:line="469" pos:column="40">.<pos:position pos:line="469" pos:column="41"/></operator><name pos:line="469" pos:column="41">xrate<pos:position pos:line="469" pos:column="46"/></name></expr>;<pos:position pos:line="469" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="470" pos:column="17">write_ops<pos:position pos:line="470" pos:column="26"/></name> <operator pos:line="470" pos:column="27">=<pos:position pos:line="470" pos:column="28"/></operator> <name><name pos:line="470" pos:column="29">stat_disk<pos:position pos:line="470" pos:column="38"/></name><index pos:line="470" pos:column="38">[<expr><name pos:line="470" pos:column="39">i<pos:position pos:line="470" pos:column="40"/></name></expr>]<pos:position pos:line="470" pos:column="41"/></index></name><operator pos:line="470" pos:column="41">.<pos:position pos:line="470" pos:column="42"/></operator><name pos:line="470" pos:column="42">xfers<pos:position pos:line="470" pos:column="47"/></name> <operator pos:line="470" pos:column="48">-<pos:position pos:line="470" pos:column="49"/></operator> <name><name pos:line="470" pos:column="50">stat_disk<pos:position pos:line="470" pos:column="59"/></name><index pos:line="470" pos:column="59">[<expr><name pos:line="470" pos:column="60">i<pos:position pos:line="470" pos:column="61"/></name></expr>]<pos:position pos:line="470" pos:column="62"/></index></name><operator pos:line="470" pos:column="62">.<pos:position pos:line="470" pos:column="63"/></operator><name pos:line="470" pos:column="63">xrate<pos:position pos:line="470" pos:column="68"/></name></expr>;<pos:position pos:line="470" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="471" pos:column="17">disk_submit<pos:position pos:line="471" pos:column="28"/></name> <argument_list pos:line="471" pos:column="29">(<argument><expr><name><name pos:line="471" pos:column="30">stat_disk<pos:position pos:line="471" pos:column="39"/></name><index pos:line="471" pos:column="39">[<expr><name pos:line="471" pos:column="40">i<pos:position pos:line="471" pos:column="41"/></name></expr>]<pos:position pos:line="471" pos:column="42"/></index></name><operator pos:line="471" pos:column="42">.<pos:position pos:line="471" pos:column="43"/></operator><name pos:line="471" pos:column="43">name<pos:position pos:line="471" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="471" pos:column="49">"disk_ops"<pos:position pos:line="471" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="471" pos:column="61">read_ops<pos:position pos:line="471" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="471" pos:column="71">write_ops<pos:position pos:line="471" pos:column="80"/></name></expr></argument>)<pos:position pos:line="471" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="471" pos:column="82"/></expr_stmt>

		<expr_stmt><expr><name pos:line="473" pos:column="17">read_time<pos:position pos:line="473" pos:column="26"/></name> <operator pos:line="473" pos:column="27">=<pos:position pos:line="473" pos:column="28"/></operator> <name><name pos:line="473" pos:column="29">stat_disk<pos:position pos:line="473" pos:column="38"/></name><index pos:line="473" pos:column="38">[<expr><name pos:line="473" pos:column="39">i<pos:position pos:line="473" pos:column="40"/></name></expr>]<pos:position pos:line="473" pos:column="41"/></index></name><operator pos:line="473" pos:column="41">.<pos:position pos:line="473" pos:column="42"/></operator><name pos:line="473" pos:column="42">rserv<pos:position pos:line="473" pos:column="47"/></name></expr>;<pos:position pos:line="473" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name pos:line="474" pos:column="17">read_time<pos:position pos:line="474" pos:column="26"/></name> <operator pos:line="474" pos:column="27">*=<pos:position pos:line="474" pos:column="29"/></operator> <operator pos:line="474" pos:column="30">(<pos:position pos:line="474" pos:column="31"/></operator><call pos:line="474" pos:column="31">(<name pos:line="474" pos:column="32">double<pos:position pos:line="474" pos:column="38"/></name>)<argument_list pos:line="474" pos:column="39">(<argument><expr><name><name pos:line="474" pos:column="40">_system_configuration<pos:position pos:line="474" pos:column="61"/></name><operator pos:line="474" pos:column="61">.<pos:position pos:line="474" pos:column="62"/></operator><name pos:line="474" pos:column="62">Xint<pos:position pos:line="474" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="474" pos:column="67"/></argument_list></call><operator pos:line="474" pos:column="67">/<pos:position pos:line="474" pos:column="68"/></operator><call pos:line="474" pos:column="68">(<name pos:line="474" pos:column="69">double<pos:position pos:line="474" pos:column="75"/></name>)<argument_list pos:line="474" pos:column="76">(<argument><expr><name><name pos:line="474" pos:column="77">_system_configuration<pos:position pos:line="474" pos:column="98"/></name><operator pos:line="474" pos:column="98">.<pos:position pos:line="474" pos:column="99"/></operator><name pos:line="474" pos:column="99">Xfrac<pos:position pos:line="474" pos:column="104"/></name></name></expr></argument>)<pos:position pos:line="474" pos:column="105"/></argument_list></call><operator pos:line="474" pos:column="105">)<pos:position pos:line="474" pos:column="106"/></operator> <operator pos:line="474" pos:column="107">/<pos:position pos:line="474" pos:column="108"/></operator> <literal type="number" pos:line="474" pos:column="109">1000000.0<pos:position pos:line="474" pos:column="118"/></literal></expr>;<pos:position pos:line="474" pos:column="119"/></expr_stmt>
		<expr_stmt><expr><name pos:line="475" pos:column="17">write_time<pos:position pos:line="475" pos:column="27"/></name> <operator pos:line="475" pos:column="28">=<pos:position pos:line="475" pos:column="29"/></operator> <name><name pos:line="475" pos:column="30">stat_disk<pos:position pos:line="475" pos:column="39"/></name><index pos:line="475" pos:column="39">[<expr><name pos:line="475" pos:column="40">i<pos:position pos:line="475" pos:column="41"/></name></expr>]<pos:position pos:line="475" pos:column="42"/></index></name><operator pos:line="475" pos:column="42">.<pos:position pos:line="475" pos:column="43"/></operator><name pos:line="475" pos:column="43">wserv<pos:position pos:line="475" pos:column="48"/></name></expr>;<pos:position pos:line="475" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="476" pos:column="17">write_time<pos:position pos:line="476" pos:column="27"/></name> <operator pos:line="476" pos:column="28">*=<pos:position pos:line="476" pos:column="30"/></operator> <operator pos:line="476" pos:column="31">(<pos:position pos:line="476" pos:column="32"/></operator><call pos:line="476" pos:column="32">(<name pos:line="476" pos:column="33">double<pos:position pos:line="476" pos:column="39"/></name>)<argument_list pos:line="476" pos:column="40">(<argument><expr><name><name pos:line="476" pos:column="41">_system_configuration<pos:position pos:line="476" pos:column="62"/></name><operator pos:line="476" pos:column="62">.<pos:position pos:line="476" pos:column="63"/></operator><name pos:line="476" pos:column="63">Xint<pos:position pos:line="476" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="476" pos:column="68"/></argument_list></call><operator pos:line="476" pos:column="68">/<pos:position pos:line="476" pos:column="69"/></operator><call pos:line="476" pos:column="69">(<name pos:line="476" pos:column="70">double<pos:position pos:line="476" pos:column="76"/></name>)<argument_list pos:line="476" pos:column="77">(<argument><expr><name><name pos:line="476" pos:column="78">_system_configuration<pos:position pos:line="476" pos:column="99"/></name><operator pos:line="476" pos:column="99">.<pos:position pos:line="476" pos:column="100"/></operator><name pos:line="476" pos:column="100">Xfrac<pos:position pos:line="476" pos:column="105"/></name></name></expr></argument>)<pos:position pos:line="476" pos:column="106"/></argument_list></call><operator pos:line="476" pos:column="106">)<pos:position pos:line="476" pos:column="107"/></operator> <operator pos:line="476" pos:column="108">/<pos:position pos:line="476" pos:column="109"/></operator> <literal type="number" pos:line="476" pos:column="110">1000000.0<pos:position pos:line="476" pos:column="119"/></literal></expr>;<pos:position pos:line="476" pos:column="120"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="477" pos:column="17">disk_submit<pos:position pos:line="477" pos:column="28"/></name> <argument_list pos:line="477" pos:column="29">(<argument><expr><name><name pos:line="477" pos:column="30">stat_disk<pos:position pos:line="477" pos:column="39"/></name><index pos:line="477" pos:column="39">[<expr><name pos:line="477" pos:column="40">i<pos:position pos:line="477" pos:column="41"/></name></expr>]<pos:position pos:line="477" pos:column="42"/></index></name><operator pos:line="477" pos:column="42">.<pos:position pos:line="477" pos:column="43"/></operator><name pos:line="477" pos:column="43">name<pos:position pos:line="477" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="477" pos:column="49">"disk_time"<pos:position pos:line="477" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="477" pos:column="62">read_time<pos:position pos:line="477" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="477" pos:column="73">write_time<pos:position pos:line="477" pos:column="83"/></name></expr></argument>)<pos:position pos:line="477" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="477" pos:column="85"/></expr_stmt>
	}<pos:position pos:line="478" pos:column="10"/></block></for>
<cpp:endif pos:line="479" pos:column="1">#<cpp:directive pos:line="479" pos:column="2">endif<pos:position pos:line="479" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="479" pos:column="8">/* defined(HAVE_PERFSTAT) */</comment>

	<return pos:line="481" pos:column="9">return <expr><operator pos:line="481" pos:column="16">(<pos:position pos:line="481" pos:column="17"/></operator><literal type="number" pos:line="481" pos:column="17">0<pos:position pos:line="481" pos:column="18"/></literal><operator pos:line="481" pos:column="18">)<pos:position pos:line="481" pos:column="19"/></operator></expr>;<pos:position pos:line="481" pos:column="20"/></return>
}<pos:position pos:line="482" pos:column="2"/></block></function></unit>

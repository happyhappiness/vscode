<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_805_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">handle_getthreshold<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">FILE<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">fh<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">buffer<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <block pos:line="1" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">command<pos:position pos:line="2" pos:column="16"/></name></decl>;<pos:position pos:line="2" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">identifier<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">identifier_copy<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">host<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">plugin<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">plugin_instance<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">type<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">type_instance<pos:position pos:line="10" pos:column="22"/></name></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">threshold_t<pos:position pos:line="12" pos:column="14"/></name></type> <name pos:line="12" pos:column="15">threshold<pos:position pos:line="12" pos:column="24"/></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">status<pos:position pos:line="14" pos:column="13"/></name></decl>;<pos:position pos:line="14" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">size_t<pos:position pos:line="15" pos:column="9"/></name></type> <name pos:line="15" pos:column="10">i<pos:position pos:line="15" pos:column="11"/></name></decl>;<pos:position pos:line="15" pos:column="12"/></decl_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">fh<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">==<pos:position pos:line="17" pos:column="13"/></operator> <name pos:line="17" pos:column="14">NULL<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">)<pos:position pos:line="17" pos:column="19"/></operator> <operator pos:line="17" pos:column="20">||<pos:position pos:line="17" pos:column="22"/></operator> <operator pos:line="17" pos:column="23">(<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">buffer<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">==<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">NULL<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">)<pos:position pos:line="17" pos:column="39"/></operator></expr>)<pos:position pos:line="17" pos:column="40"/></condition><then pos:line="17" pos:column="40">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><operator pos:line="18" pos:column="13">-<pos:position pos:line="18" pos:column="14"/></operator><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal><operator pos:line="18" pos:column="15">)<pos:position pos:line="18" pos:column="16"/></operator></expr>;<pos:position pos:line="18" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">DEBUG<pos:position pos:line="20" pos:column="8"/></name><argument_list pos:line="20" pos:column="8">(<argument><expr><literal type="string" pos:line="20" pos:column="9">"utils_cmd_getthreshold: handle_getthreshold (fh = %p, buffer = %s);"<pos:position pos:line="20" pos:column="78"/></literal></expr></argument>,
        <argument><expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">void<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">*<pos:position pos:line="21" pos:column="16"/></operator><operator pos:line="21" pos:column="16">)<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">fh<pos:position pos:line="21" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="21">buffer<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name pos:line="23" pos:column="3">command<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <name pos:line="23" pos:column="13">NULL<pos:position pos:line="23" pos:column="17"/></name></expr>;<pos:position pos:line="23" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="24" pos:column="3">status<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <call><name pos:line="24" pos:column="12">parse_string<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><operator pos:line="24" pos:column="25">&amp;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="26">buffer<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="34">&amp;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="35">command<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">status<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">!=<pos:position pos:line="25" pos:column="16"/></operator> <literal type="number" pos:line="25" pos:column="17">0<pos:position pos:line="25" pos:column="18"/></literal></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19"> <block pos:line="25" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">print_to_socket<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">fh<pos:position pos:line="26" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="25">"-1 Cannot parse command.\n"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><operator pos:line="27" pos:column="13">-<pos:position pos:line="27" pos:column="14"/></operator><literal type="number" pos:line="27" pos:column="14">1<pos:position pos:line="27" pos:column="15"/></literal><operator pos:line="27" pos:column="15">)<pos:position pos:line="27" pos:column="16"/></operator></expr>;<pos:position pos:line="27" pos:column="17"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">assert<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">(<argument><expr><name pos:line="29" pos:column="10">command<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">!=<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">NULL<pos:position pos:line="29" pos:column="25"/></name></expr></argument>)<pos:position pos:line="29" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><call><name pos:line="31" pos:column="7">strcasecmp<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><literal type="string" pos:line="31" pos:column="18">"GETTHRESHOLD"<pos:position pos:line="31" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">command<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call> <operator pos:line="31" pos:column="43">!=<pos:position pos:line="31" pos:column="45"/></operator> <literal type="number" pos:line="31" pos:column="46">0<pos:position pos:line="31" pos:column="47"/></literal></expr>)<pos:position pos:line="31" pos:column="48"/></condition><then pos:line="31" pos:column="48"> <block pos:line="31" pos:column="49">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">print_to_socket<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">fh<pos:position pos:line="32" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="25">"-1 Unexpected command: `%s'.\n"<pos:position pos:line="32" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="59">command<pos:position pos:line="32" pos:column="66"/></name></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="68"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><operator pos:line="33" pos:column="13">-<pos:position pos:line="33" pos:column="14"/></operator><literal type="number" pos:line="33" pos:column="14">1<pos:position pos:line="33" pos:column="15"/></literal><operator pos:line="33" pos:column="15">)<pos:position pos:line="33" pos:column="16"/></operator></expr>;<pos:position pos:line="33" pos:column="17"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="36" pos:column="3">identifier<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <name pos:line="36" pos:column="16">NULL<pos:position pos:line="36" pos:column="20"/></name></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="37" pos:column="3">status<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <call><name pos:line="37" pos:column="12">parse_string<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><operator pos:line="37" pos:column="25">&amp;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="26">buffer<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="34">&amp;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="35">identifier<pos:position pos:line="37" pos:column="45"/></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name pos:line="38" pos:column="7">status<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">!=<pos:position pos:line="38" pos:column="16"/></operator> <literal type="number" pos:line="38" pos:column="17">0<pos:position pos:line="38" pos:column="18"/></literal></expr>)<pos:position pos:line="38" pos:column="19"/></condition><then pos:line="38" pos:column="19"> <block pos:line="38" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">print_to_socket<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name pos:line="39" pos:column="21">fh<pos:position pos:line="39" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="25">"-1 Cannot parse identifier.\n"<pos:position pos:line="39" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="58"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><operator pos:line="40" pos:column="12">(<pos:position pos:line="40" pos:column="13"/></operator><operator pos:line="40" pos:column="13">-<pos:position pos:line="40" pos:column="14"/></operator><literal type="number" pos:line="40" pos:column="14">1<pos:position pos:line="40" pos:column="15"/></literal><operator pos:line="40" pos:column="15">)<pos:position pos:line="40" pos:column="16"/></operator></expr>;<pos:position pos:line="40" pos:column="17"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">assert<pos:position pos:line="42" pos:column="9"/></name><argument_list pos:line="42" pos:column="9">(<argument><expr><name pos:line="42" pos:column="10">identifier<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">!=<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="24">NULL<pos:position pos:line="42" pos:column="28"/></name></expr></argument>)<pos:position pos:line="42" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="30"/></expr_stmt>

  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><operator pos:line="44" pos:column="7">*<pos:position pos:line="44" pos:column="8"/></operator><name pos:line="44" pos:column="8">buffer<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">!=<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal></expr>)<pos:position pos:line="44" pos:column="20"/></condition><then pos:line="44" pos:column="20"> <block pos:line="44" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">print_to_socket<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><name pos:line="45" pos:column="21">fh<pos:position pos:line="45" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="25">"-1 Garbage after end of command: %s\n"<pos:position pos:line="45" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="66">buffer<pos:position pos:line="45" pos:column="72"/></name></expr></argument>)<pos:position pos:line="45" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="74"/></expr_stmt>
    <return pos:line="46" pos:column="5">return <expr><operator pos:line="46" pos:column="12">(<pos:position pos:line="46" pos:column="13"/></operator><operator pos:line="46" pos:column="13">-<pos:position pos:line="46" pos:column="14"/></operator><literal type="number" pos:line="46" pos:column="14">1<pos:position pos:line="46" pos:column="15"/></literal><operator pos:line="46" pos:column="15">)<pos:position pos:line="46" pos:column="16"/></operator></expr>;<pos:position pos:line="46" pos:column="17"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="49" pos:column="3">/* parse_identifier() modifies its first argument,
   * returning pointers into it */</comment>
  <expr_stmt><expr><name pos:line="51" pos:column="3">identifier_copy<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <call><name pos:line="51" pos:column="21">sstrdup<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">identifier<pos:position pos:line="51" pos:column="39"/></name></expr></argument>)<pos:position pos:line="51" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><name pos:line="53" pos:column="3">status<pos:position pos:line="53" pos:column="9"/></name> <operator pos:line="53" pos:column="10">=<pos:position pos:line="53" pos:column="11"/></operator> <call><name pos:line="53" pos:column="12">parse_identifier<pos:position pos:line="53" pos:column="28"/></name><argument_list pos:line="53" pos:column="28">(<argument><expr><name pos:line="53" pos:column="29">identifier_copy<pos:position pos:line="53" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="46">&amp;<pos:position pos:line="53" pos:column="51"/></operator><name pos:line="53" pos:column="47">host<pos:position pos:line="53" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="53">&amp;<pos:position pos:line="53" pos:column="58"/></operator><name pos:line="53" pos:column="54">plugin<pos:position pos:line="53" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="62">&amp;<pos:position pos:line="53" pos:column="67"/></operator><name pos:line="53" pos:column="63">plugin_instance<pos:position pos:line="53" pos:column="78"/></name></expr></argument>,
                            <argument><expr><operator pos:line="54" pos:column="29">&amp;<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="30">type<pos:position pos:line="54" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="36">&amp;<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="37">type_instance<pos:position pos:line="54" pos:column="50"/></name></expr></argument>,
                            <comment type="block" pos:line="55" pos:column="29">/* default_host = */</comment> <argument><expr><name pos:line="55" pos:column="50">NULL<pos:position pos:line="55" pos:column="54"/></name></expr></argument>)<pos:position pos:line="55" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="56"/></expr_stmt>
  <if pos:line="56" pos:column="3">if <condition pos:line="56" pos:column="6">(<expr><name pos:line="56" pos:column="7">status<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">!=<pos:position pos:line="56" pos:column="16"/></operator> <literal type="number" pos:line="56" pos:column="17">0<pos:position pos:line="56" pos:column="18"/></literal></expr>)<pos:position pos:line="56" pos:column="19"/></condition><then pos:line="56" pos:column="19"> <block pos:line="56" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">DEBUG<pos:position pos:line="57" pos:column="10"/></name><argument_list pos:line="57" pos:column="10">(<argument><expr><literal type="string" pos:line="57" pos:column="11">"handle_getthreshold: Cannot parse identifier `%s'."<pos:position pos:line="57" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="65">identifier<pos:position pos:line="57" pos:column="75"/></name></expr></argument>)<pos:position pos:line="57" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">print_to_socket<pos:position pos:line="58" pos:column="20"/></name><argument_list pos:line="58" pos:column="20">(<argument><expr><name pos:line="58" pos:column="21">fh<pos:position pos:line="58" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="25">"-1 Cannot parse identifier `%s'.\n"<pos:position pos:line="58" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="63">identifier<pos:position pos:line="58" pos:column="73"/></name></expr></argument>)<pos:position pos:line="58" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">sfree<pos:position pos:line="59" pos:column="10"/></name><argument_list pos:line="59" pos:column="10">(<argument><expr><name pos:line="59" pos:column="11">identifier_copy<pos:position pos:line="59" pos:column="26"/></name></expr></argument>)<pos:position pos:line="59" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="28"/></expr_stmt>
    <return pos:line="60" pos:column="5">return <expr><operator pos:line="60" pos:column="12">(<pos:position pos:line="60" pos:column="13"/></operator><operator pos:line="60" pos:column="13">-<pos:position pos:line="60" pos:column="14"/></operator><literal type="number" pos:line="60" pos:column="14">1<pos:position pos:line="60" pos:column="15"/></literal><operator pos:line="60" pos:column="15">)<pos:position pos:line="60" pos:column="16"/></operator></expr>;<pos:position pos:line="60" pos:column="17"/></return>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="63" pos:column="3">value_list_t<pos:position pos:line="63" pos:column="15"/></name></type> <name pos:line="63" pos:column="16">vl<pos:position pos:line="63" pos:column="18"/></name> <init pos:line="63" pos:column="19">= <expr><block pos:line="63" pos:column="21">{<expr><operator pos:line="63" pos:column="22">.<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="23">values<pos:position pos:line="63" pos:column="29"/></name> <operator pos:line="63" pos:column="30">=<pos:position pos:line="63" pos:column="31"/></operator> <name pos:line="63" pos:column="32">NULL<pos:position pos:line="63" pos:column="36"/></name></expr>}<pos:position pos:line="63" pos:column="37"/></block></expr></init></decl>;<pos:position pos:line="63" pos:column="38"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">sstrncpy<pos:position pos:line="64" pos:column="11"/></name><argument_list pos:line="64" pos:column="11">(<argument><expr><name><name pos:line="64" pos:column="12">vl<pos:position pos:line="64" pos:column="14"/></name><operator pos:line="64" pos:column="14">.<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="15">host<pos:position pos:line="64" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="21">host<pos:position pos:line="64" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="27">sizeof<argument_list pos:line="64" pos:column="33">(<argument><expr><name><name pos:line="64" pos:column="34">vl<pos:position pos:line="64" pos:column="36"/></name><operator pos:line="64" pos:column="36">.<pos:position pos:line="64" pos:column="37"/></operator><name pos:line="64" pos:column="37">host<pos:position pos:line="64" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">sstrncpy<pos:position pos:line="65" pos:column="11"/></name><argument_list pos:line="65" pos:column="11">(<argument><expr><name><name pos:line="65" pos:column="12">vl<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">.<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="15">plugin<pos:position pos:line="65" pos:column="21"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="23">plugin<pos:position pos:line="65" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="31">sizeof<argument_list pos:line="65" pos:column="37">(<argument><expr><name><name pos:line="65" pos:column="38">vl<pos:position pos:line="65" pos:column="40"/></name><operator pos:line="65" pos:column="40">.<pos:position pos:line="65" pos:column="41"/></operator><name pos:line="65" pos:column="41">plugin<pos:position pos:line="65" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="50"/></expr_stmt>
  <if pos:line="66" pos:column="3">if <condition pos:line="66" pos:column="6">(<expr><name pos:line="66" pos:column="7">plugin_instance<pos:position pos:line="66" pos:column="22"/></name> <operator pos:line="66" pos:column="23">!=<pos:position pos:line="66" pos:column="25"/></operator> <name pos:line="66" pos:column="26">NULL<pos:position pos:line="66" pos:column="30"/></name></expr>)<pos:position pos:line="66" pos:column="31"/></condition><then pos:line="66" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="5">sstrncpy<pos:position pos:line="67" pos:column="13"/></name><argument_list pos:line="67" pos:column="13">(<argument><expr><name><name pos:line="67" pos:column="14">vl<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">.<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="17">plugin_instance<pos:position pos:line="67" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="34">plugin_instance<pos:position pos:line="67" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="51">sizeof<argument_list pos:line="67" pos:column="57">(<argument><expr><name><name pos:line="67" pos:column="58">vl<pos:position pos:line="67" pos:column="60"/></name><operator pos:line="67" pos:column="60">.<pos:position pos:line="67" pos:column="61"/></operator><name pos:line="67" pos:column="61">plugin_instance<pos:position pos:line="67" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="67" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="79"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="68" pos:column="3">sstrncpy<pos:position pos:line="68" pos:column="11"/></name><argument_list pos:line="68" pos:column="11">(<argument><expr><name><name pos:line="68" pos:column="12">vl<pos:position pos:line="68" pos:column="14"/></name><operator pos:line="68" pos:column="14">.<pos:position pos:line="68" pos:column="15"/></operator><name pos:line="68" pos:column="15">type<pos:position pos:line="68" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="21">type<pos:position pos:line="68" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="27">sizeof<argument_list pos:line="68" pos:column="33">(<argument><expr><name><name pos:line="68" pos:column="34">vl<pos:position pos:line="68" pos:column="36"/></name><operator pos:line="68" pos:column="36">.<pos:position pos:line="68" pos:column="37"/></operator><name pos:line="68" pos:column="37">type<pos:position pos:line="68" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="68" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="44"/></expr_stmt>
  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><name pos:line="69" pos:column="7">type_instance<pos:position pos:line="69" pos:column="20"/></name> <operator pos:line="69" pos:column="21">!=<pos:position pos:line="69" pos:column="23"/></operator> <name pos:line="69" pos:column="24">NULL<pos:position pos:line="69" pos:column="28"/></name></expr>)<pos:position pos:line="69" pos:column="29"/></condition><then pos:line="69" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="5">sstrncpy<pos:position pos:line="70" pos:column="13"/></name><argument_list pos:line="70" pos:column="13">(<argument><expr><name><name pos:line="70" pos:column="14">vl<pos:position pos:line="70" pos:column="16"/></name><operator pos:line="70" pos:column="16">.<pos:position pos:line="70" pos:column="17"/></operator><name pos:line="70" pos:column="17">type_instance<pos:position pos:line="70" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="32">type_instance<pos:position pos:line="70" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="47">sizeof<argument_list pos:line="70" pos:column="53">(<argument><expr><name><name pos:line="70" pos:column="54">vl<pos:position pos:line="70" pos:column="56"/></name><operator pos:line="70" pos:column="56">.<pos:position pos:line="70" pos:column="57"/></operator><name pos:line="70" pos:column="57">type_instance<pos:position pos:line="70" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="73"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="71" pos:column="3">sfree<pos:position pos:line="71" pos:column="8"/></name><argument_list pos:line="71" pos:column="8">(<argument><expr><name pos:line="71" pos:column="9">identifier_copy<pos:position pos:line="71" pos:column="24"/></name></expr></argument>)<pos:position pos:line="71" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name pos:line="73" pos:column="3">status<pos:position pos:line="73" pos:column="9"/></name> <operator pos:line="73" pos:column="10">=<pos:position pos:line="73" pos:column="11"/></operator> <call><name pos:line="73" pos:column="12">ut_search_threshold<pos:position pos:line="73" pos:column="31"/></name><argument_list pos:line="73" pos:column="31">(<argument><expr><operator pos:line="73" pos:column="32">&amp;<pos:position pos:line="73" pos:column="37"/></operator><name pos:line="73" pos:column="33">vl<pos:position pos:line="73" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="37">&amp;<pos:position pos:line="73" pos:column="42"/></operator><name pos:line="73" pos:column="38">threshold<pos:position pos:line="73" pos:column="47"/></name></expr></argument>)<pos:position pos:line="73" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="49"/></expr_stmt>
  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><name pos:line="74" pos:column="7">status<pos:position pos:line="74" pos:column="13"/></name> <operator pos:line="74" pos:column="14">==<pos:position pos:line="74" pos:column="16"/></operator> <name pos:line="74" pos:column="17">ENOENT<pos:position pos:line="74" pos:column="23"/></name></expr>)<pos:position pos:line="74" pos:column="24"/></condition><then pos:line="74" pos:column="24"> <block pos:line="74" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">print_to_socket<pos:position pos:line="75" pos:column="20"/></name><argument_list pos:line="75" pos:column="20">(<argument><expr><name pos:line="75" pos:column="21">fh<pos:position pos:line="75" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="25">"-1 No threshold found for identifier %s\n"<pos:position pos:line="75" pos:column="68"/></literal></expr></argument>,
                    <argument><expr><name pos:line="76" pos:column="21">identifier<pos:position pos:line="76" pos:column="31"/></name></expr></argument>)<pos:position pos:line="76" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="33"/></expr_stmt>
    <return pos:line="77" pos:column="5">return <expr><operator pos:line="77" pos:column="12">(<pos:position pos:line="77" pos:column="13"/></operator><literal type="number" pos:line="77" pos:column="13">0<pos:position pos:line="77" pos:column="14"/></literal><operator pos:line="77" pos:column="14">)<pos:position pos:line="77" pos:column="15"/></operator></expr>;<pos:position pos:line="77" pos:column="16"/></return>
  }<pos:position pos:line="78" pos:column="4"/></block></then> <elseif pos:line="78" pos:column="5">else <if pos:line="78" pos:column="10">if <condition pos:line="78" pos:column="13">(<expr><name pos:line="78" pos:column="14">status<pos:position pos:line="78" pos:column="20"/></name> <operator pos:line="78" pos:column="21">!=<pos:position pos:line="78" pos:column="23"/></operator> <literal type="number" pos:line="78" pos:column="24">0<pos:position pos:line="78" pos:column="25"/></literal></expr>)<pos:position pos:line="78" pos:column="26"/></condition><then pos:line="78" pos:column="26"> <block pos:line="78" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">print_to_socket<pos:position pos:line="79" pos:column="20"/></name><argument_list pos:line="79" pos:column="20">(<argument><expr><name pos:line="79" pos:column="21">fh<pos:position pos:line="79" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="25">"-1 Error while looking up threshold: %i\n"<pos:position pos:line="79" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="70">status<pos:position pos:line="79" pos:column="76"/></name></expr></argument>)<pos:position pos:line="79" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="78"/></expr_stmt>
    <return pos:line="80" pos:column="5">return <expr><operator pos:line="80" pos:column="12">(<pos:position pos:line="80" pos:column="13"/></operator><operator pos:line="80" pos:column="13">-<pos:position pos:line="80" pos:column="14"/></operator><literal type="number" pos:line="80" pos:column="14">1<pos:position pos:line="80" pos:column="15"/></literal><operator pos:line="80" pos:column="15">)<pos:position pos:line="80" pos:column="16"/></operator></expr>;<pos:position pos:line="80" pos:column="17"/></return>
  }<pos:position pos:line="81" pos:column="4"/></block></then></if></elseif></if>

  <comment type="block" pos:line="83" pos:column="3">/* Lets count the number of lines we'll return. */</comment>
  <expr_stmt><expr><name pos:line="84" pos:column="3">i<pos:position pos:line="84" pos:column="4"/></name> <operator pos:line="84" pos:column="5">=<pos:position pos:line="84" pos:column="6"/></operator> <literal type="number" pos:line="84" pos:column="7">0<pos:position pos:line="84" pos:column="8"/></literal></expr>;<pos:position pos:line="84" pos:column="9"/></expr_stmt>
  <if pos:line="85" pos:column="3">if <condition pos:line="85" pos:column="6">(<expr><name><name pos:line="85" pos:column="7">threshold<pos:position pos:line="85" pos:column="16"/></name><operator pos:line="85" pos:column="16">.<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="17">host<pos:position pos:line="85" pos:column="21"/></name><index pos:line="85" pos:column="21">[<expr><literal type="number" pos:line="85" pos:column="22">0<pos:position pos:line="85" pos:column="23"/></literal></expr>]<pos:position pos:line="85" pos:column="24"/></index></name> <operator pos:line="85" pos:column="25">!=<pos:position pos:line="85" pos:column="27"/></operator> <literal type="number" pos:line="85" pos:column="28">0<pos:position pos:line="85" pos:column="29"/></literal></expr>)<pos:position pos:line="85" pos:column="30"/></condition><then pos:line="85" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="5">i<pos:position pos:line="86" pos:column="6"/></name><operator pos:line="86" pos:column="6">++<pos:position pos:line="86" pos:column="8"/></operator></expr>;<pos:position pos:line="86" pos:column="9"/></expr_stmt></block></then></if>
  <if pos:line="87" pos:column="3">if <condition pos:line="87" pos:column="6">(<expr><name><name pos:line="87" pos:column="7">threshold<pos:position pos:line="87" pos:column="16"/></name><operator pos:line="87" pos:column="16">.<pos:position pos:line="87" pos:column="17"/></operator><name pos:line="87" pos:column="17">plugin<pos:position pos:line="87" pos:column="23"/></name><index pos:line="87" pos:column="23">[<expr><literal type="number" pos:line="87" pos:column="24">0<pos:position pos:line="87" pos:column="25"/></literal></expr>]<pos:position pos:line="87" pos:column="26"/></index></name> <operator pos:line="87" pos:column="27">!=<pos:position pos:line="87" pos:column="29"/></operator> <literal type="number" pos:line="87" pos:column="30">0<pos:position pos:line="87" pos:column="31"/></literal></expr>)<pos:position pos:line="87" pos:column="32"/></condition><then pos:line="87" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="5">i<pos:position pos:line="88" pos:column="6"/></name><operator pos:line="88" pos:column="6">++<pos:position pos:line="88" pos:column="8"/></operator></expr>;<pos:position pos:line="88" pos:column="9"/></expr_stmt></block></then></if>
  <if pos:line="89" pos:column="3">if <condition pos:line="89" pos:column="6">(<expr><name><name pos:line="89" pos:column="7">threshold<pos:position pos:line="89" pos:column="16"/></name><operator pos:line="89" pos:column="16">.<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="17">plugin_instance<pos:position pos:line="89" pos:column="32"/></name><index pos:line="89" pos:column="32">[<expr><literal type="number" pos:line="89" pos:column="33">0<pos:position pos:line="89" pos:column="34"/></literal></expr>]<pos:position pos:line="89" pos:column="35"/></index></name> <operator pos:line="89" pos:column="36">!=<pos:position pos:line="89" pos:column="38"/></operator> <literal type="number" pos:line="89" pos:column="39">0<pos:position pos:line="89" pos:column="40"/></literal></expr>)<pos:position pos:line="89" pos:column="41"/></condition><then pos:line="89" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><name pos:line="90" pos:column="5">i<pos:position pos:line="90" pos:column="6"/></name><operator pos:line="90" pos:column="6">++<pos:position pos:line="90" pos:column="8"/></operator></expr>;<pos:position pos:line="90" pos:column="9"/></expr_stmt></block></then></if>
  <if pos:line="91" pos:column="3">if <condition pos:line="91" pos:column="6">(<expr><name><name pos:line="91" pos:column="7">threshold<pos:position pos:line="91" pos:column="16"/></name><operator pos:line="91" pos:column="16">.<pos:position pos:line="91" pos:column="17"/></operator><name pos:line="91" pos:column="17">type<pos:position pos:line="91" pos:column="21"/></name><index pos:line="91" pos:column="21">[<expr><literal type="number" pos:line="91" pos:column="22">0<pos:position pos:line="91" pos:column="23"/></literal></expr>]<pos:position pos:line="91" pos:column="24"/></index></name> <operator pos:line="91" pos:column="25">!=<pos:position pos:line="91" pos:column="27"/></operator> <literal type="number" pos:line="91" pos:column="28">0<pos:position pos:line="91" pos:column="29"/></literal></expr>)<pos:position pos:line="91" pos:column="30"/></condition><then pos:line="91" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><name pos:line="92" pos:column="5">i<pos:position pos:line="92" pos:column="6"/></name><operator pos:line="92" pos:column="6">++<pos:position pos:line="92" pos:column="8"/></operator></expr>;<pos:position pos:line="92" pos:column="9"/></expr_stmt></block></then></if>
  <if pos:line="93" pos:column="3">if <condition pos:line="93" pos:column="6">(<expr><name><name pos:line="93" pos:column="7">threshold<pos:position pos:line="93" pos:column="16"/></name><operator pos:line="93" pos:column="16">.<pos:position pos:line="93" pos:column="17"/></operator><name pos:line="93" pos:column="17">type_instance<pos:position pos:line="93" pos:column="30"/></name><index pos:line="93" pos:column="30">[<expr><literal type="number" pos:line="93" pos:column="31">0<pos:position pos:line="93" pos:column="32"/></literal></expr>]<pos:position pos:line="93" pos:column="33"/></index></name> <operator pos:line="93" pos:column="34">!=<pos:position pos:line="93" pos:column="36"/></operator> <literal type="number" pos:line="93" pos:column="37">0<pos:position pos:line="93" pos:column="38"/></literal></expr>)<pos:position pos:line="93" pos:column="39"/></condition><then pos:line="93" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="5">i<pos:position pos:line="94" pos:column="6"/></name><operator pos:line="94" pos:column="6">++<pos:position pos:line="94" pos:column="8"/></operator></expr>;<pos:position pos:line="94" pos:column="9"/></expr_stmt></block></then></if>
  <if pos:line="95" pos:column="3">if <condition pos:line="95" pos:column="6">(<expr><name><name pos:line="95" pos:column="7">threshold<pos:position pos:line="95" pos:column="16"/></name><operator pos:line="95" pos:column="16">.<pos:position pos:line="95" pos:column="17"/></operator><name pos:line="95" pos:column="17">data_source<pos:position pos:line="95" pos:column="28"/></name><index pos:line="95" pos:column="28">[<expr><literal type="number" pos:line="95" pos:column="29">0<pos:position pos:line="95" pos:column="30"/></literal></expr>]<pos:position pos:line="95" pos:column="31"/></index></name> <operator pos:line="95" pos:column="32">!=<pos:position pos:line="95" pos:column="34"/></operator> <literal type="number" pos:line="95" pos:column="35">0<pos:position pos:line="95" pos:column="36"/></literal></expr>)<pos:position pos:line="95" pos:column="37"/></condition><then pos:line="95" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="5">i<pos:position pos:line="96" pos:column="6"/></name><operator pos:line="96" pos:column="6">++<pos:position pos:line="96" pos:column="8"/></operator></expr>;<pos:position pos:line="96" pos:column="9"/></expr_stmt></block></then></if>
  <if pos:line="97" pos:column="3">if <condition pos:line="97" pos:column="6">(<expr><operator pos:line="97" pos:column="7">!<pos:position pos:line="97" pos:column="8"/></operator><call><name pos:line="97" pos:column="8">isnan<pos:position pos:line="97" pos:column="13"/></name><argument_list pos:line="97" pos:column="13">(<argument><expr><name><name pos:line="97" pos:column="14">threshold<pos:position pos:line="97" pos:column="23"/></name><operator pos:line="97" pos:column="23">.<pos:position pos:line="97" pos:column="24"/></operator><name pos:line="97" pos:column="24">warning_min<pos:position pos:line="97" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="37"/></condition><then pos:line="97" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="5">i<pos:position pos:line="98" pos:column="6"/></name><operator pos:line="98" pos:column="6">++<pos:position pos:line="98" pos:column="8"/></operator></expr>;<pos:position pos:line="98" pos:column="9"/></expr_stmt></block></then></if>
  <if pos:line="99" pos:column="3">if <condition pos:line="99" pos:column="6">(<expr><operator pos:line="99" pos:column="7">!<pos:position pos:line="99" pos:column="8"/></operator><call><name pos:line="99" pos:column="8">isnan<pos:position pos:line="99" pos:column="13"/></name><argument_list pos:line="99" pos:column="13">(<argument><expr><name><name pos:line="99" pos:column="14">threshold<pos:position pos:line="99" pos:column="23"/></name><operator pos:line="99" pos:column="23">.<pos:position pos:line="99" pos:column="24"/></operator><name pos:line="99" pos:column="24">warning_max<pos:position pos:line="99" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="37"/></condition><then pos:line="99" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="5">i<pos:position pos:line="100" pos:column="6"/></name><operator pos:line="100" pos:column="6">++<pos:position pos:line="100" pos:column="8"/></operator></expr>;<pos:position pos:line="100" pos:column="9"/></expr_stmt></block></then></if>
  <if pos:line="101" pos:column="3">if <condition pos:line="101" pos:column="6">(<expr><operator pos:line="101" pos:column="7">!<pos:position pos:line="101" pos:column="8"/></operator><call><name pos:line="101" pos:column="8">isnan<pos:position pos:line="101" pos:column="13"/></name><argument_list pos:line="101" pos:column="13">(<argument><expr><name><name pos:line="101" pos:column="14">threshold<pos:position pos:line="101" pos:column="23"/></name><operator pos:line="101" pos:column="23">.<pos:position pos:line="101" pos:column="24"/></operator><name pos:line="101" pos:column="24">failure_min<pos:position pos:line="101" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="37"/></condition><then pos:line="101" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><name pos:line="102" pos:column="5">i<pos:position pos:line="102" pos:column="6"/></name><operator pos:line="102" pos:column="6">++<pos:position pos:line="102" pos:column="8"/></operator></expr>;<pos:position pos:line="102" pos:column="9"/></expr_stmt></block></then></if>
  <if pos:line="103" pos:column="3">if <condition pos:line="103" pos:column="6">(<expr><operator pos:line="103" pos:column="7">!<pos:position pos:line="103" pos:column="8"/></operator><call><name pos:line="103" pos:column="8">isnan<pos:position pos:line="103" pos:column="13"/></name><argument_list pos:line="103" pos:column="13">(<argument><expr><name><name pos:line="103" pos:column="14">threshold<pos:position pos:line="103" pos:column="23"/></name><operator pos:line="103" pos:column="23">.<pos:position pos:line="103" pos:column="24"/></operator><name pos:line="103" pos:column="24">failure_max<pos:position pos:line="103" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="37"/></condition><then pos:line="103" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="5">i<pos:position pos:line="104" pos:column="6"/></name><operator pos:line="104" pos:column="6">++<pos:position pos:line="104" pos:column="8"/></operator></expr>;<pos:position pos:line="104" pos:column="9"/></expr_stmt></block></then></if>
  <if pos:line="105" pos:column="3">if <condition pos:line="105" pos:column="6">(<expr><name><name pos:line="105" pos:column="7">threshold<pos:position pos:line="105" pos:column="16"/></name><operator pos:line="105" pos:column="16">.<pos:position pos:line="105" pos:column="17"/></operator><name pos:line="105" pos:column="17">hysteresis<pos:position pos:line="105" pos:column="27"/></name></name> <operator pos:line="105" pos:column="28">&gt;<pos:position pos:line="105" pos:column="32"/></operator> <literal type="number" pos:line="105" pos:column="30">0.0<pos:position pos:line="105" pos:column="33"/></literal></expr>)<pos:position pos:line="105" pos:column="34"/></condition><then pos:line="105" pos:column="34">
    <block type="pseudo"><expr_stmt><expr><name pos:line="106" pos:column="5">i<pos:position pos:line="106" pos:column="6"/></name><operator pos:line="106" pos:column="6">++<pos:position pos:line="106" pos:column="8"/></operator></expr>;<pos:position pos:line="106" pos:column="9"/></expr_stmt></block></then></if>
  <if pos:line="107" pos:column="3">if <condition pos:line="107" pos:column="6">(<expr><name><name pos:line="107" pos:column="7">threshold<pos:position pos:line="107" pos:column="16"/></name><operator pos:line="107" pos:column="16">.<pos:position pos:line="107" pos:column="17"/></operator><name pos:line="107" pos:column="17">hits<pos:position pos:line="107" pos:column="21"/></name></name> <operator pos:line="107" pos:column="22">&gt;<pos:position pos:line="107" pos:column="26"/></operator> <literal type="number" pos:line="107" pos:column="24">1<pos:position pos:line="107" pos:column="25"/></literal></expr>)<pos:position pos:line="107" pos:column="26"/></condition><then pos:line="107" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name pos:line="108" pos:column="5">i<pos:position pos:line="108" pos:column="6"/></name><operator pos:line="108" pos:column="6">++<pos:position pos:line="108" pos:column="8"/></operator></expr>;<pos:position pos:line="108" pos:column="9"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="110" pos:column="3">/* Print the response */</comment>
  <expr_stmt><expr><call><name pos:line="111" pos:column="3">print_to_socket<pos:position pos:line="111" pos:column="18"/></name><argument_list pos:line="111" pos:column="18">(<argument><expr><name pos:line="111" pos:column="19">fh<pos:position pos:line="111" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="23">"%zu Threshold found\n"<pos:position pos:line="111" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="48">i<pos:position pos:line="111" pos:column="49"/></name></expr></argument>)<pos:position pos:line="111" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="51"/></expr_stmt>

  <if pos:line="113" pos:column="3">if <condition pos:line="113" pos:column="6">(<expr><name><name pos:line="113" pos:column="7">threshold<pos:position pos:line="113" pos:column="16"/></name><operator pos:line="113" pos:column="16">.<pos:position pos:line="113" pos:column="17"/></operator><name pos:line="113" pos:column="17">host<pos:position pos:line="113" pos:column="21"/></name><index pos:line="113" pos:column="21">[<expr><literal type="number" pos:line="113" pos:column="22">0<pos:position pos:line="113" pos:column="23"/></literal></expr>]<pos:position pos:line="113" pos:column="24"/></index></name> <operator pos:line="113" pos:column="25">!=<pos:position pos:line="113" pos:column="27"/></operator> <literal type="number" pos:line="113" pos:column="28">0<pos:position pos:line="113" pos:column="29"/></literal></expr>)<pos:position pos:line="113" pos:column="30"/></condition><then pos:line="113" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="5">print_to_socket<pos:position pos:line="114" pos:column="20"/></name><argument_list pos:line="114" pos:column="20">(<argument><expr><name pos:line="114" pos:column="21">fh<pos:position pos:line="114" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="25">"Host: %s\n"<pos:position pos:line="114" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="39">threshold<pos:position pos:line="114" pos:column="48"/></name><operator pos:line="114" pos:column="48">.<pos:position pos:line="114" pos:column="49"/></operator><name pos:line="114" pos:column="49">host<pos:position pos:line="114" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="55"/></expr_stmt></block></then></if>
  <if pos:line="115" pos:column="3">if <condition pos:line="115" pos:column="6">(<expr><name><name pos:line="115" pos:column="7">threshold<pos:position pos:line="115" pos:column="16"/></name><operator pos:line="115" pos:column="16">.<pos:position pos:line="115" pos:column="17"/></operator><name pos:line="115" pos:column="17">plugin<pos:position pos:line="115" pos:column="23"/></name><index pos:line="115" pos:column="23">[<expr><literal type="number" pos:line="115" pos:column="24">0<pos:position pos:line="115" pos:column="25"/></literal></expr>]<pos:position pos:line="115" pos:column="26"/></index></name> <operator pos:line="115" pos:column="27">!=<pos:position pos:line="115" pos:column="29"/></operator> <literal type="number" pos:line="115" pos:column="30">0<pos:position pos:line="115" pos:column="31"/></literal></expr>)<pos:position pos:line="115" pos:column="32"/></condition><then pos:line="115" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="5">print_to_socket<pos:position pos:line="116" pos:column="20"/></name><argument_list pos:line="116" pos:column="20">(<argument><expr><name pos:line="116" pos:column="21">fh<pos:position pos:line="116" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="25">"Plugin: %s\n"<pos:position pos:line="116" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="41">threshold<pos:position pos:line="116" pos:column="50"/></name><operator pos:line="116" pos:column="50">.<pos:position pos:line="116" pos:column="51"/></operator><name pos:line="116" pos:column="51">plugin<pos:position pos:line="116" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="59"/></expr_stmt></block></then></if>
  <if pos:line="117" pos:column="3">if <condition pos:line="117" pos:column="6">(<expr><name><name pos:line="117" pos:column="7">threshold<pos:position pos:line="117" pos:column="16"/></name><operator pos:line="117" pos:column="16">.<pos:position pos:line="117" pos:column="17"/></operator><name pos:line="117" pos:column="17">plugin_instance<pos:position pos:line="117" pos:column="32"/></name><index pos:line="117" pos:column="32">[<expr><literal type="number" pos:line="117" pos:column="33">0<pos:position pos:line="117" pos:column="34"/></literal></expr>]<pos:position pos:line="117" pos:column="35"/></index></name> <operator pos:line="117" pos:column="36">!=<pos:position pos:line="117" pos:column="38"/></operator> <literal type="number" pos:line="117" pos:column="39">0<pos:position pos:line="117" pos:column="40"/></literal></expr>)<pos:position pos:line="117" pos:column="41"/></condition><then pos:line="117" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="118" pos:column="5">print_to_socket<pos:position pos:line="118" pos:column="20"/></name><argument_list pos:line="118" pos:column="20">(<argument><expr><name pos:line="118" pos:column="21">fh<pos:position pos:line="118" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="25">"Plugin Instance: %s\n"<pos:position pos:line="118" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="50">threshold<pos:position pos:line="118" pos:column="59"/></name><operator pos:line="118" pos:column="59">.<pos:position pos:line="118" pos:column="60"/></operator><name pos:line="118" pos:column="60">plugin_instance<pos:position pos:line="118" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="77"/></expr_stmt></block></then></if>
  <if pos:line="119" pos:column="3">if <condition pos:line="119" pos:column="6">(<expr><name><name pos:line="119" pos:column="7">threshold<pos:position pos:line="119" pos:column="16"/></name><operator pos:line="119" pos:column="16">.<pos:position pos:line="119" pos:column="17"/></operator><name pos:line="119" pos:column="17">type<pos:position pos:line="119" pos:column="21"/></name><index pos:line="119" pos:column="21">[<expr><literal type="number" pos:line="119" pos:column="22">0<pos:position pos:line="119" pos:column="23"/></literal></expr>]<pos:position pos:line="119" pos:column="24"/></index></name> <operator pos:line="119" pos:column="25">!=<pos:position pos:line="119" pos:column="27"/></operator> <literal type="number" pos:line="119" pos:column="28">0<pos:position pos:line="119" pos:column="29"/></literal></expr>)<pos:position pos:line="119" pos:column="30"/></condition><then pos:line="119" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="120" pos:column="5">print_to_socket<pos:position pos:line="120" pos:column="20"/></name><argument_list pos:line="120" pos:column="20">(<argument><expr><name pos:line="120" pos:column="21">fh<pos:position pos:line="120" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="25">"Type: %s\n"<pos:position pos:line="120" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="39">threshold<pos:position pos:line="120" pos:column="48"/></name><operator pos:line="120" pos:column="48">.<pos:position pos:line="120" pos:column="49"/></operator><name pos:line="120" pos:column="49">type<pos:position pos:line="120" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="55"/></expr_stmt></block></then></if>
  <if pos:line="121" pos:column="3">if <condition pos:line="121" pos:column="6">(<expr><name><name pos:line="121" pos:column="7">threshold<pos:position pos:line="121" pos:column="16"/></name><operator pos:line="121" pos:column="16">.<pos:position pos:line="121" pos:column="17"/></operator><name pos:line="121" pos:column="17">type_instance<pos:position pos:line="121" pos:column="30"/></name><index pos:line="121" pos:column="30">[<expr><literal type="number" pos:line="121" pos:column="31">0<pos:position pos:line="121" pos:column="32"/></literal></expr>]<pos:position pos:line="121" pos:column="33"/></index></name> <operator pos:line="121" pos:column="34">!=<pos:position pos:line="121" pos:column="36"/></operator> <literal type="number" pos:line="121" pos:column="37">0<pos:position pos:line="121" pos:column="38"/></literal></expr>)<pos:position pos:line="121" pos:column="39"/></condition><then pos:line="121" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="122" pos:column="5">print_to_socket<pos:position pos:line="122" pos:column="20"/></name><argument_list pos:line="122" pos:column="20">(<argument><expr><name pos:line="122" pos:column="21">fh<pos:position pos:line="122" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="25">"Type Instance: %s\n"<pos:position pos:line="122" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="48">threshold<pos:position pos:line="122" pos:column="57"/></name><operator pos:line="122" pos:column="57">.<pos:position pos:line="122" pos:column="58"/></operator><name pos:line="122" pos:column="58">type_instance<pos:position pos:line="122" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="73"/></expr_stmt></block></then></if>
  <if pos:line="123" pos:column="3">if <condition pos:line="123" pos:column="6">(<expr><name><name pos:line="123" pos:column="7">threshold<pos:position pos:line="123" pos:column="16"/></name><operator pos:line="123" pos:column="16">.<pos:position pos:line="123" pos:column="17"/></operator><name pos:line="123" pos:column="17">data_source<pos:position pos:line="123" pos:column="28"/></name><index pos:line="123" pos:column="28">[<expr><literal type="number" pos:line="123" pos:column="29">0<pos:position pos:line="123" pos:column="30"/></literal></expr>]<pos:position pos:line="123" pos:column="31"/></index></name> <operator pos:line="123" pos:column="32">!=<pos:position pos:line="123" pos:column="34"/></operator> <literal type="number" pos:line="123" pos:column="35">0<pos:position pos:line="123" pos:column="36"/></literal></expr>)<pos:position pos:line="123" pos:column="37"/></condition><then pos:line="123" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="124" pos:column="5">print_to_socket<pos:position pos:line="124" pos:column="20"/></name><argument_list pos:line="124" pos:column="20">(<argument><expr><name pos:line="124" pos:column="21">fh<pos:position pos:line="124" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="25">"Data Source: %s\n"<pos:position pos:line="124" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="46">threshold<pos:position pos:line="124" pos:column="55"/></name><operator pos:line="124" pos:column="55">.<pos:position pos:line="124" pos:column="56"/></operator><name pos:line="124" pos:column="56">data_source<pos:position pos:line="124" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="69"/></expr_stmt></block></then></if>
  <if pos:line="125" pos:column="3">if <condition pos:line="125" pos:column="6">(<expr><operator pos:line="125" pos:column="7">!<pos:position pos:line="125" pos:column="8"/></operator><call><name pos:line="125" pos:column="8">isnan<pos:position pos:line="125" pos:column="13"/></name><argument_list pos:line="125" pos:column="13">(<argument><expr><name><name pos:line="125" pos:column="14">threshold<pos:position pos:line="125" pos:column="23"/></name><operator pos:line="125" pos:column="23">.<pos:position pos:line="125" pos:column="24"/></operator><name pos:line="125" pos:column="24">warning_min<pos:position pos:line="125" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="125" pos:column="37"/></condition><then pos:line="125" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="126" pos:column="5">print_to_socket<pos:position pos:line="126" pos:column="20"/></name><argument_list pos:line="126" pos:column="20">(<argument><expr><name pos:line="126" pos:column="21">fh<pos:position pos:line="126" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="25">"Warning Min: %g\n"<pos:position pos:line="126" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="46">threshold<pos:position pos:line="126" pos:column="55"/></name><operator pos:line="126" pos:column="55">.<pos:position pos:line="126" pos:column="56"/></operator><name pos:line="126" pos:column="56">warning_min<pos:position pos:line="126" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="69"/></expr_stmt></block></then></if>
  <if pos:line="127" pos:column="3">if <condition pos:line="127" pos:column="6">(<expr><operator pos:line="127" pos:column="7">!<pos:position pos:line="127" pos:column="8"/></operator><call><name pos:line="127" pos:column="8">isnan<pos:position pos:line="127" pos:column="13"/></name><argument_list pos:line="127" pos:column="13">(<argument><expr><name><name pos:line="127" pos:column="14">threshold<pos:position pos:line="127" pos:column="23"/></name><operator pos:line="127" pos:column="23">.<pos:position pos:line="127" pos:column="24"/></operator><name pos:line="127" pos:column="24">warning_max<pos:position pos:line="127" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="37"/></condition><then pos:line="127" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="128" pos:column="5">print_to_socket<pos:position pos:line="128" pos:column="20"/></name><argument_list pos:line="128" pos:column="20">(<argument><expr><name pos:line="128" pos:column="21">fh<pos:position pos:line="128" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="25">"Warning Max: %g\n"<pos:position pos:line="128" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="46">threshold<pos:position pos:line="128" pos:column="55"/></name><operator pos:line="128" pos:column="55">.<pos:position pos:line="128" pos:column="56"/></operator><name pos:line="128" pos:column="56">warning_max<pos:position pos:line="128" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="69"/></expr_stmt></block></then></if>
  <if pos:line="129" pos:column="3">if <condition pos:line="129" pos:column="6">(<expr><operator pos:line="129" pos:column="7">!<pos:position pos:line="129" pos:column="8"/></operator><call><name pos:line="129" pos:column="8">isnan<pos:position pos:line="129" pos:column="13"/></name><argument_list pos:line="129" pos:column="13">(<argument><expr><name><name pos:line="129" pos:column="14">threshold<pos:position pos:line="129" pos:column="23"/></name><operator pos:line="129" pos:column="23">.<pos:position pos:line="129" pos:column="24"/></operator><name pos:line="129" pos:column="24">failure_min<pos:position pos:line="129" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="129" pos:column="37"/></condition><then pos:line="129" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="130" pos:column="5">print_to_socket<pos:position pos:line="130" pos:column="20"/></name><argument_list pos:line="130" pos:column="20">(<argument><expr><name pos:line="130" pos:column="21">fh<pos:position pos:line="130" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="25">"Failure Min: %g\n"<pos:position pos:line="130" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="46">threshold<pos:position pos:line="130" pos:column="55"/></name><operator pos:line="130" pos:column="55">.<pos:position pos:line="130" pos:column="56"/></operator><name pos:line="130" pos:column="56">failure_min<pos:position pos:line="130" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="69"/></expr_stmt></block></then></if>
  <if pos:line="131" pos:column="3">if <condition pos:line="131" pos:column="6">(<expr><operator pos:line="131" pos:column="7">!<pos:position pos:line="131" pos:column="8"/></operator><call><name pos:line="131" pos:column="8">isnan<pos:position pos:line="131" pos:column="13"/></name><argument_list pos:line="131" pos:column="13">(<argument><expr><name><name pos:line="131" pos:column="14">threshold<pos:position pos:line="131" pos:column="23"/></name><operator pos:line="131" pos:column="23">.<pos:position pos:line="131" pos:column="24"/></operator><name pos:line="131" pos:column="24">failure_max<pos:position pos:line="131" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="131" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="131" pos:column="37"/></condition><then pos:line="131" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="132" pos:column="5">print_to_socket<pos:position pos:line="132" pos:column="20"/></name><argument_list pos:line="132" pos:column="20">(<argument><expr><name pos:line="132" pos:column="21">fh<pos:position pos:line="132" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="25">"Failure Max: %g\n"<pos:position pos:line="132" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="46">threshold<pos:position pos:line="132" pos:column="55"/></name><operator pos:line="132" pos:column="55">.<pos:position pos:line="132" pos:column="56"/></operator><name pos:line="132" pos:column="56">failure_max<pos:position pos:line="132" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="69"/></expr_stmt></block></then></if>
  <if pos:line="133" pos:column="3">if <condition pos:line="133" pos:column="6">(<expr><name><name pos:line="133" pos:column="7">threshold<pos:position pos:line="133" pos:column="16"/></name><operator pos:line="133" pos:column="16">.<pos:position pos:line="133" pos:column="17"/></operator><name pos:line="133" pos:column="17">hysteresis<pos:position pos:line="133" pos:column="27"/></name></name> <operator pos:line="133" pos:column="28">&gt;<pos:position pos:line="133" pos:column="32"/></operator> <literal type="number" pos:line="133" pos:column="30">0.0<pos:position pos:line="133" pos:column="33"/></literal></expr>)<pos:position pos:line="133" pos:column="34"/></condition><then pos:line="133" pos:column="34">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="134" pos:column="5">print_to_socket<pos:position pos:line="134" pos:column="20"/></name><argument_list pos:line="134" pos:column="20">(<argument><expr><name pos:line="134" pos:column="21">fh<pos:position pos:line="134" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="25">"Hysteresis: %g\n"<pos:position pos:line="134" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="45">threshold<pos:position pos:line="134" pos:column="54"/></name><operator pos:line="134" pos:column="54">.<pos:position pos:line="134" pos:column="55"/></operator><name pos:line="134" pos:column="55">hysteresis<pos:position pos:line="134" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="134" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="67"/></expr_stmt></block></then></if>
  <if pos:line="135" pos:column="3">if <condition pos:line="135" pos:column="6">(<expr><name><name pos:line="135" pos:column="7">threshold<pos:position pos:line="135" pos:column="16"/></name><operator pos:line="135" pos:column="16">.<pos:position pos:line="135" pos:column="17"/></operator><name pos:line="135" pos:column="17">hits<pos:position pos:line="135" pos:column="21"/></name></name> <operator pos:line="135" pos:column="22">&gt;<pos:position pos:line="135" pos:column="26"/></operator> <literal type="number" pos:line="135" pos:column="24">1<pos:position pos:line="135" pos:column="25"/></literal></expr>)<pos:position pos:line="135" pos:column="26"/></condition><then pos:line="135" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="136" pos:column="5">print_to_socket<pos:position pos:line="136" pos:column="20"/></name><argument_list pos:line="136" pos:column="20">(<argument><expr><name pos:line="136" pos:column="21">fh<pos:position pos:line="136" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="25">"Hits: %i\n"<pos:position pos:line="136" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="39">threshold<pos:position pos:line="136" pos:column="48"/></name><operator pos:line="136" pos:column="48">.<pos:position pos:line="136" pos:column="49"/></operator><name pos:line="136" pos:column="49">hits<pos:position pos:line="136" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="55"/></expr_stmt></block></then></if>

  <return pos:line="138" pos:column="3">return <expr><operator pos:line="138" pos:column="10">(<pos:position pos:line="138" pos:column="11"/></operator><literal type="number" pos:line="138" pos:column="11">0<pos:position pos:line="138" pos:column="12"/></literal><operator pos:line="138" pos:column="12">)<pos:position pos:line="138" pos:column="13"/></operator></expr>;<pos:position pos:line="138" pos:column="14"/></return>
}<pos:position pos:line="139" pos:column="2"/></block></function></unit>

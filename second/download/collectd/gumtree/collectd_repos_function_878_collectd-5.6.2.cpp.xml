<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_878_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">memcached_connect<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">memcached_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">st<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <block pos:line="1" pos:column="47">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name><name pos:line="2" pos:column="7">st<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">-&gt;<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="11">socket<pos:position pos:line="2" pos:column="17"/></name></name> <operator pos:line="2" pos:column="18">!=<pos:position pos:line="2" pos:column="20"/></operator> <name pos:line="2" pos:column="21">NULL<pos:position pos:line="2" pos:column="25"/></name></expr>)<pos:position pos:line="2" pos:column="26"/></condition><then pos:line="2" pos:column="26">
    <block type="pseudo"><return pos:line="3" pos:column="5">return <expr><operator pos:line="3" pos:column="12">(<pos:position pos:line="3" pos:column="13"/></operator><call><name pos:line="3" pos:column="13">memcached_connect_unix<pos:position pos:line="3" pos:column="35"/></name><argument_list pos:line="3" pos:column="35">(<argument><expr><name pos:line="3" pos:column="36">st<pos:position pos:line="3" pos:column="38"/></name></expr></argument>)<pos:position pos:line="3" pos:column="39"/></argument_list></call><operator pos:line="3" pos:column="39">)<pos:position pos:line="3" pos:column="40"/></operator></expr>;<pos:position pos:line="3" pos:column="41"/></return></block></then>
  <else pos:line="4" pos:column="3">else
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">(<pos:position pos:line="5" pos:column="13"/></operator><call><name pos:line="5" pos:column="13">memcached_connect_inet<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">(<argument><expr><name pos:line="5" pos:column="36">st<pos:position pos:line="5" pos:column="38"/></name></expr></argument>)<pos:position pos:line="5" pos:column="39"/></argument_list></call><operator pos:line="5" pos:column="39">)<pos:position pos:line="5" pos:column="40"/></operator></expr>;<pos:position pos:line="5" pos:column="41"/></return></block></else></if>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2787_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">my_notify<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">notification_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">notif<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">user_data_t<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">ud<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list> <block pos:line="1" pos:column="68">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">time_str<pos:position pos:line="2" pos:column="16"/></name><index pos:line="2" pos:column="16">[<expr><literal type="number" pos:line="2" pos:column="17">32<pos:position pos:line="2" pos:column="19"/></literal></expr>]<pos:position pos:line="2" pos:column="20"/></index></name> <init pos:line="2" pos:column="21">= <expr><literal type="string" pos:line="2" pos:column="23">""<pos:position pos:line="2" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">tm<pos:position pos:line="3" pos:column="12"/></name></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">tm<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">NULL<pos:position pos:line="3" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">n<pos:position pos:line="5" pos:column="8"/></name> <init pos:line="5" pos:column="9">= <expr><literal type="number" pos:line="5" pos:column="11">0<pos:position pos:line="5" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">NULL<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <operator pos:line="7" pos:column="15">(<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">tm<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <call><name pos:line="7" pos:column="21">localtime<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><operator pos:line="7" pos:column="31">&amp;<pos:position pos:line="7" pos:column="36"/></operator><name><name pos:line="7" pos:column="32">notif<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">time<pos:position pos:line="7" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call><operator pos:line="7" pos:column="44">)<pos:position pos:line="7" pos:column="45"/></operator></expr>)<pos:position pos:line="7" pos:column="46"/></condition><then pos:line="7" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="5">time_str<pos:position pos:line="8" pos:column="13"/></name><index pos:line="8" pos:column="13">[<expr><literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>]<pos:position pos:line="8" pos:column="16"/></index></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <literal type="char" pos:line="8" pos:column="19">'\0'<pos:position pos:line="8" pos:column="23"/></literal></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="10" pos:column="3">n<pos:position pos:line="10" pos:column="4"/></name> <operator pos:line="10" pos:column="5">=<pos:position pos:line="10" pos:column="6"/></operator> <call><name pos:line="10" pos:column="7">strftime<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">time_str<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="26">32<pos:position pos:line="10" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="30">"%F %T"<pos:position pos:line="10" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">tm<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">n<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">&gt;=<pos:position pos:line="11" pos:column="14"/></operator> <literal type="number" pos:line="11" pos:column="12">32<pos:position pos:line="11" pos:column="14"/></literal></expr>)<pos:position pos:line="11" pos:column="15"/></condition><then pos:line="11" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">n<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <literal type="number" pos:line="12" pos:column="9">31<pos:position pos:line="12" pos:column="11"/></literal></expr>;<pos:position pos:line="12" pos:column="12"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">time_str<pos:position pos:line="13" pos:column="11"/></name><index pos:line="13" pos:column="11">[<expr><name pos:line="13" pos:column="12">n<pos:position pos:line="13" pos:column="13"/></name></expr>]<pos:position pos:line="13" pos:column="14"/></index></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <literal type="char" pos:line="13" pos:column="17">'\0'<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">printf<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><literal type="string" pos:line="15" pos:column="10">"NOTIF (%s): %i - "<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">time_str<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="41">notif<pos:position pos:line="15" pos:column="46"/></name><operator pos:line="15" pos:column="46">-&gt;<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="48">severity<pos:position pos:line="15" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><literal type="char" pos:line="17" pos:column="7">'\0'<pos:position pos:line="17" pos:column="11"/></literal> <operator pos:line="17" pos:column="12">!=<pos:position pos:line="17" pos:column="14"/></operator> <operator pos:line="17" pos:column="15">*<pos:position pos:line="17" pos:column="16"/></operator><name><name pos:line="17" pos:column="16">notif<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">host<pos:position pos:line="17" pos:column="27"/></name></name></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="5">printf<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="string" pos:line="18" pos:column="12">"%s: "<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="20">notif<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">host<pos:position pos:line="18" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt></block></then></if>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><literal type="char" pos:line="20" pos:column="7">'\0'<pos:position pos:line="20" pos:column="11"/></literal> <operator pos:line="20" pos:column="12">!=<pos:position pos:line="20" pos:column="14"/></operator> <operator pos:line="20" pos:column="15">*<pos:position pos:line="20" pos:column="16"/></operator><name><name pos:line="20" pos:column="16">notif<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">plugin<pos:position pos:line="20" pos:column="29"/></name></name></expr>)<pos:position pos:line="20" pos:column="30"/></condition><then pos:line="20" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="5">printf<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="string" pos:line="21" pos:column="12">"%s: "<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="20">notif<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">plugin<pos:position pos:line="21" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt></block></then></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><literal type="char" pos:line="23" pos:column="7">'\0'<pos:position pos:line="23" pos:column="11"/></literal> <operator pos:line="23" pos:column="12">!=<pos:position pos:line="23" pos:column="14"/></operator> <operator pos:line="23" pos:column="15">*<pos:position pos:line="23" pos:column="16"/></operator><name><name pos:line="23" pos:column="16">notif<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">plugin_instance<pos:position pos:line="23" pos:column="38"/></name></name></expr>)<pos:position pos:line="23" pos:column="39"/></condition><then pos:line="23" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">printf<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="string" pos:line="24" pos:column="12">"%s: "<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="20">notif<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">plugin_instance<pos:position pos:line="24" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt></block></then></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><literal type="char" pos:line="26" pos:column="7">'\0'<pos:position pos:line="26" pos:column="11"/></literal> <operator pos:line="26" pos:column="12">!=<pos:position pos:line="26" pos:column="14"/></operator> <operator pos:line="26" pos:column="15">*<pos:position pos:line="26" pos:column="16"/></operator><name><name pos:line="26" pos:column="16">notif<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">type<pos:position pos:line="26" pos:column="27"/></name></name></expr>)<pos:position pos:line="26" pos:column="28"/></condition><then pos:line="26" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="5">printf<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="string" pos:line="27" pos:column="12">"%s: "<pos:position pos:line="27" pos:column="18"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="20">notif<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">-&gt;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="27">type<pos:position pos:line="27" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt></block></then></if>

  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><literal type="char" pos:line="29" pos:column="7">'\0'<pos:position pos:line="29" pos:column="11"/></literal> <operator pos:line="29" pos:column="12">!=<pos:position pos:line="29" pos:column="14"/></operator> <operator pos:line="29" pos:column="15">*<pos:position pos:line="29" pos:column="16"/></operator><name><name pos:line="29" pos:column="16">notif<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">type_instance<pos:position pos:line="29" pos:column="36"/></name></name></expr>)<pos:position pos:line="29" pos:column="37"/></condition><then pos:line="29" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="5">printf<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><literal type="string" pos:line="30" pos:column="12">"%s: "<pos:position pos:line="30" pos:column="18"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="20">notif<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">type_instance<pos:position pos:line="30" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">printf<pos:position pos:line="32" pos:column="9"/></name><argument_list pos:line="32" pos:column="9">(<argument><expr><literal type="string" pos:line="32" pos:column="10">"%s\n"<pos:position pos:line="32" pos:column="16"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="18">notif<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">message<pos:position pos:line="32" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
  <return pos:line="33" pos:column="3">return <expr><literal type="number" pos:line="33" pos:column="10">0<pos:position pos:line="33" pos:column="11"/></literal></expr>;<pos:position pos:line="33" pos:column="12"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_993_collectd-4.5.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">TC_FREE<pos:position pos:line="2" pos:column="8"/></name><parameter_list pos:line="2" pos:column="8">(<parameter><decl><type><name pos:line="2" pos:column="9">TC_HANDLE_T<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">h<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">chain_head<pos:position pos:line="4" pos:column="26"/></name></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">c<pos:position pos:line="4" pos:column="29"/></name></decl>, <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="32">tmp<pos:position pos:line="4" pos:column="35"/></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">iptc_fn<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">TC_FREE<pos:position pos:line="6" pos:column="26"/></name></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">--<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">sockfd_use<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">==<pos:position pos:line="7" pos:column="28"/></operator> <literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31"> <block pos:line="7" pos:column="32">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">close<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">sockfd<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">sockfd<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <operator pos:line="9" pos:column="26">-<pos:position pos:line="9" pos:column="27"/></operator><literal type="number" pos:line="9" pos:column="27">1<pos:position pos:line="9" pos:column="28"/></literal></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<macro><name pos:line="12" pos:column="9">list_for_each_entry_safe<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument pos:line="12" pos:column="34">c<pos:position pos:line="12" pos:column="35"/></argument>, <argument pos:line="12" pos:column="37">tmp<pos:position pos:line="12" pos:column="40"/></argument>, <argument pos:line="12" pos:column="42">&amp;(*h)-&gt;chains<pos:position pos:line="12" pos:column="55"/></argument>, <argument pos:line="12" pos:column="57">list<pos:position pos:line="12" pos:column="61"/></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></macro> <block pos:line="12" pos:column="63">{
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">struct<pos:position pos:line="13" pos:column="23"/></name> <name pos:line="13" pos:column="24">rule_head<pos:position pos:line="13" pos:column="33"/></name></name> <modifier pos:line="13" pos:column="34">*<pos:position pos:line="13" pos:column="35"/></modifier></type><name pos:line="13" pos:column="35">r<pos:position pos:line="13" pos:column="36"/></name></decl>, <modifier pos:line="13" pos:column="38">*<pos:position pos:line="13" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="39">rtmp<pos:position pos:line="13" pos:column="43"/></name></decl>;<pos:position pos:line="13" pos:column="44"/></decl_stmt>

		<macro><name pos:line="15" pos:column="17">list_for_each_entry_safe<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument pos:line="15" pos:column="42">r<pos:position pos:line="15" pos:column="43"/></argument>, <argument pos:line="15" pos:column="45">rtmp<pos:position pos:line="15" pos:column="49"/></argument>, <argument pos:line="15" pos:column="51">&amp;c-&gt;rules<pos:position pos:line="15" pos:column="60"/></argument>, <argument pos:line="15" pos:column="62">list<pos:position pos:line="15" pos:column="66"/></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></macro> <block pos:line="15" pos:column="68">{
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">free<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">r<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block>

		<expr_stmt><expr><call><name pos:line="19" pos:column="17">free<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">c<pos:position pos:line="19" pos:column="23"/></name></expr></argument>)<pos:position pos:line="19" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">free<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><operator pos:line="22" pos:column="15">*<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">h<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">)<pos:position pos:line="22" pos:column="18"/></operator><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">entries<pos:position pos:line="22" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">free<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><operator pos:line="23" pos:column="14">*<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">h<pos:position pos:line="23" pos:column="16"/></name></expr></argument>)<pos:position pos:line="23" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="18"/></expr_stmt>

	<expr_stmt><expr><operator pos:line="25" pos:column="9">*<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">h<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <name pos:line="25" pos:column="14">NULL<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

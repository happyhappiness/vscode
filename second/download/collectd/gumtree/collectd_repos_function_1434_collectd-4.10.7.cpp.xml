<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1434_collectd-4.10.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_part_encr_aes256<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">sockent_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">se<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">void<pos:position pos:line="2" pos:column="9"/></name> <modifier pos:line="2" pos:column="10">*<pos:position pos:line="2" pos:column="11"/></modifier><modifier pos:line="2" pos:column="11">*<pos:position pos:line="2" pos:column="12"/></modifier></type><name pos:line="2" pos:column="12">ret_buffer<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="24">size_t<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">ret_buffer_size<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">flags<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="4" pos:column="3">static<pos:position pos:line="4" pos:column="9"/></specifier> <type><name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">warning_has_been_printed<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><literal type="number" pos:line="4" pos:column="41">0<pos:position pos:line="4" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">buffer<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">buffer_size<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">buffer_offset<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">part_header_t<pos:position pos:line="10" pos:column="16"/></name></type> <name pos:line="10" pos:column="17">ph<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">ph_length<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">buffer<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <operator pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">ret_buffer<pos:position pos:line="13" pos:column="23"/></name></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">buffer_size<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">ret_buffer_size<pos:position pos:line="14" pos:column="33"/></name></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">buffer_offset<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* parse_packet assures this minimum size. */</comment>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">assert<pos:position pos:line="18" pos:column="9"/></name> <argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">buffer_size<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&gt;=<pos:position pos:line="18" pos:column="28"/></operator> <operator pos:line="18" pos:column="26">(<pos:position pos:line="18" pos:column="27"/></operator><sizeof pos:line="18" pos:column="27">sizeof <argument_list pos:line="18" pos:column="34">(<argument><expr><name><name pos:line="18" pos:column="35">ph<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">.<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="38">type<pos:position pos:line="18" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></sizeof> <operator pos:line="18" pos:column="44">+<pos:position pos:line="18" pos:column="45"/></operator> <sizeof pos:line="18" pos:column="46">sizeof <argument_list pos:line="18" pos:column="53">(<argument><expr><name><name pos:line="18" pos:column="54">ph<pos:position pos:line="18" pos:column="56"/></name><operator pos:line="18" pos:column="56">.<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="57">length<pos:position pos:line="18" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></sizeof><operator pos:line="18" pos:column="64">)<pos:position pos:line="18" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="67"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">BUFFER_READ<pos:position pos:line="20" pos:column="14"/></name> <argument_list pos:line="20" pos:column="15">(<argument><expr><operator pos:line="20" pos:column="16">&amp;<pos:position pos:line="20" pos:column="21"/></operator><name><name pos:line="20" pos:column="17">ph<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">.<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">type<pos:position pos:line="20" pos:column="24"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="26">sizeof <argument_list pos:line="20" pos:column="33">(<argument><expr><name><name pos:line="20" pos:column="34">ph<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">.<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="37">type<pos:position pos:line="20" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">BUFFER_READ<pos:position pos:line="21" pos:column="14"/></name> <argument_list pos:line="21" pos:column="15">(<argument><expr><operator pos:line="21" pos:column="16">&amp;<pos:position pos:line="21" pos:column="21"/></operator><name><name pos:line="21" pos:column="17">ph<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">.<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">length<pos:position pos:line="21" pos:column="26"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="28">sizeof <argument_list pos:line="21" pos:column="35">(<argument><expr><name><name pos:line="21" pos:column="36">ph<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">.<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="39">length<pos:position pos:line="21" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">ph_length<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">ntohs<pos:position pos:line="22" pos:column="20"/></name> <argument_list pos:line="22" pos:column="21">(<argument><expr><name><name pos:line="22" pos:column="22">ph<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">.<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">length<pos:position pos:line="22" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">(<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">ph_length<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">&lt;=<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="21">PART_ENCRYPTION_AES256_SIZE<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">)<pos:position pos:line="24" pos:column="49"/></operator>
      <operator pos:line="25" pos:column="7">||<pos:position pos:line="25" pos:column="9"/></operator> <operator pos:line="25" pos:column="10">(<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">ph_length<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">&gt;<pos:position pos:line="25" pos:column="25"/></operator> <name pos:line="25" pos:column="23">buffer_size<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">)<pos:position pos:line="25" pos:column="35"/></operator></expr>)<pos:position pos:line="25" pos:column="36"/></condition><then pos:line="25" pos:column="36">
  <block pos:line="26" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">ERROR<pos:position pos:line="27" pos:column="10"/></name> <argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="string" pos:line="27" pos:column="12">"network plugin: AES-256 encrypted part "<pos:position pos:line="27" pos:column="53"/></literal>
        <literal type="string" pos:line="28" pos:column="9">"with invalid length received."<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><operator pos:line="29" pos:column="13">-<pos:position pos:line="29" pos:column="14"/></operator><literal type="number" pos:line="29" pos:column="14">1<pos:position pos:line="29" pos:column="15"/></literal><operator pos:line="29" pos:column="15">)<pos:position pos:line="29" pos:column="16"/></operator></expr>;<pos:position pos:line="29" pos:column="17"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">warning_has_been_printed<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">==<pos:position pos:line="32" pos:column="34"/></operator> <literal type="number" pos:line="32" pos:column="35">0<pos:position pos:line="32" pos:column="36"/></literal></expr>)<pos:position pos:line="32" pos:column="37"/></condition><then pos:line="32" pos:column="37">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">WARNING<pos:position pos:line="34" pos:column="12"/></name> <argument_list pos:line="34" pos:column="13">(<argument><expr><literal type="string" pos:line="34" pos:column="14">"network plugin: Received encrypted packet, but the network "<pos:position pos:line="34" pos:column="75"/></literal>
        <literal type="string" pos:line="35" pos:column="9">"plugin was not linked with libgcrypt, so I cannot "<pos:position pos:line="35" pos:column="61"/></literal>
        <literal type="string" pos:line="36" pos:column="9">"decrypt it. The part will be discarded."<pos:position pos:line="36" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">warning_has_been_printed<pos:position pos:line="37" pos:column="29"/></name> <operator pos:line="37" pos:column="30">=<pos:position pos:line="37" pos:column="31"/></operator> <literal type="number" pos:line="37" pos:column="32">1<pos:position pos:line="37" pos:column="33"/></literal></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="40" pos:column="3">*<pos:position pos:line="40" pos:column="4"/></operator><name pos:line="40" pos:column="4">ret_buffer<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">+=<pos:position pos:line="40" pos:column="17"/></operator> <name pos:line="40" pos:column="18">ph_length<pos:position pos:line="40" pos:column="27"/></name></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="41" pos:column="3">*<pos:position pos:line="41" pos:column="4"/></operator><name pos:line="41" pos:column="4">ret_buffer_size<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">-=<pos:position pos:line="41" pos:column="22"/></operator> <name pos:line="41" pos:column="23">ph_length<pos:position pos:line="41" pos:column="32"/></name></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>

  <return pos:line="43" pos:column="3">return <expr><operator pos:line="43" pos:column="10">(<pos:position pos:line="43" pos:column="11"/></operator><literal type="number" pos:line="43" pos:column="11">0<pos:position pos:line="43" pos:column="12"/></literal><operator pos:line="43" pos:column="12">)<pos:position pos:line="43" pos:column="13"/></operator></expr>;<pos:position pos:line="43" pos:column="14"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

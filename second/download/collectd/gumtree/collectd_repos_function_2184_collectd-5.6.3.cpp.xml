<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2184_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">lu_create_user_obj<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">lookup_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">obj<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="48">/* {{{ */</comment>
                                <parameter><decl><type><name pos:line="2" pos:column="33">data_set_t<pos:position pos:line="2" pos:column="43"/></name> <specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">ds<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">value_list_t<pos:position pos:line="2" pos:column="67"/></name> <specifier pos:line="2" pos:column="68">const<pos:position pos:line="2" pos:column="73"/></specifier> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">vl<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="3" pos:column="33">user_class_t<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">user_class<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="58"/></parameter_list> <block pos:line="3" pos:column="59">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">user_obj_t<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">user_obj<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">user_obj<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">calloc<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="number" pos:line="6" pos:column="21">1<pos:position pos:line="6" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="24">sizeof<argument_list pos:line="6" pos:column="30">(<argument><expr><operator pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="32">user_obj<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">user_obj<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">==<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">NULL<pos:position pos:line="7" pos:column="23"/></name></expr>)<pos:position pos:line="7" pos:column="24"/></condition><then pos:line="7" pos:column="24"> <block pos:line="7" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"utils_vl_lookup: calloc failed."<pos:position pos:line="8" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">NULL<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">)<pos:position pos:line="9" pos:column="18"/></operator></expr>;<pos:position pos:line="9" pos:column="19"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">user_obj<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">next<pos:position pos:line="11" pos:column="17"/></name></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">NULL<pos:position pos:line="11" pos:column="24"/></name></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="13" pos:column="3">user_obj<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">user_obj<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <call><name><name pos:line="13" pos:column="24">obj<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">cb_user_class<pos:position pos:line="13" pos:column="42"/></name></name><argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">ds<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="47">vl<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="51">user_class<pos:position pos:line="13" pos:column="61"/></name><operator pos:line="13" pos:column="61">-&gt;<pos:position pos:line="13" pos:column="66"/></operator><name pos:line="13" pos:column="63">user_class<pos:position pos:line="13" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name><name pos:line="14" pos:column="7">user_obj<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">user_obj<pos:position pos:line="14" pos:column="25"/></name></name> <operator pos:line="14" pos:column="26">==<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="29">NULL<pos:position pos:line="14" pos:column="33"/></name></expr>)<pos:position pos:line="14" pos:column="34"/></condition><then pos:line="14" pos:column="34"> <block pos:line="14" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">sfree<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><name pos:line="15" pos:column="11">user_obj<pos:position pos:line="15" pos:column="19"/></name></expr></argument>)<pos:position pos:line="15" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">WARNING<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><literal type="string" pos:line="16" pos:column="13">"utils_vl_lookup: User-provided constructor failed."<pos:position pos:line="16" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">NULL<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">)<pos:position pos:line="17" pos:column="18"/></operator></expr>;<pos:position pos:line="17" pos:column="19"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

<cpp:define pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">define<pos:position pos:line="20" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="20" pos:column="9">COPY_FIELD<pos:position pos:line="20" pos:column="19"/></name><parameter_list pos:line="20" pos:column="19">(<parameter><type><name pos:line="20" pos:column="20">field<pos:position pos:line="20" pos:column="25"/></name></type></parameter>, <parameter><type><name pos:line="20" pos:column="27">group_mask<pos:position pos:line="20" pos:column="37"/></name></type></parameter>)<pos:position pos:line="20" pos:column="38"/></parameter_list></cpp:macro>                                          \
  <cpp:value pos:line="21" pos:column="3">do {                                                                         \
    if (user_class-&gt;match.field.is_regex &amp;&amp;                                    \
        ((user_class-&gt;match.group_by &amp; group_mask) == 0))                      \
      sstrncpy(user_obj-&gt;ident.field, "/.*/", sizeof(user_obj-&gt;ident.field));  \
    else                                                                       \
      sstrncpy(user_obj-&gt;ident.field, vl-&gt;field,                               \
               sizeof(user_obj-&gt;ident.field));                                 \
  } while (0)<pos:position pos:line="28" pos:column="14"/></cpp:value></cpp:define>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">COPY_FIELD<pos:position pos:line="30" pos:column="13"/></name><argument_list pos:line="30" pos:column="13">(<argument><expr><name pos:line="30" pos:column="14">host<pos:position pos:line="30" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="20">LU_GROUP_BY_HOST<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">COPY_FIELD<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><name pos:line="31" pos:column="14">plugin<pos:position pos:line="31" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="22">LU_GROUP_BY_PLUGIN<pos:position pos:line="31" pos:column="40"/></name></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">COPY_FIELD<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><name pos:line="32" pos:column="14">plugin_instance<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">LU_GROUP_BY_PLUGIN_INSTANCE<pos:position pos:line="32" pos:column="58"/></name></expr></argument>)<pos:position pos:line="32" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">COPY_FIELD<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><name pos:line="33" pos:column="14">type<pos:position pos:line="33" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="20">0<pos:position pos:line="33" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">COPY_FIELD<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><name pos:line="34" pos:column="14">type_instance<pos:position pos:line="34" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="29">LU_GROUP_BY_TYPE_INSTANCE<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="56"/></expr_stmt>

<cpp:undef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">undef<pos:position pos:line="36" pos:column="7"/></cpp:directive> <name pos:line="36" pos:column="8">COPY_FIELD<pos:position pos:line="36" pos:column="18"/></name></cpp:undef>

  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name><name pos:line="38" pos:column="7">user_class<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">-&gt;<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="19">user_obj_list<pos:position pos:line="38" pos:column="32"/></name></name> <operator pos:line="38" pos:column="33">==<pos:position pos:line="38" pos:column="35"/></operator> <name pos:line="38" pos:column="36">NULL<pos:position pos:line="38" pos:column="40"/></name></expr>)<pos:position pos:line="38" pos:column="41"/></condition><then pos:line="38" pos:column="41"> <block pos:line="38" pos:column="42">{
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">user_class<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">-&gt;<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="17">user_obj_list<pos:position pos:line="39" pos:column="30"/></name></name> <operator pos:line="39" pos:column="31">=<pos:position pos:line="39" pos:column="32"/></operator> <name pos:line="39" pos:column="33">user_obj<pos:position pos:line="39" pos:column="41"/></name></expr>;<pos:position pos:line="39" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></then> <else pos:line="40" pos:column="5">else <block pos:line="40" pos:column="10">{
    <decl_stmt><decl><type><name pos:line="41" pos:column="5">user_obj_t<pos:position pos:line="41" pos:column="15"/></name> <modifier pos:line="41" pos:column="16">*<pos:position pos:line="41" pos:column="17"/></modifier></type><name pos:line="41" pos:column="17">last<pos:position pos:line="41" pos:column="21"/></name> <init pos:line="41" pos:column="22">= <expr><name><name pos:line="41" pos:column="24">user_class<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">-&gt;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="36">user_obj_list<pos:position pos:line="41" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="41" pos:column="50"/></decl_stmt>
    <while pos:line="42" pos:column="5">while <condition pos:line="42" pos:column="11">(<expr><name><name pos:line="42" pos:column="12">last<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">next<pos:position pos:line="42" pos:column="22"/></name></name> <operator pos:line="42" pos:column="23">!=<pos:position pos:line="42" pos:column="25"/></operator> <name pos:line="42" pos:column="26">NULL<pos:position pos:line="42" pos:column="30"/></name></expr>)<pos:position pos:line="42" pos:column="31"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="7">last<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <name><name pos:line="43" pos:column="14">last<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">next<pos:position pos:line="43" pos:column="24"/></name></name></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt></block></while>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">last<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">-&gt;<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="11">next<pos:position pos:line="44" pos:column="15"/></name></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <name pos:line="44" pos:column="18">user_obj<pos:position pos:line="44" pos:column="26"/></name></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></else></if>

  <return pos:line="47" pos:column="3">return <expr><operator pos:line="47" pos:column="10">(<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">user_obj<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">)<pos:position pos:line="47" pos:column="20"/></operator></expr>;<pos:position pos:line="47" pos:column="21"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

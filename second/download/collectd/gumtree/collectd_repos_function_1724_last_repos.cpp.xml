<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1724_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ovs_db_event_post<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">ovs_db_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">pdb<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">event<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <block pos:line="1" pos:column="57">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">pthread_mutex_lock<pos:position pos:line="2" pos:column="21"/></name><argument_list pos:line="2" pos:column="21">(<argument><expr><operator pos:line="2" pos:column="22">&amp;<pos:position pos:line="2" pos:column="27"/></operator><name><name pos:line="2" pos:column="23">pdb<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">-&gt;<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="28">event_thread<pos:position pos:line="2" pos:column="40"/></name><operator pos:line="2" pos:column="40">.<pos:position pos:line="2" pos:column="41"/></operator><name pos:line="2" pos:column="41">mutex<pos:position pos:line="2" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="2" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="3" pos:column="3">pdb<pos:position pos:line="3" pos:column="6"/></name><operator pos:line="3" pos:column="6">-&gt;<pos:position pos:line="3" pos:column="11"/></operator><name pos:line="3" pos:column="8">event_thread<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">.<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="21">value<pos:position pos:line="3" pos:column="26"/></name></name> <operator pos:line="3" pos:column="27">=<pos:position pos:line="3" pos:column="28"/></operator> <name pos:line="3" pos:column="29">event<pos:position pos:line="3" pos:column="34"/></name></expr>;<pos:position pos:line="3" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">pthread_mutex_unlock<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">(<argument><expr><operator pos:line="4" pos:column="24">&amp;<pos:position pos:line="4" pos:column="29"/></operator><name><name pos:line="4" pos:column="25">pdb<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">-&gt;<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="30">event_thread<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">.<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="43">mutex<pos:position pos:line="4" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">pthread_cond_signal<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><operator pos:line="5" pos:column="23">&amp;<pos:position pos:line="5" pos:column="28"/></operator><name><name pos:line="5" pos:column="24">pdb<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">event_thread<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">.<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="42">cond<pos:position pos:line="5" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="48"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2417_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ts_create<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">oconfig_item_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ci<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">void<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier><modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">user_data<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list> <comment type="block" pos:line="1" pos:column="66">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ts_data_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">data<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">data<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <call><name pos:line="6" pos:column="10">calloc<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><literal type="number" pos:line="6" pos:column="17">1<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="20">sizeof<argument_list pos:line="6" pos:column="26">(<argument><expr><operator pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">data<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">data<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">NULL<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20"> <block pos:line="7" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"ts_create: calloc failed."<pos:position pos:line="8" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">-<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">ENOMEM<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="12" pos:column="3">data<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">host<pos:position pos:line="12" pos:column="13"/></name></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">NULL<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">data<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">plugin<pos:position pos:line="13" pos:column="15"/></name></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">NULL<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">data<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">plugin_instance<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">NULL<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
  <comment type="block" pos:line="15" pos:column="3">/* data-&gt;type = NULL; */</comment>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">data<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">type_instance<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <name pos:line="16" pos:column="25">NULL<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">data<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">meta<pos:position pos:line="17" pos:column="13"/></name></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">NULL<pos:position pos:line="17" pos:column="20"/></name></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">data<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">meta_delete<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">NULL<pos:position pos:line="18" pos:column="27"/></name></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name pos:line="20" pos:column="3">status<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <literal type="number" pos:line="20" pos:column="12">0<pos:position pos:line="20" pos:column="13"/></literal></expr>;<pos:position pos:line="20" pos:column="14"/></expr_stmt>
  <for pos:line="21" pos:column="3">for <control pos:line="21" pos:column="7">(<init><decl><type><name pos:line="21" pos:column="8">int<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">i<pos:position pos:line="21" pos:column="13"/></name> <init pos:line="21" pos:column="14">= <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="18"/></init> <condition><expr><name pos:line="21" pos:column="19">i<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">&lt;<pos:position pos:line="21" pos:column="25"/></operator> <name><name pos:line="21" pos:column="23">ci<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">children_num<pos:position pos:line="21" pos:column="39"/></name></name></expr>;<pos:position pos:line="21" pos:column="40"/></condition> <incr><expr><name pos:line="21" pos:column="41">i<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">++<pos:position pos:line="21" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="45"/></control> <block pos:line="21" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">oconfig_item_t<pos:position pos:line="22" pos:column="19"/></name> <modifier pos:line="22" pos:column="20">*<pos:position pos:line="22" pos:column="21"/></modifier></type><name pos:line="22" pos:column="21">child<pos:position pos:line="22" pos:column="26"/></name> <init pos:line="22" pos:column="27">= <expr><name><name pos:line="22" pos:column="29">ci<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">children<pos:position pos:line="22" pos:column="41"/></name></name> <operator pos:line="22" pos:column="42">+<pos:position pos:line="22" pos:column="43"/></operator> <name pos:line="22" pos:column="44">i<pos:position pos:line="22" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="46"/></decl_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><call><name pos:line="24" pos:column="10">strcasecmp<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><literal type="string" pos:line="24" pos:column="21">"Host"<pos:position pos:line="24" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="29">child<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">key<pos:position pos:line="24" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call> <operator pos:line="24" pos:column="41">==<pos:position pos:line="24" pos:column="43"/></operator> <literal type="number" pos:line="24" pos:column="44">0<pos:position pos:line="24" pos:column="45"/></literal><operator pos:line="24" pos:column="45">)<pos:position pos:line="24" pos:column="46"/></operator> <operator pos:line="24" pos:column="47">||<pos:position pos:line="24" pos:column="49"/></operator>
        <operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><call><name pos:line="25" pos:column="10">strcasecmp<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><literal type="string" pos:line="25" pos:column="21">"Hostname"<pos:position pos:line="25" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="33">child<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">key<pos:position pos:line="25" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call> <operator pos:line="25" pos:column="45">==<pos:position pos:line="25" pos:column="47"/></operator> <literal type="number" pos:line="25" pos:column="48">0<pos:position pos:line="25" pos:column="49"/></literal><operator pos:line="25" pos:column="49">)<pos:position pos:line="25" pos:column="50"/></operator></expr>)<pos:position pos:line="25" pos:column="51"/></condition><then pos:line="25" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">status<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">ts_config_add_string<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">(<argument><expr><operator pos:line="26" pos:column="37">&amp;<pos:position pos:line="26" pos:column="42"/></operator><name><name pos:line="26" pos:column="38">data<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">-&gt;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="44">host<pos:position pos:line="26" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="50">child<pos:position pos:line="26" pos:column="55"/></name></expr></argument>,
                                    <comment type="block" pos:line="27" pos:column="37">/* may be empty = */</comment> <argument><expr><literal type="number" pos:line="27" pos:column="58">0<pos:position pos:line="27" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt></block></then>
    <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><call><name pos:line="28" pos:column="14">strcasecmp<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><literal type="string" pos:line="28" pos:column="25">"Plugin"<pos:position pos:line="28" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="35">child<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">-&gt;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="42">key<pos:position pos:line="28" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call> <operator pos:line="28" pos:column="47">==<pos:position pos:line="28" pos:column="49"/></operator> <literal type="number" pos:line="28" pos:column="50">0<pos:position pos:line="28" pos:column="51"/></literal></expr>)<pos:position pos:line="28" pos:column="52"/></condition><then pos:line="28" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="7">status<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">ts_config_add_string<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><operator pos:line="29" pos:column="37">&amp;<pos:position pos:line="29" pos:column="42"/></operator><name><name pos:line="29" pos:column="38">data<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">plugin<pos:position pos:line="29" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="52">child<pos:position pos:line="29" pos:column="57"/></name></expr></argument>,
                                    <comment type="block" pos:line="30" pos:column="37">/* may be empty = */</comment> <argument><expr><literal type="number" pos:line="30" pos:column="58">0<pos:position pos:line="30" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><call><name pos:line="31" pos:column="14">strcasecmp<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="string" pos:line="31" pos:column="25">"PluginInstance"<pos:position pos:line="31" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="43">child<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">-&gt;<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="50">key<pos:position pos:line="31" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call> <operator pos:line="31" pos:column="55">==<pos:position pos:line="31" pos:column="57"/></operator> <literal type="number" pos:line="31" pos:column="58">0<pos:position pos:line="31" pos:column="59"/></literal></expr>)<pos:position pos:line="31" pos:column="60"/></condition><then pos:line="31" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="7">status<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <call><name pos:line="32" pos:column="16">ts_config_add_string<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><operator pos:line="32" pos:column="37">&amp;<pos:position pos:line="32" pos:column="42"/></operator><name><name pos:line="32" pos:column="38">data<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">plugin_instance<pos:position pos:line="32" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="61">child<pos:position pos:line="32" pos:column="66"/></name></expr></argument>,
                                    <comment type="block" pos:line="33" pos:column="37">/* may be empty = */</comment> <argument><expr><literal type="number" pos:line="33" pos:column="58">1<pos:position pos:line="33" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="61"/></expr_stmt></block></then></if></elseif>
<cpp:if pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">if<pos:position pos:line="34" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="34" pos:column="5">0<pos:position pos:line="34" pos:column="6"/></literal></expr></cpp:if>
    else if (strcasecmp ("Type", child-&gt;key) == 0)
      status = ts_config_add_string (&amp;data-&gt;type, child,
          <comment type="block" pos:line="37" pos:column="11">/* may be empty = */</comment> 0);
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><call><name pos:line="39" pos:column="14">strcasecmp<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><literal type="string" pos:line="39" pos:column="25">"TypeInstance"<pos:position pos:line="39" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="41">child<pos:position pos:line="39" pos:column="46"/></name><operator pos:line="39" pos:column="46">-&gt;<pos:position pos:line="39" pos:column="51"/></operator><name pos:line="39" pos:column="48">key<pos:position pos:line="39" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="52"/></argument_list></call> <operator pos:line="39" pos:column="53">==<pos:position pos:line="39" pos:column="55"/></operator> <literal type="number" pos:line="39" pos:column="56">0<pos:position pos:line="39" pos:column="57"/></literal></expr>)<pos:position pos:line="39" pos:column="58"/></condition><then pos:line="39" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="7">status<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <call><name pos:line="40" pos:column="16">ts_config_add_string<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><operator pos:line="40" pos:column="37">&amp;<pos:position pos:line="40" pos:column="42"/></operator><name><name pos:line="40" pos:column="38">data<pos:position pos:line="40" pos:column="42"/></name><operator pos:line="40" pos:column="42">-&gt;<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="44">type_instance<pos:position pos:line="40" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="59">child<pos:position pos:line="40" pos:column="64"/></name></expr></argument>,
                                    <comment type="block" pos:line="41" pos:column="37">/* may be empty = */</comment> <argument><expr><literal type="number" pos:line="41" pos:column="58">1<pos:position pos:line="41" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="61"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="42" pos:column="5">else <if pos:line="42" pos:column="10">if <condition pos:line="42" pos:column="13">(<expr><call><name pos:line="42" pos:column="14">strcasecmp<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><literal type="string" pos:line="42" pos:column="25">"MetaData"<pos:position pos:line="42" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="37">child<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">-&gt;<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="44">key<pos:position pos:line="42" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call> <operator pos:line="42" pos:column="49">==<pos:position pos:line="42" pos:column="51"/></operator> <literal type="number" pos:line="42" pos:column="52">0<pos:position pos:line="42" pos:column="53"/></literal></expr>)<pos:position pos:line="42" pos:column="54"/></condition><then pos:line="42" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="7">status<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <call><name pos:line="43" pos:column="16">ts_config_add_meta<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><operator pos:line="43" pos:column="35">&amp;<pos:position pos:line="43" pos:column="40"/></operator><name><name pos:line="43" pos:column="36">data<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">-&gt;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="42">meta<pos:position pos:line="43" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="48">child<pos:position pos:line="43" pos:column="53"/></name></expr></argument>,
                                  <comment type="block" pos:line="44" pos:column="35">/* may be empty = */</comment> <argument><expr><literal type="number" pos:line="44" pos:column="56">1<pos:position pos:line="44" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="59"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="45" pos:column="5">else <if pos:line="45" pos:column="10">if <condition pos:line="45" pos:column="13">(<expr><call><name pos:line="45" pos:column="14">strcasecmp<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><literal type="string" pos:line="45" pos:column="25">"DeleteMetaData"<pos:position pos:line="45" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="43">child<pos:position pos:line="45" pos:column="48"/></name><operator pos:line="45" pos:column="48">-&gt;<pos:position pos:line="45" pos:column="53"/></operator><name pos:line="45" pos:column="50">key<pos:position pos:line="45" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call> <operator pos:line="45" pos:column="55">==<pos:position pos:line="45" pos:column="57"/></operator> <literal type="number" pos:line="45" pos:column="58">0<pos:position pos:line="45" pos:column="59"/></literal></expr>)<pos:position pos:line="45" pos:column="60"/></condition><then pos:line="45" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="7">status<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <call><name pos:line="46" pos:column="16">ts_config_add_meta_delete<pos:position pos:line="46" pos:column="41"/></name><argument_list pos:line="46" pos:column="41">(<argument><expr><operator pos:line="46" pos:column="42">&amp;<pos:position pos:line="46" pos:column="47"/></operator><name><name pos:line="46" pos:column="43">data<pos:position pos:line="46" pos:column="47"/></name><operator pos:line="46" pos:column="47">-&gt;<pos:position pos:line="46" pos:column="52"/></operator><name pos:line="46" pos:column="49">meta_delete<pos:position pos:line="46" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="62">child<pos:position pos:line="46" pos:column="67"/></name></expr></argument>)<pos:position pos:line="46" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="69"/></expr_stmt></block></then></if></elseif>
    <else pos:line="47" pos:column="5">else <block pos:line="47" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">ERROR<pos:position pos:line="48" pos:column="12"/></name><argument_list pos:line="48" pos:column="12">(<argument><expr><literal type="string" pos:line="48" pos:column="13">"Target `set': The `%s' configuration option is not understood "<pos:position pos:line="48" pos:column="77"/></literal>
            <literal type="string" pos:line="49" pos:column="13">"and will be ignored."<pos:position pos:line="49" pos:column="35"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="50" pos:column="13">child<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">-&gt;<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="20">key<pos:position pos:line="50" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="51" pos:column="7">status<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <literal type="number" pos:line="51" pos:column="16">0<pos:position pos:line="51" pos:column="17"/></literal></expr>;<pos:position pos:line="51" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></else></if>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">status<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">!=<pos:position pos:line="54" pos:column="18"/></operator> <literal type="number" pos:line="54" pos:column="19">0<pos:position pos:line="54" pos:column="20"/></literal></expr>)<pos:position pos:line="54" pos:column="21"/></condition><then pos:line="54" pos:column="21">
      <block type="pseudo"><break pos:line="55" pos:column="7">break;<pos:position pos:line="55" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="56" pos:column="4"/></block></for>

  <comment type="block" pos:line="58" pos:column="3">/* Additional sanity-checking */</comment>
  <while pos:line="59" pos:column="3">while <condition pos:line="59" pos:column="9">(<expr><name pos:line="59" pos:column="10">status<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">==<pos:position pos:line="59" pos:column="19"/></operator> <literal type="number" pos:line="59" pos:column="20">0<pos:position pos:line="59" pos:column="21"/></literal></expr>)<pos:position pos:line="59" pos:column="22"/></condition> <block pos:line="59" pos:column="23">{
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><operator pos:line="60" pos:column="9">(<pos:position pos:line="60" pos:column="10"/></operator><name><name pos:line="60" pos:column="10">data<pos:position pos:line="60" pos:column="14"/></name><operator pos:line="60" pos:column="14">-&gt;<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="16">host<pos:position pos:line="60" pos:column="20"/></name></name> <operator pos:line="60" pos:column="21">==<pos:position pos:line="60" pos:column="23"/></operator> <name pos:line="60" pos:column="24">NULL<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">)<pos:position pos:line="60" pos:column="29"/></operator> <operator pos:line="60" pos:column="30">&amp;&amp;<pos:position pos:line="60" pos:column="40"/></operator> <operator pos:line="60" pos:column="33">(<pos:position pos:line="60" pos:column="34"/></operator><name><name pos:line="60" pos:column="34">data<pos:position pos:line="60" pos:column="38"/></name><operator pos:line="60" pos:column="38">-&gt;<pos:position pos:line="60" pos:column="43"/></operator><name pos:line="60" pos:column="40">plugin<pos:position pos:line="60" pos:column="46"/></name></name> <operator pos:line="60" pos:column="47">==<pos:position pos:line="60" pos:column="49"/></operator> <name pos:line="60" pos:column="50">NULL<pos:position pos:line="60" pos:column="54"/></name><operator pos:line="60" pos:column="54">)<pos:position pos:line="60" pos:column="55"/></operator> <operator pos:line="60" pos:column="56">&amp;&amp;<pos:position pos:line="60" pos:column="66"/></operator>
        <operator pos:line="61" pos:column="9">(<pos:position pos:line="61" pos:column="10"/></operator><name><name pos:line="61" pos:column="10">data<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">-&gt;<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="16">plugin_instance<pos:position pos:line="61" pos:column="31"/></name></name> <operator pos:line="61" pos:column="32">==<pos:position pos:line="61" pos:column="34"/></operator> <name pos:line="61" pos:column="35">NULL<pos:position pos:line="61" pos:column="39"/></name><operator pos:line="61" pos:column="39">)<pos:position pos:line="61" pos:column="40"/></operator>
        <comment type="block" pos:line="62" pos:column="9">/* &amp;&amp; (data-&gt;type == NULL) */</comment>
        <operator pos:line="63" pos:column="9">&amp;&amp;<pos:position pos:line="63" pos:column="19"/></operator> <operator pos:line="63" pos:column="12">(<pos:position pos:line="63" pos:column="13"/></operator><name><name pos:line="63" pos:column="13">data<pos:position pos:line="63" pos:column="17"/></name><operator pos:line="63" pos:column="17">-&gt;<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="19">type_instance<pos:position pos:line="63" pos:column="32"/></name></name> <operator pos:line="63" pos:column="33">==<pos:position pos:line="63" pos:column="35"/></operator> <name pos:line="63" pos:column="36">NULL<pos:position pos:line="63" pos:column="40"/></name><operator pos:line="63" pos:column="40">)<pos:position pos:line="63" pos:column="41"/></operator> <operator pos:line="63" pos:column="42">&amp;&amp;<pos:position pos:line="63" pos:column="52"/></operator> <operator pos:line="63" pos:column="45">(<pos:position pos:line="63" pos:column="46"/></operator><name><name pos:line="63" pos:column="46">data<pos:position pos:line="63" pos:column="50"/></name><operator pos:line="63" pos:column="50">-&gt;<pos:position pos:line="63" pos:column="55"/></operator><name pos:line="63" pos:column="52">meta<pos:position pos:line="63" pos:column="56"/></name></name> <operator pos:line="63" pos:column="57">==<pos:position pos:line="63" pos:column="59"/></operator> <name pos:line="63" pos:column="60">NULL<pos:position pos:line="63" pos:column="64"/></name><operator pos:line="63" pos:column="64">)<pos:position pos:line="63" pos:column="65"/></operator> <operator pos:line="63" pos:column="66">&amp;&amp;<pos:position pos:line="63" pos:column="76"/></operator>
        <operator pos:line="64" pos:column="9">(<pos:position pos:line="64" pos:column="10"/></operator><name><name pos:line="64" pos:column="10">data<pos:position pos:line="64" pos:column="14"/></name><operator pos:line="64" pos:column="14">-&gt;<pos:position pos:line="64" pos:column="19"/></operator><name pos:line="64" pos:column="16">meta_delete<pos:position pos:line="64" pos:column="27"/></name></name> <operator pos:line="64" pos:column="28">==<pos:position pos:line="64" pos:column="30"/></operator> <name pos:line="64" pos:column="31">NULL<pos:position pos:line="64" pos:column="35"/></name><operator pos:line="64" pos:column="35">)<pos:position pos:line="64" pos:column="36"/></operator></expr>)<pos:position pos:line="64" pos:column="37"/></condition><then pos:line="64" pos:column="37"> <block pos:line="64" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">ERROR<pos:position pos:line="65" pos:column="12"/></name><argument_list pos:line="65" pos:column="12">(<argument><expr><literal type="string" pos:line="65" pos:column="13">"Target `set': You need to set at least one of `Host', "<pos:position pos:line="65" pos:column="69"/></literal>
            <literal type="string" pos:line="66" pos:column="13">"`Plugin', `PluginInstance', `TypeInstance', "<pos:position pos:line="66" pos:column="59"/></literal>
            <literal type="string" pos:line="67" pos:column="13">"`MetaData', or `DeleteMetaData'."<pos:position pos:line="67" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name pos:line="68" pos:column="7">status<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">=<pos:position pos:line="68" pos:column="15"/></operator> <operator pos:line="68" pos:column="16">-<pos:position pos:line="68" pos:column="17"/></operator><literal type="number" pos:line="68" pos:column="17">1<pos:position pos:line="68" pos:column="18"/></literal></expr>;<pos:position pos:line="68" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name><name pos:line="71" pos:column="9">data<pos:position pos:line="71" pos:column="13"/></name><operator pos:line="71" pos:column="13">-&gt;<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="15">meta<pos:position pos:line="71" pos:column="19"/></name></name> <operator pos:line="71" pos:column="20">!=<pos:position pos:line="71" pos:column="22"/></operator> <name pos:line="71" pos:column="23">NULL<pos:position pos:line="71" pos:column="27"/></name></expr>)<pos:position pos:line="71" pos:column="28"/></condition><then pos:line="71" pos:column="28"> <block pos:line="71" pos:column="29">{
      <comment type="block" pos:line="72" pos:column="7">/* If data-&gt;meta_delete is NULL, this loop is a no-op. */</comment>
      <for pos:line="73" pos:column="7">for <control pos:line="73" pos:column="11">(<init><decl><type><name pos:line="73" pos:column="12">ts_key_list_t<pos:position pos:line="73" pos:column="25"/></name> <modifier pos:line="73" pos:column="26">*<pos:position pos:line="73" pos:column="27"/></modifier></type><name pos:line="73" pos:column="27">l<pos:position pos:line="73" pos:column="28"/></name> <init pos:line="73" pos:column="29">= <expr><name><name pos:line="73" pos:column="31">data<pos:position pos:line="73" pos:column="35"/></name><operator pos:line="73" pos:column="35">-&gt;<pos:position pos:line="73" pos:column="40"/></operator><name pos:line="73" pos:column="37">meta_delete<pos:position pos:line="73" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="73" pos:column="49"/></init> <condition><expr><name pos:line="73" pos:column="50">l<pos:position pos:line="73" pos:column="51"/></name> <operator pos:line="73" pos:column="52">!=<pos:position pos:line="73" pos:column="54"/></operator> <name pos:line="73" pos:column="55">NULL<pos:position pos:line="73" pos:column="59"/></name></expr>;<pos:position pos:line="73" pos:column="60"/></condition> <incr><expr><name pos:line="73" pos:column="61">l<pos:position pos:line="73" pos:column="62"/></name> <operator pos:line="73" pos:column="63">=<pos:position pos:line="73" pos:column="64"/></operator> <name><name pos:line="73" pos:column="65">l<pos:position pos:line="73" pos:column="66"/></name><operator pos:line="73" pos:column="66">-&gt;<pos:position pos:line="73" pos:column="71"/></operator><name pos:line="73" pos:column="68">next<pos:position pos:line="73" pos:column="72"/></name></name></expr></incr>)<pos:position pos:line="73" pos:column="73"/></control> <block pos:line="73" pos:column="74">{
        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><call><name pos:line="74" pos:column="13">meta_data_type<pos:position pos:line="74" pos:column="27"/></name><argument_list pos:line="74" pos:column="27">(<argument><expr><name><name pos:line="74" pos:column="28">data<pos:position pos:line="74" pos:column="32"/></name><operator pos:line="74" pos:column="32">-&gt;<pos:position pos:line="74" pos:column="37"/></operator><name pos:line="74" pos:column="34">meta<pos:position pos:line="74" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="40">l<pos:position pos:line="74" pos:column="41"/></name><operator pos:line="74" pos:column="41">-&gt;<pos:position pos:line="74" pos:column="46"/></operator><name pos:line="74" pos:column="43">key<pos:position pos:line="74" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="47"/></argument_list></call> <operator pos:line="74" pos:column="48">!=<pos:position pos:line="74" pos:column="50"/></operator> <literal type="number" pos:line="74" pos:column="51">0<pos:position pos:line="74" pos:column="52"/></literal></expr>)<pos:position pos:line="74" pos:column="53"/></condition><then pos:line="74" pos:column="53"> <block pos:line="74" pos:column="54">{
          <comment type="block" pos:line="75" pos:column="11">/* MetaData and DeleteMetaData for the same key. */</comment>
          <expr_stmt><expr><call><name pos:line="76" pos:column="11">ERROR<pos:position pos:line="76" pos:column="16"/></name><argument_list pos:line="76" pos:column="16">(<argument><expr><literal type="string" pos:line="76" pos:column="17">"Target `set': Can only have one of `MetaData' or "<pos:position pos:line="76" pos:column="68"/></literal>
                <literal type="string" pos:line="77" pos:column="17">"`DeleteMetaData' for any given key."<pos:position pos:line="77" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="56"/></expr_stmt>
          <expr_stmt><expr><name pos:line="78" pos:column="11">status<pos:position pos:line="78" pos:column="17"/></name> <operator pos:line="78" pos:column="18">=<pos:position pos:line="78" pos:column="19"/></operator> <operator pos:line="78" pos:column="20">-<pos:position pos:line="78" pos:column="21"/></operator><literal type="number" pos:line="78" pos:column="21">1<pos:position pos:line="78" pos:column="22"/></literal></expr>;<pos:position pos:line="78" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if>
      }<pos:position pos:line="80" pos:column="8"/></block></for>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>

    <break pos:line="83" pos:column="5">break;<pos:position pos:line="83" pos:column="11"/></break>
  }<pos:position pos:line="84" pos:column="4"/></block></while>

  <if pos:line="86" pos:column="3">if <condition pos:line="86" pos:column="6">(<expr><name pos:line="86" pos:column="7">status<pos:position pos:line="86" pos:column="13"/></name> <operator pos:line="86" pos:column="14">!=<pos:position pos:line="86" pos:column="16"/></operator> <literal type="number" pos:line="86" pos:column="17">0<pos:position pos:line="86" pos:column="18"/></literal></expr>)<pos:position pos:line="86" pos:column="19"/></condition><then pos:line="86" pos:column="19"> <block pos:line="86" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">ts_destroy<pos:position pos:line="87" pos:column="15"/></name><argument_list pos:line="87" pos:column="15">(<argument><expr><operator pos:line="87" pos:column="16">(<pos:position pos:line="87" pos:column="17"/></operator><name pos:line="87" pos:column="17">void<pos:position pos:line="87" pos:column="21"/></name> <operator pos:line="87" pos:column="22">*<pos:position pos:line="87" pos:column="23"/></operator><operator pos:line="87" pos:column="23">)<pos:position pos:line="87" pos:column="24"/></operator><operator pos:line="87" pos:column="24">&amp;<pos:position pos:line="87" pos:column="29"/></operator><name pos:line="87" pos:column="25">data<pos:position pos:line="87" pos:column="29"/></name></expr></argument>)<pos:position pos:line="87" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="31"/></expr_stmt>
    <return pos:line="88" pos:column="5">return <expr><name pos:line="88" pos:column="12">status<pos:position pos:line="88" pos:column="18"/></name></expr>;<pos:position pos:line="88" pos:column="19"/></return>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="91" pos:column="3">*<pos:position pos:line="91" pos:column="4"/></operator><name pos:line="91" pos:column="4">user_data<pos:position pos:line="91" pos:column="13"/></name> <operator pos:line="91" pos:column="14">=<pos:position pos:line="91" pos:column="15"/></operator> <name pos:line="91" pos:column="16">data<pos:position pos:line="91" pos:column="20"/></name></expr>;<pos:position pos:line="91" pos:column="21"/></expr_stmt>
  <return pos:line="92" pos:column="3">return <expr><literal type="number" pos:line="92" pos:column="10">0<pos:position pos:line="92" pos:column="11"/></literal></expr>;<pos:position pos:line="92" pos:column="12"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

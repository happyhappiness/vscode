<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1272_collectd-5.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cx_config_add_xpath<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">cx_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">db<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="43">/* {{{ */</comment>
                                   <parameter><decl><type><name pos:line="2" pos:column="36">oconfig_item_t<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">ci<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cx_xpath_t<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">xpath<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">xpath<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <operator pos:line="8" pos:column="11">(<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">cx_xpath_t<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></operator><operator pos:line="8" pos:column="24">)<pos:position pos:line="8" pos:column="25"/></operator> <call><name pos:line="8" pos:column="26">malloc<pos:position pos:line="8" pos:column="32"/></name> <argument_list pos:line="8" pos:column="33">(<argument><expr><sizeof pos:line="8" pos:column="34">sizeof <argument_list pos:line="8" pos:column="41">(<argument><expr><operator pos:line="8" pos:column="42">*<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="43">xpath<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="51"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">xpath<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">==<pos:position pos:line="9" pos:column="15"/></operator> <name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ERROR<pos:position pos:line="11" pos:column="10"/></name> <argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="string" pos:line="11" pos:column="12">"curl_xml plugin: malloc failed."<pos:position pos:line="11" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">memset<pos:position pos:line="14" pos:column="9"/></name> <argument_list pos:line="14" pos:column="10">(<argument><expr><name pos:line="14" pos:column="11">xpath<pos:position pos:line="14" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="21">sizeof <argument_list pos:line="14" pos:column="28">(<argument><expr><operator pos:line="14" pos:column="29">*<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">xpath<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">status<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">cf_util_get_string<pos:position pos:line="16" pos:column="30"/></name> <argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">ci<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="36">&amp;<pos:position pos:line="16" pos:column="41"/></operator><name><name pos:line="16" pos:column="37">xpath<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">-&gt;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="44">path<pos:position pos:line="16" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">status<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">!=<pos:position pos:line="17" pos:column="16"/></operator> <literal type="number" pos:line="17" pos:column="17">0<pos:position pos:line="17" pos:column="18"/></literal></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">sfree<pos:position pos:line="19" pos:column="10"/></name> <argument_list pos:line="19" pos:column="11">(<argument><expr><name pos:line="19" pos:column="12">xpath<pos:position pos:line="19" pos:column="17"/></name></expr></argument>)<pos:position pos:line="19" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">status<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">)<pos:position pos:line="20" pos:column="20"/></operator></expr>;<pos:position pos:line="20" pos:column="21"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="23" pos:column="3">/* error out if xpath-&gt;path is an empty string */</comment>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">*<pos:position pos:line="24" pos:column="8"/></operator><name><name pos:line="24" pos:column="8">xpath<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">path<pos:position pos:line="24" pos:column="19"/></name></name> <operator pos:line="24" pos:column="20">==<pos:position pos:line="24" pos:column="22"/></operator> <literal type="number" pos:line="24" pos:column="23">0<pos:position pos:line="24" pos:column="24"/></literal></expr>)<pos:position pos:line="24" pos:column="25"/></condition><then pos:line="24" pos:column="25">
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">ERROR<pos:position pos:line="26" pos:column="10"/></name> <argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="string" pos:line="26" pos:column="12">"curl_xml plugin: invalid xpath. "<pos:position pos:line="26" pos:column="46"/></literal>
           <literal type="string" pos:line="27" pos:column="12">"xpath value can't be an empty string"<pos:position pos:line="27" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><operator pos:line="28" pos:column="13">-<pos:position pos:line="28" pos:column="14"/></operator><literal type="number" pos:line="28" pos:column="14">1<pos:position pos:line="28" pos:column="15"/></literal><operator pos:line="28" pos:column="15">)<pos:position pos:line="28" pos:column="16"/></operator></expr>;<pos:position pos:line="28" pos:column="17"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="31" pos:column="3">status<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <literal type="number" pos:line="31" pos:column="12">0<pos:position pos:line="31" pos:column="13"/></literal></expr>;<pos:position pos:line="31" pos:column="14"/></expr_stmt>
  <for pos:line="32" pos:column="3">for <control pos:line="32" pos:column="7">(<init><expr><name pos:line="32" pos:column="8">i<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">=<pos:position pos:line="32" pos:column="11"/></operator> <literal type="number" pos:line="32" pos:column="12">0<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></init> <condition><expr><name pos:line="32" pos:column="15">i<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">&lt;<pos:position pos:line="32" pos:column="21"/></operator> <name><name pos:line="32" pos:column="19">ci<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">children_num<pos:position pos:line="32" pos:column="35"/></name></name></expr>;<pos:position pos:line="32" pos:column="36"/></condition> <incr><expr><name pos:line="32" pos:column="37">i<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">++<pos:position pos:line="32" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="41"/></control>
  <block pos:line="33" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">oconfig_item_t<pos:position pos:line="34" pos:column="19"/></name> <modifier pos:line="34" pos:column="20">*<pos:position pos:line="34" pos:column="21"/></modifier></type><name pos:line="34" pos:column="21">child<pos:position pos:line="34" pos:column="26"/></name> <init pos:line="34" pos:column="27">= <expr><name><name pos:line="34" pos:column="29">ci<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">-&gt;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="33">children<pos:position pos:line="34" pos:column="41"/></name></name> <operator pos:line="34" pos:column="42">+<pos:position pos:line="34" pos:column="43"/></operator> <name pos:line="34" pos:column="44">i<pos:position pos:line="34" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="34" pos:column="46"/></decl_stmt>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><call><name pos:line="36" pos:column="9">strcasecmp<pos:position pos:line="36" pos:column="19"/></name> <argument_list pos:line="36" pos:column="20">(<argument><expr><literal type="string" pos:line="36" pos:column="21">"Type"<pos:position pos:line="36" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="29">child<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">-&gt;<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="36">key<pos:position pos:line="36" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></call> <operator pos:line="36" pos:column="41">==<pos:position pos:line="36" pos:column="43"/></operator> <literal type="number" pos:line="36" pos:column="44">0<pos:position pos:line="36" pos:column="45"/></literal></expr>)<pos:position pos:line="36" pos:column="46"/></condition><then pos:line="36" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="7">status<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <call><name pos:line="37" pos:column="16">cf_util_get_string<pos:position pos:line="37" pos:column="34"/></name> <argument_list pos:line="37" pos:column="35">(<argument><expr><name pos:line="37" pos:column="36">child<pos:position pos:line="37" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="43">&amp;<pos:position pos:line="37" pos:column="48"/></operator><name><name pos:line="37" pos:column="44">xpath<pos:position pos:line="37" pos:column="49"/></name><operator pos:line="37" pos:column="49">-&gt;<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="51">type<pos:position pos:line="37" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="57"/></expr_stmt></block></then>
    <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><call><name pos:line="38" pos:column="14">strcasecmp<pos:position pos:line="38" pos:column="24"/></name> <argument_list pos:line="38" pos:column="25">(<argument><expr><literal type="string" pos:line="38" pos:column="26">"InstancePrefix"<pos:position pos:line="38" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="44">child<pos:position pos:line="38" pos:column="49"/></name><operator pos:line="38" pos:column="49">-&gt;<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="51">key<pos:position pos:line="38" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call> <operator pos:line="38" pos:column="56">==<pos:position pos:line="38" pos:column="58"/></operator> <literal type="number" pos:line="38" pos:column="59">0<pos:position pos:line="38" pos:column="60"/></literal></expr>)<pos:position pos:line="38" pos:column="61"/></condition><then pos:line="38" pos:column="61">
      <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="7">status<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">cf_util_get_string<pos:position pos:line="39" pos:column="34"/></name> <argument_list pos:line="39" pos:column="35">(<argument><expr><name pos:line="39" pos:column="36">child<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="43">&amp;<pos:position pos:line="39" pos:column="48"/></operator><name><name pos:line="39" pos:column="44">xpath<pos:position pos:line="39" pos:column="49"/></name><operator pos:line="39" pos:column="49">-&gt;<pos:position pos:line="39" pos:column="54"/></operator><name pos:line="39" pos:column="51">instance_prefix<pos:position pos:line="39" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="68"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="40" pos:column="5">else <if pos:line="40" pos:column="10">if <condition pos:line="40" pos:column="13">(<expr><call><name pos:line="40" pos:column="14">strcasecmp<pos:position pos:line="40" pos:column="24"/></name> <argument_list pos:line="40" pos:column="25">(<argument><expr><literal type="string" pos:line="40" pos:column="26">"InstanceFrom"<pos:position pos:line="40" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="42">child<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">-&gt;<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="49">key<pos:position pos:line="40" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call> <operator pos:line="40" pos:column="54">==<pos:position pos:line="40" pos:column="56"/></operator> <literal type="number" pos:line="40" pos:column="57">0<pos:position pos:line="40" pos:column="58"/></literal></expr>)<pos:position pos:line="40" pos:column="59"/></condition><then pos:line="40" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="7">status<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">cf_util_get_string<pos:position pos:line="41" pos:column="34"/></name> <argument_list pos:line="41" pos:column="35">(<argument><expr><name pos:line="41" pos:column="36">child<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="43">&amp;<pos:position pos:line="41" pos:column="48"/></operator><name><name pos:line="41" pos:column="44">xpath<pos:position pos:line="41" pos:column="49"/></name><operator pos:line="41" pos:column="49">-&gt;<pos:position pos:line="41" pos:column="54"/></operator><name pos:line="41" pos:column="51">instance<pos:position pos:line="41" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="61"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="42" pos:column="5">else <if pos:line="42" pos:column="10">if <condition pos:line="42" pos:column="13">(<expr><call><name pos:line="42" pos:column="14">strcasecmp<pos:position pos:line="42" pos:column="24"/></name> <argument_list pos:line="42" pos:column="25">(<argument><expr><literal type="string" pos:line="42" pos:column="26">"ValuesFrom"<pos:position pos:line="42" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="40">child<pos:position pos:line="42" pos:column="45"/></name><operator pos:line="42" pos:column="45">-&gt;<pos:position pos:line="42" pos:column="50"/></operator><name pos:line="42" pos:column="47">key<pos:position pos:line="42" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call> <operator pos:line="42" pos:column="52">==<pos:position pos:line="42" pos:column="54"/></operator> <literal type="number" pos:line="42" pos:column="55">0<pos:position pos:line="42" pos:column="56"/></literal></expr>)<pos:position pos:line="42" pos:column="57"/></condition><then pos:line="42" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="7">status<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <call><name pos:line="43" pos:column="16">cx_config_add_values<pos:position pos:line="43" pos:column="36"/></name> <argument_list pos:line="43" pos:column="37">(<argument><expr><literal type="string" pos:line="43" pos:column="38">"ValuesFrom"<pos:position pos:line="43" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="52">xpath<pos:position pos:line="43" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="59">child<pos:position pos:line="43" pos:column="64"/></name></expr></argument>)<pos:position pos:line="43" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="66"/></expr_stmt></block></then></if></elseif>
    <else pos:line="44" pos:column="5">else
    <block pos:line="45" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">WARNING<pos:position pos:line="46" pos:column="14"/></name> <argument_list pos:line="46" pos:column="15">(<argument><expr><literal type="string" pos:line="46" pos:column="16">"curl_xml plugin: Option `%s' not allowed here."<pos:position pos:line="46" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="66">child<pos:position pos:line="46" pos:column="71"/></name><operator pos:line="46" pos:column="71">-&gt;<pos:position pos:line="46" pos:column="76"/></operator><name pos:line="46" pos:column="73">key<pos:position pos:line="46" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="78"/></expr_stmt>
      <expr_stmt><expr><name pos:line="47" pos:column="7">status<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <operator pos:line="47" pos:column="16">-<pos:position pos:line="47" pos:column="17"/></operator><literal type="number" pos:line="47" pos:column="17">1<pos:position pos:line="47" pos:column="18"/></literal></expr>;<pos:position pos:line="47" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></else></if>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">status<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">!=<pos:position pos:line="50" pos:column="18"/></operator> <literal type="number" pos:line="50" pos:column="19">0<pos:position pos:line="50" pos:column="20"/></literal></expr>)<pos:position pos:line="50" pos:column="21"/></condition><then pos:line="50" pos:column="21">
      <block type="pseudo"><break pos:line="51" pos:column="7">break;<pos:position pos:line="51" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="52" pos:column="4"/></block></for> <comment type="block" pos:line="52" pos:column="5">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><name pos:line="54" pos:column="7">status<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">==<pos:position pos:line="54" pos:column="16"/></operator> <literal type="number" pos:line="54" pos:column="17">0<pos:position pos:line="54" pos:column="18"/></literal> <operator pos:line="54" pos:column="19">&amp;&amp;<pos:position pos:line="54" pos:column="29"/></operator> <name><name pos:line="54" pos:column="22">xpath<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">-&gt;<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="29">type<pos:position pos:line="54" pos:column="33"/></name></name> <operator pos:line="54" pos:column="34">==<pos:position pos:line="54" pos:column="36"/></operator> <name pos:line="54" pos:column="37">NULL<pos:position pos:line="54" pos:column="41"/></name></expr>)<pos:position pos:line="54" pos:column="42"/></condition><then pos:line="54" pos:column="42">
  <block pos:line="55" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">WARNING<pos:position pos:line="56" pos:column="12"/></name> <argument_list pos:line="56" pos:column="13">(<argument><expr><literal type="string" pos:line="56" pos:column="14">"curl_xml plugin: `Type' missing in `xpath' block."<pos:position pos:line="56" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name pos:line="57" pos:column="5">status<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <operator pos:line="57" pos:column="14">-<pos:position pos:line="57" pos:column="15"/></operator><literal type="number" pos:line="57" pos:column="15">1<pos:position pos:line="57" pos:column="16"/></literal></expr>;<pos:position pos:line="57" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>

  <if pos:line="60" pos:column="3">if <condition pos:line="60" pos:column="6">(<expr><name pos:line="60" pos:column="7">status<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">==<pos:position pos:line="60" pos:column="16"/></operator> <literal type="number" pos:line="60" pos:column="17">0<pos:position pos:line="60" pos:column="18"/></literal></expr>)<pos:position pos:line="60" pos:column="19"/></condition><then pos:line="60" pos:column="19">
  <block pos:line="61" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="62" pos:column="5">char<pos:position pos:line="62" pos:column="9"/></name> <modifier pos:line="62" pos:column="10">*<pos:position pos:line="62" pos:column="11"/></modifier></type><name pos:line="62" pos:column="11">name<pos:position pos:line="62" pos:column="15"/></name></decl>;<pos:position pos:line="62" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="63" pos:column="5">llentry_t<pos:position pos:line="63" pos:column="14"/></name> <modifier pos:line="63" pos:column="15">*<pos:position pos:line="63" pos:column="16"/></modifier></type><name pos:line="63" pos:column="16">le<pos:position pos:line="63" pos:column="18"/></name></decl>;<pos:position pos:line="63" pos:column="19"/></decl_stmt>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name><name pos:line="65" pos:column="9">db<pos:position pos:line="65" pos:column="11"/></name><operator pos:line="65" pos:column="11">-&gt;<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="13">list<pos:position pos:line="65" pos:column="17"/></name></name> <operator pos:line="65" pos:column="18">==<pos:position pos:line="65" pos:column="20"/></operator> <name pos:line="65" pos:column="21">NULL<pos:position pos:line="65" pos:column="25"/></name></expr>)<pos:position pos:line="65" pos:column="26"/></condition><then pos:line="65" pos:column="26">
    <block pos:line="66" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="67" pos:column="7">db<pos:position pos:line="67" pos:column="9"/></name><operator pos:line="67" pos:column="9">-&gt;<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="11">list<pos:position pos:line="67" pos:column="15"/></name></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <call><name pos:line="67" pos:column="18">llist_create<pos:position pos:line="67" pos:column="30"/></name><argument_list pos:line="67" pos:column="30">()<pos:position pos:line="67" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="33"/></expr_stmt>
      <if pos:line="68" pos:column="7">if <condition pos:line="68" pos:column="10">(<expr><name><name pos:line="68" pos:column="11">db<pos:position pos:line="68" pos:column="13"/></name><operator pos:line="68" pos:column="13">-&gt;<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="15">list<pos:position pos:line="68" pos:column="19"/></name></name> <operator pos:line="68" pos:column="20">==<pos:position pos:line="68" pos:column="22"/></operator> <name pos:line="68" pos:column="23">NULL<pos:position pos:line="68" pos:column="27"/></name></expr>)<pos:position pos:line="68" pos:column="28"/></condition><then pos:line="68" pos:column="28">
      <block pos:line="69" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">ERROR<pos:position pos:line="70" pos:column="14"/></name> <argument_list pos:line="70" pos:column="15">(<argument><expr><literal type="string" pos:line="70" pos:column="16">"curl_xml plugin: list creation failed."<pos:position pos:line="70" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="58"/></expr_stmt>
        <return pos:line="71" pos:column="9">return <expr><operator pos:line="71" pos:column="16">(<pos:position pos:line="71" pos:column="17"/></operator><operator pos:line="71" pos:column="17">-<pos:position pos:line="71" pos:column="18"/></operator><literal type="number" pos:line="71" pos:column="18">1<pos:position pos:line="71" pos:column="19"/></literal><operator pos:line="71" pos:column="19">)<pos:position pos:line="71" pos:column="20"/></operator></expr>;<pos:position pos:line="71" pos:column="21"/></return>
      }<pos:position pos:line="72" pos:column="8"/></block></then></if>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="75" pos:column="5">name<pos:position pos:line="75" pos:column="9"/></name> <operator pos:line="75" pos:column="10">=<pos:position pos:line="75" pos:column="11"/></operator> <call><name pos:line="75" pos:column="12">strdup<pos:position pos:line="75" pos:column="18"/></name><argument_list pos:line="75" pos:column="18">(<argument><expr><name><name pos:line="75" pos:column="19">xpath<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">-&gt;<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="26">path<pos:position pos:line="75" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="32"/></expr_stmt>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name pos:line="76" pos:column="9">name<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">==<pos:position pos:line="76" pos:column="16"/></operator> <name pos:line="76" pos:column="17">NULL<pos:position pos:line="76" pos:column="21"/></name></expr>)<pos:position pos:line="76" pos:column="22"/></condition><then pos:line="76" pos:column="22">
    <block pos:line="77" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">ERROR<pos:position pos:line="78" pos:column="14"/></name> <argument_list pos:line="78" pos:column="15">(<argument><expr><literal type="string" pos:line="78" pos:column="16">"curl_xml plugin: strdup failed."<pos:position pos:line="78" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="51"/></expr_stmt>
        <return pos:line="79" pos:column="9">return <expr><operator pos:line="79" pos:column="16">(<pos:position pos:line="79" pos:column="17"/></operator><operator pos:line="79" pos:column="17">-<pos:position pos:line="79" pos:column="18"/></operator><literal type="number" pos:line="79" pos:column="18">1<pos:position pos:line="79" pos:column="19"/></literal><operator pos:line="79" pos:column="19">)<pos:position pos:line="79" pos:column="20"/></operator></expr>;<pos:position pos:line="79" pos:column="21"/></return>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="82" pos:column="5">le<pos:position pos:line="82" pos:column="7"/></name> <operator pos:line="82" pos:column="8">=<pos:position pos:line="82" pos:column="9"/></operator> <call><name pos:line="82" pos:column="10">llentry_create<pos:position pos:line="82" pos:column="24"/></name> <argument_list pos:line="82" pos:column="25">(<argument><expr><name pos:line="82" pos:column="26">name<pos:position pos:line="82" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="32">xpath<pos:position pos:line="82" pos:column="37"/></name></expr></argument>)<pos:position pos:line="82" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="39"/></expr_stmt>
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name pos:line="83" pos:column="9">le<pos:position pos:line="83" pos:column="11"/></name> <operator pos:line="83" pos:column="12">==<pos:position pos:line="83" pos:column="14"/></operator> <name pos:line="83" pos:column="15">NULL<pos:position pos:line="83" pos:column="19"/></name></expr>)<pos:position pos:line="83" pos:column="20"/></condition><then pos:line="83" pos:column="20">
    <block pos:line="84" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="85" pos:column="7">ERROR<pos:position pos:line="85" pos:column="12"/></name> <argument_list pos:line="85" pos:column="13">(<argument><expr><literal type="string" pos:line="85" pos:column="14">"curl_xml plugin: llentry_create failed."<pos:position pos:line="85" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="57"/></expr_stmt>
      <return pos:line="86" pos:column="7">return <expr><operator pos:line="86" pos:column="14">(<pos:position pos:line="86" pos:column="15"/></operator><operator pos:line="86" pos:column="15">-<pos:position pos:line="86" pos:column="16"/></operator><literal type="number" pos:line="86" pos:column="16">1<pos:position pos:line="86" pos:column="17"/></literal><operator pos:line="86" pos:column="17">)<pos:position pos:line="86" pos:column="18"/></operator></expr>;<pos:position pos:line="86" pos:column="19"/></return>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="89" pos:column="5">llist_append<pos:position pos:line="89" pos:column="17"/></name> <argument_list pos:line="89" pos:column="18">(<argument><expr><name><name pos:line="89" pos:column="19">db<pos:position pos:line="89" pos:column="21"/></name><operator pos:line="89" pos:column="21">-&gt;<pos:position pos:line="89" pos:column="26"/></operator><name pos:line="89" pos:column="23">list<pos:position pos:line="89" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="29">le<pos:position pos:line="89" pos:column="31"/></name></expr></argument>)<pos:position pos:line="89" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="90" pos:column="4"/></block></then></if>

  <return pos:line="92" pos:column="3">return <expr><operator pos:line="92" pos:column="10">(<pos:position pos:line="92" pos:column="11"/></operator><name pos:line="92" pos:column="11">status<pos:position pos:line="92" pos:column="17"/></name><operator pos:line="92" pos:column="17">)<pos:position pos:line="92" pos:column="18"/></operator></expr>;<pos:position pos:line="92" pos:column="19"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

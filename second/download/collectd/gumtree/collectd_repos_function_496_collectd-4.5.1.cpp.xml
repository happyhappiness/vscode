<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_496_collectd-4.5.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pplugin_dispatch_values<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">pTHX_<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">HV<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">values<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">value_list_t<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">list<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">VALUE_LIST_INIT<pos:position pos:line="3" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">value_t<pos:position pos:line="4" pos:column="16"/></name>      <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">val<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">NULL<pos:position pos:line="4" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">SV<pos:position pos:line="6" pos:column="11"/></name> <modifier pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></modifier><modifier pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></modifier></type><name pos:line="6" pos:column="14">tmp<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">ret<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">NULL<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">==<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">values<pos:position pos:line="10" pos:column="27"/></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">-<pos:position pos:line="11" pos:column="25"/></operator><literal type="number" pos:line="11" pos:column="25">1<pos:position pos:line="11" pos:column="26"/></literal></expr>;<pos:position pos:line="11" pos:column="27"/></return></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">NULL<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">==<pos:position pos:line="13" pos:column="20"/></operator> <operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">tmp<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <call><name pos:line="13" pos:column="28">hv_fetch<pos:position pos:line="13" pos:column="36"/></name> <argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">values<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="46">"type"<pos:position pos:line="13" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="54">4<pos:position pos:line="13" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="57">0<pos:position pos:line="13" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call><operator pos:line="13" pos:column="59">)<pos:position pos:line="13" pos:column="60"/></operator></expr>)<pos:position pos:line="13" pos:column="61"/></condition><then pos:line="13" pos:column="61"> <block pos:line="13" pos:column="62">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">log_err<pos:position pos:line="14" pos:column="24"/></name> <argument_list pos:line="14" pos:column="25">(<argument><expr><literal type="string" pos:line="14" pos:column="26">"pplugin_dispatch_values: No type given."<pos:position pos:line="14" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="69"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">-<pos:position pos:line="15" pos:column="25"/></operator><literal type="number" pos:line="15" pos:column="25">1<pos:position pos:line="15" pos:column="26"/></literal></expr>;<pos:position pos:line="15" pos:column="27"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">sstrncpy<pos:position pos:line="18" pos:column="17"/></name> <argument_list pos:line="18" pos:column="18">(<argument><expr><name><name pos:line="18" pos:column="19">list<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">.<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="24">type<pos:position pos:line="18" pos:column="28"/></name></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="30">SvPV_nolen<pos:position pos:line="18" pos:column="40"/></name> <argument_list pos:line="18" pos:column="41">(<argument><expr><operator pos:line="18" pos:column="42">*<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="43">tmp<pos:position pos:line="18" pos:column="46"/></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="49">sizeof <argument_list pos:line="18" pos:column="56">(<argument><expr><name><name pos:line="18" pos:column="57">list<pos:position pos:line="18" pos:column="61"/></name><operator pos:line="18" pos:column="61">.<pos:position pos:line="18" pos:column="62"/></operator><name pos:line="18" pos:column="62">type<pos:position pos:line="18" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="69"/></expr_stmt>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">(<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">NULL<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">==<pos:position pos:line="20" pos:column="21"/></operator> <operator pos:line="20" pos:column="22">(<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="23">tmp<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <call><name pos:line="20" pos:column="29">hv_fetch<pos:position pos:line="20" pos:column="37"/></name> <argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">values<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="47">"values"<pos:position pos:line="20" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="57">6<pos:position pos:line="20" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="60">0<pos:position pos:line="20" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="62"/></argument_list></call><operator pos:line="20" pos:column="62">)<pos:position pos:line="20" pos:column="63"/></operator><operator pos:line="20" pos:column="63">)<pos:position pos:line="20" pos:column="64"/></operator>
			<operator pos:line="21" pos:column="25">||<pos:position pos:line="21" pos:column="27"/></operator> <operator pos:line="21" pos:column="28">(<pos:position pos:line="21" pos:column="29"/></operator><operator pos:line="21" pos:column="29">!<pos:position pos:line="21" pos:column="30"/></operator> <operator pos:line="21" pos:column="31">(<pos:position pos:line="21" pos:column="32"/></operator><call><name pos:line="21" pos:column="32">SvROK<pos:position pos:line="21" pos:column="37"/></name> <argument_list pos:line="21" pos:column="38">(<argument><expr><operator pos:line="21" pos:column="39">*<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="40">tmp<pos:position pos:line="21" pos:column="43"/></name></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call> <operator pos:line="21" pos:column="45">&amp;&amp;<pos:position pos:line="21" pos:column="55"/></operator> <operator pos:line="21" pos:column="48">(<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="49">SVt_PVAV<pos:position pos:line="21" pos:column="57"/></name> <operator pos:line="21" pos:column="58">==<pos:position pos:line="21" pos:column="60"/></operator> <call><name pos:line="21" pos:column="61">SvTYPE<pos:position pos:line="21" pos:column="67"/></name> <argument_list pos:line="21" pos:column="68">(<argument><expr><call><name pos:line="21" pos:column="69">SvRV<pos:position pos:line="21" pos:column="73"/></name> <argument_list pos:line="21" pos:column="74">(<argument><expr><operator pos:line="21" pos:column="75">*<pos:position pos:line="21" pos:column="76"/></operator><name pos:line="21" pos:column="76">tmp<pos:position pos:line="21" pos:column="79"/></name></expr></argument>)<pos:position pos:line="21" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="81"/></argument_list></call><operator pos:line="21" pos:column="81">)<pos:position pos:line="21" pos:column="82"/></operator><operator pos:line="21" pos:column="82">)<pos:position pos:line="21" pos:column="83"/></operator><operator pos:line="21" pos:column="83">)<pos:position pos:line="21" pos:column="84"/></operator></expr>)<pos:position pos:line="21" pos:column="85"/></condition><then pos:line="21" pos:column="85"> <block pos:line="21" pos:column="86">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">log_err<pos:position pos:line="22" pos:column="24"/></name> <argument_list pos:line="22" pos:column="25">(<argument><expr><literal type="string" pos:line="22" pos:column="26">"pplugin_dispatch_values: No valid values given."<pos:position pos:line="22" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="77"/></expr_stmt>
		<return pos:line="23" pos:column="17">return <expr><operator pos:line="23" pos:column="24">-<pos:position pos:line="23" pos:column="25"/></operator><literal type="number" pos:line="23" pos:column="25">1<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<block pos:line="26" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="27" pos:column="17">AV<pos:position pos:line="27" pos:column="19"/></name>  <modifier pos:line="27" pos:column="21">*<pos:position pos:line="27" pos:column="22"/></modifier></type><name pos:line="27" pos:column="22">array<pos:position pos:line="27" pos:column="27"/></name> <init pos:line="27" pos:column="28">= <expr><operator pos:line="27" pos:column="30">(<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="31">AV<pos:position pos:line="27" pos:column="33"/></name> <operator pos:line="27" pos:column="34">*<pos:position pos:line="27" pos:column="35"/></operator><operator pos:line="27" pos:column="35">)<pos:position pos:line="27" pos:column="36"/></operator><call><name pos:line="27" pos:column="36">SvRV<pos:position pos:line="27" pos:column="40"/></name> <argument_list pos:line="27" pos:column="41">(<argument><expr><operator pos:line="27" pos:column="42">*<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="43">tmp<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="48"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="28" pos:column="17">int<pos:position pos:line="28" pos:column="20"/></name></type> <name pos:line="28" pos:column="21">len<pos:position pos:line="28" pos:column="24"/></name>    <init pos:line="28" pos:column="28">= <expr><call><name pos:line="28" pos:column="30">av_len<pos:position pos:line="28" pos:column="36"/></name> <argument_list pos:line="28" pos:column="37">(<argument><expr><name pos:line="28" pos:column="38">array<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call> <operator pos:line="28" pos:column="45">+<pos:position pos:line="28" pos:column="46"/></operator> <literal type="number" pos:line="28" pos:column="47">1<pos:position pos:line="28" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="28" pos:column="49"/></decl_stmt>

		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">len<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">&lt;=<pos:position pos:line="30" pos:column="30"/></operator> <literal type="number" pos:line="30" pos:column="28">0<pos:position pos:line="30" pos:column="29"/></literal></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30">
			<block type="pseudo"><return pos:line="31" pos:column="25">return <expr><operator pos:line="31" pos:column="32">-<pos:position pos:line="31" pos:column="33"/></operator><literal type="number" pos:line="31" pos:column="33">1<pos:position pos:line="31" pos:column="34"/></literal></expr>;<pos:position pos:line="31" pos:column="35"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="33" pos:column="17">val<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <operator pos:line="33" pos:column="23">(<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="24">value_t<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">*<pos:position pos:line="33" pos:column="33"/></operator><operator pos:line="33" pos:column="33">)<pos:position pos:line="33" pos:column="34"/></operator><call><name pos:line="33" pos:column="34">smalloc<pos:position pos:line="33" pos:column="41"/></name> <argument_list pos:line="33" pos:column="42">(<argument><expr><name pos:line="33" pos:column="43">len<pos:position pos:line="33" pos:column="46"/></name> <operator pos:line="33" pos:column="47">*<pos:position pos:line="33" pos:column="48"/></operator> <sizeof pos:line="33" pos:column="49">sizeof <argument_list pos:line="33" pos:column="56">(<argument><expr><name pos:line="33" pos:column="57">value_t<pos:position pos:line="33" pos:column="64"/></name></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="35" pos:column="17">list<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">.<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">values_len<pos:position pos:line="35" pos:column="32"/></name></name> <operator pos:line="35" pos:column="33">=<pos:position pos:line="35" pos:column="34"/></operator> <macro><name pos:line="35" pos:column="35">av2value<pos:position pos:line="35" pos:column="43"/></name> <argument_list pos:line="35" pos:column="44">(<argument pos:line="35" pos:column="45">aTHX_ list.type<pos:position pos:line="35" pos:column="60"/></argument>, <argument pos:line="35" pos:column="62">(AV *)SvRV (*tmp)<pos:position pos:line="35" pos:column="79"/></argument>,
				<argument pos:line="36" pos:column="33">val<pos:position pos:line="36" pos:column="36"/></argument>, <argument pos:line="36" pos:column="38">len<pos:position pos:line="36" pos:column="41"/></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></macro></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="37" pos:column="17">list<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">.<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">values<pos:position pos:line="37" pos:column="28"/></name></name> <operator pos:line="37" pos:column="29">=<pos:position pos:line="37" pos:column="30"/></operator> <name pos:line="37" pos:column="31">val<pos:position pos:line="37" pos:column="34"/></name></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>

		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">-<pos:position pos:line="39" pos:column="22"/></operator><literal type="number" pos:line="39" pos:column="22">1<pos:position pos:line="39" pos:column="23"/></literal> <operator pos:line="39" pos:column="24">==<pos:position pos:line="39" pos:column="26"/></operator> <name><name pos:line="39" pos:column="27">list<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">.<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="32">values_len<pos:position pos:line="39" pos:column="42"/></name></name></expr>)<pos:position pos:line="39" pos:column="43"/></condition><then pos:line="39" pos:column="43"> <block pos:line="39" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">sfree<pos:position pos:line="40" pos:column="30"/></name> <argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">val<pos:position pos:line="40" pos:column="35"/></name></expr></argument>)<pos:position pos:line="40" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="37"/></expr_stmt>
			<return pos:line="41" pos:column="25">return <expr><operator pos:line="41" pos:column="32">-<pos:position pos:line="41" pos:column="33"/></operator><literal type="number" pos:line="41" pos:column="33">1<pos:position pos:line="41" pos:column="34"/></literal></expr>;<pos:position pos:line="41" pos:column="35"/></return>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>
	}<pos:position pos:line="43" pos:column="10"/></block>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">NULL<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">!=<pos:position pos:line="45" pos:column="20"/></operator> <operator pos:line="45" pos:column="21">(<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="22">tmp<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">=<pos:position pos:line="45" pos:column="27"/></operator> <call><name pos:line="45" pos:column="28">hv_fetch<pos:position pos:line="45" pos:column="36"/></name> <argument_list pos:line="45" pos:column="37">(<argument><expr><name pos:line="45" pos:column="38">values<pos:position pos:line="45" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="46">"time"<pos:position pos:line="45" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="54">4<pos:position pos:line="45" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="57">0<pos:position pos:line="45" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></call><operator pos:line="45" pos:column="59">)<pos:position pos:line="45" pos:column="60"/></operator></expr>)<pos:position pos:line="45" pos:column="61"/></condition><then pos:line="45" pos:column="61"> <block pos:line="45" pos:column="62">{
		<expr_stmt><expr><name><name pos:line="46" pos:column="17">list<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">.<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="22">time<pos:position pos:line="46" pos:column="26"/></name></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <operator pos:line="46" pos:column="29">(<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="30">time_t<pos:position pos:line="46" pos:column="36"/></name><operator pos:line="46" pos:column="36">)<pos:position pos:line="46" pos:column="37"/></operator><call><name pos:line="46" pos:column="37">SvIV<pos:position pos:line="46" pos:column="41"/></name> <argument_list pos:line="46" pos:column="42">(<argument><expr><operator pos:line="46" pos:column="43">*<pos:position pos:line="46" pos:column="44"/></operator><name pos:line="46" pos:column="44">tmp<pos:position pos:line="46" pos:column="47"/></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="47" pos:column="10"/></block></then>
	<else pos:line="48" pos:column="9">else <block pos:line="48" pos:column="14">{
		<expr_stmt><expr><name><name pos:line="49" pos:column="17">list<pos:position pos:line="49" pos:column="21"/></name><operator pos:line="49" pos:column="21">.<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">time<pos:position pos:line="49" pos:column="26"/></name></name> <operator pos:line="49" pos:column="27">=<pos:position pos:line="49" pos:column="28"/></operator> <call><name pos:line="49" pos:column="29">time<pos:position pos:line="49" pos:column="33"/></name> <argument_list pos:line="49" pos:column="34">(<argument><expr><name pos:line="49" pos:column="35">NULL<pos:position pos:line="49" pos:column="39"/></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></else></if>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">NULL<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">!=<pos:position pos:line="52" pos:column="20"/></operator> <operator pos:line="52" pos:column="21">(<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="22">tmp<pos:position pos:line="52" pos:column="25"/></name> <operator pos:line="52" pos:column="26">=<pos:position pos:line="52" pos:column="27"/></operator> <call><name pos:line="52" pos:column="28">hv_fetch<pos:position pos:line="52" pos:column="36"/></name> <argument_list pos:line="52" pos:column="37">(<argument><expr><name pos:line="52" pos:column="38">values<pos:position pos:line="52" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="46">"host"<pos:position pos:line="52" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="54">4<pos:position pos:line="52" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="57">0<pos:position pos:line="52" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="59"/></argument_list></call><operator pos:line="52" pos:column="59">)<pos:position pos:line="52" pos:column="60"/></operator></expr>)<pos:position pos:line="52" pos:column="61"/></condition><then pos:line="52" pos:column="61"> <block pos:line="52" pos:column="62">{
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">sstrncpy<pos:position pos:line="53" pos:column="25"/></name> <argument_list pos:line="53" pos:column="26">(<argument><expr><name><name pos:line="53" pos:column="27">list<pos:position pos:line="53" pos:column="31"/></name><operator pos:line="53" pos:column="31">.<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="32">host<pos:position pos:line="53" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="38">SvPV_nolen<pos:position pos:line="53" pos:column="48"/></name> <argument_list pos:line="53" pos:column="49">(<argument><expr><operator pos:line="53" pos:column="50">*<pos:position pos:line="53" pos:column="51"/></operator><name pos:line="53" pos:column="51">tmp<pos:position pos:line="53" pos:column="54"/></name></expr></argument>)<pos:position pos:line="53" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="57">sizeof <argument_list pos:line="53" pos:column="64">(<argument><expr><name><name pos:line="53" pos:column="65">list<pos:position pos:line="53" pos:column="69"/></name><operator pos:line="53" pos:column="69">.<pos:position pos:line="53" pos:column="70"/></operator><name pos:line="53" pos:column="70">host<pos:position pos:line="53" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></then>
	<else pos:line="55" pos:column="9">else <block pos:line="55" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">sstrncpy<pos:position pos:line="56" pos:column="25"/></name> <argument_list pos:line="56" pos:column="26">(<argument><expr><name><name pos:line="56" pos:column="27">list<pos:position pos:line="56" pos:column="31"/></name><operator pos:line="56" pos:column="31">.<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="32">host<pos:position pos:line="56" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="38">hostname_g<pos:position pos:line="56" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="50">sizeof <argument_list pos:line="56" pos:column="57">(<argument><expr><name><name pos:line="56" pos:column="58">list<pos:position pos:line="56" pos:column="62"/></name><operator pos:line="56" pos:column="62">.<pos:position pos:line="56" pos:column="63"/></operator><name pos:line="56" pos:column="63">host<pos:position pos:line="56" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="56" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="70"/></expr_stmt>
	}<pos:position pos:line="57" pos:column="10"/></block></else></if>

	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">NULL<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">!=<pos:position pos:line="59" pos:column="20"/></operator> <operator pos:line="59" pos:column="21">(<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="22">tmp<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">=<pos:position pos:line="59" pos:column="27"/></operator> <call><name pos:line="59" pos:column="28">hv_fetch<pos:position pos:line="59" pos:column="36"/></name> <argument_list pos:line="59" pos:column="37">(<argument><expr><name pos:line="59" pos:column="38">values<pos:position pos:line="59" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="46">"plugin"<pos:position pos:line="59" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="56">6<pos:position pos:line="59" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="59">0<pos:position pos:line="59" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="61"/></argument_list></call><operator pos:line="59" pos:column="61">)<pos:position pos:line="59" pos:column="62"/></operator></expr>)<pos:position pos:line="59" pos:column="63"/></condition><then pos:line="59" pos:column="63">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="17">sstrncpy<pos:position pos:line="60" pos:column="25"/></name> <argument_list pos:line="60" pos:column="26">(<argument><expr><name><name pos:line="60" pos:column="27">list<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">.<pos:position pos:line="60" pos:column="32"/></operator><name pos:line="60" pos:column="32">plugin<pos:position pos:line="60" pos:column="38"/></name></name></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="40">SvPV_nolen<pos:position pos:line="60" pos:column="50"/></name> <argument_list pos:line="60" pos:column="51">(<argument><expr><operator pos:line="60" pos:column="52">*<pos:position pos:line="60" pos:column="53"/></operator><name pos:line="60" pos:column="53">tmp<pos:position pos:line="60" pos:column="56"/></name></expr></argument>)<pos:position pos:line="60" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="60" pos:column="59">sizeof <argument_list pos:line="60" pos:column="66">(<argument><expr><name><name pos:line="60" pos:column="67">list<pos:position pos:line="60" pos:column="71"/></name><operator pos:line="60" pos:column="71">.<pos:position pos:line="60" pos:column="72"/></operator><name pos:line="60" pos:column="72">plugin<pos:position pos:line="60" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="60" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="81"/></expr_stmt></block></then></if>

	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">NULL<pos:position pos:line="62" pos:column="17"/></name> <operator pos:line="62" pos:column="18">!=<pos:position pos:line="62" pos:column="20"/></operator> <operator pos:line="62" pos:column="21">(<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="22">tmp<pos:position pos:line="62" pos:column="25"/></name> <operator pos:line="62" pos:column="26">=<pos:position pos:line="62" pos:column="27"/></operator> <call><name pos:line="62" pos:column="28">hv_fetch<pos:position pos:line="62" pos:column="36"/></name> <argument_list pos:line="62" pos:column="37">(<argument><expr><name pos:line="62" pos:column="38">values<pos:position pos:line="62" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="46">"plugin_instance"<pos:position pos:line="62" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="65">15<pos:position pos:line="62" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="69">0<pos:position pos:line="62" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="71"/></argument_list></call><operator pos:line="62" pos:column="71">)<pos:position pos:line="62" pos:column="72"/></operator></expr>)<pos:position pos:line="62" pos:column="73"/></condition><then pos:line="62" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="17">sstrncpy<pos:position pos:line="63" pos:column="25"/></name> <argument_list pos:line="63" pos:column="26">(<argument><expr><name><name pos:line="63" pos:column="27">list<pos:position pos:line="63" pos:column="31"/></name><operator pos:line="63" pos:column="31">.<pos:position pos:line="63" pos:column="32"/></operator><name pos:line="63" pos:column="32">plugin_instance<pos:position pos:line="63" pos:column="47"/></name></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="49">SvPV_nolen<pos:position pos:line="63" pos:column="59"/></name> <argument_list pos:line="63" pos:column="60">(<argument><expr><operator pos:line="63" pos:column="61">*<pos:position pos:line="63" pos:column="62"/></operator><name pos:line="63" pos:column="62">tmp<pos:position pos:line="63" pos:column="65"/></name></expr></argument>)<pos:position pos:line="63" pos:column="66"/></argument_list></call></expr></argument>,
				<argument><expr><sizeof pos:line="64" pos:column="33">sizeof <argument_list pos:line="64" pos:column="40">(<argument><expr><name><name pos:line="64" pos:column="41">list<pos:position pos:line="64" pos:column="45"/></name><operator pos:line="64" pos:column="45">.<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="46">plugin_instance<pos:position pos:line="64" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="64"/></expr_stmt></block></then></if>

	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">NULL<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">!=<pos:position pos:line="66" pos:column="20"/></operator> <operator pos:line="66" pos:column="21">(<pos:position pos:line="66" pos:column="22"/></operator><name pos:line="66" pos:column="22">tmp<pos:position pos:line="66" pos:column="25"/></name> <operator pos:line="66" pos:column="26">=<pos:position pos:line="66" pos:column="27"/></operator> <call><name pos:line="66" pos:column="28">hv_fetch<pos:position pos:line="66" pos:column="36"/></name> <argument_list pos:line="66" pos:column="37">(<argument><expr><name pos:line="66" pos:column="38">values<pos:position pos:line="66" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="46">"type_instance"<pos:position pos:line="66" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="63">13<pos:position pos:line="66" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="67">0<pos:position pos:line="66" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="69"/></argument_list></call><operator pos:line="66" pos:column="69">)<pos:position pos:line="66" pos:column="70"/></operator></expr>)<pos:position pos:line="66" pos:column="71"/></condition><then pos:line="66" pos:column="71">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="17">sstrncpy<pos:position pos:line="67" pos:column="25"/></name> <argument_list pos:line="67" pos:column="26">(<argument><expr><name><name pos:line="67" pos:column="27">list<pos:position pos:line="67" pos:column="31"/></name><operator pos:line="67" pos:column="31">.<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="32">type_instance<pos:position pos:line="67" pos:column="45"/></name></name></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="47">SvPV_nolen<pos:position pos:line="67" pos:column="57"/></name> <argument_list pos:line="67" pos:column="58">(<argument><expr><operator pos:line="67" pos:column="59">*<pos:position pos:line="67" pos:column="60"/></operator><name pos:line="67" pos:column="60">tmp<pos:position pos:line="67" pos:column="63"/></name></expr></argument>)<pos:position pos:line="67" pos:column="64"/></argument_list></call></expr></argument>,
				<argument><expr><sizeof pos:line="68" pos:column="33">sizeof <argument_list pos:line="68" pos:column="40">(<argument><expr><name><name pos:line="68" pos:column="41">list<pos:position pos:line="68" pos:column="45"/></name><operator pos:line="68" pos:column="45">.<pos:position pos:line="68" pos:column="46"/></operator><name pos:line="68" pos:column="46">type_instance<pos:position pos:line="68" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="68" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="62"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="70" pos:column="9">ret<pos:position pos:line="70" pos:column="12"/></name> <operator pos:line="70" pos:column="13">=<pos:position pos:line="70" pos:column="14"/></operator> <call><name pos:line="70" pos:column="15">plugin_dispatch_values<pos:position pos:line="70" pos:column="37"/></name> <argument_list pos:line="70" pos:column="38">(<argument><expr><operator pos:line="70" pos:column="39">&amp;<pos:position pos:line="70" pos:column="44"/></operator><name pos:line="70" pos:column="40">list<pos:position pos:line="70" pos:column="44"/></name></expr></argument>)<pos:position pos:line="70" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="72" pos:column="9">sfree<pos:position pos:line="72" pos:column="14"/></name> <argument_list pos:line="72" pos:column="15">(<argument><expr><name pos:line="72" pos:column="16">val<pos:position pos:line="72" pos:column="19"/></name></expr></argument>)<pos:position pos:line="72" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="21"/></expr_stmt>
	<return pos:line="73" pos:column="9">return <expr><name pos:line="73" pos:column="16">ret<pos:position pos:line="73" pos:column="19"/></name></expr>;<pos:position pos:line="73" pos:column="20"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

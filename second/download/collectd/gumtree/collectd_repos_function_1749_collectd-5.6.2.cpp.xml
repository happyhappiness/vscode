<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1749_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">memory_init<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list> <block pos:line="1" pos:column="30">{
<cpp:if pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">if<pos:position pos:line="2" pos:column="4"/></cpp:directive> <expr><name pos:line="2" pos:column="5">HAVE_HOST_STATISTICS<pos:position pos:line="2" pos:column="25"/></name></expr></cpp:if>
  <expr_stmt><expr><name pos:line="3" pos:column="3">port_host<pos:position pos:line="3" pos:column="12"/></name> <operator pos:line="3" pos:column="13">=<pos:position pos:line="3" pos:column="14"/></operator> <call><name pos:line="3" pos:column="15">mach_host_self<pos:position pos:line="3" pos:column="29"/></name><argument_list pos:line="3" pos:column="29">()<pos:position pos:line="3" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">host_page_size<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><name pos:line="4" pos:column="18">port_host<pos:position pos:line="4" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="29">&amp;<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="30">pagesize<pos:position pos:line="4" pos:column="38"/></name></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="40"/></expr_stmt>
<comment type="block" pos:line="5" pos:column="1">/* #endif HAVE_HOST_STATISTICS */</comment>

<cpp:elif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">elif<pos:position pos:line="7" pos:column="6"/></cpp:directive> <expr><name pos:line="7" pos:column="7">HAVE_SYSCTLBYNAME<pos:position pos:line="7" pos:column="24"/></name></expr></cpp:elif>
<comment type="block" pos:line="8" pos:column="1">/* no init stuff */</comment>
<comment type="block" pos:line="9" pos:column="1">/* #endif HAVE_SYSCTLBYNAME */</comment>

<cpp:elif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">elif<pos:position pos:line="11" pos:column="6"/></cpp:directive> <expr><call><name pos:line="11" pos:column="7">defined<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">KERNEL_LINUX<pos:position pos:line="11" pos:column="27"/></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr></cpp:elif>
<comment type="block" pos:line="12" pos:column="1">/* no init stuff */</comment>
<comment type="block" pos:line="13" pos:column="1">/* #endif KERNEL_LINUX */</comment>

<cpp:elif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">elif<pos:position pos:line="15" pos:column="6"/></cpp:directive> <expr><call><name pos:line="15" pos:column="7">defined<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">HAVE_LIBKSTAT<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr></cpp:elif>
  <comment type="block" pos:line="16" pos:column="3">/* getpagesize(3C) tells me this does not fail.. */</comment>
  <expr_stmt><expr><name pos:line="17" pos:column="3">pagesize<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">getpagesize<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">()<pos:position pos:line="17" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><call><name pos:line="18" pos:column="7">get_kstat<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><operator pos:line="18" pos:column="17">&amp;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="18">ksp<pos:position pos:line="18" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"unix"<pos:position pos:line="18" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="31">0<pos:position pos:line="18" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="34">"system_pages"<pos:position pos:line="18" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call> <operator pos:line="18" pos:column="50">!=<pos:position pos:line="18" pos:column="52"/></operator> <literal type="number" pos:line="18" pos:column="53">0<pos:position pos:line="18" pos:column="54"/></literal></expr>)<pos:position pos:line="18" pos:column="55"/></condition><then pos:line="18" pos:column="55"> <block pos:line="18" pos:column="56">{
    <expr_stmt><expr><name pos:line="19" pos:column="5">ksp<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <name pos:line="19" pos:column="11">NULL<pos:position pos:line="19" pos:column="15"/></name></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><operator pos:line="20" pos:column="13">-<pos:position pos:line="20" pos:column="14"/></operator><literal type="number" pos:line="20" pos:column="14">1<pos:position pos:line="20" pos:column="15"/></literal><operator pos:line="20" pos:column="15">)<pos:position pos:line="20" pos:column="16"/></operator></expr>;<pos:position pos:line="20" pos:column="17"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><call><name pos:line="22" pos:column="7">get_kstat<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><operator pos:line="22" pos:column="17">&amp;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="18">ksz<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"zfs"<pos:position pos:line="22" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="30">0<pos:position pos:line="22" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="33">"arcstats"<pos:position pos:line="22" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call> <operator pos:line="22" pos:column="45">!=<pos:position pos:line="22" pos:column="47"/></operator> <literal type="number" pos:line="22" pos:column="48">0<pos:position pos:line="22" pos:column="49"/></literal></expr>)<pos:position pos:line="22" pos:column="50"/></condition><then pos:line="22" pos:column="50"> <block pos:line="22" pos:column="51">{
    <expr_stmt><expr><name pos:line="23" pos:column="5">ksz<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <name pos:line="23" pos:column="11">NULL<pos:position pos:line="23" pos:column="15"/></name></expr>;<pos:position pos:line="23" pos:column="16"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><operator pos:line="24" pos:column="13">-<pos:position pos:line="24" pos:column="14"/></operator><literal type="number" pos:line="24" pos:column="14">1<pos:position pos:line="24" pos:column="15"/></literal><operator pos:line="24" pos:column="15">)<pos:position pos:line="24" pos:column="16"/></operator></expr>;<pos:position pos:line="24" pos:column="17"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

<comment type="block" pos:line="27" pos:column="1">/* #endif HAVE_LIBKSTAT */</comment>

<cpp:elif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">elif<pos:position pos:line="29" pos:column="6"/></cpp:directive> <expr><name pos:line="29" pos:column="7">HAVE_SYSCTL<pos:position pos:line="29" pos:column="18"/></name></expr></cpp:elif>
  <expr_stmt><expr><name pos:line="30" pos:column="3">pagesize<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <call><name pos:line="30" pos:column="14">getpagesize<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">()<pos:position pos:line="30" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">pagesize<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">&lt;=<pos:position pos:line="31" pos:column="21"/></operator> <literal type="number" pos:line="31" pos:column="19">0<pos:position pos:line="31" pos:column="20"/></literal></expr>)<pos:position pos:line="31" pos:column="21"/></condition><then pos:line="31" pos:column="21"> <block pos:line="31" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">ERROR<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><literal type="string" pos:line="32" pos:column="11">"memory plugin: Invalid pagesize: %i"<pos:position pos:line="32" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">pagesize<pos:position pos:line="32" pos:column="58"/></name></expr></argument>)<pos:position pos:line="32" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="60"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><operator pos:line="33" pos:column="13">-<pos:position pos:line="33" pos:column="14"/></operator><literal type="number" pos:line="33" pos:column="14">1<pos:position pos:line="33" pos:column="15"/></literal><operator pos:line="33" pos:column="15">)<pos:position pos:line="33" pos:column="16"/></operator></expr>;<pos:position pos:line="33" pos:column="17"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>
<comment type="block" pos:line="35" pos:column="1">/* #endif HAVE_SYSCTL */</comment>

<cpp:elif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">elif<pos:position pos:line="37" pos:column="6"/></cpp:directive> <expr><name pos:line="37" pos:column="7">HAVE_LIBSTATGRAB<pos:position pos:line="37" pos:column="23"/></name></expr></cpp:elif>
<comment type="block" pos:line="38" pos:column="1">/* no init stuff */</comment>
<comment type="block" pos:line="39" pos:column="1">/* #endif HAVE_LIBSTATGRAB */</comment>

<cpp:elif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">elif<pos:position pos:line="41" pos:column="6"/></cpp:directive> <expr><name pos:line="41" pos:column="7">HAVE_PERFSTAT<pos:position pos:line="41" pos:column="20"/></name></expr></cpp:elif>
  <expr_stmt><expr><name pos:line="42" pos:column="3">pagesize<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">getpagesize<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">()<pos:position pos:line="42" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="43" pos:column="8">/* HAVE_PERFSTAT */</comment>
  <return pos:line="44" pos:column="3">return <expr><operator pos:line="44" pos:column="10">(<pos:position pos:line="44" pos:column="11"/></operator><literal type="number" pos:line="44" pos:column="11">0<pos:position pos:line="44" pos:column="12"/></literal><operator pos:line="44" pos:column="12">)<pos:position pos:line="44" pos:column="13"/></operator></expr>;<pos:position pos:line="44" pos:column="14"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

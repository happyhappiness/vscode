<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_708_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mic_read_cpu<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">mic<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list> <block pos:line="1" pos:column="34">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">MicCoreUtil<pos:position pos:line="2" pos:column="14"/></name></type> <name pos:line="2" pos:column="15">core_util<pos:position pos:line="2" pos:column="24"/></name></decl>;<pos:position pos:line="2" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">MicCoreJiff<pos:position pos:line="3" pos:column="14"/></name></type> <name><name pos:line="3" pos:column="15">core_jiffs<pos:position pos:line="3" pos:column="25"/></name><index pos:line="3" pos:column="25">[<expr><name pos:line="3" pos:column="26">MAX_CORES<pos:position pos:line="3" pos:column="35"/></name></expr>]<pos:position pos:line="3" pos:column="36"/></index></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">U32<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">core_jiffs_size<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">U32<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">core_jiffs_size<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">MAX_CORES<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></operator> <sizeof pos:line="7" pos:column="33">sizeof<argument_list pos:line="7" pos:column="39">(<argument><expr><name pos:line="7" pos:column="40">MicCoreJiff<pos:position pos:line="7" pos:column="51"/></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></sizeof></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><name pos:line="8" pos:column="3">status<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">MicGetCoreUtilization<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">mic_handle<pos:position pos:line="8" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="46">&amp;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="47">core_util<pos:position pos:line="8" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="58">core_jiffs<pos:position pos:line="8" pos:column="68"/></name></expr></argument>,
                                 <argument><expr><operator pos:line="9" pos:column="34">&amp;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="35">core_jiffs_size<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">status<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">!=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">MIC_ACCESS_API_SUCCESS<pos:position pos:line="10" pos:column="39"/></name></expr>)<pos:position pos:line="10" pos:column="40"/></condition><then pos:line="10" pos:column="40"> <block pos:line="10" pos:column="41">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ERROR<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><literal type="string" pos:line="11" pos:column="11">"mic plugin: Problem getting CPU utilization: %s"<pos:position pos:line="11" pos:column="60"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="12" pos:column="11">MicGetErrorString<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">status<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">show_cpu<pos:position pos:line="16" pos:column="15"/></name></expr>)<pos:position pos:line="16" pos:column="16"/></condition><then pos:line="16" pos:column="16"> <block pos:line="16" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">mic_submit_cpu<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">mic<pos:position pos:line="17" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="25">"user"<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="33">-<pos:position pos:line="17" pos:column="34"/></operator><literal type="number" pos:line="17" pos:column="34">1<pos:position pos:line="17" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="37">core_util<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">.<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="47">sum<pos:position pos:line="17" pos:column="50"/></name><operator pos:line="17" pos:column="50">.<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="51">user<pos:position pos:line="17" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">mic_submit_cpu<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">mic<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="25">"sys"<pos:position pos:line="18" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="32">-<pos:position pos:line="18" pos:column="33"/></operator><literal type="number" pos:line="18" pos:column="33">1<pos:position pos:line="18" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="36">core_util<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">.<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="46">sum<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">.<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="50">sys<pos:position pos:line="18" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">mic_submit_cpu<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><name pos:line="19" pos:column="20">mic<pos:position pos:line="19" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="25">"nice"<pos:position pos:line="19" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="33">-<pos:position pos:line="19" pos:column="34"/></operator><literal type="number" pos:line="19" pos:column="34">1<pos:position pos:line="19" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="37">core_util<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">.<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="47">sum<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">.<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">nice<pos:position pos:line="19" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">mic_submit_cpu<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">mic<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="25">"idle"<pos:position pos:line="20" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="33">-<pos:position pos:line="20" pos:column="34"/></operator><literal type="number" pos:line="20" pos:column="34">1<pos:position pos:line="20" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="37">core_util<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">.<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="47">sum<pos:position pos:line="20" pos:column="50"/></name><operator pos:line="20" pos:column="50">.<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="51">idle<pos:position pos:line="20" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">show_cpu_cores<pos:position pos:line="23" pos:column="21"/></name></expr>)<pos:position pos:line="23" pos:column="22"/></condition><then pos:line="23" pos:column="22"> <block pos:line="23" pos:column="23">{
    <for pos:line="24" pos:column="5">for <control pos:line="24" pos:column="9">(<init><decl><type><name pos:line="24" pos:column="10">int<pos:position pos:line="24" pos:column="13"/></name></type> <name pos:line="24" pos:column="14">j<pos:position pos:line="24" pos:column="15"/></name> <init pos:line="24" pos:column="16">= <expr><literal type="number" pos:line="24" pos:column="18">0<pos:position pos:line="24" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="20"/></init> <condition><expr><name pos:line="24" pos:column="21">j<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">&lt;<pos:position pos:line="24" pos:column="27"/></operator> <name><name pos:line="24" pos:column="25">core_util<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">.<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="35">core<pos:position pos:line="24" pos:column="39"/></name></name></expr>;<pos:position pos:line="24" pos:column="40"/></condition> <incr><expr><name pos:line="24" pos:column="41">j<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">++<pos:position pos:line="24" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="45"/></control> <block pos:line="24" pos:column="46">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">mic_submit_cpu<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">mic<pos:position pos:line="25" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="27">"user"<pos:position pos:line="25" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">j<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="38">core_jiffs<pos:position pos:line="25" pos:column="48"/></name><index pos:line="25" pos:column="48">[<expr><name pos:line="25" pos:column="49">j<pos:position pos:line="25" pos:column="50"/></name></expr>]<pos:position pos:line="25" pos:column="51"/></index></name><operator pos:line="25" pos:column="51">.<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="52">user<pos:position pos:line="25" pos:column="56"/></name></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">mic_submit_cpu<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">mic<pos:position pos:line="26" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="27">"sys"<pos:position pos:line="26" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">j<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="37">core_jiffs<pos:position pos:line="26" pos:column="47"/></name><index pos:line="26" pos:column="47">[<expr><name pos:line="26" pos:column="48">j<pos:position pos:line="26" pos:column="49"/></name></expr>]<pos:position pos:line="26" pos:column="50"/></index></name><operator pos:line="26" pos:column="50">.<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="51">sys<pos:position pos:line="26" pos:column="54"/></name></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">mic_submit_cpu<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">mic<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="27">"nice"<pos:position pos:line="27" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="35">j<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="38">core_jiffs<pos:position pos:line="27" pos:column="48"/></name><index pos:line="27" pos:column="48">[<expr><name pos:line="27" pos:column="49">j<pos:position pos:line="27" pos:column="50"/></name></expr>]<pos:position pos:line="27" pos:column="51"/></index></name><operator pos:line="27" pos:column="51">.<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="52">nice<pos:position pos:line="27" pos:column="56"/></name></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">mic_submit_cpu<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">mic<pos:position pos:line="28" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="27">"idle"<pos:position pos:line="28" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="35">j<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="38">core_jiffs<pos:position pos:line="28" pos:column="48"/></name><index pos:line="28" pos:column="48">[<expr><name pos:line="28" pos:column="49">j<pos:position pos:line="28" pos:column="50"/></name></expr>]<pos:position pos:line="28" pos:column="51"/></index></name><operator pos:line="28" pos:column="51">.<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="52">idle<pos:position pos:line="28" pos:column="56"/></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></for>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>
  <return pos:line="31" pos:column="3">return <expr><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><literal type="number" pos:line="31" pos:column="11">0<pos:position pos:line="31" pos:column="12"/></literal><operator pos:line="31" pos:column="12">)<pos:position pos:line="31" pos:column="13"/></operator></expr>;<pos:position pos:line="31" pos:column="14"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

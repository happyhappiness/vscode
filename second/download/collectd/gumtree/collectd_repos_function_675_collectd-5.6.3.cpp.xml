<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_675_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cjni_init_plugins<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">JNIEnv<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">jvm_env<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <comment type="block" pos:line="1" pos:column="47">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init><decl><type><name pos:line="5" pos:column="8">size_t<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">i<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></init> <condition><expr><name pos:line="5" pos:column="22">i<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">&lt;<pos:position pos:line="5" pos:column="28"/></operator> <name pos:line="5" pos:column="26">java_callbacks_num<pos:position pos:line="5" pos:column="44"/></name></expr>;<pos:position pos:line="5" pos:column="45"/></condition> <incr><expr><name pos:line="5" pos:column="46">i<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">++<pos:position pos:line="5" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="50"/></control> <block pos:line="5" pos:column="51">{
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">java_callbacks<pos:position pos:line="6" pos:column="23"/></name><index pos:line="6" pos:column="23">[<expr><name pos:line="6" pos:column="24">i<pos:position pos:line="6" pos:column="25"/></name></expr>]<pos:position pos:line="6" pos:column="26"/></index></name><operator pos:line="6" pos:column="26">.<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">type<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">!=<pos:position pos:line="6" pos:column="34"/></operator> <name pos:line="6" pos:column="35">CB_TYPE_INIT<pos:position pos:line="6" pos:column="47"/></name></expr>)<pos:position pos:line="6" pos:column="48"/></condition><then pos:line="6" pos:column="48">
      <block type="pseudo"><continue pos:line="7" pos:column="7">continue;<pos:position pos:line="7" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">DEBUG<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="string" pos:line="9" pos:column="11">"java plugin: Initializing %s"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="43">java_callbacks<pos:position pos:line="9" pos:column="57"/></name><index pos:line="9" pos:column="57">[<expr><name pos:line="9" pos:column="58">i<pos:position pos:line="9" pos:column="59"/></name></expr>]<pos:position pos:line="9" pos:column="60"/></index></name><operator pos:line="9" pos:column="60">.<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="61">name<pos:position pos:line="9" pos:column="65"/></name></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">status<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name><operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><operator pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">jvm_env<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">)<pos:position pos:line="11" pos:column="24"/></operator><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">CallIntMethod<pos:position pos:line="11" pos:column="39"/></name></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name pos:line="11" pos:column="40">jvm_env<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="49">java_callbacks<pos:position pos:line="11" pos:column="63"/></name><index pos:line="11" pos:column="63">[<expr><name pos:line="11" pos:column="64">i<pos:position pos:line="11" pos:column="65"/></name></expr>]<pos:position pos:line="11" pos:column="66"/></index></name><operator pos:line="11" pos:column="66">.<pos:position pos:line="11" pos:column="67"/></operator><name pos:line="11" pos:column="67">object<pos:position pos:line="11" pos:column="73"/></name></expr></argument>,
                                       <argument><expr><name><name pos:line="12" pos:column="40">java_callbacks<pos:position pos:line="12" pos:column="54"/></name><index pos:line="12" pos:column="54">[<expr><name pos:line="12" pos:column="55">i<pos:position pos:line="12" pos:column="56"/></name></expr>]<pos:position pos:line="12" pos:column="57"/></index></name><operator pos:line="12" pos:column="57">.<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="58">method<pos:position pos:line="12" pos:column="64"/></name></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">status<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">!=<pos:position pos:line="13" pos:column="18"/></operator> <literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21"> <block pos:line="13" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">ERROR<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><literal type="string" pos:line="14" pos:column="13">"java plugin: Initializing `%s' failed with status %i. "<pos:position pos:line="14" pos:column="69"/></literal>
            <literal type="string" pos:line="15" pos:column="13">"Removing read function."<pos:position pos:line="15" pos:column="38"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="16" pos:column="13">java_callbacks<pos:position pos:line="16" pos:column="27"/></name><index pos:line="16" pos:column="27">[<expr><name pos:line="16" pos:column="28">i<pos:position pos:line="16" pos:column="29"/></name></expr>]<pos:position pos:line="16" pos:column="30"/></index></name><operator pos:line="16" pos:column="30">.<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="31">name<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">status<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">plugin_unregister_read<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name><name pos:line="17" pos:column="30">java_callbacks<pos:position pos:line="17" pos:column="44"/></name><index pos:line="17" pos:column="44">[<expr><name pos:line="17" pos:column="45">i<pos:position pos:line="17" pos:column="46"/></name></expr>]<pos:position pos:line="17" pos:column="47"/></index></name><operator pos:line="17" pos:column="47">.<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="48">name<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
  }<pos:position pos:line="19" pos:column="4"/></block></for>

  <return pos:line="21" pos:column="3">return <expr><operator pos:line="21" pos:column="10">(<pos:position pos:line="21" pos:column="11"/></operator><literal type="number" pos:line="21" pos:column="11">0<pos:position pos:line="21" pos:column="12"/></literal><operator pos:line="21" pos:column="12">)<pos:position pos:line="21" pos:column="13"/></operator></expr>;<pos:position pos:line="21" pos:column="14"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_809_collectd-4.8.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">swap_read<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">KERNEL_LINUX<pos:position pos:line="3" pos:column="17"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">FILE<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">fh<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">buffer<pos:position pos:line="5" pos:column="20"/></name><index pos:line="5" pos:column="20">[<expr><literal type="number" pos:line="5" pos:column="21">1024<pos:position pos:line="5" pos:column="25"/></literal></expr>]<pos:position pos:line="5" pos:column="26"/></index></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name><name pos:line="7" pos:column="15">fields<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><literal type="number" pos:line="7" pos:column="22">8<pos:position pos:line="7" pos:column="23"/></literal></expr>]<pos:position pos:line="7" pos:column="24"/></index></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">numfields<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="10" pos:column="9">derive_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">swap_used<pos:position pos:line="10" pos:column="27"/></name>   <init pos:line="10" pos:column="30">= <expr><literal type="number" pos:line="10" pos:column="32">0<pos:position pos:line="10" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">derive_t<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">swap_cached<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">derive_t<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">swap_free<pos:position pos:line="12" pos:column="27"/></name>   <init pos:line="12" pos:column="30">= <expr><literal type="number" pos:line="12" pos:column="32">0<pos:position pos:line="12" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">derive_t<pos:position pos:line="13" pos:column="17"/></name></type> <name pos:line="13" pos:column="18">swap_total<pos:position pos:line="13" pos:column="28"/></name>  <init pos:line="13" pos:column="30">= <expr><literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">derive_t<pos:position pos:line="14" pos:column="17"/></name></type> <name pos:line="14" pos:column="18">swap_in<pos:position pos:line="14" pos:column="25"/></name>     <init pos:line="14" pos:column="30">= <expr><literal type="number" pos:line="14" pos:column="32">0<pos:position pos:line="14" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">derive_t<pos:position pos:line="15" pos:column="17"/></name></type> <name pos:line="15" pos:column="18">swap_out<pos:position pos:line="15" pos:column="26"/></name>    <init pos:line="15" pos:column="30">= <expr><literal type="number" pos:line="15" pos:column="32">0<pos:position pos:line="15" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="34"/></decl_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">fh<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">fopen<pos:position pos:line="17" pos:column="24"/></name> <argument_list pos:line="17" pos:column="25">(<argument><expr><literal type="string" pos:line="17" pos:column="26">"/proc/meminfo"<pos:position pos:line="17" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="43">"r"<pos:position pos:line="17" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call><operator pos:line="17" pos:column="47">)<pos:position pos:line="17" pos:column="48"/></operator> <operator pos:line="17" pos:column="49">==<pos:position pos:line="17" pos:column="51"/></operator> <name pos:line="17" pos:column="52">NULL<pos:position pos:line="17" pos:column="56"/></name></expr>)<pos:position pos:line="17" pos:column="57"/></condition><then pos:line="17" pos:column="57">
	<block pos:line="18" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">char<pos:position pos:line="19" pos:column="21"/></name></type> <name><name pos:line="19" pos:column="22">errbuf<pos:position pos:line="19" pos:column="28"/></name><index pos:line="19" pos:column="28">[<expr><literal type="number" pos:line="19" pos:column="29">1024<pos:position pos:line="19" pos:column="33"/></literal></expr>]<pos:position pos:line="19" pos:column="34"/></index></name></decl>;<pos:position pos:line="19" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">WARNING<pos:position pos:line="20" pos:column="24"/></name> <argument_list pos:line="20" pos:column="25">(<argument><expr><literal type="string" pos:line="20" pos:column="26">"memory: fopen: %s"<pos:position pos:line="20" pos:column="45"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="21" pos:column="33">sstrerror<pos:position pos:line="21" pos:column="42"/></name> <argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">errno<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="51">errbuf<pos:position pos:line="21" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="59">sizeof <argument_list pos:line="21" pos:column="66">(<argument><expr><name pos:line="21" pos:column="67">errbuf<pos:position pos:line="21" pos:column="73"/></name></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="77"/></expr_stmt>
		<return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><operator pos:line="22" pos:column="25">-<pos:position pos:line="22" pos:column="26"/></operator><literal type="number" pos:line="22" pos:column="26">1<pos:position pos:line="22" pos:column="27"/></literal><operator pos:line="22" pos:column="27">)<pos:position pos:line="22" pos:column="28"/></operator></expr>;<pos:position pos:line="22" pos:column="29"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<while pos:line="25" pos:column="9">while <condition pos:line="25" pos:column="15">(<expr><call><name pos:line="25" pos:column="16">fgets<pos:position pos:line="25" pos:column="21"/></name> <argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">buffer<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="31">1024<pos:position pos:line="25" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="37">fh<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call> <operator pos:line="25" pos:column="41">!=<pos:position pos:line="25" pos:column="43"/></operator> <name pos:line="25" pos:column="44">NULL<pos:position pos:line="25" pos:column="48"/></name></expr>)<pos:position pos:line="25" pos:column="49"/></condition>
	<block pos:line="26" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="27" pos:column="17">derive_t<pos:position pos:line="27" pos:column="25"/></name> <modifier pos:line="27" pos:column="26">*<pos:position pos:line="27" pos:column="27"/></modifier></type><name pos:line="27" pos:column="27">val<pos:position pos:line="27" pos:column="30"/></name> <init pos:line="27" pos:column="31">= <expr><name pos:line="27" pos:column="33">NULL<pos:position pos:line="27" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="38"/></decl_stmt>

		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">strncasecmp<pos:position pos:line="29" pos:column="32"/></name> <argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">buffer<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="42">"SwapTotal:"<pos:position pos:line="29" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="56">10<pos:position pos:line="29" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call> <operator pos:line="29" pos:column="60">==<pos:position pos:line="29" pos:column="62"/></operator> <literal type="number" pos:line="29" pos:column="63">0<pos:position pos:line="29" pos:column="64"/></literal></expr>)<pos:position pos:line="29" pos:column="65"/></condition><then pos:line="29" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="25">val<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <operator pos:line="30" pos:column="31">&amp;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="32">swap_total<pos:position pos:line="30" pos:column="42"/></name></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt></block></then>
		<elseif pos:line="31" pos:column="17">else <if pos:line="31" pos:column="22">if <condition pos:line="31" pos:column="25">(<expr><call><name pos:line="31" pos:column="26">strncasecmp<pos:position pos:line="31" pos:column="37"/></name> <argument_list pos:line="31" pos:column="38">(<argument><expr><name pos:line="31" pos:column="39">buffer<pos:position pos:line="31" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="47">"SwapFree:"<pos:position pos:line="31" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="60">9<pos:position pos:line="31" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call> <operator pos:line="31" pos:column="63">==<pos:position pos:line="31" pos:column="65"/></operator> <literal type="number" pos:line="31" pos:column="66">0<pos:position pos:line="31" pos:column="67"/></literal></expr>)<pos:position pos:line="31" pos:column="68"/></condition><then pos:line="31" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="25">val<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <operator pos:line="32" pos:column="31">&amp;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="32">swap_free<pos:position pos:line="32" pos:column="41"/></name></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="33" pos:column="17">else <if pos:line="33" pos:column="22">if <condition pos:line="33" pos:column="25">(<expr><call><name pos:line="33" pos:column="26">strncasecmp<pos:position pos:line="33" pos:column="37"/></name> <argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">buffer<pos:position pos:line="33" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="47">"SwapCached:"<pos:position pos:line="33" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="62">11<pos:position pos:line="33" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call> <operator pos:line="33" pos:column="66">==<pos:position pos:line="33" pos:column="68"/></operator> <literal type="number" pos:line="33" pos:column="69">0<pos:position pos:line="33" pos:column="70"/></literal></expr>)<pos:position pos:line="33" pos:column="71"/></condition><then pos:line="33" pos:column="71">
			<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="25">val<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">=<pos:position pos:line="34" pos:column="30"/></operator> <operator pos:line="34" pos:column="31">&amp;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="32">swap_cached<pos:position pos:line="34" pos:column="43"/></name></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt></block></then></if></elseif>
		<else pos:line="35" pos:column="17">else
			<block type="pseudo"><continue pos:line="36" pos:column="25">continue;<pos:position pos:line="36" pos:column="34"/></continue></block></else></if>

		<expr_stmt><expr><name pos:line="38" pos:column="17">numfields<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <call><name pos:line="38" pos:column="29">strsplit<pos:position pos:line="38" pos:column="37"/></name> <argument_list pos:line="38" pos:column="38">(<argument><expr><name pos:line="38" pos:column="39">buffer<pos:position pos:line="38" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="47">fields<pos:position pos:line="38" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="55">8<pos:position pos:line="38" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="58"/></expr_stmt>

		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">numfields<pos:position pos:line="40" pos:column="30"/></name> <operator pos:line="40" pos:column="31">&lt;<pos:position pos:line="40" pos:column="35"/></operator> <literal type="number" pos:line="40" pos:column="33">2<pos:position pos:line="40" pos:column="34"/></literal></expr>)<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35">
			<block type="pseudo"><continue pos:line="41" pos:column="25">continue;<pos:position pos:line="41" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><operator pos:line="43" pos:column="17">*<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="18">val<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">=<pos:position pos:line="43" pos:column="23"/></operator> <operator pos:line="43" pos:column="24">(<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="25">derive_t<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">)<pos:position pos:line="43" pos:column="34"/></operator> <call><name pos:line="43" pos:column="35">atoll<pos:position pos:line="43" pos:column="40"/></name> <argument_list pos:line="43" pos:column="41">(<argument><expr><name><name pos:line="43" pos:column="42">fields<pos:position pos:line="43" pos:column="48"/></name><index pos:line="43" pos:column="48">[<expr><literal type="number" pos:line="43" pos:column="49">1<pos:position pos:line="43" pos:column="50"/></literal></expr>]<pos:position pos:line="43" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call> <operator pos:line="43" pos:column="53">*<pos:position pos:line="43" pos:column="54"/></operator> <literal type="number" pos:line="43" pos:column="55">1024LL<pos:position pos:line="43" pos:column="61"/></literal></expr>;<pos:position pos:line="43" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></while>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><call><name pos:line="46" pos:column="13">fclose<pos:position pos:line="46" pos:column="19"/></name> <argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">fh<pos:position pos:line="46" pos:column="23"/></name></expr></argument>)<pos:position pos:line="46" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="25"/></condition><then pos:line="46" pos:column="25">
	<block pos:line="47" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">char<pos:position pos:line="48" pos:column="21"/></name></type> <name><name pos:line="48" pos:column="22">errbuf<pos:position pos:line="48" pos:column="28"/></name><index pos:line="48" pos:column="28">[<expr><literal type="number" pos:line="48" pos:column="29">1024<pos:position pos:line="48" pos:column="33"/></literal></expr>]<pos:position pos:line="48" pos:column="34"/></index></name></decl>;<pos:position pos:line="48" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">WARNING<pos:position pos:line="49" pos:column="24"/></name> <argument_list pos:line="49" pos:column="25">(<argument><expr><literal type="string" pos:line="49" pos:column="26">"memory: fclose: %s"<pos:position pos:line="49" pos:column="46"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="50" pos:column="33">sstrerror<pos:position pos:line="50" pos:column="42"/></name> <argument_list pos:line="50" pos:column="43">(<argument><expr><name pos:line="50" pos:column="44">errno<pos:position pos:line="50" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="51">errbuf<pos:position pos:line="50" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="59">sizeof <argument_list pos:line="50" pos:column="66">(<argument><expr><name pos:line="50" pos:column="67">errbuf<pos:position pos:line="50" pos:column="73"/></name></expr></argument>)<pos:position pos:line="50" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>

	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><operator pos:line="53" pos:column="13">(<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">swap_total<pos:position pos:line="53" pos:column="24"/></name> <operator pos:line="53" pos:column="25">==<pos:position pos:line="53" pos:column="27"/></operator> <literal type="number" pos:line="53" pos:column="28">0LL<pos:position pos:line="53" pos:column="31"/></literal><operator pos:line="53" pos:column="31">)<pos:position pos:line="53" pos:column="32"/></operator> <operator pos:line="53" pos:column="33">||<pos:position pos:line="53" pos:column="35"/></operator> <operator pos:line="53" pos:column="36">(<pos:position pos:line="53" pos:column="37"/></operator><operator pos:line="53" pos:column="37">(<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="38">swap_free<pos:position pos:line="53" pos:column="47"/></name> <operator pos:line="53" pos:column="48">+<pos:position pos:line="53" pos:column="49"/></operator> <name pos:line="53" pos:column="50">swap_cached<pos:position pos:line="53" pos:column="61"/></name><operator pos:line="53" pos:column="61">)<pos:position pos:line="53" pos:column="62"/></operator> <operator pos:line="53" pos:column="63">&gt;<pos:position pos:line="53" pos:column="67"/></operator> <name pos:line="53" pos:column="65">swap_total<pos:position pos:line="53" pos:column="75"/></name><operator pos:line="53" pos:column="75">)<pos:position pos:line="53" pos:column="76"/></operator></expr>)<pos:position pos:line="53" pos:column="77"/></condition><then pos:line="53" pos:column="77">
		<block type="pseudo"><return pos:line="54" pos:column="17">return <expr><operator pos:line="54" pos:column="24">(<pos:position pos:line="54" pos:column="25"/></operator><operator pos:line="54" pos:column="25">-<pos:position pos:line="54" pos:column="26"/></operator><literal type="number" pos:line="54" pos:column="26">1<pos:position pos:line="54" pos:column="27"/></literal><operator pos:line="54" pos:column="27">)<pos:position pos:line="54" pos:column="28"/></operator></expr>;<pos:position pos:line="54" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="56" pos:column="9">swap_used<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <name pos:line="56" pos:column="21">swap_total<pos:position pos:line="56" pos:column="31"/></name> <operator pos:line="56" pos:column="32">-<pos:position pos:line="56" pos:column="33"/></operator> <operator pos:line="56" pos:column="34">(<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="35">swap_free<pos:position pos:line="56" pos:column="44"/></name> <operator pos:line="56" pos:column="45">+<pos:position pos:line="56" pos:column="46"/></operator> <name pos:line="56" pos:column="47">swap_cached<pos:position pos:line="56" pos:column="58"/></name><operator pos:line="56" pos:column="58">)<pos:position pos:line="56" pos:column="59"/></operator></expr>;<pos:position pos:line="56" pos:column="60"/></expr_stmt>

	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><operator pos:line="58" pos:column="13">(<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="14">fh<pos:position pos:line="58" pos:column="16"/></name> <operator pos:line="58" pos:column="17">=<pos:position pos:line="58" pos:column="18"/></operator> <call><name pos:line="58" pos:column="19">fopen<pos:position pos:line="58" pos:column="24"/></name> <argument_list pos:line="58" pos:column="25">(<argument><expr><literal type="string" pos:line="58" pos:column="26">"/proc/vmstat"<pos:position pos:line="58" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="42">"r"<pos:position pos:line="58" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="46"/></argument_list></call><operator pos:line="58" pos:column="46">)<pos:position pos:line="58" pos:column="47"/></operator> <operator pos:line="58" pos:column="48">==<pos:position pos:line="58" pos:column="50"/></operator> <name pos:line="58" pos:column="51">NULL<pos:position pos:line="58" pos:column="55"/></name></expr>)<pos:position pos:line="58" pos:column="56"/></condition><then pos:line="58" pos:column="56">
	<block pos:line="59" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="60" pos:column="17">char<pos:position pos:line="60" pos:column="21"/></name></type> <name><name pos:line="60" pos:column="22">errbuf<pos:position pos:line="60" pos:column="28"/></name><index pos:line="60" pos:column="28">[<expr><literal type="number" pos:line="60" pos:column="29">1024<pos:position pos:line="60" pos:column="33"/></literal></expr>]<pos:position pos:line="60" pos:column="34"/></index></name></decl>;<pos:position pos:line="60" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="61" pos:column="17">WARNING<pos:position pos:line="61" pos:column="24"/></name> <argument_list pos:line="61" pos:column="25">(<argument><expr><literal type="string" pos:line="61" pos:column="26">"swap: fopen: %s"<pos:position pos:line="61" pos:column="43"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="62" pos:column="33">sstrerror<pos:position pos:line="62" pos:column="42"/></name> <argument_list pos:line="62" pos:column="43">(<argument><expr><name pos:line="62" pos:column="44">errno<pos:position pos:line="62" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="51">errbuf<pos:position pos:line="62" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="59">sizeof <argument_list pos:line="62" pos:column="66">(<argument><expr><name pos:line="62" pos:column="67">errbuf<pos:position pos:line="62" pos:column="73"/></name></expr></argument>)<pos:position pos:line="62" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="62" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="77"/></expr_stmt>
		<return pos:line="63" pos:column="17">return <expr><operator pos:line="63" pos:column="24">(<pos:position pos:line="63" pos:column="25"/></operator><operator pos:line="63" pos:column="25">-<pos:position pos:line="63" pos:column="26"/></operator><literal type="number" pos:line="63" pos:column="26">1<pos:position pos:line="63" pos:column="27"/></literal><operator pos:line="63" pos:column="27">)<pos:position pos:line="63" pos:column="28"/></operator></expr>;<pos:position pos:line="63" pos:column="29"/></return>
	}<pos:position pos:line="64" pos:column="10"/></block></then></if>

	<while pos:line="66" pos:column="9">while <condition pos:line="66" pos:column="15">(<expr><call><name pos:line="66" pos:column="16">fgets<pos:position pos:line="66" pos:column="21"/></name> <argument_list pos:line="66" pos:column="22">(<argument><expr><name pos:line="66" pos:column="23">buffer<pos:position pos:line="66" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="31">1024<pos:position pos:line="66" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="37">fh<pos:position pos:line="66" pos:column="39"/></name></expr></argument>)<pos:position pos:line="66" pos:column="40"/></argument_list></call> <operator pos:line="66" pos:column="41">!=<pos:position pos:line="66" pos:column="43"/></operator> <name pos:line="66" pos:column="44">NULL<pos:position pos:line="66" pos:column="48"/></name></expr>)<pos:position pos:line="66" pos:column="49"/></condition>
	<block pos:line="67" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="68" pos:column="17">derive_t<pos:position pos:line="68" pos:column="25"/></name> <modifier pos:line="68" pos:column="26">*<pos:position pos:line="68" pos:column="27"/></modifier></type><name pos:line="68" pos:column="27">val<pos:position pos:line="68" pos:column="30"/></name> <init pos:line="68" pos:column="31">= <expr><name pos:line="68" pos:column="33">NULL<pos:position pos:line="68" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="68" pos:column="38"/></decl_stmt>

		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><call><name pos:line="70" pos:column="21">strncasecmp<pos:position pos:line="70" pos:column="32"/></name> <argument_list pos:line="70" pos:column="33">(<argument><expr><name pos:line="70" pos:column="34">buffer<pos:position pos:line="70" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="42">"pswpin"<pos:position pos:line="70" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="52">6<pos:position pos:line="70" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="54"/></argument_list></call> <operator pos:line="70" pos:column="55">==<pos:position pos:line="70" pos:column="57"/></operator> <literal type="number" pos:line="70" pos:column="58">0<pos:position pos:line="70" pos:column="59"/></literal></expr>)<pos:position pos:line="70" pos:column="60"/></condition><then pos:line="70" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="25">val<pos:position pos:line="71" pos:column="28"/></name> <operator pos:line="71" pos:column="29">=<pos:position pos:line="71" pos:column="30"/></operator> <operator pos:line="71" pos:column="31">&amp;<pos:position pos:line="71" pos:column="36"/></operator><name pos:line="71" pos:column="32">swap_in<pos:position pos:line="71" pos:column="39"/></name></expr>;<pos:position pos:line="71" pos:column="40"/></expr_stmt></block></then>
		<elseif pos:line="72" pos:column="17">else <if pos:line="72" pos:column="22">if <condition pos:line="72" pos:column="25">(<expr><call><name pos:line="72" pos:column="26">strncasecmp<pos:position pos:line="72" pos:column="37"/></name> <argument_list pos:line="72" pos:column="38">(<argument><expr><name pos:line="72" pos:column="39">buffer<pos:position pos:line="72" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="47">"pswpout"<pos:position pos:line="72" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="58">7<pos:position pos:line="72" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="60"/></argument_list></call> <operator pos:line="72" pos:column="61">==<pos:position pos:line="72" pos:column="63"/></operator> <literal type="number" pos:line="72" pos:column="64">0<pos:position pos:line="72" pos:column="65"/></literal></expr>)<pos:position pos:line="72" pos:column="66"/></condition><then pos:line="72" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="25">val<pos:position pos:line="73" pos:column="28"/></name> <operator pos:line="73" pos:column="29">=<pos:position pos:line="73" pos:column="30"/></operator> <operator pos:line="73" pos:column="31">&amp;<pos:position pos:line="73" pos:column="36"/></operator><name pos:line="73" pos:column="32">swap_out<pos:position pos:line="73" pos:column="40"/></name></expr>;<pos:position pos:line="73" pos:column="41"/></expr_stmt></block></then></if></elseif>
		<else pos:line="74" pos:column="17">else
			<block type="pseudo"><continue pos:line="75" pos:column="25">continue;<pos:position pos:line="75" pos:column="34"/></continue></block></else></if>

		<expr_stmt><expr><name pos:line="77" pos:column="17">numfields<pos:position pos:line="77" pos:column="26"/></name> <operator pos:line="77" pos:column="27">=<pos:position pos:line="77" pos:column="28"/></operator> <call><name pos:line="77" pos:column="29">strsplit<pos:position pos:line="77" pos:column="37"/></name> <argument_list pos:line="77" pos:column="38">(<argument><expr><name pos:line="77" pos:column="39">buffer<pos:position pos:line="77" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="47">fields<pos:position pos:line="77" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="55">8<pos:position pos:line="77" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="58"/></expr_stmt>

		<if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><name pos:line="79" pos:column="21">numfields<pos:position pos:line="79" pos:column="30"/></name> <operator pos:line="79" pos:column="31">&lt;<pos:position pos:line="79" pos:column="35"/></operator> <literal type="number" pos:line="79" pos:column="33">2<pos:position pos:line="79" pos:column="34"/></literal></expr>)<pos:position pos:line="79" pos:column="35"/></condition><then pos:line="79" pos:column="35">
			<block type="pseudo"><continue pos:line="80" pos:column="25">continue;<pos:position pos:line="80" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><operator pos:line="82" pos:column="17">*<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="18">val<pos:position pos:line="82" pos:column="21"/></name> <operator pos:line="82" pos:column="22">=<pos:position pos:line="82" pos:column="23"/></operator> <operator pos:line="82" pos:column="24">(<pos:position pos:line="82" pos:column="25"/></operator><name pos:line="82" pos:column="25">derive_t<pos:position pos:line="82" pos:column="33"/></name><operator pos:line="82" pos:column="33">)<pos:position pos:line="82" pos:column="34"/></operator> <call><name pos:line="82" pos:column="35">atoll<pos:position pos:line="82" pos:column="40"/></name> <argument_list pos:line="82" pos:column="41">(<argument><expr><name><name pos:line="82" pos:column="42">fields<pos:position pos:line="82" pos:column="48"/></name><index pos:line="82" pos:column="48">[<expr><literal type="number" pos:line="82" pos:column="49">1<pos:position pos:line="82" pos:column="50"/></literal></expr>]<pos:position pos:line="82" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="82" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="83" pos:column="10"/></block></while>

	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><call><name pos:line="85" pos:column="13">fclose<pos:position pos:line="85" pos:column="19"/></name> <argument_list pos:line="85" pos:column="20">(<argument><expr><name pos:line="85" pos:column="21">fh<pos:position pos:line="85" pos:column="23"/></name></expr></argument>)<pos:position pos:line="85" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="25"/></condition><then pos:line="85" pos:column="25">
	<block pos:line="86" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="87" pos:column="17">char<pos:position pos:line="87" pos:column="21"/></name></type> <name><name pos:line="87" pos:column="22">errbuf<pos:position pos:line="87" pos:column="28"/></name><index pos:line="87" pos:column="28">[<expr><literal type="number" pos:line="87" pos:column="29">1024<pos:position pos:line="87" pos:column="33"/></literal></expr>]<pos:position pos:line="87" pos:column="34"/></index></name></decl>;<pos:position pos:line="87" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="88" pos:column="17">WARNING<pos:position pos:line="88" pos:column="24"/></name> <argument_list pos:line="88" pos:column="25">(<argument><expr><literal type="string" pos:line="88" pos:column="26">"swap: fclose: %s"<pos:position pos:line="88" pos:column="44"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="89" pos:column="33">sstrerror<pos:position pos:line="89" pos:column="42"/></name> <argument_list pos:line="89" pos:column="43">(<argument><expr><name pos:line="89" pos:column="44">errno<pos:position pos:line="89" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="51">errbuf<pos:position pos:line="89" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="89" pos:column="59">sizeof <argument_list pos:line="89" pos:column="66">(<argument><expr><name pos:line="89" pos:column="67">errbuf<pos:position pos:line="89" pos:column="73"/></name></expr></argument>)<pos:position pos:line="89" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="89" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="90" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="92" pos:column="9">swap_submit<pos:position pos:line="92" pos:column="20"/></name> <argument_list pos:line="92" pos:column="21">(<argument><expr><literal type="string" pos:line="92" pos:column="22">"used"<pos:position pos:line="92" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="30">swap_used<pos:position pos:line="92" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="41">DS_TYPE_GAUGE<pos:position pos:line="92" pos:column="54"/></name></expr></argument>)<pos:position pos:line="92" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="93" pos:column="9">swap_submit<pos:position pos:line="93" pos:column="20"/></name> <argument_list pos:line="93" pos:column="21">(<argument><expr><literal type="string" pos:line="93" pos:column="22">"free"<pos:position pos:line="93" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="30">swap_free<pos:position pos:line="93" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="41">DS_TYPE_GAUGE<pos:position pos:line="93" pos:column="54"/></name></expr></argument>)<pos:position pos:line="93" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="94" pos:column="9">swap_submit<pos:position pos:line="94" pos:column="20"/></name> <argument_list pos:line="94" pos:column="21">(<argument><expr><literal type="string" pos:line="94" pos:column="22">"cached"<pos:position pos:line="94" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="32">swap_cached<pos:position pos:line="94" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="45">DS_TYPE_GAUGE<pos:position pos:line="94" pos:column="58"/></name></expr></argument>)<pos:position pos:line="94" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="95" pos:column="9">swap_submit<pos:position pos:line="95" pos:column="20"/></name> <argument_list pos:line="95" pos:column="21">(<argument><expr><literal type="string" pos:line="95" pos:column="22">"in"<pos:position pos:line="95" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="28">swap_in<pos:position pos:line="95" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="37">DS_TYPE_DERIVE<pos:position pos:line="95" pos:column="51"/></name></expr></argument>)<pos:position pos:line="95" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="96" pos:column="9">swap_submit<pos:position pos:line="96" pos:column="20"/></name> <argument_list pos:line="96" pos:column="21">(<argument><expr><literal type="string" pos:line="96" pos:column="22">"out"<pos:position pos:line="96" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="29">swap_out<pos:position pos:line="96" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="39">DS_TYPE_DERIVE<pos:position pos:line="96" pos:column="53"/></name></expr></argument>)<pos:position pos:line="96" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="55"/></expr_stmt>

<comment type="block" pos:line="98" pos:column="1">/* #endif KERNEL_LINUX */</comment>

<cpp:elif pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">elif<pos:position pos:line="100" pos:column="6"/></cpp:directive> <expr><name pos:line="100" pos:column="7">HAVE_LIBKSTAT<pos:position pos:line="100" pos:column="20"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="101" pos:column="9">derive_t<pos:position pos:line="101" pos:column="17"/></name></type> <name pos:line="101" pos:column="18">swap_alloc<pos:position pos:line="101" pos:column="28"/></name></decl>;<pos:position pos:line="101" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="102" pos:column="9">derive_t<pos:position pos:line="102" pos:column="17"/></name></type> <name pos:line="102" pos:column="18">swap_resv<pos:position pos:line="102" pos:column="27"/></name></decl>;<pos:position pos:line="102" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="103" pos:column="9">derive_t<pos:position pos:line="103" pos:column="17"/></name></type> <name pos:line="103" pos:column="18">swap_avail<pos:position pos:line="103" pos:column="28"/></name></decl>;<pos:position pos:line="103" pos:column="29"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="105" pos:column="9">struct<pos:position pos:line="105" pos:column="15"/></name> <name pos:line="105" pos:column="16">anoninfo<pos:position pos:line="105" pos:column="24"/></name></name></type> <name pos:line="105" pos:column="25">ai<pos:position pos:line="105" pos:column="27"/></name></decl>;<pos:position pos:line="105" pos:column="28"/></decl_stmt>

	<if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><call><name pos:line="107" pos:column="13">swapctl<pos:position pos:line="107" pos:column="20"/></name> <argument_list pos:line="107" pos:column="21">(<argument><expr><name pos:line="107" pos:column="22">SC_AINFO<pos:position pos:line="107" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="32">&amp;<pos:position pos:line="107" pos:column="37"/></operator><name pos:line="107" pos:column="33">ai<pos:position pos:line="107" pos:column="35"/></name></expr></argument>)<pos:position pos:line="107" pos:column="36"/></argument_list></call> <operator pos:line="107" pos:column="37">==<pos:position pos:line="107" pos:column="39"/></operator> <operator pos:line="107" pos:column="40">-<pos:position pos:line="107" pos:column="41"/></operator><literal type="number" pos:line="107" pos:column="41">1<pos:position pos:line="107" pos:column="42"/></literal></expr>)<pos:position pos:line="107" pos:column="43"/></condition><then pos:line="107" pos:column="43">
	<block pos:line="108" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="109" pos:column="17">char<pos:position pos:line="109" pos:column="21"/></name></type> <name><name pos:line="109" pos:column="22">errbuf<pos:position pos:line="109" pos:column="28"/></name><index pos:line="109" pos:column="28">[<expr><literal type="number" pos:line="109" pos:column="29">1024<pos:position pos:line="109" pos:column="33"/></literal></expr>]<pos:position pos:line="109" pos:column="34"/></index></name></decl>;<pos:position pos:line="109" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="110" pos:column="17">ERROR<pos:position pos:line="110" pos:column="22"/></name> <argument_list pos:line="110" pos:column="23">(<argument><expr><literal type="string" pos:line="110" pos:column="24">"swap plugin: swapctl failed: %s"<pos:position pos:line="110" pos:column="57"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="111" pos:column="33">sstrerror<pos:position pos:line="111" pos:column="42"/></name> <argument_list pos:line="111" pos:column="43">(<argument><expr><name pos:line="111" pos:column="44">errno<pos:position pos:line="111" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="51">errbuf<pos:position pos:line="111" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="111" pos:column="59">sizeof <argument_list pos:line="111" pos:column="66">(<argument><expr><name pos:line="111" pos:column="67">errbuf<pos:position pos:line="111" pos:column="73"/></name></expr></argument>)<pos:position pos:line="111" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="111" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="77"/></expr_stmt>
		<return pos:line="112" pos:column="17">return <expr><operator pos:line="112" pos:column="24">(<pos:position pos:line="112" pos:column="25"/></operator><operator pos:line="112" pos:column="25">-<pos:position pos:line="112" pos:column="26"/></operator><literal type="number" pos:line="112" pos:column="26">1<pos:position pos:line="112" pos:column="27"/></literal><operator pos:line="112" pos:column="27">)<pos:position pos:line="112" pos:column="28"/></operator></expr>;<pos:position pos:line="112" pos:column="29"/></return>
	}<pos:position pos:line="113" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="115" pos:column="9">/*
	 * Calculations from:
	 * http://cvs.opensolaris.org/source/xref/on/usr/src/cmd/swap/swap.c
	 * Also see:
	 * http://www.itworld.com/Comp/2377/UIR980701perf/ (outdated?)
	 * /usr/include/vm/anon.h
	 *
	 * In short, swap -s shows: allocated + reserved = used, available
	 *
	 * However, Solaris does not allow to allocated/reserved more than the
	 * available swap (physical memory + disk swap), so the pedant may
	 * prefer: allocated + unallocated = reserved, available
	 * 
	 * We map the above to: used + resv = n/a, free
	 *
	 * Does your brain hurt yet?  - Christophe Kalt
	 *
	 * Oh, and in case you wonder,
	 * swap_alloc = pagesize * ( ai.ani_max - ai.ani_free );
	 * can suffer from a 32bit overflow.
	 */</comment>
	<expr_stmt><expr><name pos:line="136" pos:column="9">swap_alloc<pos:position pos:line="136" pos:column="19"/></name>  <operator pos:line="136" pos:column="21">=<pos:position pos:line="136" pos:column="22"/></operator> <call pos:line="136" pos:column="23">(<name pos:line="136" pos:column="24">derive_t<pos:position pos:line="136" pos:column="32"/></name>) <argument_list pos:line="136" pos:column="34">(<argument><expr><operator pos:line="136" pos:column="35">(<pos:position pos:line="136" pos:column="36"/></operator><name><name pos:line="136" pos:column="36">ai<pos:position pos:line="136" pos:column="38"/></name><operator pos:line="136" pos:column="38">.<pos:position pos:line="136" pos:column="39"/></operator><name pos:line="136" pos:column="39">ani_max<pos:position pos:line="136" pos:column="46"/></name></name> <operator pos:line="136" pos:column="47">-<pos:position pos:line="136" pos:column="48"/></operator> <name><name pos:line="136" pos:column="49">ai<pos:position pos:line="136" pos:column="51"/></name><operator pos:line="136" pos:column="51">.<pos:position pos:line="136" pos:column="52"/></operator><name pos:line="136" pos:column="52">ani_free<pos:position pos:line="136" pos:column="60"/></name></name><operator pos:line="136" pos:column="60">)<pos:position pos:line="136" pos:column="61"/></operator> <operator pos:line="136" pos:column="62">*<pos:position pos:line="136" pos:column="63"/></operator> <name pos:line="136" pos:column="64">pagesize<pos:position pos:line="136" pos:column="72"/></name></expr></argument>)<pos:position pos:line="136" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><name pos:line="137" pos:column="9">swap_resv<pos:position pos:line="137" pos:column="18"/></name>   <operator pos:line="137" pos:column="21">=<pos:position pos:line="137" pos:column="22"/></operator> <call pos:line="137" pos:column="23">(<name pos:line="137" pos:column="24">derive_t<pos:position pos:line="137" pos:column="32"/></name>) <argument_list pos:line="137" pos:column="34">(<argument><expr><operator pos:line="137" pos:column="35">(<pos:position pos:line="137" pos:column="36"/></operator><name><name pos:line="137" pos:column="36">ai<pos:position pos:line="137" pos:column="38"/></name><operator pos:line="137" pos:column="38">.<pos:position pos:line="137" pos:column="39"/></operator><name pos:line="137" pos:column="39">ani_resv<pos:position pos:line="137" pos:column="47"/></name></name> <operator pos:line="137" pos:column="48">+<pos:position pos:line="137" pos:column="49"/></operator> <name><name pos:line="137" pos:column="50">ai<pos:position pos:line="137" pos:column="52"/></name><operator pos:line="137" pos:column="52">.<pos:position pos:line="137" pos:column="53"/></operator><name pos:line="137" pos:column="53">ani_free<pos:position pos:line="137" pos:column="61"/></name></name> <operator pos:line="137" pos:column="62">-<pos:position pos:line="137" pos:column="63"/></operator> <name><name pos:line="137" pos:column="64">ai<pos:position pos:line="137" pos:column="66"/></name><operator pos:line="137" pos:column="66">.<pos:position pos:line="137" pos:column="67"/></operator><name pos:line="137" pos:column="67">ani_max<pos:position pos:line="137" pos:column="74"/></name></name><operator pos:line="137" pos:column="74">)<pos:position pos:line="137" pos:column="75"/></operator>
			<operator pos:line="138" pos:column="25">*<pos:position pos:line="138" pos:column="26"/></operator> <name pos:line="138" pos:column="27">pagesize<pos:position pos:line="138" pos:column="35"/></name></expr></argument>)<pos:position pos:line="138" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name pos:line="139" pos:column="9">swap_avail<pos:position pos:line="139" pos:column="19"/></name>  <operator pos:line="139" pos:column="21">=<pos:position pos:line="139" pos:column="22"/></operator> <call pos:line="139" pos:column="23">(<name pos:line="139" pos:column="24">derive_t<pos:position pos:line="139" pos:column="32"/></name>) <argument_list pos:line="139" pos:column="34">(<argument><expr><operator pos:line="139" pos:column="35">(<pos:position pos:line="139" pos:column="36"/></operator><name><name pos:line="139" pos:column="36">ai<pos:position pos:line="139" pos:column="38"/></name><operator pos:line="139" pos:column="38">.<pos:position pos:line="139" pos:column="39"/></operator><name pos:line="139" pos:column="39">ani_max<pos:position pos:line="139" pos:column="46"/></name></name> <operator pos:line="139" pos:column="47">-<pos:position pos:line="139" pos:column="48"/></operator> <name><name pos:line="139" pos:column="49">ai<pos:position pos:line="139" pos:column="51"/></name><operator pos:line="139" pos:column="51">.<pos:position pos:line="139" pos:column="52"/></operator><name pos:line="139" pos:column="52">ani_resv<pos:position pos:line="139" pos:column="60"/></name></name><operator pos:line="139" pos:column="60">)<pos:position pos:line="139" pos:column="61"/></operator> <operator pos:line="139" pos:column="62">*<pos:position pos:line="139" pos:column="63"/></operator> <name pos:line="139" pos:column="64">pagesize<pos:position pos:line="139" pos:column="72"/></name></expr></argument>)<pos:position pos:line="139" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="74"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="141" pos:column="9">swap_submit<pos:position pos:line="141" pos:column="20"/></name> <argument_list pos:line="141" pos:column="21">(<argument><expr><literal type="string" pos:line="141" pos:column="22">"used"<pos:position pos:line="141" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="141" pos:column="30">swap_alloc<pos:position pos:line="141" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="42">DS_TYPE_GAUGE<pos:position pos:line="141" pos:column="55"/></name></expr></argument>)<pos:position pos:line="141" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="142" pos:column="9">swap_submit<pos:position pos:line="142" pos:column="20"/></name> <argument_list pos:line="142" pos:column="21">(<argument><expr><literal type="string" pos:line="142" pos:column="22">"free"<pos:position pos:line="142" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="142" pos:column="30">swap_avail<pos:position pos:line="142" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="42">DS_TYPE_GAUGE<pos:position pos:line="142" pos:column="55"/></name></expr></argument>)<pos:position pos:line="142" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="143" pos:column="9">swap_submit<pos:position pos:line="143" pos:column="20"/></name> <argument_list pos:line="143" pos:column="21">(<argument><expr><literal type="string" pos:line="143" pos:column="22">"reserved"<pos:position pos:line="143" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="143" pos:column="34">swap_resv<pos:position pos:line="143" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="45">DS_TYPE_GAUGE<pos:position pos:line="143" pos:column="58"/></name></expr></argument>)<pos:position pos:line="143" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="60"/></expr_stmt>
<comment type="block" pos:line="144" pos:column="1">/* #endif HAVE_LIBKSTAT */</comment>

<cpp:elif pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">elif<pos:position pos:line="146" pos:column="6"/></cpp:directive> <expr><name pos:line="146" pos:column="7">HAVE_SWAPCTL<pos:position pos:line="146" pos:column="19"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name><name pos:line="147" pos:column="9">struct<pos:position pos:line="147" pos:column="15"/></name> <name pos:line="147" pos:column="16">swapent<pos:position pos:line="147" pos:column="23"/></name></name> <modifier pos:line="147" pos:column="24">*<pos:position pos:line="147" pos:column="25"/></modifier></type><name pos:line="147" pos:column="25">swap_entries<pos:position pos:line="147" pos:column="37"/></name></decl>;<pos:position pos:line="147" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="148" pos:column="9">int<pos:position pos:line="148" pos:column="12"/></name></type> <name pos:line="148" pos:column="13">swap_num<pos:position pos:line="148" pos:column="21"/></name></decl>;<pos:position pos:line="148" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="149" pos:column="9">int<pos:position pos:line="149" pos:column="12"/></name></type> <name pos:line="149" pos:column="13">status<pos:position pos:line="149" pos:column="19"/></name></decl>;<pos:position pos:line="149" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="150" pos:column="9">int<pos:position pos:line="150" pos:column="12"/></name></type> <name pos:line="150" pos:column="13">i<pos:position pos:line="150" pos:column="14"/></name></decl>;<pos:position pos:line="150" pos:column="15"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="152" pos:column="9">derive_t<pos:position pos:line="152" pos:column="17"/></name></type> <name pos:line="152" pos:column="18">used<pos:position pos:line="152" pos:column="22"/></name>  <init pos:line="152" pos:column="24">= <expr><literal type="number" pos:line="152" pos:column="26">0<pos:position pos:line="152" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="152" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="153" pos:column="9">derive_t<pos:position pos:line="153" pos:column="17"/></name></type> <name pos:line="153" pos:column="18">total<pos:position pos:line="153" pos:column="23"/></name> <init pos:line="153" pos:column="24">= <expr><literal type="number" pos:line="153" pos:column="26">0<pos:position pos:line="153" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="153" pos:column="28"/></decl_stmt>

	<comment type="block" pos:line="155" pos:column="9">/*
	 * XXX: This is the syntax for the *BSD `swapctl', which has the
	 * following prototype:
	 *   swapctl (int cmd, void *arg, int misc);
	 *
	 * HP-UX and Solaris (and possibly other UNIXes) provide `swapctl',
	 * too, but with the following prototype:
	 *   swapctl (int cmd, void *arg);
	 *
	 * Solaris is usually handled in the KSTAT case above. For other UNIXes
	 * a separate case for the other version of `swapctl' may be necessary.
	 */</comment>
	<expr_stmt><expr><name pos:line="167" pos:column="9">swap_num<pos:position pos:line="167" pos:column="17"/></name> <operator pos:line="167" pos:column="18">=<pos:position pos:line="167" pos:column="19"/></operator> <call><name pos:line="167" pos:column="20">swapctl<pos:position pos:line="167" pos:column="27"/></name> <argument_list pos:line="167" pos:column="28">(<argument><expr><name pos:line="167" pos:column="29">SWAP_NSWAP<pos:position pos:line="167" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="41">NULL<pos:position pos:line="167" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="167" pos:column="47">0<pos:position pos:line="167" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="50"/></expr_stmt>
	<if pos:line="168" pos:column="9">if <condition pos:line="168" pos:column="12">(<expr><name pos:line="168" pos:column="13">swap_num<pos:position pos:line="168" pos:column="21"/></name> <operator pos:line="168" pos:column="22">&lt;<pos:position pos:line="168" pos:column="26"/></operator> <literal type="number" pos:line="168" pos:column="24">0<pos:position pos:line="168" pos:column="25"/></literal></expr>)<pos:position pos:line="168" pos:column="26"/></condition><then pos:line="168" pos:column="26">
	<block pos:line="169" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="170" pos:column="17">ERROR<pos:position pos:line="170" pos:column="22"/></name> <argument_list pos:line="170" pos:column="23">(<argument><expr><literal type="string" pos:line="170" pos:column="24">"swap plugin: swapctl (SWAP_NSWAP) failed with status %i."<pos:position pos:line="170" pos:column="82"/></literal></expr></argument>,
				<argument><expr><name pos:line="171" pos:column="33">swap_num<pos:position pos:line="171" pos:column="41"/></name></expr></argument>)<pos:position pos:line="171" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="43"/></expr_stmt>
		<return pos:line="172" pos:column="17">return <expr><operator pos:line="172" pos:column="24">(<pos:position pos:line="172" pos:column="25"/></operator><operator pos:line="172" pos:column="25">-<pos:position pos:line="172" pos:column="26"/></operator><literal type="number" pos:line="172" pos:column="26">1<pos:position pos:line="172" pos:column="27"/></literal><operator pos:line="172" pos:column="27">)<pos:position pos:line="172" pos:column="28"/></operator></expr>;<pos:position pos:line="172" pos:column="29"/></return>
	}<pos:position pos:line="173" pos:column="10"/></block></then>
	<elseif pos:line="174" pos:column="9">else <if pos:line="174" pos:column="14">if <condition pos:line="174" pos:column="17">(<expr><name pos:line="174" pos:column="18">swap_num<pos:position pos:line="174" pos:column="26"/></name> <operator pos:line="174" pos:column="27">==<pos:position pos:line="174" pos:column="29"/></operator> <literal type="number" pos:line="174" pos:column="30">0<pos:position pos:line="174" pos:column="31"/></literal></expr>)<pos:position pos:line="174" pos:column="32"/></condition><then pos:line="174" pos:column="32">
		<block type="pseudo"><return pos:line="175" pos:column="17">return <expr><operator pos:line="175" pos:column="24">(<pos:position pos:line="175" pos:column="25"/></operator><literal type="number" pos:line="175" pos:column="25">0<pos:position pos:line="175" pos:column="26"/></literal><operator pos:line="175" pos:column="26">)<pos:position pos:line="175" pos:column="27"/></operator></expr>;<pos:position pos:line="175" pos:column="28"/></return></block></then></if></elseif></if>

	<expr_stmt><expr><name pos:line="177" pos:column="9">swap_entries<pos:position pos:line="177" pos:column="21"/></name> <operator pos:line="177" pos:column="22">=<pos:position pos:line="177" pos:column="23"/></operator> <call><name pos:line="177" pos:column="24">calloc<pos:position pos:line="177" pos:column="30"/></name> <argument_list pos:line="177" pos:column="31">(<argument><expr><name pos:line="177" pos:column="32">swap_num<pos:position pos:line="177" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="177" pos:column="42">sizeof <argument_list pos:line="177" pos:column="49">(<argument><expr><operator pos:line="177" pos:column="50">*<pos:position pos:line="177" pos:column="51"/></operator><name pos:line="177" pos:column="51">swap_entries<pos:position pos:line="177" pos:column="63"/></name></expr></argument>)<pos:position pos:line="177" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="177" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="66"/></expr_stmt>
	<if pos:line="178" pos:column="9">if <condition pos:line="178" pos:column="12">(<expr><name pos:line="178" pos:column="13">swap_entries<pos:position pos:line="178" pos:column="25"/></name> <operator pos:line="178" pos:column="26">==<pos:position pos:line="178" pos:column="28"/></operator> <name pos:line="178" pos:column="29">NULL<pos:position pos:line="178" pos:column="33"/></name></expr>)<pos:position pos:line="178" pos:column="34"/></condition><then pos:line="178" pos:column="34">
	<block pos:line="179" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="180" pos:column="17">ERROR<pos:position pos:line="180" pos:column="22"/></name> <argument_list pos:line="180" pos:column="23">(<argument><expr><literal type="string" pos:line="180" pos:column="24">"swap plugin: calloc failed."<pos:position pos:line="180" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="55"/></expr_stmt>
		<return pos:line="181" pos:column="17">return <expr><operator pos:line="181" pos:column="24">(<pos:position pos:line="181" pos:column="25"/></operator><operator pos:line="181" pos:column="25">-<pos:position pos:line="181" pos:column="26"/></operator><literal type="number" pos:line="181" pos:column="26">1<pos:position pos:line="181" pos:column="27"/></literal><operator pos:line="181" pos:column="27">)<pos:position pos:line="181" pos:column="28"/></operator></expr>;<pos:position pos:line="181" pos:column="29"/></return>
	}<pos:position pos:line="182" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="184" pos:column="9">status<pos:position pos:line="184" pos:column="15"/></name> <operator pos:line="184" pos:column="16">=<pos:position pos:line="184" pos:column="17"/></operator> <call><name pos:line="184" pos:column="18">swapctl<pos:position pos:line="184" pos:column="25"/></name> <argument_list pos:line="184" pos:column="26">(<argument><expr><name pos:line="184" pos:column="27">SWAP_STATS<pos:position pos:line="184" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="39">swap_entries<pos:position pos:line="184" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="53">swap_num<pos:position pos:line="184" pos:column="61"/></name></expr></argument>)<pos:position pos:line="184" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="63"/></expr_stmt>
	<if pos:line="185" pos:column="9">if <condition pos:line="185" pos:column="12">(<expr><name pos:line="185" pos:column="13">status<pos:position pos:line="185" pos:column="19"/></name> <operator pos:line="185" pos:column="20">!=<pos:position pos:line="185" pos:column="22"/></operator> <name pos:line="185" pos:column="23">swap_num<pos:position pos:line="185" pos:column="31"/></name></expr>)<pos:position pos:line="185" pos:column="32"/></condition><then pos:line="185" pos:column="32">
	<block pos:line="186" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="187" pos:column="17">ERROR<pos:position pos:line="187" pos:column="22"/></name> <argument_list pos:line="187" pos:column="23">(<argument><expr><literal type="string" pos:line="187" pos:column="24">"swap plugin: swapctl (SWAP_STATS) failed with status %i."<pos:position pos:line="187" pos:column="82"/></literal></expr></argument>,
				<argument><expr><name pos:line="188" pos:column="33">status<pos:position pos:line="188" pos:column="39"/></name></expr></argument>)<pos:position pos:line="188" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="189" pos:column="17">sfree<pos:position pos:line="189" pos:column="22"/></name> <argument_list pos:line="189" pos:column="23">(<argument><expr><name pos:line="189" pos:column="24">swap_entries<pos:position pos:line="189" pos:column="36"/></name></expr></argument>)<pos:position pos:line="189" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="38"/></expr_stmt>
		<return pos:line="190" pos:column="17">return <expr><operator pos:line="190" pos:column="24">(<pos:position pos:line="190" pos:column="25"/></operator><operator pos:line="190" pos:column="25">-<pos:position pos:line="190" pos:column="26"/></operator><literal type="number" pos:line="190" pos:column="26">1<pos:position pos:line="190" pos:column="27"/></literal><operator pos:line="190" pos:column="27">)<pos:position pos:line="190" pos:column="28"/></operator></expr>;<pos:position pos:line="190" pos:column="29"/></return>
	}<pos:position pos:line="191" pos:column="10"/></block></then></if>

<cpp:if pos:line="193" pos:column="1">#<cpp:directive pos:line="193" pos:column="2">if<pos:position pos:line="193" pos:column="4"/></cpp:directive> <expr><call><name pos:line="193" pos:column="5">defined<pos:position pos:line="193" pos:column="12"/></name><argument_list pos:line="193" pos:column="12">(<argument><expr><name pos:line="193" pos:column="13">DEV_BSIZE<pos:position pos:line="193" pos:column="22"/></name></expr></argument>)<pos:position pos:line="193" pos:column="23"/></argument_list></call> <operator pos:line="193" pos:column="24">&amp;&amp;<pos:position pos:line="193" pos:column="34"/></operator> <operator pos:line="193" pos:column="27">(<pos:position pos:line="193" pos:column="28"/></operator><name pos:line="193" pos:column="28">DEV_BSIZE<pos:position pos:line="193" pos:column="37"/></name> <operator pos:line="193" pos:column="38">&gt;<pos:position pos:line="193" pos:column="42"/></operator> <literal type="number" pos:line="193" pos:column="40">0<pos:position pos:line="193" pos:column="41"/></literal><operator pos:line="193" pos:column="41">)<pos:position pos:line="193" pos:column="42"/></operator></expr></cpp:if>
<cpp:define pos:line="194" pos:column="1"># <cpp:directive pos:line="194" pos:column="3">define<pos:position pos:line="194" pos:column="9"/></cpp:directive> <cpp:macro><name pos:line="194" pos:column="10">C_SWAP_BLOCK_SIZE<pos:position pos:line="194" pos:column="27"/></name></cpp:macro> <cpp:value pos:line="194" pos:column="28">((derive_t) DEV_BSIZE)<pos:position pos:line="194" pos:column="50"/></cpp:value></cpp:define>
<cpp:else pos:line="195" pos:column="1">#<cpp:directive pos:line="195" pos:column="2">else<pos:position pos:line="195" pos:column="6"/></cpp:directive></cpp:else>
<cpp:define pos:line="196" pos:column="1"># <cpp:directive pos:line="196" pos:column="3">define<pos:position pos:line="196" pos:column="9"/></cpp:directive> <cpp:macro><name pos:line="196" pos:column="10">C_SWAP_BLOCK_SIZE<pos:position pos:line="196" pos:column="27"/></name></cpp:macro> <cpp:value pos:line="196" pos:column="28">((derive_t) 512)<pos:position pos:line="196" pos:column="44"/></cpp:value></cpp:define>
<cpp:endif pos:line="197" pos:column="1">#<cpp:directive pos:line="197" pos:column="2">endif<pos:position pos:line="197" pos:column="7"/></cpp:directive></cpp:endif>

	<for pos:line="199" pos:column="9">for <control pos:line="199" pos:column="13">(<init><expr><name pos:line="199" pos:column="14">i<pos:position pos:line="199" pos:column="15"/></name> <operator pos:line="199" pos:column="16">=<pos:position pos:line="199" pos:column="17"/></operator> <literal type="number" pos:line="199" pos:column="18">0<pos:position pos:line="199" pos:column="19"/></literal></expr>;<pos:position pos:line="199" pos:column="20"/></init> <condition><expr><name pos:line="199" pos:column="21">i<pos:position pos:line="199" pos:column="22"/></name> <operator pos:line="199" pos:column="23">&lt;<pos:position pos:line="199" pos:column="27"/></operator> <name pos:line="199" pos:column="25">swap_num<pos:position pos:line="199" pos:column="33"/></name></expr>;<pos:position pos:line="199" pos:column="34"/></condition> <incr><expr><name pos:line="199" pos:column="35">i<pos:position pos:line="199" pos:column="36"/></name><operator pos:line="199" pos:column="36">++<pos:position pos:line="199" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="199" pos:column="39"/></control>
	<block pos:line="200" pos:column="9">{
		<if pos:line="201" pos:column="17">if <condition pos:line="201" pos:column="20">(<expr><operator pos:line="201" pos:column="21">(<pos:position pos:line="201" pos:column="22"/></operator><name><name pos:line="201" pos:column="22">swap_entries<pos:position pos:line="201" pos:column="34"/></name><index pos:line="201" pos:column="34">[<expr><name pos:line="201" pos:column="35">i<pos:position pos:line="201" pos:column="36"/></name></expr>]<pos:position pos:line="201" pos:column="37"/></index></name><operator pos:line="201" pos:column="37">.<pos:position pos:line="201" pos:column="38"/></operator><name pos:line="201" pos:column="38">se_flags<pos:position pos:line="201" pos:column="46"/></name> <operator pos:line="201" pos:column="47">&amp;<pos:position pos:line="201" pos:column="52"/></operator> <name pos:line="201" pos:column="49">SWF_ENABLE<pos:position pos:line="201" pos:column="59"/></name><operator pos:line="201" pos:column="59">)<pos:position pos:line="201" pos:column="60"/></operator> <operator pos:line="201" pos:column="61">==<pos:position pos:line="201" pos:column="63"/></operator> <literal type="number" pos:line="201" pos:column="64">0<pos:position pos:line="201" pos:column="65"/></literal></expr>)<pos:position pos:line="201" pos:column="66"/></condition><then pos:line="201" pos:column="66">
			<block type="pseudo"><continue pos:line="202" pos:column="25">continue;<pos:position pos:line="202" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="204" pos:column="17">used<pos:position pos:line="204" pos:column="21"/></name>  <operator pos:line="204" pos:column="23">+=<pos:position pos:line="204" pos:column="25"/></operator> <operator pos:line="204" pos:column="26">(<pos:position pos:line="204" pos:column="27"/></operator><operator pos:line="204" pos:column="27">(<pos:position pos:line="204" pos:column="28"/></operator><name pos:line="204" pos:column="28">derive_t<pos:position pos:line="204" pos:column="36"/></name><operator pos:line="204" pos:column="36">)<pos:position pos:line="204" pos:column="37"/></operator> <name><name pos:line="204" pos:column="38">swap_entries<pos:position pos:line="204" pos:column="50"/></name><index pos:line="204" pos:column="50">[<expr><name pos:line="204" pos:column="51">i<pos:position pos:line="204" pos:column="52"/></name></expr>]<pos:position pos:line="204" pos:column="53"/></index></name><operator pos:line="204" pos:column="53">.<pos:position pos:line="204" pos:column="54"/></operator><name pos:line="204" pos:column="54">se_inuse<pos:position pos:line="204" pos:column="62"/></name><operator pos:line="204" pos:column="62">)<pos:position pos:line="204" pos:column="63"/></operator>
			<operator pos:line="205" pos:column="25">*<pos:position pos:line="205" pos:column="26"/></operator> <name pos:line="205" pos:column="27">C_SWAP_BLOCK_SIZE<pos:position pos:line="205" pos:column="44"/></name></expr>;<pos:position pos:line="205" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="206" pos:column="17">total<pos:position pos:line="206" pos:column="22"/></name> <operator pos:line="206" pos:column="23">+=<pos:position pos:line="206" pos:column="25"/></operator> <operator pos:line="206" pos:column="26">(<pos:position pos:line="206" pos:column="27"/></operator><operator pos:line="206" pos:column="27">(<pos:position pos:line="206" pos:column="28"/></operator><name pos:line="206" pos:column="28">derive_t<pos:position pos:line="206" pos:column="36"/></name><operator pos:line="206" pos:column="36">)<pos:position pos:line="206" pos:column="37"/></operator> <name><name pos:line="206" pos:column="38">swap_entries<pos:position pos:line="206" pos:column="50"/></name><index pos:line="206" pos:column="50">[<expr><name pos:line="206" pos:column="51">i<pos:position pos:line="206" pos:column="52"/></name></expr>]<pos:position pos:line="206" pos:column="53"/></index></name><operator pos:line="206" pos:column="53">.<pos:position pos:line="206" pos:column="54"/></operator><name pos:line="206" pos:column="54">se_nblks<pos:position pos:line="206" pos:column="62"/></name><operator pos:line="206" pos:column="62">)<pos:position pos:line="206" pos:column="63"/></operator>
			<operator pos:line="207" pos:column="25">*<pos:position pos:line="207" pos:column="26"/></operator> <name pos:line="207" pos:column="27">C_SWAP_BLOCK_SIZE<pos:position pos:line="207" pos:column="44"/></name></expr>;<pos:position pos:line="207" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="208" pos:column="10"/></block></for>

	<if pos:line="210" pos:column="9">if <condition pos:line="210" pos:column="12">(<expr><name pos:line="210" pos:column="13">total<pos:position pos:line="210" pos:column="18"/></name> <operator pos:line="210" pos:column="19">&lt;<pos:position pos:line="210" pos:column="23"/></operator> <name pos:line="210" pos:column="21">used<pos:position pos:line="210" pos:column="25"/></name></expr>)<pos:position pos:line="210" pos:column="26"/></condition><then pos:line="210" pos:column="26">
	<block pos:line="211" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="212" pos:column="17">ERROR<pos:position pos:line="212" pos:column="22"/></name> <argument_list pos:line="212" pos:column="23">(<argument><expr><literal type="string" pos:line="212" pos:column="24">"swap plugin: Total swap space (%"<pos:position pos:line="212" pos:column="58"/></literal><name pos:line="212" pos:column="58">PRIu64<pos:position pos:line="212" pos:column="64"/></name><literal type="string" pos:line="212" pos:column="64">") "<pos:position pos:line="212" pos:column="68"/></literal>
				<literal type="string" pos:line="213" pos:column="33">"is less than used swap space (%"<pos:position pos:line="213" pos:column="66"/></literal><name pos:line="213" pos:column="66">PRIu64<pos:position pos:line="213" pos:column="72"/></name><literal type="string" pos:line="213" pos:column="72">")."<pos:position pos:line="213" pos:column="76"/></literal></expr></argument>,
				<argument><expr><name pos:line="214" pos:column="33">total<pos:position pos:line="214" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="40">used<pos:position pos:line="214" pos:column="44"/></name></expr></argument>)<pos:position pos:line="214" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="46"/></expr_stmt>
		<return pos:line="215" pos:column="17">return <expr><operator pos:line="215" pos:column="24">(<pos:position pos:line="215" pos:column="25"/></operator><operator pos:line="215" pos:column="25">-<pos:position pos:line="215" pos:column="26"/></operator><literal type="number" pos:line="215" pos:column="26">1<pos:position pos:line="215" pos:column="27"/></literal><operator pos:line="215" pos:column="27">)<pos:position pos:line="215" pos:column="28"/></operator></expr>;<pos:position pos:line="215" pos:column="29"/></return>
	}<pos:position pos:line="216" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="218" pos:column="9">swap_submit<pos:position pos:line="218" pos:column="20"/></name> <argument_list pos:line="218" pos:column="21">(<argument><expr><literal type="string" pos:line="218" pos:column="22">"used"<pos:position pos:line="218" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="218" pos:column="30">used<pos:position pos:line="218" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="36">DS_TYPE_GAUGE<pos:position pos:line="218" pos:column="49"/></name></expr></argument>)<pos:position pos:line="218" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="219" pos:column="9">swap_submit<pos:position pos:line="219" pos:column="20"/></name> <argument_list pos:line="219" pos:column="21">(<argument><expr><literal type="string" pos:line="219" pos:column="22">"free"<pos:position pos:line="219" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="219" pos:column="30">total<pos:position pos:line="219" pos:column="35"/></name> <operator pos:line="219" pos:column="36">-<pos:position pos:line="219" pos:column="37"/></operator> <name pos:line="219" pos:column="38">used<pos:position pos:line="219" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="44">DS_TYPE_GAUGE<pos:position pos:line="219" pos:column="57"/></name></expr></argument>)<pos:position pos:line="219" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="59"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="221" pos:column="9">sfree<pos:position pos:line="221" pos:column="14"/></name> <argument_list pos:line="221" pos:column="15">(<argument><expr><name pos:line="221" pos:column="16">swap_entries<pos:position pos:line="221" pos:column="28"/></name></expr></argument>)<pos:position pos:line="221" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="30"/></expr_stmt>
<comment type="block" pos:line="222" pos:column="1">/* #endif HAVE_SWAPCTL */</comment>

<cpp:elif pos:line="224" pos:column="1">#<cpp:directive pos:line="224" pos:column="2">elif<pos:position pos:line="224" pos:column="6"/></cpp:directive> <expr><call><name pos:line="224" pos:column="7">defined<pos:position pos:line="224" pos:column="14"/></name><argument_list pos:line="224" pos:column="14">(<argument><expr><name pos:line="224" pos:column="15">VM_SWAPUSAGE<pos:position pos:line="224" pos:column="27"/></name></expr></argument>)<pos:position pos:line="224" pos:column="28"/></argument_list></call></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="225" pos:column="9">int<pos:position pos:line="225" pos:column="12"/></name></type>              <name><name pos:line="225" pos:column="26">mib<pos:position pos:line="225" pos:column="29"/></name><index pos:line="225" pos:column="29">[<expr><literal type="number" pos:line="225" pos:column="30">3<pos:position pos:line="225" pos:column="31"/></literal></expr>]<pos:position pos:line="225" pos:column="32"/></index></name></decl>;<pos:position pos:line="225" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="226" pos:column="9">size_t<pos:position pos:line="226" pos:column="15"/></name></type>           <name pos:line="226" pos:column="26">mib_len<pos:position pos:line="226" pos:column="33"/></name></decl>;<pos:position pos:line="226" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="227" pos:column="9">struct<pos:position pos:line="227" pos:column="15"/></name> <name pos:line="227" pos:column="16">xsw_usage<pos:position pos:line="227" pos:column="25"/></name></name></type> <name pos:line="227" pos:column="26">sw_usage<pos:position pos:line="227" pos:column="34"/></name></decl>;<pos:position pos:line="227" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="228" pos:column="9">size_t<pos:position pos:line="228" pos:column="15"/></name></type>           <name pos:line="228" pos:column="26">sw_usage_len<pos:position pos:line="228" pos:column="38"/></name></decl>;<pos:position pos:line="228" pos:column="39"/></decl_stmt>

	<expr_stmt><expr><name pos:line="230" pos:column="9">mib_len<pos:position pos:line="230" pos:column="16"/></name> <operator pos:line="230" pos:column="17">=<pos:position pos:line="230" pos:column="18"/></operator> <literal type="number" pos:line="230" pos:column="19">2<pos:position pos:line="230" pos:column="20"/></literal></expr>;<pos:position pos:line="230" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="231" pos:column="9">mib<pos:position pos:line="231" pos:column="12"/></name><index pos:line="231" pos:column="12">[<expr><literal type="number" pos:line="231" pos:column="13">0<pos:position pos:line="231" pos:column="14"/></literal></expr>]<pos:position pos:line="231" pos:column="15"/></index></name>  <operator pos:line="231" pos:column="17">=<pos:position pos:line="231" pos:column="18"/></operator> <name pos:line="231" pos:column="19">CTL_VM<pos:position pos:line="231" pos:column="25"/></name></expr>;<pos:position pos:line="231" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="232" pos:column="9">mib<pos:position pos:line="232" pos:column="12"/></name><index pos:line="232" pos:column="12">[<expr><literal type="number" pos:line="232" pos:column="13">1<pos:position pos:line="232" pos:column="14"/></literal></expr>]<pos:position pos:line="232" pos:column="15"/></index></name>  <operator pos:line="232" pos:column="17">=<pos:position pos:line="232" pos:column="18"/></operator> <name pos:line="232" pos:column="19">VM_SWAPUSAGE<pos:position pos:line="232" pos:column="31"/></name></expr>;<pos:position pos:line="232" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><name pos:line="234" pos:column="9">sw_usage_len<pos:position pos:line="234" pos:column="21"/></name> <operator pos:line="234" pos:column="22">=<pos:position pos:line="234" pos:column="23"/></operator> <sizeof pos:line="234" pos:column="24">sizeof <argument_list pos:line="234" pos:column="31">(<argument><expr pos:line="234" pos:column="32">struct <name pos:line="234" pos:column="39">xsw_usage<pos:position pos:line="234" pos:column="48"/></name></expr></argument>)<pos:position pos:line="234" pos:column="49"/></argument_list></sizeof></expr>;<pos:position pos:line="234" pos:column="50"/></expr_stmt>

	<if pos:line="236" pos:column="9">if <condition pos:line="236" pos:column="12">(<expr><call><name pos:line="236" pos:column="13">sysctl<pos:position pos:line="236" pos:column="19"/></name> <argument_list pos:line="236" pos:column="20">(<argument><expr><name pos:line="236" pos:column="21">mib<pos:position pos:line="236" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="26">mib_len<pos:position pos:line="236" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="236" pos:column="35">&amp;<pos:position pos:line="236" pos:column="40"/></operator><name pos:line="236" pos:column="36">sw_usage<pos:position pos:line="236" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="236" pos:column="46">&amp;<pos:position pos:line="236" pos:column="51"/></operator><name pos:line="236" pos:column="47">sw_usage_len<pos:position pos:line="236" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="61">NULL<pos:position pos:line="236" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="236" pos:column="67">0<pos:position pos:line="236" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="236" pos:column="69"/></argument_list></call> <operator pos:line="236" pos:column="70">!=<pos:position pos:line="236" pos:column="72"/></operator> <literal type="number" pos:line="236" pos:column="73">0<pos:position pos:line="236" pos:column="74"/></literal></expr>)<pos:position pos:line="236" pos:column="75"/></condition><then pos:line="236" pos:column="75">
		<block type="pseudo"><return pos:line="237" pos:column="17">return <expr><operator pos:line="237" pos:column="24">(<pos:position pos:line="237" pos:column="25"/></operator><operator pos:line="237" pos:column="25">-<pos:position pos:line="237" pos:column="26"/></operator><literal type="number" pos:line="237" pos:column="26">1<pos:position pos:line="237" pos:column="27"/></literal><operator pos:line="237" pos:column="27">)<pos:position pos:line="237" pos:column="28"/></operator></expr>;<pos:position pos:line="237" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="239" pos:column="9">/* The returned values are bytes. */</comment>
	<expr_stmt><expr><call><name pos:line="240" pos:column="9">swap_submit<pos:position pos:line="240" pos:column="20"/></name> <argument_list pos:line="240" pos:column="21">(<argument><expr><literal type="string" pos:line="240" pos:column="22">"used"<pos:position pos:line="240" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="240" pos:column="30">(<pos:position pos:line="240" pos:column="31"/></operator><name pos:line="240" pos:column="31">derive_t<pos:position pos:line="240" pos:column="39"/></name><operator pos:line="240" pos:column="39">)<pos:position pos:line="240" pos:column="40"/></operator> <name><name pos:line="240" pos:column="41">sw_usage<pos:position pos:line="240" pos:column="49"/></name><operator pos:line="240" pos:column="49">.<pos:position pos:line="240" pos:column="50"/></operator><name pos:line="240" pos:column="50">xsu_used<pos:position pos:line="240" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="240" pos:column="60">DS_TYPE_GAUGE<pos:position pos:line="240" pos:column="73"/></name></expr></argument>)<pos:position pos:line="240" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="241" pos:column="9">swap_submit<pos:position pos:line="241" pos:column="20"/></name> <argument_list pos:line="241" pos:column="21">(<argument><expr><literal type="string" pos:line="241" pos:column="22">"free"<pos:position pos:line="241" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="241" pos:column="30">(<pos:position pos:line="241" pos:column="31"/></operator><name pos:line="241" pos:column="31">derive_t<pos:position pos:line="241" pos:column="39"/></name><operator pos:line="241" pos:column="39">)<pos:position pos:line="241" pos:column="40"/></operator> <name><name pos:line="241" pos:column="41">sw_usage<pos:position pos:line="241" pos:column="49"/></name><operator pos:line="241" pos:column="49">.<pos:position pos:line="241" pos:column="50"/></operator><name pos:line="241" pos:column="50">xsu_avail<pos:position pos:line="241" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="241" pos:column="61">DS_TYPE_GAUGE<pos:position pos:line="241" pos:column="74"/></name></expr></argument>)<pos:position pos:line="241" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="76"/></expr_stmt>
<comment type="block" pos:line="242" pos:column="1">/* #endif VM_SWAPUSAGE */</comment>

<cpp:elif pos:line="244" pos:column="1">#<cpp:directive pos:line="244" pos:column="2">elif<pos:position pos:line="244" pos:column="6"/></cpp:directive> <expr><name pos:line="244" pos:column="7">HAVE_LIBKVM_GETSWAPINFO<pos:position pos:line="244" pos:column="30"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name><name pos:line="245" pos:column="9">struct<pos:position pos:line="245" pos:column="15"/></name> <name pos:line="245" pos:column="16">kvm_swap<pos:position pos:line="245" pos:column="24"/></name></name></type> <name pos:line="245" pos:column="25">data_s<pos:position pos:line="245" pos:column="31"/></name></decl>;<pos:position pos:line="245" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="246" pos:column="9">int<pos:position pos:line="246" pos:column="12"/></name></type>             <name pos:line="246" pos:column="25">status<pos:position pos:line="246" pos:column="31"/></name></decl>;<pos:position pos:line="246" pos:column="32"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="248" pos:column="9">derive_t<pos:position pos:line="248" pos:column="17"/></name></type> <name pos:line="248" pos:column="18">used<pos:position pos:line="248" pos:column="22"/></name></decl>;<pos:position pos:line="248" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="249" pos:column="9">derive_t<pos:position pos:line="249" pos:column="17"/></name></type> <name pos:line="249" pos:column="18">free<pos:position pos:line="249" pos:column="22"/></name></decl>;<pos:position pos:line="249" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="250" pos:column="9">derive_t<pos:position pos:line="250" pos:column="17"/></name></type> <name pos:line="250" pos:column="18">total<pos:position pos:line="250" pos:column="23"/></name></decl>;<pos:position pos:line="250" pos:column="24"/></decl_stmt>

	<if pos:line="252" pos:column="9">if <condition pos:line="252" pos:column="12">(<expr><name pos:line="252" pos:column="13">kvm_obj<pos:position pos:line="252" pos:column="20"/></name> <operator pos:line="252" pos:column="21">==<pos:position pos:line="252" pos:column="23"/></operator> <name pos:line="252" pos:column="24">NULL<pos:position pos:line="252" pos:column="28"/></name></expr>)<pos:position pos:line="252" pos:column="29"/></condition><then pos:line="252" pos:column="29">
		<block type="pseudo"><return pos:line="253" pos:column="17">return <expr><operator pos:line="253" pos:column="24">(<pos:position pos:line="253" pos:column="25"/></operator><operator pos:line="253" pos:column="25">-<pos:position pos:line="253" pos:column="26"/></operator><literal type="number" pos:line="253" pos:column="26">1<pos:position pos:line="253" pos:column="27"/></literal><operator pos:line="253" pos:column="27">)<pos:position pos:line="253" pos:column="28"/></operator></expr>;<pos:position pos:line="253" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="255" pos:column="9">/* only one structure =&gt; only get the grand total, no details */</comment>
	<expr_stmt><expr><name pos:line="256" pos:column="9">status<pos:position pos:line="256" pos:column="15"/></name> <operator pos:line="256" pos:column="16">=<pos:position pos:line="256" pos:column="17"/></operator> <call><name pos:line="256" pos:column="18">kvm_getswapinfo<pos:position pos:line="256" pos:column="33"/></name> <argument_list pos:line="256" pos:column="34">(<argument><expr><name pos:line="256" pos:column="35">kvm_obj<pos:position pos:line="256" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="256" pos:column="44">&amp;<pos:position pos:line="256" pos:column="49"/></operator><name pos:line="256" pos:column="45">data_s<pos:position pos:line="256" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="256" pos:column="53">1<pos:position pos:line="256" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="256" pos:column="56">0<pos:position pos:line="256" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="256" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="59"/></expr_stmt>
	<if pos:line="257" pos:column="9">if <condition pos:line="257" pos:column="12">(<expr><name pos:line="257" pos:column="13">status<pos:position pos:line="257" pos:column="19"/></name> <operator pos:line="257" pos:column="20">==<pos:position pos:line="257" pos:column="22"/></operator> <operator pos:line="257" pos:column="23">-<pos:position pos:line="257" pos:column="24"/></operator><literal type="number" pos:line="257" pos:column="24">1<pos:position pos:line="257" pos:column="25"/></literal></expr>)<pos:position pos:line="257" pos:column="26"/></condition><then pos:line="257" pos:column="26">
		<block type="pseudo"><return pos:line="258" pos:column="17">return <expr><operator pos:line="258" pos:column="24">(<pos:position pos:line="258" pos:column="25"/></operator><operator pos:line="258" pos:column="25">-<pos:position pos:line="258" pos:column="26"/></operator><literal type="number" pos:line="258" pos:column="26">1<pos:position pos:line="258" pos:column="27"/></literal><operator pos:line="258" pos:column="27">)<pos:position pos:line="258" pos:column="28"/></operator></expr>;<pos:position pos:line="258" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="260" pos:column="9">total<pos:position pos:line="260" pos:column="14"/></name> <operator pos:line="260" pos:column="15">=<pos:position pos:line="260" pos:column="16"/></operator> <operator pos:line="260" pos:column="17">(<pos:position pos:line="260" pos:column="18"/></operator><name pos:line="260" pos:column="18">derive_t<pos:position pos:line="260" pos:column="26"/></name><operator pos:line="260" pos:column="26">)<pos:position pos:line="260" pos:column="27"/></operator> <name><name pos:line="260" pos:column="28">data_s<pos:position pos:line="260" pos:column="34"/></name><operator pos:line="260" pos:column="34">.<pos:position pos:line="260" pos:column="35"/></operator><name pos:line="260" pos:column="35">ksw_total<pos:position pos:line="260" pos:column="44"/></name></name></expr>;<pos:position pos:line="260" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name pos:line="261" pos:column="9">used<pos:position pos:line="261" pos:column="13"/></name>  <operator pos:line="261" pos:column="15">=<pos:position pos:line="261" pos:column="16"/></operator> <operator pos:line="261" pos:column="17">(<pos:position pos:line="261" pos:column="18"/></operator><name pos:line="261" pos:column="18">derive_t<pos:position pos:line="261" pos:column="26"/></name><operator pos:line="261" pos:column="26">)<pos:position pos:line="261" pos:column="27"/></operator> <name><name pos:line="261" pos:column="28">data_s<pos:position pos:line="261" pos:column="34"/></name><operator pos:line="261" pos:column="34">.<pos:position pos:line="261" pos:column="35"/></operator><name pos:line="261" pos:column="35">ksw_used<pos:position pos:line="261" pos:column="43"/></name></name></expr>;<pos:position pos:line="261" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><name pos:line="263" pos:column="9">total<pos:position pos:line="263" pos:column="14"/></name> <operator pos:line="263" pos:column="15">*=<pos:position pos:line="263" pos:column="17"/></operator> <operator pos:line="263" pos:column="18">(<pos:position pos:line="263" pos:column="19"/></operator><name pos:line="263" pos:column="19">derive_t<pos:position pos:line="263" pos:column="27"/></name><operator pos:line="263" pos:column="27">)<pos:position pos:line="263" pos:column="28"/></operator> <name pos:line="263" pos:column="29">kvm_pagesize<pos:position pos:line="263" pos:column="41"/></name></expr>;<pos:position pos:line="263" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="264" pos:column="9">used<pos:position pos:line="264" pos:column="13"/></name>  <operator pos:line="264" pos:column="15">*=<pos:position pos:line="264" pos:column="17"/></operator> <operator pos:line="264" pos:column="18">(<pos:position pos:line="264" pos:column="19"/></operator><name pos:line="264" pos:column="19">derive_t<pos:position pos:line="264" pos:column="27"/></name><operator pos:line="264" pos:column="27">)<pos:position pos:line="264" pos:column="28"/></operator> <name pos:line="264" pos:column="29">kvm_pagesize<pos:position pos:line="264" pos:column="41"/></name></expr>;<pos:position pos:line="264" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><name pos:line="266" pos:column="9">free<pos:position pos:line="266" pos:column="13"/></name> <operator pos:line="266" pos:column="14">=<pos:position pos:line="266" pos:column="15"/></operator> <name pos:line="266" pos:column="16">total<pos:position pos:line="266" pos:column="21"/></name> <operator pos:line="266" pos:column="22">-<pos:position pos:line="266" pos:column="23"/></operator> <name pos:line="266" pos:column="24">used<pos:position pos:line="266" pos:column="28"/></name></expr>;<pos:position pos:line="266" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="268" pos:column="9">swap_submit<pos:position pos:line="268" pos:column="20"/></name> <argument_list pos:line="268" pos:column="21">(<argument><expr><literal type="string" pos:line="268" pos:column="22">"used"<pos:position pos:line="268" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="268" pos:column="30">used<pos:position pos:line="268" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="268" pos:column="36">DS_TYPE_GAUGE<pos:position pos:line="268" pos:column="49"/></name></expr></argument>)<pos:position pos:line="268" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="269" pos:column="9">swap_submit<pos:position pos:line="269" pos:column="20"/></name> <argument_list pos:line="269" pos:column="21">(<argument><expr><literal type="string" pos:line="269" pos:column="22">"free"<pos:position pos:line="269" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="269" pos:column="30">free<pos:position pos:line="269" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="36">DS_TYPE_GAUGE<pos:position pos:line="269" pos:column="49"/></name></expr></argument>)<pos:position pos:line="269" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="269" pos:column="51"/></expr_stmt>
<comment type="block" pos:line="270" pos:column="1">/* #endif HAVE_LIBKVM_GETSWAPINFO */</comment>

<cpp:elif pos:line="272" pos:column="1">#<cpp:directive pos:line="272" pos:column="2">elif<pos:position pos:line="272" pos:column="6"/></cpp:directive> <expr><name pos:line="272" pos:column="7">HAVE_LIBSTATGRAB<pos:position pos:line="272" pos:column="23"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="273" pos:column="9">sg_swap_stats<pos:position pos:line="273" pos:column="22"/></name> <modifier pos:line="273" pos:column="23">*<pos:position pos:line="273" pos:column="24"/></modifier></type><name pos:line="273" pos:column="24">swap<pos:position pos:line="273" pos:column="28"/></name></decl>;<pos:position pos:line="273" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="275" pos:column="9">swap<pos:position pos:line="275" pos:column="13"/></name> <operator pos:line="275" pos:column="14">=<pos:position pos:line="275" pos:column="15"/></operator> <call><name pos:line="275" pos:column="16">sg_get_swap_stats<pos:position pos:line="275" pos:column="33"/></name> <argument_list pos:line="275" pos:column="34">()<pos:position pos:line="275" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="37"/></expr_stmt>

	<if pos:line="277" pos:column="9">if <condition pos:line="277" pos:column="12">(<expr><name pos:line="277" pos:column="13">swap<pos:position pos:line="277" pos:column="17"/></name> <operator pos:line="277" pos:column="18">==<pos:position pos:line="277" pos:column="20"/></operator> <name pos:line="277" pos:column="21">NULL<pos:position pos:line="277" pos:column="25"/></name></expr>)<pos:position pos:line="277" pos:column="26"/></condition><then pos:line="277" pos:column="26">
		<block type="pseudo"><return pos:line="278" pos:column="17">return <expr><operator pos:line="278" pos:column="24">(<pos:position pos:line="278" pos:column="25"/></operator><operator pos:line="278" pos:column="25">-<pos:position pos:line="278" pos:column="26"/></operator><literal type="number" pos:line="278" pos:column="26">1<pos:position pos:line="278" pos:column="27"/></literal><operator pos:line="278" pos:column="27">)<pos:position pos:line="278" pos:column="28"/></operator></expr>;<pos:position pos:line="278" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="280" pos:column="9">swap_submit<pos:position pos:line="280" pos:column="20"/></name> <argument_list pos:line="280" pos:column="21">(<argument><expr><literal type="string" pos:line="280" pos:column="22">"used"<pos:position pos:line="280" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="280" pos:column="30">(<pos:position pos:line="280" pos:column="31"/></operator><name pos:line="280" pos:column="31">derive_t<pos:position pos:line="280" pos:column="39"/></name><operator pos:line="280" pos:column="39">)<pos:position pos:line="280" pos:column="40"/></operator> <name><name pos:line="280" pos:column="41">swap<pos:position pos:line="280" pos:column="45"/></name><operator pos:line="280" pos:column="45">-&gt;<pos:position pos:line="280" pos:column="50"/></operator><name pos:line="280" pos:column="47">used<pos:position pos:line="280" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="280" pos:column="53">DS_TYPE_GAUGE<pos:position pos:line="280" pos:column="66"/></name></expr></argument>)<pos:position pos:line="280" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="281" pos:column="9">swap_submit<pos:position pos:line="281" pos:column="20"/></name> <argument_list pos:line="281" pos:column="21">(<argument><expr><literal type="string" pos:line="281" pos:column="22">"free"<pos:position pos:line="281" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="281" pos:column="30">(<pos:position pos:line="281" pos:column="31"/></operator><name pos:line="281" pos:column="31">derive_t<pos:position pos:line="281" pos:column="39"/></name><operator pos:line="281" pos:column="39">)<pos:position pos:line="281" pos:column="40"/></operator> <name><name pos:line="281" pos:column="41">swap<pos:position pos:line="281" pos:column="45"/></name><operator pos:line="281" pos:column="45">-&gt;<pos:position pos:line="281" pos:column="50"/></operator><name pos:line="281" pos:column="47">free<pos:position pos:line="281" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="281" pos:column="53">DS_TYPE_GAUGE<pos:position pos:line="281" pos:column="66"/></name></expr></argument>)<pos:position pos:line="281" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="282" pos:column="1">#<cpp:directive pos:line="282" pos:column="2">endif<pos:position pos:line="282" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="282" pos:column="8">/* HAVE_LIBSTATGRAB */</comment>

	<return pos:line="284" pos:column="9">return <expr><operator pos:line="284" pos:column="16">(<pos:position pos:line="284" pos:column="17"/></operator><literal type="number" pos:line="284" pos:column="17">0<pos:position pos:line="284" pos:column="18"/></literal><operator pos:line="284" pos:column="18">)<pos:position pos:line="284" pos:column="19"/></operator></expr>;<pos:position pos:line="284" pos:column="20"/></return>
}<pos:position pos:line="285" pos:column="2"/></block></function></unit>

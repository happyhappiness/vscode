<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_303_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">camqp_connect<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">camqp_config_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">conf<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <comment type="block" pos:line="1" pos:column="49">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">amqp_rpc_reply_t<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">reply<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">sockfd<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">status<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">conf<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">connection<pos:position pos:line="7" pos:column="25"/></name></name> <operator pos:line="7" pos:column="26">!=<pos:position pos:line="7" pos:column="28"/></operator> <name pos:line="7" pos:column="29">NULL<pos:position pos:line="7" pos:column="33"/></name></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal><operator pos:line="8" pos:column="18">)<pos:position pos:line="8" pos:column="19"/></operator></expr>;<pos:position pos:line="8" pos:column="20"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="10" pos:column="5">conf<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">connection<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <call><name pos:line="10" pos:column="24">amqp_new_connection<pos:position pos:line="10" pos:column="43"/></name> <argument_list pos:line="10" pos:column="44">()<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">conf<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">connection<pos:position pos:line="11" pos:column="25"/></name></name> <operator pos:line="11" pos:column="26">==<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">NULL<pos:position pos:line="11" pos:column="33"/></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34">
    <block pos:line="12" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ERROR<pos:position pos:line="13" pos:column="14"/></name> <argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="string" pos:line="13" pos:column="16">"amqp plugin: amqp_new_connection failed."<pos:position pos:line="13" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">ENOMEM<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">)<pos:position pos:line="14" pos:column="24"/></operator></expr>;<pos:position pos:line="14" pos:column="25"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">sockfd<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">amqp_open_socket<pos:position pos:line="17" pos:column="30"/></name> <argument_list pos:line="17" pos:column="31">(<argument><expr><call><name pos:line="17" pos:column="32">CONF<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">conf<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="43">host<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="50">conf<pos:position pos:line="17" pos:column="54"/></name><operator pos:line="17" pos:column="54">-&gt;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="56">port<pos:position pos:line="17" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">sockfd<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">&lt;<pos:position pos:line="18" pos:column="20"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>)<pos:position pos:line="18" pos:column="20"/></condition><then pos:line="18" pos:column="20">
    <block pos:line="19" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">char<pos:position pos:line="20" pos:column="13"/></name></type> <name><name pos:line="20" pos:column="14">errbuf<pos:position pos:line="20" pos:column="20"/></name><index pos:line="20" pos:column="20">[<expr><literal type="number" pos:line="20" pos:column="21">1024<pos:position pos:line="20" pos:column="25"/></literal></expr>]<pos:position pos:line="20" pos:column="26"/></index></name></decl>;<pos:position pos:line="20" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">status<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <operator pos:line="21" pos:column="18">(<pos:position pos:line="21" pos:column="19"/></operator><operator pos:line="21" pos:column="19">-<pos:position pos:line="21" pos:column="20"/></operator><literal type="number" pos:line="21" pos:column="20">1<pos:position pos:line="21" pos:column="21"/></literal><operator pos:line="21" pos:column="21">)<pos:position pos:line="21" pos:column="22"/></operator> <operator pos:line="21" pos:column="23">*<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">sockfd<pos:position pos:line="21" pos:column="31"/></name></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">ERROR<pos:position pos:line="22" pos:column="14"/></name> <argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="string" pos:line="22" pos:column="16">"amqp plugin: amqp_open_socket failed: %s"<pos:position pos:line="22" pos:column="58"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="23" pos:column="17">sstrerror<pos:position pos:line="23" pos:column="26"/></name> <argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">status<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="36">errbuf<pos:position pos:line="23" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="44">sizeof <argument_list pos:line="23" pos:column="51">(<argument><expr><name pos:line="23" pos:column="52">errbuf<pos:position pos:line="23" pos:column="58"/></name></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">amqp_destroy_connection<pos:position pos:line="24" pos:column="32"/></name> <argument_list pos:line="24" pos:column="33">(<argument><expr><name><name pos:line="24" pos:column="34">conf<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">-&gt;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="40">connection<pos:position pos:line="24" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">conf<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">connection<pos:position pos:line="25" pos:column="25"/></name></name> <operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="28">NULL<pos:position pos:line="25" pos:column="32"/></name></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>
        <return pos:line="26" pos:column="9">return <expr><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">status<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">)<pos:position pos:line="26" pos:column="24"/></operator></expr>;<pos:position pos:line="26" pos:column="25"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">amqp_set_sockfd<pos:position pos:line="28" pos:column="20"/></name> <argument_list pos:line="28" pos:column="21">(<argument><expr><name><name pos:line="28" pos:column="22">conf<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">connection<pos:position pos:line="28" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="40">sockfd<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><name pos:line="30" pos:column="5">reply<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <call><name pos:line="30" pos:column="13">amqp_login<pos:position pos:line="30" pos:column="23"/></name> <argument_list pos:line="30" pos:column="24">(<argument><expr><name><name pos:line="30" pos:column="25">conf<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">connection<pos:position pos:line="30" pos:column="41"/></name></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="43">CONF<pos:position pos:line="30" pos:column="47"/></name><argument_list pos:line="30" pos:column="47">(<argument><expr><name pos:line="30" pos:column="48">conf<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="54">vhost<pos:position pos:line="30" pos:column="59"/></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr></argument>,
            <comment type="block" pos:line="31" pos:column="13">/* channel max = */</comment>      <argument><expr><literal type="number" pos:line="31" pos:column="38">0<pos:position pos:line="31" pos:column="39"/></literal></expr></argument>,
            <comment type="block" pos:line="32" pos:column="13">/* frame max   = */</comment> <argument><expr><literal type="number" pos:line="32" pos:column="33">131072<pos:position pos:line="32" pos:column="39"/></literal></expr></argument>,
            <comment type="block" pos:line="33" pos:column="13">/* heartbeat   = */</comment>      <argument><expr><literal type="number" pos:line="33" pos:column="38">0<pos:position pos:line="33" pos:column="39"/></literal></expr></argument>,
            <comment type="block" pos:line="34" pos:column="13">/* authentication = */</comment> <argument><expr><name pos:line="34" pos:column="36">AMQP_SASL_METHOD_PLAIN<pos:position pos:line="34" pos:column="58"/></name></expr></argument>,
            <argument><expr><call><name pos:line="35" pos:column="13">CONF<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><name pos:line="35" pos:column="18">conf<pos:position pos:line="35" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="24">user<pos:position pos:line="35" pos:column="28"/></name></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="31">CONF<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name pos:line="35" pos:column="36">conf<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">password<pos:position pos:line="35" pos:column="50"/></name></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">reply<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">.<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">reply_type<pos:position pos:line="36" pos:column="25"/></name></name> <operator pos:line="36" pos:column="26">!=<pos:position pos:line="36" pos:column="28"/></operator> <name pos:line="36" pos:column="29">AMQP_RESPONSE_NORMAL<pos:position pos:line="36" pos:column="49"/></name></expr>)<pos:position pos:line="36" pos:column="50"/></condition><then pos:line="36" pos:column="50">
    <block pos:line="37" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ERROR<pos:position pos:line="38" pos:column="14"/></name> <argument_list pos:line="38" pos:column="15">(<argument><expr><literal type="string" pos:line="38" pos:column="16">"amqp plugin: amqp_login (vhost = %s, user = %s) failed."<pos:position pos:line="38" pos:column="73"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="39" pos:column="17">CONF<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name pos:line="39" pos:column="22">conf<pos:position pos:line="39" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="28">vhost<pos:position pos:line="39" pos:column="33"/></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="36">CONF<pos:position pos:line="39" pos:column="40"/></name><argument_list pos:line="39" pos:column="40">(<argument><expr><name pos:line="39" pos:column="41">conf<pos:position pos:line="39" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="47">user<pos:position pos:line="39" pos:column="51"/></name></expr></argument>)<pos:position pos:line="39" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">amqp_destroy_connection<pos:position pos:line="40" pos:column="32"/></name> <argument_list pos:line="40" pos:column="33">(<argument><expr><name><name pos:line="40" pos:column="34">conf<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">-&gt;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="40">connection<pos:position pos:line="40" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">close<pos:position pos:line="41" pos:column="14"/></name> <argument_list pos:line="41" pos:column="15">(<argument><expr><name pos:line="41" pos:column="16">sockfd<pos:position pos:line="41" pos:column="22"/></name></expr></argument>)<pos:position pos:line="41" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">conf<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">-&gt;<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="15">connection<pos:position pos:line="42" pos:column="25"/></name></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <name pos:line="42" pos:column="28">NULL<pos:position pos:line="42" pos:column="32"/></name></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>
        <return pos:line="43" pos:column="9">return <expr><operator pos:line="43" pos:column="16">(<pos:position pos:line="43" pos:column="17"/></operator><literal type="number" pos:line="43" pos:column="17">1<pos:position pos:line="43" pos:column="18"/></literal><operator pos:line="43" pos:column="18">)<pos:position pos:line="43" pos:column="19"/></operator></expr>;<pos:position pos:line="43" pos:column="20"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">amqp_channel_open<pos:position pos:line="46" pos:column="22"/></name> <argument_list pos:line="46" pos:column="23">(<argument><expr><name><name pos:line="46" pos:column="24">conf<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">-&gt;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="30">connection<pos:position pos:line="46" pos:column="40"/></name></name></expr></argument>, <comment type="block" pos:line="46" pos:column="42">/* channel = */</comment> <argument><expr><literal type="number" pos:line="46" pos:column="58">1<pos:position pos:line="46" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="61"/></expr_stmt>
    <comment type="block" pos:line="47" pos:column="5">/* FIXME: Is checking "reply.reply_type" really correct here? How does
     * it get set? --octo */</comment>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name><name pos:line="49" pos:column="9">reply<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">.<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="15">reply_type<pos:position pos:line="49" pos:column="25"/></name></name> <operator pos:line="49" pos:column="26">!=<pos:position pos:line="49" pos:column="28"/></operator> <name pos:line="49" pos:column="29">AMQP_RESPONSE_NORMAL<pos:position pos:line="49" pos:column="49"/></name></expr>)<pos:position pos:line="49" pos:column="50"/></condition><then pos:line="49" pos:column="50">
    <block pos:line="50" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">ERROR<pos:position pos:line="51" pos:column="14"/></name> <argument_list pos:line="51" pos:column="15">(<argument><expr><literal type="string" pos:line="51" pos:column="16">"amqp plugin: amqp_channel_open failed."<pos:position pos:line="51" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">amqp_connection_close<pos:position pos:line="52" pos:column="30"/></name> <argument_list pos:line="52" pos:column="31">(<argument><expr><name><name pos:line="52" pos:column="32">conf<pos:position pos:line="52" pos:column="36"/></name><operator pos:line="52" pos:column="36">-&gt;<pos:position pos:line="52" pos:column="41"/></operator><name pos:line="52" pos:column="38">connection<pos:position pos:line="52" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="50">AMQP_REPLY_SUCCESS<pos:position pos:line="52" pos:column="68"/></name></expr></argument>)<pos:position pos:line="52" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">amqp_destroy_connection<pos:position pos:line="53" pos:column="32"/></name> <argument_list pos:line="53" pos:column="33">(<argument><expr><name><name pos:line="53" pos:column="34">conf<pos:position pos:line="53" pos:column="38"/></name><operator pos:line="53" pos:column="38">-&gt;<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="40">connection<pos:position pos:line="53" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">close<pos:position pos:line="54" pos:column="14"/></name><argument_list pos:line="54" pos:column="14">(<argument><expr><name pos:line="54" pos:column="15">sockfd<pos:position pos:line="54" pos:column="21"/></name></expr></argument>)<pos:position pos:line="54" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="55" pos:column="9">conf<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">-&gt;<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="15">connection<pos:position pos:line="55" pos:column="25"/></name></name> <operator pos:line="55" pos:column="26">=<pos:position pos:line="55" pos:column="27"/></operator> <name pos:line="55" pos:column="28">NULL<pos:position pos:line="55" pos:column="32"/></name></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt>
        <return pos:line="56" pos:column="9">return <expr><operator pos:line="56" pos:column="16">(<pos:position pos:line="56" pos:column="17"/></operator><literal type="number" pos:line="56" pos:column="17">1<pos:position pos:line="56" pos:column="18"/></literal><operator pos:line="56" pos:column="18">)<pos:position pos:line="56" pos:column="19"/></operator></expr>;<pos:position pos:line="56" pos:column="20"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="59" pos:column="5">INFO<pos:position pos:line="59" pos:column="9"/></name> <argument_list pos:line="59" pos:column="10">(<argument><expr><literal type="string" pos:line="59" pos:column="11">"amqp plugin: Successfully opened connection to vhost \"%s\" "<pos:position pos:line="59" pos:column="73"/></literal>
            <literal type="string" pos:line="60" pos:column="13">"on %s:%i."<pos:position pos:line="60" pos:column="24"/></literal></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="26">CONF<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><name pos:line="60" pos:column="31">conf<pos:position pos:line="60" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="37">vhost<pos:position pos:line="60" pos:column="42"/></name></expr></argument>)<pos:position pos:line="60" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="45">CONF<pos:position pos:line="60" pos:column="49"/></name><argument_list pos:line="60" pos:column="49">(<argument><expr><name pos:line="60" pos:column="50">conf<pos:position pos:line="60" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="56">host<pos:position pos:line="60" pos:column="60"/></name></expr></argument>)<pos:position pos:line="60" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="63">conf<pos:position pos:line="60" pos:column="67"/></name><operator pos:line="60" pos:column="67">-&gt;<pos:position pos:line="60" pos:column="72"/></operator><name pos:line="60" pos:column="69">port<pos:position pos:line="60" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="75"/></expr_stmt>

    <expr_stmt><expr><name pos:line="62" pos:column="5">status<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <call><name pos:line="62" pos:column="14">camqp_create_exchange<pos:position pos:line="62" pos:column="35"/></name> <argument_list pos:line="62" pos:column="36">(<argument><expr><name pos:line="62" pos:column="37">conf<pos:position pos:line="62" pos:column="41"/></name></expr></argument>)<pos:position pos:line="62" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="43"/></expr_stmt>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">status<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">!=<pos:position pos:line="63" pos:column="18"/></operator> <literal type="number" pos:line="63" pos:column="19">0<pos:position pos:line="63" pos:column="20"/></literal></expr>)<pos:position pos:line="63" pos:column="21"/></condition><then pos:line="63" pos:column="21">
        <block type="pseudo"><return pos:line="64" pos:column="9">return <expr><operator pos:line="64" pos:column="16">(<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="17">status<pos:position pos:line="64" pos:column="23"/></name><operator pos:line="64" pos:column="23">)<pos:position pos:line="64" pos:column="24"/></operator></expr>;<pos:position pos:line="64" pos:column="25"/></return></block></then></if>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><operator pos:line="66" pos:column="9">!<pos:position pos:line="66" pos:column="10"/></operator><name><name pos:line="66" pos:column="10">conf<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">publish<pos:position pos:line="66" pos:column="23"/></name></name></expr>)<pos:position pos:line="66" pos:column="24"/></condition><then pos:line="66" pos:column="24">
        <block type="pseudo"><return pos:line="67" pos:column="9">return <expr><operator pos:line="67" pos:column="16">(<pos:position pos:line="67" pos:column="17"/></operator><call><name pos:line="67" pos:column="17">camqp_setup_queue<pos:position pos:line="67" pos:column="34"/></name> <argument_list pos:line="67" pos:column="35">(<argument><expr><name pos:line="67" pos:column="36">conf<pos:position pos:line="67" pos:column="40"/></name></expr></argument>)<pos:position pos:line="67" pos:column="41"/></argument_list></call><operator pos:line="67" pos:column="41">)<pos:position pos:line="67" pos:column="42"/></operator></expr>;<pos:position pos:line="67" pos:column="43"/></return></block></then></if>
    <return pos:line="68" pos:column="5">return <expr><operator pos:line="68" pos:column="12">(<pos:position pos:line="68" pos:column="13"/></operator><literal type="number" pos:line="68" pos:column="13">0<pos:position pos:line="68" pos:column="14"/></literal><operator pos:line="68" pos:column="14">)<pos:position pos:line="68" pos:column="15"/></operator></expr>;<pos:position pos:line="68" pos:column="16"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

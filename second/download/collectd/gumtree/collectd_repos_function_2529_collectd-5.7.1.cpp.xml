<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2529_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">getpwnam_r<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><specifier pos:line="1" pos:column="16">const<pos:position pos:line="1" pos:column="21"/></specifier> <name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">name<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">passwd<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">pwbuf<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">buf<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">size_t<pos:position pos:line="1" pos:column="73"/></name></type> <name pos:line="1" pos:column="74">buflen<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>,
               <parameter><decl><type><name><name pos:line="2" pos:column="16">struct<pos:position pos:line="2" pos:column="22"/></name> <name pos:line="2" pos:column="23">passwd<pos:position pos:line="2" pos:column="29"/></name></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier><modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">pwbufp<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list> <block pos:line="2" pos:column="40">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><literal type="number" pos:line="3" pos:column="16">0<pos:position pos:line="3" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">passwd<pos:position pos:line="4" pos:column="16"/></name></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">pw<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">memset<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><name pos:line="6" pos:column="10">pwbuf<pos:position pos:line="6" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="6" pos:column="17">'\0'<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="23">sizeof<argument_list pos:line="6" pos:column="29">(<argument><expr pos:line="6" pos:column="30">struct <name pos:line="6" pos:column="37">passwd<pos:position pos:line="6" pos:column="43"/></name></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="46"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">pthread_mutex_lock<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><operator pos:line="8" pos:column="22">&amp;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="23">getpwnam_r_lock<pos:position pos:line="8" pos:column="38"/></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>

  <do pos:line="10" pos:column="3">do <block pos:line="10" pos:column="6">{
    <expr_stmt><expr><name pos:line="11" pos:column="5">pw<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">getpwnam<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">name<pos:position pos:line="11" pos:column="23"/></name></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">pw<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">==<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">NULL<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20"> <block pos:line="12" pos:column="21">{
      <expr_stmt><expr><name pos:line="13" pos:column="7">status<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <ternary><condition><expr><operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">errno<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">!=<pos:position pos:line="13" pos:column="25"/></operator> <literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator></expr> ?<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30"> <expr><name pos:line="13" pos:column="31">errno<pos:position pos:line="13" pos:column="36"/></name></expr> <pos:position pos:line="13" pos:column="37"/></then><else pos:line="13" pos:column="37">: <expr><name pos:line="13" pos:column="39">ENOENT<pos:position pos:line="13" pos:column="45"/></name></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
      <break pos:line="14" pos:column="7">break;<pos:position pos:line="14" pos:column="13"/></break>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

<cpp:define pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">define<pos:position pos:line="17" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="17" pos:column="9">GETPWNAM_COPY_MEMBER<pos:position pos:line="17" pos:column="29"/></name><parameter_list pos:line="17" pos:column="29">(<parameter><type><name pos:line="17" pos:column="30">member<pos:position pos:line="17" pos:column="36"/></name></type></parameter>)<pos:position pos:line="17" pos:column="37"/></parameter_list></cpp:macro>                                           \
  <cpp:value pos:line="18" pos:column="3">if (pw-&gt;member != NULL) {                                                    \
    int len = strlen(pw-&gt;member);                                              \
    if (len &gt;= buflen) {                                                       \
      status = ENOMEM;                                                         \
      break;                                                                   \
    }                                                                          \
    sstrncpy(buf, pw-&gt;member, buflen);                                         \
    pwbuf-&gt;member = buf;                                                       \
    buf += (len + 1);                                                          \
    buflen -= (len + 1);                                                       \
  }<pos:position pos:line="28" pos:column="4"/></cpp:value></cpp:define>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">GETPWNAM_COPY_MEMBER<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">pw_name<pos:position pos:line="29" pos:column="33"/></name></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">GETPWNAM_COPY_MEMBER<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">pw_passwd<pos:position pos:line="30" pos:column="35"/></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">GETPWNAM_COPY_MEMBER<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">pw_gecos<pos:position pos:line="31" pos:column="34"/></name></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">GETPWNAM_COPY_MEMBER<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">pw_dir<pos:position pos:line="32" pos:column="32"/></name></expr></argument>)<pos:position pos:line="32" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">GETPWNAM_COPY_MEMBER<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">pw_shell<pos:position pos:line="33" pos:column="34"/></name></expr></argument>)<pos:position pos:line="33" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="35" pos:column="5">pwbuf<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">pw_uid<pos:position pos:line="35" pos:column="18"/></name></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <name><name pos:line="35" pos:column="21">pw<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">pw_uid<pos:position pos:line="35" pos:column="31"/></name></name></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">pwbuf<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">pw_gid<pos:position pos:line="36" pos:column="18"/></name></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <name><name pos:line="36" pos:column="21">pw<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">pw_gid<pos:position pos:line="36" pos:column="31"/></name></name></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">pwbufp<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">!=<pos:position pos:line="38" pos:column="18"/></operator> <name pos:line="38" pos:column="19">NULL<pos:position pos:line="38" pos:column="23"/></name></expr>)<pos:position pos:line="38" pos:column="24"/></condition><then pos:line="38" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="39" pos:column="7">*<pos:position pos:line="39" pos:column="8"/></operator><name pos:line="39" pos:column="8">pwbufp<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <name pos:line="39" pos:column="17">pwbuf<pos:position pos:line="39" pos:column="22"/></name></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt></block></then></if>
  }<pos:position pos:line="40" pos:column="4"/></block> while <condition pos:line="40" pos:column="11">(<expr><literal type="number" pos:line="40" pos:column="12">0<pos:position pos:line="40" pos:column="13"/></literal></expr>)<pos:position pos:line="40" pos:column="14"/></condition>;<pos:position pos:line="40" pos:column="15"/></do>

  <expr_stmt><expr><call><name pos:line="42" pos:column="3">pthread_mutex_unlock<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><operator pos:line="42" pos:column="24">&amp;<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="25">getpwnam_r_lock<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>

  <return pos:line="44" pos:column="3">return <expr><operator pos:line="44" pos:column="10">(<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="11">status<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">)<pos:position pos:line="44" pos:column="18"/></operator></expr>;<pos:position pos:line="44" pos:column="19"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

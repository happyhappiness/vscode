<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_959_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">av2value<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">pTHX_<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">name<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">AV<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">array<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">value_t<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">value<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="2" pos:column="24">size_t<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">array_len<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list> <block pos:line="2" pos:column="42">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">data_set_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">ds<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">(<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">NULL<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">==<pos:position pos:line="5" pos:column="15"/></operator> <name pos:line="5" pos:column="16">name<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">)<pos:position pos:line="5" pos:column="21"/></operator> <operator pos:line="5" pos:column="22">||<pos:position pos:line="5" pos:column="24"/></operator> <operator pos:line="5" pos:column="25">(<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">NULL<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">==<pos:position pos:line="5" pos:column="33"/></operator> <name pos:line="5" pos:column="34">array<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">)<pos:position pos:line="5" pos:column="40"/></operator> <operator pos:line="5" pos:column="41">||<pos:position pos:line="5" pos:column="43"/></operator> <operator pos:line="5" pos:column="44">(<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="45">NULL<pos:position pos:line="5" pos:column="49"/></name> <operator pos:line="5" pos:column="50">==<pos:position pos:line="5" pos:column="52"/></operator> <name pos:line="5" pos:column="53">value<pos:position pos:line="5" pos:column="58"/></name><operator pos:line="5" pos:column="58">)<pos:position pos:line="5" pos:column="59"/></operator> <operator pos:line="5" pos:column="60">||<pos:position pos:line="5" pos:column="62"/></operator> <operator pos:line="5" pos:column="63">(<pos:position pos:line="5" pos:column="64"/></operator><name pos:line="5" pos:column="64">array_len<pos:position pos:line="5" pos:column="73"/></name> <operator pos:line="5" pos:column="74">==<pos:position pos:line="5" pos:column="76"/></operator> <literal type="number" pos:line="5" pos:column="77">0<pos:position pos:line="5" pos:column="78"/></literal><operator pos:line="5" pos:column="78">)<pos:position pos:line="5" pos:column="79"/></operator></expr>)<pos:position pos:line="5" pos:column="80"/></condition><then pos:line="5" pos:column="80">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><literal type="number" pos:line="6" pos:column="12">0<pos:position pos:line="6" pos:column="13"/></literal></expr>;<pos:position pos:line="6" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="8" pos:column="3">ds<pos:position pos:line="8" pos:column="5"/></name> <operator pos:line="8" pos:column="6">=<pos:position pos:line="8" pos:column="7"/></operator> <call><name pos:line="8" pos:column="8">plugin_get_ds<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">name<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">NULL<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">ds<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18"> <block pos:line="9" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">log_err<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><literal type="string" pos:line="10" pos:column="13">"av2value: Unknown dataset \"%s\""<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">name<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">array_len<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&lt;<pos:position pos:line="14" pos:column="21"/></operator> <name><name pos:line="14" pos:column="19">ds<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">ds_num<pos:position pos:line="14" pos:column="29"/></name></name></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30"> <block pos:line="14" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">log_warn<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><literal type="string" pos:line="15" pos:column="14">"av2value: array does not contain enough elements for type "<pos:position pos:line="15" pos:column="74"/></literal>
             <literal type="string" pos:line="16" pos:column="14">"\"%s\": got %zu, want %zu"<pos:position pos:line="16" pos:column="41"/></literal></expr></argument>,
             <argument><expr><name pos:line="17" pos:column="14">name<pos:position pos:line="17" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="20">array_len<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="31">ds<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">-&gt;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="35">ds_num<pos:position pos:line="17" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><literal type="number" pos:line="18" pos:column="12">0<pos:position pos:line="18" pos:column="13"/></literal></expr>;<pos:position pos:line="18" pos:column="14"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then> <elseif pos:line="19" pos:column="5">else <if pos:line="19" pos:column="10">if <condition pos:line="19" pos:column="13">(<expr><name pos:line="19" pos:column="14">array_len<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">&gt;<pos:position pos:line="19" pos:column="28"/></operator> <name><name pos:line="19" pos:column="26">ds<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">ds_num<pos:position pos:line="19" pos:column="36"/></name></name></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37"> <block pos:line="19" pos:column="38">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">log_warn<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><literal type="string" pos:line="20" pos:column="14">"av2value: array contains excess elements for type \"%s\": got "<pos:position pos:line="20" pos:column="78"/></literal>
             <literal type="string" pos:line="21" pos:column="14">"%zu, want %zu"<pos:position pos:line="21" pos:column="29"/></literal></expr></argument>,
             <argument><expr><name pos:line="22" pos:column="14">name<pos:position pos:line="22" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="20">array_len<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="31">ds<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">ds_num<pos:position pos:line="22" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if></elseif></if>

  <for pos:line="25" pos:column="3">for <control pos:line="25" pos:column="7">(<init><decl><type><name pos:line="25" pos:column="8">size_t<pos:position pos:line="25" pos:column="14"/></name></type> <name pos:line="25" pos:column="15">i<pos:position pos:line="25" pos:column="16"/></name> <init pos:line="25" pos:column="17">= <expr><literal type="number" pos:line="25" pos:column="19">0<pos:position pos:line="25" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="21"/></init> <condition><expr><name pos:line="25" pos:column="22">i<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">&lt;<pos:position pos:line="25" pos:column="28"/></operator> <name><name pos:line="25" pos:column="26">ds<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">ds_num<pos:position pos:line="25" pos:column="36"/></name></name></expr>;<pos:position pos:line="25" pos:column="37"/></condition> <incr><expr><operator pos:line="25" pos:column="38">++<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="40">i<pos:position pos:line="25" pos:column="41"/></name></expr></incr>)<pos:position pos:line="25" pos:column="42"/></control> <block pos:line="25" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">SV<pos:position pos:line="26" pos:column="7"/></name> <modifier pos:line="26" pos:column="8">*<pos:position pos:line="26" pos:column="9"/></modifier><modifier pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></modifier></type><name pos:line="26" pos:column="10">tmp<pos:position pos:line="26" pos:column="13"/></name> <init pos:line="26" pos:column="14">= <expr><call><name pos:line="26" pos:column="16">av_fetch<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">array<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="32">i<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="35">0<pos:position pos:line="26" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="38"/></decl_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">NULL<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">!=<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">tmp<pos:position pos:line="28" pos:column="20"/></name></expr>)<pos:position pos:line="28" pos:column="21"/></condition><then pos:line="28" pos:column="21"> <block pos:line="28" pos:column="22">{
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><name pos:line="29" pos:column="11">DS_TYPE_COUNTER<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">==<pos:position pos:line="29" pos:column="29"/></operator> <name><name pos:line="29" pos:column="30">ds<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">-&gt;<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="34">ds<pos:position pos:line="29" pos:column="36"/></name><index pos:line="29" pos:column="36">[<expr><name pos:line="29" pos:column="37">i<pos:position pos:line="29" pos:column="38"/></name></expr>]<pos:position pos:line="29" pos:column="39"/></index></name><operator pos:line="29" pos:column="39">.<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="40">type<pos:position pos:line="29" pos:column="44"/></name></expr>)<pos:position pos:line="29" pos:column="45"/></condition><then pos:line="29" pos:column="45">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="9">value<pos:position pos:line="30" pos:column="14"/></name><index pos:line="30" pos:column="14">[<expr><name pos:line="30" pos:column="15">i<pos:position pos:line="30" pos:column="16"/></name></expr>]<pos:position pos:line="30" pos:column="17"/></index></name><operator pos:line="30" pos:column="17">.<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">counter<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator> <call><name pos:line="30" pos:column="28">SvIV<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><operator pos:line="30" pos:column="33">*<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">tmp<pos:position pos:line="30" pos:column="37"/></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt></block></then>
      <elseif pos:line="31" pos:column="7">else <if pos:line="31" pos:column="12">if <condition pos:line="31" pos:column="15">(<expr><name pos:line="31" pos:column="16">DS_TYPE_GAUGE<pos:position pos:line="31" pos:column="29"/></name> <operator pos:line="31" pos:column="30">==<pos:position pos:line="31" pos:column="32"/></operator> <name><name pos:line="31" pos:column="33">ds<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">-&gt;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="37">ds<pos:position pos:line="31" pos:column="39"/></name><index pos:line="31" pos:column="39">[<expr><name pos:line="31" pos:column="40">i<pos:position pos:line="31" pos:column="41"/></name></expr>]<pos:position pos:line="31" pos:column="42"/></index></name><operator pos:line="31" pos:column="42">.<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="43">type<pos:position pos:line="31" pos:column="47"/></name></expr>)<pos:position pos:line="31" pos:column="48"/></condition><then pos:line="31" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="9">value<pos:position pos:line="32" pos:column="14"/></name><index pos:line="32" pos:column="14">[<expr><name pos:line="32" pos:column="15">i<pos:position pos:line="32" pos:column="16"/></name></expr>]<pos:position pos:line="32" pos:column="17"/></index></name><operator pos:line="32" pos:column="17">.<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">gauge<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <call><name pos:line="32" pos:column="26">SvNV<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><operator pos:line="32" pos:column="31">*<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="32">tmp<pos:position pos:line="32" pos:column="35"/></name></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="33" pos:column="7">else <if pos:line="33" pos:column="12">if <condition pos:line="33" pos:column="15">(<expr><name pos:line="33" pos:column="16">DS_TYPE_DERIVE<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">==<pos:position pos:line="33" pos:column="33"/></operator> <name><name pos:line="33" pos:column="34">ds<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">-&gt;<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="38">ds<pos:position pos:line="33" pos:column="40"/></name><index pos:line="33" pos:column="40">[<expr><name pos:line="33" pos:column="41">i<pos:position pos:line="33" pos:column="42"/></name></expr>]<pos:position pos:line="33" pos:column="43"/></index></name><operator pos:line="33" pos:column="43">.<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="44">type<pos:position pos:line="33" pos:column="48"/></name></expr>)<pos:position pos:line="33" pos:column="49"/></condition><then pos:line="33" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="9">value<pos:position pos:line="34" pos:column="14"/></name><index pos:line="34" pos:column="14">[<expr><name pos:line="34" pos:column="15">i<pos:position pos:line="34" pos:column="16"/></name></expr>]<pos:position pos:line="34" pos:column="17"/></index></name><operator pos:line="34" pos:column="17">.<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">derive<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <call><name pos:line="34" pos:column="27">SvIV<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><operator pos:line="34" pos:column="32">*<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="33">tmp<pos:position pos:line="34" pos:column="36"/></name></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="35" pos:column="7">else <if pos:line="35" pos:column="12">if <condition pos:line="35" pos:column="15">(<expr><name pos:line="35" pos:column="16">DS_TYPE_ABSOLUTE<pos:position pos:line="35" pos:column="32"/></name> <operator pos:line="35" pos:column="33">==<pos:position pos:line="35" pos:column="35"/></operator> <name><name pos:line="35" pos:column="36">ds<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">-&gt;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="40">ds<pos:position pos:line="35" pos:column="42"/></name><index pos:line="35" pos:column="42">[<expr><name pos:line="35" pos:column="43">i<pos:position pos:line="35" pos:column="44"/></name></expr>]<pos:position pos:line="35" pos:column="45"/></index></name><operator pos:line="35" pos:column="45">.<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="46">type<pos:position pos:line="35" pos:column="50"/></name></expr>)<pos:position pos:line="35" pos:column="51"/></condition><then pos:line="35" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="9">value<pos:position pos:line="36" pos:column="14"/></name><index pos:line="36" pos:column="14">[<expr><name pos:line="36" pos:column="15">i<pos:position pos:line="36" pos:column="16"/></name></expr>]<pos:position pos:line="36" pos:column="17"/></index></name><operator pos:line="36" pos:column="17">.<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">absolute<pos:position pos:line="36" pos:column="26"/></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <call><name pos:line="36" pos:column="29">SvIV<pos:position pos:line="36" pos:column="33"/></name><argument_list pos:line="36" pos:column="33">(<argument><expr><operator pos:line="36" pos:column="34">*<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="35">tmp<pos:position pos:line="36" pos:column="38"/></name></expr></argument>)<pos:position pos:line="36" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="37" pos:column="6"/></block></then> <else pos:line="37" pos:column="7">else <block pos:line="37" pos:column="12">{
      <return pos:line="38" pos:column="7">return <expr><literal type="number" pos:line="38" pos:column="14">0<pos:position pos:line="38" pos:column="15"/></literal></expr>;<pos:position pos:line="38" pos:column="16"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></else></if>
  }<pos:position pos:line="40" pos:column="4"/></block></for>

  <return pos:line="42" pos:column="3">return <expr><name><name pos:line="42" pos:column="10">ds<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">-&gt;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="14">ds_num<pos:position pos:line="42" pos:column="20"/></name></name></expr>;<pos:position pos:line="42" pos:column="21"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

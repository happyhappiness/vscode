<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2716_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_load<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name> <specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">plugin_name<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">uint32_t<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">flags<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list> <block pos:line="1" pos:column="58">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">DIR<pos:position pos:line="2" pos:column="6"/></name> <modifier pos:line="2" pos:column="7">*<pos:position pos:line="2" pos:column="8"/></modifier></type><name pos:line="2" pos:column="8">dh<pos:position pos:line="2" pos:column="10"/></name></decl>;<pos:position pos:line="2" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">dir<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">filename<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><name pos:line="4" pos:column="17">BUFSIZE<pos:position pos:line="4" pos:column="24"/></name></expr>]<pos:position pos:line="4" pos:column="25"/></index></name> <init pos:line="4" pos:column="26">= <expr><literal type="string" pos:line="4" pos:column="28">""<pos:position pos:line="4" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
  <expr_stmt><expr><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <name><typename pos:line="5" pos:column="8">typename<pos:position pos:line="5" pos:column="16"/></typename><index pos:line="5" pos:column="16">[<expr><name pos:line="5" pos:column="17">BUFSIZE<pos:position pos:line="5" pos:column="24"/></name></expr>]<pos:position pos:line="5" pos:column="25"/></index></name></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">ret<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">stat<pos:position pos:line="7" pos:column="14"/></name></name></type> <name pos:line="7" pos:column="15">statbuf<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">dirent<pos:position pos:line="8" pos:column="16"/></name></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">de<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">status<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">plugin_name<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">==<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">NULL<pos:position pos:line="11" pos:column="26"/></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">EINVAL<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">)<pos:position pos:line="12" pos:column="20"/></operator></expr>;<pos:position pos:line="12" pos:column="21"/></return></block></then></if>

  <comment type="block" pos:line="14" pos:column="3">/* Check if plugin is already loaded and don't do anything in this
   * case. */</comment>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><call><name pos:line="16" pos:column="7">plugin_is_loaded<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">plugin_name<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="37"/></condition><then pos:line="16" pos:column="37">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">0<pos:position pos:line="17" pos:column="14"/></literal><operator pos:line="17" pos:column="14">)<pos:position pos:line="17" pos:column="15"/></operator></expr>;<pos:position pos:line="17" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">dir<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <call><name pos:line="19" pos:column="9">plugin_get_dir<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">()<pos:position pos:line="19" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">ret<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <literal type="number" pos:line="20" pos:column="9">1<pos:position pos:line="20" pos:column="10"/></literal></expr>;<pos:position pos:line="20" pos:column="11"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/*
   * XXX: Magic at work:
   *
   * Some of the language bindings, for example the Python and Perl
   * plugins, need to be able to export symbols to the scripts they run.
   * For this to happen, the "Globals" flag needs to be set.
   * Unfortunately, this technical detail is hard to explain to the
   * average user and she shouldn't have to worry about this, ideally.
   * So in order to save everyone's sanity use a different default for a
   * handful of special plugins. --octo
   */</comment>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><operator pos:line="33" pos:column="7">(<pos:position pos:line="33" pos:column="8"/></operator><call><name pos:line="33" pos:column="8">strcasecmp<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><literal type="string" pos:line="33" pos:column="19">"perl"<pos:position pos:line="33" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="27">plugin_name<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call> <operator pos:line="33" pos:column="40">==<pos:position pos:line="33" pos:column="42"/></operator> <literal type="number" pos:line="33" pos:column="43">0<pos:position pos:line="33" pos:column="44"/></literal><operator pos:line="33" pos:column="44">)<pos:position pos:line="33" pos:column="45"/></operator> <operator pos:line="33" pos:column="46">||<pos:position pos:line="33" pos:column="48"/></operator>
      <operator pos:line="34" pos:column="7">(<pos:position pos:line="34" pos:column="8"/></operator><call><name pos:line="34" pos:column="8">strcasecmp<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><literal type="string" pos:line="34" pos:column="19">"python"<pos:position pos:line="34" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="29">plugin_name<pos:position pos:line="34" pos:column="40"/></name></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call> <operator pos:line="34" pos:column="42">==<pos:position pos:line="34" pos:column="44"/></operator> <literal type="number" pos:line="34" pos:column="45">0<pos:position pos:line="34" pos:column="46"/></literal><operator pos:line="34" pos:column="46">)<pos:position pos:line="34" pos:column="47"/></operator></expr>)<pos:position pos:line="34" pos:column="48"/></condition><then pos:line="34" pos:column="48">
    <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="5">flags<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">|=<pos:position pos:line="35" pos:column="13"/></operator> <name pos:line="35" pos:column="14">PLUGIN_FLAGS_GLOBAL<pos:position pos:line="35" pos:column="33"/></name></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="37" pos:column="3">/* `cpu' should not match `cpufreq'. To solve this we add `.so' to the
   * type when matching the filename */</comment>
  <expr_stmt><expr><name pos:line="39" pos:column="3">status<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <call><name pos:line="39" pos:column="12">ssnprintf<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name><typename pos:line="39" pos:column="22">typename<pos:position pos:line="39" pos:column="30"/></typename></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="32">sizeof<argument_list pos:line="39" pos:column="38">(<argument><expr><name><typename pos:line="39" pos:column="39">typename<pos:position pos:line="39" pos:column="47"/></typename></name></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="50">"%s.so"<pos:position pos:line="39" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="59">plugin_name<pos:position pos:line="39" pos:column="70"/></name></expr></argument>)<pos:position pos:line="39" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="72"/></expr_stmt>
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><operator pos:line="40" pos:column="7">(<pos:position pos:line="40" pos:column="8"/></operator><name pos:line="40" pos:column="8">status<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">&lt;<pos:position pos:line="40" pos:column="19"/></operator> <literal type="number" pos:line="40" pos:column="17">0<pos:position pos:line="40" pos:column="18"/></literal><operator pos:line="40" pos:column="18">)<pos:position pos:line="40" pos:column="19"/></operator> <operator pos:line="40" pos:column="20">||<pos:position pos:line="40" pos:column="22"/></operator> <operator pos:line="40" pos:column="23">(<pos:position pos:line="40" pos:column="24"/></operator><operator pos:line="40" pos:column="24">(<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="25">size_t<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">)<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="32">status<pos:position pos:line="40" pos:column="38"/></name> <operator pos:line="40" pos:column="39">&gt;=<pos:position pos:line="40" pos:column="44"/></operator> <sizeof pos:line="40" pos:column="42">sizeof<argument_list pos:line="40" pos:column="48">(<argument><expr><name><typename pos:line="40" pos:column="49">typename<pos:position pos:line="40" pos:column="57"/></typename></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></sizeof><operator pos:line="40" pos:column="58">)<pos:position pos:line="40" pos:column="59"/></operator></expr>)<pos:position pos:line="40" pos:column="60"/></condition><then pos:line="40" pos:column="60"> <block pos:line="40" pos:column="61">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">WARNING<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><literal type="string" pos:line="41" pos:column="13">"plugin_load: Filename too long: \"%s.so\""<pos:position pos:line="41" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="58">plugin_name<pos:position pos:line="41" pos:column="69"/></name></expr></argument>)<pos:position pos:line="41" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="71"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><operator pos:line="42" pos:column="12">(<pos:position pos:line="42" pos:column="13"/></operator><operator pos:line="42" pos:column="13">-<pos:position pos:line="42" pos:column="14"/></operator><literal type="number" pos:line="42" pos:column="14">1<pos:position pos:line="42" pos:column="15"/></literal><operator pos:line="42" pos:column="15">)<pos:position pos:line="42" pos:column="16"/></operator></expr>;<pos:position pos:line="42" pos:column="17"/></return>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><operator pos:line="45" pos:column="7">(<pos:position pos:line="45" pos:column="8"/></operator><name pos:line="45" pos:column="8">dh<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">=<pos:position pos:line="45" pos:column="12"/></operator> <call><name pos:line="45" pos:column="13">opendir<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><name pos:line="45" pos:column="21">dir<pos:position pos:line="45" pos:column="24"/></name></expr></argument>)<pos:position pos:line="45" pos:column="25"/></argument_list></call><operator pos:line="45" pos:column="25">)<pos:position pos:line="45" pos:column="26"/></operator> <operator pos:line="45" pos:column="27">==<pos:position pos:line="45" pos:column="29"/></operator> <name pos:line="45" pos:column="30">NULL<pos:position pos:line="45" pos:column="34"/></name></expr>)<pos:position pos:line="45" pos:column="35"/></condition><then pos:line="45" pos:column="35"> <block pos:line="45" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="46" pos:column="5">char<pos:position pos:line="46" pos:column="9"/></name></type> <name><name pos:line="46" pos:column="10">errbuf<pos:position pos:line="46" pos:column="16"/></name><index pos:line="46" pos:column="16">[<expr><literal type="number" pos:line="46" pos:column="17">1024<pos:position pos:line="46" pos:column="21"/></literal></expr>]<pos:position pos:line="46" pos:column="22"/></index></name></decl>;<pos:position pos:line="46" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">ERROR<pos:position pos:line="47" pos:column="10"/></name><argument_list pos:line="47" pos:column="10">(<argument><expr><literal type="string" pos:line="47" pos:column="11">"plugin_load: opendir (%s) failed: %s"<pos:position pos:line="47" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="51">dir<pos:position pos:line="47" pos:column="54"/></name></expr></argument>,
          <argument><expr><call><name pos:line="48" pos:column="11">sstrerror<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><name pos:line="48" pos:column="21">errno<pos:position pos:line="48" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="28">errbuf<pos:position pos:line="48" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="36">sizeof<argument_list pos:line="48" pos:column="42">(<argument><expr><name pos:line="48" pos:column="43">errbuf<pos:position pos:line="48" pos:column="49"/></name></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="53"/></expr_stmt>
    <return pos:line="49" pos:column="5">return <expr><operator pos:line="49" pos:column="12">(<pos:position pos:line="49" pos:column="13"/></operator><operator pos:line="49" pos:column="13">-<pos:position pos:line="49" pos:column="14"/></operator><literal type="number" pos:line="49" pos:column="14">1<pos:position pos:line="49" pos:column="15"/></literal><operator pos:line="49" pos:column="15">)<pos:position pos:line="49" pos:column="16"/></operator></expr>;<pos:position pos:line="49" pos:column="17"/></return>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <while pos:line="52" pos:column="3">while <condition pos:line="52" pos:column="9">(<expr><operator pos:line="52" pos:column="10">(<pos:position pos:line="52" pos:column="11"/></operator><name pos:line="52" pos:column="11">de<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <call><name pos:line="52" pos:column="16">readdir<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><name pos:line="52" pos:column="24">dh<pos:position pos:line="52" pos:column="26"/></name></expr></argument>)<pos:position pos:line="52" pos:column="27"/></argument_list></call><operator pos:line="52" pos:column="27">)<pos:position pos:line="52" pos:column="28"/></operator> <operator pos:line="52" pos:column="29">!=<pos:position pos:line="52" pos:column="31"/></operator> <name pos:line="52" pos:column="32">NULL<pos:position pos:line="52" pos:column="36"/></name></expr>)<pos:position pos:line="52" pos:column="37"/></condition> <block pos:line="52" pos:column="38">{
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><call><name pos:line="53" pos:column="9">strcasecmp<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><name><name pos:line="53" pos:column="20">de<pos:position pos:line="53" pos:column="22"/></name><operator pos:line="53" pos:column="22">-&gt;<pos:position pos:line="53" pos:column="27"/></operator><name pos:line="53" pos:column="24">d_name<pos:position pos:line="53" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><typename pos:line="53" pos:column="32">typename<pos:position pos:line="53" pos:column="40"/></typename></name></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="42"/></condition><then pos:line="53" pos:column="42">
      <block type="pseudo"><continue pos:line="54" pos:column="7">continue;<pos:position pos:line="54" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="56" pos:column="5">status<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <call><name pos:line="56" pos:column="14">ssnprintf<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">(<argument><expr><name pos:line="56" pos:column="24">filename<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="34">sizeof<argument_list pos:line="56" pos:column="40">(<argument><expr><name pos:line="56" pos:column="41">filename<pos:position pos:line="56" pos:column="49"/></name></expr></argument>)<pos:position pos:line="56" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="52">"%s/%s"<pos:position pos:line="56" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="61">dir<pos:position pos:line="56" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="66">de<pos:position pos:line="56" pos:column="68"/></name><operator pos:line="56" pos:column="68">-&gt;<pos:position pos:line="56" pos:column="73"/></operator><name pos:line="56" pos:column="70">d_name<pos:position pos:line="56" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="78"/></expr_stmt>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">(<pos:position pos:line="57" pos:column="10"/></operator><name pos:line="57" pos:column="10">status<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">&lt;<pos:position pos:line="57" pos:column="21"/></operator> <literal type="number" pos:line="57" pos:column="19">0<pos:position pos:line="57" pos:column="20"/></literal><operator pos:line="57" pos:column="20">)<pos:position pos:line="57" pos:column="21"/></operator> <operator pos:line="57" pos:column="22">||<pos:position pos:line="57" pos:column="24"/></operator> <operator pos:line="57" pos:column="25">(<pos:position pos:line="57" pos:column="26"/></operator><operator pos:line="57" pos:column="26">(<pos:position pos:line="57" pos:column="27"/></operator><name pos:line="57" pos:column="27">size_t<pos:position pos:line="57" pos:column="33"/></name><operator pos:line="57" pos:column="33">)<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="34">status<pos:position pos:line="57" pos:column="40"/></name> <operator pos:line="57" pos:column="41">&gt;=<pos:position pos:line="57" pos:column="46"/></operator> <sizeof pos:line="57" pos:column="44">sizeof<argument_list pos:line="57" pos:column="50">(<argument><expr><name pos:line="57" pos:column="51">filename<pos:position pos:line="57" pos:column="59"/></name></expr></argument>)<pos:position pos:line="57" pos:column="60"/></argument_list></sizeof><operator pos:line="57" pos:column="60">)<pos:position pos:line="57" pos:column="61"/></operator></expr>)<pos:position pos:line="57" pos:column="62"/></condition><then pos:line="57" pos:column="62"> <block pos:line="57" pos:column="63">{
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">WARNING<pos:position pos:line="58" pos:column="14"/></name><argument_list pos:line="58" pos:column="14">(<argument><expr><literal type="string" pos:line="58" pos:column="15">"plugin_load: Filename too long: \"%s/%s\""<pos:position pos:line="58" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="60">dir<pos:position pos:line="58" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="65">de<pos:position pos:line="58" pos:column="67"/></name><operator pos:line="58" pos:column="67">-&gt;<pos:position pos:line="58" pos:column="72"/></operator><name pos:line="58" pos:column="69">d_name<pos:position pos:line="58" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="77"/></expr_stmt>
      <continue pos:line="59" pos:column="7">continue;<pos:position pos:line="59" pos:column="16"/></continue>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><call><name pos:line="62" pos:column="9">lstat<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">(<argument><expr><name pos:line="62" pos:column="15">filename<pos:position pos:line="62" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="25">&amp;<pos:position pos:line="62" pos:column="30"/></operator><name pos:line="62" pos:column="26">statbuf<pos:position pos:line="62" pos:column="33"/></name></expr></argument>)<pos:position pos:line="62" pos:column="34"/></argument_list></call> <operator pos:line="62" pos:column="35">==<pos:position pos:line="62" pos:column="37"/></operator> <operator pos:line="62" pos:column="38">-<pos:position pos:line="62" pos:column="39"/></operator><literal type="number" pos:line="62" pos:column="39">1<pos:position pos:line="62" pos:column="40"/></literal></expr>)<pos:position pos:line="62" pos:column="41"/></condition><then pos:line="62" pos:column="41"> <block pos:line="62" pos:column="42">{
      <decl_stmt><decl><type><name pos:line="63" pos:column="7">char<pos:position pos:line="63" pos:column="11"/></name></type> <name><name pos:line="63" pos:column="12">errbuf<pos:position pos:line="63" pos:column="18"/></name><index pos:line="63" pos:column="18">[<expr><literal type="number" pos:line="63" pos:column="19">1024<pos:position pos:line="63" pos:column="23"/></literal></expr>]<pos:position pos:line="63" pos:column="24"/></index></name></decl>;<pos:position pos:line="63" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">WARNING<pos:position pos:line="64" pos:column="14"/></name><argument_list pos:line="64" pos:column="14">(<argument><expr><literal type="string" pos:line="64" pos:column="15">"plugin_load: stat (\"%s\") failed: %s"<pos:position pos:line="64" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="56">filename<pos:position pos:line="64" pos:column="64"/></name></expr></argument>,
              <argument><expr><call><name pos:line="65" pos:column="15">sstrerror<pos:position pos:line="65" pos:column="24"/></name><argument_list pos:line="65" pos:column="24">(<argument><expr><name pos:line="65" pos:column="25">errno<pos:position pos:line="65" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="32">errbuf<pos:position pos:line="65" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="40">sizeof<argument_list pos:line="65" pos:column="46">(<argument><expr><name pos:line="65" pos:column="47">errbuf<pos:position pos:line="65" pos:column="53"/></name></expr></argument>)<pos:position pos:line="65" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="57"/></expr_stmt>
      <continue pos:line="66" pos:column="7">continue;<pos:position pos:line="66" pos:column="16"/></continue>
    }<pos:position pos:line="67" pos:column="6"/></block></then> <elseif pos:line="67" pos:column="7">else <if pos:line="67" pos:column="12">if <condition pos:line="67" pos:column="15">(<expr><operator pos:line="67" pos:column="16">!<pos:position pos:line="67" pos:column="17"/></operator><call><name pos:line="67" pos:column="17">S_ISREG<pos:position pos:line="67" pos:column="24"/></name><argument_list pos:line="67" pos:column="24">(<argument><expr><name><name pos:line="67" pos:column="25">statbuf<pos:position pos:line="67" pos:column="32"/></name><operator pos:line="67" pos:column="32">.<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="33">st_mode<pos:position pos:line="67" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="42"/></condition><then pos:line="67" pos:column="42"> <block pos:line="67" pos:column="43">{
      <comment type="block" pos:line="68" pos:column="7">/* don't follow symlinks */</comment>
      <expr_stmt><expr><call><name pos:line="69" pos:column="7">WARNING<pos:position pos:line="69" pos:column="14"/></name><argument_list pos:line="69" pos:column="14">(<argument><expr><literal type="string" pos:line="69" pos:column="15">"plugin_load: %s is not a regular file."<pos:position pos:line="69" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="57">filename<pos:position pos:line="69" pos:column="65"/></name></expr></argument>)<pos:position pos:line="69" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="67"/></expr_stmt>
      <continue pos:line="70" pos:column="7">continue;<pos:position pos:line="70" pos:column="16"/></continue>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="73" pos:column="5">status<pos:position pos:line="73" pos:column="11"/></name> <operator pos:line="73" pos:column="12">=<pos:position pos:line="73" pos:column="13"/></operator> <call><name pos:line="73" pos:column="14">plugin_load_file<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">(<argument><expr><name pos:line="73" pos:column="31">filename<pos:position pos:line="73" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="41">flags<pos:position pos:line="73" pos:column="46"/></name></expr></argument>)<pos:position pos:line="73" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="48"/></expr_stmt>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">status<pos:position pos:line="74" pos:column="15"/></name> <operator pos:line="74" pos:column="16">==<pos:position pos:line="74" pos:column="18"/></operator> <literal type="number" pos:line="74" pos:column="19">0<pos:position pos:line="74" pos:column="20"/></literal></expr>)<pos:position pos:line="74" pos:column="21"/></condition><then pos:line="74" pos:column="21"> <block pos:line="74" pos:column="22">{
      <comment type="block" pos:line="75" pos:column="7">/* success */</comment>
      <expr_stmt><expr><call><name pos:line="76" pos:column="7">plugin_mark_loaded<pos:position pos:line="76" pos:column="25"/></name><argument_list pos:line="76" pos:column="25">(<argument><expr><name pos:line="76" pos:column="26">plugin_name<pos:position pos:line="76" pos:column="37"/></name></expr></argument>)<pos:position pos:line="76" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name pos:line="77" pos:column="7">ret<pos:position pos:line="77" pos:column="10"/></name> <operator pos:line="77" pos:column="11">=<pos:position pos:line="77" pos:column="12"/></operator> <literal type="number" pos:line="77" pos:column="13">0<pos:position pos:line="77" pos:column="14"/></literal></expr>;<pos:position pos:line="77" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">INFO<pos:position pos:line="78" pos:column="11"/></name><argument_list pos:line="78" pos:column="11">(<argument><expr><literal type="string" pos:line="78" pos:column="12">"plugin_load: plugin \"%s\" successfully loaded."<pos:position pos:line="78" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="63">plugin_name<pos:position pos:line="78" pos:column="74"/></name></expr></argument>)<pos:position pos:line="78" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="76"/></expr_stmt>
      <break pos:line="79" pos:column="7">break;<pos:position pos:line="79" pos:column="13"/></break>
    }<pos:position pos:line="80" pos:column="6"/></block></then> <else pos:line="80" pos:column="7">else <block pos:line="80" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">ERROR<pos:position pos:line="81" pos:column="12"/></name><argument_list pos:line="81" pos:column="12">(<argument><expr><literal type="string" pos:line="81" pos:column="13">"plugin_load: Load plugin \"%s\" failed with "<pos:position pos:line="81" pos:column="59"/></literal>
            <literal type="string" pos:line="82" pos:column="13">"status %i."<pos:position pos:line="82" pos:column="25"/></literal></expr></argument>,
            <argument><expr><name pos:line="83" pos:column="13">plugin_name<pos:position pos:line="83" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="26">status<pos:position pos:line="83" pos:column="32"/></name></expr></argument>)<pos:position pos:line="83" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></else></if>
  }<pos:position pos:line="85" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="87" pos:column="3">closedir<pos:position pos:line="87" pos:column="11"/></name><argument_list pos:line="87" pos:column="11">(<argument><expr><name pos:line="87" pos:column="12">dh<pos:position pos:line="87" pos:column="14"/></name></expr></argument>)<pos:position pos:line="87" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="16"/></expr_stmt>

  <if pos:line="89" pos:column="3">if <condition pos:line="89" pos:column="6">(<expr><name><name pos:line="89" pos:column="7">filename<pos:position pos:line="89" pos:column="15"/></name><index pos:line="89" pos:column="15">[<expr><literal type="number" pos:line="89" pos:column="16">0<pos:position pos:line="89" pos:column="17"/></literal></expr>]<pos:position pos:line="89" pos:column="18"/></index></name> <operator pos:line="89" pos:column="19">==<pos:position pos:line="89" pos:column="21"/></operator> <literal type="number" pos:line="89" pos:column="22">0<pos:position pos:line="89" pos:column="23"/></literal></expr>)<pos:position pos:line="89" pos:column="24"/></condition><then pos:line="89" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="5">ERROR<pos:position pos:line="90" pos:column="10"/></name><argument_list pos:line="90" pos:column="10">(<argument><expr><literal type="string" pos:line="90" pos:column="11">"plugin_load: Could not find plugin \"%s\" in %s"<pos:position pos:line="90" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="62">plugin_name<pos:position pos:line="90" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="75">dir<pos:position pos:line="90" pos:column="78"/></name></expr></argument>)<pos:position pos:line="90" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="80"/></expr_stmt></block></then></if>

  <return pos:line="92" pos:column="3">return <expr><operator pos:line="92" pos:column="10">(<pos:position pos:line="92" pos:column="11"/></operator><name pos:line="92" pos:column="11">ret<pos:position pos:line="92" pos:column="14"/></name><operator pos:line="92" pos:column="14">)<pos:position pos:line="92" pos:column="15"/></operator></expr>;<pos:position pos:line="92" pos:column="16"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

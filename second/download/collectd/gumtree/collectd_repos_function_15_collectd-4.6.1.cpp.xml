<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_15_collectd-4.6.1.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">lt_dladderror<pos:position pos:line="2" pos:column="14"/></name> <argument_list pos:line="2" pos:column="15">(<argument><expr><name pos:line="2" pos:column="16">diagnostic<pos:position pos:line="2" pos:column="26"/></name></expr></argument>)<pos:position pos:line="2" pos:column="27"/></argument_list>
     const <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier><name pos:line="3" pos:column="18">diagnostic<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type>		<name pos:line="5" pos:column="17">errindex<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><literal type="number" pos:line="5" pos:column="28">0<pos:position pos:line="5" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type>		<name pos:line="6" pos:column="17">result<pos:position pos:line="6" pos:column="23"/></name>	 <init pos:line="6" pos:column="26">= <expr><operator pos:line="6" pos:column="28">-<pos:position pos:line="6" pos:column="29"/></operator><literal type="number" pos:line="6" pos:column="29">1<pos:position pos:line="6" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name>  <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier><modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">temp<pos:position pos:line="7" pos:column="21"/></name>     <init pos:line="7" pos:column="26">= <expr><operator pos:line="7" pos:column="28">(<pos:position pos:line="7" pos:column="29"/></operator><specifier pos:line="7" pos:column="29">const<pos:position pos:line="7" pos:column="34"/></specifier> <name pos:line="7" pos:column="35">char<pos:position pos:line="7" pos:column="39"/></name> <operator pos:line="7" pos:column="40">*<pos:position pos:line="7" pos:column="41"/></operator><operator pos:line="7" pos:column="41">*<pos:position pos:line="7" pos:column="42"/></operator><operator pos:line="7" pos:column="42">)<pos:position pos:line="7" pos:column="43"/></operator> <literal type="number" pos:line="7" pos:column="44">0<pos:position pos:line="7" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">assert<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><name pos:line="9" pos:column="11">diagnostic<pos:position pos:line="9" pos:column="21"/></name></expr></argument>)<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">LT_DLMUTEX_LOCK<pos:position pos:line="11" pos:column="18"/></name> <argument_list pos:line="11" pos:column="19">()<pos:position pos:line="11" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">errindex<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <name pos:line="13" pos:column="14">errorcount<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">-<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">LT_ERROR_MAX<pos:position pos:line="13" pos:column="39"/></name></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">temp<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <call><name pos:line="14" pos:column="10">LT_EREALLOC<pos:position pos:line="14" pos:column="21"/></name> <argument_list pos:line="14" pos:column="22">(<argument><expr><specifier pos:line="14" pos:column="23">const<pos:position pos:line="14" pos:column="28"/></specifier> <name pos:line="14" pos:column="29">char<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">*<pos:position pos:line="14" pos:column="35"/></operator></expr></argument>, <argument><expr><name pos:line="14" pos:column="37">user_error_strings<pos:position pos:line="14" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="57">1<pos:position pos:line="14" pos:column="58"/></literal> <operator pos:line="14" pos:column="59">+<pos:position pos:line="14" pos:column="60"/></operator> <name pos:line="14" pos:column="61">errindex<pos:position pos:line="14" pos:column="69"/></name></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="71"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">temp<pos:position pos:line="15" pos:column="11"/></name></expr>)<pos:position pos:line="15" pos:column="12"/></condition><then pos:line="15" pos:column="12">
    <block pos:line="16" pos:column="5">{
      <expr_stmt><expr><name pos:line="17" pos:column="7">user_error_strings<pos:position pos:line="17" pos:column="25"/></name>		<operator pos:line="17" pos:column="41">=<pos:position pos:line="17" pos:column="42"/></operator> <name pos:line="17" pos:column="43">temp<pos:position pos:line="17" pos:column="47"/></name></expr>;<pos:position pos:line="17" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="18" pos:column="7">user_error_strings<pos:position pos:line="18" pos:column="25"/></name><index pos:line="18" pos:column="25">[<expr><name pos:line="18" pos:column="26">errindex<pos:position pos:line="18" pos:column="34"/></name></expr>]<pos:position pos:line="18" pos:column="35"/></index></name>	<operator pos:line="18" pos:column="41">=<pos:position pos:line="18" pos:column="42"/></operator> <name pos:line="18" pos:column="43">diagnostic<pos:position pos:line="18" pos:column="53"/></name></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name pos:line="19" pos:column="7">result<pos:position pos:line="19" pos:column="13"/></name>				<operator pos:line="19" pos:column="41">=<pos:position pos:line="19" pos:column="42"/></operator> <name pos:line="19" pos:column="43">errorcount<pos:position pos:line="19" pos:column="53"/></name><operator pos:line="19" pos:column="53">++<pos:position pos:line="19" pos:column="55"/></operator></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">LT_DLMUTEX_UNLOCK<pos:position pos:line="22" pos:column="20"/></name> <argument_list pos:line="22" pos:column="21">()<pos:position pos:line="22" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>

  <return pos:line="24" pos:column="3">return <expr><name pos:line="24" pos:column="10">result<pos:position pos:line="24" pos:column="16"/></name></expr>;<pos:position pos:line="24" pos:column="17"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></unit>

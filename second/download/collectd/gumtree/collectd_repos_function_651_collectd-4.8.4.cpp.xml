<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_651_collectd-4.8.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">powerdns_update_recursor_command<pos:position pos:line="1" pos:column="44"/></name> <parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">list_item_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">li<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <comment type="block" pos:line="1" pos:column="63">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><literal type="number" pos:line="3" pos:column="15">4096<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">li<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">==<pos:position pos:line="6" pos:column="12"/></operator> <name pos:line="6" pos:column="13">NULL<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition><then pos:line="6" pos:column="18">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">0<pos:position pos:line="7" pos:column="14"/></literal><operator pos:line="7" pos:column="14">)<pos:position pos:line="7" pos:column="15"/></operator></expr>;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name><name pos:line="9" pos:column="7">li<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">-&gt;<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="11">fields_num<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">&lt;<pos:position pos:line="9" pos:column="26"/></operator> <literal type="number" pos:line="9" pos:column="24">1<pos:position pos:line="9" pos:column="25"/></literal></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">sstrncpy<pos:position pos:line="11" pos:column="13"/></name> <argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">buffer<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="23">RECURSOR_COMMAND<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="41">sizeof <argument_list pos:line="11" pos:column="48">(<argument><expr><name pos:line="11" pos:column="49">buffer<pos:position pos:line="11" pos:column="55"/></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then>
  <else pos:line="13" pos:column="3">else
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">sstrncpy<pos:position pos:line="15" pos:column="13"/></name> <argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">buffer<pos:position pos:line="15" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"get "<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="31">sizeof <argument_list pos:line="15" pos:column="38">(<argument><expr><name pos:line="15" pos:column="39">buffer<pos:position pos:line="15" pos:column="45"/></name></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">status<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">strjoin<pos:position pos:line="16" pos:column="21"/></name> <argument_list pos:line="16" pos:column="22">(<argument><expr><operator pos:line="16" pos:column="23">&amp;<pos:position pos:line="16" pos:column="28"/></operator><name><name pos:line="16" pos:column="24">buffer<pos:position pos:line="16" pos:column="30"/></name><index pos:line="16" pos:column="30">[<expr><literal type="number" pos:line="16" pos:column="31">4<pos:position pos:line="16" pos:column="32"/></literal></expr>]<pos:position pos:line="16" pos:column="33"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="35">sizeof <argument_list pos:line="16" pos:column="42">(<argument><expr><name pos:line="16" pos:column="43">buffer<pos:position pos:line="16" pos:column="49"/></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></sizeof> <operator pos:line="16" pos:column="51">-<pos:position pos:line="16" pos:column="52"/></operator> <call><name pos:line="16" pos:column="53">strlen<pos:position pos:line="16" pos:column="59"/></name> <argument_list pos:line="16" pos:column="60">(<argument><expr><literal type="string" pos:line="16" pos:column="61">"get "<pos:position pos:line="16" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr></argument>,
	<argument><expr><name><name pos:line="17" pos:column="9">li<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">fields<pos:position pos:line="17" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="21">li<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">-&gt;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="25">fields_num<pos:position pos:line="17" pos:column="35"/></name></name></expr></argument>,
	<comment type="block" pos:line="18" pos:column="9">/* seperator = */</comment> <argument><expr><literal type="string" pos:line="18" pos:column="27">" "<pos:position pos:line="18" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">status<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">&lt;<pos:position pos:line="19" pos:column="20"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20">
    <block pos:line="20" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">ERROR<pos:position pos:line="21" pos:column="12"/></name> <argument_list pos:line="21" pos:column="13">(<argument><expr><literal type="string" pos:line="21" pos:column="14">"powerdns plugin: strjoin failed."<pos:position pos:line="21" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
      <return pos:line="22" pos:column="7">return <expr><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><operator pos:line="22" pos:column="15">-<pos:position pos:line="22" pos:column="16"/></operator><literal type="number" pos:line="22" pos:column="16">1<pos:position pos:line="22" pos:column="17"/></literal><operator pos:line="22" pos:column="17">)<pos:position pos:line="22" pos:column="18"/></operator></expr>;<pos:position pos:line="22" pos:column="19"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
  }<pos:position pos:line="24" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name><name pos:line="26" pos:column="3">buffer<pos:position pos:line="26" pos:column="9"/></name><index pos:line="26" pos:column="9">[<expr><sizeof pos:line="26" pos:column="10">sizeof <argument_list pos:line="26" pos:column="17">(<argument><expr><name pos:line="26" pos:column="18">buffer<pos:position pos:line="26" pos:column="24"/></name></expr></argument>)<pos:position pos:line="26" pos:column="25"/></argument_list></sizeof> <operator pos:line="26" pos:column="26">-<pos:position pos:line="26" pos:column="27"/></operator> <literal type="number" pos:line="26" pos:column="28">1<pos:position pos:line="26" pos:column="29"/></literal></expr>]<pos:position pos:line="26" pos:column="30"/></index></name> <operator pos:line="26" pos:column="31">=<pos:position pos:line="26" pos:column="32"/></operator> <literal type="number" pos:line="26" pos:column="33">0<pos:position pos:line="26" pos:column="34"/></literal></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">li<pos:position pos:line="27" pos:column="5"/></name><operator pos:line="27" pos:column="5">-&gt;<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="7">command<pos:position pos:line="27" pos:column="14"/></name></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <call><name pos:line="27" pos:column="17">strdup<pos:position pos:line="27" pos:column="23"/></name> <argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">buffer<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name><name pos:line="28" pos:column="7">li<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">-&gt;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="11">command<pos:position pos:line="28" pos:column="18"/></name></name> <operator pos:line="28" pos:column="19">==<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">NULL<pos:position pos:line="28" pos:column="26"/></name></expr>)<pos:position pos:line="28" pos:column="27"/></condition><then pos:line="28" pos:column="27">
  <block pos:line="29" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">ERROR<pos:position pos:line="30" pos:column="10"/></name> <argument_list pos:line="30" pos:column="11">(<argument><expr><literal type="string" pos:line="30" pos:column="12">"powerdns plugin: strdup failed."<pos:position pos:line="30" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="47"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><operator pos:line="31" pos:column="13">-<pos:position pos:line="31" pos:column="14"/></operator><literal type="number" pos:line="31" pos:column="14">1<pos:position pos:line="31" pos:column="15"/></literal><operator pos:line="31" pos:column="15">)<pos:position pos:line="31" pos:column="16"/></operator></expr>;<pos:position pos:line="31" pos:column="17"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <return pos:line="34" pos:column="3">return <expr><operator pos:line="34" pos:column="10">(<pos:position pos:line="34" pos:column="11"/></operator><literal type="number" pos:line="34" pos:column="11">0<pos:position pos:line="34" pos:column="12"/></literal><operator pos:line="34" pos:column="12">)<pos:position pos:line="34" pos:column="13"/></operator></expr>;<pos:position pos:line="34" pos:column="14"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

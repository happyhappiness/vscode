<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_828_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">bind_xml_stats_handle_zone<pos:position pos:line="1" pos:column="38"/></name> <parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">version<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">xmlDoc<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">doc<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="66">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">xmlXPathContext<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">path_ctx<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">xmlNode<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">node<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">cb_view_t<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">view<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">time_t<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">current_time<pos:position pos:line="3" pos:column="24"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="25"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">xmlXPathObject<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">path_obj<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">zone_name<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">j<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">version<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">&gt;=<pos:position pos:line="9" pos:column="20"/></operator> <literal type="number" pos:line="9" pos:column="18">3<pos:position pos:line="9" pos:column="19"/></literal></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
  <block pos:line="10" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">n<pos:position pos:line="11" pos:column="12"/></name> <init pos:line="11" pos:column="13">= <expr><operator pos:line="11" pos:column="15">(<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">char<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></operator><operator pos:line="11" pos:column="22">)<pos:position pos:line="11" pos:column="23"/></operator> <call><name pos:line="11" pos:column="24">xmlGetProp<pos:position pos:line="11" pos:column="34"/></name> <argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">node<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">BAD_CAST<pos:position pos:line="11" pos:column="50"/></name> <literal type="string" pos:line="11" pos:column="51">"name"<pos:position pos:line="11" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">c<pos:position pos:line="12" pos:column="12"/></name> <init pos:line="12" pos:column="13">= <expr><operator pos:line="12" pos:column="15">(<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">char<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></operator><operator pos:line="12" pos:column="22">)<pos:position pos:line="12" pos:column="23"/></operator> <call><name pos:line="12" pos:column="24">xmlGetProp<pos:position pos:line="12" pos:column="34"/></name> <argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">node<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">BAD_CAST<pos:position pos:line="12" pos:column="50"/></name> <literal type="string" pos:line="12" pos:column="51">"rdataclass"<pos:position pos:line="12" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="65"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">n<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">&amp;&amp;<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="14">c<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16">
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><name pos:line="15" pos:column="7">zone_name<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <operator pos:line="15" pos:column="19">(<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">char<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></operator><operator pos:line="15" pos:column="26">)<pos:position pos:line="15" pos:column="27"/></operator> <call><name pos:line="15" pos:column="28">xmlMalloc<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><call><name pos:line="15" pos:column="38">strlen<pos:position pos:line="15" pos:column="44"/></name><argument_list pos:line="15" pos:column="44">(<argument><expr><name pos:line="15" pos:column="45">n<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call> <operator pos:line="15" pos:column="48">+<pos:position pos:line="15" pos:column="49"/></operator> <call><name pos:line="15" pos:column="50">strlen<pos:position pos:line="15" pos:column="56"/></name><argument_list pos:line="15" pos:column="56">(<argument><expr><name pos:line="15" pos:column="57">c<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call> <operator pos:line="15" pos:column="60">+<pos:position pos:line="15" pos:column="61"/></operator> <literal type="number" pos:line="15" pos:column="62">2<pos:position pos:line="15" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">snprintf<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">zone_name<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="27">strlen<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">n<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call> <operator pos:line="16" pos:column="37">+<pos:position pos:line="16" pos:column="38"/></operator> <call><name pos:line="16" pos:column="39">strlen<pos:position pos:line="16" pos:column="45"/></name><argument_list pos:line="16" pos:column="45">(<argument><expr><name pos:line="16" pos:column="46">c<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call> <operator pos:line="16" pos:column="49">+<pos:position pos:line="16" pos:column="50"/></operator> <literal type="number" pos:line="16" pos:column="51">2<pos:position pos:line="16" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="54">"%s/%s"<pos:position pos:line="16" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="63">n<pos:position pos:line="16" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="66">c<pos:position pos:line="16" pos:column="67"/></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">xmlFree<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">n<pos:position pos:line="18" pos:column="14"/></name></expr></argument>)<pos:position pos:line="18" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">xmlFree<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">c<pos:position pos:line="19" pos:column="14"/></name></expr></argument>)<pos:position pos:line="19" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then>
  <else pos:line="21" pos:column="3">else
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><name pos:line="23" pos:column="5">path_obj<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <call><name pos:line="23" pos:column="16">xmlXPathEvalExpression<pos:position pos:line="23" pos:column="38"/></name> <argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">BAD_CAST<pos:position pos:line="23" pos:column="48"/></name> <literal type="string" pos:line="23" pos:column="49">"name"<pos:position pos:line="23" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="57">path_ctx<pos:position pos:line="23" pos:column="65"/></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">path_obj<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">==<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">NULL<pos:position pos:line="24" pos:column="25"/></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26">
    <block pos:line="25" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">ERROR<pos:position pos:line="26" pos:column="12"/></name> <argument_list pos:line="26" pos:column="13">(<argument><expr><literal type="string" pos:line="26" pos:column="14">"bind plugin: xmlXPathEvalExpression failed."<pos:position pos:line="26" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="61"/></expr_stmt>
      <return pos:line="27" pos:column="7">return <expr><operator pos:line="27" pos:column="14">(<pos:position pos:line="27" pos:column="15"/></operator><operator pos:line="27" pos:column="15">-<pos:position pos:line="27" pos:column="16"/></operator><literal type="number" pos:line="27" pos:column="16">1<pos:position pos:line="27" pos:column="17"/></literal><operator pos:line="27" pos:column="17">)<pos:position pos:line="27" pos:column="18"/></operator></expr>;<pos:position pos:line="27" pos:column="19"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <for pos:line="30" pos:column="5">for <control pos:line="30" pos:column="9">(<init><decl><type><name pos:line="30" pos:column="10">int<pos:position pos:line="30" pos:column="13"/></name></type> <name pos:line="30" pos:column="14">i<pos:position pos:line="30" pos:column="15"/></name> <init pos:line="30" pos:column="16">= <expr><literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="20"/></init> <condition><expr><name><name pos:line="30" pos:column="21">path_obj<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">nodesetval<pos:position pos:line="30" pos:column="41"/></name></name> <operator pos:line="30" pos:column="42">&amp;&amp;<pos:position pos:line="30" pos:column="52"/></operator> <operator pos:line="30" pos:column="45">(<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="46">i<pos:position pos:line="30" pos:column="47"/></name> <operator pos:line="30" pos:column="48">&lt;<pos:position pos:line="30" pos:column="52"/></operator> <name><name pos:line="30" pos:column="50">path_obj<pos:position pos:line="30" pos:column="58"/></name><operator pos:line="30" pos:column="58">-&gt;<pos:position pos:line="30" pos:column="63"/></operator><name pos:line="30" pos:column="60">nodesetval<pos:position pos:line="30" pos:column="70"/></name><operator pos:line="30" pos:column="70">-&gt;<pos:position pos:line="30" pos:column="75"/></operator><name pos:line="30" pos:column="72">nodeNr<pos:position pos:line="30" pos:column="78"/></name></name><operator pos:line="30" pos:column="78">)<pos:position pos:line="30" pos:column="79"/></operator></expr>;<pos:position pos:line="30" pos:column="80"/></condition> <incr><expr><name pos:line="30" pos:column="81">i<pos:position pos:line="30" pos:column="82"/></name><operator pos:line="30" pos:column="82">++<pos:position pos:line="30" pos:column="84"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="85"/></control>
    <block pos:line="31" pos:column="5">{
      <expr_stmt><expr><name pos:line="32" pos:column="7">zone_name<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <operator pos:line="32" pos:column="19">(<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">char<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">*<pos:position pos:line="32" pos:column="26"/></operator><operator pos:line="32" pos:column="26">)<pos:position pos:line="32" pos:column="27"/></operator> <call><name pos:line="32" pos:column="28">xmlNodeListGetString<pos:position pos:line="32" pos:column="48"/></name> <argument_list pos:line="32" pos:column="49">(<argument><expr><name pos:line="32" pos:column="50">doc<pos:position pos:line="32" pos:column="53"/></name></expr></argument>,
          <argument><expr><name><name pos:line="33" pos:column="11">path_obj<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">nodesetval<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">-&gt;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="33">nodeTab<pos:position pos:line="33" pos:column="40"/></name><index pos:line="33" pos:column="40">[<expr><name pos:line="33" pos:column="41">i<pos:position pos:line="33" pos:column="42"/></name></expr>]<pos:position pos:line="33" pos:column="43"/></index></name><operator pos:line="33" pos:column="43">-&gt;<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="45">xmlChildrenNode<pos:position pos:line="33" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="62">1<pos:position pos:line="33" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><name pos:line="34" pos:column="11">zone_name<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">!=<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">NULL<pos:position pos:line="34" pos:column="28"/></name></expr>)<pos:position pos:line="34" pos:column="29"/></condition><then pos:line="34" pos:column="29">
        <block type="pseudo"><break pos:line="35" pos:column="9">break;<pos:position pos:line="35" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">xmlXPathFreeObject<pos:position pos:line="37" pos:column="23"/></name> <argument_list pos:line="37" pos:column="24">(<argument><expr><name pos:line="37" pos:column="25">path_obj<pos:position pos:line="37" pos:column="33"/></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></else></if>

  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name pos:line="40" pos:column="7">zone_name<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">==<pos:position pos:line="40" pos:column="19"/></operator> <name pos:line="40" pos:column="20">NULL<pos:position pos:line="40" pos:column="24"/></name></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25">
  <block pos:line="41" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">ERROR<pos:position pos:line="42" pos:column="10"/></name> <argument_list pos:line="42" pos:column="11">(<argument><expr><literal type="string" pos:line="42" pos:column="12">"bind plugin: Could not determine zone name."<pos:position pos:line="42" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>
    <return pos:line="43" pos:column="5">return <expr><operator pos:line="43" pos:column="12">(<pos:position pos:line="43" pos:column="13"/></operator><operator pos:line="43" pos:column="13">-<pos:position pos:line="43" pos:column="14"/></operator><literal type="number" pos:line="43" pos:column="14">1<pos:position pos:line="43" pos:column="15"/></literal><operator pos:line="43" pos:column="15">)<pos:position pos:line="43" pos:column="16"/></operator></expr>;<pos:position pos:line="43" pos:column="17"/></return>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <for pos:line="46" pos:column="3">for <control pos:line="46" pos:column="7">(<init><expr><name pos:line="46" pos:column="8">j<pos:position pos:line="46" pos:column="9"/></name> <operator pos:line="46" pos:column="10">=<pos:position pos:line="46" pos:column="11"/></operator> <literal type="number" pos:line="46" pos:column="12">0<pos:position pos:line="46" pos:column="13"/></literal></expr>;<pos:position pos:line="46" pos:column="14"/></init> <condition><expr><name pos:line="46" pos:column="15">j<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">&lt;<pos:position pos:line="46" pos:column="21"/></operator> <name><name pos:line="46" pos:column="19">view<pos:position pos:line="46" pos:column="23"/></name><operator pos:line="46" pos:column="23">-&gt;<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="25">zones_num<pos:position pos:line="46" pos:column="34"/></name></name></expr>;<pos:position pos:line="46" pos:column="35"/></condition> <incr><expr><name pos:line="46" pos:column="36">j<pos:position pos:line="46" pos:column="37"/></name><operator pos:line="46" pos:column="37">++<pos:position pos:line="46" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="46" pos:column="40"/></control>
  <block pos:line="47" pos:column="3">{
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><call><name pos:line="48" pos:column="9">strcasecmp<pos:position pos:line="48" pos:column="19"/></name> <argument_list pos:line="48" pos:column="20">(<argument><expr><name pos:line="48" pos:column="21">zone_name<pos:position pos:line="48" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="32">view<pos:position pos:line="48" pos:column="36"/></name><operator pos:line="48" pos:column="36">-&gt;<pos:position pos:line="48" pos:column="41"/></operator><name pos:line="48" pos:column="38">zones<pos:position pos:line="48" pos:column="43"/></name><index pos:line="48" pos:column="43">[<expr><name pos:line="48" pos:column="44">j<pos:position pos:line="48" pos:column="45"/></name></expr>]<pos:position pos:line="48" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="48" pos:column="47"/></argument_list></call> <operator pos:line="48" pos:column="48">==<pos:position pos:line="48" pos:column="50"/></operator> <literal type="number" pos:line="48" pos:column="51">0<pos:position pos:line="48" pos:column="52"/></literal></expr>)<pos:position pos:line="48" pos:column="53"/></condition><then pos:line="48" pos:column="53">
      <block type="pseudo"><break pos:line="49" pos:column="7">break;<pos:position pos:line="49" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="50" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="52" pos:column="3">xmlFree<pos:position pos:line="52" pos:column="10"/></name> <argument_list pos:line="52" pos:column="11">(<argument><expr><name pos:line="52" pos:column="12">zone_name<pos:position pos:line="52" pos:column="21"/></name></expr></argument>)<pos:position pos:line="52" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="53" pos:column="3">zone_name<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <name pos:line="53" pos:column="15">NULL<pos:position pos:line="53" pos:column="19"/></name></expr>;<pos:position pos:line="53" pos:column="20"/></expr_stmt>

  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><name pos:line="55" pos:column="7">j<pos:position pos:line="55" pos:column="8"/></name> <operator pos:line="55" pos:column="9">&gt;=<pos:position pos:line="55" pos:column="14"/></operator> <name><name pos:line="55" pos:column="12">view<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">-&gt;<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="18">zones_num<pos:position pos:line="55" pos:column="27"/></name></name></expr>)<pos:position pos:line="55" pos:column="28"/></condition><then pos:line="55" pos:column="28">
    <block type="pseudo"><return pos:line="56" pos:column="5">return <expr><operator pos:line="56" pos:column="12">(<pos:position pos:line="56" pos:column="13"/></operator><literal type="number" pos:line="56" pos:column="13">0<pos:position pos:line="56" pos:column="14"/></literal><operator pos:line="56" pos:column="14">)<pos:position pos:line="56" pos:column="15"/></operator></expr>;<pos:position pos:line="56" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="58" pos:column="3">zone_name<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <name><name pos:line="58" pos:column="15">view<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">-&gt;<pos:position pos:line="58" pos:column="24"/></operator><name pos:line="58" pos:column="21">zones<pos:position pos:line="58" pos:column="26"/></name><index pos:line="58" pos:column="26">[<expr><name pos:line="58" pos:column="27">j<pos:position pos:line="58" pos:column="28"/></name></expr>]<pos:position pos:line="58" pos:column="29"/></index></name></expr>;<pos:position pos:line="58" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="60" pos:column="3">DEBUG<pos:position pos:line="60" pos:column="8"/></name> <argument_list pos:line="60" pos:column="9">(<argument><expr><literal type="string" pos:line="60" pos:column="10">"bind plugin: bind_xml_stats_handle_zone: Found zone `%s'."<pos:position pos:line="60" pos:column="69"/></literal></expr></argument>,
      <argument><expr><name pos:line="61" pos:column="7">zone_name<pos:position pos:line="61" pos:column="16"/></name></expr></argument>)<pos:position pos:line="61" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="18"/></expr_stmt>

  <block pos:line="63" pos:column="3">{ <comment type="block" pos:line="63" pos:column="5">/* Parse the &lt;counters&gt; tag {{{ */</comment>
    <decl_stmt><decl><type><name pos:line="64" pos:column="5">char<pos:position pos:line="64" pos:column="9"/></name></type> <name><name pos:line="64" pos:column="10">plugin_instance<pos:position pos:line="64" pos:column="25"/></name><index pos:line="64" pos:column="25">[<expr><name pos:line="64" pos:column="26">DATA_MAX_NAME_LEN<pos:position pos:line="64" pos:column="43"/></name></expr>]<pos:position pos:line="64" pos:column="44"/></index></name></decl>;<pos:position pos:line="64" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="65" pos:column="5">translation_table_ptr_t<pos:position pos:line="65" pos:column="28"/></name></type> <name pos:line="65" pos:column="29">table_ptr<pos:position pos:line="65" pos:column="38"/></name> <init pos:line="65" pos:column="39">=
    <expr><block pos:line="66" pos:column="5">{
      <expr><name pos:line="67" pos:column="7">nsstats_translation_table<pos:position pos:line="67" pos:column="32"/></name></expr>,
      <expr><name pos:line="68" pos:column="7">nsstats_translation_table_length<pos:position pos:line="68" pos:column="39"/></name></expr>,
      <expr><name pos:line="69" pos:column="7">plugin_instance<pos:position pos:line="69" pos:column="22"/></name></expr>
    }<pos:position pos:line="70" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="70" pos:column="7"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="72" pos:column="5">ssnprintf<pos:position pos:line="72" pos:column="14"/></name> <argument_list pos:line="72" pos:column="15">(<argument><expr><name pos:line="72" pos:column="16">plugin_instance<pos:position pos:line="72" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="33">sizeof <argument_list pos:line="72" pos:column="40">(<argument><expr><name pos:line="72" pos:column="41">plugin_instance<pos:position pos:line="72" pos:column="56"/></name></expr></argument>)<pos:position pos:line="72" pos:column="57"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="59">"%s-zone-%s"<pos:position pos:line="72" pos:column="71"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="73" pos:column="9">view<pos:position pos:line="73" pos:column="13"/></name><operator pos:line="73" pos:column="13">-&gt;<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="15">name<pos:position pos:line="73" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="21">zone_name<pos:position pos:line="73" pos:column="30"/></name></expr></argument>)<pos:position pos:line="73" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>

    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><name pos:line="75" pos:column="9">version<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">==<pos:position pos:line="75" pos:column="19"/></operator> <literal type="number" pos:line="75" pos:column="20">3<pos:position pos:line="75" pos:column="21"/></literal></expr>)<pos:position pos:line="75" pos:column="22"/></condition><then pos:line="75" pos:column="22">
    <block pos:line="76" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="77" pos:column="7">list_info_ptr_t<pos:position pos:line="77" pos:column="22"/></name></type> <name pos:line="77" pos:column="23">list_info<pos:position pos:line="77" pos:column="32"/></name> <init pos:line="77" pos:column="33">=
      <expr><block pos:line="78" pos:column="7">{
        <expr><name pos:line="79" pos:column="9">plugin_instance<pos:position pos:line="79" pos:column="24"/></name></expr>,
        <comment type="block" pos:line="80" pos:column="9">/* type = */</comment> <expr><literal type="string" pos:line="80" pos:column="22">"dns_qtype"<pos:position pos:line="80" pos:column="33"/></literal></expr>
      }<pos:position pos:line="81" pos:column="8"/></block></expr></init></decl>;<pos:position pos:line="81" pos:column="9"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="82" pos:column="7">bind_parse_generic_name_attr_value_list<pos:position pos:line="82" pos:column="46"/></name> <argument_list pos:line="82" pos:column="47">(<comment type="block" pos:line="82" pos:column="48">/* xpath = */</comment> <argument><expr><literal type="string" pos:line="82" pos:column="62">"counters[@type='rcode']"<pos:position pos:line="82" pos:column="87"/></literal></expr></argument>,
        <comment type="block" pos:line="83" pos:column="9">/* callback = */</comment> <argument><expr><name pos:line="83" pos:column="26">bind_xml_table_callback<pos:position pos:line="83" pos:column="49"/></name></expr></argument>,
        <comment type="block" pos:line="84" pos:column="9">/* user_data = */</comment> <argument><expr><operator pos:line="84" pos:column="27">&amp;<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="28">table_ptr<pos:position pos:line="84" pos:column="37"/></name></expr></argument>,
        <argument><expr><name pos:line="85" pos:column="9">doc<pos:position pos:line="85" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="14">path_ctx<pos:position pos:line="85" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="24">current_time<pos:position pos:line="85" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="38">DS_TYPE_COUNTER<pos:position pos:line="85" pos:column="53"/></name></expr></argument>)<pos:position pos:line="85" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="86" pos:column="7">bind_parse_generic_name_attr_value_list<pos:position pos:line="86" pos:column="46"/></name> <argument_list pos:line="86" pos:column="47">(<comment type="block" pos:line="86" pos:column="48">/* xpath = */</comment> <argument><expr><literal type="string" pos:line="86" pos:column="62">"counters[@type='qtype']"<pos:position pos:line="86" pos:column="87"/></literal></expr></argument>,
        <comment type="block" pos:line="87" pos:column="9">/* callback = */</comment> <argument><expr><name pos:line="87" pos:column="26">bind_xml_list_callback<pos:position pos:line="87" pos:column="48"/></name></expr></argument>,
        <comment type="block" pos:line="88" pos:column="9">/* user_data = */</comment> <argument><expr><operator pos:line="88" pos:column="27">&amp;<pos:position pos:line="88" pos:column="32"/></operator><name pos:line="88" pos:column="28">list_info<pos:position pos:line="88" pos:column="37"/></name></expr></argument>,
        <argument><expr><name pos:line="89" pos:column="9">doc<pos:position pos:line="89" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="14">path_ctx<pos:position pos:line="89" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="24">current_time<pos:position pos:line="89" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="38">DS_TYPE_COUNTER<pos:position pos:line="89" pos:column="53"/></name></expr></argument>)<pos:position pos:line="89" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then>
    <else pos:line="91" pos:column="5">else
    <block pos:line="92" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="93" pos:column="7">bind_parse_generic_value_list<pos:position pos:line="93" pos:column="36"/></name> <argument_list pos:line="93" pos:column="37">(<comment type="block" pos:line="93" pos:column="38">/* xpath = */</comment> <argument><expr><literal type="string" pos:line="93" pos:column="52">"counters"<pos:position pos:line="93" pos:column="62"/></literal></expr></argument>,
          <comment type="block" pos:line="94" pos:column="11">/* callback = */</comment> <argument><expr><name pos:line="94" pos:column="28">bind_xml_table_callback<pos:position pos:line="94" pos:column="51"/></name></expr></argument>,
          <comment type="block" pos:line="95" pos:column="11">/* user_data = */</comment> <argument><expr><operator pos:line="95" pos:column="29">&amp;<pos:position pos:line="95" pos:column="34"/></operator><name pos:line="95" pos:column="30">table_ptr<pos:position pos:line="95" pos:column="39"/></name></expr></argument>,
          <argument><expr><name pos:line="96" pos:column="11">doc<pos:position pos:line="96" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="16">path_ctx<pos:position pos:line="96" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="26">current_time<pos:position pos:line="96" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="40">DS_TYPE_COUNTER<pos:position pos:line="96" pos:column="55"/></name></expr></argument>)<pos:position pos:line="96" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="97" pos:column="6"/></block></else></if>
  }<pos:position pos:line="98" pos:column="4"/></block> <comment type="block" pos:line="98" pos:column="5">/* }}} */</comment>

  <return pos:line="100" pos:column="3">return <expr><operator pos:line="100" pos:column="10">(<pos:position pos:line="100" pos:column="11"/></operator><literal type="number" pos:line="100" pos:column="11">0<pos:position pos:line="100" pos:column="12"/></literal><operator pos:line="100" pos:column="12">)<pos:position pos:line="100" pos:column="13"/></operator></expr>;<pos:position pos:line="100" pos:column="14"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

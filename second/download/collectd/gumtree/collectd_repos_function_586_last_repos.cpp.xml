<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_586_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dpdk_events_read<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">user_data_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">ud<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <block pos:line="1" pos:column="46">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">DPDK_EVENTS_TRACE<pos:position pos:line="2" pos:column="20"/></name><argument_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="23"/></expr_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">g_hc<pos:position pos:line="4" pos:column="11"/></name> <operator pos:line="4" pos:column="12">==<pos:position pos:line="4" pos:column="14"/></operator> <name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <block pos:line="4" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">ERROR<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><name pos:line="5" pos:column="11">DPDK_EVENTS_PLUGIN<pos:position pos:line="5" pos:column="29"/></name> <literal type="string" pos:line="5" pos:column="30">": plugin not initialized."<pos:position pos:line="5" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="59"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></return>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">dpdk_events_ctx_t<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">ec<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><call><name pos:line="9" pos:column="27">DPDK_EVENTS_CTX_GET<pos:position pos:line="9" pos:column="46"/></name><argument_list pos:line="9" pos:column="46">(<argument><expr><name pos:line="9" pos:column="47">g_hc<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">ls_ret<pos:position pos:line="10" pos:column="13"/></name> <init pos:line="10" pos:column="14">= <expr><operator pos:line="10" pos:column="16">-<pos:position pos:line="10" pos:column="17"/></operator><literal type="number" pos:line="10" pos:column="17">1<pos:position pos:line="10" pos:column="18"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="20">ka_ret<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><operator pos:line="10" pos:column="29">-<pos:position pos:line="10" pos:column="30"/></operator><literal type="number" pos:line="10" pos:column="30">1<pos:position pos:line="10" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">cmd_res<pos:position pos:line="12" pos:column="14"/></name> <init pos:line="12" pos:column="15">= <expr><literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name><name pos:line="13" pos:column="7">ec<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">config<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">link_status<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">.<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">enabled<pos:position pos:line="13" pos:column="37"/></name></name></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38"> <block pos:line="13" pos:column="39">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">ls_ret<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">dpdk_helper_command<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">g_hc<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">DPDK_CMD_GET_EVENTS<pos:position pos:line="14" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="61">&amp;<pos:position pos:line="14" pos:column="66"/></operator><name pos:line="14" pos:column="62">cmd_res<pos:position pos:line="14" pos:column="69"/></name></expr></argument>,
                                 <argument><expr><name><name pos:line="15" pos:column="34">ec<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">config<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">.<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="45">interval<pos:position pos:line="15" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">cmd_res<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">==<pos:position pos:line="16" pos:column="19"/></operator> <literal type="number" pos:line="16" pos:column="20">0<pos:position pos:line="16" pos:column="21"/></literal> <operator pos:line="16" pos:column="22">&amp;&amp;<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="25">ls_ret<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">==<pos:position pos:line="16" pos:column="34"/></operator> <literal type="number" pos:line="16" pos:column="35">0<pos:position pos:line="16" pos:column="36"/></literal></expr>)<pos:position pos:line="16" pos:column="37"/></condition><then pos:line="16" pos:column="37"> <block pos:line="16" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">dpdk_events_link_status_dispatch<pos:position pos:line="17" pos:column="39"/></name><argument_list pos:line="17" pos:column="39">(<argument><expr><name pos:line="17" pos:column="40">g_hc<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name><name pos:line="21" pos:column="7">ec<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">-&gt;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="11">config<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">.<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">keep_alive<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">.<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="29">enabled<pos:position pos:line="21" pos:column="36"/></name></name></expr>)<pos:position pos:line="21" pos:column="37"/></condition><then pos:line="21" pos:column="37"> <block pos:line="21" pos:column="38">{
    <expr_stmt><expr><name pos:line="22" pos:column="5">ka_ret<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">dpdk_event_keep_alive_shm_open<pos:position pos:line="22" pos:column="44"/></name><argument_list pos:line="22" pos:column="44">()<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">ka_ret<pos:position pos:line="23" pos:column="15"/></name></expr>)<pos:position pos:line="23" pos:column="16"/></condition><then pos:line="23" pos:column="16"> <block pos:line="23" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">ERROR<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">DPDK_EVENTS_PLUGIN<pos:position pos:line="24" pos:column="31"/></name>
            <literal type="string" pos:line="25" pos:column="13">": %s : error %d in dpdk_event_keep_alive_shm_open()"<pos:position pos:line="25" pos:column="66"/></literal></expr></argument>,
            <argument><expr><name pos:line="26" pos:column="13">__FUNCTION__<pos:position pos:line="26" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="27">ka_ret<pos:position pos:line="26" pos:column="33"/></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then> <else pos:line="27" pos:column="7">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="7">dpdk_events_keep_alive_dispatch<pos:position pos:line="28" pos:column="38"/></name><argument_list pos:line="28" pos:column="38">(<argument><expr><name pos:line="28" pos:column="39">g_hc<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt></block></else></if>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><operator pos:line="31" pos:column="7">!<pos:position pos:line="31" pos:column="8"/></operator><operator pos:line="31" pos:column="8">(<pos:position pos:line="31" pos:column="9"/></operator><operator pos:line="31" pos:column="9">(<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">cmd_res<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">||<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="21">ls_ret<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">)<pos:position pos:line="31" pos:column="28"/></operator> <operator pos:line="31" pos:column="29">==<pos:position pos:line="31" pos:column="31"/></operator> <literal type="number" pos:line="31" pos:column="32">0<pos:position pos:line="31" pos:column="33"/></literal> <operator pos:line="31" pos:column="34">||<pos:position pos:line="31" pos:column="36"/></operator> <name pos:line="31" pos:column="37">ka_ret<pos:position pos:line="31" pos:column="43"/></name> <operator pos:line="31" pos:column="44">==<pos:position pos:line="31" pos:column="46"/></operator> <literal type="number" pos:line="31" pos:column="47">0<pos:position pos:line="31" pos:column="48"/></literal><operator pos:line="31" pos:column="48">)<pos:position pos:line="31" pos:column="49"/></operator></expr>)<pos:position pos:line="31" pos:column="50"/></condition><then pos:line="31" pos:column="50"> <block pos:line="31" pos:column="51">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">ERROR<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><name pos:line="32" pos:column="11">DPDK_EVENTS_PLUGIN<pos:position pos:line="32" pos:column="29"/></name> <literal type="string" pos:line="32" pos:column="30">": Read failure for all enabled event types"<pos:position pos:line="32" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="76"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><operator pos:line="33" pos:column="12">-<pos:position pos:line="33" pos:column="13"/></operator><literal type="number" pos:line="33" pos:column="13">1<pos:position pos:line="33" pos:column="14"/></literal></expr>;<pos:position pos:line="33" pos:column="15"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <return pos:line="36" pos:column="3">return <expr><literal type="number" pos:line="36" pos:column="10">0<pos:position pos:line="36" pos:column="11"/></literal></expr>;<pos:position pos:line="36" pos:column="12"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

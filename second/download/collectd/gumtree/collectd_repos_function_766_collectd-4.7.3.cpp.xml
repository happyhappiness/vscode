<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_766_collectd-4.7.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tss2_vserver_gapl<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">FILE<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">read_fh<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">FILE<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">write_fh<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">gauge_t<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">ret_value<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<comment type="block" pos:line="4" pos:column="9">/*
	 * Reads the vserver's average packet loss and submits it to collectd.
	 * Be sure to run the tss2_read_vserver function before calling this so
	 * the vserver is selected correctly.
	 */</comment>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">gauge_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">packet_loss<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><name pos:line="9" pos:column="31">NAN<pos:position pos:line="9" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">status<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">status<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">tss2_send_request<pos:position pos:line="12" pos:column="35"/></name> <argument_list pos:line="12" pos:column="36">(<argument><expr><name pos:line="12" pos:column="37">write_fh<pos:position pos:line="12" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="47">"gapl\r\n"<pos:position pos:line="12" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">status<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">!=<pos:position pos:line="13" pos:column="22"/></operator> <literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25">
	<block pos:line="14" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">ERROR<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><literal type="string" pos:line="15" pos:column="23">"teamspeak2 plugin: tss2_send_request (gapl) failed."<pos:position pos:line="15" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="78"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><operator pos:line="16" pos:column="25">-<pos:position pos:line="16" pos:column="26"/></operator><literal type="number" pos:line="16" pos:column="26">1<pos:position pos:line="16" pos:column="27"/></literal><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator></expr>;<pos:position pos:line="16" pos:column="29"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><literal type="number" pos:line="19" pos:column="16">42<pos:position pos:line="19" pos:column="18"/></literal></expr>)<pos:position pos:line="19" pos:column="19"/></condition>
	<block pos:line="20" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">char<pos:position pos:line="21" pos:column="21"/></name></type> <name><name pos:line="21" pos:column="22">buffer<pos:position pos:line="21" pos:column="28"/></name><index pos:line="21" pos:column="28">[<expr><literal type="number" pos:line="21" pos:column="29">4096<pos:position pos:line="21" pos:column="33"/></literal></expr>]<pos:position pos:line="21" pos:column="34"/></index></name></decl>;<pos:position pos:line="21" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">char<pos:position pos:line="22" pos:column="21"/></name> <modifier pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></modifier></type><name pos:line="22" pos:column="23">value<pos:position pos:line="22" pos:column="28"/></name></decl>;<pos:position pos:line="22" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">char<pos:position pos:line="23" pos:column="21"/></name> <modifier pos:line="23" pos:column="22">*<pos:position pos:line="23" pos:column="23"/></modifier></type><name pos:line="23" pos:column="23">endptr<pos:position pos:line="23" pos:column="29"/></name> <init pos:line="23" pos:column="30">= <expr><name pos:line="23" pos:column="32">NULL<pos:position pos:line="23" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="37"/></decl_stmt>
		
		<expr_stmt><expr><name pos:line="25" pos:column="17">status<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <call><name pos:line="25" pos:column="26">tss2_receive_line<pos:position pos:line="25" pos:column="43"/></name> <argument_list pos:line="25" pos:column="44">(<argument><expr><name pos:line="25" pos:column="45">read_fh<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">buffer<pos:position pos:line="25" pos:column="60"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="62">sizeof <argument_list pos:line="25" pos:column="69">(<argument><expr><name pos:line="25" pos:column="70">buffer<pos:position pos:line="25" pos:column="76"/></name></expr></argument>)<pos:position pos:line="25" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="79"/></expr_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">status<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">!=<pos:position pos:line="26" pos:column="30"/></operator> <literal type="number" pos:line="26" pos:column="31">0<pos:position pos:line="26" pos:column="32"/></literal></expr>)<pos:position pos:line="26" pos:column="33"/></condition><then pos:line="26" pos:column="33">
		<block pos:line="27" pos:column="17">{
			<comment type="block" pos:line="28" pos:column="25">/* Set to NULL just to make sure noone uses these FHs anymore. */</comment>
			<expr_stmt><expr><name pos:line="29" pos:column="25">read_fh<pos:position pos:line="29" pos:column="32"/></name> <operator pos:line="29" pos:column="33">=<pos:position pos:line="29" pos:column="34"/></operator> <name pos:line="29" pos:column="35">NULL<pos:position pos:line="29" pos:column="39"/></name></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="30" pos:column="25">write_fh<pos:position pos:line="30" pos:column="33"/></name> <operator pos:line="30" pos:column="34">=<pos:position pos:line="30" pos:column="35"/></operator> <name pos:line="30" pos:column="36">NULL<pos:position pos:line="30" pos:column="40"/></name></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">ERROR<pos:position pos:line="31" pos:column="30"/></name> <argument_list pos:line="31" pos:column="31">(<argument><expr><literal type="string" pos:line="31" pos:column="32">"teamspeak2 plugin: tss2_receive_line failed."<pos:position pos:line="31" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="80"/></expr_stmt>
			<return pos:line="32" pos:column="25">return <expr><operator pos:line="32" pos:column="32">(<pos:position pos:line="32" pos:column="33"/></operator><operator pos:line="32" pos:column="33">-<pos:position pos:line="32" pos:column="34"/></operator><literal type="number" pos:line="32" pos:column="34">1<pos:position pos:line="32" pos:column="35"/></literal><operator pos:line="32" pos:column="35">)<pos:position pos:line="32" pos:column="36"/></operator></expr>;<pos:position pos:line="32" pos:column="37"/></return>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">buffer<pos:position pos:line="34" pos:column="23"/></name><index pos:line="34" pos:column="23">[<expr><sizeof pos:line="34" pos:column="24">sizeof <argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">buffer<pos:position pos:line="34" pos:column="38"/></name></expr></argument>)<pos:position pos:line="34" pos:column="39"/></argument_list></sizeof> <operator pos:line="34" pos:column="40">-<pos:position pos:line="34" pos:column="41"/></operator> <literal type="number" pos:line="34" pos:column="42">1<pos:position pos:line="34" pos:column="43"/></literal></expr>]<pos:position pos:line="34" pos:column="44"/></index></name> <operator pos:line="34" pos:column="45">=<pos:position pos:line="34" pos:column="46"/></operator> <literal type="number" pos:line="34" pos:column="47">0<pos:position pos:line="34" pos:column="48"/></literal></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt>
		
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">strncmp<pos:position pos:line="36" pos:column="28"/></name> <argument_list pos:line="36" pos:column="29">(<argument><expr><literal type="string" pos:line="36" pos:column="30">"average_packet_loss="<pos:position pos:line="36" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="54">buffer<pos:position pos:line="36" pos:column="60"/></name></expr></argument>,
					<argument><expr><call><name pos:line="37" pos:column="41">strlen<pos:position pos:line="37" pos:column="47"/></name> <argument_list pos:line="37" pos:column="48">(<argument><expr><literal type="string" pos:line="37" pos:column="49">"average_packet_loss="<pos:position pos:line="37" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="73"/></argument_list></call> <operator pos:line="37" pos:column="74">==<pos:position pos:line="37" pos:column="76"/></operator> <literal type="number" pos:line="37" pos:column="77">0<pos:position pos:line="37" pos:column="78"/></literal></expr>)<pos:position pos:line="37" pos:column="79"/></condition><then pos:line="37" pos:column="79">
		<block pos:line="38" pos:column="17">{
			<comment type="block" pos:line="39" pos:column="25">/* Got average packet loss, now interpret it */</comment>
			<expr_stmt><expr><name pos:line="40" pos:column="25">value<pos:position pos:line="40" pos:column="30"/></name> <operator pos:line="40" pos:column="31">=<pos:position pos:line="40" pos:column="32"/></operator> <operator pos:line="40" pos:column="33">&amp;<pos:position pos:line="40" pos:column="38"/></operator><name><name pos:line="40" pos:column="34">buffer<pos:position pos:line="40" pos:column="40"/></name><index pos:line="40" pos:column="40">[<expr><literal type="number" pos:line="40" pos:column="41">20<pos:position pos:line="40" pos:column="43"/></literal></expr>]<pos:position pos:line="40" pos:column="44"/></index></name></expr>;<pos:position pos:line="40" pos:column="45"/></expr_stmt>
			<comment type="block" pos:line="41" pos:column="25">/* Replace , with . */</comment>
			<while pos:line="42" pos:column="25">while <condition pos:line="42" pos:column="31">(<expr><operator pos:line="42" pos:column="32">*<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="33">value<pos:position pos:line="42" pos:column="38"/></name> <operator pos:line="42" pos:column="39">!=<pos:position pos:line="42" pos:column="41"/></operator> <literal type="number" pos:line="42" pos:column="42">0<pos:position pos:line="42" pos:column="43"/></literal></expr>)<pos:position pos:line="42" pos:column="44"/></condition>
			<block pos:line="43" pos:column="25">{
				<if pos:line="44" pos:column="33">if <condition pos:line="44" pos:column="36">(<expr><operator pos:line="44" pos:column="37">*<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="38">value<pos:position pos:line="44" pos:column="43"/></name> <operator pos:line="44" pos:column="44">==<pos:position pos:line="44" pos:column="46"/></operator> <literal type="char" pos:line="44" pos:column="47">','<pos:position pos:line="44" pos:column="50"/></literal></expr>)<pos:position pos:line="44" pos:column="51"/></condition><then pos:line="44" pos:column="51">
				<block pos:line="45" pos:column="33">{
					<expr_stmt><expr><operator pos:line="46" pos:column="41">*<pos:position pos:line="46" pos:column="42"/></operator><name pos:line="46" pos:column="42">value<pos:position pos:line="46" pos:column="47"/></name> <operator pos:line="46" pos:column="48">=<pos:position pos:line="46" pos:column="49"/></operator> <literal type="char" pos:line="46" pos:column="50">'.'<pos:position pos:line="46" pos:column="53"/></literal></expr>;<pos:position pos:line="46" pos:column="54"/></expr_stmt>
					<break pos:line="47" pos:column="41">break;<pos:position pos:line="47" pos:column="47"/></break>
				}<pos:position pos:line="48" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name pos:line="49" pos:column="33">value<pos:position pos:line="49" pos:column="38"/></name><operator pos:line="49" pos:column="38">++<pos:position pos:line="49" pos:column="40"/></operator></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
			}<pos:position pos:line="50" pos:column="26"/></block></while>
			
			<expr_stmt><expr><name pos:line="52" pos:column="25">value<pos:position pos:line="52" pos:column="30"/></name> <operator pos:line="52" pos:column="31">=<pos:position pos:line="52" pos:column="32"/></operator> <operator pos:line="52" pos:column="33">&amp;<pos:position pos:line="52" pos:column="38"/></operator><name><name pos:line="52" pos:column="34">buffer<pos:position pos:line="52" pos:column="40"/></name><index pos:line="52" pos:column="40">[<expr><literal type="number" pos:line="52" pos:column="41">20<pos:position pos:line="52" pos:column="43"/></literal></expr>]<pos:position pos:line="52" pos:column="44"/></index></name></expr>;<pos:position pos:line="52" pos:column="45"/></expr_stmt>
			
			<expr_stmt><expr><name pos:line="54" pos:column="25">packet_loss<pos:position pos:line="54" pos:column="36"/></name> <operator pos:line="54" pos:column="37">=<pos:position pos:line="54" pos:column="38"/></operator> <call><name pos:line="54" pos:column="39">strtod<pos:position pos:line="54" pos:column="45"/></name> <argument_list pos:line="54" pos:column="46">(<argument><expr><name pos:line="54" pos:column="47">value<pos:position pos:line="54" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="54">&amp;<pos:position pos:line="54" pos:column="59"/></operator><name pos:line="54" pos:column="55">endptr<pos:position pos:line="54" pos:column="61"/></name></expr></argument>)<pos:position pos:line="54" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="63"/></expr_stmt>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><name pos:line="55" pos:column="29">value<pos:position pos:line="55" pos:column="34"/></name> <operator pos:line="55" pos:column="35">==<pos:position pos:line="55" pos:column="37"/></operator> <name pos:line="55" pos:column="38">endptr<pos:position pos:line="55" pos:column="44"/></name></expr>)<pos:position pos:line="55" pos:column="45"/></condition><then pos:line="55" pos:column="45">
			<block pos:line="56" pos:column="25">{
				<comment type="block" pos:line="57" pos:column="33">/* Failed */</comment>
				<expr_stmt><expr><call><name pos:line="58" pos:column="33">WARNING<pos:position pos:line="58" pos:column="40"/></name> <argument_list pos:line="58" pos:column="41">(<argument><expr><literal type="string" pos:line="58" pos:column="42">"teamspeak2 plugin: Could not read average package "<pos:position pos:line="58" pos:column="94"/></literal>
						<literal type="string" pos:line="59" pos:column="49">"loss from string: %s"<pos:position pos:line="59" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="73">buffer<pos:position pos:line="59" pos:column="79"/></name></expr></argument>)<pos:position pos:line="59" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="81"/></expr_stmt>
				<continue pos:line="60" pos:column="33">continue;<pos:position pos:line="60" pos:column="42"/></continue>
			}<pos:position pos:line="61" pos:column="26"/></block></then></if>
		}<pos:position pos:line="62" pos:column="18"/></block></then>
		<elseif pos:line="63" pos:column="17">else <if pos:line="63" pos:column="22">if <condition pos:line="63" pos:column="25">(<expr><call><name pos:line="63" pos:column="26">strncasecmp<pos:position pos:line="63" pos:column="37"/></name> <argument_list pos:line="63" pos:column="38">(<argument><expr><literal type="string" pos:line="63" pos:column="39">"OK"<pos:position pos:line="63" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="45">buffer<pos:position pos:line="63" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="53">2<pos:position pos:line="63" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="55"/></argument_list></call> <operator pos:line="63" pos:column="56">==<pos:position pos:line="63" pos:column="58"/></operator> <literal type="number" pos:line="63" pos:column="59">0<pos:position pos:line="63" pos:column="60"/></literal></expr>)<pos:position pos:line="63" pos:column="61"/></condition><then pos:line="63" pos:column="61">
		<block pos:line="64" pos:column="17">{
			<break pos:line="65" pos:column="25">break;<pos:position pos:line="65" pos:column="31"/></break>
		}<pos:position pos:line="66" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="67" pos:column="17">else <if pos:line="67" pos:column="22">if <condition pos:line="67" pos:column="25">(<expr><call><name pos:line="67" pos:column="26">strncasecmp<pos:position pos:line="67" pos:column="37"/></name> <argument_list pos:line="67" pos:column="38">(<argument><expr><literal type="string" pos:line="67" pos:column="39">"ERROR"<pos:position pos:line="67" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="48">buffer<pos:position pos:line="67" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="56">5<pos:position pos:line="67" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="58"/></argument_list></call> <operator pos:line="67" pos:column="59">==<pos:position pos:line="67" pos:column="61"/></operator> <literal type="number" pos:line="67" pos:column="62">0<pos:position pos:line="67" pos:column="63"/></literal></expr>)<pos:position pos:line="67" pos:column="64"/></condition><then pos:line="67" pos:column="64">
		<block pos:line="68" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="69" pos:column="25">ERROR<pos:position pos:line="69" pos:column="30"/></name> <argument_list pos:line="69" pos:column="31">(<argument><expr><literal type="string" pos:line="69" pos:column="32">"teamspeak2 plugin: Server returned an error: %s"<pos:position pos:line="69" pos:column="81"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="83">buffer<pos:position pos:line="69" pos:column="89"/></name></expr></argument>)<pos:position pos:line="69" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="91"/></expr_stmt>
			<return pos:line="70" pos:column="25">return <expr><operator pos:line="70" pos:column="32">(<pos:position pos:line="70" pos:column="33"/></operator><operator pos:line="70" pos:column="33">-<pos:position pos:line="70" pos:column="34"/></operator><literal type="number" pos:line="70" pos:column="34">1<pos:position pos:line="70" pos:column="35"/></literal><operator pos:line="70" pos:column="35">)<pos:position pos:line="70" pos:column="36"/></operator></expr>;<pos:position pos:line="70" pos:column="37"/></return>
		}<pos:position pos:line="71" pos:column="18"/></block></then></if></elseif>
		<else pos:line="72" pos:column="17">else
		<block pos:line="73" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="74" pos:column="25">WARNING<pos:position pos:line="74" pos:column="32"/></name> <argument_list pos:line="74" pos:column="33">(<argument><expr><literal type="string" pos:line="74" pos:column="34">"teamspeak2 plugin: Server returned unexpected string: %s"<pos:position pos:line="74" pos:column="92"/></literal></expr></argument>,
					<argument><expr><name pos:line="75" pos:column="41">buffer<pos:position pos:line="75" pos:column="47"/></name></expr></argument>)<pos:position pos:line="75" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="76" pos:column="18"/></block></else></if>
	}<pos:position pos:line="77" pos:column="10"/></block></while>
	
	<expr_stmt><expr><operator pos:line="79" pos:column="9">*<pos:position pos:line="79" pos:column="10"/></operator><name pos:line="79" pos:column="10">ret_value<pos:position pos:line="79" pos:column="19"/></name> <operator pos:line="79" pos:column="20">=<pos:position pos:line="79" pos:column="21"/></operator> <name pos:line="79" pos:column="22">packet_loss<pos:position pos:line="79" pos:column="33"/></name></expr>;<pos:position pos:line="79" pos:column="34"/></expr_stmt>
	<return pos:line="80" pos:column="9">return <expr><operator pos:line="80" pos:column="16">(<pos:position pos:line="80" pos:column="17"/></operator><literal type="number" pos:line="80" pos:column="17">0<pos:position pos:line="80" pos:column="18"/></literal><operator pos:line="80" pos:column="18">)<pos:position pos:line="80" pos:column="19"/></operator></expr>;<pos:position pos:line="80" pos:column="20"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

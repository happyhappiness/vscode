<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1230_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">double<pos:position pos:line="1" pos:column="14"/></name></type>
<name pos:line="2" pos:column="1">ntohf<pos:position pos:line="2" pos:column="6"/></name><parameter_list pos:line="2" pos:column="6">(<parameter><decl><type><name pos:line="2" pos:column="7">tFloat<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">p_float<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* Convert tFloat in Network-bit-order to double in host-bit-order */</comment>

<cpp:define pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">define<pos:position pos:line="6" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="6" pos:column="9">FLOAT_EXP_BITS<pos:position pos:line="6" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="6" pos:column="24">7<pos:position pos:line="6" pos:column="25"/></cpp:value></cpp:define>
<cpp:define pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">define<pos:position pos:line="7" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="7" pos:column="9">FLOAT_EXP_MIN<pos:position pos:line="7" pos:column="22"/></name></cpp:macro> <cpp:value pos:line="7" pos:column="23">(-(1 &lt;&lt; (FLOAT_EXP_BITS - 1)))<pos:position pos:line="7" pos:column="53"/></cpp:value></cpp:define>
<cpp:define pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">define<pos:position pos:line="8" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="8" pos:column="9">FLOAT_EXP_MAX<pos:position pos:line="8" pos:column="22"/></name></cpp:macro> <cpp:value pos:line="8" pos:column="23">(-FLOAT_EXP_MIN - 1)<pos:position pos:line="8" pos:column="43"/></cpp:value></cpp:define>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define<pos:position pos:line="9" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">FLOAT_COEF_BITS<pos:position pos:line="9" pos:column="24"/></name></cpp:macro> <cpp:value pos:line="9" pos:column="25">((int)sizeof (int32_t) * 8 - FLOAT_EXP_BITS)<pos:position pos:line="9" pos:column="69"/></cpp:value></cpp:define>
<cpp:define pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">define<pos:position pos:line="10" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="10" pos:column="9">FLOAT_COEF_MIN<pos:position pos:line="10" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="10" pos:column="24">(-(1 &lt;&lt; (FLOAT_COEF_BITS - 1)))<pos:position pos:line="10" pos:column="55"/></cpp:value></cpp:define>
<cpp:define pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">define<pos:position pos:line="11" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="11" pos:column="9">FLOAT_COEF_MAX<pos:position pos:line="11" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="11" pos:column="24">(-FLOAT_COEF_MIN - 1)<pos:position pos:line="11" pos:column="45"/></cpp:value></cpp:define>

  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int32_t<pos:position pos:line="13" pos:column="10"/></name></type> <name pos:line="13" pos:column="11">exp<pos:position pos:line="13" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="16">coef<pos:position pos:line="13" pos:column="20"/></name></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">uint32_t<pos:position pos:line="14" pos:column="11"/></name></type> <name pos:line="14" pos:column="12">uval<pos:position pos:line="14" pos:column="16"/></name></decl>;<pos:position pos:line="14" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">uval<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <call><name pos:line="16" pos:column="10">ntohl<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name><name pos:line="16" pos:column="16">p_float<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">.<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">value<pos:position pos:line="16" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">exp<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">uval<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">&gt;&gt;<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="18">FLOAT_COEF_BITS<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">)<pos:position pos:line="17" pos:column="34"/></operator> <operator pos:line="17" pos:column="35">-<pos:position pos:line="17" pos:column="36"/></operator> <name pos:line="17" pos:column="37">FLOAT_COEF_BITS<pos:position pos:line="17" pos:column="52"/></name></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">exp<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">&gt;=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal> <operator pos:line="18" pos:column="16">&lt;&lt;<pos:position pos:line="18" pos:column="24"/></operator> <operator pos:line="18" pos:column="19">(<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">FLOAT_EXP_BITS<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">-<pos:position pos:line="18" pos:column="36"/></operator> <literal type="number" pos:line="18" pos:column="37">1<pos:position pos:line="18" pos:column="38"/></literal><operator pos:line="18" pos:column="38">)<pos:position pos:line="18" pos:column="39"/></operator></expr>)<pos:position pos:line="18" pos:column="40"/></condition><then pos:line="18" pos:column="40">
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">exp<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">-=<pos:position pos:line="19" pos:column="11"/></operator> <literal type="number" pos:line="19" pos:column="12">1<pos:position pos:line="19" pos:column="13"/></literal> <operator pos:line="19" pos:column="14">&lt;&lt;<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="17">FLOAT_EXP_BITS<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="21" pos:column="3">/* coef = (x &lt;&lt; FLOAT_EXP_BITS) &gt;&gt; FLOAT_EXP_BITS; */</comment>
  <expr_stmt><expr><name pos:line="22" pos:column="3">coef<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <name pos:line="22" pos:column="10">uval<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">%<pos:position pos:line="22" pos:column="16"/></operator> <operator pos:line="22" pos:column="17">(<pos:position pos:line="22" pos:column="18"/></operator><literal type="number" pos:line="22" pos:column="18">1U<pos:position pos:line="22" pos:column="20"/></literal> <operator pos:line="22" pos:column="21">&lt;&lt;<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="24">FLOAT_COEF_BITS<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">)<pos:position pos:line="22" pos:column="40"/></operator></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">coef<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">&gt;=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="15">1<pos:position pos:line="23" pos:column="16"/></literal> <operator pos:line="23" pos:column="17">&lt;&lt;<pos:position pos:line="23" pos:column="25"/></operator> <operator pos:line="23" pos:column="20">(<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">FLOAT_COEF_BITS<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">-<pos:position pos:line="23" pos:column="38"/></operator> <literal type="number" pos:line="23" pos:column="39">1<pos:position pos:line="23" pos:column="40"/></literal><operator pos:line="23" pos:column="40">)<pos:position pos:line="23" pos:column="41"/></operator></expr>)<pos:position pos:line="23" pos:column="42"/></condition><then pos:line="23" pos:column="42">
    <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="5">coef<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">-=<pos:position pos:line="24" pos:column="12"/></operator> <literal type="number" pos:line="24" pos:column="13">1<pos:position pos:line="24" pos:column="14"/></literal> <operator pos:line="24" pos:column="15">&lt;&lt;<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="18">FLOAT_COEF_BITS<pos:position pos:line="24" pos:column="33"/></name></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt></block></then></if>

  <return pos:line="26" pos:column="3">return <expr><name pos:line="26" pos:column="10">coef<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">*<pos:position pos:line="26" pos:column="16"/></operator> <call><name pos:line="26" pos:column="17">pow<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><literal type="number" pos:line="26" pos:column="21">2.0<pos:position pos:line="26" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="26">exp<pos:position pos:line="26" pos:column="29"/></name></expr></argument>)<pos:position pos:line="26" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="31"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

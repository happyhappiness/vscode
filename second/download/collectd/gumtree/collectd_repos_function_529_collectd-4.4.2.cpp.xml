<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_529_collectd-4.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">swap_read<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">KERNEL_LINUX<pos:position pos:line="3" pos:column="17"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">FILE<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">fh<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">buffer<pos:position pos:line="5" pos:column="20"/></name><index pos:line="5" pos:column="20">[<expr><literal type="number" pos:line="5" pos:column="21">1024<pos:position pos:line="5" pos:column="25"/></literal></expr>]<pos:position pos:line="5" pos:column="26"/></index></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name><name pos:line="7" pos:column="15">fields<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><literal type="number" pos:line="7" pos:column="22">8<pos:position pos:line="7" pos:column="23"/></literal></expr>]<pos:position pos:line="7" pos:column="24"/></index></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">numfields<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name> <name pos:line="10" pos:column="18">long<pos:position pos:line="10" pos:column="22"/></name> <name pos:line="10" pos:column="23">long<pos:position pos:line="10" pos:column="27"/></name></type> <name pos:line="10" pos:column="28">swap_used<pos:position pos:line="10" pos:column="37"/></name>   <init pos:line="10" pos:column="40">= <expr><literal type="number" pos:line="10" pos:column="42">0LL<pos:position pos:line="10" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">unsigned<pos:position pos:line="11" pos:column="17"/></name> <name pos:line="11" pos:column="18">long<pos:position pos:line="11" pos:column="22"/></name> <name pos:line="11" pos:column="23">long<pos:position pos:line="11" pos:column="27"/></name></type> <name pos:line="11" pos:column="28">swap_cached<pos:position pos:line="11" pos:column="39"/></name> <init pos:line="11" pos:column="40">= <expr><literal type="number" pos:line="11" pos:column="42">0LL<pos:position pos:line="11" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">unsigned<pos:position pos:line="12" pos:column="17"/></name> <name pos:line="12" pos:column="18">long<pos:position pos:line="12" pos:column="22"/></name> <name pos:line="12" pos:column="23">long<pos:position pos:line="12" pos:column="27"/></name></type> <name pos:line="12" pos:column="28">swap_free<pos:position pos:line="12" pos:column="37"/></name>   <init pos:line="12" pos:column="40">= <expr><literal type="number" pos:line="12" pos:column="42">0LL<pos:position pos:line="12" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">unsigned<pos:position pos:line="13" pos:column="17"/></name> <name pos:line="13" pos:column="18">long<pos:position pos:line="13" pos:column="22"/></name> <name pos:line="13" pos:column="23">long<pos:position pos:line="13" pos:column="27"/></name></type> <name pos:line="13" pos:column="28">swap_total<pos:position pos:line="13" pos:column="38"/></name>  <init pos:line="13" pos:column="40">= <expr><literal type="number" pos:line="13" pos:column="42">0LL<pos:position pos:line="13" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="46"/></decl_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">fh<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <call><name pos:line="15" pos:column="19">fopen<pos:position pos:line="15" pos:column="24"/></name> <argument_list pos:line="15" pos:column="25">(<argument><expr><literal type="string" pos:line="15" pos:column="26">"/proc/meminfo"<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="43">"r"<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call><operator pos:line="15" pos:column="47">)<pos:position pos:line="15" pos:column="48"/></operator> <operator pos:line="15" pos:column="49">==<pos:position pos:line="15" pos:column="51"/></operator> <name pos:line="15" pos:column="52">NULL<pos:position pos:line="15" pos:column="56"/></name></expr>)<pos:position pos:line="15" pos:column="57"/></condition><then pos:line="15" pos:column="57">
	<block pos:line="16" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">char<pos:position pos:line="17" pos:column="21"/></name></type> <name><name pos:line="17" pos:column="22">errbuf<pos:position pos:line="17" pos:column="28"/></name><index pos:line="17" pos:column="28">[<expr><literal type="number" pos:line="17" pos:column="29">1024<pos:position pos:line="17" pos:column="33"/></literal></expr>]<pos:position pos:line="17" pos:column="34"/></index></name></decl>;<pos:position pos:line="17" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">WARNING<pos:position pos:line="18" pos:column="24"/></name> <argument_list pos:line="18" pos:column="25">(<argument><expr><literal type="string" pos:line="18" pos:column="26">"memory: fopen: %s"<pos:position pos:line="18" pos:column="45"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="19" pos:column="33">sstrerror<pos:position pos:line="19" pos:column="42"/></name> <argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">errno<pos:position pos:line="19" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="51">errbuf<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="59">sizeof <argument_list pos:line="19" pos:column="66">(<argument><expr><name pos:line="19" pos:column="67">errbuf<pos:position pos:line="19" pos:column="73"/></name></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="77"/></expr_stmt>
		<return pos:line="20" pos:column="17">return <expr><operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><operator pos:line="20" pos:column="25">-<pos:position pos:line="20" pos:column="26"/></operator><literal type="number" pos:line="20" pos:column="26">1<pos:position pos:line="20" pos:column="27"/></literal><operator pos:line="20" pos:column="27">)<pos:position pos:line="20" pos:column="28"/></operator></expr>;<pos:position pos:line="20" pos:column="29"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<while pos:line="23" pos:column="9">while <condition pos:line="23" pos:column="15">(<expr><call><name pos:line="23" pos:column="16">fgets<pos:position pos:line="23" pos:column="21"/></name> <argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">buffer<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="31">1024<pos:position pos:line="23" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="37">fh<pos:position pos:line="23" pos:column="39"/></name></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call> <operator pos:line="23" pos:column="41">!=<pos:position pos:line="23" pos:column="43"/></operator> <name pos:line="23" pos:column="44">NULL<pos:position pos:line="23" pos:column="48"/></name></expr>)<pos:position pos:line="23" pos:column="49"/></condition>
	<block pos:line="24" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">unsigned<pos:position pos:line="25" pos:column="25"/></name> <name pos:line="25" pos:column="26">long<pos:position pos:line="25" pos:column="30"/></name> <name pos:line="25" pos:column="31">long<pos:position pos:line="25" pos:column="35"/></name> <modifier pos:line="25" pos:column="36">*<pos:position pos:line="25" pos:column="37"/></modifier></type><name pos:line="25" pos:column="37">val<pos:position pos:line="25" pos:column="40"/></name> <init pos:line="25" pos:column="41">= <expr><name pos:line="25" pos:column="43">NULL<pos:position pos:line="25" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="48"/></decl_stmt>

		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><call><name pos:line="27" pos:column="21">strncasecmp<pos:position pos:line="27" pos:column="32"/></name> <argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">buffer<pos:position pos:line="27" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="42">"SwapTotal:"<pos:position pos:line="27" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="56">10<pos:position pos:line="27" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call> <operator pos:line="27" pos:column="60">==<pos:position pos:line="27" pos:column="62"/></operator> <literal type="number" pos:line="27" pos:column="63">0<pos:position pos:line="27" pos:column="64"/></literal></expr>)<pos:position pos:line="27" pos:column="65"/></condition><then pos:line="27" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="25">val<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <operator pos:line="28" pos:column="31">&amp;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="32">swap_total<pos:position pos:line="28" pos:column="42"/></name></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt></block></then>
		<elseif pos:line="29" pos:column="17">else <if pos:line="29" pos:column="22">if <condition pos:line="29" pos:column="25">(<expr><call><name pos:line="29" pos:column="26">strncasecmp<pos:position pos:line="29" pos:column="37"/></name> <argument_list pos:line="29" pos:column="38">(<argument><expr><name pos:line="29" pos:column="39">buffer<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="47">"SwapFree:"<pos:position pos:line="29" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="60">9<pos:position pos:line="29" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call> <operator pos:line="29" pos:column="63">==<pos:position pos:line="29" pos:column="65"/></operator> <literal type="number" pos:line="29" pos:column="66">0<pos:position pos:line="29" pos:column="67"/></literal></expr>)<pos:position pos:line="29" pos:column="68"/></condition><then pos:line="29" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="25">val<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <operator pos:line="30" pos:column="31">&amp;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="32">swap_free<pos:position pos:line="30" pos:column="41"/></name></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="31" pos:column="17">else <if pos:line="31" pos:column="22">if <condition pos:line="31" pos:column="25">(<expr><call><name pos:line="31" pos:column="26">strncasecmp<pos:position pos:line="31" pos:column="37"/></name> <argument_list pos:line="31" pos:column="38">(<argument><expr><name pos:line="31" pos:column="39">buffer<pos:position pos:line="31" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="47">"SwapCached:"<pos:position pos:line="31" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="62">11<pos:position pos:line="31" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call> <operator pos:line="31" pos:column="66">==<pos:position pos:line="31" pos:column="68"/></operator> <literal type="number" pos:line="31" pos:column="69">0<pos:position pos:line="31" pos:column="70"/></literal></expr>)<pos:position pos:line="31" pos:column="71"/></condition><then pos:line="31" pos:column="71">
			<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="25">val<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <operator pos:line="32" pos:column="31">&amp;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="32">swap_cached<pos:position pos:line="32" pos:column="43"/></name></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt></block></then></if></elseif>
		<else pos:line="33" pos:column="17">else
			<block type="pseudo"><continue pos:line="34" pos:column="25">continue;<pos:position pos:line="34" pos:column="34"/></continue></block></else></if>

		<expr_stmt><expr><name pos:line="36" pos:column="17">numfields<pos:position pos:line="36" pos:column="26"/></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <call><name pos:line="36" pos:column="29">strsplit<pos:position pos:line="36" pos:column="37"/></name> <argument_list pos:line="36" pos:column="38">(<argument><expr><name pos:line="36" pos:column="39">buffer<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">fields<pos:position pos:line="36" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="55">8<pos:position pos:line="36" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="58"/></expr_stmt>

		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">numfields<pos:position pos:line="38" pos:column="30"/></name> <operator pos:line="38" pos:column="31">&lt;<pos:position pos:line="38" pos:column="35"/></operator> <literal type="number" pos:line="38" pos:column="33">2<pos:position pos:line="38" pos:column="34"/></literal></expr>)<pos:position pos:line="38" pos:column="35"/></condition><then pos:line="38" pos:column="35">
			<block type="pseudo"><continue pos:line="39" pos:column="25">continue;<pos:position pos:line="39" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><operator pos:line="41" pos:column="17">*<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">val<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <call><name pos:line="41" pos:column="24">atoll<pos:position pos:line="41" pos:column="29"/></name> <argument_list pos:line="41" pos:column="30">(<argument><expr><name><name pos:line="41" pos:column="31">fields<pos:position pos:line="41" pos:column="37"/></name><index pos:line="41" pos:column="37">[<expr><literal type="number" pos:line="41" pos:column="38">1<pos:position pos:line="41" pos:column="39"/></literal></expr>]<pos:position pos:line="41" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call> <operator pos:line="41" pos:column="42">*<pos:position pos:line="41" pos:column="43"/></operator> <literal type="number" pos:line="41" pos:column="44">1024LL<pos:position pos:line="41" pos:column="50"/></literal></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></while>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name pos:line="44" pos:column="13">fclose<pos:position pos:line="44" pos:column="19"/></name> <argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">fh<pos:position pos:line="44" pos:column="23"/></name></expr></argument>)<pos:position pos:line="44" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="25"/></condition><then pos:line="44" pos:column="25">
	<block pos:line="45" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">char<pos:position pos:line="46" pos:column="21"/></name></type> <name><name pos:line="46" pos:column="22">errbuf<pos:position pos:line="46" pos:column="28"/></name><index pos:line="46" pos:column="28">[<expr><literal type="number" pos:line="46" pos:column="29">1024<pos:position pos:line="46" pos:column="33"/></literal></expr>]<pos:position pos:line="46" pos:column="34"/></index></name></decl>;<pos:position pos:line="46" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">WARNING<pos:position pos:line="47" pos:column="24"/></name> <argument_list pos:line="47" pos:column="25">(<argument><expr><literal type="string" pos:line="47" pos:column="26">"memory: fclose: %s"<pos:position pos:line="47" pos:column="46"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="48" pos:column="33">sstrerror<pos:position pos:line="48" pos:column="42"/></name> <argument_list pos:line="48" pos:column="43">(<argument><expr><name pos:line="48" pos:column="44">errno<pos:position pos:line="48" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="51">errbuf<pos:position pos:line="48" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="59">sizeof <argument_list pos:line="48" pos:column="66">(<argument><expr><name pos:line="48" pos:column="67">errbuf<pos:position pos:line="48" pos:column="73"/></name></expr></argument>)<pos:position pos:line="48" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">(<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">swap_total<pos:position pos:line="51" pos:column="24"/></name> <operator pos:line="51" pos:column="25">==<pos:position pos:line="51" pos:column="27"/></operator> <literal type="number" pos:line="51" pos:column="28">0LL<pos:position pos:line="51" pos:column="31"/></literal><operator pos:line="51" pos:column="31">)<pos:position pos:line="51" pos:column="32"/></operator> <operator pos:line="51" pos:column="33">||<pos:position pos:line="51" pos:column="35"/></operator> <operator pos:line="51" pos:column="36">(<pos:position pos:line="51" pos:column="37"/></operator><operator pos:line="51" pos:column="37">(<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="38">swap_free<pos:position pos:line="51" pos:column="47"/></name> <operator pos:line="51" pos:column="48">+<pos:position pos:line="51" pos:column="49"/></operator> <name pos:line="51" pos:column="50">swap_cached<pos:position pos:line="51" pos:column="61"/></name><operator pos:line="51" pos:column="61">)<pos:position pos:line="51" pos:column="62"/></operator> <operator pos:line="51" pos:column="63">&gt;<pos:position pos:line="51" pos:column="67"/></operator> <name pos:line="51" pos:column="65">swap_total<pos:position pos:line="51" pos:column="75"/></name><operator pos:line="51" pos:column="75">)<pos:position pos:line="51" pos:column="76"/></operator></expr>)<pos:position pos:line="51" pos:column="77"/></condition><then pos:line="51" pos:column="77">
		<block type="pseudo"><return pos:line="52" pos:column="17">return <expr><operator pos:line="52" pos:column="24">(<pos:position pos:line="52" pos:column="25"/></operator><operator pos:line="52" pos:column="25">-<pos:position pos:line="52" pos:column="26"/></operator><literal type="number" pos:line="52" pos:column="26">1<pos:position pos:line="52" pos:column="27"/></literal><operator pos:line="52" pos:column="27">)<pos:position pos:line="52" pos:column="28"/></operator></expr>;<pos:position pos:line="52" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="54" pos:column="9">swap_used<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <name pos:line="54" pos:column="21">swap_total<pos:position pos:line="54" pos:column="31"/></name> <operator pos:line="54" pos:column="32">-<pos:position pos:line="54" pos:column="33"/></operator> <operator pos:line="54" pos:column="34">(<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="35">swap_free<pos:position pos:line="54" pos:column="44"/></name> <operator pos:line="54" pos:column="45">+<pos:position pos:line="54" pos:column="46"/></operator> <name pos:line="54" pos:column="47">swap_cached<pos:position pos:line="54" pos:column="58"/></name><operator pos:line="54" pos:column="58">)<pos:position pos:line="54" pos:column="59"/></operator></expr>;<pos:position pos:line="54" pos:column="60"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="56" pos:column="9">swap_submit<pos:position pos:line="56" pos:column="20"/></name> <argument_list pos:line="56" pos:column="21">(<argument><expr><literal type="string" pos:line="56" pos:column="22">"used"<pos:position pos:line="56" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="30">swap_used<pos:position pos:line="56" pos:column="39"/></name></expr></argument>)<pos:position pos:line="56" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="57" pos:column="9">swap_submit<pos:position pos:line="57" pos:column="20"/></name> <argument_list pos:line="57" pos:column="21">(<argument><expr><literal type="string" pos:line="57" pos:column="22">"free"<pos:position pos:line="57" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="30">swap_free<pos:position pos:line="57" pos:column="39"/></name></expr></argument>)<pos:position pos:line="57" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">swap_submit<pos:position pos:line="58" pos:column="20"/></name> <argument_list pos:line="58" pos:column="21">(<argument><expr><literal type="string" pos:line="58" pos:column="22">"cached"<pos:position pos:line="58" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="32">swap_cached<pos:position pos:line="58" pos:column="43"/></name></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="45"/></expr_stmt>
<comment type="block" pos:line="59" pos:column="1">/* #endif KERNEL_LINUX */</comment>

<cpp:elif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">elif<pos:position pos:line="61" pos:column="6"/></cpp:directive> <expr><name pos:line="61" pos:column="7">HAVE_LIBKSTAT<pos:position pos:line="61" pos:column="20"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="62" pos:column="9">unsigned<pos:position pos:line="62" pos:column="17"/></name> <name pos:line="62" pos:column="18">long<pos:position pos:line="62" pos:column="22"/></name> <name pos:line="62" pos:column="23">long<pos:position pos:line="62" pos:column="27"/></name></type> <name pos:line="62" pos:column="28">swap_alloc<pos:position pos:line="62" pos:column="38"/></name></decl>;<pos:position pos:line="62" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="63" pos:column="9">unsigned<pos:position pos:line="63" pos:column="17"/></name> <name pos:line="63" pos:column="18">long<pos:position pos:line="63" pos:column="22"/></name> <name pos:line="63" pos:column="23">long<pos:position pos:line="63" pos:column="27"/></name></type> <name pos:line="63" pos:column="28">swap_resv<pos:position pos:line="63" pos:column="37"/></name></decl>;<pos:position pos:line="63" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="64" pos:column="9">unsigned<pos:position pos:line="64" pos:column="17"/></name> <name pos:line="64" pos:column="18">long<pos:position pos:line="64" pos:column="22"/></name> <name pos:line="64" pos:column="23">long<pos:position pos:line="64" pos:column="27"/></name></type> <name pos:line="64" pos:column="28">swap_avail<pos:position pos:line="64" pos:column="38"/></name></decl>;<pos:position pos:line="64" pos:column="39"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="66" pos:column="9">struct<pos:position pos:line="66" pos:column="15"/></name> <name pos:line="66" pos:column="16">anoninfo<pos:position pos:line="66" pos:column="24"/></name></name></type> <name pos:line="66" pos:column="25">ai<pos:position pos:line="66" pos:column="27"/></name></decl>;<pos:position pos:line="66" pos:column="28"/></decl_stmt>

	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><call><name pos:line="68" pos:column="13">swapctl<pos:position pos:line="68" pos:column="20"/></name> <argument_list pos:line="68" pos:column="21">(<argument><expr><name pos:line="68" pos:column="22">SC_AINFO<pos:position pos:line="68" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="32">&amp;<pos:position pos:line="68" pos:column="37"/></operator><name pos:line="68" pos:column="33">ai<pos:position pos:line="68" pos:column="35"/></name></expr></argument>)<pos:position pos:line="68" pos:column="36"/></argument_list></call> <operator pos:line="68" pos:column="37">==<pos:position pos:line="68" pos:column="39"/></operator> <operator pos:line="68" pos:column="40">-<pos:position pos:line="68" pos:column="41"/></operator><literal type="number" pos:line="68" pos:column="41">1<pos:position pos:line="68" pos:column="42"/></literal></expr>)<pos:position pos:line="68" pos:column="43"/></condition><then pos:line="68" pos:column="43">
	<block pos:line="69" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="70" pos:column="17">char<pos:position pos:line="70" pos:column="21"/></name></type> <name><name pos:line="70" pos:column="22">errbuf<pos:position pos:line="70" pos:column="28"/></name><index pos:line="70" pos:column="28">[<expr><literal type="number" pos:line="70" pos:column="29">1024<pos:position pos:line="70" pos:column="33"/></literal></expr>]<pos:position pos:line="70" pos:column="34"/></index></name></decl>;<pos:position pos:line="70" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="71" pos:column="17">ERROR<pos:position pos:line="71" pos:column="22"/></name> <argument_list pos:line="71" pos:column="23">(<argument><expr><literal type="string" pos:line="71" pos:column="24">"swap plugin: swapctl failed: %s"<pos:position pos:line="71" pos:column="57"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="72" pos:column="33">sstrerror<pos:position pos:line="72" pos:column="42"/></name> <argument_list pos:line="72" pos:column="43">(<argument><expr><name pos:line="72" pos:column="44">errno<pos:position pos:line="72" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="51">errbuf<pos:position pos:line="72" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="59">sizeof <argument_list pos:line="72" pos:column="66">(<argument><expr><name pos:line="72" pos:column="67">errbuf<pos:position pos:line="72" pos:column="73"/></name></expr></argument>)<pos:position pos:line="72" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="72" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="77"/></expr_stmt>
		<return pos:line="73" pos:column="17">return <expr><operator pos:line="73" pos:column="24">(<pos:position pos:line="73" pos:column="25"/></operator><operator pos:line="73" pos:column="25">-<pos:position pos:line="73" pos:column="26"/></operator><literal type="number" pos:line="73" pos:column="26">1<pos:position pos:line="73" pos:column="27"/></literal><operator pos:line="73" pos:column="27">)<pos:position pos:line="73" pos:column="28"/></operator></expr>;<pos:position pos:line="73" pos:column="29"/></return>
	}<pos:position pos:line="74" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="76" pos:column="9">/*
	 * Calculations from:
	 * http://cvs.opensolaris.org/source/xref/on/usr/src/cmd/swap/swap.c
	 * Also see:
	 * http://www.itworld.com/Comp/2377/UIR980701perf/ (outdated?)
	 * /usr/include/vm/anon.h
	 *
	 * In short, swap -s shows: allocated + reserved = used, available
	 *
	 * However, Solaris does not allow to allocated/reserved more than the
	 * available swap (physical memory + disk swap), so the pedant may
	 * prefer: allocated + unallocated = reserved, available
	 * 
	 * We map the above to: used + resv = n/a, free
	 *
	 * Does your brain hurt yet?  - Christophe Kalt
	 *
	 * Oh, and in case you wonder,
	 * swap_alloc = pagesize * ( ai.ani_max - ai.ani_free );
	 * can suffer from a 32bit overflow.
	 */</comment>
	<expr_stmt><expr><name pos:line="97" pos:column="9">swap_alloc<pos:position pos:line="97" pos:column="19"/></name>  <operator pos:line="97" pos:column="21">=<pos:position pos:line="97" pos:column="22"/></operator> <name><name pos:line="97" pos:column="23">ai<pos:position pos:line="97" pos:column="25"/></name><operator pos:line="97" pos:column="25">.<pos:position pos:line="97" pos:column="26"/></operator><name pos:line="97" pos:column="26">ani_max<pos:position pos:line="97" pos:column="33"/></name></name> <operator pos:line="97" pos:column="34">-<pos:position pos:line="97" pos:column="35"/></operator> <name><name pos:line="97" pos:column="36">ai<pos:position pos:line="97" pos:column="38"/></name><operator pos:line="97" pos:column="38">.<pos:position pos:line="97" pos:column="39"/></operator><name pos:line="97" pos:column="39">ani_free<pos:position pos:line="97" pos:column="47"/></name></name></expr>;<pos:position pos:line="97" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="98" pos:column="9">swap_alloc<pos:position pos:line="98" pos:column="19"/></name> <operator pos:line="98" pos:column="20">*=<pos:position pos:line="98" pos:column="22"/></operator> <name pos:line="98" pos:column="23">pagesize<pos:position pos:line="98" pos:column="31"/></name></expr>;<pos:position pos:line="98" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="99" pos:column="9">swap_resv<pos:position pos:line="99" pos:column="18"/></name>   <operator pos:line="99" pos:column="21">=<pos:position pos:line="99" pos:column="22"/></operator> <name><name pos:line="99" pos:column="23">ai<pos:position pos:line="99" pos:column="25"/></name><operator pos:line="99" pos:column="25">.<pos:position pos:line="99" pos:column="26"/></operator><name pos:line="99" pos:column="26">ani_resv<pos:position pos:line="99" pos:column="34"/></name></name> <operator pos:line="99" pos:column="35">+<pos:position pos:line="99" pos:column="36"/></operator> <name><name pos:line="99" pos:column="37">ai<pos:position pos:line="99" pos:column="39"/></name><operator pos:line="99" pos:column="39">.<pos:position pos:line="99" pos:column="40"/></operator><name pos:line="99" pos:column="40">ani_free<pos:position pos:line="99" pos:column="48"/></name></name> <operator pos:line="99" pos:column="49">-<pos:position pos:line="99" pos:column="50"/></operator> <name><name pos:line="99" pos:column="51">ai<pos:position pos:line="99" pos:column="53"/></name><operator pos:line="99" pos:column="53">.<pos:position pos:line="99" pos:column="54"/></operator><name pos:line="99" pos:column="54">ani_max<pos:position pos:line="99" pos:column="61"/></name></name></expr>;<pos:position pos:line="99" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><name pos:line="100" pos:column="9">swap_resv<pos:position pos:line="100" pos:column="18"/></name>  <operator pos:line="100" pos:column="20">*=<pos:position pos:line="100" pos:column="22"/></operator> <name pos:line="100" pos:column="23">pagesize<pos:position pos:line="100" pos:column="31"/></name></expr>;<pos:position pos:line="100" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="101" pos:column="9">swap_avail<pos:position pos:line="101" pos:column="19"/></name>  <operator pos:line="101" pos:column="21">=<pos:position pos:line="101" pos:column="22"/></operator> <name><name pos:line="101" pos:column="23">ai<pos:position pos:line="101" pos:column="25"/></name><operator pos:line="101" pos:column="25">.<pos:position pos:line="101" pos:column="26"/></operator><name pos:line="101" pos:column="26">ani_max<pos:position pos:line="101" pos:column="33"/></name></name> <operator pos:line="101" pos:column="34">-<pos:position pos:line="101" pos:column="35"/></operator> <name><name pos:line="101" pos:column="36">ai<pos:position pos:line="101" pos:column="38"/></name><operator pos:line="101" pos:column="38">.<pos:position pos:line="101" pos:column="39"/></operator><name pos:line="101" pos:column="39">ani_resv<pos:position pos:line="101" pos:column="47"/></name></name></expr>;<pos:position pos:line="101" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="102" pos:column="9">swap_avail<pos:position pos:line="102" pos:column="19"/></name> <operator pos:line="102" pos:column="20">*=<pos:position pos:line="102" pos:column="22"/></operator> <name pos:line="102" pos:column="23">pagesize<pos:position pos:line="102" pos:column="31"/></name></expr>;<pos:position pos:line="102" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="104" pos:column="9">swap_submit<pos:position pos:line="104" pos:column="20"/></name> <argument_list pos:line="104" pos:column="21">(<argument><expr><literal type="string" pos:line="104" pos:column="22">"used"<pos:position pos:line="104" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="30">swap_alloc<pos:position pos:line="104" pos:column="40"/></name></expr></argument>)<pos:position pos:line="104" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="105" pos:column="9">swap_submit<pos:position pos:line="105" pos:column="20"/></name> <argument_list pos:line="105" pos:column="21">(<argument><expr><literal type="string" pos:line="105" pos:column="22">"free"<pos:position pos:line="105" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="30">swap_avail<pos:position pos:line="105" pos:column="40"/></name></expr></argument>)<pos:position pos:line="105" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="106" pos:column="9">swap_submit<pos:position pos:line="106" pos:column="20"/></name> <argument_list pos:line="106" pos:column="21">(<argument><expr><literal type="string" pos:line="106" pos:column="22">"reserved"<pos:position pos:line="106" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="34">swap_resv<pos:position pos:line="106" pos:column="43"/></name></expr></argument>)<pos:position pos:line="106" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="45"/></expr_stmt>
<comment type="block" pos:line="107" pos:column="1">/* #endif HAVE_LIBKSTAT */</comment>

<cpp:elif pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">elif<pos:position pos:line="109" pos:column="6"/></cpp:directive> <expr><call><name pos:line="109" pos:column="7">defined<pos:position pos:line="109" pos:column="14"/></name><argument_list pos:line="109" pos:column="14">(<argument><expr><name pos:line="109" pos:column="15">VM_SWAPUSAGE<pos:position pos:line="109" pos:column="27"/></name></expr></argument>)<pos:position pos:line="109" pos:column="28"/></argument_list></call></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="110" pos:column="9">int<pos:position pos:line="110" pos:column="12"/></name></type>              <name><name pos:line="110" pos:column="26">mib<pos:position pos:line="110" pos:column="29"/></name><index pos:line="110" pos:column="29">[<expr><literal type="number" pos:line="110" pos:column="30">3<pos:position pos:line="110" pos:column="31"/></literal></expr>]<pos:position pos:line="110" pos:column="32"/></index></name></decl>;<pos:position pos:line="110" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="111" pos:column="9">size_t<pos:position pos:line="111" pos:column="15"/></name></type>           <name pos:line="111" pos:column="26">mib_len<pos:position pos:line="111" pos:column="33"/></name></decl>;<pos:position pos:line="111" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="112" pos:column="9">struct<pos:position pos:line="112" pos:column="15"/></name> <name pos:line="112" pos:column="16">xsw_usage<pos:position pos:line="112" pos:column="25"/></name></name></type> <name pos:line="112" pos:column="26">sw_usage<pos:position pos:line="112" pos:column="34"/></name></decl>;<pos:position pos:line="112" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="113" pos:column="9">size_t<pos:position pos:line="113" pos:column="15"/></name></type>           <name pos:line="113" pos:column="26">sw_usage_len<pos:position pos:line="113" pos:column="38"/></name></decl>;<pos:position pos:line="113" pos:column="39"/></decl_stmt>

	<expr_stmt><expr><name pos:line="115" pos:column="9">mib_len<pos:position pos:line="115" pos:column="16"/></name> <operator pos:line="115" pos:column="17">=<pos:position pos:line="115" pos:column="18"/></operator> <literal type="number" pos:line="115" pos:column="19">2<pos:position pos:line="115" pos:column="20"/></literal></expr>;<pos:position pos:line="115" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="116" pos:column="9">mib<pos:position pos:line="116" pos:column="12"/></name><index pos:line="116" pos:column="12">[<expr><literal type="number" pos:line="116" pos:column="13">0<pos:position pos:line="116" pos:column="14"/></literal></expr>]<pos:position pos:line="116" pos:column="15"/></index></name>  <operator pos:line="116" pos:column="17">=<pos:position pos:line="116" pos:column="18"/></operator> <name pos:line="116" pos:column="19">CTL_VM<pos:position pos:line="116" pos:column="25"/></name></expr>;<pos:position pos:line="116" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="117" pos:column="9">mib<pos:position pos:line="117" pos:column="12"/></name><index pos:line="117" pos:column="12">[<expr><literal type="number" pos:line="117" pos:column="13">1<pos:position pos:line="117" pos:column="14"/></literal></expr>]<pos:position pos:line="117" pos:column="15"/></index></name>  <operator pos:line="117" pos:column="17">=<pos:position pos:line="117" pos:column="18"/></operator> <name pos:line="117" pos:column="19">VM_SWAPUSAGE<pos:position pos:line="117" pos:column="31"/></name></expr>;<pos:position pos:line="117" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><name pos:line="119" pos:column="9">sw_usage_len<pos:position pos:line="119" pos:column="21"/></name> <operator pos:line="119" pos:column="22">=<pos:position pos:line="119" pos:column="23"/></operator> <sizeof pos:line="119" pos:column="24">sizeof <argument_list pos:line="119" pos:column="31">(<argument><expr pos:line="119" pos:column="32">struct <name pos:line="119" pos:column="39">xsw_usage<pos:position pos:line="119" pos:column="48"/></name></expr></argument>)<pos:position pos:line="119" pos:column="49"/></argument_list></sizeof></expr>;<pos:position pos:line="119" pos:column="50"/></expr_stmt>

	<if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><call><name pos:line="121" pos:column="13">sysctl<pos:position pos:line="121" pos:column="19"/></name> <argument_list pos:line="121" pos:column="20">(<argument><expr><name pos:line="121" pos:column="21">mib<pos:position pos:line="121" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="26">mib_len<pos:position pos:line="121" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="35">&amp;<pos:position pos:line="121" pos:column="40"/></operator><name pos:line="121" pos:column="36">sw_usage<pos:position pos:line="121" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="46">&amp;<pos:position pos:line="121" pos:column="51"/></operator><name pos:line="121" pos:column="47">sw_usage_len<pos:position pos:line="121" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="61">NULL<pos:position pos:line="121" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="67">0<pos:position pos:line="121" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="69"/></argument_list></call> <operator pos:line="121" pos:column="70">!=<pos:position pos:line="121" pos:column="72"/></operator> <literal type="number" pos:line="121" pos:column="73">0<pos:position pos:line="121" pos:column="74"/></literal></expr>)<pos:position pos:line="121" pos:column="75"/></condition><then pos:line="121" pos:column="75">
		<block type="pseudo"><return pos:line="122" pos:column="17">return <expr><operator pos:line="122" pos:column="24">(<pos:position pos:line="122" pos:column="25"/></operator><operator pos:line="122" pos:column="25">-<pos:position pos:line="122" pos:column="26"/></operator><literal type="number" pos:line="122" pos:column="26">1<pos:position pos:line="122" pos:column="27"/></literal><operator pos:line="122" pos:column="27">)<pos:position pos:line="122" pos:column="28"/></operator></expr>;<pos:position pos:line="122" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="124" pos:column="9">/* The returned values are bytes. */</comment>
	<expr_stmt><expr><call><name pos:line="125" pos:column="9">swap_submit<pos:position pos:line="125" pos:column="20"/></name> <argument_list pos:line="125" pos:column="21">(<argument><expr><literal type="string" pos:line="125" pos:column="22">"used"<pos:position pos:line="125" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="30">sw_usage<pos:position pos:line="125" pos:column="38"/></name><operator pos:line="125" pos:column="38">.<pos:position pos:line="125" pos:column="39"/></operator><name pos:line="125" pos:column="39">xsu_used<pos:position pos:line="125" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="126" pos:column="9">swap_submit<pos:position pos:line="126" pos:column="20"/></name> <argument_list pos:line="126" pos:column="21">(<argument><expr><literal type="string" pos:line="126" pos:column="22">"free"<pos:position pos:line="126" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="30">sw_usage<pos:position pos:line="126" pos:column="38"/></name><operator pos:line="126" pos:column="38">.<pos:position pos:line="126" pos:column="39"/></operator><name pos:line="126" pos:column="39">xsu_avail<pos:position pos:line="126" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="50"/></expr_stmt>
<comment type="block" pos:line="127" pos:column="1">/* #endif VM_SWAPUSAGE */</comment>

<cpp:elif pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">elif<pos:position pos:line="129" pos:column="6"/></cpp:directive> <expr><name pos:line="129" pos:column="7">HAVE_LIBKVM<pos:position pos:line="129" pos:column="18"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name><name pos:line="130" pos:column="9">struct<pos:position pos:line="130" pos:column="15"/></name> <name pos:line="130" pos:column="16">kvm_swap<pos:position pos:line="130" pos:column="24"/></name></name></type> <name pos:line="130" pos:column="25">data_s<pos:position pos:line="130" pos:column="31"/></name></decl>;<pos:position pos:line="130" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="131" pos:column="9">int<pos:position pos:line="131" pos:column="12"/></name></type>             <name pos:line="131" pos:column="25">status<pos:position pos:line="131" pos:column="31"/></name></decl>;<pos:position pos:line="131" pos:column="32"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="133" pos:column="9">unsigned<pos:position pos:line="133" pos:column="17"/></name> <name pos:line="133" pos:column="18">long<pos:position pos:line="133" pos:column="22"/></name> <name pos:line="133" pos:column="23">long<pos:position pos:line="133" pos:column="27"/></name></type> <name pos:line="133" pos:column="28">used<pos:position pos:line="133" pos:column="32"/></name></decl>;<pos:position pos:line="133" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="134" pos:column="9">unsigned<pos:position pos:line="134" pos:column="17"/></name> <name pos:line="134" pos:column="18">long<pos:position pos:line="134" pos:column="22"/></name> <name pos:line="134" pos:column="23">long<pos:position pos:line="134" pos:column="27"/></name></type> <name pos:line="134" pos:column="28">free<pos:position pos:line="134" pos:column="32"/></name></decl>;<pos:position pos:line="134" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="135" pos:column="9">unsigned<pos:position pos:line="135" pos:column="17"/></name> <name pos:line="135" pos:column="18">long<pos:position pos:line="135" pos:column="22"/></name> <name pos:line="135" pos:column="23">long<pos:position pos:line="135" pos:column="27"/></name></type> <name pos:line="135" pos:column="28">total<pos:position pos:line="135" pos:column="33"/></name></decl>;<pos:position pos:line="135" pos:column="34"/></decl_stmt>

	<if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><name pos:line="137" pos:column="13">kvm_obj<pos:position pos:line="137" pos:column="20"/></name> <operator pos:line="137" pos:column="21">==<pos:position pos:line="137" pos:column="23"/></operator> <name pos:line="137" pos:column="24">NULL<pos:position pos:line="137" pos:column="28"/></name></expr>)<pos:position pos:line="137" pos:column="29"/></condition><then pos:line="137" pos:column="29">
		<block type="pseudo"><return pos:line="138" pos:column="17">return <expr><operator pos:line="138" pos:column="24">(<pos:position pos:line="138" pos:column="25"/></operator><operator pos:line="138" pos:column="25">-<pos:position pos:line="138" pos:column="26"/></operator><literal type="number" pos:line="138" pos:column="26">1<pos:position pos:line="138" pos:column="27"/></literal><operator pos:line="138" pos:column="27">)<pos:position pos:line="138" pos:column="28"/></operator></expr>;<pos:position pos:line="138" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="140" pos:column="9">/* only one structure =&gt; only get the grand total, no details */</comment>
	<expr_stmt><expr><name pos:line="141" pos:column="9">status<pos:position pos:line="141" pos:column="15"/></name> <operator pos:line="141" pos:column="16">=<pos:position pos:line="141" pos:column="17"/></operator> <call><name pos:line="141" pos:column="18">kvm_getswapinfo<pos:position pos:line="141" pos:column="33"/></name> <argument_list pos:line="141" pos:column="34">(<argument><expr><name pos:line="141" pos:column="35">kvm_obj<pos:position pos:line="141" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="141" pos:column="44">&amp;<pos:position pos:line="141" pos:column="49"/></operator><name pos:line="141" pos:column="45">data_s<pos:position pos:line="141" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="53">1<pos:position pos:line="141" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="56">0<pos:position pos:line="141" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="59"/></expr_stmt>
	<if pos:line="142" pos:column="9">if <condition pos:line="142" pos:column="12">(<expr><name pos:line="142" pos:column="13">status<pos:position pos:line="142" pos:column="19"/></name> <operator pos:line="142" pos:column="20">==<pos:position pos:line="142" pos:column="22"/></operator> <operator pos:line="142" pos:column="23">-<pos:position pos:line="142" pos:column="24"/></operator><literal type="number" pos:line="142" pos:column="24">1<pos:position pos:line="142" pos:column="25"/></literal></expr>)<pos:position pos:line="142" pos:column="26"/></condition><then pos:line="142" pos:column="26">
		<block type="pseudo"><return pos:line="143" pos:column="17">return <expr><operator pos:line="143" pos:column="24">(<pos:position pos:line="143" pos:column="25"/></operator><operator pos:line="143" pos:column="25">-<pos:position pos:line="143" pos:column="26"/></operator><literal type="number" pos:line="143" pos:column="26">1<pos:position pos:line="143" pos:column="27"/></literal><operator pos:line="143" pos:column="27">)<pos:position pos:line="143" pos:column="28"/></operator></expr>;<pos:position pos:line="143" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="145" pos:column="9">total<pos:position pos:line="145" pos:column="14"/></name> <operator pos:line="145" pos:column="15">=<pos:position pos:line="145" pos:column="16"/></operator> <operator pos:line="145" pos:column="17">(<pos:position pos:line="145" pos:column="18"/></operator><name pos:line="145" pos:column="18">unsigned<pos:position pos:line="145" pos:column="26"/></name> <name pos:line="145" pos:column="27">long<pos:position pos:line="145" pos:column="31"/></name> <name pos:line="145" pos:column="32">long<pos:position pos:line="145" pos:column="36"/></name><operator pos:line="145" pos:column="36">)<pos:position pos:line="145" pos:column="37"/></operator> <name><name pos:line="145" pos:column="38">data_s<pos:position pos:line="145" pos:column="44"/></name><operator pos:line="145" pos:column="44">.<pos:position pos:line="145" pos:column="45"/></operator><name pos:line="145" pos:column="45">ksw_total<pos:position pos:line="145" pos:column="54"/></name></name></expr>;<pos:position pos:line="145" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name pos:line="146" pos:column="9">used<pos:position pos:line="146" pos:column="13"/></name>  <operator pos:line="146" pos:column="15">=<pos:position pos:line="146" pos:column="16"/></operator> <operator pos:line="146" pos:column="17">(<pos:position pos:line="146" pos:column="18"/></operator><name pos:line="146" pos:column="18">unsigned<pos:position pos:line="146" pos:column="26"/></name> <name pos:line="146" pos:column="27">long<pos:position pos:line="146" pos:column="31"/></name> <name pos:line="146" pos:column="32">long<pos:position pos:line="146" pos:column="36"/></name><operator pos:line="146" pos:column="36">)<pos:position pos:line="146" pos:column="37"/></operator> <name><name pos:line="146" pos:column="38">data_s<pos:position pos:line="146" pos:column="44"/></name><operator pos:line="146" pos:column="44">.<pos:position pos:line="146" pos:column="45"/></operator><name pos:line="146" pos:column="45">ksw_used<pos:position pos:line="146" pos:column="53"/></name></name></expr>;<pos:position pos:line="146" pos:column="54"/></expr_stmt>

	<expr_stmt><expr><name pos:line="148" pos:column="9">total<pos:position pos:line="148" pos:column="14"/></name> <operator pos:line="148" pos:column="15">*=<pos:position pos:line="148" pos:column="17"/></operator> <operator pos:line="148" pos:column="18">(<pos:position pos:line="148" pos:column="19"/></operator><name pos:line="148" pos:column="19">unsigned<pos:position pos:line="148" pos:column="27"/></name> <name pos:line="148" pos:column="28">long<pos:position pos:line="148" pos:column="32"/></name> <name pos:line="148" pos:column="33">long<pos:position pos:line="148" pos:column="37"/></name><operator pos:line="148" pos:column="37">)<pos:position pos:line="148" pos:column="38"/></operator> <name pos:line="148" pos:column="39">kvm_pagesize<pos:position pos:line="148" pos:column="51"/></name></expr>;<pos:position pos:line="148" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name pos:line="149" pos:column="9">used<pos:position pos:line="149" pos:column="13"/></name>  <operator pos:line="149" pos:column="15">*=<pos:position pos:line="149" pos:column="17"/></operator> <operator pos:line="149" pos:column="18">(<pos:position pos:line="149" pos:column="19"/></operator><name pos:line="149" pos:column="19">unsigned<pos:position pos:line="149" pos:column="27"/></name> <name pos:line="149" pos:column="28">long<pos:position pos:line="149" pos:column="32"/></name> <name pos:line="149" pos:column="33">long<pos:position pos:line="149" pos:column="37"/></name><operator pos:line="149" pos:column="37">)<pos:position pos:line="149" pos:column="38"/></operator> <name pos:line="149" pos:column="39">kvm_pagesize<pos:position pos:line="149" pos:column="51"/></name></expr>;<pos:position pos:line="149" pos:column="52"/></expr_stmt>

	<expr_stmt><expr><name pos:line="151" pos:column="9">free<pos:position pos:line="151" pos:column="13"/></name> <operator pos:line="151" pos:column="14">=<pos:position pos:line="151" pos:column="15"/></operator> <name pos:line="151" pos:column="16">total<pos:position pos:line="151" pos:column="21"/></name> <operator pos:line="151" pos:column="22">-<pos:position pos:line="151" pos:column="23"/></operator> <name pos:line="151" pos:column="24">used<pos:position pos:line="151" pos:column="28"/></name></expr>;<pos:position pos:line="151" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="153" pos:column="9">swap_submit<pos:position pos:line="153" pos:column="20"/></name> <argument_list pos:line="153" pos:column="21">(<argument><expr><literal type="string" pos:line="153" pos:column="22">"used"<pos:position pos:line="153" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="30">used<pos:position pos:line="153" pos:column="34"/></name></expr></argument>)<pos:position pos:line="153" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="154" pos:column="9">swap_submit<pos:position pos:line="154" pos:column="20"/></name> <argument_list pos:line="154" pos:column="21">(<argument><expr><literal type="string" pos:line="154" pos:column="22">"free"<pos:position pos:line="154" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="154" pos:column="30">free<pos:position pos:line="154" pos:column="34"/></name></expr></argument>)<pos:position pos:line="154" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="36"/></expr_stmt>
<comment type="block" pos:line="155" pos:column="1">/* #endif HAVE_LIBKVM */</comment>

<cpp:elif pos:line="157" pos:column="1">#<cpp:directive pos:line="157" pos:column="2">elif<pos:position pos:line="157" pos:column="6"/></cpp:directive> <expr><name pos:line="157" pos:column="7">HAVE_LIBSTATGRAB<pos:position pos:line="157" pos:column="23"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="158" pos:column="9">sg_swap_stats<pos:position pos:line="158" pos:column="22"/></name> <modifier pos:line="158" pos:column="23">*<pos:position pos:line="158" pos:column="24"/></modifier></type><name pos:line="158" pos:column="24">swap<pos:position pos:line="158" pos:column="28"/></name></decl>;<pos:position pos:line="158" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="160" pos:column="9">swap<pos:position pos:line="160" pos:column="13"/></name> <operator pos:line="160" pos:column="14">=<pos:position pos:line="160" pos:column="15"/></operator> <call><name pos:line="160" pos:column="16">sg_get_swap_stats<pos:position pos:line="160" pos:column="33"/></name> <argument_list pos:line="160" pos:column="34">()<pos:position pos:line="160" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="37"/></expr_stmt>

	<if pos:line="162" pos:column="9">if <condition pos:line="162" pos:column="12">(<expr><name pos:line="162" pos:column="13">swap<pos:position pos:line="162" pos:column="17"/></name> <operator pos:line="162" pos:column="18">==<pos:position pos:line="162" pos:column="20"/></operator> <name pos:line="162" pos:column="21">NULL<pos:position pos:line="162" pos:column="25"/></name></expr>)<pos:position pos:line="162" pos:column="26"/></condition><then pos:line="162" pos:column="26">
		<block type="pseudo"><return pos:line="163" pos:column="17">return <expr><operator pos:line="163" pos:column="24">(<pos:position pos:line="163" pos:column="25"/></operator><operator pos:line="163" pos:column="25">-<pos:position pos:line="163" pos:column="26"/></operator><literal type="number" pos:line="163" pos:column="26">1<pos:position pos:line="163" pos:column="27"/></literal><operator pos:line="163" pos:column="27">)<pos:position pos:line="163" pos:column="28"/></operator></expr>;<pos:position pos:line="163" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="165" pos:column="9">swap_submit<pos:position pos:line="165" pos:column="20"/></name> <argument_list pos:line="165" pos:column="21">(<argument><expr><literal type="string" pos:line="165" pos:column="22">"used"<pos:position pos:line="165" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="30">swap<pos:position pos:line="165" pos:column="34"/></name><operator pos:line="165" pos:column="34">-&gt;<pos:position pos:line="165" pos:column="39"/></operator><name pos:line="165" pos:column="36">used<pos:position pos:line="165" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="165" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="166" pos:column="9">swap_submit<pos:position pos:line="166" pos:column="20"/></name> <argument_list pos:line="166" pos:column="21">(<argument><expr><literal type="string" pos:line="166" pos:column="22">"free"<pos:position pos:line="166" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="166" pos:column="30">swap<pos:position pos:line="166" pos:column="34"/></name><operator pos:line="166" pos:column="34">-&gt;<pos:position pos:line="166" pos:column="39"/></operator><name pos:line="166" pos:column="36">free<pos:position pos:line="166" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="166" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="167" pos:column="1">#<cpp:directive pos:line="167" pos:column="2">endif<pos:position pos:line="167" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="167" pos:column="8">/* HAVE_LIBSTATGRAB */</comment>

	<return pos:line="169" pos:column="9">return <expr><operator pos:line="169" pos:column="16">(<pos:position pos:line="169" pos:column="17"/></operator><literal type="number" pos:line="169" pos:column="17">0<pos:position pos:line="169" pos:column="18"/></literal><operator pos:line="169" pos:column="18">)<pos:position pos:line="169" pos:column="19"/></operator></expr>;<pos:position pos:line="169" pos:column="20"/></return>
}<pos:position pos:line="170" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2095_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wt_send_message<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type> <name pos:line="1" pos:column="41">key<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name><modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type> <name pos:line="1" pos:column="58">value<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">cdtime_t<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">time<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="44">struct<pos:position pos:line="2" pos:column="50"/></name> <name pos:line="2" pos:column="51">wt_callback<pos:position pos:line="2" pos:column="62"/></name></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">cb<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
                            <parameter><decl><type><specifier pos:line="3" pos:column="29">const<pos:position pos:line="3" pos:column="34"/></specifier> <name pos:line="3" pos:column="35">char<pos:position pos:line="3" pos:column="39"/></name><modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type> <name pos:line="3" pos:column="41">host<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="47">meta_data_t<pos:position pos:line="3" pos:column="58"/></name> <modifier pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></modifier></type><name pos:line="3" pos:column="60">md<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">status<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">size_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">message_len<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">temp<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name pos:line="7" pos:column="18">NULL<pos:position pos:line="7" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">tags<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="string" pos:line="8" pos:column="24">""<pos:position pos:line="8" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">message<pos:position pos:line="9" pos:column="17"/></name><index pos:line="9" pos:column="17">[<expr><literal type="number" pos:line="9" pos:column="18">1024<pos:position pos:line="9" pos:column="22"/></literal></expr>]<pos:position pos:line="9" pos:column="23"/></index></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">host_tags<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><ternary><condition><expr><name><name pos:line="10" pos:column="29">cb<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">host_tags<pos:position pos:line="10" pos:column="42"/></name></name></expr> ?<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44"> <expr><name><name pos:line="10" pos:column="45">cb<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">-&gt;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="49">host_tags<pos:position pos:line="10" pos:column="58"/></name></name></expr> <pos:position pos:line="10" pos:column="59"/></then><else pos:line="10" pos:column="59">: <expr><literal type="string" pos:line="10" pos:column="61">""<pos:position pos:line="10" pos:column="63"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="10" pos:column="64"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">meta_tsdb<pos:position pos:line="11" pos:column="26"/></name> <init pos:line="11" pos:column="27">= <expr><literal type="string" pos:line="11" pos:column="29">"tsdb_tags"<pos:position pos:line="11" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="41"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* skip if value is NaN */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">value<pos:position pos:line="14" pos:column="14"/></name><index pos:line="14" pos:column="14">[<expr><literal type="number" pos:line="14" pos:column="15">0<pos:position pos:line="14" pos:column="16"/></literal></expr>]<pos:position pos:line="14" pos:column="17"/></index></name> <operator pos:line="14" pos:column="18">==<pos:position pos:line="14" pos:column="20"/></operator> <literal type="char" pos:line="14" pos:column="21">'n'<pos:position pos:line="14" pos:column="24"/></literal></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25">
        <block type="pseudo"><return pos:line="15" pos:column="9">return <expr><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></return></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">md<pos:position pos:line="17" pos:column="11"/></name></expr>)<pos:position pos:line="17" pos:column="12"/></condition><then pos:line="17" pos:column="12"> <block pos:line="17" pos:column="13">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">status<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">meta_data_get_string<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name pos:line="18" pos:column="39">md<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">meta_tsdb<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="54">&amp;<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="55">temp<pos:position pos:line="18" pos:column="59"/></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">status<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">==<pos:position pos:line="19" pos:column="22"/></operator> <operator pos:line="19" pos:column="23">-<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">ENOENT<pos:position pos:line="19" pos:column="30"/></name></expr>)<pos:position pos:line="19" pos:column="31"/></condition><then pos:line="19" pos:column="31"> <block pos:line="19" pos:column="32">{
            <comment type="block" pos:line="20" pos:column="13">/* defaults to empty string */</comment>
        }<pos:position pos:line="21" pos:column="10"/></block></then> <elseif pos:line="21" pos:column="11">else <if pos:line="21" pos:column="16">if <condition pos:line="21" pos:column="19">(<expr><name pos:line="21" pos:column="20">status<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">&lt;<pos:position pos:line="21" pos:column="31"/></operator> <literal type="number" pos:line="21" pos:column="29">0<pos:position pos:line="21" pos:column="30"/></literal></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31"> <block pos:line="21" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">ERROR<pos:position pos:line="22" pos:column="18"/></name><argument_list pos:line="22" pos:column="18">(<argument><expr><literal type="string" pos:line="22" pos:column="19">"write_tsdb plugin: tags metadata get failure"<pos:position pos:line="22" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">sfree<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">temp<pos:position pos:line="23" pos:column="23"/></name></expr></argument>)<pos:position pos:line="23" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">pthread_mutex_unlock<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><operator pos:line="24" pos:column="34">&amp;<pos:position pos:line="24" pos:column="39"/></operator><name><name pos:line="24" pos:column="35">cb<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">-&gt;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="39">send_lock<pos:position pos:line="24" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
            <return pos:line="25" pos:column="13">return <expr><name pos:line="25" pos:column="20">status<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if></elseif> <else pos:line="26" pos:column="11">else <block pos:line="26" pos:column="16">{
            <expr_stmt><expr><name pos:line="27" pos:column="13">tags<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">temp<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></else></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="31" pos:column="5">status<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <call><name pos:line="31" pos:column="14">ssnprintf<pos:position pos:line="31" pos:column="23"/></name> <argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">message<pos:position pos:line="31" pos:column="32"/></name></expr></argument>,
                             <argument><expr><sizeof pos:line="32" pos:column="30">sizeof<argument_list pos:line="32" pos:column="36">(<argument><expr><name pos:line="32" pos:column="37">message<pos:position pos:line="32" pos:column="44"/></name></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></sizeof></expr></argument>,
                             <argument><expr><literal type="string" pos:line="33" pos:column="30">"put %s %.0f %s fqdn=%s %s %s\r\n"<pos:position pos:line="33" pos:column="64"/></literal></expr></argument>,
                             <argument><expr><name pos:line="34" pos:column="30">key<pos:position pos:line="34" pos:column="33"/></name></expr></argument>,
                             <argument><expr><call><name pos:line="35" pos:column="30">CDTIME_T_TO_DOUBLE<pos:position pos:line="35" pos:column="48"/></name><argument_list pos:line="35" pos:column="48">(<argument><expr><name pos:line="35" pos:column="49">time<pos:position pos:line="35" pos:column="53"/></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="36" pos:column="30">value<pos:position pos:line="36" pos:column="35"/></name></expr></argument>,
                             <argument><expr><name pos:line="37" pos:column="30">host<pos:position pos:line="37" pos:column="34"/></name></expr></argument>,
                             <argument><expr><name pos:line="38" pos:column="30">tags<pos:position pos:line="38" pos:column="34"/></name></expr></argument>,
                             <argument><expr><name pos:line="39" pos:column="30">host_tags<pos:position pos:line="39" pos:column="39"/></name></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">sfree<pos:position pos:line="40" pos:column="10"/></name><argument_list pos:line="40" pos:column="10">(<argument><expr><name pos:line="40" pos:column="11">temp<pos:position pos:line="40" pos:column="15"/></name></expr></argument>)<pos:position pos:line="40" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="17"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">status<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">&lt;<pos:position pos:line="41" pos:column="20"/></operator> <literal type="number" pos:line="41" pos:column="18">0<pos:position pos:line="41" pos:column="19"/></literal></expr>)<pos:position pos:line="41" pos:column="20"/></condition><then pos:line="41" pos:column="20">
        <block type="pseudo"><return pos:line="42" pos:column="9">return <expr><operator pos:line="42" pos:column="16">-<pos:position pos:line="42" pos:column="17"/></operator><literal type="number" pos:line="42" pos:column="17">1<pos:position pos:line="42" pos:column="18"/></literal></expr>;<pos:position pos:line="42" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="43" pos:column="5">message_len<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <operator pos:line="43" pos:column="19">(<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">size_t<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">)<pos:position pos:line="43" pos:column="27"/></operator> <name pos:line="43" pos:column="28">status<pos:position pos:line="43" pos:column="34"/></name></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">message_len<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">&gt;=<pos:position pos:line="45" pos:column="26"/></operator> <sizeof pos:line="45" pos:column="24">sizeof<argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">message<pos:position pos:line="45" pos:column="38"/></name></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></sizeof></expr>)<pos:position pos:line="45" pos:column="40"/></condition><then pos:line="45" pos:column="40"> <block pos:line="45" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">ERROR<pos:position pos:line="46" pos:column="14"/></name><argument_list pos:line="46" pos:column="14">(<argument><expr><literal type="string" pos:line="46" pos:column="15">"write_tsdb plugin: message buffer too small: "<pos:position pos:line="46" pos:column="62"/></literal>
              <literal type="string" pos:line="47" pos:column="15">"Need %zu bytes."<pos:position pos:line="47" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">message_len<pos:position pos:line="47" pos:column="45"/></name> <operator pos:line="47" pos:column="46">+<pos:position pos:line="47" pos:column="47"/></operator> <literal type="number" pos:line="47" pos:column="48">1<pos:position pos:line="47" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="51"/></expr_stmt>
        <return pos:line="48" pos:column="9">return <expr><operator pos:line="48" pos:column="16">-<pos:position pos:line="48" pos:column="17"/></operator><literal type="number" pos:line="48" pos:column="17">1<pos:position pos:line="48" pos:column="18"/></literal></expr>;<pos:position pos:line="48" pos:column="19"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="51" pos:column="5">pthread_mutex_lock<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><operator pos:line="51" pos:column="24">&amp;<pos:position pos:line="51" pos:column="29"/></operator><name><name pos:line="51" pos:column="25">cb<pos:position pos:line="51" pos:column="27"/></name><operator pos:line="51" pos:column="27">-&gt;<pos:position pos:line="51" pos:column="32"/></operator><name pos:line="51" pos:column="29">send_lock<pos:position pos:line="51" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt>

    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name><name pos:line="53" pos:column="9">cb<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">sock_fd<pos:position pos:line="53" pos:column="20"/></name></name> <operator pos:line="53" pos:column="21">&lt;<pos:position pos:line="53" pos:column="25"/></operator> <literal type="number" pos:line="53" pos:column="23">0<pos:position pos:line="53" pos:column="24"/></literal></expr>)<pos:position pos:line="53" pos:column="25"/></condition><then pos:line="53" pos:column="25">
    <block pos:line="54" pos:column="5">{
        <expr_stmt><expr><name pos:line="55" pos:column="9">status<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <call><name pos:line="55" pos:column="18">wt_callback_init<pos:position pos:line="55" pos:column="34"/></name><argument_list pos:line="55" pos:column="34">(<argument><expr><name pos:line="55" pos:column="35">cb<pos:position pos:line="55" pos:column="37"/></name></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="39"/></expr_stmt>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">status<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">!=<pos:position pos:line="56" pos:column="22"/></operator> <literal type="number" pos:line="56" pos:column="23">0<pos:position pos:line="56" pos:column="24"/></literal></expr>)<pos:position pos:line="56" pos:column="25"/></condition><then pos:line="56" pos:column="25">
        <block pos:line="57" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">ERROR<pos:position pos:line="58" pos:column="18"/></name><argument_list pos:line="58" pos:column="18">(<argument><expr><literal type="string" pos:line="58" pos:column="19">"write_tsdb plugin: wt_callback_init failed."<pos:position pos:line="58" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">pthread_mutex_unlock<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><operator pos:line="59" pos:column="34">&amp;<pos:position pos:line="59" pos:column="39"/></operator><name><name pos:line="59" pos:column="35">cb<pos:position pos:line="59" pos:column="37"/></name><operator pos:line="59" pos:column="37">-&gt;<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="39">send_lock<pos:position pos:line="59" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="50"/></expr_stmt>
            <return pos:line="60" pos:column="13">return <expr><operator pos:line="60" pos:column="20">-<pos:position pos:line="60" pos:column="21"/></operator><literal type="number" pos:line="60" pos:column="21">1<pos:position pos:line="60" pos:column="22"/></literal></expr>;<pos:position pos:line="60" pos:column="23"/></return>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name pos:line="64" pos:column="9">message_len<pos:position pos:line="64" pos:column="20"/></name> <operator pos:line="64" pos:column="21">&gt;=<pos:position pos:line="64" pos:column="26"/></operator> <name><name pos:line="64" pos:column="24">cb<pos:position pos:line="64" pos:column="26"/></name><operator pos:line="64" pos:column="26">-&gt;<pos:position pos:line="64" pos:column="31"/></operator><name pos:line="64" pos:column="28">send_buf_free<pos:position pos:line="64" pos:column="41"/></name></name></expr>)<pos:position pos:line="64" pos:column="42"/></condition><then pos:line="64" pos:column="42">
    <block pos:line="65" pos:column="5">{
        <expr_stmt><expr><name pos:line="66" pos:column="9">status<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">=<pos:position pos:line="66" pos:column="17"/></operator> <call><name pos:line="66" pos:column="18">wt_flush_nolock<pos:position pos:line="66" pos:column="33"/></name><argument_list pos:line="66" pos:column="33">(<argument><expr><literal type="number" pos:line="66" pos:column="34">0<pos:position pos:line="66" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="37">cb<pos:position pos:line="66" pos:column="39"/></name></expr></argument>)<pos:position pos:line="66" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="41"/></expr_stmt>
        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">status<pos:position pos:line="67" pos:column="19"/></name> <operator pos:line="67" pos:column="20">!=<pos:position pos:line="67" pos:column="22"/></operator> <literal type="number" pos:line="67" pos:column="23">0<pos:position pos:line="67" pos:column="24"/></literal></expr>)<pos:position pos:line="67" pos:column="25"/></condition><then pos:line="67" pos:column="25">
        <block pos:line="68" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">pthread_mutex_unlock<pos:position pos:line="69" pos:column="33"/></name><argument_list pos:line="69" pos:column="33">(<argument><expr><operator pos:line="69" pos:column="34">&amp;<pos:position pos:line="69" pos:column="39"/></operator><name><name pos:line="69" pos:column="35">cb<pos:position pos:line="69" pos:column="37"/></name><operator pos:line="69" pos:column="37">-&gt;<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="39">send_lock<pos:position pos:line="69" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="50"/></expr_stmt>
            <return pos:line="70" pos:column="13">return <expr><name pos:line="70" pos:column="20">status<pos:position pos:line="70" pos:column="26"/></name></expr>;<pos:position pos:line="70" pos:column="27"/></return>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="74" pos:column="5">/* Assert that we have enough space for this message. */</comment>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">assert<pos:position pos:line="75" pos:column="11"/></name><argument_list pos:line="75" pos:column="11">(<argument><expr><name pos:line="75" pos:column="12">message_len<pos:position pos:line="75" pos:column="23"/></name> <operator pos:line="75" pos:column="24">&lt;<pos:position pos:line="75" pos:column="28"/></operator> <name><name pos:line="75" pos:column="26">cb<pos:position pos:line="75" pos:column="28"/></name><operator pos:line="75" pos:column="28">-&gt;<pos:position pos:line="75" pos:column="33"/></operator><name pos:line="75" pos:column="30">send_buf_free<pos:position pos:line="75" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="45"/></expr_stmt>

    <comment type="block" pos:line="77" pos:column="5">/* `message_len + 1' because `message_len' does not include the
     * trailing null byte. Neither does `send_buffer_fill'. */</comment>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">memcpy<pos:position pos:line="79" pos:column="11"/></name><argument_list pos:line="79" pos:column="11">(<argument><expr><name><name pos:line="79" pos:column="12">cb<pos:position pos:line="79" pos:column="14"/></name><operator pos:line="79" pos:column="14">-&gt;<pos:position pos:line="79" pos:column="19"/></operator><name pos:line="79" pos:column="16">send_buf<pos:position pos:line="79" pos:column="24"/></name></name> <operator pos:line="79" pos:column="25">+<pos:position pos:line="79" pos:column="26"/></operator> <name><name pos:line="79" pos:column="27">cb<pos:position pos:line="79" pos:column="29"/></name><operator pos:line="79" pos:column="29">-&gt;<pos:position pos:line="79" pos:column="34"/></operator><name pos:line="79" pos:column="31">send_buf_fill<pos:position pos:line="79" pos:column="44"/></name></name></expr></argument>,
            <argument><expr><name pos:line="80" pos:column="13">message<pos:position pos:line="80" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="22">message_len<pos:position pos:line="80" pos:column="33"/></name> <operator pos:line="80" pos:column="34">+<pos:position pos:line="80" pos:column="35"/></operator> <literal type="number" pos:line="80" pos:column="36">1<pos:position pos:line="80" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="81" pos:column="5">cb<pos:position pos:line="81" pos:column="7"/></name><operator pos:line="81" pos:column="7">-&gt;<pos:position pos:line="81" pos:column="12"/></operator><name pos:line="81" pos:column="9">send_buf_fill<pos:position pos:line="81" pos:column="22"/></name></name> <operator pos:line="81" pos:column="23">+=<pos:position pos:line="81" pos:column="25"/></operator> <name pos:line="81" pos:column="26">message_len<pos:position pos:line="81" pos:column="37"/></name></expr>;<pos:position pos:line="81" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="82" pos:column="5">cb<pos:position pos:line="82" pos:column="7"/></name><operator pos:line="82" pos:column="7">-&gt;<pos:position pos:line="82" pos:column="12"/></operator><name pos:line="82" pos:column="9">send_buf_free<pos:position pos:line="82" pos:column="22"/></name></name> <operator pos:line="82" pos:column="23">-=<pos:position pos:line="82" pos:column="25"/></operator> <name pos:line="82" pos:column="26">message_len<pos:position pos:line="82" pos:column="37"/></name></expr>;<pos:position pos:line="82" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="84" pos:column="5">DEBUG<pos:position pos:line="84" pos:column="10"/></name><argument_list pos:line="84" pos:column="10">(<argument><expr><literal type="string" pos:line="84" pos:column="11">"write_tsdb plugin: [%s]:%s buf %zu/%zu (%.1f %%) \"%s\""<pos:position pos:line="84" pos:column="68"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="85" pos:column="11">cb<pos:position pos:line="85" pos:column="13"/></name><operator pos:line="85" pos:column="13">-&gt;<pos:position pos:line="85" pos:column="18"/></operator><name pos:line="85" pos:column="15">node<pos:position pos:line="85" pos:column="19"/></name></name></expr></argument>,
          <argument><expr><name><name pos:line="86" pos:column="11">cb<pos:position pos:line="86" pos:column="13"/></name><operator pos:line="86" pos:column="13">-&gt;<pos:position pos:line="86" pos:column="18"/></operator><name pos:line="86" pos:column="15">service<pos:position pos:line="86" pos:column="22"/></name></name></expr></argument>,
          <argument><expr><name><name pos:line="87" pos:column="11">cb<pos:position pos:line="87" pos:column="13"/></name><operator pos:line="87" pos:column="13">-&gt;<pos:position pos:line="87" pos:column="18"/></operator><name pos:line="87" pos:column="15">send_buf_fill<pos:position pos:line="87" pos:column="28"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="87" pos:column="30">sizeof<argument_list pos:line="87" pos:column="36">(<argument><expr><name><name pos:line="87" pos:column="37">cb<pos:position pos:line="87" pos:column="39"/></name><operator pos:line="87" pos:column="39">-&gt;<pos:position pos:line="87" pos:column="44"/></operator><name pos:line="87" pos:column="41">send_buf<pos:position pos:line="87" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="50"/></argument_list></sizeof></expr></argument>,
          <argument><expr><literal type="number" pos:line="88" pos:column="11">100.0<pos:position pos:line="88" pos:column="16"/></literal> <operator pos:line="88" pos:column="17">*<pos:position pos:line="88" pos:column="18"/></operator> <operator pos:line="88" pos:column="19">(<pos:position pos:line="88" pos:column="20"/></operator><operator pos:line="88" pos:column="20">(<pos:position pos:line="88" pos:column="21"/></operator><name pos:line="88" pos:column="21">double<pos:position pos:line="88" pos:column="27"/></name><operator pos:line="88" pos:column="27">)<pos:position pos:line="88" pos:column="28"/></operator> <name><name pos:line="88" pos:column="29">cb<pos:position pos:line="88" pos:column="31"/></name><operator pos:line="88" pos:column="31">-&gt;<pos:position pos:line="88" pos:column="36"/></operator><name pos:line="88" pos:column="33">send_buf_fill<pos:position pos:line="88" pos:column="46"/></name></name><operator pos:line="88" pos:column="46">)<pos:position pos:line="88" pos:column="47"/></operator> <operator pos:line="88" pos:column="48">/<pos:position pos:line="88" pos:column="49"/></operator>
          <operator pos:line="89" pos:column="11">(<pos:position pos:line="89" pos:column="12"/></operator><operator pos:line="89" pos:column="12">(<pos:position pos:line="89" pos:column="13"/></operator><name pos:line="89" pos:column="13">double<pos:position pos:line="89" pos:column="19"/></name><operator pos:line="89" pos:column="19">)<pos:position pos:line="89" pos:column="20"/></operator> <sizeof pos:line="89" pos:column="21">sizeof<argument_list pos:line="89" pos:column="27">(<argument><expr><name><name pos:line="89" pos:column="28">cb<pos:position pos:line="89" pos:column="30"/></name><operator pos:line="89" pos:column="30">-&gt;<pos:position pos:line="89" pos:column="35"/></operator><name pos:line="89" pos:column="32">send_buf<pos:position pos:line="89" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="41"/></argument_list></sizeof><operator pos:line="89" pos:column="41">)<pos:position pos:line="89" pos:column="42"/></operator></expr></argument>,
          <argument><expr><name pos:line="90" pos:column="11">message<pos:position pos:line="90" pos:column="18"/></name></expr></argument>)<pos:position pos:line="90" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="92" pos:column="5">pthread_mutex_unlock<pos:position pos:line="92" pos:column="25"/></name><argument_list pos:line="92" pos:column="25">(<argument><expr><operator pos:line="92" pos:column="26">&amp;<pos:position pos:line="92" pos:column="31"/></operator><name><name pos:line="92" pos:column="27">cb<pos:position pos:line="92" pos:column="29"/></name><operator pos:line="92" pos:column="29">-&gt;<pos:position pos:line="92" pos:column="34"/></operator><name pos:line="92" pos:column="31">send_lock<pos:position pos:line="92" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="42"/></expr_stmt>

    <return pos:line="94" pos:column="5">return <expr><literal type="number" pos:line="94" pos:column="12">0<pos:position pos:line="94" pos:column="13"/></literal></expr>;<pos:position pos:line="94" pos:column="14"/></return>
}<pos:position pos:line="95" pos:column="2"/></block></function></unit>

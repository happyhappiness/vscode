<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_72_collectd-4.5.0.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">lt_dlhandle<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">lt_dlopenext<pos:position pos:line="2" pos:column="13"/></name> <argument_list pos:line="2" pos:column="14">(<argument><expr><name pos:line="2" pos:column="15">filename<pos:position pos:line="2" pos:column="23"/></name></expr></argument>)<pos:position pos:line="2" pos:column="24"/></argument_list>
     const <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier><name pos:line="3" pos:column="18">filename<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">lt_dlhandle<pos:position pos:line="5" pos:column="14"/></name></type>	<name pos:line="5" pos:column="17">handle<pos:position pos:line="5" pos:column="23"/></name>		<init pos:line="5" pos:column="33">= <expr><literal type="number" pos:line="5" pos:column="35">0<pos:position pos:line="5" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type>	<name pos:line="6" pos:column="17">tmp<pos:position pos:line="6" pos:column="20"/></name>		<init pos:line="6" pos:column="33">= <expr><literal type="number" pos:line="6" pos:column="35">0<pos:position pos:line="6" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type>	<name pos:line="7" pos:column="17">ext<pos:position pos:line="7" pos:column="20"/></name>		<init pos:line="7" pos:column="33">= <expr><literal type="number" pos:line="7" pos:column="35">0<pos:position pos:line="7" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type>	<name pos:line="8" pos:column="17">len<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type>		<name pos:line="9" pos:column="17">errors<pos:position pos:line="9" pos:column="23"/></name>		<init pos:line="9" pos:column="33">= <expr><literal type="number" pos:line="9" pos:column="35">0<pos:position pos:line="9" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">filename<pos:position pos:line="11" pos:column="16"/></name></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17">
    <block pos:line="12" pos:column="5">{
      <return pos:line="13" pos:column="7">return <expr><call><name pos:line="13" pos:column="14">lt_dlopen<pos:position pos:line="13" pos:column="23"/></name> <argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">filename<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">assert<pos:position pos:line="16" pos:column="9"/></name> <argument_list pos:line="16" pos:column="10">(<argument><expr><name pos:line="16" pos:column="11">filename<pos:position pos:line="16" pos:column="19"/></name></expr></argument>)<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><name pos:line="18" pos:column="3">len<pos:position pos:line="18" pos:column="6"/></name> <operator pos:line="18" pos:column="7">=<pos:position pos:line="18" pos:column="8"/></operator> <call><name pos:line="18" pos:column="9">LT_STRLEN<pos:position pos:line="18" pos:column="18"/></name> <argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">filename<pos:position pos:line="18" pos:column="28"/></name></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">ext<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <call><name pos:line="19" pos:column="9">strrchr<pos:position pos:line="19" pos:column="16"/></name> <argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">filename<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="28">'.'<pos:position pos:line="19" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* If FILENAME already bears a suitable extension, there is no need
     to try appending additional extensions.  */</comment>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">ext<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">&amp;&amp;<pos:position pos:line="23" pos:column="21"/></operator> <operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><operator pos:line="23" pos:column="15">(<pos:position pos:line="23" pos:column="16"/></operator><call><name pos:line="23" pos:column="16">strcmp<pos:position pos:line="23" pos:column="22"/></name> <argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">ext<pos:position pos:line="23" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="29">archive_ext<pos:position pos:line="23" pos:column="40"/></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call> <operator pos:line="23" pos:column="42">==<pos:position pos:line="23" pos:column="44"/></operator> <literal type="number" pos:line="23" pos:column="45">0<pos:position pos:line="23" pos:column="46"/></literal><operator pos:line="23" pos:column="46">)<pos:position pos:line="23" pos:column="47"/></operator>
<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">LTDL_SHLIB_EXT<pos:position pos:line="24" pos:column="22"/></name></cpp:ifdef>
	      <operator pos:line="25" pos:column="15">||<pos:position pos:line="25" pos:column="17"/></operator> <operator pos:line="25" pos:column="18">(<pos:position pos:line="25" pos:column="19"/></operator><call><name pos:line="25" pos:column="19">strcmp<pos:position pos:line="25" pos:column="25"/></name> <argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">ext<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">shlib_ext<pos:position pos:line="25" pos:column="41"/></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call> <operator pos:line="25" pos:column="43">==<pos:position pos:line="25" pos:column="45"/></operator> <literal type="number" pos:line="25" pos:column="46">0<pos:position pos:line="25" pos:column="47"/></literal><operator pos:line="25" pos:column="47">)<pos:position pos:line="25" pos:column="48"/></operator>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>
      <operator pos:line="27" pos:column="7">)<pos:position pos:line="27" pos:column="8"/></operator></expr>)<pos:position pos:line="27" pos:column="9"/></condition><then pos:line="27" pos:column="9">
    <block pos:line="28" pos:column="5">{
      <return pos:line="29" pos:column="7">return <expr><call><name pos:line="29" pos:column="14">lt_dlopen<pos:position pos:line="29" pos:column="23"/></name> <argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">filename<pos:position pos:line="29" pos:column="33"/></name></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="32" pos:column="3">/* First try appending ARCHIVE_EXT.  */</comment>
  <expr_stmt><expr><name pos:line="33" pos:column="3">tmp<pos:position pos:line="33" pos:column="6"/></name> <operator pos:line="33" pos:column="7">=<pos:position pos:line="33" pos:column="8"/></operator> <call><name pos:line="33" pos:column="9">LT_EMALLOC<pos:position pos:line="33" pos:column="19"/></name> <argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">char<pos:position pos:line="33" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="27">len<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">+<pos:position pos:line="33" pos:column="32"/></operator> <call><name pos:line="33" pos:column="33">LT_STRLEN<pos:position pos:line="33" pos:column="42"/></name> <argument_list pos:line="33" pos:column="43">(<argument><expr><name pos:line="33" pos:column="44">archive_ext<pos:position pos:line="33" pos:column="55"/></name></expr></argument>)<pos:position pos:line="33" pos:column="56"/></argument_list></call> <operator pos:line="33" pos:column="57">+<pos:position pos:line="33" pos:column="58"/></operator> <literal type="number" pos:line="33" pos:column="59">1<pos:position pos:line="33" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><operator pos:line="34" pos:column="7">!<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">tmp<pos:position pos:line="34" pos:column="11"/></name></expr>)<pos:position pos:line="34" pos:column="12"/></condition><then pos:line="34" pos:column="12">
    <block type="pseudo"><return pos:line="35" pos:column="5">return <expr><literal type="number" pos:line="35" pos:column="12">0<pos:position pos:line="35" pos:column="13"/></literal></expr>;<pos:position pos:line="35" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">strcpy<pos:position pos:line="37" pos:column="9"/></name> <argument_list pos:line="37" pos:column="10">(<argument><expr><name pos:line="37" pos:column="11">tmp<pos:position pos:line="37" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="16">filename<pos:position pos:line="37" pos:column="24"/></name></expr></argument>)<pos:position pos:line="37" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">strcat<pos:position pos:line="38" pos:column="9"/></name> <argument_list pos:line="38" pos:column="10">(<argument><expr><name pos:line="38" pos:column="11">tmp<pos:position pos:line="38" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="16">archive_ext<pos:position pos:line="38" pos:column="27"/></name></expr></argument>)<pos:position pos:line="38" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="39" pos:column="3">errors<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <call><name pos:line="39" pos:column="12">try_dlopen<pos:position pos:line="39" pos:column="22"/></name> <argument_list pos:line="39" pos:column="23">(<argument><expr><operator pos:line="39" pos:column="24">&amp;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="25">handle<pos:position pos:line="39" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="33">tmp<pos:position pos:line="39" pos:column="36"/></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>

  <comment type="block" pos:line="41" pos:column="3">/* If we found FILENAME, stop searching -- whether we were able to
     load the file as a module or not.  If the file exists but loading
     failed, it is better to return an error message here than to
     report FILE_NOT_FOUND when the alternatives (foo.so etc) are not
     in the module search path.  */</comment>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">handle<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">||<pos:position pos:line="46" pos:column="16"/></operator> <operator pos:line="46" pos:column="17">(<pos:position pos:line="46" pos:column="18"/></operator><operator pos:line="46" pos:column="18">(<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="19">errors<pos:position pos:line="46" pos:column="25"/></name> <operator pos:line="46" pos:column="26">&gt;<pos:position pos:line="46" pos:column="30"/></operator> <literal type="number" pos:line="46" pos:column="28">0<pos:position pos:line="46" pos:column="29"/></literal><operator pos:line="46" pos:column="29">)<pos:position pos:line="46" pos:column="30"/></operator> <operator pos:line="46" pos:column="31">&amp;&amp;<pos:position pos:line="46" pos:column="41"/></operator> <operator pos:line="46" pos:column="34">!<pos:position pos:line="46" pos:column="35"/></operator><call><name pos:line="46" pos:column="35">file_not_found<pos:position pos:line="46" pos:column="49"/></name> <argument_list pos:line="46" pos:column="50">()<pos:position pos:line="46" pos:column="52"/></argument_list></call><operator pos:line="46" pos:column="52">)<pos:position pos:line="46" pos:column="53"/></operator></expr>)<pos:position pos:line="46" pos:column="54"/></condition><then pos:line="46" pos:column="54">
    <block pos:line="47" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">LT_DLFREE<pos:position pos:line="48" pos:column="16"/></name> <argument_list pos:line="48" pos:column="17">(<argument><expr><name pos:line="48" pos:column="18">tmp<pos:position pos:line="48" pos:column="21"/></name></expr></argument>)<pos:position pos:line="48" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="23"/></expr_stmt>
      <return pos:line="49" pos:column="7">return <expr><name pos:line="49" pos:column="14">handle<pos:position pos:line="49" pos:column="20"/></name></expr>;<pos:position pos:line="49" pos:column="21"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">ifdef<pos:position pos:line="52" pos:column="7"/></cpp:directive> <name pos:line="52" pos:column="8">LTDL_SHLIB_EXT<pos:position pos:line="52" pos:column="22"/></name></cpp:ifdef>
  <comment type="block" pos:line="53" pos:column="3">/* Try appending SHLIB_EXT.   */</comment>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><call><name pos:line="54" pos:column="7">LT_STRLEN<pos:position pos:line="54" pos:column="16"/></name> <argument_list pos:line="54" pos:column="17">(<argument><expr><name pos:line="54" pos:column="18">shlib_ext<pos:position pos:line="54" pos:column="27"/></name></expr></argument>)<pos:position pos:line="54" pos:column="28"/></argument_list></call> <operator pos:line="54" pos:column="29">&gt;<pos:position pos:line="54" pos:column="33"/></operator> <call><name pos:line="54" pos:column="31">LT_STRLEN<pos:position pos:line="54" pos:column="40"/></name> <argument_list pos:line="54" pos:column="41">(<argument><expr><name pos:line="54" pos:column="42">archive_ext<pos:position pos:line="54" pos:column="53"/></name></expr></argument>)<pos:position pos:line="54" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="55"/></condition><then pos:line="54" pos:column="55">
    <block pos:line="55" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">LT_DLFREE<pos:position pos:line="56" pos:column="16"/></name> <argument_list pos:line="56" pos:column="17">(<argument><expr><name pos:line="56" pos:column="18">tmp<pos:position pos:line="56" pos:column="21"/></name></expr></argument>)<pos:position pos:line="56" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="57" pos:column="7">tmp<pos:position pos:line="57" pos:column="10"/></name> <operator pos:line="57" pos:column="11">=<pos:position pos:line="57" pos:column="12"/></operator> <call><name pos:line="57" pos:column="13">LT_EMALLOC<pos:position pos:line="57" pos:column="23"/></name> <argument_list pos:line="57" pos:column="24">(<argument><expr><name pos:line="57" pos:column="25">char<pos:position pos:line="57" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="31">len<pos:position pos:line="57" pos:column="34"/></name> <operator pos:line="57" pos:column="35">+<pos:position pos:line="57" pos:column="36"/></operator> <call><name pos:line="57" pos:column="37">LT_STRLEN<pos:position pos:line="57" pos:column="46"/></name> <argument_list pos:line="57" pos:column="47">(<argument><expr><name pos:line="57" pos:column="48">shlib_ext<pos:position pos:line="57" pos:column="57"/></name></expr></argument>)<pos:position pos:line="57" pos:column="58"/></argument_list></call> <operator pos:line="57" pos:column="59">+<pos:position pos:line="57" pos:column="60"/></operator> <literal type="number" pos:line="57" pos:column="61">1<pos:position pos:line="57" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="64"/></expr_stmt>
      <if pos:line="58" pos:column="7">if <condition pos:line="58" pos:column="10">(<expr><operator pos:line="58" pos:column="11">!<pos:position pos:line="58" pos:column="12"/></operator><name pos:line="58" pos:column="12">tmp<pos:position pos:line="58" pos:column="15"/></name></expr>)<pos:position pos:line="58" pos:column="16"/></condition><then pos:line="58" pos:column="16">
	<block type="pseudo"><return pos:line="59" pos:column="9">return <expr><literal type="number" pos:line="59" pos:column="16">0<pos:position pos:line="59" pos:column="17"/></literal></expr>;<pos:position pos:line="59" pos:column="18"/></return></block></then></if>

      <expr_stmt><expr><call><name pos:line="61" pos:column="7">strcpy<pos:position pos:line="61" pos:column="13"/></name> <argument_list pos:line="61" pos:column="14">(<argument><expr><name pos:line="61" pos:column="15">tmp<pos:position pos:line="61" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="20">filename<pos:position pos:line="61" pos:column="28"/></name></expr></argument>)<pos:position pos:line="61" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then>
  <else pos:line="63" pos:column="3">else
    <block pos:line="64" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="65" pos:column="7">tmp<pos:position pos:line="65" pos:column="10"/></name><index pos:line="65" pos:column="10">[<expr><name pos:line="65" pos:column="11">len<pos:position pos:line="65" pos:column="14"/></name></expr>]<pos:position pos:line="65" pos:column="15"/></index></name> <operator pos:line="65" pos:column="16">=<pos:position pos:line="65" pos:column="17"/></operator> <name pos:line="65" pos:column="18">LT_EOS_CHAR<pos:position pos:line="65" pos:column="29"/></name></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="68" pos:column="3">strcat<pos:position pos:line="68" pos:column="9"/></name><argument_list pos:line="68" pos:column="9">(<argument><expr><name pos:line="68" pos:column="10">tmp<pos:position pos:line="68" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="15">shlib_ext<pos:position pos:line="68" pos:column="24"/></name></expr></argument>)<pos:position pos:line="68" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="69" pos:column="3">errors<pos:position pos:line="69" pos:column="9"/></name> <operator pos:line="69" pos:column="10">=<pos:position pos:line="69" pos:column="11"/></operator> <call><name pos:line="69" pos:column="12">try_dlopen<pos:position pos:line="69" pos:column="22"/></name> <argument_list pos:line="69" pos:column="23">(<argument><expr><operator pos:line="69" pos:column="24">&amp;<pos:position pos:line="69" pos:column="29"/></operator><name pos:line="69" pos:column="25">handle<pos:position pos:line="69" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="33">tmp<pos:position pos:line="69" pos:column="36"/></name></expr></argument>)<pos:position pos:line="69" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="38"/></expr_stmt>

  <comment type="block" pos:line="71" pos:column="3">/* As before, if the file was found but loading failed, return now
     with the current error message.  */</comment>
  <if pos:line="73" pos:column="3">if <condition pos:line="73" pos:column="6">(<expr><name pos:line="73" pos:column="7">handle<pos:position pos:line="73" pos:column="13"/></name> <operator pos:line="73" pos:column="14">||<pos:position pos:line="73" pos:column="16"/></operator> <operator pos:line="73" pos:column="17">(<pos:position pos:line="73" pos:column="18"/></operator><operator pos:line="73" pos:column="18">(<pos:position pos:line="73" pos:column="19"/></operator><name pos:line="73" pos:column="19">errors<pos:position pos:line="73" pos:column="25"/></name> <operator pos:line="73" pos:column="26">&gt;<pos:position pos:line="73" pos:column="30"/></operator> <literal type="number" pos:line="73" pos:column="28">0<pos:position pos:line="73" pos:column="29"/></literal><operator pos:line="73" pos:column="29">)<pos:position pos:line="73" pos:column="30"/></operator> <operator pos:line="73" pos:column="31">&amp;&amp;<pos:position pos:line="73" pos:column="41"/></operator> <operator pos:line="73" pos:column="34">!<pos:position pos:line="73" pos:column="35"/></operator><call><name pos:line="73" pos:column="35">file_not_found<pos:position pos:line="73" pos:column="49"/></name> <argument_list pos:line="73" pos:column="50">()<pos:position pos:line="73" pos:column="52"/></argument_list></call><operator pos:line="73" pos:column="52">)<pos:position pos:line="73" pos:column="53"/></operator></expr>)<pos:position pos:line="73" pos:column="54"/></condition><then pos:line="73" pos:column="54">
    <block pos:line="74" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="75" pos:column="7">LT_DLFREE<pos:position pos:line="75" pos:column="16"/></name> <argument_list pos:line="75" pos:column="17">(<argument><expr><name pos:line="75" pos:column="18">tmp<pos:position pos:line="75" pos:column="21"/></name></expr></argument>)<pos:position pos:line="75" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="23"/></expr_stmt>
      <return pos:line="76" pos:column="7">return <expr><name pos:line="76" pos:column="14">handle<pos:position pos:line="76" pos:column="20"/></name></expr>;<pos:position pos:line="76" pos:column="21"/></return>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif<pos:position pos:line="78" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="80" pos:column="3">/* Still here?  Then we really did fail to locate any of the file
     names we tried.  */</comment>
  <expr_stmt><expr><call><name pos:line="82" pos:column="3">LT_DLMUTEX_SETERROR<pos:position pos:line="82" pos:column="22"/></name> <argument_list pos:line="82" pos:column="23">(<argument><expr><call><name pos:line="82" pos:column="24">LT_DLSTRERROR<pos:position pos:line="82" pos:column="37"/></name> <argument_list pos:line="82" pos:column="38">(<argument><expr><name pos:line="82" pos:column="39">FILE_NOT_FOUND<pos:position pos:line="82" pos:column="53"/></name></expr></argument>)<pos:position pos:line="82" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="83" pos:column="3">LT_DLFREE<pos:position pos:line="83" pos:column="12"/></name> <argument_list pos:line="83" pos:column="13">(<argument><expr><name pos:line="83" pos:column="14">tmp<pos:position pos:line="83" pos:column="17"/></name></expr></argument>)<pos:position pos:line="83" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="19"/></expr_stmt>
  <return pos:line="84" pos:column="3">return <expr><literal type="number" pos:line="84" pos:column="10">0<pos:position pos:line="84" pos:column="11"/></literal></expr>;<pos:position pos:line="84" pos:column="12"/></return>
}<pos:position pos:line="85" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_400_collectd-4.9.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">uc_get_history_by_name<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">name<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="2" pos:column="5">gauge_t<pos:position pos:line="2" pos:column="12"/></name> <modifier pos:line="2" pos:column="13">*<pos:position pos:line="2" pos:column="14"/></modifier></type><name pos:line="2" pos:column="14">ret_history<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">size_t<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">num_steps<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">size_t<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">num_ds<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cache_entry_t<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">ce<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">i<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">pthread_mutex_lock<pos:position pos:line="8" pos:column="21"/></name> <argument_list pos:line="8" pos:column="22">(<argument><expr><operator pos:line="8" pos:column="23">&amp;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="24">cache_lock<pos:position pos:line="8" pos:column="34"/></name></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">status<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">c_avl_get<pos:position pos:line="10" pos:column="21"/></name> <argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">cache_tree<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="35">name<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="41">(<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">void<pos:position pos:line="10" pos:column="46"/></name> <operator pos:line="10" pos:column="47">*<pos:position pos:line="10" pos:column="48"/></operator><operator pos:line="10" pos:column="48">)<pos:position pos:line="10" pos:column="49"/></operator> <operator pos:line="10" pos:column="50">&amp;<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="51">ce<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">status<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">!=<pos:position pos:line="11" pos:column="16"/></operator> <literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">pthread_mutex_unlock<pos:position pos:line="13" pos:column="25"/></name> <argument_list pos:line="13" pos:column="26">(<argument><expr><operator pos:line="13" pos:column="27">&amp;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="28">cache_lock<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">ENOENT<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">)<pos:position pos:line="14" pos:column="21"/></operator></expr>;<pos:position pos:line="14" pos:column="22"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><operator pos:line="17" pos:column="8">(<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">size_t<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">)<pos:position pos:line="17" pos:column="16"/></operator> <name><name pos:line="17" pos:column="17">ce<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">values_num<pos:position pos:line="17" pos:column="31"/></name></name><operator pos:line="17" pos:column="31">)<pos:position pos:line="17" pos:column="32"/></operator> <operator pos:line="17" pos:column="33">!=<pos:position pos:line="17" pos:column="35"/></operator> <name pos:line="17" pos:column="36">num_ds<pos:position pos:line="17" pos:column="42"/></name></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">pthread_mutex_unlock<pos:position pos:line="19" pos:column="25"/></name> <argument_list pos:line="19" pos:column="26">(<argument><expr><operator pos:line="19" pos:column="27">&amp;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="28">cache_lock<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><operator pos:line="20" pos:column="13">-<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">EINVAL<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">)<pos:position pos:line="20" pos:column="21"/></operator></expr>;<pos:position pos:line="20" pos:column="22"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="23" pos:column="3">/* Check if there are enough values available. If not, increase the buffer
   * size. */</comment>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name><name pos:line="25" pos:column="7">ce<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">history_length<pos:position pos:line="25" pos:column="25"/></name></name> <operator pos:line="25" pos:column="26">&lt;<pos:position pos:line="25" pos:column="30"/></operator> <name pos:line="25" pos:column="28">num_steps<pos:position pos:line="25" pos:column="37"/></name></expr>)<pos:position pos:line="25" pos:column="38"/></condition><then pos:line="25" pos:column="38">
  <block pos:line="26" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">gauge_t<pos:position pos:line="27" pos:column="12"/></name> <modifier pos:line="27" pos:column="13">*<pos:position pos:line="27" pos:column="14"/></modifier></type><name pos:line="27" pos:column="14">tmp<pos:position pos:line="27" pos:column="17"/></name></decl>;<pos:position pos:line="27" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">size_t<pos:position pos:line="28" pos:column="11"/></name></type> <name pos:line="28" pos:column="12">i<pos:position pos:line="28" pos:column="13"/></name></decl>;<pos:position pos:line="28" pos:column="14"/></decl_stmt>

    <expr_stmt><expr><name pos:line="30" pos:column="5">tmp<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <call><name pos:line="30" pos:column="11">realloc<pos:position pos:line="30" pos:column="18"/></name> <argument_list pos:line="30" pos:column="19">(<argument><expr><name><name pos:line="30" pos:column="20">ce<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">-&gt;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="24">history<pos:position pos:line="30" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="33">sizeof <argument_list pos:line="30" pos:column="40">(<argument><expr><operator pos:line="30" pos:column="41">*<pos:position pos:line="30" pos:column="42"/></operator><name><name pos:line="30" pos:column="42">ce<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">-&gt;<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="46">history<pos:position pos:line="30" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></sizeof>
	<operator pos:line="31" pos:column="9">*<pos:position pos:line="31" pos:column="10"/></operator> <name pos:line="31" pos:column="11">num_steps<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">*<pos:position pos:line="31" pos:column="22"/></operator> <name><name pos:line="31" pos:column="23">ce<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">-&gt;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="27">values_num<pos:position pos:line="31" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">tmp<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">==<pos:position pos:line="32" pos:column="15"/></operator> <name pos:line="32" pos:column="16">NULL<pos:position pos:line="32" pos:column="20"/></name></expr>)<pos:position pos:line="32" pos:column="21"/></condition><then pos:line="32" pos:column="21">
    <block pos:line="33" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">pthread_mutex_unlock<pos:position pos:line="34" pos:column="27"/></name> <argument_list pos:line="34" pos:column="28">(<argument><expr><operator pos:line="34" pos:column="29">&amp;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="30">cache_lock<pos:position pos:line="34" pos:column="40"/></name></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
      <return pos:line="35" pos:column="7">return <expr><operator pos:line="35" pos:column="14">(<pos:position pos:line="35" pos:column="15"/></operator><operator pos:line="35" pos:column="15">-<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">ENOMEM<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">)<pos:position pos:line="35" pos:column="23"/></operator></expr>;<pos:position pos:line="35" pos:column="24"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <for pos:line="38" pos:column="5">for <control pos:line="38" pos:column="9">(<init><expr><name pos:line="38" pos:column="10">i<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <name><name pos:line="38" pos:column="14">ce<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">-&gt;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="18">history_length<pos:position pos:line="38" pos:column="32"/></name></name> <operator pos:line="38" pos:column="33">*<pos:position pos:line="38" pos:column="34"/></operator> <name><name pos:line="38" pos:column="35">ce<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">-&gt;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="39">values_num<pos:position pos:line="38" pos:column="49"/></name></name></expr>;<pos:position pos:line="38" pos:column="50"/></init>
	<condition><expr><name pos:line="39" pos:column="9">i<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">&lt;<pos:position pos:line="39" pos:column="15"/></operator> <operator pos:line="39" pos:column="13">(<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">num_steps<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">*<pos:position pos:line="39" pos:column="25"/></operator> <name><name pos:line="39" pos:column="26">ce<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">values_num<pos:position pos:line="39" pos:column="40"/></name></name><operator pos:line="39" pos:column="40">)<pos:position pos:line="39" pos:column="41"/></operator></expr>;<pos:position pos:line="39" pos:column="42"/></condition>
	<incr><expr><name pos:line="40" pos:column="9">i<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">++<pos:position pos:line="40" pos:column="12"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="13"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="7">tmp<pos:position pos:line="41" pos:column="10"/></name><index pos:line="41" pos:column="10">[<expr><name pos:line="41" pos:column="11">i<pos:position pos:line="41" pos:column="12"/></name></expr>]<pos:position pos:line="41" pos:column="13"/></index></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <name pos:line="41" pos:column="16">NAN<pos:position pos:line="41" pos:column="19"/></name></expr>;<pos:position pos:line="41" pos:column="20"/></expr_stmt></block></for>

    <expr_stmt><expr><name><name pos:line="43" pos:column="5">ce<pos:position pos:line="43" pos:column="7"/></name><operator pos:line="43" pos:column="7">-&gt;<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="9">history<pos:position pos:line="43" pos:column="16"/></name></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <name pos:line="43" pos:column="19">tmp<pos:position pos:line="43" pos:column="22"/></name></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">ce<pos:position pos:line="44" pos:column="7"/></name><operator pos:line="44" pos:column="7">-&gt;<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="9">history_length<pos:position pos:line="44" pos:column="23"/></name></name> <operator pos:line="44" pos:column="24">=<pos:position pos:line="44" pos:column="25"/></operator> <name pos:line="44" pos:column="26">num_steps<pos:position pos:line="44" pos:column="35"/></name></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if> <comment type="block" pos:line="45" pos:column="5">/* if (ce-&gt;history_length &lt; num_steps) */</comment>

  <comment type="block" pos:line="47" pos:column="3">/* Copy the values to the output buffer. */</comment>
  <for pos:line="48" pos:column="3">for <control pos:line="48" pos:column="7">(<init><expr><name pos:line="48" pos:column="8">i<pos:position pos:line="48" pos:column="9"/></name> <operator pos:line="48" pos:column="10">=<pos:position pos:line="48" pos:column="11"/></operator> <literal type="number" pos:line="48" pos:column="12">0<pos:position pos:line="48" pos:column="13"/></literal></expr>;<pos:position pos:line="48" pos:column="14"/></init> <condition><expr><name pos:line="48" pos:column="15">i<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">&lt;<pos:position pos:line="48" pos:column="21"/></operator> <name pos:line="48" pos:column="19">num_steps<pos:position pos:line="48" pos:column="28"/></name></expr>;<pos:position pos:line="48" pos:column="29"/></condition> <incr><expr><name pos:line="48" pos:column="30">i<pos:position pos:line="48" pos:column="31"/></name><operator pos:line="48" pos:column="31">++<pos:position pos:line="48" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="48" pos:column="34"/></control>
  <block pos:line="49" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="50" pos:column="5">size_t<pos:position pos:line="50" pos:column="11"/></name></type> <name pos:line="50" pos:column="12">src_index<pos:position pos:line="50" pos:column="21"/></name></decl>;<pos:position pos:line="50" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="51" pos:column="5">size_t<pos:position pos:line="51" pos:column="11"/></name></type> <name pos:line="51" pos:column="12">dst_index<pos:position pos:line="51" pos:column="21"/></name></decl>;<pos:position pos:line="51" pos:column="22"/></decl_stmt>

    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">i<pos:position pos:line="53" pos:column="10"/></name> <operator pos:line="53" pos:column="11">&lt;<pos:position pos:line="53" pos:column="15"/></operator> <name><name pos:line="53" pos:column="13">ce<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">-&gt;<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="17">history_index<pos:position pos:line="53" pos:column="30"/></name></name></expr>)<pos:position pos:line="53" pos:column="31"/></condition><then pos:line="53" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="7">src_index<pos:position pos:line="54" pos:column="16"/></name> <operator pos:line="54" pos:column="17">=<pos:position pos:line="54" pos:column="18"/></operator> <name><name pos:line="54" pos:column="19">ce<pos:position pos:line="54" pos:column="21"/></name><operator pos:line="54" pos:column="21">-&gt;<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="23">history_index<pos:position pos:line="54" pos:column="36"/></name></name> <operator pos:line="54" pos:column="37">-<pos:position pos:line="54" pos:column="38"/></operator> <operator pos:line="54" pos:column="39">(<pos:position pos:line="54" pos:column="40"/></operator><name pos:line="54" pos:column="40">i<pos:position pos:line="54" pos:column="41"/></name> <operator pos:line="54" pos:column="42">+<pos:position pos:line="54" pos:column="43"/></operator> <literal type="number" pos:line="54" pos:column="44">1<pos:position pos:line="54" pos:column="45"/></literal><operator pos:line="54" pos:column="45">)<pos:position pos:line="54" pos:column="46"/></operator></expr>;<pos:position pos:line="54" pos:column="47"/></expr_stmt></block></then>
    <else pos:line="55" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="7">src_index<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">=<pos:position pos:line="56" pos:column="18"/></operator> <name><name pos:line="56" pos:column="19">ce<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">-&gt;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="23">history_length<pos:position pos:line="56" pos:column="37"/></name></name> <operator pos:line="56" pos:column="38">+<pos:position pos:line="56" pos:column="39"/></operator> <name><name pos:line="56" pos:column="40">ce<pos:position pos:line="56" pos:column="42"/></name><operator pos:line="56" pos:column="42">-&gt;<pos:position pos:line="56" pos:column="47"/></operator><name pos:line="56" pos:column="44">history_index<pos:position pos:line="56" pos:column="57"/></name></name> <operator pos:line="56" pos:column="58">-<pos:position pos:line="56" pos:column="59"/></operator> <operator pos:line="56" pos:column="60">(<pos:position pos:line="56" pos:column="61"/></operator><name pos:line="56" pos:column="61">i<pos:position pos:line="56" pos:column="62"/></name> <operator pos:line="56" pos:column="63">+<pos:position pos:line="56" pos:column="64"/></operator> <literal type="number" pos:line="56" pos:column="65">1<pos:position pos:line="56" pos:column="66"/></literal><operator pos:line="56" pos:column="66">)<pos:position pos:line="56" pos:column="67"/></operator></expr>;<pos:position pos:line="56" pos:column="68"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name pos:line="57" pos:column="5">src_index<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">=<pos:position pos:line="57" pos:column="16"/></operator> <name pos:line="57" pos:column="17">src_index<pos:position pos:line="57" pos:column="26"/></name> <operator pos:line="57" pos:column="27">*<pos:position pos:line="57" pos:column="28"/></operator> <name pos:line="57" pos:column="29">num_ds<pos:position pos:line="57" pos:column="35"/></name></expr>;<pos:position pos:line="57" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name pos:line="59" pos:column="5">dst_index<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">=<pos:position pos:line="59" pos:column="16"/></operator> <name pos:line="59" pos:column="17">i<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">*<pos:position pos:line="59" pos:column="20"/></operator> <name pos:line="59" pos:column="21">num_ds<pos:position pos:line="59" pos:column="27"/></name></expr>;<pos:position pos:line="59" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="61" pos:column="5">memcpy<pos:position pos:line="61" pos:column="11"/></name> <argument_list pos:line="61" pos:column="12">(<argument><expr><name pos:line="61" pos:column="13">ret_history<pos:position pos:line="61" pos:column="24"/></name> <operator pos:line="61" pos:column="25">+<pos:position pos:line="61" pos:column="26"/></operator> <name pos:line="61" pos:column="27">dst_index<pos:position pos:line="61" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="38">ce<pos:position pos:line="61" pos:column="40"/></name><operator pos:line="61" pos:column="40">-&gt;<pos:position pos:line="61" pos:column="45"/></operator><name pos:line="61" pos:column="42">history<pos:position pos:line="61" pos:column="49"/></name></name> <operator pos:line="61" pos:column="50">+<pos:position pos:line="61" pos:column="51"/></operator> <name pos:line="61" pos:column="52">src_index<pos:position pos:line="61" pos:column="61"/></name></expr></argument>,
	<argument><expr><sizeof pos:line="62" pos:column="9">sizeof <argument_list pos:line="62" pos:column="16">(<argument><expr><operator pos:line="62" pos:column="17">*<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="18">ret_history<pos:position pos:line="62" pos:column="29"/></name></expr></argument>)<pos:position pos:line="62" pos:column="30"/></argument_list></sizeof> <operator pos:line="62" pos:column="31">*<pos:position pos:line="62" pos:column="32"/></operator> <name pos:line="62" pos:column="33">num_ds<pos:position pos:line="62" pos:column="39"/></name></expr></argument>)<pos:position pos:line="62" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="63" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="65" pos:column="3">pthread_mutex_unlock<pos:position pos:line="65" pos:column="23"/></name> <argument_list pos:line="65" pos:column="24">(<argument><expr><operator pos:line="65" pos:column="25">&amp;<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="26">cache_lock<pos:position pos:line="65" pos:column="36"/></name></expr></argument>)<pos:position pos:line="65" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="38"/></expr_stmt>

  <return pos:line="67" pos:column="3">return <expr><operator pos:line="67" pos:column="10">(<pos:position pos:line="67" pos:column="11"/></operator><literal type="number" pos:line="67" pos:column="11">0<pos:position pos:line="67" pos:column="12"/></literal><operator pos:line="67" pos:column="12">)<pos:position pos:line="67" pos:column="13"/></operator></expr>;<pos:position pos:line="67" pos:column="14"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

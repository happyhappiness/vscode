<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_296_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ping_thread<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">arg<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list> <comment type="block" pos:line="1" pos:column="37">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">pingobj_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">pingobj<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><name pos:line="3" pos:column="24">NULL<pos:position pos:line="3" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">timeval<pos:position pos:line="5" pos:column="17"/></name></name></type> <name pos:line="5" pos:column="18">tv_begin<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">timeval<pos:position pos:line="6" pos:column="17"/></name></name></type> <name pos:line="6" pos:column="18">tv_end<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">timespec<pos:position pos:line="7" pos:column="18"/></name></name></type> <name pos:line="7" pos:column="19">ts_wait<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">timespec<pos:position pos:line="8" pos:column="18"/></name></name></type> <name pos:line="8" pos:column="19">ts_int<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">count<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">c_complain_t<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">complaint<pos:position pos:line="12" pos:column="25"/></name> <init pos:line="12" pos:column="26">= <expr><name pos:line="12" pos:column="28">C_COMPLAIN_INIT_STATIC<pos:position pos:line="12" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="51"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">pthread_mutex_lock<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><operator pos:line="14" pos:column="22">&amp;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="23">ping_lock<pos:position pos:line="14" pos:column="32"/></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">pingobj<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <call><name pos:line="16" pos:column="13">ping_construct<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">()<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">pingobj<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">==<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">NULL<pos:position pos:line="17" pos:column="22"/></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23"> <block pos:line="17" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ERROR<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><literal type="string" pos:line="18" pos:column="11">"ping plugin: ping_construct failed."<pos:position pos:line="18" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">ping_thread_error<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">pthread_mutex_unlock<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><operator pos:line="20" pos:column="26">&amp;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="27">ping_lock<pos:position pos:line="20" pos:column="36"/></name></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">void<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">*<pos:position pos:line="21" pos:column="20"/></operator><operator pos:line="21" pos:column="20">)<pos:position pos:line="21" pos:column="21"/></operator><operator pos:line="21" pos:column="21">-<pos:position pos:line="21" pos:column="22"/></operator><literal type="number" pos:line="21" pos:column="22">1<pos:position pos:line="21" pos:column="23"/></literal><operator pos:line="21" pos:column="23">)<pos:position pos:line="21" pos:column="24"/></operator></expr>;<pos:position pos:line="21" pos:column="25"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">ping_source<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">!=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">NULL<pos:position pos:line="24" pos:column="26"/></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition><then pos:line="24" pos:column="27">
    <block type="pseudo"><if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name pos:line="25" pos:column="9">ping_setopt<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">pingobj<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="30">PING_OPT_SOURCE<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="47">(<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="48">void<pos:position pos:line="25" pos:column="52"/></name> <operator pos:line="25" pos:column="53">*<pos:position pos:line="25" pos:column="54"/></operator><operator pos:line="25" pos:column="54">)<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="55">ping_source<pos:position pos:line="25" pos:column="66"/></name></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call> <operator pos:line="25" pos:column="68">!=<pos:position pos:line="25" pos:column="70"/></operator> <literal type="number" pos:line="25" pos:column="71">0<pos:position pos:line="25" pos:column="72"/></literal></expr>)<pos:position pos:line="25" pos:column="73"/></condition><then pos:line="25" pos:column="73">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="7">ERROR<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><literal type="string" pos:line="26" pos:column="13">"ping plugin: Failed to set source address: %s"<pos:position pos:line="26" pos:column="60"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="27" pos:column="13">ping_get_error<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">pingobj<pos:position pos:line="27" pos:column="35"/></name></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt></block></then></if></block></then></if>

<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">HAVE_OPING_1_3<pos:position pos:line="29" pos:column="22"/></name></cpp:ifdef>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">ping_device<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">!=<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">NULL<pos:position pos:line="30" pos:column="26"/></name></expr>)<pos:position pos:line="30" pos:column="27"/></condition><then pos:line="30" pos:column="27">
    <block type="pseudo"><if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><call><name pos:line="31" pos:column="9">ping_setopt<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">pingobj<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="30">PING_OPT_DEVICE<pos:position pos:line="31" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="47">(<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="48">void<pos:position pos:line="31" pos:column="52"/></name> <operator pos:line="31" pos:column="53">*<pos:position pos:line="31" pos:column="54"/></operator><operator pos:line="31" pos:column="54">)<pos:position pos:line="31" pos:column="55"/></operator><name pos:line="31" pos:column="55">ping_device<pos:position pos:line="31" pos:column="66"/></name></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call> <operator pos:line="31" pos:column="68">!=<pos:position pos:line="31" pos:column="70"/></operator> <literal type="number" pos:line="31" pos:column="71">0<pos:position pos:line="31" pos:column="72"/></literal></expr>)<pos:position pos:line="31" pos:column="73"/></condition><then pos:line="31" pos:column="73">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="7">ERROR<pos:position pos:line="32" pos:column="12"/></name><argument_list pos:line="32" pos:column="12">(<argument><expr><literal type="string" pos:line="32" pos:column="13">"ping plugin: Failed to set device: %s"<pos:position pos:line="32" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="54">ping_get_error<pos:position pos:line="32" pos:column="68"/></name><argument_list pos:line="32" pos:column="68">(<argument><expr><name pos:line="32" pos:column="69">pingobj<pos:position pos:line="32" pos:column="76"/></name></expr></argument>)<pos:position pos:line="32" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="79"/></expr_stmt></block></then></if></block></then></if>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="35" pos:column="3">ping_setopt<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">pingobj<pos:position pos:line="35" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="24">PING_OPT_TIMEOUT<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="42">(<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="43">void<pos:position pos:line="35" pos:column="47"/></name> <operator pos:line="35" pos:column="48">*<pos:position pos:line="35" pos:column="49"/></operator><operator pos:line="35" pos:column="49">)<pos:position pos:line="35" pos:column="50"/></operator><operator pos:line="35" pos:column="50">&amp;<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="51">ping_timeout<pos:position pos:line="35" pos:column="63"/></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">ping_setopt<pos:position pos:line="36" pos:column="14"/></name><argument_list pos:line="36" pos:column="14">(<argument><expr><name pos:line="36" pos:column="15">pingobj<pos:position pos:line="36" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="24">PING_OPT_TTL<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="38">(<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="39">void<pos:position pos:line="36" pos:column="43"/></name> <operator pos:line="36" pos:column="44">*<pos:position pos:line="36" pos:column="45"/></operator><operator pos:line="36" pos:column="45">)<pos:position pos:line="36" pos:column="46"/></operator><operator pos:line="36" pos:column="46">&amp;<pos:position pos:line="36" pos:column="51"/></operator><name pos:line="36" pos:column="47">ping_ttl<pos:position pos:line="36" pos:column="55"/></name></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt>

  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name pos:line="38" pos:column="7">ping_data<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">!=<pos:position pos:line="38" pos:column="19"/></operator> <name pos:line="38" pos:column="20">NULL<pos:position pos:line="38" pos:column="24"/></name></expr>)<pos:position pos:line="38" pos:column="25"/></condition><then pos:line="38" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="5">ping_setopt<pos:position pos:line="39" pos:column="16"/></name><argument_list pos:line="39" pos:column="16">(<argument><expr><name pos:line="39" pos:column="17">pingobj<pos:position pos:line="39" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="26">PING_OPT_DATA<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="41">(<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="42">void<pos:position pos:line="39" pos:column="46"/></name> <operator pos:line="39" pos:column="47">*<pos:position pos:line="39" pos:column="48"/></operator><operator pos:line="39" pos:column="48">)<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="49">ping_data<pos:position pos:line="39" pos:column="58"/></name></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="60"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="41" pos:column="3">/* Add all the hosts to the ping object. */</comment>
  <expr_stmt><expr><name pos:line="42" pos:column="3">count<pos:position pos:line="42" pos:column="8"/></name> <operator pos:line="42" pos:column="9">=<pos:position pos:line="42" pos:column="10"/></operator> <literal type="number" pos:line="42" pos:column="11">0<pos:position pos:line="42" pos:column="12"/></literal></expr>;<pos:position pos:line="42" pos:column="13"/></expr_stmt>
  <for pos:line="43" pos:column="3">for <control pos:line="43" pos:column="7">(<init><decl><type><name pos:line="43" pos:column="8">hostlist_t<pos:position pos:line="43" pos:column="18"/></name> <modifier pos:line="43" pos:column="19">*<pos:position pos:line="43" pos:column="20"/></modifier></type><name pos:line="43" pos:column="20">hl<pos:position pos:line="43" pos:column="22"/></name> <init pos:line="43" pos:column="23">= <expr><name pos:line="43" pos:column="25">hostlist_head<pos:position pos:line="43" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="43" pos:column="39"/></init> <condition><expr><name pos:line="43" pos:column="40">hl<pos:position pos:line="43" pos:column="42"/></name> <operator pos:line="43" pos:column="43">!=<pos:position pos:line="43" pos:column="45"/></operator> <name pos:line="43" pos:column="46">NULL<pos:position pos:line="43" pos:column="50"/></name></expr>;<pos:position pos:line="43" pos:column="51"/></condition> <incr><expr><name pos:line="43" pos:column="52">hl<pos:position pos:line="43" pos:column="54"/></name> <operator pos:line="43" pos:column="55">=<pos:position pos:line="43" pos:column="56"/></operator> <name><name pos:line="43" pos:column="57">hl<pos:position pos:line="43" pos:column="59"/></name><operator pos:line="43" pos:column="59">-&gt;<pos:position pos:line="43" pos:column="64"/></operator><name pos:line="43" pos:column="61">next<pos:position pos:line="43" pos:column="65"/></name></name></expr></incr>)<pos:position pos:line="43" pos:column="66"/></control> <block pos:line="43" pos:column="67">{
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">int<pos:position pos:line="44" pos:column="8"/></name></type> <name pos:line="44" pos:column="9">tmp_status<pos:position pos:line="44" pos:column="19"/></name></decl>;<pos:position pos:line="44" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">tmp_status<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <call><name pos:line="45" pos:column="18">ping_host_add<pos:position pos:line="45" pos:column="31"/></name><argument_list pos:line="45" pos:column="31">(<argument><expr><name pos:line="45" pos:column="32">pingobj<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="41">hl<pos:position pos:line="45" pos:column="43"/></name><operator pos:line="45" pos:column="43">-&gt;<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="45">host<pos:position pos:line="45" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="51"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">tmp_status<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">!=<pos:position pos:line="46" pos:column="22"/></operator> <literal type="number" pos:line="46" pos:column="23">0<pos:position pos:line="46" pos:column="24"/></literal></expr>)<pos:position pos:line="46" pos:column="25"/></condition><then pos:line="46" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="7">WARNING<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><literal type="string" pos:line="47" pos:column="15">"ping plugin: ping_host_add (%s) failed: %s"<pos:position pos:line="47" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="61">hl<pos:position pos:line="47" pos:column="63"/></name><operator pos:line="47" pos:column="63">-&gt;<pos:position pos:line="47" pos:column="68"/></operator><name pos:line="47" pos:column="65">host<pos:position pos:line="47" pos:column="69"/></name></name></expr></argument>,
              <argument><expr><call><name pos:line="48" pos:column="15">ping_get_error<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">pingobj<pos:position pos:line="48" pos:column="37"/></name></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt></block></then>
    <else pos:line="49" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="7">count<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">++<pos:position pos:line="50" pos:column="14"/></operator></expr>;<pos:position pos:line="50" pos:column="15"/></expr_stmt></block></else></if>
  }<pos:position pos:line="51" pos:column="4"/></block></for>

  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><name pos:line="53" pos:column="7">count<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">==<pos:position pos:line="53" pos:column="15"/></operator> <literal type="number" pos:line="53" pos:column="16">0<pos:position pos:line="53" pos:column="17"/></literal></expr>)<pos:position pos:line="53" pos:column="18"/></condition><then pos:line="53" pos:column="18"> <block pos:line="53" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">ERROR<pos:position pos:line="54" pos:column="10"/></name><argument_list pos:line="54" pos:column="10">(<argument><expr><literal type="string" pos:line="54" pos:column="11">"ping plugin: No host could be added to ping object. Giving up."<pos:position pos:line="54" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><name pos:line="55" pos:column="5">ping_thread_error<pos:position pos:line="55" pos:column="22"/></name> <operator pos:line="55" pos:column="23">=<pos:position pos:line="55" pos:column="24"/></operator> <literal type="number" pos:line="55" pos:column="25">1<pos:position pos:line="55" pos:column="26"/></literal></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">pthread_mutex_unlock<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><operator pos:line="56" pos:column="26">&amp;<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="27">ping_lock<pos:position pos:line="56" pos:column="36"/></name></expr></argument>)<pos:position pos:line="56" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="38"/></expr_stmt>
    <return pos:line="57" pos:column="5">return <expr><operator pos:line="57" pos:column="12">(<pos:position pos:line="57" pos:column="13"/></operator><operator pos:line="57" pos:column="13">(<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">void<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">*<pos:position pos:line="57" pos:column="20"/></operator><operator pos:line="57" pos:column="20">)<pos:position pos:line="57" pos:column="21"/></operator><operator pos:line="57" pos:column="21">-<pos:position pos:line="57" pos:column="22"/></operator><literal type="number" pos:line="57" pos:column="22">1<pos:position pos:line="57" pos:column="23"/></literal><operator pos:line="57" pos:column="23">)<pos:position pos:line="57" pos:column="24"/></operator></expr>;<pos:position pos:line="57" pos:column="25"/></return>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="60" pos:column="3">/* Set up `ts_int' */</comment>
  <block pos:line="61" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="62" pos:column="5">double<pos:position pos:line="62" pos:column="11"/></name></type> <name pos:line="62" pos:column="12">temp_sec<pos:position pos:line="62" pos:column="20"/></name></decl>;<pos:position pos:line="62" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="63" pos:column="5">double<pos:position pos:line="63" pos:column="11"/></name></type> <name pos:line="63" pos:column="12">temp_nsec<pos:position pos:line="63" pos:column="21"/></name></decl>;<pos:position pos:line="63" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><name pos:line="65" pos:column="5">temp_nsec<pos:position pos:line="65" pos:column="14"/></name> <operator pos:line="65" pos:column="15">=<pos:position pos:line="65" pos:column="16"/></operator> <call><name pos:line="65" pos:column="17">modf<pos:position pos:line="65" pos:column="21"/></name><argument_list pos:line="65" pos:column="21">(<argument><expr><name pos:line="65" pos:column="22">ping_interval<pos:position pos:line="65" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="37">&amp;<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="38">temp_sec<pos:position pos:line="65" pos:column="46"/></name></expr></argument>)<pos:position pos:line="65" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="66" pos:column="5">ts_int<pos:position pos:line="66" pos:column="11"/></name><operator pos:line="66" pos:column="11">.<pos:position pos:line="66" pos:column="12"/></operator><name pos:line="66" pos:column="12">tv_sec<pos:position pos:line="66" pos:column="18"/></name></name> <operator pos:line="66" pos:column="19">=<pos:position pos:line="66" pos:column="20"/></operator> <operator pos:line="66" pos:column="21">(<pos:position pos:line="66" pos:column="22"/></operator><name pos:line="66" pos:column="22">time_t<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">)<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="29">temp_sec<pos:position pos:line="66" pos:column="37"/></name></expr>;<pos:position pos:line="66" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">ts_int<pos:position pos:line="67" pos:column="11"/></name><operator pos:line="67" pos:column="11">.<pos:position pos:line="67" pos:column="12"/></operator><name pos:line="67" pos:column="12">tv_nsec<pos:position pos:line="67" pos:column="19"/></name></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <call pos:line="67" pos:column="22">(<name pos:line="67" pos:column="23">long<pos:position pos:line="67" pos:column="27"/></name>)<argument_list pos:line="67" pos:column="28">(<argument><expr><name pos:line="67" pos:column="29">temp_nsec<pos:position pos:line="67" pos:column="38"/></name> <operator pos:line="67" pos:column="39">*<pos:position pos:line="67" pos:column="40"/></operator> <literal type="number" pos:line="67" pos:column="41">1000000000L<pos:position pos:line="67" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="54"/></expr_stmt>
  }<pos:position pos:line="68" pos:column="4"/></block>

  <while pos:line="70" pos:column="3">while <condition pos:line="70" pos:column="9">(<expr><name pos:line="70" pos:column="10">ping_thread_loop<pos:position pos:line="70" pos:column="26"/></name> <operator pos:line="70" pos:column="27">&gt;<pos:position pos:line="70" pos:column="31"/></operator> <literal type="number" pos:line="70" pos:column="29">0<pos:position pos:line="70" pos:column="30"/></literal></expr>)<pos:position pos:line="70" pos:column="31"/></condition> <block pos:line="70" pos:column="32">{
    <decl_stmt><decl><type><name pos:line="71" pos:column="5">int<pos:position pos:line="71" pos:column="8"/></name></type> <name pos:line="71" pos:column="9">status<pos:position pos:line="71" pos:column="15"/></name></decl>;<pos:position pos:line="71" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="72" pos:column="5">_Bool<pos:position pos:line="72" pos:column="10"/></name></type> <name pos:line="72" pos:column="11">send_successful<pos:position pos:line="72" pos:column="26"/></name> <init pos:line="72" pos:column="27">= <expr><literal type="number" pos:line="72" pos:column="29">0<pos:position pos:line="72" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="72" pos:column="31"/></decl_stmt>

    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><call><name pos:line="74" pos:column="9">gettimeofday<pos:position pos:line="74" pos:column="21"/></name><argument_list pos:line="74" pos:column="21">(<argument><expr><operator pos:line="74" pos:column="22">&amp;<pos:position pos:line="74" pos:column="27"/></operator><name pos:line="74" pos:column="23">tv_begin<pos:position pos:line="74" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="33">NULL<pos:position pos:line="74" pos:column="37"/></name></expr></argument>)<pos:position pos:line="74" pos:column="38"/></argument_list></call> <operator pos:line="74" pos:column="39">&lt;<pos:position pos:line="74" pos:column="43"/></operator> <literal type="number" pos:line="74" pos:column="41">0<pos:position pos:line="74" pos:column="42"/></literal></expr>)<pos:position pos:line="74" pos:column="43"/></condition><then pos:line="74" pos:column="43"> <block pos:line="74" pos:column="44">{
      <decl_stmt><decl><type><name pos:line="75" pos:column="7">char<pos:position pos:line="75" pos:column="11"/></name></type> <name><name pos:line="75" pos:column="12">errbuf<pos:position pos:line="75" pos:column="18"/></name><index pos:line="75" pos:column="18">[<expr><literal type="number" pos:line="75" pos:column="19">1024<pos:position pos:line="75" pos:column="23"/></literal></expr>]<pos:position pos:line="75" pos:column="24"/></index></name></decl>;<pos:position pos:line="75" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="76" pos:column="7">ERROR<pos:position pos:line="76" pos:column="12"/></name><argument_list pos:line="76" pos:column="12">(<argument><expr><literal type="string" pos:line="76" pos:column="13">"ping plugin: gettimeofday failed: %s"<pos:position pos:line="76" pos:column="51"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="77" pos:column="13">sstrerror<pos:position pos:line="77" pos:column="22"/></name><argument_list pos:line="77" pos:column="22">(<argument><expr><name pos:line="77" pos:column="23">errno<pos:position pos:line="77" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="30">errbuf<pos:position pos:line="77" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="38">sizeof<argument_list pos:line="77" pos:column="44">(<argument><expr><name pos:line="77" pos:column="45">errbuf<pos:position pos:line="77" pos:column="51"/></name></expr></argument>)<pos:position pos:line="77" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="77" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="78" pos:column="7">ping_thread_error<pos:position pos:line="78" pos:column="24"/></name> <operator pos:line="78" pos:column="25">=<pos:position pos:line="78" pos:column="26"/></operator> <literal type="number" pos:line="78" pos:column="27">1<pos:position pos:line="78" pos:column="28"/></literal></expr>;<pos:position pos:line="78" pos:column="29"/></expr_stmt>
      <break pos:line="79" pos:column="7">break;<pos:position pos:line="79" pos:column="13"/></break>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="82" pos:column="5">pthread_mutex_unlock<pos:position pos:line="82" pos:column="25"/></name><argument_list pos:line="82" pos:column="25">(<argument><expr><operator pos:line="82" pos:column="26">&amp;<pos:position pos:line="82" pos:column="31"/></operator><name pos:line="82" pos:column="27">ping_lock<pos:position pos:line="82" pos:column="36"/></name></expr></argument>)<pos:position pos:line="82" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name pos:line="84" pos:column="5">status<pos:position pos:line="84" pos:column="11"/></name> <operator pos:line="84" pos:column="12">=<pos:position pos:line="84" pos:column="13"/></operator> <call><name pos:line="84" pos:column="14">ping_send<pos:position pos:line="84" pos:column="23"/></name><argument_list pos:line="84" pos:column="23">(<argument><expr><name pos:line="84" pos:column="24">pingobj<pos:position pos:line="84" pos:column="31"/></name></expr></argument>)<pos:position pos:line="84" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="33"/></expr_stmt>
    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><name pos:line="85" pos:column="9">status<pos:position pos:line="85" pos:column="15"/></name> <operator pos:line="85" pos:column="16">&lt;<pos:position pos:line="85" pos:column="20"/></operator> <literal type="number" pos:line="85" pos:column="18">0<pos:position pos:line="85" pos:column="19"/></literal></expr>)<pos:position pos:line="85" pos:column="20"/></condition><then pos:line="85" pos:column="20"> <block pos:line="85" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="86" pos:column="7">c_complain<pos:position pos:line="86" pos:column="17"/></name><argument_list pos:line="86" pos:column="17">(<argument><expr><name pos:line="86" pos:column="18">LOG_ERR<pos:position pos:line="86" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="27">&amp;<pos:position pos:line="86" pos:column="32"/></operator><name pos:line="86" pos:column="28">complaint<pos:position pos:line="86" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="39">"ping plugin: ping_send failed: %s"<pos:position pos:line="86" pos:column="74"/></literal></expr></argument>,
                 <argument><expr><call><name pos:line="87" pos:column="18">ping_get_error<pos:position pos:line="87" pos:column="32"/></name><argument_list pos:line="87" pos:column="32">(<argument><expr><name pos:line="87" pos:column="33">pingobj<pos:position pos:line="87" pos:column="40"/></name></expr></argument>)<pos:position pos:line="87" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="88" pos:column="6"/></block></then> <else pos:line="88" pos:column="7">else <block pos:line="88" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">c_release<pos:position pos:line="89" pos:column="16"/></name><argument_list pos:line="89" pos:column="16">(<argument><expr><name pos:line="89" pos:column="17">LOG_NOTICE<pos:position pos:line="89" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="29">&amp;<pos:position pos:line="89" pos:column="34"/></operator><name pos:line="89" pos:column="30">complaint<pos:position pos:line="89" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="41">"ping plugin: ping_send succeeded."<pos:position pos:line="89" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="78"/></expr_stmt>
      <expr_stmt><expr><name pos:line="90" pos:column="7">send_successful<pos:position pos:line="90" pos:column="22"/></name> <operator pos:line="90" pos:column="23">=<pos:position pos:line="90" pos:column="24"/></operator> <literal type="number" pos:line="90" pos:column="25">1<pos:position pos:line="90" pos:column="26"/></literal></expr>;<pos:position pos:line="90" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="91" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="93" pos:column="5">pthread_mutex_lock<pos:position pos:line="93" pos:column="23"/></name><argument_list pos:line="93" pos:column="23">(<argument><expr><operator pos:line="93" pos:column="24">&amp;<pos:position pos:line="93" pos:column="29"/></operator><name pos:line="93" pos:column="25">ping_lock<pos:position pos:line="93" pos:column="34"/></name></expr></argument>)<pos:position pos:line="93" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="36"/></expr_stmt>

    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><name pos:line="95" pos:column="9">ping_thread_loop<pos:position pos:line="95" pos:column="25"/></name> <operator pos:line="95" pos:column="26">&lt;=<pos:position pos:line="95" pos:column="31"/></operator> <literal type="number" pos:line="95" pos:column="29">0<pos:position pos:line="95" pos:column="30"/></literal></expr>)<pos:position pos:line="95" pos:column="31"/></condition><then pos:line="95" pos:column="31">
      <block type="pseudo"><break pos:line="96" pos:column="7">break;<pos:position pos:line="96" pos:column="13"/></break></block></then></if>

    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><name pos:line="98" pos:column="9">send_successful<pos:position pos:line="98" pos:column="24"/></name></expr>)<pos:position pos:line="98" pos:column="25"/></condition><then pos:line="98" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="99" pos:column="7">(<pos:position pos:line="99" pos:column="8"/></operator><name pos:line="99" pos:column="8">void<pos:position pos:line="99" pos:column="12"/></name><operator pos:line="99" pos:column="12">)<pos:position pos:line="99" pos:column="13"/></operator><call><name pos:line="99" pos:column="13">ping_dispatch_all<pos:position pos:line="99" pos:column="30"/></name><argument_list pos:line="99" pos:column="30">(<argument><expr><name pos:line="99" pos:column="31">pingobj<pos:position pos:line="99" pos:column="38"/></name></expr></argument>)<pos:position pos:line="99" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="40"/></expr_stmt></block></then></if>

    <if pos:line="101" pos:column="5">if <condition pos:line="101" pos:column="8">(<expr><call><name pos:line="101" pos:column="9">gettimeofday<pos:position pos:line="101" pos:column="21"/></name><argument_list pos:line="101" pos:column="21">(<argument><expr><operator pos:line="101" pos:column="22">&amp;<pos:position pos:line="101" pos:column="27"/></operator><name pos:line="101" pos:column="23">tv_end<pos:position pos:line="101" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="31">NULL<pos:position pos:line="101" pos:column="35"/></name></expr></argument>)<pos:position pos:line="101" pos:column="36"/></argument_list></call> <operator pos:line="101" pos:column="37">&lt;<pos:position pos:line="101" pos:column="41"/></operator> <literal type="number" pos:line="101" pos:column="39">0<pos:position pos:line="101" pos:column="40"/></literal></expr>)<pos:position pos:line="101" pos:column="41"/></condition><then pos:line="101" pos:column="41"> <block pos:line="101" pos:column="42">{
      <decl_stmt><decl><type><name pos:line="102" pos:column="7">char<pos:position pos:line="102" pos:column="11"/></name></type> <name><name pos:line="102" pos:column="12">errbuf<pos:position pos:line="102" pos:column="18"/></name><index pos:line="102" pos:column="18">[<expr><literal type="number" pos:line="102" pos:column="19">1024<pos:position pos:line="102" pos:column="23"/></literal></expr>]<pos:position pos:line="102" pos:column="24"/></index></name></decl>;<pos:position pos:line="102" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="103" pos:column="7">ERROR<pos:position pos:line="103" pos:column="12"/></name><argument_list pos:line="103" pos:column="12">(<argument><expr><literal type="string" pos:line="103" pos:column="13">"ping plugin: gettimeofday failed: %s"<pos:position pos:line="103" pos:column="51"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="104" pos:column="13">sstrerror<pos:position pos:line="104" pos:column="22"/></name><argument_list pos:line="104" pos:column="22">(<argument><expr><name pos:line="104" pos:column="23">errno<pos:position pos:line="104" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="30">errbuf<pos:position pos:line="104" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="104" pos:column="38">sizeof<argument_list pos:line="104" pos:column="44">(<argument><expr><name pos:line="104" pos:column="45">errbuf<pos:position pos:line="104" pos:column="51"/></name></expr></argument>)<pos:position pos:line="104" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="104" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="104" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="105" pos:column="7">ping_thread_error<pos:position pos:line="105" pos:column="24"/></name> <operator pos:line="105" pos:column="25">=<pos:position pos:line="105" pos:column="26"/></operator> <literal type="number" pos:line="105" pos:column="27">1<pos:position pos:line="105" pos:column="28"/></literal></expr>;<pos:position pos:line="105" pos:column="29"/></expr_stmt>
      <break pos:line="106" pos:column="7">break;<pos:position pos:line="106" pos:column="13"/></break>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="109" pos:column="5">/* Calculate the absolute time until which to wait and store it in
     * `ts_wait'. */</comment>
    <expr_stmt><expr><call><name pos:line="111" pos:column="5">time_calc<pos:position pos:line="111" pos:column="14"/></name><argument_list pos:line="111" pos:column="14">(<argument><expr><operator pos:line="111" pos:column="15">&amp;<pos:position pos:line="111" pos:column="20"/></operator><name pos:line="111" pos:column="16">ts_wait<pos:position pos:line="111" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="111" pos:column="25">&amp;<pos:position pos:line="111" pos:column="30"/></operator><name pos:line="111" pos:column="26">ts_int<pos:position pos:line="111" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="111" pos:column="34">&amp;<pos:position pos:line="111" pos:column="39"/></operator><name pos:line="111" pos:column="35">tv_begin<pos:position pos:line="111" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="111" pos:column="45">&amp;<pos:position pos:line="111" pos:column="50"/></operator><name pos:line="111" pos:column="46">tv_end<pos:position pos:line="111" pos:column="52"/></name></expr></argument>)<pos:position pos:line="111" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="54"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="113" pos:column="5">pthread_cond_timedwait<pos:position pos:line="113" pos:column="27"/></name><argument_list pos:line="113" pos:column="27">(<argument><expr><operator pos:line="113" pos:column="28">&amp;<pos:position pos:line="113" pos:column="33"/></operator><name pos:line="113" pos:column="29">ping_cond<pos:position pos:line="113" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="113" pos:column="40">&amp;<pos:position pos:line="113" pos:column="45"/></operator><name pos:line="113" pos:column="41">ping_lock<pos:position pos:line="113" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="113" pos:column="52">&amp;<pos:position pos:line="113" pos:column="57"/></operator><name pos:line="113" pos:column="53">ts_wait<pos:position pos:line="113" pos:column="60"/></name></expr></argument>)<pos:position pos:line="113" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="62"/></expr_stmt>
    <if pos:line="114" pos:column="5">if <condition pos:line="114" pos:column="8">(<expr><name pos:line="114" pos:column="9">ping_thread_loop<pos:position pos:line="114" pos:column="25"/></name> <operator pos:line="114" pos:column="26">&lt;=<pos:position pos:line="114" pos:column="31"/></operator> <literal type="number" pos:line="114" pos:column="29">0<pos:position pos:line="114" pos:column="30"/></literal></expr>)<pos:position pos:line="114" pos:column="31"/></condition><then pos:line="114" pos:column="31">
      <block type="pseudo"><break pos:line="115" pos:column="7">break;<pos:position pos:line="115" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="116" pos:column="4"/></block></while> <comment type="block" pos:line="116" pos:column="5">/* while (ping_thread_loop &gt; 0) */</comment>

  <expr_stmt><expr><call><name pos:line="118" pos:column="3">pthread_mutex_unlock<pos:position pos:line="118" pos:column="23"/></name><argument_list pos:line="118" pos:column="23">(<argument><expr><operator pos:line="118" pos:column="24">&amp;<pos:position pos:line="118" pos:column="29"/></operator><name pos:line="118" pos:column="25">ping_lock<pos:position pos:line="118" pos:column="34"/></name></expr></argument>)<pos:position pos:line="118" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="119" pos:column="3">ping_destroy<pos:position pos:line="119" pos:column="15"/></name><argument_list pos:line="119" pos:column="15">(<argument><expr><name pos:line="119" pos:column="16">pingobj<pos:position pos:line="119" pos:column="23"/></name></expr></argument>)<pos:position pos:line="119" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="25"/></expr_stmt>

  <return pos:line="121" pos:column="3">return <expr><operator pos:line="121" pos:column="10">(<pos:position pos:line="121" pos:column="11"/></operator><operator pos:line="121" pos:column="11">(<pos:position pos:line="121" pos:column="12"/></operator><name pos:line="121" pos:column="12">void<pos:position pos:line="121" pos:column="16"/></name> <operator pos:line="121" pos:column="17">*<pos:position pos:line="121" pos:column="18"/></operator><operator pos:line="121" pos:column="18">)<pos:position pos:line="121" pos:column="19"/></operator><literal type="number" pos:line="121" pos:column="19">0<pos:position pos:line="121" pos:column="20"/></literal><operator pos:line="121" pos:column="20">)<pos:position pos:line="121" pos:column="21"/></operator></expr>;<pos:position pos:line="121" pos:column="22"/></return>
}<pos:position pos:line="122" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_724_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cjni_shutdown<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list> <comment type="block" pos:line="1" pos:column="32">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">JNIEnv<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">jvm_env<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">JavaVMAttachArgs<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">args<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><block pos:line="4" pos:column="27">{<expr><literal type="number" pos:line="4" pos:column="28">0<pos:position pos:line="4" pos:column="29"/></literal></expr>}<pos:position pos:line="4" pos:column="30"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">jvm<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">==<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">NULL<pos:position pos:line="7" pos:column="18"/></name></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal><operator pos:line="8" pos:column="14">)<pos:position pos:line="8" pos:column="15"/></operator></expr>;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="10" pos:column="3">jvm_env<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">NULL<pos:position pos:line="10" pos:column="17"/></name></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">args<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">.<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">version<pos:position pos:line="11" pos:column="15"/></name></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">JNI_VERSION_1_2<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">status<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <call><name><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">jvm<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">)<pos:position pos:line="13" pos:column="18"/></operator><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">AttachCurrentThread<pos:position pos:line="13" pos:column="39"/></name></name><argument_list pos:line="13" pos:column="39">(<argument><expr><name pos:line="13" pos:column="40">jvm<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="45">(<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="46">void<pos:position pos:line="13" pos:column="50"/></name> <operator pos:line="13" pos:column="51">*<pos:position pos:line="13" pos:column="52"/></operator><operator pos:line="13" pos:column="52">)<pos:position pos:line="13" pos:column="53"/></operator><operator pos:line="13" pos:column="53">&amp;<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="54">jvm_env<pos:position pos:line="13" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="63">&amp;<pos:position pos:line="13" pos:column="68"/></operator><name pos:line="13" pos:column="64">args<pos:position pos:line="13" pos:column="68"/></name></expr></argument>)<pos:position pos:line="13" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="70"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">status<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">!=<pos:position pos:line="14" pos:column="16"/></operator> <literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19"> <block pos:line="14" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ERROR<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><literal type="string" pos:line="15" pos:column="11">"java plugin: cjni_shutdown: AttachCurrentThread failed with status "<pos:position pos:line="15" pos:column="80"/></literal>
          <literal type="string" pos:line="16" pos:column="11">"%i."<pos:position pos:line="16" pos:column="16"/></literal></expr></argument>,
          <argument><expr><name pos:line="17" pos:column="11">status<pos:position pos:line="17" pos:column="17"/></name></expr></argument>)<pos:position pos:line="17" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><operator pos:line="18" pos:column="13">-<pos:position pos:line="18" pos:column="14"/></operator><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal><operator pos:line="18" pos:column="15">)<pos:position pos:line="18" pos:column="16"/></operator></expr>;<pos:position pos:line="18" pos:column="17"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="21" pos:column="3">/* Execute all the shutdown functions registered by plugins. */</comment>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">cjni_shutdown_plugins<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">jvm_env<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>

  <comment type="block" pos:line="24" pos:column="3">/* Release all the global references to callback functions */</comment>
  <for pos:line="25" pos:column="3">for <control pos:line="25" pos:column="7">(<init><decl><type><name pos:line="25" pos:column="8">size_t<pos:position pos:line="25" pos:column="14"/></name></type> <name pos:line="25" pos:column="15">i<pos:position pos:line="25" pos:column="16"/></name> <init pos:line="25" pos:column="17">= <expr><literal type="number" pos:line="25" pos:column="19">0<pos:position pos:line="25" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="21"/></init> <condition><expr><name pos:line="25" pos:column="22">i<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">&lt;<pos:position pos:line="25" pos:column="28"/></operator> <name pos:line="25" pos:column="26">java_callbacks_num<pos:position pos:line="25" pos:column="44"/></name></expr>;<pos:position pos:line="25" pos:column="45"/></condition> <incr><expr><name pos:line="25" pos:column="46">i<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">++<pos:position pos:line="25" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="50"/></control> <block pos:line="25" pos:column="51">{
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name><name pos:line="26" pos:column="9">java_callbacks<pos:position pos:line="26" pos:column="23"/></name><index pos:line="26" pos:column="23">[<expr><name pos:line="26" pos:column="24">i<pos:position pos:line="26" pos:column="25"/></name></expr>]<pos:position pos:line="26" pos:column="26"/></index></name><operator pos:line="26" pos:column="26">.<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="27">object<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">!=<pos:position pos:line="26" pos:column="36"/></operator> <name pos:line="26" pos:column="37">NULL<pos:position pos:line="26" pos:column="41"/></name></expr>)<pos:position pos:line="26" pos:column="42"/></condition><then pos:line="26" pos:column="42"> <block pos:line="26" pos:column="43">{
      <expr_stmt><expr><call><name><operator pos:line="27" pos:column="7">(<pos:position pos:line="27" pos:column="8"/></operator><operator pos:line="27" pos:column="8">*<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">jvm_env<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">)<pos:position pos:line="27" pos:column="17"/></operator><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">DeleteGlobalRef<pos:position pos:line="27" pos:column="34"/></name></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">jvm_env<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="44">java_callbacks<pos:position pos:line="27" pos:column="58"/></name><index pos:line="27" pos:column="58">[<expr><name pos:line="27" pos:column="59">i<pos:position pos:line="27" pos:column="60"/></name></expr>]<pos:position pos:line="27" pos:column="61"/></index></name><operator pos:line="27" pos:column="61">.<pos:position pos:line="27" pos:column="62"/></operator><name pos:line="27" pos:column="62">object<pos:position pos:line="27" pos:column="68"/></name></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="28" pos:column="7">java_callbacks<pos:position pos:line="28" pos:column="21"/></name><index pos:line="28" pos:column="21">[<expr><name pos:line="28" pos:column="22">i<pos:position pos:line="28" pos:column="23"/></name></expr>]<pos:position pos:line="28" pos:column="24"/></index></name><operator pos:line="28" pos:column="24">.<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="25">object<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">=<pos:position pos:line="28" pos:column="33"/></operator> <name pos:line="28" pos:column="34">NULL<pos:position pos:line="28" pos:column="38"/></name></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">sfree<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><name><name pos:line="30" pos:column="11">java_callbacks<pos:position pos:line="30" pos:column="25"/></name><index pos:line="30" pos:column="25">[<expr><name pos:line="30" pos:column="26">i<pos:position pos:line="30" pos:column="27"/></name></expr>]<pos:position pos:line="30" pos:column="28"/></index></name><operator pos:line="30" pos:column="28">.<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="29">name<pos:position pos:line="30" pos:column="33"/></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></for>
  <expr_stmt><expr><name pos:line="32" pos:column="3">java_callbacks_num<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <literal type="number" pos:line="32" pos:column="24">0<pos:position pos:line="32" pos:column="25"/></literal></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">sfree<pos:position pos:line="33" pos:column="8"/></name><argument_list pos:line="33" pos:column="8">(<argument><expr><name pos:line="33" pos:column="9">java_callbacks<pos:position pos:line="33" pos:column="23"/></name></expr></argument>)<pos:position pos:line="33" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="35" pos:column="3">/* Release all the global references to directly loaded classes. */</comment>
  <for pos:line="36" pos:column="3">for <control pos:line="36" pos:column="7">(<init><decl><type><name pos:line="36" pos:column="8">size_t<pos:position pos:line="36" pos:column="14"/></name></type> <name pos:line="36" pos:column="15">i<pos:position pos:line="36" pos:column="16"/></name> <init pos:line="36" pos:column="17">= <expr><literal type="number" pos:line="36" pos:column="19">0<pos:position pos:line="36" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="36" pos:column="21"/></init> <condition><expr><name pos:line="36" pos:column="22">i<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">&lt;<pos:position pos:line="36" pos:column="28"/></operator> <name pos:line="36" pos:column="26">java_classes_list_len<pos:position pos:line="36" pos:column="47"/></name></expr>;<pos:position pos:line="36" pos:column="48"/></condition> <incr><expr><name pos:line="36" pos:column="49">i<pos:position pos:line="36" pos:column="50"/></name><operator pos:line="36" pos:column="50">++<pos:position pos:line="36" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="53"/></control> <block pos:line="36" pos:column="54">{
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name><name pos:line="37" pos:column="9">java_classes_list<pos:position pos:line="37" pos:column="26"/></name><index pos:line="37" pos:column="26">[<expr><name pos:line="37" pos:column="27">i<pos:position pos:line="37" pos:column="28"/></name></expr>]<pos:position pos:line="37" pos:column="29"/></index></name><operator pos:line="37" pos:column="29">.<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="30">object<pos:position pos:line="37" pos:column="36"/></name> <operator pos:line="37" pos:column="37">!=<pos:position pos:line="37" pos:column="39"/></operator> <name pos:line="37" pos:column="40">NULL<pos:position pos:line="37" pos:column="44"/></name></expr>)<pos:position pos:line="37" pos:column="45"/></condition><then pos:line="37" pos:column="45"> <block pos:line="37" pos:column="46">{
      <expr_stmt><expr><call><name><operator pos:line="38" pos:column="7">(<pos:position pos:line="38" pos:column="8"/></operator><operator pos:line="38" pos:column="8">*<pos:position pos:line="38" pos:column="9"/></operator><name pos:line="38" pos:column="9">jvm_env<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">)<pos:position pos:line="38" pos:column="17"/></operator><operator pos:line="38" pos:column="17">-&gt;<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="19">DeleteGlobalRef<pos:position pos:line="38" pos:column="34"/></name></name><argument_list pos:line="38" pos:column="34">(<argument><expr><name pos:line="38" pos:column="35">jvm_env<pos:position pos:line="38" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="44">java_classes_list<pos:position pos:line="38" pos:column="61"/></name><index pos:line="38" pos:column="61">[<expr><name pos:line="38" pos:column="62">i<pos:position pos:line="38" pos:column="63"/></name></expr>]<pos:position pos:line="38" pos:column="64"/></index></name><operator pos:line="38" pos:column="64">.<pos:position pos:line="38" pos:column="65"/></operator><name pos:line="38" pos:column="65">object<pos:position pos:line="38" pos:column="71"/></name></expr></argument>)<pos:position pos:line="38" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="73"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="39" pos:column="7">java_classes_list<pos:position pos:line="39" pos:column="24"/></name><index pos:line="39" pos:column="24">[<expr><name pos:line="39" pos:column="25">i<pos:position pos:line="39" pos:column="26"/></name></expr>]<pos:position pos:line="39" pos:column="27"/></index></name><operator pos:line="39" pos:column="27">.<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="28">object<pos:position pos:line="39" pos:column="34"/></name> <operator pos:line="39" pos:column="35">=<pos:position pos:line="39" pos:column="36"/></operator> <name pos:line="39" pos:column="37">NULL<pos:position pos:line="39" pos:column="41"/></name></expr>;<pos:position pos:line="39" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">sfree<pos:position pos:line="41" pos:column="10"/></name><argument_list pos:line="41" pos:column="10">(<argument><expr><name><name pos:line="41" pos:column="11">java_classes_list<pos:position pos:line="41" pos:column="28"/></name><index pos:line="41" pos:column="28">[<expr><name pos:line="41" pos:column="29">i<pos:position pos:line="41" pos:column="30"/></name></expr>]<pos:position pos:line="41" pos:column="31"/></index></name><operator pos:line="41" pos:column="31">.<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="32">name<pos:position pos:line="41" pos:column="36"/></name></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="42" pos:column="4"/></block></for>
  <expr_stmt><expr><name pos:line="43" pos:column="3">java_classes_list_len<pos:position pos:line="43" pos:column="24"/></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <literal type="number" pos:line="43" pos:column="27">0<pos:position pos:line="43" pos:column="28"/></literal></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">sfree<pos:position pos:line="44" pos:column="8"/></name><argument_list pos:line="44" pos:column="8">(<argument><expr><name pos:line="44" pos:column="9">java_classes_list<pos:position pos:line="44" pos:column="26"/></name></expr></argument>)<pos:position pos:line="44" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="46" pos:column="3">/* Destroy the JVM */</comment>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">DEBUG<pos:position pos:line="47" pos:column="8"/></name><argument_list pos:line="47" pos:column="8">(<argument><expr><literal type="string" pos:line="47" pos:column="9">"java plugin: Destroying the JVM."<pos:position pos:line="47" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><call><name><operator pos:line="48" pos:column="3">(<pos:position pos:line="48" pos:column="4"/></operator><operator pos:line="48" pos:column="4">*<pos:position pos:line="48" pos:column="5"/></operator><name pos:line="48" pos:column="5">jvm<pos:position pos:line="48" pos:column="8"/></name><operator pos:line="48" pos:column="8">)<pos:position pos:line="48" pos:column="9"/></operator><operator pos:line="48" pos:column="9">-&gt;<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="11">DestroyJavaVM<pos:position pos:line="48" pos:column="24"/></name></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">jvm<pos:position pos:line="48" pos:column="28"/></name></expr></argument>)<pos:position pos:line="48" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="49" pos:column="3">jvm<pos:position pos:line="49" pos:column="6"/></name> <operator pos:line="49" pos:column="7">=<pos:position pos:line="49" pos:column="8"/></operator> <name pos:line="49" pos:column="9">NULL<pos:position pos:line="49" pos:column="13"/></name></expr>;<pos:position pos:line="49" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name pos:line="50" pos:column="3">jvm_env<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator> <name pos:line="50" pos:column="13">NULL<pos:position pos:line="50" pos:column="17"/></name></expr>;<pos:position pos:line="50" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="52" pos:column="3">pthread_key_delete<pos:position pos:line="52" pos:column="21"/></name><argument_list pos:line="52" pos:column="21">(<argument><expr><name pos:line="52" pos:column="22">jvm_env_key<pos:position pos:line="52" pos:column="33"/></name></expr></argument>)<pos:position pos:line="52" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="54" pos:column="3">/* Free the JVM argument list */</comment>
  <for pos:line="55" pos:column="3">for <control pos:line="55" pos:column="7">(<init><decl><type><name pos:line="55" pos:column="8">size_t<pos:position pos:line="55" pos:column="14"/></name></type> <name pos:line="55" pos:column="15">i<pos:position pos:line="55" pos:column="16"/></name> <init pos:line="55" pos:column="17">= <expr><literal type="number" pos:line="55" pos:column="19">0<pos:position pos:line="55" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="55" pos:column="21"/></init> <condition><expr><name pos:line="55" pos:column="22">i<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">&lt;<pos:position pos:line="55" pos:column="28"/></operator> <name pos:line="55" pos:column="26">jvm_argc<pos:position pos:line="55" pos:column="34"/></name></expr>;<pos:position pos:line="55" pos:column="35"/></condition> <incr><expr><name pos:line="55" pos:column="36">i<pos:position pos:line="55" pos:column="37"/></name><operator pos:line="55" pos:column="37">++<pos:position pos:line="55" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="55" pos:column="40"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="5">sfree<pos:position pos:line="56" pos:column="10"/></name><argument_list pos:line="56" pos:column="10">(<argument><expr><name><name pos:line="56" pos:column="11">jvm_argv<pos:position pos:line="56" pos:column="19"/></name><index pos:line="56" pos:column="19">[<expr><name pos:line="56" pos:column="20">i<pos:position pos:line="56" pos:column="21"/></name></expr>]<pos:position pos:line="56" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="56" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="24"/></expr_stmt></block></for>
  <expr_stmt><expr><name pos:line="57" pos:column="3">jvm_argc<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <literal type="number" pos:line="57" pos:column="14">0<pos:position pos:line="57" pos:column="15"/></literal></expr>;<pos:position pos:line="57" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="58" pos:column="3">sfree<pos:position pos:line="58" pos:column="8"/></name><argument_list pos:line="58" pos:column="8">(<argument><expr><name pos:line="58" pos:column="9">jvm_argv<pos:position pos:line="58" pos:column="17"/></name></expr></argument>)<pos:position pos:line="58" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="19"/></expr_stmt>

  <return pos:line="60" pos:column="3">return <expr><operator pos:line="60" pos:column="10">(<pos:position pos:line="60" pos:column="11"/></operator><literal type="number" pos:line="60" pos:column="11">0<pos:position pos:line="60" pos:column="12"/></literal><operator pos:line="60" pos:column="12">)<pos:position pos:line="60" pos:column="13"/></operator></expr>;<pos:position pos:line="60" pos:column="14"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_423_collectd-4.0.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rrd_write<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">data_set_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">ds<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">value_list_t<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">vl<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">stat<pos:position pos:line="3" pos:column="20"/></name></name></type>  <name pos:line="3" pos:column="22">statbuf<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type>         <name><name pos:line="4" pos:column="22">filename<pos:position pos:line="4" pos:column="30"/></name><index pos:line="4" pos:column="30">[<expr><literal type="number" pos:line="4" pos:column="31">512<pos:position pos:line="4" pos:column="34"/></literal></expr>]<pos:position pos:line="4" pos:column="35"/></index></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type>         <name><name pos:line="5" pos:column="22">values<pos:position pos:line="5" pos:column="28"/></name><index pos:line="5" pos:column="28">[<expr><literal type="number" pos:line="5" pos:column="29">512<pos:position pos:line="5" pos:column="32"/></literal></expr>]<pos:position pos:line="5" pos:column="33"/></index></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">rrd_cache_t<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">rc<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">time_t<pos:position pos:line="7" pos:column="15"/></name></type>       <name pos:line="7" pos:column="22">now<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">value_list_to_filename<pos:position pos:line="9" pos:column="35"/></name> <argument_list pos:line="9" pos:column="36">(<argument><expr><name pos:line="9" pos:column="37">filename<pos:position pos:line="9" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="47">sizeof <argument_list pos:line="9" pos:column="54">(<argument><expr><name pos:line="9" pos:column="55">filename<pos:position pos:line="9" pos:column="63"/></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="9" pos:column="66">ds<pos:position pos:line="9" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="70">vl<pos:position pos:line="9" pos:column="72"/></name></expr></argument>)<pos:position pos:line="9" pos:column="73"/></argument_list></call> <operator pos:line="9" pos:column="74">!=<pos:position pos:line="9" pos:column="76"/></operator> <literal type="number" pos:line="9" pos:column="77">0<pos:position pos:line="9" pos:column="78"/></literal></expr>)<pos:position pos:line="9" pos:column="79"/></condition><then pos:line="9" pos:column="79">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">-<pos:position pos:line="10" pos:column="26"/></operator><literal type="number" pos:line="10" pos:column="26">1<pos:position pos:line="10" pos:column="27"/></literal><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator></expr>;<pos:position pos:line="10" pos:column="29"/></return></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">value_list_to_string<pos:position pos:line="12" pos:column="33"/></name> <argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">values<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="43">sizeof <argument_list pos:line="12" pos:column="50">(<argument><expr><name pos:line="12" pos:column="51">values<pos:position pos:line="12" pos:column="57"/></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="12" pos:column="60">ds<pos:position pos:line="12" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="64">vl<pos:position pos:line="12" pos:column="66"/></name></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call> <operator pos:line="12" pos:column="68">!=<pos:position pos:line="12" pos:column="70"/></operator> <literal type="number" pos:line="12" pos:column="71">0<pos:position pos:line="12" pos:column="72"/></literal></expr>)<pos:position pos:line="12" pos:column="73"/></condition><then pos:line="12" pos:column="73">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">(<pos:position pos:line="13" pos:column="25"/></operator><operator pos:line="13" pos:column="25">-<pos:position pos:line="13" pos:column="26"/></operator><literal type="number" pos:line="13" pos:column="26">1<pos:position pos:line="13" pos:column="27"/></literal><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator></expr>;<pos:position pos:line="13" pos:column="29"/></return></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">stat<pos:position pos:line="15" pos:column="17"/></name> <argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">filename<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="29">&amp;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="30">statbuf<pos:position pos:line="15" pos:column="37"/></name></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call> <operator pos:line="15" pos:column="39">==<pos:position pos:line="15" pos:column="41"/></operator> <operator pos:line="15" pos:column="42">-<pos:position pos:line="15" pos:column="43"/></operator><literal type="number" pos:line="15" pos:column="43">1<pos:position pos:line="15" pos:column="44"/></literal></expr>)<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45">
	<block pos:line="16" pos:column="9">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">errno<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">==<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">ENOENT<pos:position pos:line="17" pos:column="36"/></name></expr>)<pos:position pos:line="17" pos:column="37"/></condition><then pos:line="17" pos:column="37">
		<block pos:line="18" pos:column="17">{
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><call><name pos:line="19" pos:column="29">rrd_create_file<pos:position pos:line="19" pos:column="44"/></name> <argument_list pos:line="19" pos:column="45">(<argument><expr><name pos:line="19" pos:column="46">filename<pos:position pos:line="19" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="56">ds<pos:position pos:line="19" pos:column="58"/></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="60"/></condition><then pos:line="19" pos:column="60">
				<block type="pseudo"><return pos:line="20" pos:column="33">return <expr><operator pos:line="20" pos:column="40">(<pos:position pos:line="20" pos:column="41"/></operator><operator pos:line="20" pos:column="41">-<pos:position pos:line="20" pos:column="42"/></operator><literal type="number" pos:line="20" pos:column="42">1<pos:position pos:line="20" pos:column="43"/></literal><operator pos:line="20" pos:column="43">)<pos:position pos:line="20" pos:column="44"/></operator></expr>;<pos:position pos:line="20" pos:column="45"/></return></block></then></if>
		}<pos:position pos:line="21" pos:column="18"/></block></then>
		<else pos:line="22" pos:column="17">else
		<block pos:line="23" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="24" pos:column="25">char<pos:position pos:line="24" pos:column="29"/></name></type> <name><name pos:line="24" pos:column="30">errbuf<pos:position pos:line="24" pos:column="36"/></name><index pos:line="24" pos:column="36">[<expr><literal type="number" pos:line="24" pos:column="37">1024<pos:position pos:line="24" pos:column="41"/></literal></expr>]<pos:position pos:line="24" pos:column="42"/></index></name></decl>;<pos:position pos:line="24" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">ERROR<pos:position pos:line="25" pos:column="30"/></name> <argument_list pos:line="25" pos:column="31">(<argument><expr><literal type="string" pos:line="25" pos:column="32">"stat(%s) failed: %s"<pos:position pos:line="25" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="55">filename<pos:position pos:line="25" pos:column="63"/></name></expr></argument>,
					<argument><expr><call><name pos:line="26" pos:column="41">sstrerror<pos:position pos:line="26" pos:column="50"/></name> <argument_list pos:line="26" pos:column="51">(<argument><expr><name pos:line="26" pos:column="52">errno<pos:position pos:line="26" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="59">errbuf<pos:position pos:line="26" pos:column="65"/></name></expr></argument>,
						<argument><expr><sizeof pos:line="27" pos:column="49">sizeof <argument_list pos:line="27" pos:column="56">(<argument><expr><name pos:line="27" pos:column="57">errbuf<pos:position pos:line="27" pos:column="63"/></name></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="67"/></expr_stmt>
			<return pos:line="28" pos:column="25">return <expr><operator pos:line="28" pos:column="32">(<pos:position pos:line="28" pos:column="33"/></operator><operator pos:line="28" pos:column="33">-<pos:position pos:line="28" pos:column="34"/></operator><literal type="number" pos:line="28" pos:column="34">1<pos:position pos:line="28" pos:column="35"/></literal><operator pos:line="28" pos:column="35">)<pos:position pos:line="28" pos:column="36"/></operator></expr>;<pos:position pos:line="28" pos:column="37"/></return>
		}<pos:position pos:line="29" pos:column="18"/></block></else></if>
	}<pos:position pos:line="30" pos:column="10"/></block></then>
	<elseif pos:line="31" pos:column="9">else <if pos:line="31" pos:column="14">if <condition pos:line="31" pos:column="17">(<expr><operator pos:line="31" pos:column="18">!<pos:position pos:line="31" pos:column="19"/></operator><call><name pos:line="31" pos:column="19">S_ISREG<pos:position pos:line="31" pos:column="26"/></name> <argument_list pos:line="31" pos:column="27">(<argument><expr><name><name pos:line="31" pos:column="28">statbuf<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">.<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="36">st_mode<pos:position pos:line="31" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="45"/></condition><then pos:line="31" pos:column="45">
	<block pos:line="32" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">ERROR<pos:position pos:line="33" pos:column="22"/></name> <argument_list pos:line="33" pos:column="23">(<argument><expr><literal type="string" pos:line="33" pos:column="24">"stat(%s): Not a regular file!"<pos:position pos:line="33" pos:column="55"/></literal></expr></argument>,
				<argument><expr><name pos:line="34" pos:column="33">filename<pos:position pos:line="34" pos:column="41"/></name></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>
		<return pos:line="35" pos:column="17">return <expr><operator pos:line="35" pos:column="24">(<pos:position pos:line="35" pos:column="25"/></operator><operator pos:line="35" pos:column="25">-<pos:position pos:line="35" pos:column="26"/></operator><literal type="number" pos:line="35" pos:column="26">1<pos:position pos:line="35" pos:column="27"/></literal><operator pos:line="35" pos:column="27">)<pos:position pos:line="35" pos:column="28"/></operator></expr>;<pos:position pos:line="35" pos:column="29"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="38" pos:column="9">pthread_mutex_lock<pos:position pos:line="38" pos:column="27"/></name> <argument_list pos:line="38" pos:column="28">(<argument><expr><operator pos:line="38" pos:column="29">&amp;<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="30">cache_lock<pos:position pos:line="38" pos:column="40"/></name></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="39" pos:column="9">rc<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <call><name pos:line="39" pos:column="14">rrd_cache_insert<pos:position pos:line="39" pos:column="30"/></name> <argument_list pos:line="39" pos:column="31">(<argument><expr><name pos:line="39" pos:column="32">filename<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="42">values<pos:position pos:line="39" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="50">vl<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">-&gt;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="54">time<pos:position pos:line="39" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="60"/></expr_stmt>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">rc<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">==<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="19">NULL<pos:position pos:line="40" pos:column="23"/></name></expr>)<pos:position pos:line="40" pos:column="24"/></condition><then pos:line="40" pos:column="24">
	<block pos:line="41" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">pthread_mutex_unlock<pos:position pos:line="42" pos:column="37"/></name> <argument_list pos:line="42" pos:column="38">(<argument><expr><operator pos:line="42" pos:column="39">&amp;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="40">cache_lock<pos:position pos:line="42" pos:column="50"/></name></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="52"/></expr_stmt>
		<return pos:line="43" pos:column="17">return <expr><operator pos:line="43" pos:column="24">(<pos:position pos:line="43" pos:column="25"/></operator><operator pos:line="43" pos:column="25">-<pos:position pos:line="43" pos:column="26"/></operator><literal type="number" pos:line="43" pos:column="26">1<pos:position pos:line="43" pos:column="27"/></literal><operator pos:line="43" pos:column="27">)<pos:position pos:line="43" pos:column="28"/></operator></expr>;<pos:position pos:line="43" pos:column="29"/></return>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">cache<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">==<pos:position pos:line="46" pos:column="21"/></operator> <name pos:line="46" pos:column="22">NULL<pos:position pos:line="46" pos:column="26"/></name></expr>)<pos:position pos:line="46" pos:column="27"/></condition><then pos:line="46" pos:column="27">
	<block pos:line="47" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">rrd_write_cache_entry<pos:position pos:line="48" pos:column="38"/></name> <argument_list pos:line="48" pos:column="39">(<argument><expr><name pos:line="48" pos:column="40">filename<pos:position pos:line="48" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="50">rc<pos:position pos:line="48" pos:column="52"/></name></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="54"/></expr_stmt>
		<comment type="block" pos:line="49" pos:column="17">/* rc's value-list is free's by `rrd_write_cache_entry' */</comment>
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">sfree<pos:position pos:line="50" pos:column="22"/></name> <argument_list pos:line="50" pos:column="23">(<argument><expr><name pos:line="50" pos:column="24">rc<pos:position pos:line="50" pos:column="26"/></name></expr></argument>)<pos:position pos:line="50" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">pthread_mutex_unlock<pos:position pos:line="51" pos:column="37"/></name> <argument_list pos:line="51" pos:column="38">(<argument><expr><operator pos:line="51" pos:column="39">&amp;<pos:position pos:line="51" pos:column="44"/></operator><name pos:line="51" pos:column="40">cache_lock<pos:position pos:line="51" pos:column="50"/></name></expr></argument>)<pos:position pos:line="51" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="52"/></expr_stmt>
		<return pos:line="52" pos:column="17">return <expr><operator pos:line="52" pos:column="24">(<pos:position pos:line="52" pos:column="25"/></operator><literal type="number" pos:line="52" pos:column="25">0<pos:position pos:line="52" pos:column="26"/></literal><operator pos:line="52" pos:column="26">)<pos:position pos:line="52" pos:column="27"/></operator></expr>;<pos:position pos:line="52" pos:column="28"/></return>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="55" pos:column="9">now<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <call><name pos:line="55" pos:column="15">time<pos:position pos:line="55" pos:column="19"/></name> <argument_list pos:line="55" pos:column="20">(<argument><expr><name pos:line="55" pos:column="21">NULL<pos:position pos:line="55" pos:column="25"/></name></expr></argument>)<pos:position pos:line="55" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="57" pos:column="9">DEBUG<pos:position pos:line="57" pos:column="14"/></name> <argument_list pos:line="57" pos:column="15">(<argument><expr><literal type="string" pos:line="57" pos:column="16">"age (%s) = %i"<pos:position pos:line="57" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="33">filename<pos:position pos:line="57" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="43">now<pos:position pos:line="57" pos:column="46"/></name> <operator pos:line="57" pos:column="47">-<pos:position pos:line="57" pos:column="48"/></operator> <name><name pos:line="57" pos:column="49">rc<pos:position pos:line="57" pos:column="51"/></name><operator pos:line="57" pos:column="51">-&gt;<pos:position pos:line="57" pos:column="56"/></operator><name pos:line="57" pos:column="53">first_value<pos:position pos:line="57" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="66"/></expr_stmt>

	<comment type="block" pos:line="59" pos:column="9">/* `rc' is not free'd here, because we'll likely reuse it. If not, then
	 * the next flush will remove this entry.  */</comment>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">(<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">now<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">-<pos:position pos:line="61" pos:column="19"/></operator> <name><name pos:line="61" pos:column="20">rc<pos:position pos:line="61" pos:column="22"/></name><operator pos:line="61" pos:column="22">-&gt;<pos:position pos:line="61" pos:column="27"/></operator><name pos:line="61" pos:column="24">first_value<pos:position pos:line="61" pos:column="35"/></name></name><operator pos:line="61" pos:column="35">)<pos:position pos:line="61" pos:column="36"/></operator> <operator pos:line="61" pos:column="37">&gt;=<pos:position pos:line="61" pos:column="42"/></operator> <name pos:line="61" pos:column="40">cache_timeout<pos:position pos:line="61" pos:column="53"/></name></expr>)<pos:position pos:line="61" pos:column="54"/></condition><then pos:line="61" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="17">rrd_write_cache_entry<pos:position pos:line="62" pos:column="38"/></name> <argument_list pos:line="62" pos:column="39">(<argument><expr><name pos:line="62" pos:column="40">filename<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="50">rc<pos:position pos:line="62" pos:column="52"/></name></expr></argument>)<pos:position pos:line="62" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="54"/></expr_stmt></block></then></if>

	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><operator pos:line="64" pos:column="13">(<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="14">now<pos:position pos:line="64" pos:column="17"/></name> <operator pos:line="64" pos:column="18">-<pos:position pos:line="64" pos:column="19"/></operator> <name pos:line="64" pos:column="20">cache_flush_last<pos:position pos:line="64" pos:column="36"/></name><operator pos:line="64" pos:column="36">)<pos:position pos:line="64" pos:column="37"/></operator> <operator pos:line="64" pos:column="38">&gt;=<pos:position pos:line="64" pos:column="43"/></operator> <name pos:line="64" pos:column="41">cache_flush_timeout<pos:position pos:line="64" pos:column="60"/></name></expr>)<pos:position pos:line="64" pos:column="61"/></condition><then pos:line="64" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="17">rrd_cache_flush<pos:position pos:line="65" pos:column="32"/></name> <argument_list pos:line="65" pos:column="33">(<argument><expr><name pos:line="65" pos:column="34">cache_flush_timeout<pos:position pos:line="65" pos:column="53"/></name></expr></argument>)<pos:position pos:line="65" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="55"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="67" pos:column="9">pthread_mutex_unlock<pos:position pos:line="67" pos:column="29"/></name> <argument_list pos:line="67" pos:column="30">(<argument><expr><operator pos:line="67" pos:column="31">&amp;<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="32">cache_lock<pos:position pos:line="67" pos:column="42"/></name></expr></argument>)<pos:position pos:line="67" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="44"/></expr_stmt>
	<return pos:line="68" pos:column="9">return <expr><operator pos:line="68" pos:column="16">(<pos:position pos:line="68" pos:column="17"/></operator><literal type="number" pos:line="68" pos:column="17">0<pos:position pos:line="68" pos:column="18"/></literal><operator pos:line="68" pos:column="18">)<pos:position pos:line="68" pos:column="19"/></operator></expr>;<pos:position pos:line="68" pos:column="20"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

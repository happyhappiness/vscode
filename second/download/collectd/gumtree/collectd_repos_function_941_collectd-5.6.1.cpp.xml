<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_941_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">serial_read<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">fh<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buffer<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">1024<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* there are a variety of names for the serial device */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">fh<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <call><name pos:line="7" pos:column="19">fopen<pos:position pos:line="7" pos:column="24"/></name> <argument_list pos:line="7" pos:column="25">(<argument><expr><literal type="string" pos:line="7" pos:column="26">"/proc/tty/driver/serial"<pos:position pos:line="7" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="53">"r"<pos:position pos:line="7" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call><operator pos:line="7" pos:column="57">)<pos:position pos:line="7" pos:column="58"/></operator> <operator pos:line="7" pos:column="59">==<pos:position pos:line="7" pos:column="61"/></operator> <name pos:line="7" pos:column="62">NULL<pos:position pos:line="7" pos:column="66"/></name> <operator pos:line="7" pos:column="67">&amp;&amp;<pos:position pos:line="7" pos:column="77"/></operator>
		<operator pos:line="8" pos:column="17">(<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">fh<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <call><name pos:line="8" pos:column="23">fopen<pos:position pos:line="8" pos:column="28"/></name> <argument_list pos:line="8" pos:column="29">(<argument><expr><literal type="string" pos:line="8" pos:column="30">"/proc/tty/driver/ttyS"<pos:position pos:line="8" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="55">"r"<pos:position pos:line="8" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call><operator pos:line="8" pos:column="59">)<pos:position pos:line="8" pos:column="60"/></operator> <operator pos:line="8" pos:column="61">==<pos:position pos:line="8" pos:column="63"/></operator> <name pos:line="8" pos:column="64">NULL<pos:position pos:line="8" pos:column="68"/></name></expr>)<pos:position pos:line="8" pos:column="69"/></condition><then pos:line="8" pos:column="69">
	<block pos:line="9" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">char<pos:position pos:line="10" pos:column="21"/></name></type> <name><name pos:line="10" pos:column="22">errbuf<pos:position pos:line="10" pos:column="28"/></name><index pos:line="10" pos:column="28">[<expr><literal type="number" pos:line="10" pos:column="29">1024<pos:position pos:line="10" pos:column="33"/></literal></expr>]<pos:position pos:line="10" pos:column="34"/></index></name></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">WARNING<pos:position pos:line="11" pos:column="24"/></name> <argument_list pos:line="11" pos:column="25">(<argument><expr><literal type="string" pos:line="11" pos:column="26">"serial: fopen: %s"<pos:position pos:line="11" pos:column="45"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="12" pos:column="33">sstrerror<pos:position pos:line="12" pos:column="42"/></name> <argument_list pos:line="12" pos:column="43">(<argument><expr><name pos:line="12" pos:column="44">errno<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="51">errbuf<pos:position pos:line="12" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="59">sizeof <argument_list pos:line="12" pos:column="66">(<argument><expr><name pos:line="12" pos:column="67">errbuf<pos:position pos:line="12" pos:column="73"/></name></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="77"/></expr_stmt>
		<return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">(<pos:position pos:line="13" pos:column="25"/></operator><operator pos:line="13" pos:column="25">-<pos:position pos:line="13" pos:column="26"/></operator><literal type="number" pos:line="13" pos:column="26">1<pos:position pos:line="13" pos:column="27"/></literal><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator></expr>;<pos:position pos:line="13" pos:column="29"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><call><name pos:line="16" pos:column="16">fgets<pos:position pos:line="16" pos:column="21"/></name> <argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">buffer<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="31">sizeof <argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">buffer<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">fh<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call> <operator pos:line="16" pos:column="52">!=<pos:position pos:line="16" pos:column="54"/></operator> <name pos:line="16" pos:column="55">NULL<pos:position pos:line="16" pos:column="59"/></name></expr>)<pos:position pos:line="16" pos:column="60"/></condition>
	<block pos:line="17" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">derive_t<pos:position pos:line="18" pos:column="25"/></name></type> <name pos:line="18" pos:column="26">rx<pos:position pos:line="18" pos:column="28"/></name> <init pos:line="18" pos:column="29">= <expr><literal type="number" pos:line="18" pos:column="31">0<pos:position pos:line="18" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">derive_t<pos:position pos:line="19" pos:column="25"/></name></type> <name pos:line="19" pos:column="26">tx<pos:position pos:line="19" pos:column="28"/></name> <init pos:line="19" pos:column="29">= <expr><literal type="number" pos:line="19" pos:column="31">0<pos:position pos:line="19" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">_Bool<pos:position pos:line="20" pos:column="22"/></name></type> <name pos:line="20" pos:column="23">have_rx<pos:position pos:line="20" pos:column="30"/></name> <init pos:line="20" pos:column="31">= <expr><literal type="number" pos:line="20" pos:column="33">0<pos:position pos:line="20" pos:column="34"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="20" pos:column="36">have_tx<pos:position pos:line="20" pos:column="43"/></name> <init pos:line="20" pos:column="44">= <expr><literal type="number" pos:line="20" pos:column="46">0<pos:position pos:line="20" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="48"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">size_t<pos:position pos:line="21" pos:column="23"/></name></type> <name pos:line="21" pos:column="24">len<pos:position pos:line="21" pos:column="27"/></name></decl>;<pos:position pos:line="21" pos:column="28"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="23" pos:column="17">char<pos:position pos:line="23" pos:column="21"/></name> <modifier pos:line="23" pos:column="22">*<pos:position pos:line="23" pos:column="23"/></modifier></type><name><name pos:line="23" pos:column="23">fields<pos:position pos:line="23" pos:column="29"/></name><index pos:line="23" pos:column="29">[<expr><literal type="number" pos:line="23" pos:column="30">16<pos:position pos:line="23" pos:column="32"/></literal></expr>]<pos:position pos:line="23" pos:column="33"/></index></name></decl>;<pos:position pos:line="23" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">int<pos:position pos:line="24" pos:column="20"/></name></type> <name pos:line="24" pos:column="21">numfields<pos:position pos:line="24" pos:column="30"/></name></decl>;<pos:position pos:line="24" pos:column="31"/></decl_stmt>

		<expr_stmt><expr><name pos:line="26" pos:column="17">numfields<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator> <call><name pos:line="26" pos:column="29">strsplit<pos:position pos:line="26" pos:column="37"/></name> <argument_list pos:line="26" pos:column="38">(<argument><expr><name pos:line="26" pos:column="39">buffer<pos:position pos:line="26" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="47">fields<pos:position pos:line="26" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="55">STATIC_ARRAY_SIZE<pos:position pos:line="26" pos:column="72"/></name> <argument_list pos:line="26" pos:column="73">(<argument><expr><name pos:line="26" pos:column="74">fields<pos:position pos:line="26" pos:column="80"/></name></expr></argument>)<pos:position pos:line="26" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="83"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">numfields<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">&lt;<pos:position pos:line="27" pos:column="35"/></operator> <literal type="number" pos:line="27" pos:column="33">6<pos:position pos:line="27" pos:column="34"/></literal></expr>)<pos:position pos:line="27" pos:column="35"/></condition><then pos:line="27" pos:column="35">
			<block type="pseudo"><continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="30" pos:column="17">/*
		 * 0: uart:16550A port:000003F8 irq:4 tx:0 rx:0
		 * 1: uart:16550A port:000002F8 irq:3 tx:0 rx:0
		 */</comment>
		<expr_stmt><expr><name pos:line="34" pos:column="17">len<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <call><name pos:line="34" pos:column="23">strlen<pos:position pos:line="34" pos:column="29"/></name> <argument_list pos:line="34" pos:column="30">(<argument><expr><name><name pos:line="34" pos:column="31">fields<pos:position pos:line="34" pos:column="37"/></name><index pos:line="34" pos:column="37">[<expr><literal type="number" pos:line="34" pos:column="38">0<pos:position pos:line="34" pos:column="39"/></literal></expr>]<pos:position pos:line="34" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">len<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">&lt;<pos:position pos:line="35" pos:column="29"/></operator> <literal type="number" pos:line="35" pos:column="27">2<pos:position pos:line="35" pos:column="28"/></literal></expr>)<pos:position pos:line="35" pos:column="29"/></condition><then pos:line="35" pos:column="29">
			<block type="pseudo"><continue pos:line="36" pos:column="25">continue;<pos:position pos:line="36" pos:column="34"/></continue></block></then></if>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name><name pos:line="37" pos:column="21">fields<pos:position pos:line="37" pos:column="27"/></name><index pos:line="37" pos:column="27">[<expr><literal type="number" pos:line="37" pos:column="28">0<pos:position pos:line="37" pos:column="29"/></literal></expr>]<pos:position pos:line="37" pos:column="30"/></index><index pos:line="37" pos:column="30">[<expr><name pos:line="37" pos:column="31">len<pos:position pos:line="37" pos:column="34"/></name> <operator pos:line="37" pos:column="35">-<pos:position pos:line="37" pos:column="36"/></operator> <literal type="number" pos:line="37" pos:column="37">1<pos:position pos:line="37" pos:column="38"/></literal></expr>]<pos:position pos:line="37" pos:column="39"/></index></name> <operator pos:line="37" pos:column="40">!=<pos:position pos:line="37" pos:column="42"/></operator> <literal type="char" pos:line="37" pos:column="43">':'<pos:position pos:line="37" pos:column="46"/></literal></expr>)<pos:position pos:line="37" pos:column="47"/></condition><then pos:line="37" pos:column="47">
			<block type="pseudo"><continue pos:line="38" pos:column="25">continue;<pos:position pos:line="38" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name><name pos:line="39" pos:column="17">fields<pos:position pos:line="39" pos:column="23"/></name><index pos:line="39" pos:column="23">[<expr><literal type="number" pos:line="39" pos:column="24">0<pos:position pos:line="39" pos:column="25"/></literal></expr>]<pos:position pos:line="39" pos:column="26"/></index><index pos:line="39" pos:column="26">[<expr><name pos:line="39" pos:column="27">len<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">-<pos:position pos:line="39" pos:column="32"/></operator> <literal type="number" pos:line="39" pos:column="33">1<pos:position pos:line="39" pos:column="34"/></literal></expr>]<pos:position pos:line="39" pos:column="35"/></index></name> <operator pos:line="39" pos:column="36">=<pos:position pos:line="39" pos:column="37"/></operator> <literal type="number" pos:line="39" pos:column="38">0<pos:position pos:line="39" pos:column="39"/></literal></expr>;<pos:position pos:line="39" pos:column="40"/></expr_stmt>

		<for pos:line="41" pos:column="17">for <control pos:line="41" pos:column="21">(<init><decl><type><name pos:line="41" pos:column="22">int<pos:position pos:line="41" pos:column="25"/></name></type> <name pos:line="41" pos:column="26">i<pos:position pos:line="41" pos:column="27"/></name> <init pos:line="41" pos:column="28">= <expr><literal type="number" pos:line="41" pos:column="30">1<pos:position pos:line="41" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="41" pos:column="32"/></init> <condition><expr><name pos:line="41" pos:column="33">i<pos:position pos:line="41" pos:column="34"/></name> <operator pos:line="41" pos:column="35">&lt;<pos:position pos:line="41" pos:column="39"/></operator> <name pos:line="41" pos:column="37">numfields<pos:position pos:line="41" pos:column="46"/></name></expr>;<pos:position pos:line="41" pos:column="47"/></condition> <incr><expr><name pos:line="41" pos:column="48">i<pos:position pos:line="41" pos:column="49"/></name><operator pos:line="41" pos:column="49">++<pos:position pos:line="41" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="52"/></control>
		<block pos:line="42" pos:column="17">{
			<expr_stmt><expr><name pos:line="43" pos:column="25">len<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">=<pos:position pos:line="43" pos:column="30"/></operator> <call><name pos:line="43" pos:column="31">strlen<pos:position pos:line="43" pos:column="37"/></name> <argument_list pos:line="43" pos:column="38">(<argument><expr><name><name pos:line="43" pos:column="39">fields<pos:position pos:line="43" pos:column="45"/></name><index pos:line="43" pos:column="45">[<expr><name pos:line="43" pos:column="46">i<pos:position pos:line="43" pos:column="47"/></name></expr>]<pos:position pos:line="43" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="50"/></expr_stmt>
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><name pos:line="44" pos:column="29">len<pos:position pos:line="44" pos:column="32"/></name> <operator pos:line="44" pos:column="33">&lt;<pos:position pos:line="44" pos:column="37"/></operator> <literal type="number" pos:line="44" pos:column="35">4<pos:position pos:line="44" pos:column="36"/></literal></expr>)<pos:position pos:line="44" pos:column="37"/></condition><then pos:line="44" pos:column="37">
				<block type="pseudo"><continue pos:line="45" pos:column="33">continue;<pos:position pos:line="45" pos:column="42"/></continue></block></then></if>

			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><call><name pos:line="47" pos:column="29">strncmp<pos:position pos:line="47" pos:column="36"/></name> <argument_list pos:line="47" pos:column="37">(<argument><expr><name><name pos:line="47" pos:column="38">fields<pos:position pos:line="47" pos:column="44"/></name><index pos:line="47" pos:column="44">[<expr><name pos:line="47" pos:column="45">i<pos:position pos:line="47" pos:column="46"/></name></expr>]<pos:position pos:line="47" pos:column="47"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="49">"tx:"<pos:position pos:line="47" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="56">3<pos:position pos:line="47" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></call> <operator pos:line="47" pos:column="59">==<pos:position pos:line="47" pos:column="61"/></operator> <literal type="number" pos:line="47" pos:column="62">0<pos:position pos:line="47" pos:column="63"/></literal></expr>)<pos:position pos:line="47" pos:column="64"/></condition><then pos:line="47" pos:column="64">
			<block pos:line="48" pos:column="25">{
				<if pos:line="49" pos:column="33">if <condition pos:line="49" pos:column="36">(<expr><call><name pos:line="49" pos:column="37">strtoderive<pos:position pos:line="49" pos:column="48"/></name> <argument_list pos:line="49" pos:column="49">(<argument><expr><name><name pos:line="49" pos:column="50">fields<pos:position pos:line="49" pos:column="56"/></name><index pos:line="49" pos:column="56">[<expr><name pos:line="49" pos:column="57">i<pos:position pos:line="49" pos:column="58"/></name></expr>]<pos:position pos:line="49" pos:column="59"/></index></name> <operator pos:line="49" pos:column="60">+<pos:position pos:line="49" pos:column="61"/></operator> <literal type="number" pos:line="49" pos:column="62">3<pos:position pos:line="49" pos:column="63"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="65">&amp;<pos:position pos:line="49" pos:column="70"/></operator><name pos:line="49" pos:column="66">tx<pos:position pos:line="49" pos:column="68"/></name></expr></argument>)<pos:position pos:line="49" pos:column="69"/></argument_list></call> <operator pos:line="49" pos:column="70">==<pos:position pos:line="49" pos:column="72"/></operator> <literal type="number" pos:line="49" pos:column="73">0<pos:position pos:line="49" pos:column="74"/></literal></expr>)<pos:position pos:line="49" pos:column="75"/></condition><then pos:line="49" pos:column="75">
					<block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="41">have_tx<pos:position pos:line="50" pos:column="48"/></name> <operator pos:line="50" pos:column="49">=<pos:position pos:line="50" pos:column="50"/></operator> <literal type="number" pos:line="50" pos:column="51">1<pos:position pos:line="50" pos:column="52"/></literal></expr>;<pos:position pos:line="50" pos:column="53"/></expr_stmt></block></then></if>
			}<pos:position pos:line="51" pos:column="26"/></block></then>
			<elseif pos:line="52" pos:column="25">else <if pos:line="52" pos:column="30">if <condition pos:line="52" pos:column="33">(<expr><call><name pos:line="52" pos:column="34">strncmp<pos:position pos:line="52" pos:column="41"/></name> <argument_list pos:line="52" pos:column="42">(<argument><expr><name><name pos:line="52" pos:column="43">fields<pos:position pos:line="52" pos:column="49"/></name><index pos:line="52" pos:column="49">[<expr><name pos:line="52" pos:column="50">i<pos:position pos:line="52" pos:column="51"/></name></expr>]<pos:position pos:line="52" pos:column="52"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="54">"rx:"<pos:position pos:line="52" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="61">3<pos:position pos:line="52" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="63"/></argument_list></call> <operator pos:line="52" pos:column="64">==<pos:position pos:line="52" pos:column="66"/></operator> <literal type="number" pos:line="52" pos:column="67">0<pos:position pos:line="52" pos:column="68"/></literal></expr>)<pos:position pos:line="52" pos:column="69"/></condition><then pos:line="52" pos:column="69">
			<block pos:line="53" pos:column="25">{
				<if pos:line="54" pos:column="33">if <condition pos:line="54" pos:column="36">(<expr><call><name pos:line="54" pos:column="37">strtoderive<pos:position pos:line="54" pos:column="48"/></name> <argument_list pos:line="54" pos:column="49">(<argument><expr><name><name pos:line="54" pos:column="50">fields<pos:position pos:line="54" pos:column="56"/></name><index pos:line="54" pos:column="56">[<expr><name pos:line="54" pos:column="57">i<pos:position pos:line="54" pos:column="58"/></name></expr>]<pos:position pos:line="54" pos:column="59"/></index></name> <operator pos:line="54" pos:column="60">+<pos:position pos:line="54" pos:column="61"/></operator> <literal type="number" pos:line="54" pos:column="62">3<pos:position pos:line="54" pos:column="63"/></literal></expr></argument>, <argument><expr><operator pos:line="54" pos:column="65">&amp;<pos:position pos:line="54" pos:column="70"/></operator><name pos:line="54" pos:column="66">rx<pos:position pos:line="54" pos:column="68"/></name></expr></argument>)<pos:position pos:line="54" pos:column="69"/></argument_list></call> <operator pos:line="54" pos:column="70">==<pos:position pos:line="54" pos:column="72"/></operator> <literal type="number" pos:line="54" pos:column="73">0<pos:position pos:line="54" pos:column="74"/></literal></expr>)<pos:position pos:line="54" pos:column="75"/></condition><then pos:line="54" pos:column="75">
					<block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="41">have_rx<pos:position pos:line="55" pos:column="48"/></name> <operator pos:line="55" pos:column="49">=<pos:position pos:line="55" pos:column="50"/></operator> <literal type="number" pos:line="55" pos:column="51">1<pos:position pos:line="55" pos:column="52"/></literal></expr>;<pos:position pos:line="55" pos:column="53"/></expr_stmt></block></then></if>
			}<pos:position pos:line="56" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="57" pos:column="18"/></block></for>

		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">have_rx<pos:position pos:line="59" pos:column="28"/></name> <operator pos:line="59" pos:column="29">&amp;&amp;<pos:position pos:line="59" pos:column="39"/></operator> <name pos:line="59" pos:column="32">have_tx<pos:position pos:line="59" pos:column="39"/></name></expr>)<pos:position pos:line="59" pos:column="40"/></condition><then pos:line="59" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="25">serial_submit<pos:position pos:line="60" pos:column="38"/></name> <argument_list pos:line="60" pos:column="39">(<argument><expr><name><name pos:line="60" pos:column="40">fields<pos:position pos:line="60" pos:column="46"/></name><index pos:line="60" pos:column="46">[<expr><literal type="number" pos:line="60" pos:column="47">0<pos:position pos:line="60" pos:column="48"/></literal></expr>]<pos:position pos:line="60" pos:column="49"/></index></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="51">rx<pos:position pos:line="60" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="55">tx<pos:position pos:line="60" pos:column="57"/></name></expr></argument>)<pos:position pos:line="60" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="59"/></expr_stmt></block></then></if>
	}<pos:position pos:line="61" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="63" pos:column="9">fclose<pos:position pos:line="63" pos:column="15"/></name> <argument_list pos:line="63" pos:column="16">(<argument><expr><name pos:line="63" pos:column="17">fh<pos:position pos:line="63" pos:column="19"/></name></expr></argument>)<pos:position pos:line="63" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="21"/></expr_stmt>
	<return pos:line="64" pos:column="9">return <expr><operator pos:line="64" pos:column="16">(<pos:position pos:line="64" pos:column="17"/></operator><literal type="number" pos:line="64" pos:column="17">0<pos:position pos:line="64" pos:column="18"/></literal><operator pos:line="64" pos:column="18">)<pos:position pos:line="64" pos:column="19"/></operator></expr>;<pos:position pos:line="64" pos:column="20"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2160_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_part_number<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">ret_buffer<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">size_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">ret_buffer_len<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">type<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">uint64_t<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">value<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list> <block pos:line="2" pos:column="56">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">packet_ptr<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">packet_len<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">part_header_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">pkg_head<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">uint64_t<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">pkg_value<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">offset<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">packet_len<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <sizeof pos:line="11" pos:column="16">sizeof<argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">pkg_head<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></sizeof> <operator pos:line="11" pos:column="33">+<pos:position pos:line="11" pos:column="34"/></operator> <sizeof pos:line="11" pos:column="35">sizeof<argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">pkg_value<pos:position pos:line="11" pos:column="51"/></name></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></sizeof></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">*<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">ret_buffer_len<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="25">packet_len<pos:position pos:line="13" pos:column="35"/></name></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="16" pos:column="3">pkg_head<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">.<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">type<pos:position pos:line="16" pos:column="16"/></name></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">htons<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">type<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">pkg_head<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">.<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">length<pos:position pos:line="17" pos:column="18"/></name></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <call><name pos:line="17" pos:column="21">htons<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">packet_len<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">pkg_value<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">htonll<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">value<pos:position pos:line="18" pos:column="27"/></name></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name pos:line="20" pos:column="3">packet_ptr<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <operator pos:line="20" pos:column="16">*<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">ret_buffer<pos:position pos:line="20" pos:column="27"/></name></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">offset<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <literal type="number" pos:line="21" pos:column="12">0<pos:position pos:line="21" pos:column="13"/></literal></expr>;<pos:position pos:line="21" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">memcpy<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><name pos:line="22" pos:column="10">packet_ptr<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">+<pos:position pos:line="22" pos:column="22"/></operator> <name pos:line="22" pos:column="23">offset<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="31">&amp;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="32">pkg_head<pos:position pos:line="22" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="42">sizeof<argument_list pos:line="22" pos:column="48">(<argument><expr><name pos:line="22" pos:column="49">pkg_head<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><name pos:line="23" pos:column="3">offset<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">+=<pos:position pos:line="23" pos:column="12"/></operator> <sizeof pos:line="23" pos:column="13">sizeof<argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">pkg_head<pos:position pos:line="23" pos:column="28"/></name></expr></argument>)<pos:position pos:line="23" pos:column="29"/></argument_list></sizeof></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">memcpy<pos:position pos:line="24" pos:column="9"/></name><argument_list pos:line="24" pos:column="9">(<argument><expr><name pos:line="24" pos:column="10">packet_ptr<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">+<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">offset<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="31">&amp;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="32">pkg_value<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="43">sizeof<argument_list pos:line="24" pos:column="49">(<argument><expr><name pos:line="24" pos:column="50">pkg_value<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><name pos:line="25" pos:column="3">offset<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">+=<pos:position pos:line="25" pos:column="12"/></operator> <sizeof pos:line="25" pos:column="13">sizeof<argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">pkg_value<pos:position pos:line="25" pos:column="29"/></name></expr></argument>)<pos:position pos:line="25" pos:column="30"/></argument_list></sizeof></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">assert<pos:position pos:line="27" pos:column="9"/></name><argument_list pos:line="27" pos:column="9">(<argument><expr><name pos:line="27" pos:column="10">offset<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">==<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">packet_len<pos:position pos:line="27" pos:column="30"/></name></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="29" pos:column="3">*<pos:position pos:line="29" pos:column="4"/></operator><name pos:line="29" pos:column="4">ret_buffer<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <name pos:line="29" pos:column="17">packet_ptr<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">+<pos:position pos:line="29" pos:column="29"/></operator> <name pos:line="29" pos:column="30">packet_len<pos:position pos:line="29" pos:column="40"/></name></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="30" pos:column="3">*<pos:position pos:line="30" pos:column="4"/></operator><name pos:line="30" pos:column="4">ret_buffer_len<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">-=<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">packet_len<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>

  <return pos:line="32" pos:column="3">return <expr><literal type="number" pos:line="32" pos:column="10">0<pos:position pos:line="32" pos:column="11"/></literal></expr>;<pos:position pos:line="32" pos:column="12"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

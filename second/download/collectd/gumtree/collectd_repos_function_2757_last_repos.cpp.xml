<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2757_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">read_cmdline<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">argc<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier><modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">argv<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">cmdline_config<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">config<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list> <block pos:line="1" pos:column="73">{
  <comment type="block" pos:line="2" pos:column="3">/* read options */</comment>
  <while pos:line="3" pos:column="3">while <condition pos:line="3" pos:column="9">(<expr><literal type="number" pos:line="3" pos:column="10">1<pos:position pos:line="3" pos:column="11"/></literal></expr>)<pos:position pos:line="3" pos:column="12"/></condition> <block pos:line="3" pos:column="13">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">c<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">c<pos:position pos:line="5" pos:column="6"/></name> <operator pos:line="5" pos:column="7">=<pos:position pos:line="5" pos:column="8"/></operator> <call><name pos:line="5" pos:column="9">getopt<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">argc<pos:position pos:line="5" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="22">argv<pos:position pos:line="5" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="28">"htTC:"<pos:position pos:line="5" pos:column="35"/></literal>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">COLLECT_DAEMON<pos:position pos:line="6" pos:column="19"/></name></expr></cpp:if>
                           <literal type="string" pos:line="7" pos:column="28">"fP:"<pos:position pos:line="7" pos:column="33"/></literal></expr></argument>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
               )<pos:position pos:line="9" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="18"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">c<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">==<pos:position pos:line="11" pos:column="13"/></operator> <operator pos:line="11" pos:column="14">-<pos:position pos:line="11" pos:column="15"/></operator><literal type="number" pos:line="11" pos:column="15">1<pos:position pos:line="11" pos:column="16"/></literal></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17">
      <block type="pseudo"><break pos:line="12" pos:column="7">break;<pos:position pos:line="12" pos:column="13"/></break></block></then></if>

    <switch pos:line="14" pos:column="5">switch <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">c<pos:position pos:line="14" pos:column="14"/></name></expr>)<pos:position pos:line="14" pos:column="15"/></condition> <block pos:line="14" pos:column="16">{
    <case pos:line="15" pos:column="5">case <expr><literal type="char" pos:line="15" pos:column="10">'B'<pos:position pos:line="15" pos:column="13"/></literal></expr>:<pos:position pos:line="15" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="16" pos:column="7">config<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">create_basedir<pos:position pos:line="16" pos:column="29"/></name></name> <operator pos:line="16" pos:column="30">=<pos:position pos:line="16" pos:column="31"/></operator> <literal type="number" pos:line="16" pos:column="32">0<pos:position pos:line="16" pos:column="33"/></literal></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
      <break pos:line="17" pos:column="7">break;<pos:position pos:line="17" pos:column="13"/></break>
    <case pos:line="18" pos:column="5">case <expr><literal type="char" pos:line="18" pos:column="10">'C'<pos:position pos:line="18" pos:column="13"/></literal></expr>:<pos:position pos:line="18" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="19" pos:column="7">config<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">configfile<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">optarg<pos:position pos:line="19" pos:column="34"/></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
      <break pos:line="20" pos:column="7">break;<pos:position pos:line="20" pos:column="13"/></break>
    <case pos:line="21" pos:column="5">case <expr><literal type="char" pos:line="21" pos:column="10">'t'<pos:position pos:line="21" pos:column="13"/></literal></expr>:<pos:position pos:line="21" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="22" pos:column="7">config<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">test_config<pos:position pos:line="22" pos:column="26"/></name></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <literal type="number" pos:line="22" pos:column="29">1<pos:position pos:line="22" pos:column="30"/></literal></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
      <break pos:line="23" pos:column="7">break;<pos:position pos:line="23" pos:column="13"/></break>
    <case pos:line="24" pos:column="5">case <expr><literal type="char" pos:line="24" pos:column="10">'T'<pos:position pos:line="24" pos:column="13"/></literal></expr>:<pos:position pos:line="24" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">config<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">test_readall<pos:position pos:line="25" pos:column="27"/></name></name> <operator pos:line="25" pos:column="28">=<pos:position pos:line="25" pos:column="29"/></operator> <literal type="number" pos:line="25" pos:column="30">1<pos:position pos:line="25" pos:column="31"/></literal></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">global_option_set<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><literal type="string" pos:line="26" pos:column="25">"ReadThreads"<pos:position pos:line="26" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="40">"-1"<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="46">1<pos:position pos:line="26" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>
<cpp:if pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">if<pos:position pos:line="27" pos:column="4"/></cpp:directive> <expr><name pos:line="27" pos:column="5">COLLECT_DAEMON<pos:position pos:line="27" pos:column="19"/></name></expr></cpp:if>
      <expr_stmt><expr><name><name pos:line="28" pos:column="7">config<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">daemonize<pos:position pos:line="28" pos:column="24"/></name></name> <operator pos:line="28" pos:column="25">=<pos:position pos:line="28" pos:column="26"/></operator> <literal type="number" pos:line="28" pos:column="27">0<pos:position pos:line="28" pos:column="28"/></literal></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="29" pos:column="8">/* COLLECT_DAEMON */</comment>
      <break pos:line="30" pos:column="7">break;<pos:position pos:line="30" pos:column="13"/></break>
<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><name pos:line="31" pos:column="5">COLLECT_DAEMON<pos:position pos:line="31" pos:column="19"/></name></expr></cpp:if>
    <case pos:line="32" pos:column="5">case <expr><literal type="char" pos:line="32" pos:column="10">'P'<pos:position pos:line="32" pos:column="13"/></literal></expr>:<pos:position pos:line="32" pos:column="14"/></case>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">global_option_set<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><literal type="string" pos:line="33" pos:column="25">"PIDFile"<pos:position pos:line="33" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="36">optarg<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="44">1<pos:position pos:line="33" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt>
      <break pos:line="34" pos:column="7">break;<pos:position pos:line="34" pos:column="13"/></break>
    <case pos:line="35" pos:column="5">case <expr><literal type="char" pos:line="35" pos:column="10">'f'<pos:position pos:line="35" pos:column="13"/></literal></expr>:<pos:position pos:line="35" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="36" pos:column="7">config<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">daemonize<pos:position pos:line="36" pos:column="24"/></name></name> <operator pos:line="36" pos:column="25">=<pos:position pos:line="36" pos:column="26"/></operator> <literal type="number" pos:line="36" pos:column="27">0<pos:position pos:line="36" pos:column="28"/></literal></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
      <break pos:line="37" pos:column="7">break;<pos:position pos:line="37" pos:column="13"/></break>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="38" pos:column="8">/* COLLECT_DAEMON */</comment>
    <case pos:line="39" pos:column="5">case <expr><literal type="char" pos:line="39" pos:column="10">'h'<pos:position pos:line="39" pos:column="13"/></literal></expr>:<pos:position pos:line="39" pos:column="14"/></case>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">exit_usage<pos:position pos:line="40" pos:column="17"/></name><argument_list pos:line="40" pos:column="17">(<argument><expr><literal type="number" pos:line="40" pos:column="18">0<pos:position pos:line="40" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="21"/></expr_stmt>
      <break pos:line="41" pos:column="7">break;<pos:position pos:line="41" pos:column="13"/></break>
    <default pos:line="42" pos:column="5">default:<pos:position pos:line="42" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">exit_usage<pos:position pos:line="43" pos:column="17"/></name><argument_list pos:line="43" pos:column="17">(<argument><expr><literal type="number" pos:line="43" pos:column="18">1<pos:position pos:line="43" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></switch> <comment type="block" pos:line="44" pos:column="7">/* switch (c) */</comment>
  }<pos:position pos:line="45" pos:column="4"/></block></while>   <comment type="block" pos:line="45" pos:column="7">/* while (1) */</comment>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

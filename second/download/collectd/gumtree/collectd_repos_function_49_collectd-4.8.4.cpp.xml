<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_49_collectd-4.8.4.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">lt_dlerror<pos:position pos:line="2" pos:column="11"/></name> <parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">void<pos:position pos:line="2" pos:column="17"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="18"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">error<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">LT__GETERROR<pos:position pos:line="6" pos:column="15"/></name> <argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">error<pos:position pos:line="6" pos:column="22"/></name></expr></argument>)<pos:position pos:line="6" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">LT__SETERRORSTR<pos:position pos:line="7" pos:column="18"/></name> <argument_list pos:line="7" pos:column="19">(<argument><expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>

  <return pos:line="9" pos:column="3">return <expr><ternary><condition><expr><name pos:line="9" pos:column="10">error<pos:position pos:line="9" pos:column="15"/></name></expr> ?<pos:position pos:line="9" pos:column="17"/></condition><then pos:line="9" pos:column="17"> <expr><name pos:line="9" pos:column="18">error<pos:position pos:line="9" pos:column="23"/></name></expr> <pos:position pos:line="9" pos:column="24"/></then><else pos:line="9" pos:column="24">: <expr><name pos:line="9" pos:column="26">NULL<pos:position pos:line="9" pos:column="30"/></name></expr></else></ternary></expr>;<pos:position pos:line="9" pos:column="31"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

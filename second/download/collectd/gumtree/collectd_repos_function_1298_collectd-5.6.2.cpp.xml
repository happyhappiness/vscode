<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1298_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cldap_config_add<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">oconfig_item_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">ci<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <comment type="block" pos:line="1" pos:column="49">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cldap_t<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">st<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">st<pos:position pos:line="6" pos:column="5"/></name> <operator pos:line="6" pos:column="6">=<pos:position pos:line="6" pos:column="7"/></operator> <call><name pos:line="6" pos:column="8">calloc<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">(<argument><expr><literal type="number" pos:line="6" pos:column="15">1<pos:position pos:line="6" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="18">sizeof<argument_list pos:line="6" pos:column="24">(<argument><expr><operator pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">st<pos:position pos:line="6" pos:column="28"/></name></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">st<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">==<pos:position pos:line="7" pos:column="12"/></operator> <name pos:line="7" pos:column="13">NULL<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18"> <block pos:line="7" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"openldap plugin: calloc failed."<pos:position pos:line="8" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">-<pos:position pos:line="9" pos:column="14"/></operator><literal type="number" pos:line="9" pos:column="14">1<pos:position pos:line="9" pos:column="15"/></literal><operator pos:line="9" pos:column="15">)<pos:position pos:line="9" pos:column="16"/></operator></expr>;<pos:position pos:line="9" pos:column="17"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="12" pos:column="3">status<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <call><name pos:line="12" pos:column="12">cf_util_get_string<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">ci<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="35">&amp;<pos:position pos:line="12" pos:column="40"/></operator><name><name pos:line="12" pos:column="36">st<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">name<pos:position pos:line="12" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">status<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">!=<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19"> <block pos:line="13" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">sfree<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><name pos:line="14" pos:column="11">st<pos:position pos:line="14" pos:column="13"/></name></expr></argument>)<pos:position pos:line="14" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">status<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">)<pos:position pos:line="15" pos:column="20"/></operator></expr>;<pos:position pos:line="15" pos:column="21"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="18" pos:column="3">st<pos:position pos:line="18" pos:column="5"/></name><operator pos:line="18" pos:column="5">-&gt;<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="7">starttls<pos:position pos:line="18" pos:column="15"/></name></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">st<pos:position pos:line="19" pos:column="5"/></name><operator pos:line="19" pos:column="5">-&gt;<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="7">timeout<pos:position pos:line="19" pos:column="14"/></name></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <call pos:line="19" pos:column="17">(<name pos:line="19" pos:column="18">long<pos:position pos:line="19" pos:column="22"/></name>)<argument_list pos:line="19" pos:column="23">(<argument><expr><call><name pos:line="19" pos:column="24">CDTIME_T_TO_MS<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><call><name pos:line="19" pos:column="39">plugin_get_interval<pos:position pos:line="19" pos:column="58"/></name><argument_list pos:line="19" pos:column="58">()<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call> <operator pos:line="19" pos:column="62">/<pos:position pos:line="19" pos:column="63"/></operator> <literal type="number" pos:line="19" pos:column="64">1000<pos:position pos:line="19" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">st<pos:position pos:line="20" pos:column="5"/></name><operator pos:line="20" pos:column="5">-&gt;<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="7">verifyhost<pos:position pos:line="20" pos:column="17"/></name></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <literal type="number" pos:line="20" pos:column="20">1<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">st<pos:position pos:line="21" pos:column="5"/></name><operator pos:line="21" pos:column="5">-&gt;<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="7">version<pos:position pos:line="21" pos:column="14"/></name></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">LDAP_VERSION3<pos:position pos:line="21" pos:column="30"/></name></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>

  <for pos:line="23" pos:column="3">for <control pos:line="23" pos:column="7">(<init><decl><type><name pos:line="23" pos:column="8">int<pos:position pos:line="23" pos:column="11"/></name></type> <name pos:line="23" pos:column="12">i<pos:position pos:line="23" pos:column="13"/></name> <init pos:line="23" pos:column="14">= <expr><literal type="number" pos:line="23" pos:column="16">0<pos:position pos:line="23" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="18"/></init> <condition><expr><name pos:line="23" pos:column="19">i<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">&lt;<pos:position pos:line="23" pos:column="25"/></operator> <name><name pos:line="23" pos:column="23">ci<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">-&gt;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="27">children_num<pos:position pos:line="23" pos:column="39"/></name></name></expr>;<pos:position pos:line="23" pos:column="40"/></condition> <incr><expr><name pos:line="23" pos:column="41">i<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">++<pos:position pos:line="23" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="45"/></control> <block pos:line="23" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">oconfig_item_t<pos:position pos:line="24" pos:column="19"/></name> <modifier pos:line="24" pos:column="20">*<pos:position pos:line="24" pos:column="21"/></modifier></type><name pos:line="24" pos:column="21">child<pos:position pos:line="24" pos:column="26"/></name> <init pos:line="24" pos:column="27">= <expr><name><name pos:line="24" pos:column="29">ci<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">-&gt;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="33">children<pos:position pos:line="24" pos:column="41"/></name></name> <operator pos:line="24" pos:column="42">+<pos:position pos:line="24" pos:column="43"/></operator> <name pos:line="24" pos:column="44">i<pos:position pos:line="24" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="46"/></decl_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name pos:line="26" pos:column="9">strcasecmp<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><literal type="string" pos:line="26" pos:column="20">"BindDN"<pos:position pos:line="26" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="30">child<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">-&gt;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="37">key<pos:position pos:line="26" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call> <operator pos:line="26" pos:column="42">==<pos:position pos:line="26" pos:column="44"/></operator> <literal type="number" pos:line="26" pos:column="45">0<pos:position pos:line="26" pos:column="46"/></literal></expr>)<pos:position pos:line="26" pos:column="47"/></condition><then pos:line="26" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="7">status<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">cf_util_get_string<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">child<pos:position pos:line="27" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="42">&amp;<pos:position pos:line="27" pos:column="47"/></operator><name><name pos:line="27" pos:column="43">st<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">-&gt;<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="47">binddn<pos:position pos:line="27" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt></block></then>
    <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><call><name pos:line="28" pos:column="14">strcasecmp<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><literal type="string" pos:line="28" pos:column="25">"Password"<pos:position pos:line="28" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="37">child<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">-&gt;<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="44">key<pos:position pos:line="28" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call> <operator pos:line="28" pos:column="49">==<pos:position pos:line="28" pos:column="51"/></operator> <literal type="number" pos:line="28" pos:column="52">0<pos:position pos:line="28" pos:column="53"/></literal></expr>)<pos:position pos:line="28" pos:column="54"/></condition><then pos:line="28" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="7">status<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">cf_util_get_string<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument><expr><name pos:line="29" pos:column="35">child<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="42">&amp;<pos:position pos:line="29" pos:column="47"/></operator><name><name pos:line="29" pos:column="43">st<pos:position pos:line="29" pos:column="45"/></name><operator pos:line="29" pos:column="45">-&gt;<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="47">password<pos:position pos:line="29" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="30" pos:column="5">else <if pos:line="30" pos:column="10">if <condition pos:line="30" pos:column="13">(<expr><call><name pos:line="30" pos:column="14">strcasecmp<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><literal type="string" pos:line="30" pos:column="25">"CACert"<pos:position pos:line="30" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="35">child<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">key<pos:position pos:line="30" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call> <operator pos:line="30" pos:column="47">==<pos:position pos:line="30" pos:column="49"/></operator> <literal type="number" pos:line="30" pos:column="50">0<pos:position pos:line="30" pos:column="51"/></literal></expr>)<pos:position pos:line="30" pos:column="52"/></condition><then pos:line="30" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">status<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">cf_util_get_string<pos:position pos:line="31" pos:column="34"/></name><argument_list pos:line="31" pos:column="34">(<argument><expr><name pos:line="31" pos:column="35">child<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="42">&amp;<pos:position pos:line="31" pos:column="47"/></operator><name><name pos:line="31" pos:column="43">st<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">-&gt;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="47">cacert<pos:position pos:line="31" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><call><name pos:line="32" pos:column="14">strcasecmp<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><literal type="string" pos:line="32" pos:column="25">"StartTLS"<pos:position pos:line="32" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="37">child<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">key<pos:position pos:line="32" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call> <operator pos:line="32" pos:column="49">==<pos:position pos:line="32" pos:column="51"/></operator> <literal type="number" pos:line="32" pos:column="52">0<pos:position pos:line="32" pos:column="53"/></literal></expr>)<pos:position pos:line="32" pos:column="54"/></condition><then pos:line="32" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">status<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">cf_util_get_boolean<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">child<pos:position pos:line="33" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="43">&amp;<pos:position pos:line="33" pos:column="48"/></operator><name><name pos:line="33" pos:column="44">st<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">-&gt;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="48">starttls<pos:position pos:line="33" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="34" pos:column="5">else <if pos:line="34" pos:column="10">if <condition pos:line="34" pos:column="13">(<expr><call><name pos:line="34" pos:column="14">strcasecmp<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><literal type="string" pos:line="34" pos:column="25">"Timeout"<pos:position pos:line="34" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="36">child<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">-&gt;<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="43">key<pos:position pos:line="34" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call> <operator pos:line="34" pos:column="48">==<pos:position pos:line="34" pos:column="50"/></operator> <literal type="number" pos:line="34" pos:column="51">0<pos:position pos:line="34" pos:column="52"/></literal></expr>)<pos:position pos:line="34" pos:column="53"/></condition><then pos:line="34" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="7">status<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <call><name pos:line="35" pos:column="16">cf_util_get_int<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr><name pos:line="35" pos:column="32">child<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="39">&amp;<pos:position pos:line="35" pos:column="44"/></operator><name><name pos:line="35" pos:column="40">st<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">-&gt;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="44">timeout<pos:position pos:line="35" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="36" pos:column="5">else <if pos:line="36" pos:column="10">if <condition pos:line="36" pos:column="13">(<expr><call><name pos:line="36" pos:column="14">strcasecmp<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><literal type="string" pos:line="36" pos:column="25">"URL"<pos:position pos:line="36" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="32">child<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">-&gt;<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="39">key<pos:position pos:line="36" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call> <operator pos:line="36" pos:column="44">==<pos:position pos:line="36" pos:column="46"/></operator> <literal type="number" pos:line="36" pos:column="47">0<pos:position pos:line="36" pos:column="48"/></literal></expr>)<pos:position pos:line="36" pos:column="49"/></condition><then pos:line="36" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="7">status<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <call><name pos:line="37" pos:column="16">cf_util_get_string<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name pos:line="37" pos:column="35">child<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="42">&amp;<pos:position pos:line="37" pos:column="47"/></operator><name><name pos:line="37" pos:column="43">st<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">-&gt;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="47">url<pos:position pos:line="37" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><call><name pos:line="38" pos:column="14">strcasecmp<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><literal type="string" pos:line="38" pos:column="25">"VerifyHost"<pos:position pos:line="38" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="39">child<pos:position pos:line="38" pos:column="44"/></name><operator pos:line="38" pos:column="44">-&gt;<pos:position pos:line="38" pos:column="49"/></operator><name pos:line="38" pos:column="46">key<pos:position pos:line="38" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call> <operator pos:line="38" pos:column="51">==<pos:position pos:line="38" pos:column="53"/></operator> <literal type="number" pos:line="38" pos:column="54">0<pos:position pos:line="38" pos:column="55"/></literal></expr>)<pos:position pos:line="38" pos:column="56"/></condition><then pos:line="38" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="7">status<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">cf_util_get_boolean<pos:position pos:line="39" pos:column="35"/></name><argument_list pos:line="39" pos:column="35">(<argument><expr><name pos:line="39" pos:column="36">child<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="43">&amp;<pos:position pos:line="39" pos:column="48"/></operator><name><name pos:line="39" pos:column="44">st<pos:position pos:line="39" pos:column="46"/></name><operator pos:line="39" pos:column="46">-&gt;<pos:position pos:line="39" pos:column="51"/></operator><name pos:line="39" pos:column="48">verifyhost<pos:position pos:line="39" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="60"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="40" pos:column="5">else <if pos:line="40" pos:column="10">if <condition pos:line="40" pos:column="13">(<expr><call><name pos:line="40" pos:column="14">strcasecmp<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><literal type="string" pos:line="40" pos:column="25">"Version"<pos:position pos:line="40" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="36">child<pos:position pos:line="40" pos:column="41"/></name><operator pos:line="40" pos:column="41">-&gt;<pos:position pos:line="40" pos:column="46"/></operator><name pos:line="40" pos:column="43">key<pos:position pos:line="40" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call> <operator pos:line="40" pos:column="48">==<pos:position pos:line="40" pos:column="50"/></operator> <literal type="number" pos:line="40" pos:column="51">0<pos:position pos:line="40" pos:column="52"/></literal></expr>)<pos:position pos:line="40" pos:column="53"/></condition><then pos:line="40" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="7">status<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">cf_util_get_int<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">child<pos:position pos:line="41" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="39">&amp;<pos:position pos:line="41" pos:column="44"/></operator><name><name pos:line="41" pos:column="40">st<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">-&gt;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="44">version<pos:position pos:line="41" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <else pos:line="42" pos:column="5">else <block pos:line="42" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">WARNING<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><literal type="string" pos:line="43" pos:column="15">"openldap plugin: Option `%s' not allowed here."<pos:position pos:line="43" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="65">child<pos:position pos:line="43" pos:column="70"/></name><operator pos:line="43" pos:column="70">-&gt;<pos:position pos:line="43" pos:column="75"/></operator><name pos:line="43" pos:column="72">key<pos:position pos:line="43" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><name pos:line="44" pos:column="7">status<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <operator pos:line="44" pos:column="16">-<pos:position pos:line="44" pos:column="17"/></operator><literal type="number" pos:line="44" pos:column="17">1<pos:position pos:line="44" pos:column="18"/></literal></expr>;<pos:position pos:line="44" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></else></if>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">status<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">!=<pos:position pos:line="47" pos:column="18"/></operator> <literal type="number" pos:line="47" pos:column="19">0<pos:position pos:line="47" pos:column="20"/></literal></expr>)<pos:position pos:line="47" pos:column="21"/></condition><then pos:line="47" pos:column="21">
      <block type="pseudo"><break pos:line="48" pos:column="7">break;<pos:position pos:line="48" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="49" pos:column="4"/></block></for>

  <comment type="block" pos:line="51" pos:column="3">/* Check if struct is complete.. */</comment>
  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><operator pos:line="52" pos:column="7">(<pos:position pos:line="52" pos:column="8"/></operator><name pos:line="52" pos:column="8">status<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">==<pos:position pos:line="52" pos:column="17"/></operator> <literal type="number" pos:line="52" pos:column="18">0<pos:position pos:line="52" pos:column="19"/></literal><operator pos:line="52" pos:column="19">)<pos:position pos:line="52" pos:column="20"/></operator> <operator pos:line="52" pos:column="21">&amp;&amp;<pos:position pos:line="52" pos:column="31"/></operator> <operator pos:line="52" pos:column="24">(<pos:position pos:line="52" pos:column="25"/></operator><name><name pos:line="52" pos:column="25">st<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">-&gt;<pos:position pos:line="52" pos:column="32"/></operator><name pos:line="52" pos:column="29">url<pos:position pos:line="52" pos:column="32"/></name></name> <operator pos:line="52" pos:column="33">==<pos:position pos:line="52" pos:column="35"/></operator> <name pos:line="52" pos:column="36">NULL<pos:position pos:line="52" pos:column="40"/></name><operator pos:line="52" pos:column="40">)<pos:position pos:line="52" pos:column="41"/></operator></expr>)<pos:position pos:line="52" pos:column="42"/></condition><then pos:line="52" pos:column="42"> <block pos:line="52" pos:column="43">{
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">ERROR<pos:position pos:line="53" pos:column="10"/></name><argument_list pos:line="53" pos:column="10">(<argument><expr><literal type="string" pos:line="53" pos:column="11">"openldap plugin: Instance `%s': "<pos:position pos:line="53" pos:column="45"/></literal>
          <literal type="string" pos:line="54" pos:column="11">"No URL has been configured."<pos:position pos:line="54" pos:column="40"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="55" pos:column="11">st<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">-&gt;<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="15">name<pos:position pos:line="55" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="56" pos:column="5">status<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <operator pos:line="56" pos:column="14">-<pos:position pos:line="56" pos:column="15"/></operator><literal type="number" pos:line="56" pos:column="15">1<pos:position pos:line="56" pos:column="16"/></literal></expr>;<pos:position pos:line="56" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="59" pos:column="3">/* Check if URL is valid */</comment>
  <if pos:line="60" pos:column="3">if <condition pos:line="60" pos:column="6">(<expr><operator pos:line="60" pos:column="7">(<pos:position pos:line="60" pos:column="8"/></operator><name pos:line="60" pos:column="8">status<pos:position pos:line="60" pos:column="14"/></name> <operator pos:line="60" pos:column="15">==<pos:position pos:line="60" pos:column="17"/></operator> <literal type="number" pos:line="60" pos:column="18">0<pos:position pos:line="60" pos:column="19"/></literal><operator pos:line="60" pos:column="19">)<pos:position pos:line="60" pos:column="20"/></operator> <operator pos:line="60" pos:column="21">&amp;&amp;<pos:position pos:line="60" pos:column="31"/></operator> <operator pos:line="60" pos:column="24">(<pos:position pos:line="60" pos:column="25"/></operator><name><name pos:line="60" pos:column="25">st<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">-&gt;<pos:position pos:line="60" pos:column="32"/></operator><name pos:line="60" pos:column="29">url<pos:position pos:line="60" pos:column="32"/></name></name> <operator pos:line="60" pos:column="33">!=<pos:position pos:line="60" pos:column="35"/></operator> <name pos:line="60" pos:column="36">NULL<pos:position pos:line="60" pos:column="40"/></name><operator pos:line="60" pos:column="40">)<pos:position pos:line="60" pos:column="41"/></operator></expr>)<pos:position pos:line="60" pos:column="42"/></condition><then pos:line="60" pos:column="42"> <block pos:line="60" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="61" pos:column="5">LDAPURLDesc<pos:position pos:line="61" pos:column="16"/></name> <modifier pos:line="61" pos:column="17">*<pos:position pos:line="61" pos:column="18"/></modifier></type><name pos:line="61" pos:column="18">ludpp<pos:position pos:line="61" pos:column="23"/></name></decl>;<pos:position pos:line="61" pos:column="24"/></decl_stmt>

    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><call><name pos:line="63" pos:column="9">ldap_url_parse<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><name><name pos:line="63" pos:column="24">st<pos:position pos:line="63" pos:column="26"/></name><operator pos:line="63" pos:column="26">-&gt;<pos:position pos:line="63" pos:column="31"/></operator><name pos:line="63" pos:column="28">url<pos:position pos:line="63" pos:column="31"/></name></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="33">&amp;<pos:position pos:line="63" pos:column="38"/></operator><name pos:line="63" pos:column="34">ludpp<pos:position pos:line="63" pos:column="39"/></name></expr></argument>)<pos:position pos:line="63" pos:column="40"/></argument_list></call> <operator pos:line="63" pos:column="41">!=<pos:position pos:line="63" pos:column="43"/></operator> <literal type="number" pos:line="63" pos:column="44">0<pos:position pos:line="63" pos:column="45"/></literal></expr>)<pos:position pos:line="63" pos:column="46"/></condition><then pos:line="63" pos:column="46"> <block pos:line="63" pos:column="47">{
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">ERROR<pos:position pos:line="64" pos:column="12"/></name><argument_list pos:line="64" pos:column="12">(<argument><expr><literal type="string" pos:line="64" pos:column="13">"openldap plugin: Instance `%s': "<pos:position pos:line="64" pos:column="47"/></literal>
            <literal type="string" pos:line="65" pos:column="13">"Invalid URL: `%s'"<pos:position pos:line="65" pos:column="32"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="66" pos:column="13">st<pos:position pos:line="66" pos:column="15"/></name><operator pos:line="66" pos:column="15">-&gt;<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="17">name<pos:position pos:line="66" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="23">st<pos:position pos:line="66" pos:column="25"/></name><operator pos:line="66" pos:column="25">-&gt;<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="27">url<pos:position pos:line="66" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="67" pos:column="7">status<pos:position pos:line="67" pos:column="13"/></name> <operator pos:line="67" pos:column="14">=<pos:position pos:line="67" pos:column="15"/></operator> <operator pos:line="67" pos:column="16">-<pos:position pos:line="67" pos:column="17"/></operator><literal type="number" pos:line="67" pos:column="17">1<pos:position pos:line="67" pos:column="18"/></literal></expr>;<pos:position pos:line="67" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><operator pos:line="70" pos:column="9">(<pos:position pos:line="70" pos:column="10"/></operator><name pos:line="70" pos:column="10">status<pos:position pos:line="70" pos:column="16"/></name> <operator pos:line="70" pos:column="17">==<pos:position pos:line="70" pos:column="19"/></operator> <literal type="number" pos:line="70" pos:column="20">0<pos:position pos:line="70" pos:column="21"/></literal><operator pos:line="70" pos:column="21">)<pos:position pos:line="70" pos:column="22"/></operator> <operator pos:line="70" pos:column="23">&amp;&amp;<pos:position pos:line="70" pos:column="33"/></operator> <operator pos:line="70" pos:column="26">(<pos:position pos:line="70" pos:column="27"/></operator><name><name pos:line="70" pos:column="27">ludpp<pos:position pos:line="70" pos:column="32"/></name><operator pos:line="70" pos:column="32">-&gt;<pos:position pos:line="70" pos:column="37"/></operator><name pos:line="70" pos:column="34">lud_host<pos:position pos:line="70" pos:column="42"/></name></name> <operator pos:line="70" pos:column="43">!=<pos:position pos:line="70" pos:column="45"/></operator> <name pos:line="70" pos:column="46">NULL<pos:position pos:line="70" pos:column="50"/></name><operator pos:line="70" pos:column="50">)<pos:position pos:line="70" pos:column="51"/></operator></expr>)<pos:position pos:line="70" pos:column="52"/></condition><then pos:line="70" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="71" pos:column="7">st<pos:position pos:line="71" pos:column="9"/></name><operator pos:line="71" pos:column="9">-&gt;<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="11">host<pos:position pos:line="71" pos:column="15"/></name></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <call><name pos:line="71" pos:column="18">strdup<pos:position pos:line="71" pos:column="24"/></name><argument_list pos:line="71" pos:column="24">(<argument><expr><name><name pos:line="71" pos:column="25">ludpp<pos:position pos:line="71" pos:column="30"/></name><operator pos:line="71" pos:column="30">-&gt;<pos:position pos:line="71" pos:column="35"/></operator><name pos:line="71" pos:column="32">lud_host<pos:position pos:line="71" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="42"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">ldap_free_urldesc<pos:position pos:line="73" pos:column="22"/></name><argument_list pos:line="73" pos:column="22">(<argument><expr><name pos:line="73" pos:column="23">ludpp<pos:position pos:line="73" pos:column="28"/></name></expr></argument>)<pos:position pos:line="73" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if>

  <if pos:line="76" pos:column="3">if <condition pos:line="76" pos:column="6">(<expr><name pos:line="76" pos:column="7">status<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">==<pos:position pos:line="76" pos:column="16"/></operator> <literal type="number" pos:line="76" pos:column="17">0<pos:position pos:line="76" pos:column="18"/></literal></expr>)<pos:position pos:line="76" pos:column="19"/></condition><then pos:line="76" pos:column="19"> <block pos:line="76" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="77" pos:column="5">cldap_t<pos:position pos:line="77" pos:column="12"/></name> <modifier pos:line="77" pos:column="13">*<pos:position pos:line="77" pos:column="14"/></modifier><modifier pos:line="77" pos:column="14">*<pos:position pos:line="77" pos:column="15"/></modifier></type><name pos:line="77" pos:column="15">temp<pos:position pos:line="77" pos:column="19"/></name></decl>;<pos:position pos:line="77" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><name pos:line="79" pos:column="5">temp<pos:position pos:line="79" pos:column="9"/></name> <operator pos:line="79" pos:column="10">=<pos:position pos:line="79" pos:column="11"/></operator> <operator pos:line="79" pos:column="12">(<pos:position pos:line="79" pos:column="13"/></operator><name pos:line="79" pos:column="13">cldap_t<pos:position pos:line="79" pos:column="20"/></name> <operator pos:line="79" pos:column="21">*<pos:position pos:line="79" pos:column="22"/></operator><operator pos:line="79" pos:column="22">*<pos:position pos:line="79" pos:column="23"/></operator><operator pos:line="79" pos:column="23">)<pos:position pos:line="79" pos:column="24"/></operator><call><name pos:line="79" pos:column="24">realloc<pos:position pos:line="79" pos:column="31"/></name><argument_list pos:line="79" pos:column="31">(<argument><expr><name pos:line="79" pos:column="32">databases<pos:position pos:line="79" pos:column="41"/></name></expr></argument>,
                               <argument><expr><sizeof pos:line="80" pos:column="32">sizeof<argument_list pos:line="80" pos:column="38">(<argument><expr><operator pos:line="80" pos:column="39">*<pos:position pos:line="80" pos:column="40"/></operator><name pos:line="80" pos:column="40">databases<pos:position pos:line="80" pos:column="49"/></name></expr></argument>)<pos:position pos:line="80" pos:column="50"/></argument_list></sizeof> <operator pos:line="80" pos:column="51">*<pos:position pos:line="80" pos:column="52"/></operator> <operator pos:line="80" pos:column="53">(<pos:position pos:line="80" pos:column="54"/></operator><name pos:line="80" pos:column="54">databases_num<pos:position pos:line="80" pos:column="67"/></name> <operator pos:line="80" pos:column="68">+<pos:position pos:line="80" pos:column="69"/></operator> <literal type="number" pos:line="80" pos:column="70">1<pos:position pos:line="80" pos:column="71"/></literal><operator pos:line="80" pos:column="71">)<pos:position pos:line="80" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="80" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="74"/></expr_stmt>

    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><name pos:line="82" pos:column="9">temp<pos:position pos:line="82" pos:column="13"/></name> <operator pos:line="82" pos:column="14">==<pos:position pos:line="82" pos:column="16"/></operator> <name pos:line="82" pos:column="17">NULL<pos:position pos:line="82" pos:column="21"/></name></expr>)<pos:position pos:line="82" pos:column="22"/></condition><then pos:line="82" pos:column="22"> <block pos:line="82" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="83" pos:column="7">ERROR<pos:position pos:line="83" pos:column="12"/></name><argument_list pos:line="83" pos:column="12">(<argument><expr><literal type="string" pos:line="83" pos:column="13">"openldap plugin: realloc failed"<pos:position pos:line="83" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name pos:line="84" pos:column="7">status<pos:position pos:line="84" pos:column="13"/></name> <operator pos:line="84" pos:column="14">=<pos:position pos:line="84" pos:column="15"/></operator> <operator pos:line="84" pos:column="16">-<pos:position pos:line="84" pos:column="17"/></operator><literal type="number" pos:line="84" pos:column="17">1<pos:position pos:line="84" pos:column="18"/></literal></expr>;<pos:position pos:line="84" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></then> <else pos:line="85" pos:column="7">else <block pos:line="85" pos:column="12">{
      <decl_stmt><decl><type><name pos:line="86" pos:column="7">char<pos:position pos:line="86" pos:column="11"/></name></type> <name><name pos:line="86" pos:column="12">callback_name<pos:position pos:line="86" pos:column="25"/></name><index pos:line="86" pos:column="25">[<expr><literal type="number" pos:line="86" pos:column="26">3<pos:position pos:line="86" pos:column="27"/></literal> <operator pos:line="86" pos:column="28">*<pos:position pos:line="86" pos:column="29"/></operator> <name pos:line="86" pos:column="30">DATA_MAX_NAME_LEN<pos:position pos:line="86" pos:column="47"/></name></expr>]<pos:position pos:line="86" pos:column="48"/></index></name> <init pos:line="86" pos:column="49">= <expr><block pos:line="86" pos:column="51">{<expr><literal type="number" pos:line="86" pos:column="52">0<pos:position pos:line="86" pos:column="53"/></literal></expr>}<pos:position pos:line="86" pos:column="54"/></block></expr></init></decl>;<pos:position pos:line="86" pos:column="55"/></decl_stmt>

      <expr_stmt><expr><name pos:line="88" pos:column="7">databases<pos:position pos:line="88" pos:column="16"/></name> <operator pos:line="88" pos:column="17">=<pos:position pos:line="88" pos:column="18"/></operator> <name pos:line="88" pos:column="19">temp<pos:position pos:line="88" pos:column="23"/></name></expr>;<pos:position pos:line="88" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="89" pos:column="7">databases<pos:position pos:line="89" pos:column="16"/></name><index pos:line="89" pos:column="16">[<expr><name pos:line="89" pos:column="17">databases_num<pos:position pos:line="89" pos:column="30"/></name></expr>]<pos:position pos:line="89" pos:column="31"/></index></name> <operator pos:line="89" pos:column="32">=<pos:position pos:line="89" pos:column="33"/></operator> <name pos:line="89" pos:column="34">st<pos:position pos:line="89" pos:column="36"/></name></expr>;<pos:position pos:line="89" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name pos:line="90" pos:column="7">databases_num<pos:position pos:line="90" pos:column="20"/></name><operator pos:line="90" pos:column="20">++<pos:position pos:line="90" pos:column="22"/></operator></expr>;<pos:position pos:line="90" pos:column="23"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="92" pos:column="7">ssnprintf<pos:position pos:line="92" pos:column="16"/></name><argument_list pos:line="92" pos:column="16">(<argument><expr><name pos:line="92" pos:column="17">callback_name<pos:position pos:line="92" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="92" pos:column="32">sizeof<argument_list pos:line="92" pos:column="38">(<argument><expr><name pos:line="92" pos:column="39">callback_name<pos:position pos:line="92" pos:column="52"/></name></expr></argument>)<pos:position pos:line="92" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="55">"openldap/%s/%s"<pos:position pos:line="92" pos:column="71"/></literal></expr></argument>,
                <argument><expr><ternary><condition><expr><operator pos:line="93" pos:column="17">(<pos:position pos:line="93" pos:column="18"/></operator><name><name pos:line="93" pos:column="18">st<pos:position pos:line="93" pos:column="20"/></name><operator pos:line="93" pos:column="20">-&gt;<pos:position pos:line="93" pos:column="25"/></operator><name pos:line="93" pos:column="22">host<pos:position pos:line="93" pos:column="26"/></name></name> <operator pos:line="93" pos:column="27">!=<pos:position pos:line="93" pos:column="29"/></operator> <name pos:line="93" pos:column="30">NULL<pos:position pos:line="93" pos:column="34"/></name><operator pos:line="93" pos:column="34">)<pos:position pos:line="93" pos:column="35"/></operator></expr> ?<pos:position pos:line="93" pos:column="37"/></condition><then pos:line="93" pos:column="37"> <expr><name><name pos:line="93" pos:column="38">st<pos:position pos:line="93" pos:column="40"/></name><operator pos:line="93" pos:column="40">-&gt;<pos:position pos:line="93" pos:column="45"/></operator><name pos:line="93" pos:column="42">host<pos:position pos:line="93" pos:column="46"/></name></name></expr> <pos:position pos:line="93" pos:column="47"/></then><else pos:line="93" pos:column="47">: <expr><name pos:line="93" pos:column="49">hostname_g<pos:position pos:line="93" pos:column="59"/></name></expr></else></ternary></expr></argument>,
                <argument><expr><ternary><condition><expr><operator pos:line="94" pos:column="17">(<pos:position pos:line="94" pos:column="18"/></operator><name><name pos:line="94" pos:column="18">st<pos:position pos:line="94" pos:column="20"/></name><operator pos:line="94" pos:column="20">-&gt;<pos:position pos:line="94" pos:column="25"/></operator><name pos:line="94" pos:column="22">name<pos:position pos:line="94" pos:column="26"/></name></name> <operator pos:line="94" pos:column="27">!=<pos:position pos:line="94" pos:column="29"/></operator> <name pos:line="94" pos:column="30">NULL<pos:position pos:line="94" pos:column="34"/></name><operator pos:line="94" pos:column="34">)<pos:position pos:line="94" pos:column="35"/></operator></expr> ?<pos:position pos:line="94" pos:column="37"/></condition><then pos:line="94" pos:column="37"> <expr><name><name pos:line="94" pos:column="38">st<pos:position pos:line="94" pos:column="40"/></name><operator pos:line="94" pos:column="40">-&gt;<pos:position pos:line="94" pos:column="45"/></operator><name pos:line="94" pos:column="42">name<pos:position pos:line="94" pos:column="46"/></name></name></expr> <pos:position pos:line="94" pos:column="47"/></then><else pos:line="94" pos:column="47">: <expr><literal type="string" pos:line="94" pos:column="49">"default"<pos:position pos:line="94" pos:column="58"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="94" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="60"/></expr_stmt>

      <decl_stmt><decl><type><name pos:line="96" pos:column="7">user_data_t<pos:position pos:line="96" pos:column="18"/></name></type> <name pos:line="96" pos:column="19">ud<pos:position pos:line="96" pos:column="21"/></name> <init pos:line="96" pos:column="22">= <expr><block pos:line="96" pos:column="24">{<expr><operator pos:line="96" pos:column="25">.<pos:position pos:line="96" pos:column="26"/></operator><name pos:line="96" pos:column="26">data<pos:position pos:line="96" pos:column="30"/></name> <operator pos:line="96" pos:column="31">=<pos:position pos:line="96" pos:column="32"/></operator> <name pos:line="96" pos:column="33">st<pos:position pos:line="96" pos:column="35"/></name></expr>}<pos:position pos:line="96" pos:column="36"/></block></expr></init></decl>;<pos:position pos:line="96" pos:column="37"/></decl_stmt>

      <expr_stmt><expr><name pos:line="98" pos:column="7">status<pos:position pos:line="98" pos:column="13"/></name> <operator pos:line="98" pos:column="14">=<pos:position pos:line="98" pos:column="15"/></operator> <call><name pos:line="98" pos:column="16">plugin_register_complex_read<pos:position pos:line="98" pos:column="44"/></name><argument_list pos:line="98" pos:column="44">(<comment type="block" pos:line="98" pos:column="45">/* group = */</comment> <argument><expr><name pos:line="98" pos:column="59">NULL<pos:position pos:line="98" pos:column="63"/></name></expr></argument>,
                                            <comment type="block" pos:line="99" pos:column="45">/* name      = */</comment> <argument><expr><name pos:line="99" pos:column="63">callback_name<pos:position pos:line="99" pos:column="76"/></name></expr></argument>,
                                            <comment type="block" pos:line="100" pos:column="45">/* callback  = */</comment> <argument><expr><name pos:line="100" pos:column="63">cldap_read_host<pos:position pos:line="100" pos:column="78"/></name></expr></argument>,
                                            <comment type="block" pos:line="101" pos:column="45">/* interval  = */</comment> <argument><expr><literal type="number" pos:line="101" pos:column="63">0<pos:position pos:line="101" pos:column="64"/></literal></expr></argument>,
                                            <comment type="block" pos:line="102" pos:column="45">/* user_data = */</comment> <argument><expr><operator pos:line="102" pos:column="63">&amp;<pos:position pos:line="102" pos:column="68"/></operator><name pos:line="102" pos:column="64">ud<pos:position pos:line="102" pos:column="66"/></name></expr></argument>)<pos:position pos:line="102" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="103" pos:column="6"/></block></else></if>
  }<pos:position pos:line="104" pos:column="4"/></block></then></if>

  <if pos:line="106" pos:column="3">if <condition pos:line="106" pos:column="6">(<expr><name pos:line="106" pos:column="7">status<pos:position pos:line="106" pos:column="13"/></name> <operator pos:line="106" pos:column="14">!=<pos:position pos:line="106" pos:column="16"/></operator> <literal type="number" pos:line="106" pos:column="17">0<pos:position pos:line="106" pos:column="18"/></literal></expr>)<pos:position pos:line="106" pos:column="19"/></condition><then pos:line="106" pos:column="19"> <block pos:line="106" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="107" pos:column="5">cldap_free<pos:position pos:line="107" pos:column="15"/></name><argument_list pos:line="107" pos:column="15">(<argument><expr><name pos:line="107" pos:column="16">st<pos:position pos:line="107" pos:column="18"/></name></expr></argument>)<pos:position pos:line="107" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="20"/></expr_stmt>
    <return pos:line="108" pos:column="5">return <expr><operator pos:line="108" pos:column="12">(<pos:position pos:line="108" pos:column="13"/></operator><operator pos:line="108" pos:column="13">-<pos:position pos:line="108" pos:column="14"/></operator><literal type="number" pos:line="108" pos:column="14">1<pos:position pos:line="108" pos:column="15"/></literal><operator pos:line="108" pos:column="15">)<pos:position pos:line="108" pos:column="16"/></operator></expr>;<pos:position pos:line="108" pos:column="17"/></return>
  }<pos:position pos:line="109" pos:column="4"/></block></then></if>

  <return pos:line="111" pos:column="3">return <expr><operator pos:line="111" pos:column="10">(<pos:position pos:line="111" pos:column="11"/></operator><literal type="number" pos:line="111" pos:column="11">0<pos:position pos:line="111" pos:column="12"/></literal><operator pos:line="111" pos:column="12">)<pos:position pos:line="111" pos:column="13"/></operator></expr>;<pos:position pos:line="111" pos:column="14"/></return>
}<pos:position pos:line="112" pos:column="2"/></block></function></unit>

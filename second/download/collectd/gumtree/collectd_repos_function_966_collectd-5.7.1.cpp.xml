<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_966_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">powerdns_config<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">oconfig_item_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ci<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list> <comment type="block" pos:line="1" pos:column="48">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">DEBUG<pos:position pos:line="3" pos:column="8"/></name><argument_list pos:line="3" pos:column="8">(<argument><expr><literal type="string" pos:line="3" pos:column="9">"powerdns plugin: powerdns_config (ci = %p);"<pos:position pos:line="3" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="3" pos:column="56">(<pos:position pos:line="3" pos:column="57"/></operator><name pos:line="3" pos:column="57">void<pos:position pos:line="3" pos:column="61"/></name> <operator pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></operator><operator pos:line="3" pos:column="63">)<pos:position pos:line="3" pos:column="64"/></operator><name pos:line="3" pos:column="64">ci<pos:position pos:line="3" pos:column="66"/></name></expr></argument>)<pos:position pos:line="3" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="68"/></expr_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">list<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">==<pos:position pos:line="5" pos:column="14"/></operator> <name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20"> <block pos:line="5" pos:column="21">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">list<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <call><name pos:line="6" pos:column="12">llist_create<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">()<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">list<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">==<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">NULL<pos:position pos:line="8" pos:column="21"/></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22"> <block pos:line="8" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="9" pos:column="7">ERROR<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><literal type="string" pos:line="9" pos:column="13">"powerdns plugin: `llist_create' failed."<pos:position pos:line="9" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>
      <return pos:line="10" pos:column="7">return <expr><operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><operator pos:line="10" pos:column="15">-<pos:position pos:line="10" pos:column="16"/></operator><literal type="number" pos:line="10" pos:column="16">1<pos:position pos:line="10" pos:column="17"/></literal><operator pos:line="10" pos:column="17">)<pos:position pos:line="10" pos:column="18"/></operator></expr>;<pos:position pos:line="10" pos:column="19"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <for pos:line="14" pos:column="3">for <control pos:line="14" pos:column="7">(<init><decl><type><name pos:line="14" pos:column="8">int<pos:position pos:line="14" pos:column="11"/></name></type> <name pos:line="14" pos:column="12">i<pos:position pos:line="14" pos:column="13"/></name> <init pos:line="14" pos:column="14">= <expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="18"/></init> <condition><expr><name pos:line="14" pos:column="19">i<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">&lt;<pos:position pos:line="14" pos:column="25"/></operator> <name><name pos:line="14" pos:column="23">ci<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">children_num<pos:position pos:line="14" pos:column="39"/></name></name></expr>;<pos:position pos:line="14" pos:column="40"/></condition> <incr><expr><name pos:line="14" pos:column="41">i<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">++<pos:position pos:line="14" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="45"/></control> <block pos:line="14" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">oconfig_item_t<pos:position pos:line="15" pos:column="19"/></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type><name pos:line="15" pos:column="21">option<pos:position pos:line="15" pos:column="27"/></name> <init pos:line="15" pos:column="28">= <expr><name><name pos:line="15" pos:column="30">ci<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">children<pos:position pos:line="15" pos:column="42"/></name></name> <operator pos:line="15" pos:column="43">+<pos:position pos:line="15" pos:column="44"/></operator> <name pos:line="15" pos:column="45">i<pos:position pos:line="15" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="47"/></decl_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><call><name pos:line="17" pos:column="10">strcasecmp<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><literal type="string" pos:line="17" pos:column="21">"Server"<pos:position pos:line="17" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="31">option<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">key<pos:position pos:line="17" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call> <operator pos:line="17" pos:column="44">==<pos:position pos:line="17" pos:column="46"/></operator> <literal type="number" pos:line="17" pos:column="47">0<pos:position pos:line="17" pos:column="48"/></literal><operator pos:line="17" pos:column="48">)<pos:position pos:line="17" pos:column="49"/></operator> <operator pos:line="17" pos:column="50">||<pos:position pos:line="17" pos:column="52"/></operator>
        <operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><call><name pos:line="18" pos:column="10">strcasecmp<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><literal type="string" pos:line="18" pos:column="21">"Recursor"<pos:position pos:line="18" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="33">option<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">key<pos:position pos:line="18" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call> <operator pos:line="18" pos:column="46">==<pos:position pos:line="18" pos:column="48"/></operator> <literal type="number" pos:line="18" pos:column="49">0<pos:position pos:line="18" pos:column="50"/></literal><operator pos:line="18" pos:column="50">)<pos:position pos:line="18" pos:column="51"/></operator></expr>)<pos:position pos:line="18" pos:column="52"/></condition><then pos:line="18" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="7">powerdns_config_add_server<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">option<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt></block></then>
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><call><name pos:line="20" pos:column="14">strcasecmp<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><literal type="string" pos:line="20" pos:column="25">"LocalSocket"<pos:position pos:line="20" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="40">option<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">-&gt;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="48">key<pos:position pos:line="20" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call> <operator pos:line="20" pos:column="53">==<pos:position pos:line="20" pos:column="55"/></operator> <literal type="number" pos:line="20" pos:column="56">0<pos:position pos:line="20" pos:column="57"/></literal></expr>)<pos:position pos:line="20" pos:column="58"/></condition><then pos:line="20" pos:column="58"> <block pos:line="20" pos:column="59">{
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><operator pos:line="21" pos:column="11">(<pos:position pos:line="21" pos:column="12"/></operator><name><name pos:line="21" pos:column="12">option<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">values_num<pos:position pos:line="21" pos:column="30"/></name></name> <operator pos:line="21" pos:column="31">!=<pos:position pos:line="21" pos:column="33"/></operator> <literal type="number" pos:line="21" pos:column="34">1<pos:position pos:line="21" pos:column="35"/></literal><operator pos:line="21" pos:column="35">)<pos:position pos:line="21" pos:column="36"/></operator> <operator pos:line="21" pos:column="37">||<pos:position pos:line="21" pos:column="39"/></operator>
          <operator pos:line="22" pos:column="11">(<pos:position pos:line="22" pos:column="12"/></operator><name><name pos:line="22" pos:column="12">option<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">values<pos:position pos:line="22" pos:column="26"/></name><index pos:line="22" pos:column="26">[<expr><literal type="number" pos:line="22" pos:column="27">0<pos:position pos:line="22" pos:column="28"/></literal></expr>]<pos:position pos:line="22" pos:column="29"/></index></name><operator pos:line="22" pos:column="29">.<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">type<pos:position pos:line="22" pos:column="34"/></name> <operator pos:line="22" pos:column="35">!=<pos:position pos:line="22" pos:column="37"/></operator> <name pos:line="22" pos:column="38">OCONFIG_TYPE_STRING<pos:position pos:line="22" pos:column="57"/></name><operator pos:line="22" pos:column="57">)<pos:position pos:line="22" pos:column="58"/></operator></expr>)<pos:position pos:line="22" pos:column="59"/></condition><then pos:line="22" pos:column="59"> <block pos:line="22" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">WARNING<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><literal type="string" pos:line="23" pos:column="17">"powerdns plugin: `%s' needs exactly one string argument."<pos:position pos:line="23" pos:column="75"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="24" pos:column="17">option<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">-&gt;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="25">key<pos:position pos:line="24" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="25" pos:column="8"/></block></then> <else pos:line="25" pos:column="9">else <block pos:line="25" pos:column="14">{
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">char<pos:position pos:line="26" pos:column="13"/></name> <modifier pos:line="26" pos:column="14">*<pos:position pos:line="26" pos:column="15"/></modifier></type><name pos:line="26" pos:column="15">temp<pos:position pos:line="26" pos:column="19"/></name> <init pos:line="26" pos:column="20">= <expr><call><name pos:line="26" pos:column="22">strdup<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name><name pos:line="26" pos:column="29">option<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">-&gt;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="37">values<pos:position pos:line="26" pos:column="43"/></name><index pos:line="26" pos:column="43">[<expr><literal type="number" pos:line="26" pos:column="44">0<pos:position pos:line="26" pos:column="45"/></literal></expr>]<pos:position pos:line="26" pos:column="46"/></index></name><operator pos:line="26" pos:column="46">.<pos:position pos:line="26" pos:column="47"/></operator><name><name pos:line="26" pos:column="47">value<pos:position pos:line="26" pos:column="52"/></name><operator pos:line="26" pos:column="52">.<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="53">string<pos:position pos:line="26" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="61"/></decl_stmt>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">temp<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">==<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">NULL<pos:position pos:line="27" pos:column="25"/></name></expr>)<pos:position pos:line="27" pos:column="26"/></condition><then pos:line="27" pos:column="26">
          <block type="pseudo"><return pos:line="28" pos:column="11">return <expr><operator pos:line="28" pos:column="18">(<pos:position pos:line="28" pos:column="19"/></operator><literal type="number" pos:line="28" pos:column="19">1<pos:position pos:line="28" pos:column="20"/></literal><operator pos:line="28" pos:column="20">)<pos:position pos:line="28" pos:column="21"/></operator></expr>;<pos:position pos:line="28" pos:column="22"/></return></block></then></if>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">sfree<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">local_sockpath<pos:position pos:line="29" pos:column="29"/></name></expr></argument>)<pos:position pos:line="29" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="30" pos:column="9">local_sockpath<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <name pos:line="30" pos:column="26">temp<pos:position pos:line="30" pos:column="30"/></name></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="31" pos:column="8"/></block></else></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if></elseif> <else pos:line="32" pos:column="7">else <block pos:line="32" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">ERROR<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><literal type="string" pos:line="33" pos:column="13">"powerdns plugin: Option `%s' not allowed here."<pos:position pos:line="33" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="63">option<pos:position pos:line="33" pos:column="69"/></name><operator pos:line="33" pos:column="69">-&gt;<pos:position pos:line="33" pos:column="74"/></operator><name pos:line="33" pos:column="71">key<pos:position pos:line="33" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></else></if>
  }<pos:position pos:line="35" pos:column="4"/></block></for> <comment type="block" pos:line="35" pos:column="5">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

  <return pos:line="37" pos:column="3">return <expr><operator pos:line="37" pos:column="10">(<pos:position pos:line="37" pos:column="11"/></operator><literal type="number" pos:line="37" pos:column="11">0<pos:position pos:line="37" pos:column="12"/></literal><operator pos:line="37" pos:column="12">)<pos:position pos:line="37" pos:column="13"/></operator></expr>;<pos:position pos:line="37" pos:column="14"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_243_collectd-4.8.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_ignorelist<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">dev<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">char<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">type<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">type_instance<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ir_ignorelist_t<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">i<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name> <argument_list pos:line="6" pos:column="10">(<argument><expr><operator pos:line="6" pos:column="11">(<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">dev<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">!=<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">NULL<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">)<pos:position pos:line="6" pos:column="24"/></operator> <operator pos:line="6" pos:column="25">&amp;&amp;<pos:position pos:line="6" pos:column="35"/></operator> <operator pos:line="6" pos:column="28">(<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">type<pos:position pos:line="6" pos:column="33"/></name> <operator pos:line="6" pos:column="34">!=<pos:position pos:line="6" pos:column="36"/></operator> <name pos:line="6" pos:column="37">NULL<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">)<pos:position pos:line="6" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="44"/></expr_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">ir_ignorelist_head<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">==<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="29">NULL<pos:position pos:line="8" pos:column="33"/></name></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><ternary><condition><expr><name pos:line="9" pos:column="13">ir_ignorelist_invert<pos:position pos:line="9" pos:column="33"/></name></expr> ?<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35"> <expr><literal type="number" pos:line="9" pos:column="36">0<pos:position pos:line="9" pos:column="37"/></literal></expr> <pos:position pos:line="9" pos:column="38"/></then><else pos:line="9" pos:column="38">: <expr><literal type="number" pos:line="9" pos:column="40">1<pos:position pos:line="9" pos:column="41"/></literal></expr></else></ternary><operator pos:line="9" pos:column="41">)<pos:position pos:line="9" pos:column="42"/></operator></expr>;<pos:position pos:line="9" pos:column="43"/></return></block></then></if>

  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><expr><name pos:line="11" pos:column="8">i<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <name pos:line="11" pos:column="12">ir_ignorelist_head<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></init> <condition><expr><name pos:line="11" pos:column="32">i<pos:position pos:line="11" pos:column="33"/></name> <operator pos:line="11" pos:column="34">!=<pos:position pos:line="11" pos:column="36"/></operator> <name pos:line="11" pos:column="37">NULL<pos:position pos:line="11" pos:column="41"/></name></expr>;<pos:position pos:line="11" pos:column="42"/></condition> <incr><expr><name pos:line="11" pos:column="43">i<pos:position pos:line="11" pos:column="44"/></name> <operator pos:line="11" pos:column="45">=<pos:position pos:line="11" pos:column="46"/></operator> <name><name pos:line="11" pos:column="47">i<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="50">next<pos:position pos:line="11" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="11" pos:column="55"/></control>
  <block pos:line="12" pos:column="3">{
    <comment type="block" pos:line="13" pos:column="5">/* i-&gt;device == NULL  =&gt;  match all devices */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">i<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">device<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">!=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">NULL<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator>
	<operator pos:line="15" pos:column="9">&amp;&amp;<pos:position pos:line="15" pos:column="19"/></operator> <operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><call><name pos:line="15" pos:column="13">strcasecmp<pos:position pos:line="15" pos:column="23"/></name> <argument_list pos:line="15" pos:column="24">(<argument><expr><name><name pos:line="15" pos:column="25">i<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">device<pos:position pos:line="15" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">dev<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call> <operator pos:line="15" pos:column="41">!=<pos:position pos:line="15" pos:column="43"/></operator> <literal type="number" pos:line="15" pos:column="44">0<pos:position pos:line="15" pos:column="45"/></literal><operator pos:line="15" pos:column="45">)<pos:position pos:line="15" pos:column="46"/></operator></expr>)<pos:position pos:line="15" pos:column="47"/></condition><then pos:line="15" pos:column="47">
      <block type="pseudo"><continue pos:line="16" pos:column="7">continue;<pos:position pos:line="16" pos:column="16"/></continue></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">strcasecmp<pos:position pos:line="18" pos:column="19"/></name> <argument_list pos:line="18" pos:column="20">(<argument><expr><name><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">type<pos:position pos:line="18" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="30">type<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call> <operator pos:line="18" pos:column="36">!=<pos:position pos:line="18" pos:column="38"/></operator> <literal type="number" pos:line="18" pos:column="39">0<pos:position pos:line="18" pos:column="40"/></literal></expr>)<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41">
      <block type="pseudo"><continue pos:line="19" pos:column="7">continue;<pos:position pos:line="19" pos:column="16"/></continue></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name><name pos:line="21" pos:column="10">i<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">inst<pos:position pos:line="21" pos:column="17"/></name></name> <operator pos:line="21" pos:column="18">!=<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">NULL<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">)<pos:position pos:line="21" pos:column="26"/></operator> <operator pos:line="21" pos:column="27">&amp;&amp;<pos:position pos:line="21" pos:column="37"/></operator> <operator pos:line="21" pos:column="30">(<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">type_instance<pos:position pos:line="21" pos:column="44"/></name> <operator pos:line="21" pos:column="45">!=<pos:position pos:line="21" pos:column="47"/></operator> <name pos:line="21" pos:column="48">NULL<pos:position pos:line="21" pos:column="52"/></name><operator pos:line="21" pos:column="52">)<pos:position pos:line="21" pos:column="53"/></operator>
	<operator pos:line="22" pos:column="9">&amp;&amp;<pos:position pos:line="22" pos:column="19"/></operator> <operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><call><name pos:line="22" pos:column="13">strcasecmp<pos:position pos:line="22" pos:column="23"/></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><name><name pos:line="22" pos:column="25">i<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">-&gt;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="28">inst<pos:position pos:line="22" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">type_instance<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call> <operator pos:line="22" pos:column="49">!=<pos:position pos:line="22" pos:column="51"/></operator> <literal type="number" pos:line="22" pos:column="52">0<pos:position pos:line="22" pos:column="53"/></literal><operator pos:line="22" pos:column="53">)<pos:position pos:line="22" pos:column="54"/></operator></expr>)<pos:position pos:line="22" pos:column="55"/></condition><then pos:line="22" pos:column="55">
      <block type="pseudo"><continue pos:line="23" pos:column="7">continue;<pos:position pos:line="23" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">DEBUG<pos:position pos:line="25" pos:column="10"/></name> <argument_list pos:line="25" pos:column="11">(<argument><expr><literal type="string" pos:line="25" pos:column="12">"netlink plugin: check_ignorelist: "<pos:position pos:line="25" pos:column="48"/></literal>
	<literal type="string" pos:line="26" pos:column="9">"(dev = %s; type = %s; inst = %s) matched "<pos:position pos:line="26" pos:column="52"/></literal>
	<literal type="string" pos:line="27" pos:column="9">"(dev = %s; type = %s; inst = %s)"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>,
	<argument><expr><name pos:line="28" pos:column="9">dev<pos:position pos:line="28" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="14">type<pos:position pos:line="28" pos:column="18"/></name></expr></argument>,
	<argument><expr><ternary><condition><expr><name pos:line="29" pos:column="9">type_instance<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">==<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="26">NULL<pos:position pos:line="29" pos:column="30"/></name></expr> ?<pos:position pos:line="29" pos:column="32"/></condition><then pos:line="29" pos:column="32"> <expr><literal type="string" pos:line="29" pos:column="33">"(nil)"<pos:position pos:line="29" pos:column="40"/></literal></expr> <pos:position pos:line="29" pos:column="41"/></then><else pos:line="29" pos:column="41">: <expr><name pos:line="29" pos:column="43">type_instance<pos:position pos:line="29" pos:column="56"/></name></expr></else></ternary></expr></argument>,
	<argument><expr><ternary><condition><expr><name><name pos:line="30" pos:column="9">i<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">device<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">==<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">NULL<pos:position pos:line="30" pos:column="26"/></name></expr> ?<pos:position pos:line="30" pos:column="28"/></condition><then pos:line="30" pos:column="28"> <expr><literal type="string" pos:line="30" pos:column="29">"(nil)"<pos:position pos:line="30" pos:column="36"/></literal></expr> <pos:position pos:line="30" pos:column="37"/></then><else pos:line="30" pos:column="37">: <expr><name><name pos:line="30" pos:column="39">i<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">device<pos:position pos:line="30" pos:column="48"/></name></name></expr></else></ternary></expr></argument>,
	<argument><expr><name><name pos:line="31" pos:column="9">i<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">type<pos:position pos:line="31" pos:column="16"/></name></name></expr></argument>,
	<argument><expr><ternary><condition><expr><name><name pos:line="32" pos:column="9">i<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">inst<pos:position pos:line="32" pos:column="16"/></name></name> <operator pos:line="32" pos:column="17">==<pos:position pos:line="32" pos:column="19"/></operator> <name pos:line="32" pos:column="20">NULL<pos:position pos:line="32" pos:column="24"/></name></expr> ?<pos:position pos:line="32" pos:column="26"/></condition><then pos:line="32" pos:column="26"> <expr><literal type="string" pos:line="32" pos:column="27">"(nil)"<pos:position pos:line="32" pos:column="34"/></literal></expr> <pos:position pos:line="32" pos:column="35"/></then><else pos:line="32" pos:column="35">: <expr><name><name pos:line="32" pos:column="37">i<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">-&gt;<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="40">inst<pos:position pos:line="32" pos:column="44"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt>

    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><ternary><condition><expr><name pos:line="34" pos:column="13">ir_ignorelist_invert<pos:position pos:line="34" pos:column="33"/></name></expr> ?<pos:position pos:line="34" pos:column="35"/></condition><then pos:line="34" pos:column="35"> <expr><literal type="number" pos:line="34" pos:column="36">0<pos:position pos:line="34" pos:column="37"/></literal></expr> <pos:position pos:line="34" pos:column="38"/></then><else pos:line="34" pos:column="38">: <expr><literal type="number" pos:line="34" pos:column="40">1<pos:position pos:line="34" pos:column="41"/></literal></expr></else></ternary><operator pos:line="34" pos:column="41">)<pos:position pos:line="34" pos:column="42"/></operator></expr>;<pos:position pos:line="34" pos:column="43"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></for> <comment type="block" pos:line="35" pos:column="5">/* for i */</comment>

  <return pos:line="37" pos:column="3">return <expr><operator pos:line="37" pos:column="10">(<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="11">ir_ignorelist_invert<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">)<pos:position pos:line="37" pos:column="32"/></operator></expr>;<pos:position pos:line="37" pos:column="33"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

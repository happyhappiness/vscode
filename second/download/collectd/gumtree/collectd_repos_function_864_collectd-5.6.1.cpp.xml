<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_864_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">Notification_repr<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">PyObject<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">s<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <block pos:line="1" pos:column="49">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">PyObject<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">ret<pos:position pos:line="2" pos:column="22"/></name></decl>, <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="25">tmp<pos:position pos:line="2" pos:column="28"/></name></decl>;<pos:position pos:line="2" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">PyObject<pos:position pos:line="3" pos:column="24"/></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">l_severity<pos:position pos:line="3" pos:column="36"/></name> <init pos:line="3" pos:column="37">= <expr><name pos:line="3" pos:column="39">NULL<pos:position pos:line="3" pos:column="43"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="46">l_message<pos:position pos:line="3" pos:column="55"/></name> <init pos:line="3" pos:column="56">= <expr><name pos:line="3" pos:column="58">NULL<pos:position pos:line="3" pos:column="62"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="64">*<pos:position pos:line="3" pos:column="65"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="65">l_closing<pos:position pos:line="3" pos:column="74"/></name> <init pos:line="3" pos:column="75">= <expr><name pos:line="3" pos:column="77">NULL<pos:position pos:line="3" pos:column="81"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="82"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">Notification<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">self<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">Notification<pos:position pos:line="4" pos:column="43"/></name> <operator pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></operator><operator pos:line="4" pos:column="45">)<pos:position pos:line="4" pos:column="46"/></operator> <name pos:line="4" pos:column="47">s<pos:position pos:line="4" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">l_severity<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">==<pos:position pos:line="6" pos:column="26"/></operator> <name pos:line="6" pos:column="27">NULL<pos:position pos:line="6" pos:column="31"/></name></expr>)<pos:position pos:line="6" pos:column="32"/></condition><then pos:line="6" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">l_severity<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">=<pos:position pos:line="7" pos:column="29"/></operator> <call><name pos:line="7" pos:column="30">cpy_string_to_unicode_or_bytes<pos:position pos:line="7" pos:column="60"/></name><argument_list pos:line="7" pos:column="60">(<argument><expr><literal type="string" pos:line="7" pos:column="61">",severity="<pos:position pos:line="7" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="75"/></expr_stmt></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">l_message<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">==<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="26">NULL<pos:position pos:line="8" pos:column="30"/></name></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">l_message<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator> <call><name pos:line="9" pos:column="29">cpy_string_to_unicode_or_bytes<pos:position pos:line="9" pos:column="59"/></name><argument_list pos:line="9" pos:column="59">(<argument><expr><literal type="string" pos:line="9" pos:column="60">",message="<pos:position pos:line="9" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="73"/></expr_stmt></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">l_closing<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">==<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">NULL<pos:position pos:line="10" pos:column="30"/></name></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">l_closing<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">=<pos:position pos:line="11" pos:column="28"/></operator> <call><name pos:line="11" pos:column="29">cpy_string_to_unicode_or_bytes<pos:position pos:line="11" pos:column="59"/></name><argument_list pos:line="11" pos:column="59">(<argument><expr><literal type="string" pos:line="11" pos:column="60">")"<pos:position pos:line="11" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">l_severity<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">==<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">NULL<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">||<pos:position pos:line="13" pos:column="34"/></operator> <name pos:line="13" pos:column="35">l_message<pos:position pos:line="13" pos:column="44"/></name> <operator pos:line="13" pos:column="45">==<pos:position pos:line="13" pos:column="47"/></operator> <name pos:line="13" pos:column="48">NULL<pos:position pos:line="13" pos:column="52"/></name> <operator pos:line="13" pos:column="53">||<pos:position pos:line="13" pos:column="55"/></operator> <name pos:line="13" pos:column="56">l_closing<pos:position pos:line="13" pos:column="65"/></name> <operator pos:line="13" pos:column="66">==<pos:position pos:line="13" pos:column="68"/></operator> <name pos:line="13" pos:column="69">NULL<pos:position pos:line="13" pos:column="73"/></name></expr>)<pos:position pos:line="13" pos:column="74"/></condition><then pos:line="13" pos:column="74">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><name pos:line="14" pos:column="24">NULL<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="16" pos:column="9">ret<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">cpy_common_repr<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">s<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">self<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">severity<pos:position pos:line="17" pos:column="27"/></name></name> <operator pos:line="17" pos:column="28">!=<pos:position pos:line="17" pos:column="30"/></operator> <literal type="number" pos:line="17" pos:column="31">0<pos:position pos:line="17" pos:column="32"/></literal></expr>)<pos:position pos:line="17" pos:column="33"/></condition><then pos:line="17" pos:column="33"> <block pos:line="17" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">CPY_STRCAT<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><operator pos:line="18" pos:column="28">&amp;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="29">ret<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">l_severity<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">tmp<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <call><name pos:line="19" pos:column="23">PyInt_FromLong<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name><name pos:line="19" pos:column="38">self<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">severity<pos:position pos:line="19" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">CPY_SUBSTITUTE<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">PyObject_Repr<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">tmp<pos:position pos:line="20" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="52">tmp<pos:position pos:line="20" pos:column="55"/></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">CPY_STRCAT_AND_DEL<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><operator pos:line="21" pos:column="36">&amp;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="37">ret<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="42">tmp<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">self<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">message<pos:position pos:line="23" pos:column="26"/></name><index pos:line="23" pos:column="26">[<expr><literal type="number" pos:line="23" pos:column="27">0<pos:position pos:line="23" pos:column="28"/></literal></expr>]<pos:position pos:line="23" pos:column="29"/></index></name> <operator pos:line="23" pos:column="30">!=<pos:position pos:line="23" pos:column="32"/></operator> <literal type="number" pos:line="23" pos:column="33">0<pos:position pos:line="23" pos:column="34"/></literal></expr>)<pos:position pos:line="23" pos:column="35"/></condition><then pos:line="23" pos:column="35"> <block pos:line="23" pos:column="36">{
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">CPY_STRCAT<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><operator pos:line="24" pos:column="28">&amp;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="29">ret<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">l_message<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">tmp<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <call><name pos:line="25" pos:column="23">cpy_string_to_unicode_or_bytes<pos:position pos:line="25" pos:column="53"/></name><argument_list pos:line="25" pos:column="53">(<argument><expr><name><name pos:line="25" pos:column="54">self<pos:position pos:line="25" pos:column="58"/></name><operator pos:line="25" pos:column="58">-&gt;<pos:position pos:line="25" pos:column="63"/></operator><name pos:line="25" pos:column="60">message<pos:position pos:line="25" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">CPY_SUBSTITUTE<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">PyObject_Repr<pos:position pos:line="26" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="47">tmp<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="52">tmp<pos:position pos:line="26" pos:column="55"/></name></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">CPY_STRCAT_AND_DEL<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><operator pos:line="27" pos:column="36">&amp;<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="37">ret<pos:position pos:line="27" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="42">tmp<pos:position pos:line="27" pos:column="45"/></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">CPY_STRCAT<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><operator pos:line="29" pos:column="20">&amp;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="21">ret<pos:position pos:line="29" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="26">l_closing<pos:position pos:line="29" pos:column="35"/></name></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>
	<return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">ret<pos:position pos:line="30" pos:column="19"/></name></expr>;<pos:position pos:line="30" pos:column="20"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_565_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">MPL115_collectd_barometer_read<pos:position pos:line="1" pos:column="42"/></name> <parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">void<pos:position pos:line="1" pos:column="48"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">result<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><literal type="number" pos:line="3" pos:column="18">0<pos:position pos:line="3" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="5" pos:column="5">double<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">pressure<pos:position pos:line="5" pos:column="20"/></name>        <init pos:line="5" pos:column="28">= <expr><literal type="number" pos:line="5" pos:column="30">0.0<pos:position pos:line="5" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">double<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">temperature<pos:position pos:line="6" pos:column="23"/></name>     <init pos:line="6" pos:column="28">= <expr><literal type="number" pos:line="6" pos:column="30">0.0<pos:position pos:line="6" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">double<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">norm_pressure<pos:position pos:line="7" pos:column="25"/></name>   <init pos:line="7" pos:column="28">= <expr><literal type="number" pos:line="7" pos:column="30">0.0<pos:position pos:line="7" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">value_list_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">vl<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><name pos:line="9" pos:column="23">VALUE_LIST_INIT<pos:position pos:line="9" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">value_t<pos:position pos:line="10" pos:column="12"/></name></type>      <name><name pos:line="10" pos:column="18">values<pos:position pos:line="10" pos:column="24"/></name><index pos:line="10" pos:column="24">[<expr><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>]<pos:position pos:line="10" pos:column="27"/></index></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">DEBUG<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"barometer: MPL115_collectd_barometer_read"<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">configured<pos:position pos:line="14" pos:column="20"/></name></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21">
    <block pos:line="15" pos:column="5">{
        <return pos:line="16" pos:column="9">return <expr><operator pos:line="16" pos:column="16">-<pos:position pos:line="16" pos:column="17"/></operator><literal type="number" pos:line="16" pos:column="17">1<pos:position pos:line="16" pos:column="18"/></literal></expr>;<pos:position pos:line="16" pos:column="19"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* Rather than delaying init, we will intitialize during first read. This
       way at least we have a better chance to have the reference temperature
       already available. */</comment>
    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><operator pos:line="22" pos:column="8">!<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">avg_initialized<pos:position pos:line="22" pos:column="24"/></name></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25">
    <block pos:line="23" pos:column="5">{
        <for pos:line="24" pos:column="9">for<control pos:line="24" pos:column="12">(<init><decl><type><name pos:line="24" pos:column="13">int<pos:position pos:line="24" pos:column="16"/></name></type> <name pos:line="24" pos:column="17">i<pos:position pos:line="24" pos:column="18"/></name><init pos:line="24" pos:column="18">=<expr><literal type="number" pos:line="24" pos:column="19">0<pos:position pos:line="24" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="21"/></init> <condition><expr><name pos:line="24" pos:column="22">i<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">&lt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">config_oversample<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">-<pos:position pos:line="24" pos:column="42"/></operator><literal type="number" pos:line="24" pos:column="42">1<pos:position pos:line="24" pos:column="43"/></literal></expr>;<pos:position pos:line="24" pos:column="44"/></condition> <incr><expr><operator pos:line="24" pos:column="45">++<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="47">i<pos:position pos:line="24" pos:column="48"/></name></expr></incr>)<pos:position pos:line="24" pos:column="49"/></control>
        <block pos:line="25" pos:column="9">{
            <expr_stmt><expr><name pos:line="26" pos:column="13">result<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <call><name pos:line="26" pos:column="22">MPL115_read_averaged<pos:position pos:line="26" pos:column="42"/></name><argument_list pos:line="26" pos:column="42">(<argument><expr><operator pos:line="26" pos:column="43">&amp;<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="44">pressure<pos:position pos:line="26" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="54">&amp;<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="55">temperature<pos:position pos:line="26" pos:column="66"/></name></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="68"/></expr_stmt>
            <if pos:line="27" pos:column="13">if<condition pos:line="27" pos:column="15">(<expr><name pos:line="27" pos:column="16">result<pos:position pos:line="27" pos:column="22"/></name></expr>)<pos:position pos:line="27" pos:column="23"/></condition><then pos:line="27" pos:column="23">
            <block pos:line="28" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">ERROR<pos:position pos:line="29" pos:column="22"/></name> <argument_list pos:line="29" pos:column="23">(<argument><expr><literal type="string" pos:line="29" pos:column="24">"barometer: MPL115_collectd_barometer_read - mpl115 read, ignored during init"<pos:position pos:line="29" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="104"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">DEBUG<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">(<argument><expr><literal type="string" pos:line="31" pos:column="19">"barometer: MPL115_collectd_barometer_read - init %d / %d"<pos:position pos:line="31" pos:column="77"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="79">i<pos:position pos:line="31" pos:column="80"/></name><operator pos:line="31" pos:column="80">+<pos:position pos:line="31" pos:column="81"/></operator><literal type="number" pos:line="31" pos:column="81">1<pos:position pos:line="31" pos:column="82"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="84">config_oversample<pos:position pos:line="31" pos:column="101"/></name><operator pos:line="31" pos:column="101">-<pos:position pos:line="31" pos:column="102"/></operator><literal type="number" pos:line="31" pos:column="102">1<pos:position pos:line="31" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="105"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">usleep<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><literal type="number" pos:line="32" pos:column="20">20000<pos:position pos:line="32" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="34" pos:column="9">avg_initialized<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <literal type="number" pos:line="34" pos:column="27">1<pos:position pos:line="34" pos:column="28"/></literal></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="37" pos:column="5">result<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <call><name pos:line="37" pos:column="14">MPL115_read_averaged<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><operator pos:line="37" pos:column="35">&amp;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="36">pressure<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="46">&amp;<pos:position pos:line="37" pos:column="51"/></operator><name pos:line="37" pos:column="47">temperature<pos:position pos:line="37" pos:column="58"/></name></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt>
    <if pos:line="38" pos:column="5">if<condition pos:line="38" pos:column="7">(<expr><name pos:line="38" pos:column="8">result<pos:position pos:line="38" pos:column="14"/></name></expr>)<pos:position pos:line="38" pos:column="15"/></condition><then pos:line="38" pos:column="15">
        <block type="pseudo"><return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">result<pos:position pos:line="39" pos:column="22"/></name></expr>;<pos:position pos:line="39" pos:column="23"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="41" pos:column="5">norm_pressure<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <call><name pos:line="41" pos:column="21">abs_to_mean_sea_level_pressure<pos:position pos:line="41" pos:column="51"/></name><argument_list pos:line="41" pos:column="51">(<argument><expr><name pos:line="41" pos:column="52">pressure<pos:position pos:line="41" pos:column="60"/></name></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="62"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">sstrncpy<pos:position pos:line="43" pos:column="13"/></name> <argument_list pos:line="43" pos:column="14">(<argument><expr><name><name pos:line="43" pos:column="15">vl<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">.<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="18">host<pos:position pos:line="43" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="24">hostname_g<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="36">sizeof <argument_list pos:line="43" pos:column="43">(<argument><expr><name><name pos:line="43" pos:column="44">vl<pos:position pos:line="43" pos:column="46"/></name><operator pos:line="43" pos:column="46">.<pos:position pos:line="43" pos:column="47"/></operator><name pos:line="43" pos:column="47">host<pos:position pos:line="43" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">sstrncpy<pos:position pos:line="44" pos:column="13"/></name> <argument_list pos:line="44" pos:column="14">(<argument><expr><name><name pos:line="44" pos:column="15">vl<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">.<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="18">plugin<pos:position pos:line="44" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="26">"barometer"<pos:position pos:line="44" pos:column="37"/></literal></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="39">sizeof <argument_list pos:line="44" pos:column="46">(<argument><expr><name><name pos:line="44" pos:column="47">vl<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">.<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="50">plugin<pos:position pos:line="44" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">sstrncpy<pos:position pos:line="45" pos:column="13"/></name> <argument_list pos:line="45" pos:column="14">(<argument><expr><name><name pos:line="45" pos:column="15">vl<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">.<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="18">plugin_instance<pos:position pos:line="45" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="35">"mpl115"<pos:position pos:line="45" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="45">sizeof <argument_list pos:line="45" pos:column="52">(<argument><expr><name><name pos:line="45" pos:column="53">vl<pos:position pos:line="45" pos:column="55"/></name><operator pos:line="45" pos:column="55">.<pos:position pos:line="45" pos:column="56"/></operator><name pos:line="45" pos:column="56">plugin_instance<pos:position pos:line="45" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="74"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="47" pos:column="5">vl<pos:position pos:line="47" pos:column="7"/></name><operator pos:line="47" pos:column="7">.<pos:position pos:line="47" pos:column="8"/></operator><name pos:line="47" pos:column="8">values_len<pos:position pos:line="47" pos:column="18"/></name></name> <operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator> <literal type="number" pos:line="47" pos:column="21">1<pos:position pos:line="47" pos:column="22"/></literal></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">vl<pos:position pos:line="48" pos:column="7"/></name><operator pos:line="48" pos:column="7">.<pos:position pos:line="48" pos:column="8"/></operator><name pos:line="48" pos:column="8">values<pos:position pos:line="48" pos:column="14"/></name></name> <operator pos:line="48" pos:column="15">=<pos:position pos:line="48" pos:column="16"/></operator> <name pos:line="48" pos:column="17">values<pos:position pos:line="48" pos:column="23"/></name></expr>;<pos:position pos:line="48" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="50" pos:column="5">/* dispatch normalized air pressure */</comment>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">sstrncpy<pos:position pos:line="51" pos:column="13"/></name> <argument_list pos:line="51" pos:column="14">(<argument><expr><name><name pos:line="51" pos:column="15">vl<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">.<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="18">type<pos:position pos:line="51" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="24">"pressure"<pos:position pos:line="51" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="36">sizeof <argument_list pos:line="51" pos:column="43">(<argument><expr><name><name pos:line="51" pos:column="44">vl<pos:position pos:line="51" pos:column="46"/></name><operator pos:line="51" pos:column="46">.<pos:position pos:line="51" pos:column="47"/></operator><name pos:line="51" pos:column="47">type<pos:position pos:line="51" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">sstrncpy<pos:position pos:line="52" pos:column="13"/></name> <argument_list pos:line="52" pos:column="14">(<argument><expr><name><name pos:line="52" pos:column="15">vl<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">.<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="18">type_instance<pos:position pos:line="52" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="33">"normalized"<pos:position pos:line="52" pos:column="45"/></literal></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="47">sizeof <argument_list pos:line="52" pos:column="54">(<argument><expr><name><name pos:line="52" pos:column="55">vl<pos:position pos:line="52" pos:column="57"/></name><operator pos:line="52" pos:column="57">.<pos:position pos:line="52" pos:column="58"/></operator><name pos:line="52" pos:column="58">type_instance<pos:position pos:line="52" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">values<pos:position pos:line="53" pos:column="11"/></name><index pos:line="53" pos:column="11">[<expr><literal type="number" pos:line="53" pos:column="12">0<pos:position pos:line="53" pos:column="13"/></literal></expr>]<pos:position pos:line="53" pos:column="14"/></index></name><operator pos:line="53" pos:column="14">.<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="15">gauge<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">=<pos:position pos:line="53" pos:column="22"/></operator> <name pos:line="53" pos:column="23">norm_pressure<pos:position pos:line="53" pos:column="36"/></name></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">plugin_dispatch_values<pos:position pos:line="54" pos:column="27"/></name> <argument_list pos:line="54" pos:column="28">(<argument><expr><operator pos:line="54" pos:column="29">&amp;<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="30">vl<pos:position pos:line="54" pos:column="32"/></name></expr></argument>)<pos:position pos:line="54" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="56" pos:column="5">/* dispatch absolute air pressure */</comment>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">sstrncpy<pos:position pos:line="57" pos:column="13"/></name> <argument_list pos:line="57" pos:column="14">(<argument><expr><name><name pos:line="57" pos:column="15">vl<pos:position pos:line="57" pos:column="17"/></name><operator pos:line="57" pos:column="17">.<pos:position pos:line="57" pos:column="18"/></operator><name pos:line="57" pos:column="18">type<pos:position pos:line="57" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="24">"pressure"<pos:position pos:line="57" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="36">sizeof <argument_list pos:line="57" pos:column="43">(<argument><expr><name><name pos:line="57" pos:column="44">vl<pos:position pos:line="57" pos:column="46"/></name><operator pos:line="57" pos:column="46">.<pos:position pos:line="57" pos:column="47"/></operator><name pos:line="57" pos:column="47">type<pos:position pos:line="57" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">sstrncpy<pos:position pos:line="58" pos:column="13"/></name> <argument_list pos:line="58" pos:column="14">(<argument><expr><name><name pos:line="58" pos:column="15">vl<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">.<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="18">type_instance<pos:position pos:line="58" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="33">"absolute"<pos:position pos:line="58" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="58" pos:column="45">sizeof <argument_list pos:line="58" pos:column="52">(<argument><expr><name><name pos:line="58" pos:column="53">vl<pos:position pos:line="58" pos:column="55"/></name><operator pos:line="58" pos:column="55">.<pos:position pos:line="58" pos:column="56"/></operator><name pos:line="58" pos:column="56">type_instance<pos:position pos:line="58" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="58" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">values<pos:position pos:line="59" pos:column="11"/></name><index pos:line="59" pos:column="11">[<expr><literal type="number" pos:line="59" pos:column="12">0<pos:position pos:line="59" pos:column="13"/></literal></expr>]<pos:position pos:line="59" pos:column="14"/></index></name><operator pos:line="59" pos:column="14">.<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">gauge<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">=<pos:position pos:line="59" pos:column="22"/></operator> <name pos:line="59" pos:column="23">pressure<pos:position pos:line="59" pos:column="31"/></name></expr>;<pos:position pos:line="59" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">plugin_dispatch_values<pos:position pos:line="60" pos:column="27"/></name> <argument_list pos:line="60" pos:column="28">(<argument><expr><operator pos:line="60" pos:column="29">&amp;<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="30">vl<pos:position pos:line="60" pos:column="32"/></name></expr></argument>)<pos:position pos:line="60" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="62" pos:column="5">/* dispatch sensor temperature */</comment>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">sstrncpy<pos:position pos:line="63" pos:column="13"/></name> <argument_list pos:line="63" pos:column="14">(<argument><expr><name><name pos:line="63" pos:column="15">vl<pos:position pos:line="63" pos:column="17"/></name><operator pos:line="63" pos:column="17">.<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="18">type<pos:position pos:line="63" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="24">"temperature"<pos:position pos:line="63" pos:column="37"/></literal></expr></argument>, <argument><expr><sizeof pos:line="63" pos:column="39">sizeof <argument_list pos:line="63" pos:column="46">(<argument><expr><name><name pos:line="63" pos:column="47">vl<pos:position pos:line="63" pos:column="49"/></name><operator pos:line="63" pos:column="49">.<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="50">type<pos:position pos:line="63" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="63" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">sstrncpy<pos:position pos:line="64" pos:column="13"/></name> <argument_list pos:line="64" pos:column="14">(<argument><expr><name><name pos:line="64" pos:column="15">vl<pos:position pos:line="64" pos:column="17"/></name><operator pos:line="64" pos:column="17">.<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="18">type_instance<pos:position pos:line="64" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="33">""<pos:position pos:line="64" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="37">sizeof <argument_list pos:line="64" pos:column="44">(<argument><expr><name><name pos:line="64" pos:column="45">vl<pos:position pos:line="64" pos:column="47"/></name><operator pos:line="64" pos:column="47">.<pos:position pos:line="64" pos:column="48"/></operator><name pos:line="64" pos:column="48">type_instance<pos:position pos:line="64" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="65" pos:column="5">values<pos:position pos:line="65" pos:column="11"/></name><index pos:line="65" pos:column="11">[<expr><literal type="number" pos:line="65" pos:column="12">0<pos:position pos:line="65" pos:column="13"/></literal></expr>]<pos:position pos:line="65" pos:column="14"/></index></name><operator pos:line="65" pos:column="14">.<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="15">gauge<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <name pos:line="65" pos:column="23">temperature<pos:position pos:line="65" pos:column="34"/></name></expr>;<pos:position pos:line="65" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">plugin_dispatch_values<pos:position pos:line="66" pos:column="27"/></name> <argument_list pos:line="66" pos:column="28">(<argument><expr><operator pos:line="66" pos:column="29">&amp;<pos:position pos:line="66" pos:column="34"/></operator><name pos:line="66" pos:column="30">vl<pos:position pos:line="66" pos:column="32"/></name></expr></argument>)<pos:position pos:line="66" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>

    <return pos:line="68" pos:column="5">return <expr><literal type="number" pos:line="68" pos:column="12">0<pos:position pos:line="68" pos:column="13"/></literal></expr>;<pos:position pos:line="68" pos:column="14"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

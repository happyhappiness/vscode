<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_799_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">value_list_to_kairosdb<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">buffer<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">size_t<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">buffer_size<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="69">/* {{{ */</comment>
                                  <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">data_set_t<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">ds<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier> <name pos:line="2" pos:column="63">value_list_t<pos:position pos:line="2" pos:column="75"/></name> <modifier pos:line="2" pos:column="76">*<pos:position pos:line="2" pos:column="77"/></modifier></type><name pos:line="2" pos:column="77">vl<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">int<pos:position pos:line="3" pos:column="38"/></name></type> <name pos:line="3" pos:column="39">store_rates<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="51"/></parameter_list> <block pos:line="3" pos:column="52">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">temp<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><literal type="number" pos:line="4" pos:column="13">512<pos:position pos:line="4" pos:column="16"/></literal></expr>]<pos:position pos:line="4" pos:column="17"/></index></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">offset<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">memset<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name pos:line="8" pos:column="10">buffer<pos:position pos:line="8" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="21">buffer_size<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>

<cpp:define pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">define<pos:position pos:line="10" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="10" pos:column="9">BUFFER_ADD<pos:position pos:line="10" pos:column="19"/></name><parameter_list pos:line="10" pos:column="19">(<parameter><type><modifier pos:line="10" pos:column="20">...<pos:position pos:line="10" pos:column="23"/></modifier></type></parameter>)<pos:position pos:line="10" pos:column="24"/></parameter_list></cpp:macro>                                                        \
  <cpp:value pos:line="11" pos:column="3">do {                                                                         \
    status = ssnprintf(buffer + offset, buffer_size - offset, __VA_ARGS__);    \
    if (status &lt; 1)                                                            \
      return (-1);                                                             \
    else if (((size_t)status) &gt;= (buffer_size - offset))                       \
      return (-ENOMEM);                                                        \
    else                                                                       \
      offset += ((size_t)status);                                              \
  } while (0)<pos:position pos:line="19" pos:column="14"/></cpp:value></cpp:define>

<cpp:define pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">define<pos:position pos:line="21" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="21" pos:column="9">BUFFER_ADD_KEYVAL<pos:position pos:line="21" pos:column="26"/></name><parameter_list pos:line="21" pos:column="26">(<parameter><type><name pos:line="21" pos:column="27">key<pos:position pos:line="21" pos:column="30"/></name></type></parameter>, <parameter><type><name pos:line="21" pos:column="32">value<pos:position pos:line="21" pos:column="37"/></name></type></parameter>)<pos:position pos:line="21" pos:column="38"/></parameter_list></cpp:macro>                                          \
  <cpp:value pos:line="22" pos:column="3">do {                                                                         \
    status = kairosdb_escape_string(temp, sizeof(temp), (value));              \
    if (status != 0)                                                           \
      return (status);                                                         \
    BUFFER_ADD(",\"%s\": %s", (key), temp);                                    \
  } while (0)<pos:position pos:line="27" pos:column="14"/></cpp:value></cpp:define>

  <for pos:line="29" pos:column="3">for <control pos:line="29" pos:column="7">(<init><decl><type><name pos:line="29" pos:column="8">size_t<pos:position pos:line="29" pos:column="14"/></name></type> <name pos:line="29" pos:column="15">i<pos:position pos:line="29" pos:column="16"/></name> <init pos:line="29" pos:column="17">= <expr><literal type="number" pos:line="29" pos:column="19">0<pos:position pos:line="29" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="21"/></init> <condition><expr><name pos:line="29" pos:column="22">i<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">&lt;<pos:position pos:line="29" pos:column="28"/></operator> <name><name pos:line="29" pos:column="26">ds<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">-&gt;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="30">ds_num<pos:position pos:line="29" pos:column="36"/></name></name></expr>;<pos:position pos:line="29" pos:column="37"/></condition> <incr><expr><name pos:line="29" pos:column="38">i<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">++<pos:position pos:line="29" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="42"/></control> <block pos:line="29" pos:column="43">{
    <comment type="block" pos:line="30" pos:column="5">/* All value lists have a leading comma. The first one will be replaced with
     * a square bracket in `format_kairosdb_finalize'. */</comment>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">BUFFER_ADD<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="string" pos:line="32" pos:column="16">",{"<pos:position pos:line="32" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">BUFFER_ADD<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><literal type="string" pos:line="34" pos:column="16">"\"name\":\"collectd"<pos:position pos:line="34" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">BUFFER_ADD<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><literal type="string" pos:line="36" pos:column="16">".%s"<pos:position pos:line="36" pos:column="21"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="23">vl<pos:position pos:line="36" pos:column="25"/></name><operator pos:line="36" pos:column="25">-&gt;<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="27">plugin<pos:position pos:line="36" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name pos:line="38" pos:column="5">status<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <call><name pos:line="38" pos:column="14">values_to_kairosdb<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">temp<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="39">sizeof<argument_list pos:line="38" pos:column="45">(<argument><expr><name pos:line="38" pos:column="46">temp<pos:position pos:line="38" pos:column="50"/></name></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="38" pos:column="53">ds<pos:position pos:line="38" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="57">vl<pos:position pos:line="38" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="61">store_rates<pos:position pos:line="38" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="74">i<pos:position pos:line="38" pos:column="75"/></name></expr></argument>)<pos:position pos:line="38" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="77"/></expr_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">status<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">!=<pos:position pos:line="39" pos:column="18"/></operator> <literal type="number" pos:line="39" pos:column="19">0<pos:position pos:line="39" pos:column="20"/></literal></expr>)<pos:position pos:line="39" pos:column="21"/></condition><then pos:line="39" pos:column="21">
      <block type="pseudo"><return pos:line="40" pos:column="7">return <expr><operator pos:line="40" pos:column="14">(<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">status<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">)<pos:position pos:line="40" pos:column="22"/></operator></expr>;<pos:position pos:line="40" pos:column="23"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="42" pos:column="5">BUFFER_ADD<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><literal type="string" pos:line="42" pos:column="16">"\", \"datapoints\": %s"<pos:position pos:line="42" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="42">temp<pos:position pos:line="42" pos:column="46"/></name></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="44" pos:column="5">/*
     * Now adds meta data to metric as tags
     */</comment>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">memset<pos:position pos:line="48" pos:column="11"/></name><argument_list pos:line="48" pos:column="11">(<argument><expr><name pos:line="48" pos:column="12">temp<pos:position pos:line="48" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="18">0<pos:position pos:line="48" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="21">sizeof<argument_list pos:line="48" pos:column="27">(<argument><expr><name pos:line="48" pos:column="28">temp<pos:position pos:line="48" pos:column="32"/></name></expr></argument>)<pos:position pos:line="48" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="50" pos:column="5">BUFFER_ADD<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><literal type="string" pos:line="50" pos:column="16">", \"tags\":\{"<pos:position pos:line="50" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="52" pos:column="5">BUFFER_ADD<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="string" pos:line="52" pos:column="16">"\"host\": \"%s\""<pos:position pos:line="52" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="36">vl<pos:position pos:line="52" pos:column="38"/></name><operator pos:line="52" pos:column="38">-&gt;<pos:position pos:line="52" pos:column="43"/></operator><name pos:line="52" pos:column="40">host<pos:position pos:line="52" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="46"/></expr_stmt>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><call><name pos:line="53" pos:column="9">strlen<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><name><name pos:line="53" pos:column="16">vl<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">-&gt;<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="20">plugin_instance<pos:position pos:line="53" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="37"/></condition><then pos:line="53" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="7">BUFFER_ADD_KEYVAL<pos:position pos:line="54" pos:column="24"/></name><argument_list pos:line="54" pos:column="24">(<argument><expr><literal type="string" pos:line="54" pos:column="25">"plugin_instance"<pos:position pos:line="54" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="44">vl<pos:position pos:line="54" pos:column="46"/></name><operator pos:line="54" pos:column="46">-&gt;<pos:position pos:line="54" pos:column="51"/></operator><name pos:line="54" pos:column="48">plugin_instance<pos:position pos:line="54" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="65"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">BUFFER_ADD_KEYVAL<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">(<argument><expr><literal type="string" pos:line="55" pos:column="23">"type"<pos:position pos:line="55" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="31">vl<pos:position pos:line="55" pos:column="33"/></name><operator pos:line="55" pos:column="33">-&gt;<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="35">type<pos:position pos:line="55" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="41"/></expr_stmt>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><call><name pos:line="56" pos:column="9">strlen<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">(<argument><expr><name><name pos:line="56" pos:column="16">vl<pos:position pos:line="56" pos:column="18"/></name><operator pos:line="56" pos:column="18">-&gt;<pos:position pos:line="56" pos:column="23"/></operator><name pos:line="56" pos:column="20">type_instance<pos:position pos:line="56" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="35"/></condition><then pos:line="56" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="7">BUFFER_ADD_KEYVAL<pos:position pos:line="57" pos:column="24"/></name><argument_list pos:line="57" pos:column="24">(<argument><expr><literal type="string" pos:line="57" pos:column="25">"type_instance"<pos:position pos:line="57" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="42">vl<pos:position pos:line="57" pos:column="44"/></name><operator pos:line="57" pos:column="44">-&gt;<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="46">type_instance<pos:position pos:line="57" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="61"/></expr_stmt></block></then></if>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name><name pos:line="58" pos:column="9">ds<pos:position pos:line="58" pos:column="11"/></name><operator pos:line="58" pos:column="11">-&gt;<pos:position pos:line="58" pos:column="16"/></operator><name pos:line="58" pos:column="13">ds_num<pos:position pos:line="58" pos:column="19"/></name></name> <operator pos:line="58" pos:column="20">!=<pos:position pos:line="58" pos:column="22"/></operator> <literal type="number" pos:line="58" pos:column="23">1<pos:position pos:line="58" pos:column="24"/></literal></expr>)<pos:position pos:line="58" pos:column="25"/></condition><then pos:line="58" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="7">BUFFER_ADD_KEYVAL<pos:position pos:line="59" pos:column="24"/></name><argument_list pos:line="59" pos:column="24">(<argument><expr><literal type="string" pos:line="59" pos:column="25">"ds"<pos:position pos:line="59" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="31">ds<pos:position pos:line="59" pos:column="33"/></name><operator pos:line="59" pos:column="33">-&gt;<pos:position pos:line="59" pos:column="38"/></operator><name pos:line="59" pos:column="35">ds<pos:position pos:line="59" pos:column="37"/></name><index pos:line="59" pos:column="37">[<expr><name pos:line="59" pos:column="38">i<pos:position pos:line="59" pos:column="39"/></name></expr>]<pos:position pos:line="59" pos:column="40"/></index></name><operator pos:line="59" pos:column="40">.<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="41">name<pos:position pos:line="59" pos:column="45"/></name></expr></argument>)<pos:position pos:line="59" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="47"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">BUFFER_ADD<pos:position pos:line="60" pos:column="15"/></name><argument_list pos:line="60" pos:column="15">(<argument><expr><literal type="string" pos:line="60" pos:column="16">"}}"<pos:position pos:line="60" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="61" pos:column="4"/></block></for> <comment type="block" pos:line="61" pos:column="5">/* for ds-&gt;ds_num */</comment>

<cpp:undef pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">undef<pos:position pos:line="63" pos:column="7"/></cpp:directive> <name pos:line="63" pos:column="8">BUFFER_ADD_KEYVAL<pos:position pos:line="63" pos:column="25"/></name></cpp:undef>
<cpp:undef pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">undef<pos:position pos:line="64" pos:column="7"/></cpp:directive> <name pos:line="64" pos:column="8">BUFFER_ADD<pos:position pos:line="64" pos:column="18"/></name></cpp:undef>

  <expr_stmt><expr><call><name pos:line="66" pos:column="3">DEBUG<pos:position pos:line="66" pos:column="8"/></name><argument_list pos:line="66" pos:column="8">(<argument><expr><literal type="string" pos:line="66" pos:column="9">"format_kairosdb: value_list_to_kairosdb: buffer = %s;"<pos:position pos:line="66" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="66">buffer<pos:position pos:line="66" pos:column="72"/></name></expr></argument>)<pos:position pos:line="66" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="74"/></expr_stmt>

  <return pos:line="68" pos:column="3">return <expr><operator pos:line="68" pos:column="10">(<pos:position pos:line="68" pos:column="11"/></operator><literal type="number" pos:line="68" pos:column="11">0<pos:position pos:line="68" pos:column="12"/></literal><operator pos:line="68" pos:column="12">)<pos:position pos:line="68" pos:column="13"/></operator></expr>;<pos:position pos:line="68" pos:column="14"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

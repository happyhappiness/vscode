<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1702_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wg_send_message<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type> <name pos:line="1" pos:column="41">key<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name><modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type> <name pos:line="1" pos:column="58">value<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2" pos:column="9">cdtime_t<pos:position pos:line="2" pos:column="17"/></name></type> <name pos:line="2" pos:column="18">time<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="24">struct<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">wg_callback<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">cb<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">status<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">message_len<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">message<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><literal type="number" pos:line="6" pos:column="18">1024<pos:position pos:line="6" pos:column="22"/></literal></expr>]<pos:position pos:line="6" pos:column="23"/></index></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">message_len<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <operator pos:line="8" pos:column="19">(<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">size_t<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">)<pos:position pos:line="8" pos:column="27"/></operator> <call><name pos:line="8" pos:column="28">ssnprintf<pos:position pos:line="8" pos:column="37"/></name> <argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">message<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="48">sizeof <argument_list pos:line="8" pos:column="55">(<argument><expr><name pos:line="8" pos:column="56">message<pos:position pos:line="8" pos:column="63"/></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></sizeof></expr></argument>,
            <argument><expr><literal type="string" pos:line="9" pos:column="13">"%s %s %u\r\n"<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>,
            <argument><expr><name pos:line="10" pos:column="13">key<pos:position pos:line="10" pos:column="16"/></name></expr></argument>,
            <argument><expr><name pos:line="11" pos:column="13">value<pos:position pos:line="11" pos:column="18"/></name></expr></argument>,
            <argument><expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">unsigned<pos:position pos:line="12" pos:column="22"/></name> <name pos:line="12" pos:column="23">int<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">)<pos:position pos:line="12" pos:column="27"/></operator> <call><name pos:line="12" pos:column="28">CDTIME_T_TO_TIME_T<pos:position pos:line="12" pos:column="46"/></name> <argument_list pos:line="12" pos:column="47">(<argument><expr><name pos:line="12" pos:column="48">time<pos:position pos:line="12" pos:column="52"/></name></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">message_len<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">&gt;=<pos:position pos:line="13" pos:column="26"/></operator> <sizeof pos:line="13" pos:column="24">sizeof <argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">message<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></sizeof></expr>)<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41"> <block pos:line="13" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ERROR<pos:position pos:line="14" pos:column="14"/></name> <argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="string" pos:line="14" pos:column="16">"write_graphite plugin: message buffer too small: "<pos:position pos:line="14" pos:column="67"/></literal>
                <literal type="string" pos:line="15" pos:column="17">"Need %zu bytes."<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">message_len<pos:position pos:line="15" pos:column="47"/></name> <operator pos:line="15" pos:column="48">+<pos:position pos:line="15" pos:column="49"/></operator> <literal type="number" pos:line="15" pos:column="50">1<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><operator pos:line="16" pos:column="17">-<pos:position pos:line="16" pos:column="18"/></operator><literal type="number" pos:line="16" pos:column="18">1<pos:position pos:line="16" pos:column="19"/></literal><operator pos:line="16" pos:column="19">)<pos:position pos:line="16" pos:column="20"/></operator></expr>;<pos:position pos:line="16" pos:column="21"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">pthread_mutex_lock<pos:position pos:line="19" pos:column="23"/></name> <argument_list pos:line="19" pos:column="24">(<argument><expr><operator pos:line="19" pos:column="25">&amp;<pos:position pos:line="19" pos:column="30"/></operator><name><name pos:line="19" pos:column="26">cb<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">send_lock<pos:position pos:line="19" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">cb<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">sock_fd<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">&lt;<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="23">0<pos:position pos:line="21" pos:column="24"/></literal></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25">
    <block pos:line="22" pos:column="5">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">status<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <call><name pos:line="23" pos:column="18">wg_callback_init<pos:position pos:line="23" pos:column="34"/></name> <argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">cb<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">status<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">!=<pos:position pos:line="24" pos:column="22"/></operator> <literal type="number" pos:line="24" pos:column="23">0<pos:position pos:line="24" pos:column="24"/></literal></expr>)<pos:position pos:line="24" pos:column="25"/></condition><then pos:line="24" pos:column="25">
        <block pos:line="25" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">ERROR<pos:position pos:line="26" pos:column="18"/></name> <argument_list pos:line="26" pos:column="19">(<argument><expr><literal type="string" pos:line="26" pos:column="20">"write_graphite plugin: wg_callback_init failed."<pos:position pos:line="26" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">pthread_mutex_unlock<pos:position pos:line="27" pos:column="33"/></name> <argument_list pos:line="27" pos:column="34">(<argument><expr><operator pos:line="27" pos:column="35">&amp;<pos:position pos:line="27" pos:column="40"/></operator><name><name pos:line="27" pos:column="36">cb<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">-&gt;<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="40">send_lock<pos:position pos:line="27" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt>
            <return pos:line="28" pos:column="13">return <expr><operator pos:line="28" pos:column="20">(<pos:position pos:line="28" pos:column="21"/></operator><operator pos:line="28" pos:column="21">-<pos:position pos:line="28" pos:column="22"/></operator><literal type="number" pos:line="28" pos:column="22">1<pos:position pos:line="28" pos:column="23"/></literal><operator pos:line="28" pos:column="23">)<pos:position pos:line="28" pos:column="24"/></operator></expr>;<pos:position pos:line="28" pos:column="25"/></return>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">message_len<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">&gt;=<pos:position pos:line="32" pos:column="26"/></operator> <name><name pos:line="32" pos:column="24">cb<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">-&gt;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="28">send_buf_free<pos:position pos:line="32" pos:column="41"/></name></name></expr>)<pos:position pos:line="32" pos:column="42"/></condition><then pos:line="32" pos:column="42">
    <block pos:line="33" pos:column="5">{
        <expr_stmt><expr><name pos:line="34" pos:column="9">status<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">wg_flush_nolock<pos:position pos:line="34" pos:column="33"/></name> <argument_list pos:line="34" pos:column="34">(<comment type="block" pos:line="34" pos:column="35">/* timeout = */</comment> <argument><expr><literal type="number" pos:line="34" pos:column="51">0<pos:position pos:line="34" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="54">cb<pos:position pos:line="34" pos:column="56"/></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">status<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">!=<pos:position pos:line="35" pos:column="22"/></operator> <literal type="number" pos:line="35" pos:column="23">0<pos:position pos:line="35" pos:column="24"/></literal></expr>)<pos:position pos:line="35" pos:column="25"/></condition><then pos:line="35" pos:column="25">
        <block pos:line="36" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">pthread_mutex_unlock<pos:position pos:line="37" pos:column="33"/></name> <argument_list pos:line="37" pos:column="34">(<argument><expr><operator pos:line="37" pos:column="35">&amp;<pos:position pos:line="37" pos:column="40"/></operator><name><name pos:line="37" pos:column="36">cb<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="40">send_lock<pos:position pos:line="37" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
            <return pos:line="38" pos:column="13">return <expr><operator pos:line="38" pos:column="20">(<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">status<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">)<pos:position pos:line="38" pos:column="28"/></operator></expr>;<pos:position pos:line="38" pos:column="29"/></return>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="42" pos:column="5">/* Assert that we have enough space for this message. */</comment>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">assert<pos:position pos:line="43" pos:column="11"/></name> <argument_list pos:line="43" pos:column="12">(<argument><expr><name pos:line="43" pos:column="13">message_len<pos:position pos:line="43" pos:column="24"/></name> <operator pos:line="43" pos:column="25">&lt;<pos:position pos:line="43" pos:column="29"/></operator> <name><name pos:line="43" pos:column="27">cb<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">-&gt;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="31">send_buf_free<pos:position pos:line="43" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="46"/></expr_stmt>

    <comment type="block" pos:line="45" pos:column="5">/* `message_len + 1' because `message_len' does not include the
     * trailing null byte. Neither does `send_buffer_fill'. */</comment>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">memcpy<pos:position pos:line="47" pos:column="11"/></name> <argument_list pos:line="47" pos:column="12">(<argument><expr><name><name pos:line="47" pos:column="13">cb<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">-&gt;<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="17">send_buf<pos:position pos:line="47" pos:column="25"/></name></name> <operator pos:line="47" pos:column="26">+<pos:position pos:line="47" pos:column="27"/></operator> <name><name pos:line="47" pos:column="28">cb<pos:position pos:line="47" pos:column="30"/></name><operator pos:line="47" pos:column="30">-&gt;<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="32">send_buf_fill<pos:position pos:line="47" pos:column="45"/></name></name></expr></argument>,
            <argument><expr><name pos:line="48" pos:column="13">message<pos:position pos:line="48" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="22">message_len<pos:position pos:line="48" pos:column="33"/></name> <operator pos:line="48" pos:column="34">+<pos:position pos:line="48" pos:column="35"/></operator> <literal type="number" pos:line="48" pos:column="36">1<pos:position pos:line="48" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">cb<pos:position pos:line="49" pos:column="7"/></name><operator pos:line="49" pos:column="7">-&gt;<pos:position pos:line="49" pos:column="12"/></operator><name pos:line="49" pos:column="9">send_buf_fill<pos:position pos:line="49" pos:column="22"/></name></name> <operator pos:line="49" pos:column="23">+=<pos:position pos:line="49" pos:column="25"/></operator> <name pos:line="49" pos:column="26">message_len<pos:position pos:line="49" pos:column="37"/></name></expr>;<pos:position pos:line="49" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">cb<pos:position pos:line="50" pos:column="7"/></name><operator pos:line="50" pos:column="7">-&gt;<pos:position pos:line="50" pos:column="12"/></operator><name pos:line="50" pos:column="9">send_buf_free<pos:position pos:line="50" pos:column="22"/></name></name> <operator pos:line="50" pos:column="23">-=<pos:position pos:line="50" pos:column="25"/></operator> <name pos:line="50" pos:column="26">message_len<pos:position pos:line="50" pos:column="37"/></name></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="52" pos:column="5">DEBUG<pos:position pos:line="52" pos:column="10"/></name> <argument_list pos:line="52" pos:column="11">(<argument><expr><literal type="string" pos:line="52" pos:column="12">"write_graphite plugin: [%s]:%s buf %zu/%zu (%.1f %%) \"%s\""<pos:position pos:line="52" pos:column="73"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="53" pos:column="13">cb<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">-&gt;<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="17">node<pos:position pos:line="53" pos:column="21"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="54" pos:column="13">cb<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">-&gt;<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="17">service<pos:position pos:line="54" pos:column="24"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="55" pos:column="13">cb<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">-&gt;<pos:position pos:line="55" pos:column="20"/></operator><name pos:line="55" pos:column="17">send_buf_fill<pos:position pos:line="55" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="32">sizeof <argument_list pos:line="55" pos:column="39">(<argument><expr><name><name pos:line="55" pos:column="40">cb<pos:position pos:line="55" pos:column="42"/></name><operator pos:line="55" pos:column="42">-&gt;<pos:position pos:line="55" pos:column="47"/></operator><name pos:line="55" pos:column="44">send_buf<pos:position pos:line="55" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="53"/></argument_list></sizeof></expr></argument>,
            <argument><expr><literal type="number" pos:line="56" pos:column="13">100.0<pos:position pos:line="56" pos:column="18"/></literal> <operator pos:line="56" pos:column="19">*<pos:position pos:line="56" pos:column="20"/></operator> <operator pos:line="56" pos:column="21">(<pos:position pos:line="56" pos:column="22"/></operator><operator pos:line="56" pos:column="22">(<pos:position pos:line="56" pos:column="23"/></operator><name pos:line="56" pos:column="23">double<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">)<pos:position pos:line="56" pos:column="30"/></operator> <name><name pos:line="56" pos:column="31">cb<pos:position pos:line="56" pos:column="33"/></name><operator pos:line="56" pos:column="33">-&gt;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="35">send_buf_fill<pos:position pos:line="56" pos:column="48"/></name></name><operator pos:line="56" pos:column="48">)<pos:position pos:line="56" pos:column="49"/></operator> <operator pos:line="56" pos:column="50">/<pos:position pos:line="56" pos:column="51"/></operator> <operator pos:line="56" pos:column="52">(<pos:position pos:line="56" pos:column="53"/></operator><operator pos:line="56" pos:column="53">(<pos:position pos:line="56" pos:column="54"/></operator><name pos:line="56" pos:column="54">double<pos:position pos:line="56" pos:column="60"/></name><operator pos:line="56" pos:column="60">)<pos:position pos:line="56" pos:column="61"/></operator> <sizeof pos:line="56" pos:column="62">sizeof <argument_list pos:line="56" pos:column="69">(<argument><expr><name><name pos:line="56" pos:column="70">cb<pos:position pos:line="56" pos:column="72"/></name><operator pos:line="56" pos:column="72">-&gt;<pos:position pos:line="56" pos:column="77"/></operator><name pos:line="56" pos:column="74">send_buf<pos:position pos:line="56" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="83"/></argument_list></sizeof><operator pos:line="56" pos:column="83">)<pos:position pos:line="56" pos:column="84"/></operator></expr></argument>,
            <argument><expr><name pos:line="57" pos:column="13">message<pos:position pos:line="57" pos:column="20"/></name></expr></argument>)<pos:position pos:line="57" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="59" pos:column="5">pthread_mutex_unlock<pos:position pos:line="59" pos:column="25"/></name> <argument_list pos:line="59" pos:column="26">(<argument><expr><operator pos:line="59" pos:column="27">&amp;<pos:position pos:line="59" pos:column="32"/></operator><name><name pos:line="59" pos:column="28">cb<pos:position pos:line="59" pos:column="30"/></name><operator pos:line="59" pos:column="30">-&gt;<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="32">send_lock<pos:position pos:line="59" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="43"/></expr_stmt>

    <return pos:line="61" pos:column="5">return <expr><operator pos:line="61" pos:column="12">(<pos:position pos:line="61" pos:column="13"/></operator><literal type="number" pos:line="61" pos:column="13">0<pos:position pos:line="61" pos:column="14"/></literal><operator pos:line="61" pos:column="14">)<pos:position pos:line="61" pos:column="15"/></operator></expr>;<pos:position pos:line="61" pos:column="16"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_486_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_config_add_data_blacklist_match_inverted<pos:position pos:line="1" pos:column="58"/></name><parameter_list pos:line="1" pos:column="58">(<parameter><decl><type><name pos:line="1" pos:column="59">data_definition_t<pos:position pos:line="1" pos:column="76"/></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">dd<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>,
                                                          <parameter><decl><type><name pos:line="2" pos:column="59">oconfig_item_t<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">ci<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list> <block pos:line="2" pos:column="79">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">(<pos:position pos:line="3" pos:column="8"/></operator><name><name pos:line="3" pos:column="8">ci<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">-&gt;<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="12">values_num<pos:position pos:line="3" pos:column="22"/></name></name> <operator pos:line="3" pos:column="23">!=<pos:position pos:line="3" pos:column="25"/></operator> <literal type="number" pos:line="3" pos:column="26">1<pos:position pos:line="3" pos:column="27"/></literal><operator pos:line="3" pos:column="27">)<pos:position pos:line="3" pos:column="28"/></operator> <operator pos:line="3" pos:column="29">||<pos:position pos:line="3" pos:column="31"/></operator> <operator pos:line="3" pos:column="32">(<pos:position pos:line="3" pos:column="33"/></operator><name><name pos:line="3" pos:column="33">ci<pos:position pos:line="3" pos:column="35"/></name><operator pos:line="3" pos:column="35">-&gt;<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="37">values<pos:position pos:line="3" pos:column="43"/></name><index pos:line="3" pos:column="43">[<expr><literal type="number" pos:line="3" pos:column="44">0<pos:position pos:line="3" pos:column="45"/></literal></expr>]<pos:position pos:line="3" pos:column="46"/></index></name><operator pos:line="3" pos:column="46">.<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="47">type<pos:position pos:line="3" pos:column="51"/></name> <operator pos:line="3" pos:column="52">!=<pos:position pos:line="3" pos:column="54"/></operator> <name pos:line="3" pos:column="55">OCONFIG_TYPE_BOOLEAN<pos:position pos:line="3" pos:column="75"/></name><operator pos:line="3" pos:column="75">)<pos:position pos:line="3" pos:column="76"/></operator></expr>)<pos:position pos:line="3" pos:column="77"/></condition><then pos:line="3" pos:column="77"> <block pos:line="3" pos:column="78">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">WARNING<pos:position pos:line="4" pos:column="12"/></name><argument_list pos:line="4" pos:column="12">(<argument><expr><literal type="string" pos:line="4" pos:column="13">"snmp plugin: `InvertMatch' needs exactly one boolean argument."<pos:position pos:line="4" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="79"/></expr_stmt>
    <return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">(<pos:position pos:line="5" pos:column="13"/></operator><operator pos:line="5" pos:column="13">-<pos:position pos:line="5" pos:column="14"/></operator><literal type="number" pos:line="5" pos:column="14">1<pos:position pos:line="5" pos:column="15"/></literal><operator pos:line="5" pos:column="15">)<pos:position pos:line="5" pos:column="16"/></operator></expr>;<pos:position pos:line="5" pos:column="17"/></return>
  }<pos:position pos:line="6" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="8" pos:column="3">dd<pos:position pos:line="8" pos:column="5"/></name><operator pos:line="8" pos:column="5">-&gt;<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="7">invert_match<pos:position pos:line="8" pos:column="19"/></name></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <ternary><condition><expr><name><name pos:line="8" pos:column="22">ci<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">-&gt;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="26">values<pos:position pos:line="8" pos:column="32"/></name><index pos:line="8" pos:column="32">[<expr><literal type="number" pos:line="8" pos:column="33">0<pos:position pos:line="8" pos:column="34"/></literal></expr>]<pos:position pos:line="8" pos:column="35"/></index></name><operator pos:line="8" pos:column="35">.<pos:position pos:line="8" pos:column="36"/></operator><name><name pos:line="8" pos:column="36">value<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">.<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="42">boolean<pos:position pos:line="8" pos:column="49"/></name></name></expr> ?<pos:position pos:line="8" pos:column="51"/></condition><then pos:line="8" pos:column="51"> <expr><literal type="number" pos:line="8" pos:column="52">1<pos:position pos:line="8" pos:column="53"/></literal></expr> <pos:position pos:line="8" pos:column="54"/></then><else pos:line="8" pos:column="54">: <expr><literal type="number" pos:line="8" pos:column="56">0<pos:position pos:line="8" pos:column="57"/></literal></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="58"/></expr_stmt>

  <return pos:line="10" pos:column="3">return <expr><operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator><literal type="number" pos:line="10" pos:column="11">0<pos:position pos:line="10" pos:column="12"/></literal><operator pos:line="10" pos:column="12">)<pos:position pos:line="10" pos:column="13"/></operator></expr>;<pos:position pos:line="10" pos:column="14"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

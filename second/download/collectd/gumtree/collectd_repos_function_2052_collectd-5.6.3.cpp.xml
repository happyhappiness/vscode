<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2052_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wg_send_message<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">message<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="49">struct<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">wg_callback<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">cb<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list> <block pos:line="1" pos:column="73">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">status<pos:position pos:line="2" pos:column="13"/></name></decl>;<pos:position pos:line="2" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">message_len<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">message_len<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">=<pos:position pos:line="5" pos:column="16"/></operator> <call><name pos:line="5" pos:column="17">strlen<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">message<pos:position pos:line="5" pos:column="31"/></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">pthread_mutex_lock<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><operator pos:line="7" pos:column="22">&amp;<pos:position pos:line="7" pos:column="27"/></operator><name><name pos:line="7" pos:column="23">cb<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">send_lock<pos:position pos:line="7" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">wg_force_reconnect_check<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">cb<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name><name pos:line="11" pos:column="7">cb<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">-&gt;<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="11">sock_fd<pos:position pos:line="11" pos:column="18"/></name></name> <operator pos:line="11" pos:column="19">&lt;<pos:position pos:line="11" pos:column="23"/></operator> <literal type="number" pos:line="11" pos:column="21">0<pos:position pos:line="11" pos:column="22"/></literal></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block pos:line="11" pos:column="24">{
    <expr_stmt><expr><name pos:line="12" pos:column="5">status<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">wg_callback_init<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">cb<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">status<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">!=<pos:position pos:line="13" pos:column="18"/></operator> <literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21"> <block pos:line="13" pos:column="22">{
      <comment type="block" pos:line="14" pos:column="7">/* An error message has already been printed. */</comment>
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">pthread_mutex_unlock<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><operator pos:line="15" pos:column="28">&amp;<pos:position pos:line="15" pos:column="33"/></operator><name><name pos:line="15" pos:column="29">cb<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">send_lock<pos:position pos:line="15" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
      <return pos:line="16" pos:column="7">return <expr><operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><operator pos:line="16" pos:column="15">-<pos:position pos:line="16" pos:column="16"/></operator><literal type="number" pos:line="16" pos:column="16">1<pos:position pos:line="16" pos:column="17"/></literal><operator pos:line="16" pos:column="17">)<pos:position pos:line="16" pos:column="18"/></operator></expr>;<pos:position pos:line="16" pos:column="19"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">message_len<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">&gt;=<pos:position pos:line="20" pos:column="24"/></operator> <name><name pos:line="20" pos:column="22">cb<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">-&gt;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="26">send_buf_free<pos:position pos:line="20" pos:column="39"/></name></name></expr>)<pos:position pos:line="20" pos:column="40"/></condition><then pos:line="20" pos:column="40"> <block pos:line="20" pos:column="41">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">status<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">wg_flush_nolock<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<comment type="block" pos:line="21" pos:column="30">/* timeout = */</comment> <argument><expr><literal type="number" pos:line="21" pos:column="46">0<pos:position pos:line="21" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="49">cb<pos:position pos:line="21" pos:column="51"/></name></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">status<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">!=<pos:position pos:line="22" pos:column="18"/></operator> <literal type="number" pos:line="22" pos:column="19">0<pos:position pos:line="22" pos:column="20"/></literal></expr>)<pos:position pos:line="22" pos:column="21"/></condition><then pos:line="22" pos:column="21"> <block pos:line="22" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">pthread_mutex_unlock<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><operator pos:line="23" pos:column="28">&amp;<pos:position pos:line="23" pos:column="33"/></operator><name><name pos:line="23" pos:column="29">cb<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">send_lock<pos:position pos:line="23" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
      <return pos:line="24" pos:column="7">return <expr><operator pos:line="24" pos:column="14">(<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">status<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">)<pos:position pos:line="24" pos:column="22"/></operator></expr>;<pos:position pos:line="24" pos:column="23"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="28" pos:column="3">/* Assert that we have enough space for this message. */</comment>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">assert<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">(<argument><expr><name pos:line="29" pos:column="10">message_len<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">&lt;<pos:position pos:line="29" pos:column="26"/></operator> <name><name pos:line="29" pos:column="24">cb<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">-&gt;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="28">send_buf_free<pos:position pos:line="29" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="43"/></expr_stmt>

  <comment type="block" pos:line="31" pos:column="3">/* `message_len + 1' because `message_len' does not include the
   * trailing null byte. Neither does `send_buffer_fill'. */</comment>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">memcpy<pos:position pos:line="33" pos:column="9"/></name><argument_list pos:line="33" pos:column="9">(<argument><expr><name><name pos:line="33" pos:column="10">cb<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">send_buf<pos:position pos:line="33" pos:column="22"/></name></name> <operator pos:line="33" pos:column="23">+<pos:position pos:line="33" pos:column="24"/></operator> <name><name pos:line="33" pos:column="25">cb<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">send_buf_fill<pos:position pos:line="33" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">message<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="53">message_len<pos:position pos:line="33" pos:column="64"/></name> <operator pos:line="33" pos:column="65">+<pos:position pos:line="33" pos:column="66"/></operator> <literal type="number" pos:line="33" pos:column="67">1<pos:position pos:line="33" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="34" pos:column="3">cb<pos:position pos:line="34" pos:column="5"/></name><operator pos:line="34" pos:column="5">-&gt;<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="7">send_buf_fill<pos:position pos:line="34" pos:column="20"/></name></name> <operator pos:line="34" pos:column="21">+=<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">message_len<pos:position pos:line="34" pos:column="35"/></name></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">cb<pos:position pos:line="35" pos:column="5"/></name><operator pos:line="35" pos:column="5">-&gt;<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="7">send_buf_free<pos:position pos:line="35" pos:column="20"/></name></name> <operator pos:line="35" pos:column="21">-=<pos:position pos:line="35" pos:column="23"/></operator> <name pos:line="35" pos:column="24">message_len<pos:position pos:line="35" pos:column="35"/></name></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">DEBUG<pos:position pos:line="37" pos:column="8"/></name><argument_list pos:line="37" pos:column="8">(<argument><expr><literal type="string" pos:line="37" pos:column="9">"write_graphite plugin: [%s]:%s (%s) buf %zu/%zu (%.1f %%) \"%s\""<pos:position pos:line="37" pos:column="75"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="38" pos:column="9">cb<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">-&gt;<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="13">node<pos:position pos:line="38" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="19">cb<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">-&gt;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="23">service<pos:position pos:line="38" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="32">cb<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">protocol<pos:position pos:line="38" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="46">cb<pos:position pos:line="38" pos:column="48"/></name><operator pos:line="38" pos:column="48">-&gt;<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="50">send_buf_fill<pos:position pos:line="38" pos:column="63"/></name></name></expr></argument>,
        <argument><expr><sizeof pos:line="39" pos:column="9">sizeof<argument_list pos:line="39" pos:column="15">(<argument><expr><name><name pos:line="39" pos:column="16">cb<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">send_buf<pos:position pos:line="39" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="29"/></argument_list></sizeof></expr></argument>,
        <argument><expr><literal type="number" pos:line="40" pos:column="9">100.0<pos:position pos:line="40" pos:column="14"/></literal> <operator pos:line="40" pos:column="15">*<pos:position pos:line="40" pos:column="16"/></operator> <operator pos:line="40" pos:column="17">(<pos:position pos:line="40" pos:column="18"/></operator><operator pos:line="40" pos:column="18">(<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="19">double<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">)<pos:position pos:line="40" pos:column="26"/></operator><name><name pos:line="40" pos:column="26">cb<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">-&gt;<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="30">send_buf_fill<pos:position pos:line="40" pos:column="43"/></name></name><operator pos:line="40" pos:column="43">)<pos:position pos:line="40" pos:column="44"/></operator> <operator pos:line="40" pos:column="45">/<pos:position pos:line="40" pos:column="46"/></operator> <operator pos:line="40" pos:column="47">(<pos:position pos:line="40" pos:column="48"/></operator><operator pos:line="40" pos:column="48">(<pos:position pos:line="40" pos:column="49"/></operator><name pos:line="40" pos:column="49">double<pos:position pos:line="40" pos:column="55"/></name><operator pos:line="40" pos:column="55">)<pos:position pos:line="40" pos:column="56"/></operator><sizeof pos:line="40" pos:column="56">sizeof<argument_list pos:line="40" pos:column="62">(<argument><expr><name><name pos:line="40" pos:column="63">cb<pos:position pos:line="40" pos:column="65"/></name><operator pos:line="40" pos:column="65">-&gt;<pos:position pos:line="40" pos:column="70"/></operator><name pos:line="40" pos:column="67">send_buf<pos:position pos:line="40" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="76"/></argument_list></sizeof><operator pos:line="40" pos:column="76">)<pos:position pos:line="40" pos:column="77"/></operator></expr></argument>,
        <argument><expr><name pos:line="41" pos:column="9">message<pos:position pos:line="41" pos:column="16"/></name></expr></argument>)<pos:position pos:line="41" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="43" pos:column="3">pthread_mutex_unlock<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><operator pos:line="43" pos:column="24">&amp;<pos:position pos:line="43" pos:column="29"/></operator><name><name pos:line="43" pos:column="25">cb<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">send_lock<pos:position pos:line="43" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt>

  <return pos:line="45" pos:column="3">return <expr><operator pos:line="45" pos:column="10">(<pos:position pos:line="45" pos:column="11"/></operator><literal type="number" pos:line="45" pos:column="11">0<pos:position pos:line="45" pos:column="12"/></literal><operator pos:line="45" pos:column="12">)<pos:position pos:line="45" pos:column="13"/></operator></expr>;<pos:position pos:line="45" pos:column="14"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

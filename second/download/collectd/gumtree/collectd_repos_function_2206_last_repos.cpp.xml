<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2206_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cmc_config_add_match<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">web_page_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">page<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
                                <parameter><decl><type><name pos:line="2" pos:column="33">oconfig_item_t<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">ci<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list> <block pos:line="2" pos:column="53">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">web_match_t<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">match<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">ci<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">values_num<pos:position pos:line="6" pos:column="21"/></name></name> <operator pos:line="6" pos:column="22">!=<pos:position pos:line="6" pos:column="24"/></operator> <literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27"> <block pos:line="6" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">WARNING<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><literal type="string" pos:line="7" pos:column="13">"memcachec plugin: Ignoring arguments for the `Match' block."<pos:position pos:line="7" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="76"/></expr_stmt>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="10" pos:column="3">match<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">calloc<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><literal type="number" pos:line="10" pos:column="18">1<pos:position pos:line="10" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="21">sizeof<argument_list pos:line="10" pos:column="27">(<argument><expr><operator pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">match<pos:position pos:line="10" pos:column="34"/></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">match<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">==<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21"> <block pos:line="11" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"memcachec plugin: calloc failed."<pos:position pos:line="12" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">status<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <literal type="number" pos:line="16" pos:column="12">0<pos:position pos:line="16" pos:column="13"/></literal></expr>;<pos:position pos:line="16" pos:column="14"/></expr_stmt>
  <for pos:line="17" pos:column="3">for <control pos:line="17" pos:column="7">(<init><decl><type><name pos:line="17" pos:column="8">int<pos:position pos:line="17" pos:column="11"/></name></type> <name pos:line="17" pos:column="12">i<pos:position pos:line="17" pos:column="13"/></name> <init pos:line="17" pos:column="14">= <expr><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="18"/></init> <condition><expr><name pos:line="17" pos:column="19">i<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">&lt;<pos:position pos:line="17" pos:column="25"/></operator> <name><name pos:line="17" pos:column="23">ci<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">children_num<pos:position pos:line="17" pos:column="39"/></name></name></expr>;<pos:position pos:line="17" pos:column="40"/></condition> <incr><expr><name pos:line="17" pos:column="41">i<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">++<pos:position pos:line="17" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="45"/></control> <block pos:line="17" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">oconfig_item_t<pos:position pos:line="18" pos:column="19"/></name> <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier></type><name pos:line="18" pos:column="21">child<pos:position pos:line="18" pos:column="26"/></name> <init pos:line="18" pos:column="27">= <expr><name><name pos:line="18" pos:column="29">ci<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">children<pos:position pos:line="18" pos:column="41"/></name></name> <operator pos:line="18" pos:column="42">+<pos:position pos:line="18" pos:column="43"/></operator> <name pos:line="18" pos:column="44">i<pos:position pos:line="18" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="46"/></decl_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name pos:line="20" pos:column="9">strcasecmp<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><literal type="string" pos:line="20" pos:column="20">"Regex"<pos:position pos:line="20" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="29">child<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">-&gt;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="36">key<pos:position pos:line="20" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call> <operator pos:line="20" pos:column="41">==<pos:position pos:line="20" pos:column="43"/></operator> <literal type="number" pos:line="20" pos:column="44">0<pos:position pos:line="20" pos:column="45"/></literal></expr>)<pos:position pos:line="20" pos:column="46"/></condition><then pos:line="20" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="7">status<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">cmc_config_add_string<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><literal type="string" pos:line="21" pos:column="38">"Regex"<pos:position pos:line="21" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="47">&amp;<pos:position pos:line="21" pos:column="52"/></operator><name><name pos:line="21" pos:column="48">match<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">-&gt;<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="55">regex<pos:position pos:line="21" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="62">child<pos:position pos:line="21" pos:column="67"/></name></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="69"/></expr_stmt></block></then>
    <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><call><name pos:line="22" pos:column="14">strcasecmp<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><literal type="string" pos:line="22" pos:column="25">"ExcludeRegex"<pos:position pos:line="22" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="41">child<pos:position pos:line="22" pos:column="46"/></name><operator pos:line="22" pos:column="46">-&gt;<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="48">key<pos:position pos:line="22" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call> <operator pos:line="22" pos:column="53">==<pos:position pos:line="22" pos:column="55"/></operator> <literal type="number" pos:line="22" pos:column="56">0<pos:position pos:line="22" pos:column="57"/></literal></expr>)<pos:position pos:line="22" pos:column="58"/></condition><then pos:line="22" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="7">status<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator>
          <call><name pos:line="24" pos:column="11">cmc_config_add_string<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><literal type="string" pos:line="24" pos:column="33">"ExcludeRegex"<pos:position pos:line="24" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="49">&amp;<pos:position pos:line="24" pos:column="54"/></operator><name><name pos:line="24" pos:column="50">match<pos:position pos:line="24" pos:column="55"/></name><operator pos:line="24" pos:column="55">-&gt;<pos:position pos:line="24" pos:column="60"/></operator><name pos:line="24" pos:column="57">exclude_regex<pos:position pos:line="24" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="72">child<pos:position pos:line="24" pos:column="77"/></name></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="79"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><call><name pos:line="25" pos:column="14">strcasecmp<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><literal type="string" pos:line="25" pos:column="25">"DSType"<pos:position pos:line="25" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="35">child<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">key<pos:position pos:line="25" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="46"/></argument_list></call> <operator pos:line="25" pos:column="47">==<pos:position pos:line="25" pos:column="49"/></operator> <literal type="number" pos:line="25" pos:column="50">0<pos:position pos:line="25" pos:column="51"/></literal></expr>)<pos:position pos:line="25" pos:column="52"/></condition><then pos:line="25" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">status<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">cmc_config_add_match_dstype<pos:position pos:line="26" pos:column="43"/></name><argument_list pos:line="26" pos:column="43">(<argument><expr><operator pos:line="26" pos:column="44">&amp;<pos:position pos:line="26" pos:column="49"/></operator><name><name pos:line="26" pos:column="45">match<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">-&gt;<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="52">dstype<pos:position pos:line="26" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="60">child<pos:position pos:line="26" pos:column="65"/></name></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><call><name pos:line="27" pos:column="14">strcasecmp<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><literal type="string" pos:line="27" pos:column="25">"Type"<pos:position pos:line="27" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="33">child<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">-&gt;<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="40">key<pos:position pos:line="27" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call> <operator pos:line="27" pos:column="45">==<pos:position pos:line="27" pos:column="47"/></operator> <literal type="number" pos:line="27" pos:column="48">0<pos:position pos:line="27" pos:column="49"/></literal></expr>)<pos:position pos:line="27" pos:column="50"/></condition><then pos:line="27" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">status<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">cmc_config_add_string<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><literal type="string" pos:line="28" pos:column="38">"Type"<pos:position pos:line="28" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="46">&amp;<pos:position pos:line="28" pos:column="51"/></operator><name><name pos:line="28" pos:column="47">match<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">-&gt;<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="54">type<pos:position pos:line="28" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="60">child<pos:position pos:line="28" pos:column="65"/></name></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="67"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><call><name pos:line="29" pos:column="14">strcasecmp<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><literal type="string" pos:line="29" pos:column="25">"Instance"<pos:position pos:line="29" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="37">child<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">key<pos:position pos:line="29" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call> <operator pos:line="29" pos:column="49">==<pos:position pos:line="29" pos:column="51"/></operator> <literal type="number" pos:line="29" pos:column="52">0<pos:position pos:line="29" pos:column="53"/></literal></expr>)<pos:position pos:line="29" pos:column="54"/></condition><then pos:line="29" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="7">status<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">cmc_config_add_string<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><literal type="string" pos:line="30" pos:column="38">"Instance"<pos:position pos:line="30" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="50">&amp;<pos:position pos:line="30" pos:column="55"/></operator><name><name pos:line="30" pos:column="51">match<pos:position pos:line="30" pos:column="56"/></name><operator pos:line="30" pos:column="56">-&gt;<pos:position pos:line="30" pos:column="61"/></operator><name pos:line="30" pos:column="58">instance<pos:position pos:line="30" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="68">child<pos:position pos:line="30" pos:column="73"/></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="75"/></expr_stmt></block></then></if></elseif>
    <else pos:line="31" pos:column="5">else <block pos:line="31" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">WARNING<pos:position pos:line="32" pos:column="14"/></name><argument_list pos:line="32" pos:column="14">(<argument><expr><literal type="string" pos:line="32" pos:column="15">"memcachec plugin: Option `%s' not allowed here."<pos:position pos:line="32" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="66">child<pos:position pos:line="32" pos:column="71"/></name><operator pos:line="32" pos:column="71">-&gt;<pos:position pos:line="32" pos:column="76"/></operator><name pos:line="32" pos:column="73">key<pos:position pos:line="32" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="78"/></expr_stmt>
      <expr_stmt><expr><name pos:line="33" pos:column="7">status<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <operator pos:line="33" pos:column="16">-<pos:position pos:line="33" pos:column="17"/></operator><literal type="number" pos:line="33" pos:column="17">1<pos:position pos:line="33" pos:column="18"/></literal></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></else></if>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">status<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">!=<pos:position pos:line="36" pos:column="18"/></operator> <literal type="number" pos:line="36" pos:column="19">0<pos:position pos:line="36" pos:column="20"/></literal></expr>)<pos:position pos:line="36" pos:column="21"/></condition><then pos:line="36" pos:column="21">
      <block type="pseudo"><break pos:line="37" pos:column="7">break;<pos:position pos:line="37" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="38" pos:column="4"/></block></for> <comment type="block" pos:line="38" pos:column="5">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

  <while pos:line="40" pos:column="3">while <condition pos:line="40" pos:column="9">(<expr><name pos:line="40" pos:column="10">status<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">==<pos:position pos:line="40" pos:column="19"/></operator> <literal type="number" pos:line="40" pos:column="20">0<pos:position pos:line="40" pos:column="21"/></literal></expr>)<pos:position pos:line="40" pos:column="22"/></condition> <block pos:line="40" pos:column="23">{
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name><name pos:line="41" pos:column="9">match<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">-&gt;<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="16">regex<pos:position pos:line="41" pos:column="21"/></name></name> <operator pos:line="41" pos:column="22">==<pos:position pos:line="41" pos:column="24"/></operator> <name pos:line="41" pos:column="25">NULL<pos:position pos:line="41" pos:column="29"/></name></expr>)<pos:position pos:line="41" pos:column="30"/></condition><then pos:line="41" pos:column="30"> <block pos:line="41" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">WARNING<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><literal type="string" pos:line="42" pos:column="15">"memcachec plugin: `Regex' missing in `Match' block."<pos:position pos:line="42" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="70"/></expr_stmt>
      <expr_stmt><expr><name pos:line="43" pos:column="7">status<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <operator pos:line="43" pos:column="16">-<pos:position pos:line="43" pos:column="17"/></operator><literal type="number" pos:line="43" pos:column="17">1<pos:position pos:line="43" pos:column="18"/></literal></expr>;<pos:position pos:line="43" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name><name pos:line="46" pos:column="9">match<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">-&gt;<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="16">type<pos:position pos:line="46" pos:column="20"/></name></name> <operator pos:line="46" pos:column="21">==<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="24">NULL<pos:position pos:line="46" pos:column="28"/></name></expr>)<pos:position pos:line="46" pos:column="29"/></condition><then pos:line="46" pos:column="29"> <block pos:line="46" pos:column="30">{
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">WARNING<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><literal type="string" pos:line="47" pos:column="15">"memcachec plugin: `Type' missing in `Match' block."<pos:position pos:line="47" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="69"/></expr_stmt>
      <expr_stmt><expr><name pos:line="48" pos:column="7">status<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <operator pos:line="48" pos:column="16">-<pos:position pos:line="48" pos:column="17"/></operator><literal type="number" pos:line="48" pos:column="17">1<pos:position pos:line="48" pos:column="18"/></literal></expr>;<pos:position pos:line="48" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name><name pos:line="51" pos:column="9">match<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">-&gt;<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="16">dstype<pos:position pos:line="51" pos:column="22"/></name></name> <operator pos:line="51" pos:column="23">==<pos:position pos:line="51" pos:column="25"/></operator> <literal type="number" pos:line="51" pos:column="26">0<pos:position pos:line="51" pos:column="27"/></literal></expr>)<pos:position pos:line="51" pos:column="28"/></condition><then pos:line="51" pos:column="28"> <block pos:line="51" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">WARNING<pos:position pos:line="52" pos:column="14"/></name><argument_list pos:line="52" pos:column="14">(<argument><expr><literal type="string" pos:line="52" pos:column="15">"memcachec plugin: `DSType' missing in `Match' block."<pos:position pos:line="52" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><name pos:line="53" pos:column="7">status<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <operator pos:line="53" pos:column="16">-<pos:position pos:line="53" pos:column="17"/></operator><literal type="number" pos:line="53" pos:column="17">1<pos:position pos:line="53" pos:column="18"/></literal></expr>;<pos:position pos:line="53" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>

    <break pos:line="56" pos:column="5">break;<pos:position pos:line="56" pos:column="11"/></break>
  }<pos:position pos:line="57" pos:column="4"/></block></while> <comment type="block" pos:line="57" pos:column="5">/* while (status == 0) */</comment>

  <if pos:line="59" pos:column="3">if <condition pos:line="59" pos:column="6">(<expr><name pos:line="59" pos:column="7">status<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">!=<pos:position pos:line="59" pos:column="16"/></operator> <literal type="number" pos:line="59" pos:column="17">0<pos:position pos:line="59" pos:column="18"/></literal></expr>)<pos:position pos:line="59" pos:column="19"/></condition><then pos:line="59" pos:column="19"> <block pos:line="59" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">cmc_web_match_free<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">(<argument><expr><name pos:line="60" pos:column="24">match<pos:position pos:line="60" pos:column="29"/></name></expr></argument>)<pos:position pos:line="60" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="31"/></expr_stmt>
    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">status<pos:position pos:line="61" pos:column="18"/></name></expr>;<pos:position pos:line="61" pos:column="19"/></return>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="64" pos:column="3">match<pos:position pos:line="64" pos:column="8"/></name><operator pos:line="64" pos:column="8">-&gt;<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="10">match<pos:position pos:line="64" pos:column="15"/></name></name> <operator pos:line="64" pos:column="16">=<pos:position pos:line="64" pos:column="17"/></operator>
      <call><name pos:line="65" pos:column="7">match_create_simple<pos:position pos:line="65" pos:column="26"/></name><argument_list pos:line="65" pos:column="26">(<argument><expr><name><name pos:line="65" pos:column="27">match<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">-&gt;<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="34">regex<pos:position pos:line="65" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="41">match<pos:position pos:line="65" pos:column="46"/></name><operator pos:line="65" pos:column="46">-&gt;<pos:position pos:line="65" pos:column="51"/></operator><name pos:line="65" pos:column="48">exclude_regex<pos:position pos:line="65" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="63">match<pos:position pos:line="65" pos:column="68"/></name><operator pos:line="65" pos:column="68">-&gt;<pos:position pos:line="65" pos:column="73"/></operator><name pos:line="65" pos:column="70">dstype<pos:position pos:line="65" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="78"/></expr_stmt>
  <if pos:line="66" pos:column="3">if <condition pos:line="66" pos:column="6">(<expr><name><name pos:line="66" pos:column="7">match<pos:position pos:line="66" pos:column="12"/></name><operator pos:line="66" pos:column="12">-&gt;<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="14">match<pos:position pos:line="66" pos:column="19"/></name></name> <operator pos:line="66" pos:column="20">==<pos:position pos:line="66" pos:column="22"/></operator> <name pos:line="66" pos:column="23">NULL<pos:position pos:line="66" pos:column="27"/></name></expr>)<pos:position pos:line="66" pos:column="28"/></condition><then pos:line="66" pos:column="28"> <block pos:line="66" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">ERROR<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><literal type="string" pos:line="67" pos:column="11">"memcachec plugin: match_create_simple failed."<pos:position pos:line="67" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">cmc_web_match_free<pos:position pos:line="68" pos:column="23"/></name><argument_list pos:line="68" pos:column="23">(<argument><expr><name pos:line="68" pos:column="24">match<pos:position pos:line="68" pos:column="29"/></name></expr></argument>)<pos:position pos:line="68" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="31"/></expr_stmt>
    <return pos:line="69" pos:column="5">return <expr><operator pos:line="69" pos:column="12">-<pos:position pos:line="69" pos:column="13"/></operator><literal type="number" pos:line="69" pos:column="13">1<pos:position pos:line="69" pos:column="14"/></literal></expr>;<pos:position pos:line="69" pos:column="15"/></return>
  }<pos:position pos:line="70" pos:column="4"/></block></then> <else pos:line="70" pos:column="5">else <block pos:line="70" pos:column="10">{
    <decl_stmt><decl><type><name pos:line="71" pos:column="5">web_match_t<pos:position pos:line="71" pos:column="16"/></name> <modifier pos:line="71" pos:column="17">*<pos:position pos:line="71" pos:column="18"/></modifier></type><name pos:line="71" pos:column="18">prev<pos:position pos:line="71" pos:column="22"/></name></decl>;<pos:position pos:line="71" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="73" pos:column="5">prev<pos:position pos:line="73" pos:column="9"/></name> <operator pos:line="73" pos:column="10">=<pos:position pos:line="73" pos:column="11"/></operator> <name><name pos:line="73" pos:column="12">page<pos:position pos:line="73" pos:column="16"/></name><operator pos:line="73" pos:column="16">-&gt;<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="18">matches<pos:position pos:line="73" pos:column="25"/></name></name></expr>;<pos:position pos:line="73" pos:column="26"/></expr_stmt>
    <while pos:line="74" pos:column="5">while <condition pos:line="74" pos:column="11">(<expr><operator pos:line="74" pos:column="12">(<pos:position pos:line="74" pos:column="13"/></operator><name pos:line="74" pos:column="13">prev<pos:position pos:line="74" pos:column="17"/></name> <operator pos:line="74" pos:column="18">!=<pos:position pos:line="74" pos:column="20"/></operator> <name pos:line="74" pos:column="21">NULL<pos:position pos:line="74" pos:column="25"/></name><operator pos:line="74" pos:column="25">)<pos:position pos:line="74" pos:column="26"/></operator> <operator pos:line="74" pos:column="27">&amp;&amp;<pos:position pos:line="74" pos:column="37"/></operator> <operator pos:line="74" pos:column="30">(<pos:position pos:line="74" pos:column="31"/></operator><name><name pos:line="74" pos:column="31">prev<pos:position pos:line="74" pos:column="35"/></name><operator pos:line="74" pos:column="35">-&gt;<pos:position pos:line="74" pos:column="40"/></operator><name pos:line="74" pos:column="37">next<pos:position pos:line="74" pos:column="41"/></name></name> <operator pos:line="74" pos:column="42">!=<pos:position pos:line="74" pos:column="44"/></operator> <name pos:line="74" pos:column="45">NULL<pos:position pos:line="74" pos:column="49"/></name><operator pos:line="74" pos:column="49">)<pos:position pos:line="74" pos:column="50"/></operator></expr>)<pos:position pos:line="74" pos:column="51"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="7">prev<pos:position pos:line="75" pos:column="11"/></name> <operator pos:line="75" pos:column="12">=<pos:position pos:line="75" pos:column="13"/></operator> <name><name pos:line="75" pos:column="14">prev<pos:position pos:line="75" pos:column="18"/></name><operator pos:line="75" pos:column="18">-&gt;<pos:position pos:line="75" pos:column="23"/></operator><name pos:line="75" pos:column="20">next<pos:position pos:line="75" pos:column="24"/></name></name></expr>;<pos:position pos:line="75" pos:column="25"/></expr_stmt></block></while>

    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><name pos:line="77" pos:column="9">prev<pos:position pos:line="77" pos:column="13"/></name> <operator pos:line="77" pos:column="14">==<pos:position pos:line="77" pos:column="16"/></operator> <name pos:line="77" pos:column="17">NULL<pos:position pos:line="77" pos:column="21"/></name></expr>)<pos:position pos:line="77" pos:column="22"/></condition><then pos:line="77" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="78" pos:column="7">page<pos:position pos:line="78" pos:column="11"/></name><operator pos:line="78" pos:column="11">-&gt;<pos:position pos:line="78" pos:column="16"/></operator><name pos:line="78" pos:column="13">matches<pos:position pos:line="78" pos:column="20"/></name></name> <operator pos:line="78" pos:column="21">=<pos:position pos:line="78" pos:column="22"/></operator> <name pos:line="78" pos:column="23">match<pos:position pos:line="78" pos:column="28"/></name></expr>;<pos:position pos:line="78" pos:column="29"/></expr_stmt></block></then>
    <else pos:line="79" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="80" pos:column="7">prev<pos:position pos:line="80" pos:column="11"/></name><operator pos:line="80" pos:column="11">-&gt;<pos:position pos:line="80" pos:column="16"/></operator><name pos:line="80" pos:column="13">next<pos:position pos:line="80" pos:column="17"/></name></name> <operator pos:line="80" pos:column="18">=<pos:position pos:line="80" pos:column="19"/></operator> <name pos:line="80" pos:column="20">match<pos:position pos:line="80" pos:column="25"/></name></expr>;<pos:position pos:line="80" pos:column="26"/></expr_stmt></block></else></if>
  }<pos:position pos:line="81" pos:column="4"/></block></else></if>

  <return pos:line="83" pos:column="3">return <expr><literal type="number" pos:line="83" pos:column="10">0<pos:position pos:line="83" pos:column="11"/></literal></expr>;<pos:position pos:line="83" pos:column="12"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

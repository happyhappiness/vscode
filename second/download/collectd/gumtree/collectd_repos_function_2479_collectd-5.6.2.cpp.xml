<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2479_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cf_dispatch<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">type<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">orig_key<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                       <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">orig_value<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list> <block pos:line="2" pos:column="48">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cf_callback_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">cf_cb<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">plugin_ctx_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">old_ctx<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">key<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">value<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">ret<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">i<pos:position pos:line="8" pos:column="8"/></name> <init pos:line="8" pos:column="9">= <expr><literal type="number" pos:line="8" pos:column="11">0<pos:position pos:line="8" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">orig_key<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">==<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">NULL<pos:position pos:line="10" pos:column="23"/></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">EINVAL<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">)<pos:position pos:line="11" pos:column="20"/></operator></expr>;<pos:position pos:line="11" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">DEBUG<pos:position pos:line="13" pos:column="8"/></name><argument_list pos:line="13" pos:column="8">(<argument><expr><literal type="string" pos:line="13" pos:column="9">"type = %s, key = %s, value = %s"<pos:position pos:line="13" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="44">ESCAPE_NULL<pos:position pos:line="13" pos:column="55"/></name><argument_list pos:line="13" pos:column="55">(<argument><expr><name pos:line="13" pos:column="56">type<pos:position pos:line="13" pos:column="60"/></name></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="13" pos:column="63">orig_key<pos:position pos:line="13" pos:column="71"/></name></expr></argument>,
        <argument><expr><call><name pos:line="14" pos:column="9">ESCAPE_NULL<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">orig_value<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">cf_cb<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">cf_search<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">type<pos:position pos:line="16" pos:column="30"/></name></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call><operator pos:line="16" pos:column="31">)<pos:position pos:line="16" pos:column="32"/></operator> <operator pos:line="16" pos:column="33">==<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="36">NULL<pos:position pos:line="16" pos:column="40"/></name></expr>)<pos:position pos:line="16" pos:column="41"/></condition><then pos:line="16" pos:column="41"> <block pos:line="16" pos:column="42">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">WARNING<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><literal type="string" pos:line="17" pos:column="13">"Found a configuration for the `%s' plugin, but "<pos:position pos:line="17" pos:column="62"/></literal>
            <literal type="string" pos:line="18" pos:column="13">"the plugin isn't loaded or didn't register "<pos:position pos:line="18" pos:column="58"/></literal>
            <literal type="string" pos:line="19" pos:column="13">"a configuration callback."<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>,
            <argument><expr><name pos:line="20" pos:column="13">type<pos:position pos:line="20" pos:column="17"/></name></expr></argument>)<pos:position pos:line="20" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><operator pos:line="21" pos:column="13">-<pos:position pos:line="21" pos:column="14"/></operator><literal type="number" pos:line="21" pos:column="14">1<pos:position pos:line="21" pos:column="15"/></literal><operator pos:line="21" pos:column="15">)<pos:position pos:line="21" pos:column="16"/></operator></expr>;<pos:position pos:line="21" pos:column="17"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">(<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">key<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">strdup<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">orig_key<pos:position pos:line="24" pos:column="29"/></name></expr></argument>)<pos:position pos:line="24" pos:column="30"/></argument_list></call><operator pos:line="24" pos:column="30">)<pos:position pos:line="24" pos:column="31"/></operator> <operator pos:line="24" pos:column="32">==<pos:position pos:line="24" pos:column="34"/></operator> <name pos:line="24" pos:column="35">NULL<pos:position pos:line="24" pos:column="39"/></name></expr>)<pos:position pos:line="24" pos:column="40"/></condition><then pos:line="24" pos:column="40">
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><literal type="number" pos:line="25" pos:column="13">1<pos:position pos:line="25" pos:column="14"/></literal><operator pos:line="25" pos:column="14">)<pos:position pos:line="25" pos:column="15"/></operator></expr>;<pos:position pos:line="25" pos:column="16"/></return></block></then></if>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><operator pos:line="26" pos:column="7">(<pos:position pos:line="26" pos:column="8"/></operator><name pos:line="26" pos:column="8">value<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">strdup<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">orig_value<pos:position pos:line="26" pos:column="33"/></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call><operator pos:line="26" pos:column="34">)<pos:position pos:line="26" pos:column="35"/></operator> <operator pos:line="26" pos:column="36">==<pos:position pos:line="26" pos:column="38"/></operator> <name pos:line="26" pos:column="39">NULL<pos:position pos:line="26" pos:column="43"/></name></expr>)<pos:position pos:line="26" pos:column="44"/></condition><then pos:line="26" pos:column="44"> <block pos:line="26" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">free<pos:position pos:line="27" pos:column="9"/></name><argument_list pos:line="27" pos:column="9">(<argument><expr><name pos:line="27" pos:column="10">key<pos:position pos:line="27" pos:column="13"/></name></expr></argument>)<pos:position pos:line="27" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="15"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><literal type="number" pos:line="28" pos:column="13">2<pos:position pos:line="28" pos:column="14"/></literal><operator pos:line="28" pos:column="14">)<pos:position pos:line="28" pos:column="15"/></operator></expr>;<pos:position pos:line="28" pos:column="16"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="31" pos:column="3">ret<pos:position pos:line="31" pos:column="6"/></name> <operator pos:line="31" pos:column="7">=<pos:position pos:line="31" pos:column="8"/></operator> <operator pos:line="31" pos:column="9">-<pos:position pos:line="31" pos:column="10"/></operator><literal type="number" pos:line="31" pos:column="10">1<pos:position pos:line="31" pos:column="11"/></literal></expr>;<pos:position pos:line="31" pos:column="12"/></expr_stmt>

  <expr_stmt><expr><name pos:line="33" pos:column="3">old_ctx<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <call><name pos:line="33" pos:column="13">plugin_set_ctx<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name><name pos:line="33" pos:column="28">cf_cb<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">-&gt;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="35">ctx<pos:position pos:line="33" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>

  <for pos:line="35" pos:column="3">for <control pos:line="35" pos:column="7">(<init><expr><name pos:line="35" pos:column="8">i<pos:position pos:line="35" pos:column="9"/></name> <operator pos:line="35" pos:column="10">=<pos:position pos:line="35" pos:column="11"/></operator> <literal type="number" pos:line="35" pos:column="12">0<pos:position pos:line="35" pos:column="13"/></literal></expr>;<pos:position pos:line="35" pos:column="14"/></init> <condition><expr><name pos:line="35" pos:column="15">i<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">&lt;<pos:position pos:line="35" pos:column="21"/></operator> <name><name pos:line="35" pos:column="19">cf_cb<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">-&gt;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="26">keys_num<pos:position pos:line="35" pos:column="34"/></name></name></expr>;<pos:position pos:line="35" pos:column="35"/></condition> <incr><expr><name pos:line="35" pos:column="36">i<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">++<pos:position pos:line="35" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="40"/></control> <block pos:line="35" pos:column="41">{
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">(<pos:position pos:line="36" pos:column="10"/></operator><name><name pos:line="36" pos:column="10">cf_cb<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">keys<pos:position pos:line="36" pos:column="21"/></name><index pos:line="36" pos:column="21">[<expr><name pos:line="36" pos:column="22">i<pos:position pos:line="36" pos:column="23"/></name></expr>]<pos:position pos:line="36" pos:column="24"/></index></name> <operator pos:line="36" pos:column="25">!=<pos:position pos:line="36" pos:column="27"/></operator> <name pos:line="36" pos:column="28">NULL<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">)<pos:position pos:line="36" pos:column="33"/></operator> <operator pos:line="36" pos:column="34">&amp;&amp;<pos:position pos:line="36" pos:column="44"/></operator> <operator pos:line="36" pos:column="37">(<pos:position pos:line="36" pos:column="38"/></operator><call><name pos:line="36" pos:column="38">strcasecmp<pos:position pos:line="36" pos:column="48"/></name><argument_list pos:line="36" pos:column="48">(<argument><expr><name><name pos:line="36" pos:column="49">cf_cb<pos:position pos:line="36" pos:column="54"/></name><operator pos:line="36" pos:column="54">-&gt;<pos:position pos:line="36" pos:column="59"/></operator><name pos:line="36" pos:column="56">keys<pos:position pos:line="36" pos:column="60"/></name><index pos:line="36" pos:column="60">[<expr><name pos:line="36" pos:column="61">i<pos:position pos:line="36" pos:column="62"/></name></expr>]<pos:position pos:line="36" pos:column="63"/></index></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="65">key<pos:position pos:line="36" pos:column="68"/></name></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></call> <operator pos:line="36" pos:column="70">==<pos:position pos:line="36" pos:column="72"/></operator> <literal type="number" pos:line="36" pos:column="73">0<pos:position pos:line="36" pos:column="74"/></literal><operator pos:line="36" pos:column="74">)<pos:position pos:line="36" pos:column="75"/></operator></expr>)<pos:position pos:line="36" pos:column="76"/></condition><then pos:line="36" pos:column="76"> <block pos:line="36" pos:column="77">{
      <expr_stmt><expr><name pos:line="37" pos:column="7">ret<pos:position pos:line="37" pos:column="10"/></name> <operator pos:line="37" pos:column="11">=<pos:position pos:line="37" pos:column="12"/></operator> <call pos:line="37" pos:column="13">(<modifier pos:line="37" pos:column="14">*<pos:position pos:line="37" pos:column="15"/></modifier><name><name pos:line="37" pos:column="15">cf_cb<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">-&gt;<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="22">callback<pos:position pos:line="37" pos:column="30"/></name></name>)<argument_list pos:line="37" pos:column="31">(<argument><expr><name pos:line="37" pos:column="32">key<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="37">value<pos:position pos:line="37" pos:column="42"/></name></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>
      <break pos:line="38" pos:column="7">break;<pos:position pos:line="38" pos:column="13"/></break>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
  }<pos:position pos:line="40" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="42" pos:column="3">plugin_set_ctx<pos:position pos:line="42" pos:column="17"/></name><argument_list pos:line="42" pos:column="17">(<argument><expr><name pos:line="42" pos:column="18">old_ctx<pos:position pos:line="42" pos:column="25"/></name></expr></argument>)<pos:position pos:line="42" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt>

  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">i<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">&gt;=<pos:position pos:line="44" pos:column="14"/></operator> <name><name pos:line="44" pos:column="12">cf_cb<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">-&gt;<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="19">keys_num<pos:position pos:line="44" pos:column="27"/></name></name></expr>)<pos:position pos:line="44" pos:column="28"/></condition><then pos:line="44" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="5">WARNING<pos:position pos:line="45" pos:column="12"/></name><argument_list pos:line="45" pos:column="12">(<argument><expr><literal type="string" pos:line="45" pos:column="13">"Plugin `%s' did not register for value `%s'."<pos:position pos:line="45" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="61">type<pos:position pos:line="45" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="67">key<pos:position pos:line="45" pos:column="70"/></name></expr></argument>)<pos:position pos:line="45" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="72"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="47" pos:column="3">free<pos:position pos:line="47" pos:column="7"/></name><argument_list pos:line="47" pos:column="7">(<argument><expr><name pos:line="47" pos:column="8">key<pos:position pos:line="47" pos:column="11"/></name></expr></argument>)<pos:position pos:line="47" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">free<pos:position pos:line="48" pos:column="7"/></name><argument_list pos:line="48" pos:column="7">(<argument><expr><name pos:line="48" pos:column="8">value<pos:position pos:line="48" pos:column="13"/></name></expr></argument>)<pos:position pos:line="48" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="15"/></expr_stmt>

  <return pos:line="50" pos:column="3">return <expr><operator pos:line="50" pos:column="10">(<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="11">ret<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">)<pos:position pos:line="50" pos:column="15"/></operator></expr>;<pos:position pos:line="50" pos:column="16"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

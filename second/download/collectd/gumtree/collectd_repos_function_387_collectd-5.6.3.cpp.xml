<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_387_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">get_via_io_power_sources<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">double<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">ret_charge<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="58">/* {{{ */</comment>
                                     <parameter><decl><type><name pos:line="2" pos:column="38">double<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">ret_current<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">double<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">ret_voltage<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="79"/></parameter_list> <block pos:line="2" pos:column="80">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CFTypeRef<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ps_raw<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CFArrayRef<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">ps_array<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">ps_array_len<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CFDictionaryRef<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">ps_dict<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CFTypeRef<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">ps_obj<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">double<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">temp_double<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">ps_raw<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <call><name pos:line="11" pos:column="12">IOPSCopyPowerSourcesInfo<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">()<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">ps_array<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">IOPSCopyPowerSourcesList<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><name pos:line="12" pos:column="39">ps_raw<pos:position pos:line="12" pos:column="45"/></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">ps_array_len<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">CFArrayGetCount<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">ps_array<pos:position pos:line="13" pos:column="42"/></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">DEBUG<pos:position pos:line="15" pos:column="8"/></name><argument_list pos:line="15" pos:column="8">(<argument><expr><literal type="string" pos:line="15" pos:column="9">"ps_array_len == %i"<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">ps_array_len<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>

  <for pos:line="17" pos:column="3">for <control pos:line="17" pos:column="7">(<init><decl><type><name pos:line="17" pos:column="8">int<pos:position pos:line="17" pos:column="11"/></name></type> <name pos:line="17" pos:column="12">i<pos:position pos:line="17" pos:column="13"/></name> <init pos:line="17" pos:column="14">= <expr><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="18"/></init> <condition><expr><name pos:line="17" pos:column="19">i<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">&lt;<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="23">ps_array_len<pos:position pos:line="17" pos:column="35"/></name></expr>;<pos:position pos:line="17" pos:column="36"/></condition> <incr><expr><name pos:line="17" pos:column="37">i<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">++<pos:position pos:line="17" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="41"/></control> <block pos:line="17" pos:column="42">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">ps_obj<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">CFArrayGetValueAtIndex<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">ps_array<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">i<pos:position pos:line="18" pos:column="48"/></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">ps_dict<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">IOPSGetPowerSourceDescription<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">(<argument><expr><name pos:line="19" pos:column="45">ps_raw<pos:position pos:line="19" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="53">ps_obj<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">ps_dict<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">==<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">NULL<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25"> <block pos:line="21" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">DEBUG<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><literal type="string" pos:line="22" pos:column="13">"IOPSGetPowerSourceDescription failed."<pos:position pos:line="22" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt>
      <continue pos:line="23" pos:column="7">continue;<pos:position pos:line="23" pos:column="16"/></continue>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name pos:line="26" pos:column="9">CFGetTypeID<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">ps_dict<pos:position pos:line="26" pos:column="28"/></name></expr></argument>)<pos:position pos:line="26" pos:column="29"/></argument_list></call> <operator pos:line="26" pos:column="30">!=<pos:position pos:line="26" pos:column="32"/></operator> <call><name pos:line="26" pos:column="33">CFDictionaryGetTypeID<pos:position pos:line="26" pos:column="54"/></name><argument_list pos:line="26" pos:column="54">()<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="57"/></condition><then pos:line="26" pos:column="57"> <block pos:line="26" pos:column="58">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">DEBUG<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><literal type="string" pos:line="27" pos:column="13">"IOPSGetPowerSourceDescription did not return a CFDictionaryRef"<pos:position pos:line="27" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="79"/></expr_stmt>
      <continue pos:line="28" pos:column="7">continue;<pos:position pos:line="28" pos:column="16"/></continue>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="31" pos:column="5">/* FIXME: Check if this is really an internal battery */</comment>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name pos:line="33" pos:column="9">isnan<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><operator pos:line="33" pos:column="15">*<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">ret_charge<pos:position pos:line="33" pos:column="26"/></name></expr></argument>)<pos:position pos:line="33" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="28"/></condition><then pos:line="33" pos:column="28"> <block pos:line="33" pos:column="29">{
      <comment type="block" pos:line="34" pos:column="7">/* This is the charge in percent. */</comment>
      <expr_stmt><expr><name pos:line="35" pos:column="7">temp_double<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <call><name pos:line="35" pos:column="21">dict_get_double<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">ps_dict<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="46">kIOPSCurrentCapacityKey<pos:position pos:line="35" pos:column="69"/></name></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt>
      <if pos:line="36" pos:column="7">if <condition pos:line="36" pos:column="10">(<expr><operator pos:line="36" pos:column="11">!<pos:position pos:line="36" pos:column="12"/></operator><call><name pos:line="36" pos:column="12">isnan<pos:position pos:line="36" pos:column="17"/></name><argument_list pos:line="36" pos:column="17">(<argument><expr><operator pos:line="36" pos:column="18">(<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="19">temp_double<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">)<pos:position pos:line="36" pos:column="31"/></operator></expr></argument>)<pos:position pos:line="36" pos:column="32"/></argument_list></call> <operator pos:line="36" pos:column="33">&amp;&amp;<pos:position pos:line="36" pos:column="43"/></operator> <operator pos:line="36" pos:column="36">(<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="37">temp_double<pos:position pos:line="36" pos:column="48"/></name> <operator pos:line="36" pos:column="49">&gt;=<pos:position pos:line="36" pos:column="54"/></operator> <literal type="number" pos:line="36" pos:column="52">0.0<pos:position pos:line="36" pos:column="55"/></literal><operator pos:line="36" pos:column="55">)<pos:position pos:line="36" pos:column="56"/></operator> <operator pos:line="36" pos:column="57">&amp;&amp;<pos:position pos:line="36" pos:column="67"/></operator>
          <operator pos:line="37" pos:column="11">(<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="12">temp_double<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">&lt;=<pos:position pos:line="37" pos:column="29"/></operator> <literal type="number" pos:line="37" pos:column="27">100.0<pos:position pos:line="37" pos:column="32"/></literal><operator pos:line="37" pos:column="32">)<pos:position pos:line="37" pos:column="33"/></operator></expr>)<pos:position pos:line="37" pos:column="34"/></condition><then pos:line="37" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="38" pos:column="9">*<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">ret_charge<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">temp_double<pos:position pos:line="38" pos:column="34"/></name></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><call><name pos:line="41" pos:column="9">isnan<pos:position pos:line="41" pos:column="14"/></name><argument_list pos:line="41" pos:column="14">(<argument><expr><operator pos:line="41" pos:column="15">*<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="16">ret_current<pos:position pos:line="41" pos:column="27"/></name></expr></argument>)<pos:position pos:line="41" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="29"/></condition><then pos:line="41" pos:column="29"> <block pos:line="41" pos:column="30">{
      <expr_stmt><expr><name pos:line="42" pos:column="7">temp_double<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">=<pos:position pos:line="42" pos:column="20"/></operator> <call><name pos:line="42" pos:column="21">dict_get_double<pos:position pos:line="42" pos:column="36"/></name><argument_list pos:line="42" pos:column="36">(<argument><expr><name pos:line="42" pos:column="37">ps_dict<pos:position pos:line="42" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="46">kIOPSCurrentKey<pos:position pos:line="42" pos:column="61"/></name></expr></argument>)<pos:position pos:line="42" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="63"/></expr_stmt>
      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><operator pos:line="43" pos:column="11">!<pos:position pos:line="43" pos:column="12"/></operator><call><name pos:line="43" pos:column="12">isnan<pos:position pos:line="43" pos:column="17"/></name><argument_list pos:line="43" pos:column="17">(<argument><expr><name pos:line="43" pos:column="18">temp_double<pos:position pos:line="43" pos:column="29"/></name></expr></argument>)<pos:position pos:line="43" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="31"/></condition><then pos:line="43" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="44" pos:column="9">*<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">ret_current<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <name pos:line="44" pos:column="24">temp_double<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">/<pos:position pos:line="44" pos:column="37"/></operator> <literal type="number" pos:line="44" pos:column="38">1000.0<pos:position pos:line="44" pos:column="44"/></literal></expr>;<pos:position pos:line="44" pos:column="45"/></expr_stmt></block></then></if>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><call><name pos:line="47" pos:column="9">isnan<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><operator pos:line="47" pos:column="15">*<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="16">ret_voltage<pos:position pos:line="47" pos:column="27"/></name></expr></argument>)<pos:position pos:line="47" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="29"/></condition><then pos:line="47" pos:column="29"> <block pos:line="47" pos:column="30">{
      <expr_stmt><expr><name pos:line="48" pos:column="7">temp_double<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">=<pos:position pos:line="48" pos:column="20"/></operator> <call><name pos:line="48" pos:column="21">dict_get_double<pos:position pos:line="48" pos:column="36"/></name><argument_list pos:line="48" pos:column="36">(<argument><expr><name pos:line="48" pos:column="37">ps_dict<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="46">kIOPSVoltageKey<pos:position pos:line="48" pos:column="61"/></name></expr></argument>)<pos:position pos:line="48" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="63"/></expr_stmt>
      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><operator pos:line="49" pos:column="11">!<pos:position pos:line="49" pos:column="12"/></operator><call><name pos:line="49" pos:column="12">isnan<pos:position pos:line="49" pos:column="17"/></name><argument_list pos:line="49" pos:column="17">(<argument><expr><name pos:line="49" pos:column="18">temp_double<pos:position pos:line="49" pos:column="29"/></name></expr></argument>)<pos:position pos:line="49" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="31"/></condition><then pos:line="49" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="50" pos:column="9">*<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">ret_voltage<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <name pos:line="50" pos:column="24">temp_double<pos:position pos:line="50" pos:column="35"/></name> <operator pos:line="50" pos:column="36">/<pos:position pos:line="50" pos:column="37"/></operator> <literal type="number" pos:line="50" pos:column="38">1000.0<pos:position pos:line="50" pos:column="44"/></literal></expr>;<pos:position pos:line="50" pos:column="45"/></expr_stmt></block></then></if>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
  }<pos:position pos:line="52" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="54" pos:column="3">CFRelease<pos:position pos:line="54" pos:column="12"/></name><argument_list pos:line="54" pos:column="12">(<argument><expr><name pos:line="54" pos:column="13">ps_array<pos:position pos:line="54" pos:column="21"/></name></expr></argument>)<pos:position pos:line="54" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">CFRelease<pos:position pos:line="55" pos:column="12"/></name><argument_list pos:line="55" pos:column="12">(<argument><expr><name pos:line="55" pos:column="13">ps_raw<pos:position pos:line="55" pos:column="19"/></name></expr></argument>)<pos:position pos:line="55" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="21"/></expr_stmt>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1418_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cpy_write_callback<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">data_set_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ds<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">value_list_t<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">value_list<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="85">user_data_t<pos:position pos:line="1" pos:column="96"/></name> <modifier pos:line="1" pos:column="97">*<pos:position pos:line="1" pos:column="98"/></modifier></type><name pos:line="1" pos:column="98">data<pos:position pos:line="1" pos:column="102"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="103"/></parameter_list> <block pos:line="1" pos:column="104">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">i<pos:position pos:line="2" pos:column="14"/></name></decl>;<pos:position pos:line="2" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">cpy_callback_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">c<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name><name pos:line="3" pos:column="29">data<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">data<pos:position pos:line="3" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">PyObject<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">ret<pos:position pos:line="4" pos:column="22"/></name></decl>, <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="25">v<pos:position pos:line="4" pos:column="26"/></name></decl>, <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="29">list<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">CPY_LOCK_THREADS<pos:position pos:line="6" pos:column="25"/></name></type>
		<name pos:line="7" pos:column="17">list<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><call><name pos:line="7" pos:column="24">PyList_New<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><name><name pos:line="7" pos:column="35">value_list<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">-&gt;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="47">values_len<pos:position pos:line="7" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="59"/></decl_stmt> <comment type="block" pos:line="7" pos:column="60">/* New reference. */</comment>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">list<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">==<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="29">NULL<pos:position pos:line="8" pos:column="33"/></name></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34"> <block pos:line="8" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="9" pos:column="25">cpy_log_exception<pos:position pos:line="9" pos:column="42"/></name><argument_list pos:line="9" pos:column="42">(<argument><expr><literal type="string" pos:line="9" pos:column="43">"write callback"<pos:position pos:line="9" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><name pos:line="10" pos:column="25">CPY_RETURN_FROM_THREADS<pos:position pos:line="10" pos:column="48"/></name> <literal type="number" pos:line="10" pos:column="49">0<pos:position pos:line="10" pos:column="50"/></literal></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="11" pos:column="18"/></block></then></if>
		<for pos:line="12" pos:column="17">for <control pos:line="12" pos:column="21">(<init><expr><name pos:line="12" pos:column="22">i<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <literal type="number" pos:line="12" pos:column="26">0<pos:position pos:line="12" pos:column="27"/></literal></expr>;<pos:position pos:line="12" pos:column="28"/></init> <condition><expr><name pos:line="12" pos:column="29">i<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">&lt;<pos:position pos:line="12" pos:column="35"/></operator> <name><name pos:line="12" pos:column="33">value_list<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">values_len<pos:position pos:line="12" pos:column="55"/></name></name></expr>;<pos:position pos:line="12" pos:column="56"/></condition> <incr><expr><operator pos:line="12" pos:column="57">++<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="59">i<pos:position pos:line="12" pos:column="60"/></name></expr></incr>)<pos:position pos:line="12" pos:column="61"/></control> <block pos:line="12" pos:column="62">{
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><name><name pos:line="13" pos:column="29">ds<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">ds<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">type<pos:position pos:line="13" pos:column="41"/></name></name> <operator pos:line="13" pos:column="42">==<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="45">DS_TYPE_COUNTER<pos:position pos:line="13" pos:column="60"/></name></expr>)<pos:position pos:line="13" pos:column="61"/></condition><then pos:line="13" pos:column="61"> <block pos:line="13" pos:column="62">{
				<if pos:line="14" pos:column="33">if <condition pos:line="14" pos:column="36">(<expr><operator pos:line="14" pos:column="37">(<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="38">long<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">)<pos:position pos:line="14" pos:column="43"/></operator> <name><name pos:line="14" pos:column="44">value_list<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">-&gt;<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="56">values<pos:position pos:line="14" pos:column="62"/></name><index pos:line="14" pos:column="62">[<expr><name pos:line="14" pos:column="63">i<pos:position pos:line="14" pos:column="64"/></name></expr>]<pos:position pos:line="14" pos:column="65"/></index></name><operator pos:line="14" pos:column="65">.<pos:position pos:line="14" pos:column="66"/></operator><name pos:line="14" pos:column="66">counter<pos:position pos:line="14" pos:column="73"/></name> <operator pos:line="14" pos:column="74">==<pos:position pos:line="14" pos:column="76"/></operator> <name><name pos:line="14" pos:column="77">value_list<pos:position pos:line="14" pos:column="87"/></name><operator pos:line="14" pos:column="87">-&gt;<pos:position pos:line="14" pos:column="92"/></operator><name pos:line="14" pos:column="89">values<pos:position pos:line="14" pos:column="95"/></name><index pos:line="14" pos:column="95">[<expr><name pos:line="14" pos:column="96">i<pos:position pos:line="14" pos:column="97"/></name></expr>]<pos:position pos:line="14" pos:column="98"/></index></name><operator pos:line="14" pos:column="98">.<pos:position pos:line="14" pos:column="99"/></operator><name pos:line="14" pos:column="99">counter<pos:position pos:line="14" pos:column="106"/></name></expr>)<pos:position pos:line="14" pos:column="107"/></condition><then pos:line="14" pos:column="107">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="41">PyList_SetItem<pos:position pos:line="15" pos:column="55"/></name><argument_list pos:line="15" pos:column="55">(<argument><expr><name pos:line="15" pos:column="56">list<pos:position pos:line="15" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="62">i<pos:position pos:line="15" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="65">PyInt_FromLong<pos:position pos:line="15" pos:column="79"/></name><argument_list pos:line="15" pos:column="79">(<argument><expr><name><name pos:line="15" pos:column="80">value_list<pos:position pos:line="15" pos:column="90"/></name><operator pos:line="15" pos:column="90">-&gt;<pos:position pos:line="15" pos:column="95"/></operator><name pos:line="15" pos:column="92">values<pos:position pos:line="15" pos:column="98"/></name><index pos:line="15" pos:column="98">[<expr><name pos:line="15" pos:column="99">i<pos:position pos:line="15" pos:column="100"/></name></expr>]<pos:position pos:line="15" pos:column="101"/></index></name><operator pos:line="15" pos:column="101">.<pos:position pos:line="15" pos:column="102"/></operator><name pos:line="15" pos:column="102">counter<pos:position pos:line="15" pos:column="109"/></name></expr></argument>)<pos:position pos:line="15" pos:column="110"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="112"/></expr_stmt></block></then>
				<else pos:line="16" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="41">PyList_SetItem<pos:position pos:line="17" pos:column="55"/></name><argument_list pos:line="17" pos:column="55">(<argument><expr><name pos:line="17" pos:column="56">list<pos:position pos:line="17" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="62">i<pos:position pos:line="17" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="65">PyLong_FromUnsignedLongLong<pos:position pos:line="17" pos:column="92"/></name><argument_list pos:line="17" pos:column="92">(<argument><expr><name><name pos:line="17" pos:column="93">value_list<pos:position pos:line="17" pos:column="103"/></name><operator pos:line="17" pos:column="103">-&gt;<pos:position pos:line="17" pos:column="108"/></operator><name pos:line="17" pos:column="105">values<pos:position pos:line="17" pos:column="111"/></name><index pos:line="17" pos:column="111">[<expr><name pos:line="17" pos:column="112">i<pos:position pos:line="17" pos:column="113"/></name></expr>]<pos:position pos:line="17" pos:column="114"/></index></name><operator pos:line="17" pos:column="114">.<pos:position pos:line="17" pos:column="115"/></operator><name pos:line="17" pos:column="115">counter<pos:position pos:line="17" pos:column="122"/></name></expr></argument>)<pos:position pos:line="17" pos:column="123"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="125"/></expr_stmt></block></else></if>
			}<pos:position pos:line="18" pos:column="26"/></block></then> <elseif pos:line="18" pos:column="27">else <if pos:line="18" pos:column="32">if <condition pos:line="18" pos:column="35">(<expr><name><name pos:line="18" pos:column="36">ds<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">ds<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">-&gt;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="44">type<pos:position pos:line="18" pos:column="48"/></name></name> <operator pos:line="18" pos:column="49">==<pos:position pos:line="18" pos:column="51"/></operator> <name pos:line="18" pos:column="52">DS_TYPE_GAUGE<pos:position pos:line="18" pos:column="65"/></name></expr>)<pos:position pos:line="18" pos:column="66"/></condition><then pos:line="18" pos:column="66"> <block pos:line="18" pos:column="67">{
				<expr_stmt><expr><call><name pos:line="19" pos:column="33">PyList_SetItem<pos:position pos:line="19" pos:column="47"/></name><argument_list pos:line="19" pos:column="47">(<argument><expr><name pos:line="19" pos:column="48">list<pos:position pos:line="19" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="54">i<pos:position pos:line="19" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="57">PyFloat_FromDouble<pos:position pos:line="19" pos:column="75"/></name><argument_list pos:line="19" pos:column="75">(<argument><expr><name><name pos:line="19" pos:column="76">value_list<pos:position pos:line="19" pos:column="86"/></name><operator pos:line="19" pos:column="86">-&gt;<pos:position pos:line="19" pos:column="91"/></operator><name pos:line="19" pos:column="88">values<pos:position pos:line="19" pos:column="94"/></name><index pos:line="19" pos:column="94">[<expr><name pos:line="19" pos:column="95">i<pos:position pos:line="19" pos:column="96"/></name></expr>]<pos:position pos:line="19" pos:column="97"/></index></name><operator pos:line="19" pos:column="97">.<pos:position pos:line="19" pos:column="98"/></operator><name pos:line="19" pos:column="98">gauge<pos:position pos:line="19" pos:column="103"/></name></expr></argument>)<pos:position pos:line="19" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="106"/></expr_stmt>
			}<pos:position pos:line="20" pos:column="26"/></block></then></if></elseif> <elseif pos:line="20" pos:column="27">else <if pos:line="20" pos:column="32">if <condition pos:line="20" pos:column="35">(<expr><name><name pos:line="20" pos:column="36">ds<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">-&gt;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="40">ds<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">type<pos:position pos:line="20" pos:column="48"/></name></name> <operator pos:line="20" pos:column="49">==<pos:position pos:line="20" pos:column="51"/></operator> <name pos:line="20" pos:column="52">DS_TYPE_DERIVE<pos:position pos:line="20" pos:column="66"/></name></expr>)<pos:position pos:line="20" pos:column="67"/></condition><then pos:line="20" pos:column="67"> <block pos:line="20" pos:column="68">{
				<if pos:line="21" pos:column="33">if <condition pos:line="21" pos:column="36">(<expr><operator pos:line="21" pos:column="37">(<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="38">long<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">)<pos:position pos:line="21" pos:column="43"/></operator> <name><name pos:line="21" pos:column="44">value_list<pos:position pos:line="21" pos:column="54"/></name><operator pos:line="21" pos:column="54">-&gt;<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="56">values<pos:position pos:line="21" pos:column="62"/></name><index pos:line="21" pos:column="62">[<expr><name pos:line="21" pos:column="63">i<pos:position pos:line="21" pos:column="64"/></name></expr>]<pos:position pos:line="21" pos:column="65"/></index></name><operator pos:line="21" pos:column="65">.<pos:position pos:line="21" pos:column="66"/></operator><name pos:line="21" pos:column="66">derive<pos:position pos:line="21" pos:column="72"/></name> <operator pos:line="21" pos:column="73">==<pos:position pos:line="21" pos:column="75"/></operator> <name><name pos:line="21" pos:column="76">value_list<pos:position pos:line="21" pos:column="86"/></name><operator pos:line="21" pos:column="86">-&gt;<pos:position pos:line="21" pos:column="91"/></operator><name pos:line="21" pos:column="88">values<pos:position pos:line="21" pos:column="94"/></name><index pos:line="21" pos:column="94">[<expr><name pos:line="21" pos:column="95">i<pos:position pos:line="21" pos:column="96"/></name></expr>]<pos:position pos:line="21" pos:column="97"/></index></name><operator pos:line="21" pos:column="97">.<pos:position pos:line="21" pos:column="98"/></operator><name pos:line="21" pos:column="98">derive<pos:position pos:line="21" pos:column="104"/></name></expr>)<pos:position pos:line="21" pos:column="105"/></condition><then pos:line="21" pos:column="105">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="41">PyList_SetItem<pos:position pos:line="22" pos:column="55"/></name><argument_list pos:line="22" pos:column="55">(<argument><expr><name pos:line="22" pos:column="56">list<pos:position pos:line="22" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="62">i<pos:position pos:line="22" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="65">PyInt_FromLong<pos:position pos:line="22" pos:column="79"/></name><argument_list pos:line="22" pos:column="79">(<argument><expr><name><name pos:line="22" pos:column="80">value_list<pos:position pos:line="22" pos:column="90"/></name><operator pos:line="22" pos:column="90">-&gt;<pos:position pos:line="22" pos:column="95"/></operator><name pos:line="22" pos:column="92">values<pos:position pos:line="22" pos:column="98"/></name><index pos:line="22" pos:column="98">[<expr><name pos:line="22" pos:column="99">i<pos:position pos:line="22" pos:column="100"/></name></expr>]<pos:position pos:line="22" pos:column="101"/></index></name><operator pos:line="22" pos:column="101">.<pos:position pos:line="22" pos:column="102"/></operator><name pos:line="22" pos:column="102">derive<pos:position pos:line="22" pos:column="108"/></name></expr></argument>)<pos:position pos:line="22" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="111"/></expr_stmt></block></then>
				<else pos:line="23" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="41">PyList_SetItem<pos:position pos:line="24" pos:column="55"/></name><argument_list pos:line="24" pos:column="55">(<argument><expr><name pos:line="24" pos:column="56">list<pos:position pos:line="24" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="62">i<pos:position pos:line="24" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="65">PyLong_FromLongLong<pos:position pos:line="24" pos:column="84"/></name><argument_list pos:line="24" pos:column="84">(<argument><expr><name><name pos:line="24" pos:column="85">value_list<pos:position pos:line="24" pos:column="95"/></name><operator pos:line="24" pos:column="95">-&gt;<pos:position pos:line="24" pos:column="100"/></operator><name pos:line="24" pos:column="97">values<pos:position pos:line="24" pos:column="103"/></name><index pos:line="24" pos:column="103">[<expr><name pos:line="24" pos:column="104">i<pos:position pos:line="24" pos:column="105"/></name></expr>]<pos:position pos:line="24" pos:column="106"/></index></name><operator pos:line="24" pos:column="106">.<pos:position pos:line="24" pos:column="107"/></operator><name pos:line="24" pos:column="107">derive<pos:position pos:line="24" pos:column="113"/></name></expr></argument>)<pos:position pos:line="24" pos:column="114"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="116"/></expr_stmt></block></else></if>
			}<pos:position pos:line="25" pos:column="26"/></block></then></if></elseif> <elseif pos:line="25" pos:column="27">else <if pos:line="25" pos:column="32">if <condition pos:line="25" pos:column="35">(<expr><name><name pos:line="25" pos:column="36">ds<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">ds<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">type<pos:position pos:line="25" pos:column="48"/></name></name> <operator pos:line="25" pos:column="49">==<pos:position pos:line="25" pos:column="51"/></operator> <name pos:line="25" pos:column="52">DS_TYPE_ABSOLUTE<pos:position pos:line="25" pos:column="68"/></name></expr>)<pos:position pos:line="25" pos:column="69"/></condition><then pos:line="25" pos:column="69"> <block pos:line="25" pos:column="70">{
				<if pos:line="26" pos:column="33">if <condition pos:line="26" pos:column="36">(<expr><operator pos:line="26" pos:column="37">(<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">long<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">)<pos:position pos:line="26" pos:column="43"/></operator> <name><name pos:line="26" pos:column="44">value_list<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">-&gt;<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="56">values<pos:position pos:line="26" pos:column="62"/></name><index pos:line="26" pos:column="62">[<expr><name pos:line="26" pos:column="63">i<pos:position pos:line="26" pos:column="64"/></name></expr>]<pos:position pos:line="26" pos:column="65"/></index></name><operator pos:line="26" pos:column="65">.<pos:position pos:line="26" pos:column="66"/></operator><name pos:line="26" pos:column="66">absolute<pos:position pos:line="26" pos:column="74"/></name> <operator pos:line="26" pos:column="75">==<pos:position pos:line="26" pos:column="77"/></operator> <name><name pos:line="26" pos:column="78">value_list<pos:position pos:line="26" pos:column="88"/></name><operator pos:line="26" pos:column="88">-&gt;<pos:position pos:line="26" pos:column="93"/></operator><name pos:line="26" pos:column="90">values<pos:position pos:line="26" pos:column="96"/></name><index pos:line="26" pos:column="96">[<expr><name pos:line="26" pos:column="97">i<pos:position pos:line="26" pos:column="98"/></name></expr>]<pos:position pos:line="26" pos:column="99"/></index></name><operator pos:line="26" pos:column="99">.<pos:position pos:line="26" pos:column="100"/></operator><name pos:line="26" pos:column="100">absolute<pos:position pos:line="26" pos:column="108"/></name></expr>)<pos:position pos:line="26" pos:column="109"/></condition><then pos:line="26" pos:column="109">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="41">PyList_SetItem<pos:position pos:line="27" pos:column="55"/></name><argument_list pos:line="27" pos:column="55">(<argument><expr><name pos:line="27" pos:column="56">list<pos:position pos:line="27" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="62">i<pos:position pos:line="27" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="65">PyInt_FromLong<pos:position pos:line="27" pos:column="79"/></name><argument_list pos:line="27" pos:column="79">(<argument><expr><name><name pos:line="27" pos:column="80">value_list<pos:position pos:line="27" pos:column="90"/></name><operator pos:line="27" pos:column="90">-&gt;<pos:position pos:line="27" pos:column="95"/></operator><name pos:line="27" pos:column="92">values<pos:position pos:line="27" pos:column="98"/></name><index pos:line="27" pos:column="98">[<expr><name pos:line="27" pos:column="99">i<pos:position pos:line="27" pos:column="100"/></name></expr>]<pos:position pos:line="27" pos:column="101"/></index></name><operator pos:line="27" pos:column="101">.<pos:position pos:line="27" pos:column="102"/></operator><name pos:line="27" pos:column="102">absolute<pos:position pos:line="27" pos:column="110"/></name></expr></argument>)<pos:position pos:line="27" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="113"/></expr_stmt></block></then>
				<else pos:line="28" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="41">PyList_SetItem<pos:position pos:line="29" pos:column="55"/></name><argument_list pos:line="29" pos:column="55">(<argument><expr><name pos:line="29" pos:column="56">list<pos:position pos:line="29" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="62">i<pos:position pos:line="29" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="65">PyLong_FromUnsignedLongLong<pos:position pos:line="29" pos:column="92"/></name><argument_list pos:line="29" pos:column="92">(<argument><expr><name><name pos:line="29" pos:column="93">value_list<pos:position pos:line="29" pos:column="103"/></name><operator pos:line="29" pos:column="103">-&gt;<pos:position pos:line="29" pos:column="108"/></operator><name pos:line="29" pos:column="105">values<pos:position pos:line="29" pos:column="111"/></name><index pos:line="29" pos:column="111">[<expr><name pos:line="29" pos:column="112">i<pos:position pos:line="29" pos:column="113"/></name></expr>]<pos:position pos:line="29" pos:column="114"/></index></name><operator pos:line="29" pos:column="114">.<pos:position pos:line="29" pos:column="115"/></operator><name pos:line="29" pos:column="115">absolute<pos:position pos:line="29" pos:column="123"/></name></expr></argument>)<pos:position pos:line="29" pos:column="124"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="126"/></expr_stmt></block></else></if>
			}<pos:position pos:line="30" pos:column="26"/></block></then></if></elseif> <else pos:line="30" pos:column="27">else <block pos:line="30" pos:column="32">{
				<decl_stmt><decl><type><name pos:line="31" pos:column="33">Py_BEGIN_ALLOW_THREADS<pos:position pos:line="31" pos:column="55"/></name></type>
				<name pos:line="32" pos:column="33">ERROR<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><literal type="string" pos:line="32" pos:column="39">"cpy_write_callback: Unknown value type %d."<pos:position pos:line="32" pos:column="83"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="85">ds<pos:position pos:line="32" pos:column="87"/></name><operator pos:line="32" pos:column="87">-&gt;<pos:position pos:line="32" pos:column="92"/></operator><name pos:line="32" pos:column="89">ds<pos:position pos:line="32" pos:column="91"/></name><operator pos:line="32" pos:column="91">-&gt;<pos:position pos:line="32" pos:column="96"/></operator><name pos:line="32" pos:column="93">type<pos:position pos:line="32" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="98"/></argument_list></decl>;<pos:position pos:line="32" pos:column="99"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="33" pos:column="33">Py_END_ALLOW_THREADS<pos:position pos:line="33" pos:column="53"/></name></type>
				<name pos:line="34" pos:column="33">Py_DECREF<pos:position pos:line="34" pos:column="42"/></name><argument_list pos:line="34" pos:column="42">(<argument><expr><name pos:line="34" pos:column="43">list<pos:position pos:line="34" pos:column="47"/></name></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></decl>;<pos:position pos:line="34" pos:column="49"/></decl_stmt>
				<expr_stmt><expr><name pos:line="35" pos:column="33">CPY_RETURN_FROM_THREADS<pos:position pos:line="35" pos:column="56"/></name> <literal type="number" pos:line="35" pos:column="57">0<pos:position pos:line="35" pos:column="58"/></literal></expr>;<pos:position pos:line="35" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="36" pos:column="26"/></block></else></if>
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><call><name pos:line="37" pos:column="29">PyErr_Occurred<pos:position pos:line="37" pos:column="43"/></name><argument_list pos:line="37" pos:column="43">()<pos:position pos:line="37" pos:column="45"/></argument_list></call> <operator pos:line="37" pos:column="46">!=<pos:position pos:line="37" pos:column="48"/></operator> <name pos:line="37" pos:column="49">NULL<pos:position pos:line="37" pos:column="53"/></name></expr>)<pos:position pos:line="37" pos:column="54"/></condition><then pos:line="37" pos:column="54"> <block pos:line="37" pos:column="55">{
				<expr_stmt><expr><call><name pos:line="38" pos:column="33">cpy_log_exception<pos:position pos:line="38" pos:column="50"/></name><argument_list pos:line="38" pos:column="50">(<argument><expr><literal type="string" pos:line="38" pos:column="51">"value building for write callback"<pos:position pos:line="38" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="88"/></expr_stmt>
				<expr_stmt><expr><name pos:line="39" pos:column="33">CPY_RETURN_FROM_THREADS<pos:position pos:line="39" pos:column="56"/></name> <literal type="number" pos:line="39" pos:column="57">0<pos:position pos:line="39" pos:column="58"/></literal></expr>;<pos:position pos:line="39" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="40" pos:column="26"/></block></then></if>
		}<pos:position pos:line="41" pos:column="18"/></block></for>
		<expr_stmt><expr><name pos:line="42" pos:column="17">v<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">=<pos:position pos:line="42" pos:column="20"/></operator> <call><name pos:line="42" pos:column="21">PyObject_CallFunction<pos:position pos:line="42" pos:column="42"/></name><argument_list pos:line="42" pos:column="42">(<argument><expr><operator pos:line="42" pos:column="43">(<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="44">void<pos:position pos:line="42" pos:column="48"/></name> <operator pos:line="42" pos:column="49">*<pos:position pos:line="42" pos:column="50"/></operator><operator pos:line="42" pos:column="50">)<pos:position pos:line="42" pos:column="51"/></operator> <operator pos:line="42" pos:column="52">&amp;<pos:position pos:line="42" pos:column="57"/></operator><name pos:line="42" pos:column="53">ValuesType<pos:position pos:line="42" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="65">"sOssssdi"<pos:position pos:line="42" pos:column="75"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="77">value_list<pos:position pos:line="42" pos:column="87"/></name><operator pos:line="42" pos:column="87">-&gt;<pos:position pos:line="42" pos:column="92"/></operator><name pos:line="42" pos:column="89">type<pos:position pos:line="42" pos:column="93"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="95">list<pos:position pos:line="42" pos:column="99"/></name></expr></argument>,
				<argument><expr><name><name pos:line="43" pos:column="33">value_list<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">-&gt;<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="45">plugin_instance<pos:position pos:line="43" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="62">value_list<pos:position pos:line="43" pos:column="72"/></name><operator pos:line="43" pos:column="72">-&gt;<pos:position pos:line="43" pos:column="77"/></operator><name pos:line="43" pos:column="74">type_instance<pos:position pos:line="43" pos:column="87"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="89">value_list<pos:position pos:line="43" pos:column="99"/></name><operator pos:line="43" pos:column="99">-&gt;<pos:position pos:line="43" pos:column="104"/></operator><name pos:line="43" pos:column="101">plugin<pos:position pos:line="43" pos:column="107"/></name></name></expr></argument>,
				<argument><expr><name><name pos:line="44" pos:column="33">value_list<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">-&gt;<pos:position pos:line="44" pos:column="48"/></operator><name pos:line="44" pos:column="45">host<pos:position pos:line="44" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="51">(<pos:position pos:line="44" pos:column="52"/></operator><name pos:line="44" pos:column="52">double<pos:position pos:line="44" pos:column="58"/></name><operator pos:line="44" pos:column="58">)<pos:position pos:line="44" pos:column="59"/></operator> <name><name pos:line="44" pos:column="60">value_list<pos:position pos:line="44" pos:column="70"/></name><operator pos:line="44" pos:column="70">-&gt;<pos:position pos:line="44" pos:column="75"/></operator><name pos:line="44" pos:column="72">time<pos:position pos:line="44" pos:column="76"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="78">value_list<pos:position pos:line="44" pos:column="88"/></name><operator pos:line="44" pos:column="88">-&gt;<pos:position pos:line="44" pos:column="93"/></operator><name pos:line="44" pos:column="90">interval<pos:position pos:line="44" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="100"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">Py_DECREF<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><name pos:line="45" pos:column="27">list<pos:position pos:line="45" pos:column="31"/></name></expr></argument>)<pos:position pos:line="45" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="46" pos:column="17">ret<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <call><name pos:line="46" pos:column="23">PyObject_CallFunctionObjArgs<pos:position pos:line="46" pos:column="51"/></name><argument_list pos:line="46" pos:column="51">(<argument><expr><name><name pos:line="46" pos:column="52">c<pos:position pos:line="46" pos:column="53"/></name><operator pos:line="46" pos:column="53">-&gt;<pos:position pos:line="46" pos:column="58"/></operator><name pos:line="46" pos:column="55">callback<pos:position pos:line="46" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="65">v<pos:position pos:line="46" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="68">c<pos:position pos:line="46" pos:column="69"/></name><operator pos:line="46" pos:column="69">-&gt;<pos:position pos:line="46" pos:column="74"/></operator><name pos:line="46" pos:column="71">data<pos:position pos:line="46" pos:column="75"/></name></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="77">(<pos:position pos:line="46" pos:column="78"/></operator><name pos:line="46" pos:column="78">void<pos:position pos:line="46" pos:column="82"/></name> <operator pos:line="46" pos:column="83">*<pos:position pos:line="46" pos:column="84"/></operator><operator pos:line="46" pos:column="84">)<pos:position pos:line="46" pos:column="85"/></operator> <literal type="number" pos:line="46" pos:column="86">0<pos:position pos:line="46" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="89"/></expr_stmt> <comment type="block" pos:line="46" pos:column="90">/* New reference. */</comment>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">ret<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">==<pos:position pos:line="47" pos:column="27"/></operator> <name pos:line="47" pos:column="28">NULL<pos:position pos:line="47" pos:column="32"/></name></expr>)<pos:position pos:line="47" pos:column="33"/></condition><then pos:line="47" pos:column="33"> <block pos:line="47" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">cpy_log_exception<pos:position pos:line="48" pos:column="42"/></name><argument_list pos:line="48" pos:column="42">(<argument><expr><literal type="string" pos:line="48" pos:column="43">"write callback"<pos:position pos:line="48" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="49" pos:column="18"/></block></then> <else pos:line="49" pos:column="19">else <block pos:line="49" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="50" pos:column="25">Py_DECREF<pos:position pos:line="50" pos:column="34"/></name><argument_list pos:line="50" pos:column="34">(<argument><expr><name pos:line="50" pos:column="35">ret<pos:position pos:line="50" pos:column="38"/></name></expr></argument>)<pos:position pos:line="50" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="51" pos:column="18"/></block></else></if>
	<macro><name pos:line="52" pos:column="9">CPY_RELEASE_THREADS<pos:position pos:line="52" pos:column="28"/></name></macro>
	<return pos:line="53" pos:column="9">return <expr><literal type="number" pos:line="53" pos:column="16">0<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_543_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">c_psql_config_database<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">oconfig_item_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ci<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <block pos:line="1" pos:column="55">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">c_psql_database_t<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">db<pos:position pos:line="2" pos:column="24"/></name></decl>;<pos:position pos:line="2" pos:column="25"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">cb_name<pos:position pos:line="4" pos:column="15"/></name><index pos:line="4" pos:column="15">[<expr><name pos:line="4" pos:column="16">DATA_MAX_NAME_LEN<pos:position pos:line="4" pos:column="33"/></name></expr>]<pos:position pos:line="4" pos:column="34"/></index></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="5" pos:column="3">static<pos:position pos:line="5" pos:column="9"/></specifier> <type><name pos:line="5" pos:column="10">_Bool<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">have_flush<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><literal type="number" pos:line="7" pos:column="8">1<pos:position pos:line="7" pos:column="9"/></literal> <operator pos:line="7" pos:column="10">!=<pos:position pos:line="7" pos:column="12"/></operator> <name><name pos:line="7" pos:column="13">ci<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">values_num<pos:position pos:line="7" pos:column="27"/></name></name><operator pos:line="7" pos:column="27">)<pos:position pos:line="7" pos:column="28"/></operator> <operator pos:line="7" pos:column="29">||<pos:position pos:line="7" pos:column="31"/></operator> <operator pos:line="7" pos:column="32">(<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">OCONFIG_TYPE_STRING<pos:position pos:line="7" pos:column="52"/></name> <operator pos:line="7" pos:column="53">!=<pos:position pos:line="7" pos:column="55"/></operator> <name><name pos:line="7" pos:column="56">ci<pos:position pos:line="7" pos:column="58"/></name><operator pos:line="7" pos:column="58">-&gt;<pos:position pos:line="7" pos:column="63"/></operator><name pos:line="7" pos:column="60">values<pos:position pos:line="7" pos:column="66"/></name><index pos:line="7" pos:column="66">[<expr><literal type="number" pos:line="7" pos:column="67">0<pos:position pos:line="7" pos:column="68"/></literal></expr>]<pos:position pos:line="7" pos:column="69"/></index></name><operator pos:line="7" pos:column="69">.<pos:position pos:line="7" pos:column="70"/></operator><name pos:line="7" pos:column="70">type<pos:position pos:line="7" pos:column="74"/></name><operator pos:line="7" pos:column="74">)<pos:position pos:line="7" pos:column="75"/></operator></expr>)<pos:position pos:line="7" pos:column="76"/></condition><then pos:line="7" pos:column="76"> <block pos:line="7" pos:column="77">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">log_err<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><literal type="string" pos:line="8" pos:column="13">"&lt;Database&gt; expects a single string argument."<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">1<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="12" pos:column="3">db<pos:position pos:line="12" pos:column="5"/></name> <operator pos:line="12" pos:column="6">=<pos:position pos:line="12" pos:column="7"/></operator> <call><name pos:line="12" pos:column="8">c_psql_database_new<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name><name pos:line="12" pos:column="28">ci<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">values<pos:position pos:line="12" pos:column="38"/></name><index pos:line="12" pos:column="38">[<expr><literal type="number" pos:line="12" pos:column="39">0<pos:position pos:line="12" pos:column="40"/></literal></expr>]<pos:position pos:line="12" pos:column="41"/></index></name><operator pos:line="12" pos:column="41">.<pos:position pos:line="12" pos:column="42"/></operator><name><name pos:line="12" pos:column="42">value<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">.<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="48">string<pos:position pos:line="12" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">db<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">==<pos:position pos:line="13" pos:column="12"/></operator> <name pos:line="13" pos:column="13">NULL<pos:position pos:line="13" pos:column="17"/></name></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return></block></then></if>

  <for pos:line="16" pos:column="3">for <control pos:line="16" pos:column="7">(<init><decl><type><name pos:line="16" pos:column="8">int<pos:position pos:line="16" pos:column="11"/></name></type> <name pos:line="16" pos:column="12">i<pos:position pos:line="16" pos:column="13"/></name> <init pos:line="16" pos:column="14">= <expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="18"/></init> <condition><expr><name pos:line="16" pos:column="19">i<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">&lt;<pos:position pos:line="16" pos:column="25"/></operator> <name><name pos:line="16" pos:column="23">ci<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">children_num<pos:position pos:line="16" pos:column="39"/></name></name></expr>;<pos:position pos:line="16" pos:column="40"/></condition> <incr><expr><operator pos:line="16" pos:column="41">++<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="43">i<pos:position pos:line="16" pos:column="44"/></name></expr></incr>)<pos:position pos:line="16" pos:column="45"/></control> <block pos:line="16" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">oconfig_item_t<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">c<pos:position pos:line="17" pos:column="22"/></name> <init pos:line="17" pos:column="23">= <expr><name><name pos:line="17" pos:column="25">ci<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">-&gt;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="29">children<pos:position pos:line="17" pos:column="37"/></name></name> <operator pos:line="17" pos:column="38">+<pos:position pos:line="17" pos:column="39"/></operator> <name pos:line="17" pos:column="40">i<pos:position pos:line="17" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="42"/></decl_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><literal type="number" pos:line="19" pos:column="9">0<pos:position pos:line="19" pos:column="10"/></literal> <operator pos:line="19" pos:column="11">==<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">strcasecmp<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name><name pos:line="19" pos:column="25">c<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">-&gt;<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="28">key<pos:position pos:line="19" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="33">"Host"<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="41"/></condition><then pos:line="19" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="7">cf_util_get_string<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">c<pos:position pos:line="20" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="29">&amp;<pos:position pos:line="20" pos:column="34"/></operator><name><name pos:line="20" pos:column="30">db<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">host<pos:position pos:line="20" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt></block></then>
    <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal> <operator pos:line="21" pos:column="16">==<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">strcasecmp<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name><name pos:line="21" pos:column="30">c<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">key<pos:position pos:line="21" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="38">"Port"<pos:position pos:line="21" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="46"/></condition><then pos:line="21" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="7">cf_util_get_service<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">c<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="30">&amp;<pos:position pos:line="22" pos:column="35"/></operator><name><name pos:line="22" pos:column="31">db<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">port<pos:position pos:line="22" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><literal type="number" pos:line="23" pos:column="14">0<pos:position pos:line="23" pos:column="15"/></literal> <operator pos:line="23" pos:column="16">==<pos:position pos:line="23" pos:column="18"/></operator> <call><name pos:line="23" pos:column="19">strcasecmp<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name><name pos:line="23" pos:column="30">c<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">key<pos:position pos:line="23" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="38">"User"<pos:position pos:line="23" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="46"/></condition><then pos:line="23" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="7">cf_util_get_string<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">c<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="29">&amp;<pos:position pos:line="24" pos:column="34"/></operator><name><name pos:line="24" pos:column="30">db<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">-&gt;<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="34">user<pos:position pos:line="24" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><literal type="number" pos:line="25" pos:column="14">0<pos:position pos:line="25" pos:column="15"/></literal> <operator pos:line="25" pos:column="16">==<pos:position pos:line="25" pos:column="18"/></operator> <call><name pos:line="25" pos:column="19">strcasecmp<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name><name pos:line="25" pos:column="30">c<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">key<pos:position pos:line="25" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="38">"Password"<pos:position pos:line="25" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="50"/></condition><then pos:line="25" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="7">cf_util_get_string<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">c<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="29">&amp;<pos:position pos:line="26" pos:column="34"/></operator><name><name pos:line="26" pos:column="30">db<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">-&gt;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="34">password<pos:position pos:line="26" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><literal type="number" pos:line="27" pos:column="14">0<pos:position pos:line="27" pos:column="15"/></literal> <operator pos:line="27" pos:column="16">==<pos:position pos:line="27" pos:column="18"/></operator> <call><name pos:line="27" pos:column="19">strcasecmp<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name><name pos:line="27" pos:column="30">c<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">-&gt;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="33">key<pos:position pos:line="27" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="38">"Instance"<pos:position pos:line="27" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="50"/></condition><then pos:line="27" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="7">cf_util_get_string<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">c<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="29">&amp;<pos:position pos:line="28" pos:column="34"/></operator><name><name pos:line="28" pos:column="30">db<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">instance<pos:position pos:line="28" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><literal type="number" pos:line="29" pos:column="14">0<pos:position pos:line="29" pos:column="15"/></literal> <operator pos:line="29" pos:column="16">==<pos:position pos:line="29" pos:column="18"/></operator> <call><name pos:line="29" pos:column="19">strcasecmp<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name><name pos:line="29" pos:column="30">c<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">key<pos:position pos:line="29" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="38">"SSLMode"<pos:position pos:line="29" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="49"/></condition><then pos:line="29" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="7">cf_util_get_string<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">c<pos:position pos:line="30" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="29">&amp;<pos:position pos:line="30" pos:column="34"/></operator><name><name pos:line="30" pos:column="30">db<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">-&gt;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="34">sslmode<pos:position pos:line="30" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><literal type="number" pos:line="31" pos:column="14">0<pos:position pos:line="31" pos:column="15"/></literal> <operator pos:line="31" pos:column="16">==<pos:position pos:line="31" pos:column="18"/></operator> <call><name pos:line="31" pos:column="19">strcasecmp<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name><name pos:line="31" pos:column="30">c<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">key<pos:position pos:line="31" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="38">"KRBSrvName"<pos:position pos:line="31" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="52"/></condition><then pos:line="31" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="7">cf_util_get_string<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">c<pos:position pos:line="32" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="29">&amp;<pos:position pos:line="32" pos:column="34"/></operator><name><name pos:line="32" pos:column="30">db<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">-&gt;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="34">krbsrvname<pos:position pos:line="32" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if <condition pos:line="33" pos:column="13">(<expr><literal type="number" pos:line="33" pos:column="14">0<pos:position pos:line="33" pos:column="15"/></literal> <operator pos:line="33" pos:column="16">==<pos:position pos:line="33" pos:column="18"/></operator> <call><name pos:line="33" pos:column="19">strcasecmp<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name><name pos:line="33" pos:column="30">c<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">-&gt;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="33">key<pos:position pos:line="33" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="38">"Service"<pos:position pos:line="33" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="49"/></condition><then pos:line="33" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="7">cf_util_get_string<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">c<pos:position pos:line="34" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="29">&amp;<pos:position pos:line="34" pos:column="34"/></operator><name><name pos:line="34" pos:column="30">db<pos:position pos:line="34" pos:column="32"/></name><operator pos:line="34" pos:column="32">-&gt;<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="34">service<pos:position pos:line="34" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="35" pos:column="5">else <if pos:line="35" pos:column="10">if <condition pos:line="35" pos:column="13">(<expr><literal type="number" pos:line="35" pos:column="14">0<pos:position pos:line="35" pos:column="15"/></literal> <operator pos:line="35" pos:column="16">==<pos:position pos:line="35" pos:column="18"/></operator> <call><name pos:line="35" pos:column="19">strcasecmp<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name><name pos:line="35" pos:column="30">c<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">-&gt;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="33">key<pos:position pos:line="35" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="38">"Query"<pos:position pos:line="35" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="47"/></condition><then pos:line="35" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="7">udb_query_pick_from_list<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">c<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">queries<pos:position pos:line="36" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="44">queries_num<pos:position pos:line="36" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="57">&amp;<pos:position pos:line="36" pos:column="62"/></operator><name><name pos:line="36" pos:column="58">db<pos:position pos:line="36" pos:column="60"/></name><operator pos:line="36" pos:column="60">-&gt;<pos:position pos:line="36" pos:column="65"/></operator><name pos:line="36" pos:column="62">queries<pos:position pos:line="36" pos:column="69"/></name></name></expr></argument>,
                               <argument><expr><operator pos:line="37" pos:column="32">&amp;<pos:position pos:line="37" pos:column="37"/></operator><name><name pos:line="37" pos:column="33">db<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">-&gt;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="37">queries_num<pos:position pos:line="37" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="50"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><literal type="number" pos:line="38" pos:column="14">0<pos:position pos:line="38" pos:column="15"/></literal> <operator pos:line="38" pos:column="16">==<pos:position pos:line="38" pos:column="18"/></operator> <call><name pos:line="38" pos:column="19">strcasecmp<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name><name pos:line="38" pos:column="30">c<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">-&gt;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="33">key<pos:position pos:line="38" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="38">"Writer"<pos:position pos:line="38" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="48"/></condition><then pos:line="38" pos:column="48">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="7">config_add_writer<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><name pos:line="39" pos:column="25">c<pos:position pos:line="39" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="28">writers<pos:position pos:line="39" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="37">writers_num<pos:position pos:line="39" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="50">&amp;<pos:position pos:line="39" pos:column="55"/></operator><name><name pos:line="39" pos:column="51">db<pos:position pos:line="39" pos:column="53"/></name><operator pos:line="39" pos:column="53">-&gt;<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="55">writers<pos:position pos:line="39" pos:column="62"/></name></name></expr></argument>,
                        <argument><expr><operator pos:line="40" pos:column="25">&amp;<pos:position pos:line="40" pos:column="30"/></operator><name><name pos:line="40" pos:column="26">db<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">-&gt;<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="30">writers_num<pos:position pos:line="40" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><literal type="number" pos:line="41" pos:column="14">0<pos:position pos:line="41" pos:column="15"/></literal> <operator pos:line="41" pos:column="16">==<pos:position pos:line="41" pos:column="18"/></operator> <call><name pos:line="41" pos:column="19">strcasecmp<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name><name pos:line="41" pos:column="30">c<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">key<pos:position pos:line="41" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="38">"Interval"<pos:position pos:line="41" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="50"/></condition><then pos:line="41" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="7">cf_util_get_cdtime<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name pos:line="42" pos:column="26">c<pos:position pos:line="42" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="29">&amp;<pos:position pos:line="42" pos:column="34"/></operator><name><name pos:line="42" pos:column="30">db<pos:position pos:line="42" pos:column="32"/></name><operator pos:line="42" pos:column="32">-&gt;<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="34">interval<pos:position pos:line="42" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="44"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="43" pos:column="5">else <if pos:line="43" pos:column="10">if <condition pos:line="43" pos:column="13">(<expr><call><name pos:line="43" pos:column="14">strcasecmp<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><literal type="string" pos:line="43" pos:column="25">"CommitInterval"<pos:position pos:line="43" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="43">c<pos:position pos:line="43" pos:column="44"/></name><operator pos:line="43" pos:column="44">-&gt;<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="46">key<pos:position pos:line="43" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call> <operator pos:line="43" pos:column="51">==<pos:position pos:line="43" pos:column="53"/></operator> <literal type="number" pos:line="43" pos:column="54">0<pos:position pos:line="43" pos:column="55"/></literal></expr>)<pos:position pos:line="43" pos:column="56"/></condition><then pos:line="43" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="7">cf_util_get_cdtime<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">c<pos:position pos:line="44" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="29">&amp;<pos:position pos:line="44" pos:column="34"/></operator><name><name pos:line="44" pos:column="30">db<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">commit_interval<pos:position pos:line="44" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="45" pos:column="5">else <if pos:line="45" pos:column="10">if <condition pos:line="45" pos:column="13">(<expr><call><name pos:line="45" pos:column="14">strcasecmp<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><literal type="string" pos:line="45" pos:column="25">"ExpireDelay"<pos:position pos:line="45" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="40">c<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">-&gt;<pos:position pos:line="45" pos:column="46"/></operator><name pos:line="45" pos:column="43">key<pos:position pos:line="45" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call> <operator pos:line="45" pos:column="48">==<pos:position pos:line="45" pos:column="50"/></operator> <literal type="number" pos:line="45" pos:column="51">0<pos:position pos:line="45" pos:column="52"/></literal></expr>)<pos:position pos:line="45" pos:column="53"/></condition><then pos:line="45" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="7">cf_util_get_cdtime<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">c<pos:position pos:line="46" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="29">&amp;<pos:position pos:line="46" pos:column="34"/></operator><name><name pos:line="46" pos:column="30">db<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">-&gt;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="34">expire_delay<pos:position pos:line="46" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="48"/></expr_stmt></block></then></if></elseif>
    <else pos:line="47" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="7">log_warn<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><literal type="string" pos:line="48" pos:column="16">"Ignoring unknown config key \"%s\"."<pos:position pos:line="48" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="55">c<pos:position pos:line="48" pos:column="56"/></name><operator pos:line="48" pos:column="56">-&gt;<pos:position pos:line="48" pos:column="61"/></operator><name pos:line="48" pos:column="58">key<pos:position pos:line="48" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="63"/></expr_stmt></block></else></if>
  }<pos:position pos:line="49" pos:column="4"/></block></for>

  <comment type="block" pos:line="51" pos:column="3">/* If no `Query' options were given, add the default queries.. */</comment>
  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><operator pos:line="52" pos:column="7">(<pos:position pos:line="52" pos:column="8"/></operator><name><name pos:line="52" pos:column="8">db<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">-&gt;<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="12">queries_num<pos:position pos:line="52" pos:column="23"/></name></name> <operator pos:line="52" pos:column="24">==<pos:position pos:line="52" pos:column="26"/></operator> <literal type="number" pos:line="52" pos:column="27">0<pos:position pos:line="52" pos:column="28"/></literal><operator pos:line="52" pos:column="28">)<pos:position pos:line="52" pos:column="29"/></operator> <operator pos:line="52" pos:column="30">&amp;&amp;<pos:position pos:line="52" pos:column="40"/></operator> <operator pos:line="52" pos:column="33">(<pos:position pos:line="52" pos:column="34"/></operator><name><name pos:line="52" pos:column="34">db<pos:position pos:line="52" pos:column="36"/></name><operator pos:line="52" pos:column="36">-&gt;<pos:position pos:line="52" pos:column="41"/></operator><name pos:line="52" pos:column="38">writers_num<pos:position pos:line="52" pos:column="49"/></name></name> <operator pos:line="52" pos:column="50">==<pos:position pos:line="52" pos:column="52"/></operator> <literal type="number" pos:line="52" pos:column="53">0<pos:position pos:line="52" pos:column="54"/></literal><operator pos:line="52" pos:column="54">)<pos:position pos:line="52" pos:column="55"/></operator></expr>)<pos:position pos:line="52" pos:column="56"/></condition><then pos:line="52" pos:column="56"> <block pos:line="52" pos:column="57">{
    <for pos:line="53" pos:column="5">for <control pos:line="53" pos:column="9">(<init><decl><type><name pos:line="53" pos:column="10">int<pos:position pos:line="53" pos:column="13"/></name></type> <name pos:line="53" pos:column="14">i<pos:position pos:line="53" pos:column="15"/></name> <init pos:line="53" pos:column="16">= <expr><literal type="number" pos:line="53" pos:column="18">0<pos:position pos:line="53" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="53" pos:column="20"/></init> <condition><expr><name pos:line="53" pos:column="21">i<pos:position pos:line="53" pos:column="22"/></name> <operator pos:line="53" pos:column="23">&lt;<pos:position pos:line="53" pos:column="27"/></operator> <name pos:line="53" pos:column="25">def_queries_num<pos:position pos:line="53" pos:column="40"/></name></expr>;<pos:position pos:line="53" pos:column="41"/></condition> <incr><expr><name pos:line="53" pos:column="42">i<pos:position pos:line="53" pos:column="43"/></name><operator pos:line="53" pos:column="43">++<pos:position pos:line="53" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="53" pos:column="46"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="7">udb_query_pick_from_list_by_name<pos:position pos:line="54" pos:column="39"/></name><argument_list pos:line="54" pos:column="39">(<argument><expr><name><name pos:line="54" pos:column="40">def_queries<pos:position pos:line="54" pos:column="51"/></name><index pos:line="54" pos:column="51">[<expr><name pos:line="54" pos:column="52">i<pos:position pos:line="54" pos:column="53"/></name></expr>]<pos:position pos:line="54" pos:column="54"/></index></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="56">queries<pos:position pos:line="54" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="65">queries_num<pos:position pos:line="54" pos:column="76"/></name></expr></argument>,
                                       <argument><expr><operator pos:line="55" pos:column="40">&amp;<pos:position pos:line="55" pos:column="45"/></operator><name><name pos:line="55" pos:column="41">db<pos:position pos:line="55" pos:column="43"/></name><operator pos:line="55" pos:column="43">-&gt;<pos:position pos:line="55" pos:column="48"/></operator><name pos:line="55" pos:column="45">queries<pos:position pos:line="55" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="54">&amp;<pos:position pos:line="55" pos:column="59"/></operator><name><name pos:line="55" pos:column="55">db<pos:position pos:line="55" pos:column="57"/></name><operator pos:line="55" pos:column="57">-&gt;<pos:position pos:line="55" pos:column="62"/></operator><name pos:line="55" pos:column="59">queries_num<pos:position pos:line="55" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="72"/></expr_stmt></block></for>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>

  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><name><name pos:line="58" pos:column="7">db<pos:position pos:line="58" pos:column="9"/></name><operator pos:line="58" pos:column="9">-&gt;<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="11">queries_num<pos:position pos:line="58" pos:column="22"/></name></name> <operator pos:line="58" pos:column="23">&gt;<pos:position pos:line="58" pos:column="27"/></operator> <literal type="number" pos:line="58" pos:column="25">0<pos:position pos:line="58" pos:column="26"/></literal></expr>)<pos:position pos:line="58" pos:column="27"/></condition><then pos:line="58" pos:column="27"> <block pos:line="58" pos:column="28">{
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">db<pos:position pos:line="59" pos:column="7"/></name><operator pos:line="59" pos:column="7">-&gt;<pos:position pos:line="59" pos:column="12"/></operator><name pos:line="59" pos:column="9">q_prep_areas<pos:position pos:line="59" pos:column="21"/></name></name> <operator pos:line="59" pos:column="22">=<pos:position pos:line="59" pos:column="23"/></operator> <operator pos:line="59" pos:column="24">(<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="25">udb_query_preparation_area_t<pos:position pos:line="59" pos:column="53"/></name> <operator pos:line="59" pos:column="54">*<pos:position pos:line="59" pos:column="55"/></operator><operator pos:line="59" pos:column="55">*<pos:position pos:line="59" pos:column="56"/></operator><operator pos:line="59" pos:column="56">)<pos:position pos:line="59" pos:column="57"/></operator><call><name pos:line="59" pos:column="57">calloc<pos:position pos:line="59" pos:column="63"/></name><argument_list pos:line="59" pos:column="63">(
        <argument><expr><name><name pos:line="60" pos:column="9">db<pos:position pos:line="60" pos:column="11"/></name><operator pos:line="60" pos:column="11">-&gt;<pos:position pos:line="60" pos:column="16"/></operator><name pos:line="60" pos:column="13">queries_num<pos:position pos:line="60" pos:column="24"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="60" pos:column="26">sizeof<argument_list pos:line="60" pos:column="32">(<argument><expr><operator pos:line="60" pos:column="33">*<pos:position pos:line="60" pos:column="34"/></operator><name><name pos:line="60" pos:column="34">db<pos:position pos:line="60" pos:column="36"/></name><operator pos:line="60" pos:column="36">-&gt;<pos:position pos:line="60" pos:column="41"/></operator><name pos:line="60" pos:column="38">q_prep_areas<pos:position pos:line="60" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="60" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="53"/></expr_stmt>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name><name pos:line="62" pos:column="9">db<pos:position pos:line="62" pos:column="11"/></name><operator pos:line="62" pos:column="11">-&gt;<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="13">q_prep_areas<pos:position pos:line="62" pos:column="25"/></name></name> <operator pos:line="62" pos:column="26">==<pos:position pos:line="62" pos:column="28"/></operator> <name pos:line="62" pos:column="29">NULL<pos:position pos:line="62" pos:column="33"/></name></expr>)<pos:position pos:line="62" pos:column="34"/></condition><then pos:line="62" pos:column="34"> <block pos:line="62" pos:column="35">{
      <expr_stmt><expr><call><name pos:line="63" pos:column="7">log_err<pos:position pos:line="63" pos:column="14"/></name><argument_list pos:line="63" pos:column="14">(<argument><expr><literal type="string" pos:line="63" pos:column="15">"Out of memory."<pos:position pos:line="63" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">c_psql_database_delete<pos:position pos:line="64" pos:column="29"/></name><argument_list pos:line="64" pos:column="29">(<argument><expr><name pos:line="64" pos:column="30">db<pos:position pos:line="64" pos:column="32"/></name></expr></argument>)<pos:position pos:line="64" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="34"/></expr_stmt>
      <return pos:line="65" pos:column="7">return <expr><operator pos:line="65" pos:column="14">-<pos:position pos:line="65" pos:column="15"/></operator><literal type="number" pos:line="65" pos:column="15">1<pos:position pos:line="65" pos:column="16"/></literal></expr>;<pos:position pos:line="65" pos:column="17"/></return>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if>

  <for pos:line="69" pos:column="3">for <control pos:line="69" pos:column="7">(<init><decl><type><name pos:line="69" pos:column="8">int<pos:position pos:line="69" pos:column="11"/></name></type> <name pos:line="69" pos:column="12">i<pos:position pos:line="69" pos:column="13"/></name> <init pos:line="69" pos:column="14">= <expr><literal type="number" pos:line="69" pos:column="16">0<pos:position pos:line="69" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="69" pos:column="18"/></init> <condition><expr><operator pos:line="69" pos:column="19">(<pos:position pos:line="69" pos:column="20"/></operator><name pos:line="69" pos:column="20">size_t<pos:position pos:line="69" pos:column="26"/></name><operator pos:line="69" pos:column="26">)<pos:position pos:line="69" pos:column="27"/></operator><name pos:line="69" pos:column="27">i<pos:position pos:line="69" pos:column="28"/></name> <operator pos:line="69" pos:column="29">&lt;<pos:position pos:line="69" pos:column="33"/></operator> <name><name pos:line="69" pos:column="31">db<pos:position pos:line="69" pos:column="33"/></name><operator pos:line="69" pos:column="33">-&gt;<pos:position pos:line="69" pos:column="38"/></operator><name pos:line="69" pos:column="35">queries_num<pos:position pos:line="69" pos:column="46"/></name></name></expr>;<pos:position pos:line="69" pos:column="47"/></condition> <incr><expr><operator pos:line="69" pos:column="48">++<pos:position pos:line="69" pos:column="50"/></operator><name pos:line="69" pos:column="50">i<pos:position pos:line="69" pos:column="51"/></name></expr></incr>)<pos:position pos:line="69" pos:column="52"/></control> <block pos:line="69" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="70" pos:column="5">c_psql_user_data_t<pos:position pos:line="70" pos:column="23"/></name> <modifier pos:line="70" pos:column="24">*<pos:position pos:line="70" pos:column="25"/></modifier></type><name pos:line="70" pos:column="25">data<pos:position pos:line="70" pos:column="29"/></name></decl>;<pos:position pos:line="70" pos:column="30"/></decl_stmt>
    <expr_stmt><expr><name pos:line="71" pos:column="5">data<pos:position pos:line="71" pos:column="9"/></name> <operator pos:line="71" pos:column="10">=<pos:position pos:line="71" pos:column="11"/></operator> <call><name pos:line="71" pos:column="12">udb_query_get_user_data<pos:position pos:line="71" pos:column="35"/></name><argument_list pos:line="71" pos:column="35">(<argument><expr><name><name pos:line="71" pos:column="36">db<pos:position pos:line="71" pos:column="38"/></name><operator pos:line="71" pos:column="38">-&gt;<pos:position pos:line="71" pos:column="43"/></operator><name pos:line="71" pos:column="40">queries<pos:position pos:line="71" pos:column="47"/></name><index pos:line="71" pos:column="47">[<expr><name pos:line="71" pos:column="48">i<pos:position pos:line="71" pos:column="49"/></name></expr>]<pos:position pos:line="71" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="52"/></expr_stmt>
    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><operator pos:line="72" pos:column="9">(<pos:position pos:line="72" pos:column="10"/></operator><name pos:line="72" pos:column="10">data<pos:position pos:line="72" pos:column="14"/></name> <operator pos:line="72" pos:column="15">!=<pos:position pos:line="72" pos:column="17"/></operator> <name pos:line="72" pos:column="18">NULL<pos:position pos:line="72" pos:column="22"/></name><operator pos:line="72" pos:column="22">)<pos:position pos:line="72" pos:column="23"/></operator> <operator pos:line="72" pos:column="24">&amp;&amp;<pos:position pos:line="72" pos:column="34"/></operator> <operator pos:line="72" pos:column="27">(<pos:position pos:line="72" pos:column="28"/></operator><name><name pos:line="72" pos:column="28">data<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">-&gt;<pos:position pos:line="72" pos:column="37"/></operator><name pos:line="72" pos:column="34">params_num<pos:position pos:line="72" pos:column="44"/></name></name> <operator pos:line="72" pos:column="45">&gt;<pos:position pos:line="72" pos:column="49"/></operator> <name><name pos:line="72" pos:column="47">db<pos:position pos:line="72" pos:column="49"/></name><operator pos:line="72" pos:column="49">-&gt;<pos:position pos:line="72" pos:column="54"/></operator><name pos:line="72" pos:column="51">max_params_num<pos:position pos:line="72" pos:column="65"/></name></name><operator pos:line="72" pos:column="65">)<pos:position pos:line="72" pos:column="66"/></operator></expr>)<pos:position pos:line="72" pos:column="67"/></condition><then pos:line="72" pos:column="67">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="73" pos:column="7">db<pos:position pos:line="73" pos:column="9"/></name><operator pos:line="73" pos:column="9">-&gt;<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="11">max_params_num<pos:position pos:line="73" pos:column="25"/></name></name> <operator pos:line="73" pos:column="26">=<pos:position pos:line="73" pos:column="27"/></operator> <name><name pos:line="73" pos:column="28">data<pos:position pos:line="73" pos:column="32"/></name><operator pos:line="73" pos:column="32">-&gt;<pos:position pos:line="73" pos:column="37"/></operator><name pos:line="73" pos:column="34">params_num<pos:position pos:line="73" pos:column="44"/></name></name></expr>;<pos:position pos:line="73" pos:column="45"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="75" pos:column="5">db<pos:position pos:line="75" pos:column="7"/></name><operator pos:line="75" pos:column="7">-&gt;<pos:position pos:line="75" pos:column="12"/></operator><name pos:line="75" pos:column="9">q_prep_areas<pos:position pos:line="75" pos:column="21"/></name><index pos:line="75" pos:column="21">[<expr><name pos:line="75" pos:column="22">i<pos:position pos:line="75" pos:column="23"/></name></expr>]<pos:position pos:line="75" pos:column="24"/></index></name> <operator pos:line="75" pos:column="25">=<pos:position pos:line="75" pos:column="26"/></operator> <call><name pos:line="75" pos:column="27">udb_query_allocate_preparation_area<pos:position pos:line="75" pos:column="62"/></name><argument_list pos:line="75" pos:column="62">(<argument><expr><name><name pos:line="75" pos:column="63">db<pos:position pos:line="75" pos:column="65"/></name><operator pos:line="75" pos:column="65">-&gt;<pos:position pos:line="75" pos:column="70"/></operator><name pos:line="75" pos:column="67">queries<pos:position pos:line="75" pos:column="74"/></name><index pos:line="75" pos:column="74">[<expr><name pos:line="75" pos:column="75">i<pos:position pos:line="75" pos:column="76"/></name></expr>]<pos:position pos:line="75" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="75" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="79"/></expr_stmt>

    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><name><name pos:line="77" pos:column="9">db<pos:position pos:line="77" pos:column="11"/></name><operator pos:line="77" pos:column="11">-&gt;<pos:position pos:line="77" pos:column="16"/></operator><name pos:line="77" pos:column="13">q_prep_areas<pos:position pos:line="77" pos:column="25"/></name><index pos:line="77" pos:column="25">[<expr><name pos:line="77" pos:column="26">i<pos:position pos:line="77" pos:column="27"/></name></expr>]<pos:position pos:line="77" pos:column="28"/></index></name> <operator pos:line="77" pos:column="29">==<pos:position pos:line="77" pos:column="31"/></operator> <name pos:line="77" pos:column="32">NULL<pos:position pos:line="77" pos:column="36"/></name></expr>)<pos:position pos:line="77" pos:column="37"/></condition><then pos:line="77" pos:column="37"> <block pos:line="77" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">log_err<pos:position pos:line="78" pos:column="14"/></name><argument_list pos:line="78" pos:column="14">(<argument><expr><literal type="string" pos:line="78" pos:column="15">"Out of memory."<pos:position pos:line="78" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="79" pos:column="7">c_psql_database_delete<pos:position pos:line="79" pos:column="29"/></name><argument_list pos:line="79" pos:column="29">(<argument><expr><name pos:line="79" pos:column="30">db<pos:position pos:line="79" pos:column="32"/></name></expr></argument>)<pos:position pos:line="79" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="34"/></expr_stmt>
      <return pos:line="80" pos:column="7">return <expr><operator pos:line="80" pos:column="14">-<pos:position pos:line="80" pos:column="15"/></operator><literal type="number" pos:line="80" pos:column="15">1<pos:position pos:line="80" pos:column="16"/></literal></expr>;<pos:position pos:line="80" pos:column="17"/></return>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>
  }<pos:position pos:line="82" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="84" pos:column="3">ssnprintf<pos:position pos:line="84" pos:column="12"/></name><argument_list pos:line="84" pos:column="12">(<argument><expr><name pos:line="84" pos:column="13">cb_name<pos:position pos:line="84" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="22">sizeof<argument_list pos:line="84" pos:column="28">(<argument><expr><name pos:line="84" pos:column="29">cb_name<pos:position pos:line="84" pos:column="36"/></name></expr></argument>)<pos:position pos:line="84" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="39">"postgresql-%s"<pos:position pos:line="84" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="56">db<pos:position pos:line="84" pos:column="58"/></name><operator pos:line="84" pos:column="58">-&gt;<pos:position pos:line="84" pos:column="63"/></operator><name pos:line="84" pos:column="60">instance<pos:position pos:line="84" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="70"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="86" pos:column="3">user_data_t<pos:position pos:line="86" pos:column="14"/></name></type> <name pos:line="86" pos:column="15">ud<pos:position pos:line="86" pos:column="17"/></name> <init pos:line="86" pos:column="18">= <expr><block pos:line="86" pos:column="20">{<expr><operator pos:line="86" pos:column="21">.<pos:position pos:line="86" pos:column="22"/></operator><name pos:line="86" pos:column="22">data<pos:position pos:line="86" pos:column="26"/></name> <operator pos:line="86" pos:column="27">=<pos:position pos:line="86" pos:column="28"/></operator> <name pos:line="86" pos:column="29">db<pos:position pos:line="86" pos:column="31"/></name></expr>, <expr><operator pos:line="86" pos:column="33">.<pos:position pos:line="86" pos:column="34"/></operator><name pos:line="86" pos:column="34">free_func<pos:position pos:line="86" pos:column="43"/></name> <operator pos:line="86" pos:column="44">=<pos:position pos:line="86" pos:column="45"/></operator> <name pos:line="86" pos:column="46">c_psql_database_delete<pos:position pos:line="86" pos:column="68"/></name></expr>}<pos:position pos:line="86" pos:column="69"/></block></expr></init></decl>;<pos:position pos:line="86" pos:column="70"/></decl_stmt>

  <if pos:line="88" pos:column="3">if <condition pos:line="88" pos:column="6">(<expr><name><name pos:line="88" pos:column="7">db<pos:position pos:line="88" pos:column="9"/></name><operator pos:line="88" pos:column="9">-&gt;<pos:position pos:line="88" pos:column="14"/></operator><name pos:line="88" pos:column="11">queries_num<pos:position pos:line="88" pos:column="22"/></name></name> <operator pos:line="88" pos:column="23">&gt;<pos:position pos:line="88" pos:column="27"/></operator> <literal type="number" pos:line="88" pos:column="25">0<pos:position pos:line="88" pos:column="26"/></literal></expr>)<pos:position pos:line="88" pos:column="27"/></condition><then pos:line="88" pos:column="27"> <block pos:line="88" pos:column="28">{
    <expr_stmt><expr><operator pos:line="89" pos:column="5">++<pos:position pos:line="89" pos:column="7"/></operator><name><name pos:line="89" pos:column="7">db<pos:position pos:line="89" pos:column="9"/></name><operator pos:line="89" pos:column="9">-&gt;<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="11">ref_cnt<pos:position pos:line="89" pos:column="18"/></name></name></expr>;<pos:position pos:line="89" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">plugin_register_complex_read<pos:position pos:line="90" pos:column="33"/></name><argument_list pos:line="90" pos:column="33">(<argument><expr><literal type="string" pos:line="90" pos:column="34">"postgresql"<pos:position pos:line="90" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="48">cb_name<pos:position pos:line="90" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="57">c_psql_read<pos:position pos:line="90" pos:column="68"/></name></expr></argument>,
                                 <comment type="block" pos:line="91" pos:column="34">/* interval = */</comment> <argument><expr><name><name pos:line="91" pos:column="51">db<pos:position pos:line="91" pos:column="53"/></name><operator pos:line="91" pos:column="53">-&gt;<pos:position pos:line="91" pos:column="58"/></operator><name pos:line="91" pos:column="55">interval<pos:position pos:line="91" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="65">&amp;<pos:position pos:line="91" pos:column="70"/></operator><name pos:line="91" pos:column="66">ud<pos:position pos:line="91" pos:column="68"/></name></expr></argument>)<pos:position pos:line="91" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="70"/></expr_stmt>
  }<pos:position pos:line="92" pos:column="4"/></block></then></if>
  <if pos:line="93" pos:column="3">if <condition pos:line="93" pos:column="6">(<expr><name><name pos:line="93" pos:column="7">db<pos:position pos:line="93" pos:column="9"/></name><operator pos:line="93" pos:column="9">-&gt;<pos:position pos:line="93" pos:column="14"/></operator><name pos:line="93" pos:column="11">writers_num<pos:position pos:line="93" pos:column="22"/></name></name> <operator pos:line="93" pos:column="23">&gt;<pos:position pos:line="93" pos:column="27"/></operator> <literal type="number" pos:line="93" pos:column="25">0<pos:position pos:line="93" pos:column="26"/></literal></expr>)<pos:position pos:line="93" pos:column="27"/></condition><then pos:line="93" pos:column="27"> <block pos:line="93" pos:column="28">{
    <expr_stmt><expr><operator pos:line="94" pos:column="5">++<pos:position pos:line="94" pos:column="7"/></operator><name><name pos:line="94" pos:column="7">db<pos:position pos:line="94" pos:column="9"/></name><operator pos:line="94" pos:column="9">-&gt;<pos:position pos:line="94" pos:column="14"/></operator><name pos:line="94" pos:column="11">ref_cnt<pos:position pos:line="94" pos:column="18"/></name></name></expr>;<pos:position pos:line="94" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">plugin_register_write<pos:position pos:line="95" pos:column="26"/></name><argument_list pos:line="95" pos:column="26">(<argument><expr><name pos:line="95" pos:column="27">cb_name<pos:position pos:line="95" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="36">c_psql_write<pos:position pos:line="95" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="50">&amp;<pos:position pos:line="95" pos:column="55"/></operator><name pos:line="95" pos:column="51">ud<pos:position pos:line="95" pos:column="53"/></name></expr></argument>)<pos:position pos:line="95" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="55"/></expr_stmt>

    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><operator pos:line="97" pos:column="9">!<pos:position pos:line="97" pos:column="10"/></operator><name pos:line="97" pos:column="10">have_flush<pos:position pos:line="97" pos:column="20"/></name></expr>)<pos:position pos:line="97" pos:column="21"/></condition><then pos:line="97" pos:column="21"> <block pos:line="97" pos:column="22">{
      <comment type="block" pos:line="98" pos:column="7">/* flush all */</comment>
      <expr_stmt><expr><call><name pos:line="99" pos:column="7">plugin_register_flush<pos:position pos:line="99" pos:column="28"/></name><argument_list pos:line="99" pos:column="28">(<argument><expr><literal type="string" pos:line="99" pos:column="29">"postgresql"<pos:position pos:line="99" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="43">c_psql_flush<pos:position pos:line="99" pos:column="55"/></name></expr></argument>, <comment type="block" pos:line="99" pos:column="57">/* user data = */</comment> <argument><expr><name pos:line="99" pos:column="75">NULL<pos:position pos:line="99" pos:column="79"/></name></expr></argument>)<pos:position pos:line="99" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="81"/></expr_stmt>
      <expr_stmt><expr><name pos:line="100" pos:column="7">have_flush<pos:position pos:line="100" pos:column="17"/></name> <operator pos:line="100" pos:column="18">=<pos:position pos:line="100" pos:column="19"/></operator> <literal type="number" pos:line="100" pos:column="20">1<pos:position pos:line="100" pos:column="21"/></literal></expr>;<pos:position pos:line="100" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="103" pos:column="5">/* flush this connection only */</comment>
    <expr_stmt><expr><operator pos:line="104" pos:column="5">++<pos:position pos:line="104" pos:column="7"/></operator><name><name pos:line="104" pos:column="7">db<pos:position pos:line="104" pos:column="9"/></name><operator pos:line="104" pos:column="9">-&gt;<pos:position pos:line="104" pos:column="14"/></operator><name pos:line="104" pos:column="11">ref_cnt<pos:position pos:line="104" pos:column="18"/></name></name></expr>;<pos:position pos:line="104" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="105" pos:column="5">plugin_register_flush<pos:position pos:line="105" pos:column="26"/></name><argument_list pos:line="105" pos:column="26">(<argument><expr><name pos:line="105" pos:column="27">cb_name<pos:position pos:line="105" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="36">c_psql_flush<pos:position pos:line="105" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="105" pos:column="50">&amp;<pos:position pos:line="105" pos:column="55"/></operator><name pos:line="105" pos:column="51">ud<pos:position pos:line="105" pos:column="53"/></name></expr></argument>)<pos:position pos:line="105" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="106" pos:column="4"/></block></then> <elseif pos:line="106" pos:column="5">else <if pos:line="106" pos:column="10">if <condition pos:line="106" pos:column="13">(<expr><name><name pos:line="106" pos:column="14">db<pos:position pos:line="106" pos:column="16"/></name><operator pos:line="106" pos:column="16">-&gt;<pos:position pos:line="106" pos:column="21"/></operator><name pos:line="106" pos:column="18">commit_interval<pos:position pos:line="106" pos:column="33"/></name></name> <operator pos:line="106" pos:column="34">&gt;<pos:position pos:line="106" pos:column="38"/></operator> <literal type="number" pos:line="106" pos:column="36">0<pos:position pos:line="106" pos:column="37"/></literal></expr>)<pos:position pos:line="106" pos:column="38"/></condition><then pos:line="106" pos:column="38"> <block pos:line="106" pos:column="39">{
    <expr_stmt><expr><call><name pos:line="107" pos:column="5">log_warn<pos:position pos:line="107" pos:column="13"/></name><argument_list pos:line="107" pos:column="13">(<argument><expr><literal type="string" pos:line="107" pos:column="14">"Database '%s': You do not have any writers assigned to "<pos:position pos:line="107" pos:column="71"/></literal>
             <literal type="string" pos:line="108" pos:column="14">"this database connection. Setting 'CommitInterval' does "<pos:position pos:line="108" pos:column="72"/></literal>
             <literal type="string" pos:line="109" pos:column="14">"not have any effect."<pos:position pos:line="109" pos:column="36"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="110" pos:column="14">db<pos:position pos:line="110" pos:column="16"/></name><operator pos:line="110" pos:column="16">-&gt;<pos:position pos:line="110" pos:column="21"/></operator><name pos:line="110" pos:column="18">database<pos:position pos:line="110" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="111" pos:column="4"/></block></then></if></elseif></if>
  <return pos:line="112" pos:column="3">return <expr><literal type="number" pos:line="112" pos:column="10">0<pos:position pos:line="112" pos:column="11"/></literal></expr>;<pos:position pos:line="112" pos:column="12"/></return>
}<pos:position pos:line="113" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1188_collectd-4.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">TC_DELETE_CHAIN<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">IPT_CHAINLABEL<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">chain<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">TC_HANDLE_T<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">handle<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">references<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">chain_head<pos:position pos:line="5" pos:column="26"/></name></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type><name pos:line="5" pos:column="28">c<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">iptc_fn<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">TC_DELETE_CHAIN<pos:position pos:line="7" pos:column="34"/></name></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><operator pos:line="9" pos:column="14">(<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">c<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <call><name pos:line="9" pos:column="19">iptcc_find_label<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">chain<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="43">*<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="44">handle<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call><operator pos:line="9" pos:column="51">)<pos:position pos:line="9" pos:column="52"/></operator></expr>)<pos:position pos:line="9" pos:column="53"/></condition><then pos:line="9" pos:column="53"> <block pos:line="9" pos:column="54">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">DEBUGP<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><literal type="string" pos:line="10" pos:column="24">"cannot find chain `%s'\n"<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">chain<pos:position pos:line="10" pos:column="57"/></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="11" pos:column="17">errno<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">ENOENT<pos:position pos:line="11" pos:column="31"/></name></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">TC_BUILTIN<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">chain<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">handle<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="40"/></condition><then pos:line="15" pos:column="40"> <block pos:line="15" pos:column="41">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">DEBUGP<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="string" pos:line="16" pos:column="24">"cannot remove builtin chain `%s'\n"<pos:position pos:line="16" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="62">chain<pos:position pos:line="16" pos:column="67"/></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">errno<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">EINVAL<pos:position pos:line="17" pos:column="31"/></name></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">TC_GET_REFERENCES<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><operator pos:line="21" pos:column="32">&amp;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="33">references<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="45">chain<pos:position pos:line="21" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="52">handle<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="60"/></condition><then pos:line="21" pos:column="60"> <block pos:line="21" pos:column="61">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">DEBUGP<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><literal type="string" pos:line="22" pos:column="24">"cannot get references on chain `%s'\n"<pos:position pos:line="22" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="65">chain<pos:position pos:line="22" pos:column="70"/></name></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="72"/></expr_stmt>
		<return pos:line="23" pos:column="17">return <expr><literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">references<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">&gt;<pos:position pos:line="26" pos:column="28"/></operator> <literal type="number" pos:line="26" pos:column="26">0<pos:position pos:line="26" pos:column="27"/></literal></expr>)<pos:position pos:line="26" pos:column="28"/></condition><then pos:line="26" pos:column="28"> <block pos:line="26" pos:column="29">{
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">DEBUGP<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="string" pos:line="27" pos:column="24">"chain `%s' still has references\n"<pos:position pos:line="27" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="61">chain<pos:position pos:line="27" pos:column="66"/></name></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">errno<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <name pos:line="28" pos:column="25">EMLINK<pos:position pos:line="28" pos:column="31"/></name></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>
		<return pos:line="29" pos:column="17">return <expr><literal type="number" pos:line="29" pos:column="24">0<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">c<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">num_rules<pos:position pos:line="32" pos:column="25"/></name></name></expr>)<pos:position pos:line="32" pos:column="26"/></condition><then pos:line="32" pos:column="26"> <block pos:line="32" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">DEBUGP<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><literal type="string" pos:line="33" pos:column="24">"chain `%s' is not empty\n"<pos:position pos:line="33" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="53">chain<pos:position pos:line="33" pos:column="58"/></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">errno<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <name pos:line="34" pos:column="25">ENOTEMPTY<pos:position pos:line="34" pos:column="34"/></name></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt>
		<return pos:line="35" pos:column="17">return <expr><literal type="number" pos:line="35" pos:column="24">0<pos:position pos:line="35" pos:column="25"/></literal></expr>;<pos:position pos:line="35" pos:column="26"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="38" pos:column="9">/* If we are about to delete the chain that is the current
	 * iterator, move chain iterator forward. */</comment>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">c<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">==<pos:position pos:line="40" pos:column="17"/></operator> <name><operator pos:line="40" pos:column="18">(<pos:position pos:line="40" pos:column="19"/></operator><operator pos:line="40" pos:column="19">*<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">handle<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">)<pos:position pos:line="40" pos:column="27"/></operator><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">chain_iterator_cur<pos:position pos:line="40" pos:column="47"/></name></name></expr>)<pos:position pos:line="40" pos:column="48"/></condition><then pos:line="40" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="17">iptcc_chain_iterator_advance<pos:position pos:line="41" pos:column="45"/></name><argument_list pos:line="41" pos:column="45">(<argument><expr><operator pos:line="41" pos:column="46">*<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="47">handle<pos:position pos:line="41" pos:column="53"/></name></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="55"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><operator pos:line="43" pos:column="9">(<pos:position pos:line="43" pos:column="10"/></operator><operator pos:line="43" pos:column="10">*<pos:position pos:line="43" pos:column="11"/></operator><name pos:line="43" pos:column="11">handle<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">)<pos:position pos:line="43" pos:column="18"/></operator><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">num_chains<pos:position pos:line="43" pos:column="30"/></name></name><operator pos:line="43" pos:column="30">--<pos:position pos:line="43" pos:column="32"/></operator></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt> <comment type="block" pos:line="43" pos:column="34">/* One user defined chain deleted */</comment>

	<comment type="line" pos:line="45" pos:column="9">//list_del(&amp;c-&gt;list); /* Done in iptcc_chain_index_delete_chain() */</comment>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">iptcc_chain_index_delete_chain<pos:position pos:line="46" pos:column="39"/></name><argument_list pos:line="46" pos:column="39">(<argument><expr><name pos:line="46" pos:column="40">c<pos:position pos:line="46" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="43">*<pos:position pos:line="46" pos:column="44"/></operator><name pos:line="46" pos:column="44">handle<pos:position pos:line="46" pos:column="50"/></name></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">free<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">(<argument><expr><name pos:line="47" pos:column="14">c<pos:position pos:line="47" pos:column="15"/></name></expr></argument>)<pos:position pos:line="47" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="17"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="49" pos:column="9">DEBUGP<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><literal type="string" pos:line="49" pos:column="16">"chain `%s' deleted\n"<pos:position pos:line="49" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="40">chain<pos:position pos:line="49" pos:column="45"/></name></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="51" pos:column="9">set_changed<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">(<argument><expr><operator pos:line="51" pos:column="21">*<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="22">handle<pos:position pos:line="51" pos:column="28"/></name></expr></argument>)<pos:position pos:line="51" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="30"/></expr_stmt>

	<return pos:line="53" pos:column="9">return <expr><literal type="number" pos:line="53" pos:column="16">1<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

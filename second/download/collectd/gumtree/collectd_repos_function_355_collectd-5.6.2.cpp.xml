<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_355_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">camqp_connect<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">camqp_config_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">conf<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list> <comment type="block" pos:line="1" pos:column="48">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">time_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">last_connect_time<pos:position pos:line="3" pos:column="34"/></name> <init pos:line="3" pos:column="35">= <expr><literal type="number" pos:line="3" pos:column="37">0<pos:position pos:line="3" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">amqp_rpc_reply_t<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">reply<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">HAVE_AMQP_TCP_SOCKET<pos:position pos:line="7" pos:column="28"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">amqp_socket_t<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">socket<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
<cpp:else pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">else<pos:position pos:line="9" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">sockfd<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name><name pos:line="13" pos:column="7">conf<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">connection<pos:position pos:line="13" pos:column="23"/></name></name> <operator pos:line="13" pos:column="24">!=<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">NULL<pos:position pos:line="13" pos:column="31"/></name></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal><operator pos:line="14" pos:column="14">)<pos:position pos:line="14" pos:column="15"/></operator></expr>;<pos:position pos:line="14" pos:column="16"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="16" pos:column="3">time_t<pos:position pos:line="16" pos:column="9"/></name></type> <name pos:line="16" pos:column="10">now<pos:position pos:line="16" pos:column="13"/></name> <init pos:line="16" pos:column="14">= <expr><call><name pos:line="16" pos:column="16">time<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">NULL<pos:position pos:line="16" pos:column="25"/></name></expr></argument>)<pos:position pos:line="16" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="27"/></decl_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">now<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">&lt;<pos:position pos:line="17" pos:column="15"/></operator> <operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">last_connect_time<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">+<pos:position pos:line="17" pos:column="33"/></operator> <name><name pos:line="17" pos:column="34">conf<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">-&gt;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="40">connection_retry_delay<pos:position pos:line="17" pos:column="62"/></name></name><operator pos:line="17" pos:column="62">)<pos:position pos:line="17" pos:column="63"/></operator></expr>)<pos:position pos:line="17" pos:column="64"/></condition><then pos:line="17" pos:column="64"> <block pos:line="17" pos:column="65">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">DEBUG<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><literal type="string" pos:line="18" pos:column="11">"amqp plugin: skipping connection retry, "<pos:position pos:line="18" pos:column="53"/></literal>
          <literal type="string" pos:line="19" pos:column="11">"ConnectionRetryDelay: %d"<pos:position pos:line="19" pos:column="37"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="20" pos:column="11">conf<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">connection_retry_delay<pos:position pos:line="20" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><literal type="number" pos:line="21" pos:column="13">1<pos:position pos:line="21" pos:column="14"/></literal><operator pos:line="21" pos:column="14">)<pos:position pos:line="21" pos:column="15"/></operator></expr>;<pos:position pos:line="21" pos:column="16"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then> <else pos:line="22" pos:column="5">else <block pos:line="22" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">DEBUG<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><literal type="string" pos:line="23" pos:column="11">"amqp plugin: retrying connection"<pos:position pos:line="23" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">last_connect_time<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <name pos:line="24" pos:column="25">now<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name><name pos:line="27" pos:column="3">conf<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">connection<pos:position pos:line="27" pos:column="19"/></name></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <call><name pos:line="27" pos:column="22">amqp_new_connection<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">()<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name><name pos:line="28" pos:column="7">conf<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">connection<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">==<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">NULL<pos:position pos:line="28" pos:column="31"/></name></expr>)<pos:position pos:line="28" pos:column="32"/></condition><then pos:line="28" pos:column="32"> <block pos:line="28" pos:column="33">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">ERROR<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><literal type="string" pos:line="29" pos:column="11">"amqp plugin: amqp_new_connection failed."<pos:position pos:line="29" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">ENOMEM<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">)<pos:position pos:line="30" pos:column="20"/></operator></expr>;<pos:position pos:line="30" pos:column="21"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifdef<pos:position pos:line="33" pos:column="7"/></cpp:directive> <name pos:line="33" pos:column="8">HAVE_AMQP_TCP_SOCKET<pos:position pos:line="33" pos:column="28"/></name></cpp:ifdef>
<cpp:define pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">define<pos:position pos:line="34" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="34" pos:column="9">CLOSE_SOCKET<pos:position pos:line="34" pos:column="21"/></name><parameter_list pos:line="34" pos:column="21">()<pos:position pos:line="34" pos:column="23"/></parameter_list></cpp:macro></cpp:define> <comment type="block" pos:line="34" pos:column="24">/* amqp_destroy_connection() closes the socket for us   \
                          */</comment>
  <comment type="block" pos:line="36" pos:column="3">/* TODO: add support for SSL using amqp_ssl_socket_new
   *       and related functions */</comment>
  <expr_stmt><expr><name pos:line="38" pos:column="3">socket<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <call><name pos:line="38" pos:column="12">amqp_tcp_socket_new<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name><name pos:line="38" pos:column="32">conf<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-&gt;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="38">connection<pos:position pos:line="38" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><operator pos:line="39" pos:column="7">!<pos:position pos:line="39" pos:column="8"/></operator><name pos:line="39" pos:column="8">socket<pos:position pos:line="39" pos:column="14"/></name></expr>)<pos:position pos:line="39" pos:column="15"/></condition><then pos:line="39" pos:column="15"> <block pos:line="39" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">ERROR<pos:position pos:line="40" pos:column="10"/></name><argument_list pos:line="40" pos:column="10">(<argument><expr><literal type="string" pos:line="40" pos:column="11">"amqp plugin: amqp_tcp_socket_new failed."<pos:position pos:line="40" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">amqp_destroy_connection<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name><name pos:line="41" pos:column="29">conf<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">-&gt;<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="35">connection<pos:position pos:line="41" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">conf<pos:position pos:line="42" pos:column="9"/></name><operator pos:line="42" pos:column="9">-&gt;<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="11">connection<pos:position pos:line="42" pos:column="21"/></name></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="24">NULL<pos:position pos:line="42" pos:column="28"/></name></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>
    <return pos:line="43" pos:column="5">return <expr><operator pos:line="43" pos:column="12">(<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="13">ENOMEM<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">)<pos:position pos:line="43" pos:column="20"/></operator></expr>;<pos:position pos:line="43" pos:column="21"/></return>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="46" pos:column="3">status<pos:position pos:line="46" pos:column="9"/></name> <operator pos:line="46" pos:column="10">=<pos:position pos:line="46" pos:column="11"/></operator> <call><name pos:line="46" pos:column="12">amqp_socket_open<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><name pos:line="46" pos:column="29">socket<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="37">CONF<pos:position pos:line="46" pos:column="41"/></name><argument_list pos:line="46" pos:column="41">(<argument><expr><name pos:line="46" pos:column="42">conf<pos:position pos:line="46" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="48">host<pos:position pos:line="46" pos:column="52"/></name></expr></argument>)<pos:position pos:line="46" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="55">conf<pos:position pos:line="46" pos:column="59"/></name><operator pos:line="46" pos:column="59">-&gt;<pos:position pos:line="46" pos:column="64"/></operator><name pos:line="46" pos:column="61">port<pos:position pos:line="46" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="67"/></expr_stmt>
  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name pos:line="47" pos:column="7">status<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">&lt;<pos:position pos:line="47" pos:column="18"/></operator> <literal type="number" pos:line="47" pos:column="16">0<pos:position pos:line="47" pos:column="17"/></literal></expr>)<pos:position pos:line="47" pos:column="18"/></condition><then pos:line="47" pos:column="18"> <block pos:line="47" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="48" pos:column="5">char<pos:position pos:line="48" pos:column="9"/></name></type> <name><name pos:line="48" pos:column="10">errbuf<pos:position pos:line="48" pos:column="16"/></name><index pos:line="48" pos:column="16">[<expr><literal type="number" pos:line="48" pos:column="17">1024<pos:position pos:line="48" pos:column="21"/></literal></expr>]<pos:position pos:line="48" pos:column="22"/></index></name></decl>;<pos:position pos:line="48" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">status<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">*=<pos:position pos:line="49" pos:column="14"/></operator> <operator pos:line="49" pos:column="15">-<pos:position pos:line="49" pos:column="16"/></operator><literal type="number" pos:line="49" pos:column="16">1<pos:position pos:line="49" pos:column="17"/></literal></expr>;<pos:position pos:line="49" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">ERROR<pos:position pos:line="50" pos:column="10"/></name><argument_list pos:line="50" pos:column="10">(<argument><expr><literal type="string" pos:line="50" pos:column="11">"amqp plugin: amqp_socket_open failed: %s"<pos:position pos:line="50" pos:column="53"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="51" pos:column="11">sstrerror<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">(<argument><expr><name pos:line="51" pos:column="21">status<pos:position pos:line="51" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="29">errbuf<pos:position pos:line="51" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="37">sizeof<argument_list pos:line="51" pos:column="43">(<argument><expr><name pos:line="51" pos:column="44">errbuf<pos:position pos:line="51" pos:column="50"/></name></expr></argument>)<pos:position pos:line="51" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">amqp_destroy_connection<pos:position pos:line="52" pos:column="28"/></name><argument_list pos:line="52" pos:column="28">(<argument><expr><name><name pos:line="52" pos:column="29">conf<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">-&gt;<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="35">connection<pos:position pos:line="52" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">conf<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">-&gt;<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="11">connection<pos:position pos:line="53" pos:column="21"/></name></name> <operator pos:line="53" pos:column="22">=<pos:position pos:line="53" pos:column="23"/></operator> <name pos:line="53" pos:column="24">NULL<pos:position pos:line="53" pos:column="28"/></name></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt>
    <return pos:line="54" pos:column="5">return <expr><operator pos:line="54" pos:column="12">(<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="13">status<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">)<pos:position pos:line="54" pos:column="20"/></operator></expr>;<pos:position pos:line="54" pos:column="21"/></return>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>
<cpp:else pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">else<pos:position pos:line="56" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="56" pos:column="7">/* HAVE_AMQP_TCP_SOCKET */</comment>
<cpp:define pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">define<pos:position pos:line="57" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="57" pos:column="9">CLOSE_SOCKET<pos:position pos:line="57" pos:column="21"/></name><parameter_list pos:line="57" pos:column="21">()<pos:position pos:line="57" pos:column="23"/></parameter_list></cpp:macro> <cpp:value pos:line="57" pos:column="24">close(sockfd)<pos:position pos:line="57" pos:column="37"/></cpp:value></cpp:define>
  <comment type="block" pos:line="58" pos:column="3">/* this interface is deprecated as of rabbitmq-c 0.4 */</comment>
  <expr_stmt><expr><name pos:line="59" pos:column="3">sockfd<pos:position pos:line="59" pos:column="9"/></name> <operator pos:line="59" pos:column="10">=<pos:position pos:line="59" pos:column="11"/></operator> <call><name pos:line="59" pos:column="12">amqp_open_socket<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><call><name pos:line="59" pos:column="29">CONF<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><name pos:line="59" pos:column="34">conf<pos:position pos:line="59" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="40">host<pos:position pos:line="59" pos:column="44"/></name></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="47">conf<pos:position pos:line="59" pos:column="51"/></name><operator pos:line="59" pos:column="51">-&gt;<pos:position pos:line="59" pos:column="56"/></operator><name pos:line="59" pos:column="53">port<pos:position pos:line="59" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="59"/></expr_stmt>
  <if pos:line="60" pos:column="3">if <condition pos:line="60" pos:column="6">(<expr><name pos:line="60" pos:column="7">sockfd<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">&lt;<pos:position pos:line="60" pos:column="18"/></operator> <literal type="number" pos:line="60" pos:column="16">0<pos:position pos:line="60" pos:column="17"/></literal></expr>)<pos:position pos:line="60" pos:column="18"/></condition><then pos:line="60" pos:column="18"> <block pos:line="60" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="61" pos:column="5">char<pos:position pos:line="61" pos:column="9"/></name></type> <name><name pos:line="61" pos:column="10">errbuf<pos:position pos:line="61" pos:column="16"/></name><index pos:line="61" pos:column="16">[<expr><literal type="number" pos:line="61" pos:column="17">1024<pos:position pos:line="61" pos:column="21"/></literal></expr>]<pos:position pos:line="61" pos:column="22"/></index></name></decl>;<pos:position pos:line="61" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><name pos:line="62" pos:column="5">status<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <operator pos:line="62" pos:column="14">(<pos:position pos:line="62" pos:column="15"/></operator><operator pos:line="62" pos:column="15">-<pos:position pos:line="62" pos:column="16"/></operator><literal type="number" pos:line="62" pos:column="16">1<pos:position pos:line="62" pos:column="17"/></literal><operator pos:line="62" pos:column="17">)<pos:position pos:line="62" pos:column="18"/></operator> <operator pos:line="62" pos:column="19">*<pos:position pos:line="62" pos:column="20"/></operator> <name pos:line="62" pos:column="21">sockfd<pos:position pos:line="62" pos:column="27"/></name></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">ERROR<pos:position pos:line="63" pos:column="10"/></name><argument_list pos:line="63" pos:column="10">(<argument><expr><literal type="string" pos:line="63" pos:column="11">"amqp plugin: amqp_open_socket failed: %s"<pos:position pos:line="63" pos:column="53"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="64" pos:column="11">sstrerror<pos:position pos:line="64" pos:column="20"/></name><argument_list pos:line="64" pos:column="20">(<argument><expr><name pos:line="64" pos:column="21">status<pos:position pos:line="64" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="29">errbuf<pos:position pos:line="64" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="37">sizeof<argument_list pos:line="64" pos:column="43">(<argument><expr><name pos:line="64" pos:column="44">errbuf<pos:position pos:line="64" pos:column="50"/></name></expr></argument>)<pos:position pos:line="64" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">amqp_destroy_connection<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument><expr><name><name pos:line="65" pos:column="29">conf<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">-&gt;<pos:position pos:line="65" pos:column="38"/></operator><name pos:line="65" pos:column="35">connection<pos:position pos:line="65" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="66" pos:column="5">conf<pos:position pos:line="66" pos:column="9"/></name><operator pos:line="66" pos:column="9">-&gt;<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="11">connection<pos:position pos:line="66" pos:column="21"/></name></name> <operator pos:line="66" pos:column="22">=<pos:position pos:line="66" pos:column="23"/></operator> <name pos:line="66" pos:column="24">NULL<pos:position pos:line="66" pos:column="28"/></name></expr>;<pos:position pos:line="66" pos:column="29"/></expr_stmt>
    <return pos:line="67" pos:column="5">return <expr><operator pos:line="67" pos:column="12">(<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="13">status<pos:position pos:line="67" pos:column="19"/></name><operator pos:line="67" pos:column="19">)<pos:position pos:line="67" pos:column="20"/></operator></expr>;<pos:position pos:line="67" pos:column="21"/></return>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="69" pos:column="3">amqp_set_sockfd<pos:position pos:line="69" pos:column="18"/></name><argument_list pos:line="69" pos:column="18">(<argument><expr><name><name pos:line="69" pos:column="19">conf<pos:position pos:line="69" pos:column="23"/></name><operator pos:line="69" pos:column="23">-&gt;<pos:position pos:line="69" pos:column="28"/></operator><name pos:line="69" pos:column="25">connection<pos:position pos:line="69" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="37">sockfd<pos:position pos:line="69" pos:column="43"/></name></expr></argument>)<pos:position pos:line="69" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="45"/></expr_stmt>
<cpp:endif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">endif<pos:position pos:line="70" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="72" pos:column="3">reply<pos:position pos:line="72" pos:column="8"/></name> <operator pos:line="72" pos:column="9">=<pos:position pos:line="72" pos:column="10"/></operator> <call><name pos:line="72" pos:column="11">amqp_login<pos:position pos:line="72" pos:column="21"/></name><argument_list pos:line="72" pos:column="21">(<argument><expr><name><name pos:line="72" pos:column="22">conf<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">connection<pos:position pos:line="72" pos:column="38"/></name></name></expr></argument>, <argument><expr><call><name pos:line="72" pos:column="40">CONF<pos:position pos:line="72" pos:column="44"/></name><argument_list pos:line="72" pos:column="44">(<argument><expr><name pos:line="72" pos:column="45">conf<pos:position pos:line="72" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="51">vhost<pos:position pos:line="72" pos:column="56"/></name></expr></argument>)<pos:position pos:line="72" pos:column="57"/></argument_list></call></expr></argument>,
                     <comment type="block" pos:line="73" pos:column="22">/* channel max = */</comment> <argument><expr><literal type="number" pos:line="73" pos:column="42">0<pos:position pos:line="73" pos:column="43"/></literal></expr></argument>,
                     <comment type="block" pos:line="74" pos:column="22">/* frame max   = */</comment> <argument><expr><literal type="number" pos:line="74" pos:column="42">131072<pos:position pos:line="74" pos:column="48"/></literal></expr></argument>,
                     <comment type="block" pos:line="75" pos:column="22">/* heartbeat   = */</comment> <argument><expr><literal type="number" pos:line="75" pos:column="42">0<pos:position pos:line="75" pos:column="43"/></literal></expr></argument>,
                     <comment type="block" pos:line="76" pos:column="22">/* authentication = */</comment> <argument><expr><name pos:line="76" pos:column="45">AMQP_SASL_METHOD_PLAIN<pos:position pos:line="76" pos:column="67"/></name></expr></argument>,
                     <argument><expr><call><name pos:line="77" pos:column="22">CONF<pos:position pos:line="77" pos:column="26"/></name><argument_list pos:line="77" pos:column="26">(<argument><expr><name pos:line="77" pos:column="27">conf<pos:position pos:line="77" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="33">user<pos:position pos:line="77" pos:column="37"/></name></expr></argument>)<pos:position pos:line="77" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="40">CONF<pos:position pos:line="77" pos:column="44"/></name><argument_list pos:line="77" pos:column="44">(<argument><expr><name pos:line="77" pos:column="45">conf<pos:position pos:line="77" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="51">password<pos:position pos:line="77" pos:column="59"/></name></expr></argument>)<pos:position pos:line="77" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="62"/></expr_stmt>
  <if pos:line="78" pos:column="3">if <condition pos:line="78" pos:column="6">(<expr><name><name pos:line="78" pos:column="7">reply<pos:position pos:line="78" pos:column="12"/></name><operator pos:line="78" pos:column="12">.<pos:position pos:line="78" pos:column="13"/></operator><name pos:line="78" pos:column="13">reply_type<pos:position pos:line="78" pos:column="23"/></name></name> <operator pos:line="78" pos:column="24">!=<pos:position pos:line="78" pos:column="26"/></operator> <name pos:line="78" pos:column="27">AMQP_RESPONSE_NORMAL<pos:position pos:line="78" pos:column="47"/></name></expr>)<pos:position pos:line="78" pos:column="48"/></condition><then pos:line="78" pos:column="48"> <block pos:line="78" pos:column="49">{
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">ERROR<pos:position pos:line="79" pos:column="10"/></name><argument_list pos:line="79" pos:column="10">(<argument><expr><literal type="string" pos:line="79" pos:column="11">"amqp plugin: amqp_login (vhost = %s, user = %s) failed."<pos:position pos:line="79" pos:column="68"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="80" pos:column="11">CONF<pos:position pos:line="80" pos:column="15"/></name><argument_list pos:line="80" pos:column="15">(<argument><expr><name pos:line="80" pos:column="16">conf<pos:position pos:line="80" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="22">vhost<pos:position pos:line="80" pos:column="27"/></name></expr></argument>)<pos:position pos:line="80" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="80" pos:column="30">CONF<pos:position pos:line="80" pos:column="34"/></name><argument_list pos:line="80" pos:column="34">(<argument><expr><name pos:line="80" pos:column="35">conf<pos:position pos:line="80" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="41">user<pos:position pos:line="80" pos:column="45"/></name></expr></argument>)<pos:position pos:line="80" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">amqp_destroy_connection<pos:position pos:line="81" pos:column="28"/></name><argument_list pos:line="81" pos:column="28">(<argument><expr><name><name pos:line="81" pos:column="29">conf<pos:position pos:line="81" pos:column="33"/></name><operator pos:line="81" pos:column="33">-&gt;<pos:position pos:line="81" pos:column="38"/></operator><name pos:line="81" pos:column="35">connection<pos:position pos:line="81" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">CLOSE_SOCKET<pos:position pos:line="82" pos:column="17"/></name><argument_list pos:line="82" pos:column="17">()<pos:position pos:line="82" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="83" pos:column="5">conf<pos:position pos:line="83" pos:column="9"/></name><operator pos:line="83" pos:column="9">-&gt;<pos:position pos:line="83" pos:column="14"/></operator><name pos:line="83" pos:column="11">connection<pos:position pos:line="83" pos:column="21"/></name></name> <operator pos:line="83" pos:column="22">=<pos:position pos:line="83" pos:column="23"/></operator> <name pos:line="83" pos:column="24">NULL<pos:position pos:line="83" pos:column="28"/></name></expr>;<pos:position pos:line="83" pos:column="29"/></expr_stmt>
    <return pos:line="84" pos:column="5">return <expr><operator pos:line="84" pos:column="12">(<pos:position pos:line="84" pos:column="13"/></operator><literal type="number" pos:line="84" pos:column="13">1<pos:position pos:line="84" pos:column="14"/></literal><operator pos:line="84" pos:column="14">)<pos:position pos:line="84" pos:column="15"/></operator></expr>;<pos:position pos:line="84" pos:column="16"/></return>
  }<pos:position pos:line="85" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="87" pos:column="3">amqp_channel_open<pos:position pos:line="87" pos:column="20"/></name><argument_list pos:line="87" pos:column="20">(<argument><expr><name><name pos:line="87" pos:column="21">conf<pos:position pos:line="87" pos:column="25"/></name><operator pos:line="87" pos:column="25">-&gt;<pos:position pos:line="87" pos:column="30"/></operator><name pos:line="87" pos:column="27">connection<pos:position pos:line="87" pos:column="37"/></name></name></expr></argument>, <comment type="block" pos:line="87" pos:column="39">/* channel = */</comment> <argument><expr><literal type="number" pos:line="87" pos:column="55">1<pos:position pos:line="87" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="58"/></expr_stmt>
  <comment type="block" pos:line="88" pos:column="3">/* FIXME: Is checking "reply.reply_type" really correct here? How does
   * it get set? --octo */</comment>
  <if pos:line="90" pos:column="3">if <condition pos:line="90" pos:column="6">(<expr><name><name pos:line="90" pos:column="7">reply<pos:position pos:line="90" pos:column="12"/></name><operator pos:line="90" pos:column="12">.<pos:position pos:line="90" pos:column="13"/></operator><name pos:line="90" pos:column="13">reply_type<pos:position pos:line="90" pos:column="23"/></name></name> <operator pos:line="90" pos:column="24">!=<pos:position pos:line="90" pos:column="26"/></operator> <name pos:line="90" pos:column="27">AMQP_RESPONSE_NORMAL<pos:position pos:line="90" pos:column="47"/></name></expr>)<pos:position pos:line="90" pos:column="48"/></condition><then pos:line="90" pos:column="48"> <block pos:line="90" pos:column="49">{
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">ERROR<pos:position pos:line="91" pos:column="10"/></name><argument_list pos:line="91" pos:column="10">(<argument><expr><literal type="string" pos:line="91" pos:column="11">"amqp plugin: amqp_channel_open failed."<pos:position pos:line="91" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">amqp_connection_close<pos:position pos:line="92" pos:column="26"/></name><argument_list pos:line="92" pos:column="26">(<argument><expr><name><name pos:line="92" pos:column="27">conf<pos:position pos:line="92" pos:column="31"/></name><operator pos:line="92" pos:column="31">-&gt;<pos:position pos:line="92" pos:column="36"/></operator><name pos:line="92" pos:column="33">connection<pos:position pos:line="92" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="45">AMQP_REPLY_SUCCESS<pos:position pos:line="92" pos:column="63"/></name></expr></argument>)<pos:position pos:line="92" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">amqp_destroy_connection<pos:position pos:line="93" pos:column="28"/></name><argument_list pos:line="93" pos:column="28">(<argument><expr><name><name pos:line="93" pos:column="29">conf<pos:position pos:line="93" pos:column="33"/></name><operator pos:line="93" pos:column="33">-&gt;<pos:position pos:line="93" pos:column="38"/></operator><name pos:line="93" pos:column="35">connection<pos:position pos:line="93" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="94" pos:column="5">CLOSE_SOCKET<pos:position pos:line="94" pos:column="17"/></name><argument_list pos:line="94" pos:column="17">()<pos:position pos:line="94" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="95" pos:column="5">conf<pos:position pos:line="95" pos:column="9"/></name><operator pos:line="95" pos:column="9">-&gt;<pos:position pos:line="95" pos:column="14"/></operator><name pos:line="95" pos:column="11">connection<pos:position pos:line="95" pos:column="21"/></name></name> <operator pos:line="95" pos:column="22">=<pos:position pos:line="95" pos:column="23"/></operator> <name pos:line="95" pos:column="24">NULL<pos:position pos:line="95" pos:column="28"/></name></expr>;<pos:position pos:line="95" pos:column="29"/></expr_stmt>
    <return pos:line="96" pos:column="5">return <expr><operator pos:line="96" pos:column="12">(<pos:position pos:line="96" pos:column="13"/></operator><literal type="number" pos:line="96" pos:column="13">1<pos:position pos:line="96" pos:column="14"/></literal><operator pos:line="96" pos:column="14">)<pos:position pos:line="96" pos:column="15"/></operator></expr>;<pos:position pos:line="96" pos:column="16"/></return>
  }<pos:position pos:line="97" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="99" pos:column="3">INFO<pos:position pos:line="99" pos:column="7"/></name><argument_list pos:line="99" pos:column="7">(<argument><expr><literal type="string" pos:line="99" pos:column="8">"amqp plugin: Successfully opened connection to vhost \"%s\" "<pos:position pos:line="99" pos:column="70"/></literal>
       <literal type="string" pos:line="100" pos:column="8">"on %s:%i."<pos:position pos:line="100" pos:column="19"/></literal></expr></argument>,
       <argument><expr><call><name pos:line="101" pos:column="8">CONF<pos:position pos:line="101" pos:column="12"/></name><argument_list pos:line="101" pos:column="12">(<argument><expr><name pos:line="101" pos:column="13">conf<pos:position pos:line="101" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="19">vhost<pos:position pos:line="101" pos:column="24"/></name></expr></argument>)<pos:position pos:line="101" pos:column="25"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="101" pos:column="27">CONF<pos:position pos:line="101" pos:column="31"/></name><argument_list pos:line="101" pos:column="31">(<argument><expr><name pos:line="101" pos:column="32">conf<pos:position pos:line="101" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="38">host<pos:position pos:line="101" pos:column="42"/></name></expr></argument>)<pos:position pos:line="101" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="45">conf<pos:position pos:line="101" pos:column="49"/></name><operator pos:line="101" pos:column="49">-&gt;<pos:position pos:line="101" pos:column="54"/></operator><name pos:line="101" pos:column="51">port<pos:position pos:line="101" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="57"/></expr_stmt>

  <expr_stmt><expr><name pos:line="103" pos:column="3">status<pos:position pos:line="103" pos:column="9"/></name> <operator pos:line="103" pos:column="10">=<pos:position pos:line="103" pos:column="11"/></operator> <call><name pos:line="103" pos:column="12">camqp_create_exchange<pos:position pos:line="103" pos:column="33"/></name><argument_list pos:line="103" pos:column="33">(<argument><expr><name pos:line="103" pos:column="34">conf<pos:position pos:line="103" pos:column="38"/></name></expr></argument>)<pos:position pos:line="103" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="40"/></expr_stmt>
  <if pos:line="104" pos:column="3">if <condition pos:line="104" pos:column="6">(<expr><name pos:line="104" pos:column="7">status<pos:position pos:line="104" pos:column="13"/></name> <operator pos:line="104" pos:column="14">!=<pos:position pos:line="104" pos:column="16"/></operator> <literal type="number" pos:line="104" pos:column="17">0<pos:position pos:line="104" pos:column="18"/></literal></expr>)<pos:position pos:line="104" pos:column="19"/></condition><then pos:line="104" pos:column="19">
    <block type="pseudo"><return pos:line="105" pos:column="5">return <expr><operator pos:line="105" pos:column="12">(<pos:position pos:line="105" pos:column="13"/></operator><name pos:line="105" pos:column="13">status<pos:position pos:line="105" pos:column="19"/></name><operator pos:line="105" pos:column="19">)<pos:position pos:line="105" pos:column="20"/></operator></expr>;<pos:position pos:line="105" pos:column="21"/></return></block></then></if>

  <if pos:line="107" pos:column="3">if <condition pos:line="107" pos:column="6">(<expr><operator pos:line="107" pos:column="7">!<pos:position pos:line="107" pos:column="8"/></operator><name><name pos:line="107" pos:column="8">conf<pos:position pos:line="107" pos:column="12"/></name><operator pos:line="107" pos:column="12">-&gt;<pos:position pos:line="107" pos:column="17"/></operator><name pos:line="107" pos:column="14">publish<pos:position pos:line="107" pos:column="21"/></name></name></expr>)<pos:position pos:line="107" pos:column="22"/></condition><then pos:line="107" pos:column="22">
    <block type="pseudo"><return pos:line="108" pos:column="5">return <expr><operator pos:line="108" pos:column="12">(<pos:position pos:line="108" pos:column="13"/></operator><call><name pos:line="108" pos:column="13">camqp_setup_queue<pos:position pos:line="108" pos:column="30"/></name><argument_list pos:line="108" pos:column="30">(<argument><expr><name pos:line="108" pos:column="31">conf<pos:position pos:line="108" pos:column="35"/></name></expr></argument>)<pos:position pos:line="108" pos:column="36"/></argument_list></call><operator pos:line="108" pos:column="36">)<pos:position pos:line="108" pos:column="37"/></operator></expr>;<pos:position pos:line="108" pos:column="38"/></return></block></then></if>
  <return pos:line="109" pos:column="3">return <expr><operator pos:line="109" pos:column="10">(<pos:position pos:line="109" pos:column="11"/></operator><literal type="number" pos:line="109" pos:column="11">0<pos:position pos:line="109" pos:column="12"/></literal><operator pos:line="109" pos:column="12">)<pos:position pos:line="109" pos:column="13"/></operator></expr>;<pos:position pos:line="109" pos:column="14"/></return>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

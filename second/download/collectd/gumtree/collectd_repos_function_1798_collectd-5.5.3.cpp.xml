<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1798_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sockent_server_listen<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">sockent_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">se<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">addrinfo<pos:position pos:line="3" pos:column="24"/></name></name></type>  <name pos:line="3" pos:column="26">ai_hints<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">addrinfo<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">ai_list<pos:position pos:line="4" pos:column="33"/></name></decl>, <modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="36">ai_ptr<pos:position pos:line="4" pos:column="42"/></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type>              <name pos:line="5" pos:column="26">status<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">node<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">service<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">se<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">==<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">NULL<pos:position pos:line="10" pos:column="23"/></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">assert<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">(<argument><expr><name><name pos:line="13" pos:column="17">se<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">data<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">.<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">server<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">.<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">fd<pos:position pos:line="13" pos:column="35"/></name></name> <operator pos:line="13" pos:column="36">==<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="39">NULL<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">assert<pos:position pos:line="14" pos:column="15"/></name> <argument_list pos:line="14" pos:column="16">(<argument><expr><name><name pos:line="14" pos:column="17">se<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">data<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">.<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">server<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">.<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">fd_num<pos:position pos:line="14" pos:column="39"/></name></name> <operator pos:line="14" pos:column="40">==<pos:position pos:line="14" pos:column="42"/></operator> <literal type="number" pos:line="14" pos:column="43">0<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><name pos:line="16" pos:column="9">node<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name><name pos:line="16" pos:column="16">se<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">node<pos:position pos:line="16" pos:column="24"/></name></name></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">service<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name><name pos:line="17" pos:column="19">se<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">service<pos:position pos:line="17" pos:column="30"/></name></name></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">service<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">==<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="24">NULL<pos:position pos:line="19" pos:column="28"/></name></expr>)<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29">
          <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="11">service<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">NET_DEFAULT_PORT<pos:position pos:line="20" pos:column="37"/></name></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="22" pos:column="9">DEBUG<pos:position pos:line="22" pos:column="14"/></name> <argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="string" pos:line="22" pos:column="16">"network plugin: sockent_server_listen: node = %s; service = %s;"<pos:position pos:line="22" pos:column="81"/></literal></expr></argument>,
            <argument><expr><name pos:line="23" pos:column="13">node<pos:position pos:line="23" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="19">service<pos:position pos:line="23" pos:column="26"/></name></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">memset<pos:position pos:line="25" pos:column="15"/></name> <argument_list pos:line="25" pos:column="16">(<argument><expr><operator pos:line="25" pos:column="17">&amp;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="18">ai_hints<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="28">0<pos:position pos:line="25" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="31">sizeof <argument_list pos:line="25" pos:column="38">(<argument><expr><name pos:line="25" pos:column="39">ai_hints<pos:position pos:line="25" pos:column="47"/></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">ai_hints<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">.<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">ai_flags<pos:position pos:line="26" pos:column="26"/></name></name>  <operator pos:line="26" pos:column="28">=<pos:position pos:line="26" pos:column="29"/></operator> <literal type="number" pos:line="26" pos:column="30">0<pos:position pos:line="26" pos:column="31"/></literal></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
<cpp:ifdef pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">ifdef<pos:position pos:line="27" pos:column="7"/></cpp:directive> <name pos:line="27" pos:column="8">AI_PASSIVE<pos:position pos:line="27" pos:column="18"/></name></cpp:ifdef>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">ai_hints<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">.<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">ai_flags<pos:position pos:line="28" pos:column="26"/></name></name> <operator pos:line="28" pos:column="27">|=<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="30">AI_PASSIVE<pos:position pos:line="28" pos:column="40"/></name></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">ifdef<pos:position pos:line="30" pos:column="7"/></cpp:directive> <name pos:line="30" pos:column="8">AI_ADDRCONFIG<pos:position pos:line="30" pos:column="21"/></name></cpp:ifdef>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">ai_hints<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">.<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">ai_flags<pos:position pos:line="31" pos:column="26"/></name></name> <operator pos:line="31" pos:column="27">|=<pos:position pos:line="31" pos:column="29"/></operator> <name pos:line="31" pos:column="30">AI_ADDRCONFIG<pos:position pos:line="31" pos:column="43"/></name></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="33" pos:column="9">ai_hints<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">.<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">ai_family<pos:position pos:line="33" pos:column="27"/></name></name>   <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <name pos:line="33" pos:column="32">AF_UNSPEC<pos:position pos:line="33" pos:column="41"/></name></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">ai_hints<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">.<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">ai_socktype<pos:position pos:line="34" pos:column="29"/></name></name> <operator pos:line="34" pos:column="30">=<pos:position pos:line="34" pos:column="31"/></operator> <name pos:line="34" pos:column="32">SOCK_DGRAM<pos:position pos:line="34" pos:column="42"/></name></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="35" pos:column="9">ai_hints<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">.<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">ai_protocol<pos:position pos:line="35" pos:column="29"/></name></name> <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <name pos:line="35" pos:column="32">IPPROTO_UDP<pos:position pos:line="35" pos:column="43"/></name></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><name pos:line="37" pos:column="9">status<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">getaddrinfo<pos:position pos:line="37" pos:column="29"/></name> <argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">node<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="37">service<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="46">&amp;<pos:position pos:line="37" pos:column="51"/></operator><name pos:line="37" pos:column="47">ai_hints<pos:position pos:line="37" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="57">&amp;<pos:position pos:line="37" pos:column="62"/></operator><name pos:line="37" pos:column="58">ai_list<pos:position pos:line="37" pos:column="65"/></name></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="67"/></expr_stmt>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">status<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">!=<pos:position pos:line="38" pos:column="22"/></operator> <literal type="number" pos:line="38" pos:column="23">0<pos:position pos:line="38" pos:column="24"/></literal></expr>)<pos:position pos:line="38" pos:column="25"/></condition><then pos:line="38" pos:column="25">
	<block pos:line="39" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">ERROR<pos:position pos:line="40" pos:column="22"/></name> <argument_list pos:line="40" pos:column="23">(<argument><expr><literal type="string" pos:line="40" pos:column="24">"network plugin: getaddrinfo (%s, %s) failed: %s"<pos:position pos:line="40" pos:column="73"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="41" pos:column="33">(<pos:position pos:line="41" pos:column="34"/></operator><name><name pos:line="41" pos:column="34">se<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">-&gt;<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="38">node<pos:position pos:line="41" pos:column="42"/></name></name> <operator pos:line="41" pos:column="43">==<pos:position pos:line="41" pos:column="45"/></operator> <name pos:line="41" pos:column="46">NULL<pos:position pos:line="41" pos:column="50"/></name><operator pos:line="41" pos:column="50">)<pos:position pos:line="41" pos:column="51"/></operator></expr> ?<pos:position pos:line="41" pos:column="53"/></condition><then pos:line="41" pos:column="53"> <expr><literal type="string" pos:line="41" pos:column="54">"(null)"<pos:position pos:line="41" pos:column="62"/></literal></expr> <pos:position pos:line="41" pos:column="63"/></then><else pos:line="41" pos:column="63">: <expr><name><name pos:line="41" pos:column="65">se<pos:position pos:line="41" pos:column="67"/></name><operator pos:line="41" pos:column="67">-&gt;<pos:position pos:line="41" pos:column="72"/></operator><name pos:line="41" pos:column="69">node<pos:position pos:line="41" pos:column="73"/></name></name></expr></else></ternary></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="42" pos:column="33">(<pos:position pos:line="42" pos:column="34"/></operator><name><name pos:line="42" pos:column="34">se<pos:position pos:line="42" pos:column="36"/></name><operator pos:line="42" pos:column="36">-&gt;<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="38">service<pos:position pos:line="42" pos:column="45"/></name></name> <operator pos:line="42" pos:column="46">==<pos:position pos:line="42" pos:column="48"/></operator> <name pos:line="42" pos:column="49">NULL<pos:position pos:line="42" pos:column="53"/></name><operator pos:line="42" pos:column="53">)<pos:position pos:line="42" pos:column="54"/></operator></expr> ?<pos:position pos:line="42" pos:column="56"/></condition><then pos:line="42" pos:column="56"> <expr><literal type="string" pos:line="42" pos:column="57">"(null)"<pos:position pos:line="42" pos:column="65"/></literal></expr> <pos:position pos:line="42" pos:column="66"/></then><else pos:line="42" pos:column="66">: <expr><name><name pos:line="42" pos:column="68">se<pos:position pos:line="42" pos:column="70"/></name><operator pos:line="42" pos:column="70">-&gt;<pos:position pos:line="42" pos:column="75"/></operator><name pos:line="42" pos:column="72">service<pos:position pos:line="42" pos:column="79"/></name></name></expr></else></ternary></expr></argument>,
				<argument><expr><call><name pos:line="43" pos:column="33">gai_strerror<pos:position pos:line="43" pos:column="45"/></name> <argument_list pos:line="43" pos:column="46">(<argument><expr><name pos:line="43" pos:column="47">status<pos:position pos:line="43" pos:column="53"/></name></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt>
		<return pos:line="44" pos:column="17">return <expr><operator pos:line="44" pos:column="24">(<pos:position pos:line="44" pos:column="25"/></operator><operator pos:line="44" pos:column="25">-<pos:position pos:line="44" pos:column="26"/></operator><literal type="number" pos:line="44" pos:column="26">1<pos:position pos:line="44" pos:column="27"/></literal><operator pos:line="44" pos:column="27">)<pos:position pos:line="44" pos:column="28"/></operator></expr>;<pos:position pos:line="44" pos:column="29"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<for pos:line="47" pos:column="9">for <control pos:line="47" pos:column="13">(<init><expr><name pos:line="47" pos:column="14">ai_ptr<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <name pos:line="47" pos:column="23">ai_list<pos:position pos:line="47" pos:column="30"/></name></expr>;<pos:position pos:line="47" pos:column="31"/></init> <condition><expr><name pos:line="47" pos:column="32">ai_ptr<pos:position pos:line="47" pos:column="38"/></name> <operator pos:line="47" pos:column="39">!=<pos:position pos:line="47" pos:column="41"/></operator> <name pos:line="47" pos:column="42">NULL<pos:position pos:line="47" pos:column="46"/></name></expr>;<pos:position pos:line="47" pos:column="47"/></condition> <incr><expr><name pos:line="47" pos:column="48">ai_ptr<pos:position pos:line="47" pos:column="54"/></name> <operator pos:line="47" pos:column="55">=<pos:position pos:line="47" pos:column="56"/></operator> <name><name pos:line="47" pos:column="57">ai_ptr<pos:position pos:line="47" pos:column="63"/></name><operator pos:line="47" pos:column="63">-&gt;<pos:position pos:line="47" pos:column="68"/></operator><name pos:line="47" pos:column="65">ai_next<pos:position pos:line="47" pos:column="72"/></name></name></expr></incr>)<pos:position pos:line="47" pos:column="73"/></control>
	<block pos:line="48" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="49" pos:column="17">int<pos:position pos:line="49" pos:column="20"/></name> <modifier pos:line="49" pos:column="21">*<pos:position pos:line="49" pos:column="22"/></modifier></type><name pos:line="49" pos:column="22">tmp<pos:position pos:line="49" pos:column="25"/></name></decl>;<pos:position pos:line="49" pos:column="26"/></decl_stmt>

		<expr_stmt><expr><name pos:line="51" pos:column="17">tmp<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator> <call><name pos:line="51" pos:column="23">realloc<pos:position pos:line="51" pos:column="30"/></name> <argument_list pos:line="51" pos:column="31">(<argument><expr><name><name pos:line="51" pos:column="32">se<pos:position pos:line="51" pos:column="34"/></name><operator pos:line="51" pos:column="34">-&gt;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="36">data<pos:position pos:line="51" pos:column="40"/></name><operator pos:line="51" pos:column="40">.<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="41">server<pos:position pos:line="51" pos:column="47"/></name><operator pos:line="51" pos:column="47">.<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="48">fd<pos:position pos:line="51" pos:column="50"/></name></name></expr></argument>,
				<argument><expr><sizeof pos:line="52" pos:column="33">sizeof <argument_list pos:line="52" pos:column="40">(<argument><expr><operator pos:line="52" pos:column="41">*<pos:position pos:line="52" pos:column="42"/></operator><name pos:line="52" pos:column="42">tmp<pos:position pos:line="52" pos:column="45"/></name></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></sizeof> <operator pos:line="52" pos:column="47">*<pos:position pos:line="52" pos:column="48"/></operator> <operator pos:line="52" pos:column="49">(<pos:position pos:line="52" pos:column="50"/></operator><name><name pos:line="52" pos:column="50">se<pos:position pos:line="52" pos:column="52"/></name><operator pos:line="52" pos:column="52">-&gt;<pos:position pos:line="52" pos:column="57"/></operator><name pos:line="52" pos:column="54">data<pos:position pos:line="52" pos:column="58"/></name><operator pos:line="52" pos:column="58">.<pos:position pos:line="52" pos:column="59"/></operator><name pos:line="52" pos:column="59">server<pos:position pos:line="52" pos:column="65"/></name><operator pos:line="52" pos:column="65">.<pos:position pos:line="52" pos:column="66"/></operator><name pos:line="52" pos:column="66">fd_num<pos:position pos:line="52" pos:column="72"/></name></name> <operator pos:line="52" pos:column="73">+<pos:position pos:line="52" pos:column="74"/></operator> <literal type="number" pos:line="52" pos:column="75">1<pos:position pos:line="52" pos:column="76"/></literal><operator pos:line="52" pos:column="76">)<pos:position pos:line="52" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="52" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="79"/></expr_stmt>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name pos:line="53" pos:column="21">tmp<pos:position pos:line="53" pos:column="24"/></name> <operator pos:line="53" pos:column="25">==<pos:position pos:line="53" pos:column="27"/></operator> <name pos:line="53" pos:column="28">NULL<pos:position pos:line="53" pos:column="32"/></name></expr>)<pos:position pos:line="53" pos:column="33"/></condition><then pos:line="53" pos:column="33">
		<block pos:line="54" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="55" pos:column="25">ERROR<pos:position pos:line="55" pos:column="30"/></name> <argument_list pos:line="55" pos:column="31">(<argument><expr><literal type="string" pos:line="55" pos:column="32">"network plugin: realloc failed."<pos:position pos:line="55" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="67"/></expr_stmt>
			<continue pos:line="56" pos:column="25">continue;<pos:position pos:line="56" pos:column="34"/></continue>
		}<pos:position pos:line="57" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="58" pos:column="17">se<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">-&gt;<pos:position pos:line="58" pos:column="24"/></operator><name pos:line="58" pos:column="21">data<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">.<pos:position pos:line="58" pos:column="26"/></operator><name pos:line="58" pos:column="26">server<pos:position pos:line="58" pos:column="32"/></name><operator pos:line="58" pos:column="32">.<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="33">fd<pos:position pos:line="58" pos:column="35"/></name></name> <operator pos:line="58" pos:column="36">=<pos:position pos:line="58" pos:column="37"/></operator> <name pos:line="58" pos:column="38">tmp<pos:position pos:line="58" pos:column="41"/></name></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="59" pos:column="17">tmp<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">=<pos:position pos:line="59" pos:column="22"/></operator> <name><name pos:line="59" pos:column="23">se<pos:position pos:line="59" pos:column="25"/></name><operator pos:line="59" pos:column="25">-&gt;<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="27">data<pos:position pos:line="59" pos:column="31"/></name><operator pos:line="59" pos:column="31">.<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="32">server<pos:position pos:line="59" pos:column="38"/></name><operator pos:line="59" pos:column="38">.<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="39">fd<pos:position pos:line="59" pos:column="41"/></name></name> <operator pos:line="59" pos:column="42">+<pos:position pos:line="59" pos:column="43"/></operator> <name><name pos:line="59" pos:column="44">se<pos:position pos:line="59" pos:column="46"/></name><operator pos:line="59" pos:column="46">-&gt;<pos:position pos:line="59" pos:column="51"/></operator><name pos:line="59" pos:column="48">data<pos:position pos:line="59" pos:column="52"/></name><operator pos:line="59" pos:column="52">.<pos:position pos:line="59" pos:column="53"/></operator><name pos:line="59" pos:column="53">server<pos:position pos:line="59" pos:column="59"/></name><operator pos:line="59" pos:column="59">.<pos:position pos:line="59" pos:column="60"/></operator><name pos:line="59" pos:column="60">fd_num<pos:position pos:line="59" pos:column="66"/></name></name></expr>;<pos:position pos:line="59" pos:column="67"/></expr_stmt>

		<expr_stmt><expr><operator pos:line="61" pos:column="17">*<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="18">tmp<pos:position pos:line="61" pos:column="21"/></name> <operator pos:line="61" pos:column="22">=<pos:position pos:line="61" pos:column="23"/></operator> <call><name pos:line="61" pos:column="24">socket<pos:position pos:line="61" pos:column="30"/></name> <argument_list pos:line="61" pos:column="31">(<argument><expr><name><name pos:line="61" pos:column="32">ai_ptr<pos:position pos:line="61" pos:column="38"/></name><operator pos:line="61" pos:column="38">-&gt;<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="40">ai_family<pos:position pos:line="61" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="51">ai_ptr<pos:position pos:line="61" pos:column="57"/></name><operator pos:line="61" pos:column="57">-&gt;<pos:position pos:line="61" pos:column="62"/></operator><name pos:line="61" pos:column="59">ai_socktype<pos:position pos:line="61" pos:column="70"/></name></name></expr></argument>,
				<argument><expr><name><name pos:line="62" pos:column="33">ai_ptr<pos:position pos:line="62" pos:column="39"/></name><operator pos:line="62" pos:column="39">-&gt;<pos:position pos:line="62" pos:column="44"/></operator><name pos:line="62" pos:column="41">ai_protocol<pos:position pos:line="62" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="54"/></expr_stmt>
		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><operator pos:line="63" pos:column="21">*<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="22">tmp<pos:position pos:line="63" pos:column="25"/></name> <operator pos:line="63" pos:column="26">&lt;<pos:position pos:line="63" pos:column="30"/></operator> <literal type="number" pos:line="63" pos:column="28">0<pos:position pos:line="63" pos:column="29"/></literal></expr>)<pos:position pos:line="63" pos:column="30"/></condition><then pos:line="63" pos:column="30">
		<block pos:line="64" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="65" pos:column="25">char<pos:position pos:line="65" pos:column="29"/></name></type> <name><name pos:line="65" pos:column="30">errbuf<pos:position pos:line="65" pos:column="36"/></name><index pos:line="65" pos:column="36">[<expr><literal type="number" pos:line="65" pos:column="37">1024<pos:position pos:line="65" pos:column="41"/></literal></expr>]<pos:position pos:line="65" pos:column="42"/></index></name></decl>;<pos:position pos:line="65" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="66" pos:column="25">ERROR<pos:position pos:line="66" pos:column="30"/></name> <argument_list pos:line="66" pos:column="31">(<argument><expr><literal type="string" pos:line="66" pos:column="32">"network plugin: socket(2) failed: %s"<pos:position pos:line="66" pos:column="70"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="67" pos:column="41">sstrerror<pos:position pos:line="67" pos:column="50"/></name> <argument_list pos:line="67" pos:column="51">(<argument><expr><name pos:line="67" pos:column="52">errno<pos:position pos:line="67" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="59">errbuf<pos:position pos:line="67" pos:column="65"/></name></expr></argument>,
						<argument><expr><sizeof pos:line="68" pos:column="49">sizeof <argument_list pos:line="68" pos:column="56">(<argument><expr><name pos:line="68" pos:column="57">errbuf<pos:position pos:line="68" pos:column="63"/></name></expr></argument>)<pos:position pos:line="68" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="68" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="67"/></expr_stmt>
			<continue pos:line="69" pos:column="25">continue;<pos:position pos:line="69" pos:column="34"/></continue>
		}<pos:position pos:line="70" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="72" pos:column="17">status<pos:position pos:line="72" pos:column="23"/></name> <operator pos:line="72" pos:column="24">=<pos:position pos:line="72" pos:column="25"/></operator> <call><name pos:line="72" pos:column="26">network_bind_socket<pos:position pos:line="72" pos:column="45"/></name> <argument_list pos:line="72" pos:column="46">(<argument><expr><operator pos:line="72" pos:column="47">*<pos:position pos:line="72" pos:column="48"/></operator><name pos:line="72" pos:column="48">tmp<pos:position pos:line="72" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="53">ai_ptr<pos:position pos:line="72" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="61">se<pos:position pos:line="72" pos:column="63"/></name><operator pos:line="72" pos:column="63">-&gt;<pos:position pos:line="72" pos:column="68"/></operator><name pos:line="72" pos:column="65">interface<pos:position pos:line="72" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="76"/></expr_stmt>
		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name pos:line="73" pos:column="21">status<pos:position pos:line="73" pos:column="27"/></name> <operator pos:line="73" pos:column="28">!=<pos:position pos:line="73" pos:column="30"/></operator> <literal type="number" pos:line="73" pos:column="31">0<pos:position pos:line="73" pos:column="32"/></literal></expr>)<pos:position pos:line="73" pos:column="33"/></condition><then pos:line="73" pos:column="33">
		<block pos:line="74" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="75" pos:column="25">close<pos:position pos:line="75" pos:column="30"/></name> <argument_list pos:line="75" pos:column="31">(<argument><expr><operator pos:line="75" pos:column="32">*<pos:position pos:line="75" pos:column="33"/></operator><name pos:line="75" pos:column="33">tmp<pos:position pos:line="75" pos:column="36"/></name></expr></argument>)<pos:position pos:line="75" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="76" pos:column="25">*<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="26">tmp<pos:position pos:line="76" pos:column="29"/></name> <operator pos:line="76" pos:column="30">=<pos:position pos:line="76" pos:column="31"/></operator> <operator pos:line="76" pos:column="32">-<pos:position pos:line="76" pos:column="33"/></operator><literal type="number" pos:line="76" pos:column="33">1<pos:position pos:line="76" pos:column="34"/></literal></expr>;<pos:position pos:line="76" pos:column="35"/></expr_stmt>
			<continue pos:line="77" pos:column="25">continue;<pos:position pos:line="77" pos:column="34"/></continue>
		}<pos:position pos:line="78" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="80" pos:column="17">se<pos:position pos:line="80" pos:column="19"/></name><operator pos:line="80" pos:column="19">-&gt;<pos:position pos:line="80" pos:column="24"/></operator><name pos:line="80" pos:column="21">data<pos:position pos:line="80" pos:column="25"/></name><operator pos:line="80" pos:column="25">.<pos:position pos:line="80" pos:column="26"/></operator><name pos:line="80" pos:column="26">server<pos:position pos:line="80" pos:column="32"/></name><operator pos:line="80" pos:column="32">.<pos:position pos:line="80" pos:column="33"/></operator><name pos:line="80" pos:column="33">fd_num<pos:position pos:line="80" pos:column="39"/></name></name><operator pos:line="80" pos:column="39">++<pos:position pos:line="80" pos:column="41"/></operator></expr>;<pos:position pos:line="80" pos:column="42"/></expr_stmt>
		<continue pos:line="81" pos:column="17">continue;<pos:position pos:line="81" pos:column="26"/></continue>
	}<pos:position pos:line="82" pos:column="10"/></block></for> <comment type="block" pos:line="82" pos:column="11">/* for (ai_list) */</comment>

	<expr_stmt><expr><call><name pos:line="84" pos:column="9">freeaddrinfo<pos:position pos:line="84" pos:column="21"/></name> <argument_list pos:line="84" pos:column="22">(<argument><expr><name pos:line="84" pos:column="23">ai_list<pos:position pos:line="84" pos:column="30"/></name></expr></argument>)<pos:position pos:line="84" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="32"/></expr_stmt>

	<if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><name><name pos:line="86" pos:column="13">se<pos:position pos:line="86" pos:column="15"/></name><operator pos:line="86" pos:column="15">-&gt;<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="17">data<pos:position pos:line="86" pos:column="21"/></name><operator pos:line="86" pos:column="21">.<pos:position pos:line="86" pos:column="22"/></operator><name pos:line="86" pos:column="22">server<pos:position pos:line="86" pos:column="28"/></name><operator pos:line="86" pos:column="28">.<pos:position pos:line="86" pos:column="29"/></operator><name pos:line="86" pos:column="29">fd_num<pos:position pos:line="86" pos:column="35"/></name></name> <operator pos:line="86" pos:column="36">&lt;=<pos:position pos:line="86" pos:column="41"/></operator> <literal type="number" pos:line="86" pos:column="39">0<pos:position pos:line="86" pos:column="40"/></literal></expr>)<pos:position pos:line="86" pos:column="41"/></condition><then pos:line="86" pos:column="41">
		<block type="pseudo"><return pos:line="87" pos:column="17">return <expr><operator pos:line="87" pos:column="24">(<pos:position pos:line="87" pos:column="25"/></operator><operator pos:line="87" pos:column="25">-<pos:position pos:line="87" pos:column="26"/></operator><literal type="number" pos:line="87" pos:column="26">1<pos:position pos:line="87" pos:column="27"/></literal><operator pos:line="87" pos:column="27">)<pos:position pos:line="87" pos:column="28"/></operator></expr>;<pos:position pos:line="87" pos:column="29"/></return></block></then></if>
	<return pos:line="88" pos:column="9">return <expr><operator pos:line="88" pos:column="16">(<pos:position pos:line="88" pos:column="17"/></operator><literal type="number" pos:line="88" pos:column="17">0<pos:position pos:line="88" pos:column="18"/></literal><operator pos:line="88" pos:column="18">)<pos:position pos:line="88" pos:column="19"/></operator></expr>;<pos:position pos:line="88" pos:column="20"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

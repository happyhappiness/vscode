<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1036_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_check_con_sum<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">size_t<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">values_num<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">double<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">values<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier><modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">values_names<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list> <block pos:line="2" pos:column="50">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">double<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">total<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">total_num<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">status_str<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><literal type="string" pos:line="5" pos:column="28">"UNKNOWN"<pos:position pos:line="5" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status_code<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">RET_UNKNOWN<pos:position pos:line="6" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">total<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <literal type="number" pos:line="8" pos:column="11">0.0<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">total_num<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <literal type="number" pos:line="9" pos:column="15">0<pos:position pos:line="9" pos:column="16"/></literal></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init><decl><type><name pos:line="10" pos:column="8">size_t<pos:position pos:line="10" pos:column="14"/></name></type> <name pos:line="10" pos:column="15">i<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="21"/></init> <condition><expr><name pos:line="10" pos:column="22">i<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">&lt;<pos:position pos:line="10" pos:column="28"/></operator> <name pos:line="10" pos:column="26">values_num<pos:position pos:line="10" pos:column="36"/></name></expr>;<pos:position pos:line="10" pos:column="37"/></condition> <incr><expr><name pos:line="10" pos:column="38">i<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">++<pos:position pos:line="10" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="42"/></control> <block pos:line="10" pos:column="43">{
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">isnan<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name><name pos:line="11" pos:column="15">values<pos:position pos:line="11" pos:column="21"/></name><index pos:line="11" pos:column="21">[<expr><name pos:line="11" pos:column="22">i<pos:position pos:line="11" pos:column="23"/></name></expr>]<pos:position pos:line="11" pos:column="24"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26"> <block pos:line="11" pos:column="27">{
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><operator pos:line="12" pos:column="11">!<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">nan_is_error_g<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27">
        <block type="pseudo"><continue pos:line="13" pos:column="9">continue;<pos:position pos:line="13" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><call><name pos:line="15" pos:column="7">printf<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><literal type="string" pos:line="15" pos:column="14">"CRITICAL: Data source \"%s\" is NaN\n"<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="55">values_names<pos:position pos:line="15" pos:column="67"/></name><index pos:line="15" pos:column="67">[<expr><name pos:line="15" pos:column="68">i<pos:position pos:line="15" pos:column="69"/></name></expr>]<pos:position pos:line="15" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt>
      <return pos:line="16" pos:column="7">return <expr><operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">RET_CRITICAL<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator></expr>;<pos:position pos:line="16" pos:column="29"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="19" pos:column="5">total<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">+=<pos:position pos:line="19" pos:column="13"/></operator> <name><name pos:line="19" pos:column="14">values<pos:position pos:line="19" pos:column="20"/></name><index pos:line="19" pos:column="20">[<expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name></expr>]<pos:position pos:line="19" pos:column="23"/></index></name></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">total_num<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">++<pos:position pos:line="20" pos:column="16"/></operator></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></for>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">total_num<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">==<pos:position pos:line="23" pos:column="19"/></operator> <literal type="number" pos:line="23" pos:column="20">0<pos:position pos:line="23" pos:column="21"/></literal></expr>)<pos:position pos:line="23" pos:column="22"/></condition><then pos:line="23" pos:column="22"> <block pos:line="23" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">printf<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="string" pos:line="24" pos:column="12">"WARNING: No defined values found\n"<pos:position pos:line="24" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">RET_WARNING<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">)<pos:position pos:line="25" pos:column="25"/></operator></expr>;<pos:position pos:line="25" pos:column="26"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><call><name pos:line="28" pos:column="7">match_range<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><operator pos:line="28" pos:column="19">&amp;<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="20">range_critical_g<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">total<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call> <operator pos:line="28" pos:column="45">!=<pos:position pos:line="28" pos:column="47"/></operator> <literal type="number" pos:line="28" pos:column="48">0<pos:position pos:line="28" pos:column="49"/></literal></expr>)<pos:position pos:line="28" pos:column="50"/></condition><then pos:line="28" pos:column="50"> <block pos:line="28" pos:column="51">{
    <expr_stmt><expr><name pos:line="29" pos:column="5">status_str<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <literal type="string" pos:line="29" pos:column="18">"CRITICAL"<pos:position pos:line="29" pos:column="28"/></literal></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">status_code<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">RET_CRITICAL<pos:position pos:line="30" pos:column="31"/></name></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></then> <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><call><name pos:line="31" pos:column="14">match_range<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><operator pos:line="31" pos:column="26">&amp;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="27">range_warning_g<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">total<pos:position pos:line="31" pos:column="49"/></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call> <operator pos:line="31" pos:column="51">!=<pos:position pos:line="31" pos:column="53"/></operator> <literal type="number" pos:line="31" pos:column="54">0<pos:position pos:line="31" pos:column="55"/></literal></expr>)<pos:position pos:line="31" pos:column="56"/></condition><then pos:line="31" pos:column="56"> <block pos:line="31" pos:column="57">{
    <expr_stmt><expr><name pos:line="32" pos:column="5">status_str<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <literal type="string" pos:line="32" pos:column="18">"WARNING"<pos:position pos:line="32" pos:column="27"/></literal></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">status_code<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <name pos:line="33" pos:column="19">RET_WARNING<pos:position pos:line="33" pos:column="30"/></name></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if></elseif> <else pos:line="34" pos:column="5">else <block pos:line="34" pos:column="10">{
    <expr_stmt><expr><name pos:line="35" pos:column="5">status_str<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <literal type="string" pos:line="35" pos:column="18">"OKAY"<pos:position pos:line="35" pos:column="24"/></literal></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">status_code<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <name pos:line="36" pos:column="19">RET_OKAY<pos:position pos:line="36" pos:column="27"/></name></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="39" pos:column="3">printf<pos:position pos:line="39" pos:column="9"/></name><argument_list pos:line="39" pos:column="9">(<argument><expr><literal type="string" pos:line="39" pos:column="10">"%s: %g sum |"<pos:position pos:line="39" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="26">status_str<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">total<pos:position pos:line="39" pos:column="43"/></name></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt>
  <for pos:line="40" pos:column="3">for <control pos:line="40" pos:column="7">(<init><decl><type><name pos:line="40" pos:column="8">size_t<pos:position pos:line="40" pos:column="14"/></name></type> <name pos:line="40" pos:column="15">i<pos:position pos:line="40" pos:column="16"/></name> <init pos:line="40" pos:column="17">= <expr><literal type="number" pos:line="40" pos:column="19">0<pos:position pos:line="40" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="40" pos:column="21"/></init> <condition><expr><name pos:line="40" pos:column="22">i<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">&lt;<pos:position pos:line="40" pos:column="28"/></operator> <name pos:line="40" pos:column="26">values_num<pos:position pos:line="40" pos:column="36"/></name></expr>;<pos:position pos:line="40" pos:column="37"/></condition> <incr><expr><name pos:line="40" pos:column="38">i<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">++<pos:position pos:line="40" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="42"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="5">printf<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><literal type="string" pos:line="41" pos:column="12">" %s=%f;;;;"<pos:position pos:line="41" pos:column="24"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="26">values_names<pos:position pos:line="41" pos:column="38"/></name><index pos:line="41" pos:column="38">[<expr><name pos:line="41" pos:column="39">i<pos:position pos:line="41" pos:column="40"/></name></expr>]<pos:position pos:line="41" pos:column="41"/></index></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="43">values<pos:position pos:line="41" pos:column="49"/></name><index pos:line="41" pos:column="49">[<expr><name pos:line="41" pos:column="50">i<pos:position pos:line="41" pos:column="51"/></name></expr>]<pos:position pos:line="41" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt></block></for>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">printf<pos:position pos:line="42" pos:column="9"/></name><argument_list pos:line="42" pos:column="9">(<argument><expr><literal type="string" pos:line="42" pos:column="10">"\n"<pos:position pos:line="42" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="16"/></expr_stmt>

  <return pos:line="44" pos:column="3">return <expr><operator pos:line="44" pos:column="10">(<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="11">status_code<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">)<pos:position pos:line="44" pos:column="23"/></operator></expr>;<pos:position pos:line="44" pos:column="24"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_771_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ltoc_values<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">lua_State<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">L<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="38">/* {{{ */</comment>
                       <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">data_set_t<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">ds<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">value_t<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">ret_values<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list> <block pos:line="2" pos:column="67">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">!<pos:position pos:line="3" pos:column="8"/></operator><call><name pos:line="3" pos:column="8">lua_istable<pos:position pos:line="3" pos:column="19"/></name><argument_list pos:line="3" pos:column="19">(<argument><expr><name pos:line="3" pos:column="20">L<pos:position pos:line="3" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="23">-<pos:position pos:line="3" pos:column="24"/></operator><literal type="number" pos:line="3" pos:column="24">1<pos:position pos:line="3" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="27"/></condition><then pos:line="3" pos:column="27"> <block pos:line="3" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">WARNING<pos:position pos:line="4" pos:column="12"/></name><argument_list pos:line="4" pos:column="12">(<argument><expr><literal type="string" pos:line="4" pos:column="13">"ltoc_values: not a table"<pos:position pos:line="4" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="41"/></expr_stmt>
    <return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">(<pos:position pos:line="5" pos:column="13"/></operator><operator pos:line="5" pos:column="13">-<pos:position pos:line="5" pos:column="14"/></operator><literal type="number" pos:line="5" pos:column="14">1<pos:position pos:line="5" pos:column="15"/></literal><operator pos:line="5" pos:column="15">)<pos:position pos:line="5" pos:column="16"/></operator></expr>;<pos:position pos:line="5" pos:column="17"/></return>
  }<pos:position pos:line="6" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="8" pos:column="3">/* Push initial key */</comment>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">lua_pushnil<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">L<pos:position pos:line="9" pos:column="16"/></name></expr></argument>)<pos:position pos:line="9" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="18"/></expr_stmt> <comment type="block" pos:line="9" pos:column="19">/* +1 = 1 */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">i<pos:position pos:line="10" pos:column="11"/></name> <init pos:line="10" pos:column="12">= <expr><literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
  <while pos:line="11" pos:column="3">while <condition pos:line="11" pos:column="9">(<expr><call><name pos:line="11" pos:column="10">lua_next<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">L<pos:position pos:line="11" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="22">-<pos:position pos:line="11" pos:column="23"/></operator><literal type="number" pos:line="11" pos:column="23">2<pos:position pos:line="11" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call> <operator pos:line="11" pos:column="26">!=<pos:position pos:line="11" pos:column="28"/></operator> <literal type="number" pos:line="11" pos:column="29">0<pos:position pos:line="11" pos:column="30"/></literal></expr>)<pos:position pos:line="11" pos:column="31"/></condition> <comment type="block" pos:line="11" pos:column="32">/* -1+2 = 2 || -1 = 0 */</comment>
  <block pos:line="12" pos:column="3">{
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">i<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">&gt;=<pos:position pos:line="13" pos:column="16"/></operator> <name><name pos:line="13" pos:column="14">ds<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">ds_num<pos:position pos:line="13" pos:column="24"/></name></name></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25"> <block pos:line="13" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">lua_pop<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">L<pos:position pos:line="14" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="18">2<pos:position pos:line="14" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt> <comment type="block" pos:line="14" pos:column="22">/* -2 = 0 */</comment>
      <expr_stmt><expr><name pos:line="15" pos:column="7">i<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">++<pos:position pos:line="15" pos:column="10"/></operator></expr>;<pos:position pos:line="15" pos:column="11"/></expr_stmt>
      <break pos:line="16" pos:column="7">break;<pos:position pos:line="16" pos:column="13"/></break>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="19" pos:column="5">ret_values<pos:position pos:line="19" pos:column="15"/></name><index pos:line="19" pos:column="15">[<expr><name pos:line="19" pos:column="16">i<pos:position pos:line="19" pos:column="17"/></name></expr>]<pos:position pos:line="19" pos:column="18"/></index></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <call><name pos:line="19" pos:column="21">luaC_tovalue<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">L<pos:position pos:line="19" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="37">-<pos:position pos:line="19" pos:column="38"/></operator><literal type="number" pos:line="19" pos:column="38">1<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="41">ds<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">-&gt;<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="45">ds<pos:position pos:line="19" pos:column="47"/></name><index pos:line="19" pos:column="47">[<expr><name pos:line="19" pos:column="48">i<pos:position pos:line="19" pos:column="49"/></name></expr>]<pos:position pos:line="19" pos:column="50"/></index></name><operator pos:line="19" pos:column="50">.<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">type<pos:position pos:line="19" pos:column="55"/></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* Pop the value */</comment>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">lua_pop<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">L<pos:position pos:line="22" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="16">1<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt> <comment type="block" pos:line="22" pos:column="20">/* -1 = 1 */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">i<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">++<pos:position pos:line="23" pos:column="8"/></operator></expr>;<pos:position pos:line="23" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></while> <comment type="block" pos:line="24" pos:column="5">/* while (lua_next) */</comment>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">i<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">!=<pos:position pos:line="26" pos:column="11"/></operator> <name><name pos:line="26" pos:column="12">ds<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">ds_num<pos:position pos:line="26" pos:column="22"/></name></name></expr>)<pos:position pos:line="26" pos:column="23"/></condition><then pos:line="26" pos:column="23"> <block pos:line="26" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">WARNING<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><literal type="string" pos:line="27" pos:column="13">"ltoc_values: invalid size for datasource \"%s\": expected %zu, "<pos:position pos:line="27" pos:column="78"/></literal>
            <literal type="string" pos:line="28" pos:column="13">"got %zu"<pos:position pos:line="28" pos:column="22"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="29" pos:column="13">ds<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">-&gt;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="17">type<pos:position pos:line="29" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="23">ds<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">ds_num<pos:position pos:line="29" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="35">i<pos:position pos:line="29" pos:column="36"/></name></expr></argument>)<pos:position pos:line="29" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><operator pos:line="30" pos:column="13">-<pos:position pos:line="30" pos:column="14"/></operator><literal type="number" pos:line="30" pos:column="14">1<pos:position pos:line="30" pos:column="15"/></literal><operator pos:line="30" pos:column="15">)<pos:position pos:line="30" pos:column="16"/></operator></expr>;<pos:position pos:line="30" pos:column="17"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <return pos:line="33" pos:column="3">return <expr><operator pos:line="33" pos:column="10">(<pos:position pos:line="33" pos:column="11"/></operator><literal type="number" pos:line="33" pos:column="11">0<pos:position pos:line="33" pos:column="12"/></literal><operator pos:line="33" pos:column="12">)<pos:position pos:line="33" pos:column="13"/></operator></expr>;<pos:position pos:line="33" pos:column="14"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1417_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensor_list_add<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">ipmi_sensor_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">sensor<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <block pos:line="1" pos:column="51">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">ipmi_sensor_id_t<pos:position pos:line="2" pos:column="19"/></name></type> <name pos:line="2" pos:column="20">sensor_id<pos:position pos:line="2" pos:column="29"/></name></decl>;<pos:position pos:line="2" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">c_ipmi_sensor_list_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">list_item<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">c_ipmi_sensor_list_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">list_prev<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">buffer<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><name pos:line="6" pos:column="15">DATA_MAX_NAME_LEN<pos:position pos:line="6" pos:column="32"/></name></expr>]<pos:position pos:line="6" pos:column="33"/></index></name> <init pos:line="6" pos:column="34">= <expr><block pos:line="6" pos:column="36">{<expr><literal type="number" pos:line="6" pos:column="37">0<pos:position pos:line="6" pos:column="38"/></literal></expr>}<pos:position pos:line="6" pos:column="39"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">entity_id_string<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">sensor_name<pos:position pos:line="8" pos:column="19"/></name><index pos:line="8" pos:column="19">[<expr><name pos:line="8" pos:column="20">DATA_MAX_NAME_LEN<pos:position pos:line="8" pos:column="37"/></name></expr>]<pos:position pos:line="8" pos:column="38"/></index></name></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">sensor_name_ptr<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">sensor_type<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">type<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">ipmi_entity_t<pos:position pos:line="12" pos:column="16"/></name> <modifier pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></modifier></type><name pos:line="12" pos:column="18">ent<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><call><name pos:line="12" pos:column="24">ipmi_sensor_get_entity<pos:position pos:line="12" pos:column="46"/></name><argument_list pos:line="12" pos:column="46">(<argument><expr><name pos:line="12" pos:column="47">sensor<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="55"/></decl_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">sensor_id<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">ipmi_sensor_convert_to_id<pos:position pos:line="14" pos:column="40"/></name><argument_list pos:line="14" pos:column="40">(<argument><expr><name pos:line="14" pos:column="41">sensor<pos:position pos:line="14" pos:column="47"/></name></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">ipmi_sensor_get_name<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">sensor<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="32">buffer<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="40">sizeof<argument_list pos:line="16" pos:column="46">(<argument><expr><name pos:line="16" pos:column="47">buffer<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">buffer<pos:position pos:line="17" pos:column="9"/></name><index pos:line="17" pos:column="9">[<expr><sizeof pos:line="17" pos:column="10">sizeof<argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">buffer<pos:position pos:line="17" pos:column="23"/></name></expr></argument>)<pos:position pos:line="17" pos:column="24"/></argument_list></sizeof> <operator pos:line="17" pos:column="25">-<pos:position pos:line="17" pos:column="26"/></operator> <literal type="number" pos:line="17" pos:column="27">1<pos:position pos:line="17" pos:column="28"/></literal></expr>]<pos:position pos:line="17" pos:column="29"/></index></name> <operator pos:line="17" pos:column="30">=<pos:position pos:line="17" pos:column="31"/></operator> <literal type="number" pos:line="17" pos:column="32">0<pos:position pos:line="17" pos:column="33"/></literal></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">entity_id_string<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <call><name pos:line="19" pos:column="22">ipmi_entity_get_entity_id_string<pos:position pos:line="19" pos:column="54"/></name><argument_list pos:line="19" pos:column="54">(<argument><expr><name pos:line="19" pos:column="55">ent<pos:position pos:line="19" pos:column="58"/></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="60"/></expr_stmt>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">entity_id_string<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">==<pos:position pos:line="21" pos:column="26"/></operator> <name pos:line="21" pos:column="27">NULL<pos:position pos:line="21" pos:column="31"/></name></expr>)<pos:position pos:line="21" pos:column="32"/></condition><then pos:line="21" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="5">sstrncpy<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">sensor_name<pos:position pos:line="22" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="27">buffer<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="35">sizeof<argument_list pos:line="22" pos:column="41">(<argument><expr><name pos:line="22" pos:column="42">sensor_name<pos:position pos:line="22" pos:column="53"/></name></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt></block></then>
  <else pos:line="23" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">ssnprintf<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><name pos:line="24" pos:column="15">sensor_name<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="28">sizeof<argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">sensor_name<pos:position pos:line="24" pos:column="46"/></name></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="49">"%s %s"<pos:position pos:line="24" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="58">buffer<pos:position pos:line="24" pos:column="64"/></name></expr></argument>,
              <argument><expr><name pos:line="25" pos:column="15">entity_id_string<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">sstrncpy<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name pos:line="27" pos:column="12">buffer<pos:position pos:line="27" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="20">sensor_name<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="33">sizeof<argument_list pos:line="27" pos:column="39">(<argument><expr><name pos:line="27" pos:column="40">buffer<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name pos:line="28" pos:column="3">sensor_name_ptr<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <call><name pos:line="28" pos:column="21">strstr<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">buffer<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="36">")."<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">sensor_name_ptr<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">!=<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="26">NULL<pos:position pos:line="29" pos:column="30"/></name></expr>)<pos:position pos:line="29" pos:column="31"/></condition><then pos:line="29" pos:column="31"> <block pos:line="29" pos:column="32">{
    <comment type="block" pos:line="30" pos:column="5">/* If name is something like "foo (123).bar",
     * change that to "bar (123)".
     * Both, sensor_name_ptr and sensor_id_ptr point to memory within the
     * `buffer' array, which holds a copy of the current `sensor_name'. */</comment>
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">char<pos:position pos:line="34" pos:column="9"/></name> <modifier pos:line="34" pos:column="10">*<pos:position pos:line="34" pos:column="11"/></modifier></type><name pos:line="34" pos:column="11">sensor_id_ptr<pos:position pos:line="34" pos:column="24"/></name></decl>;<pos:position pos:line="34" pos:column="25"/></decl_stmt>

    <comment type="block" pos:line="36" pos:column="5">/* `sensor_name_ptr' points to ").bar". */</comment>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">sensor_name_ptr<pos:position pos:line="37" pos:column="20"/></name><index pos:line="37" pos:column="20">[<expr><literal type="number" pos:line="37" pos:column="21">1<pos:position pos:line="37" pos:column="22"/></literal></expr>]<pos:position pos:line="37" pos:column="23"/></index></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <literal type="number" pos:line="37" pos:column="26">0<pos:position pos:line="37" pos:column="27"/></literal></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
    <comment type="block" pos:line="38" pos:column="5">/* `buffer' holds "foo (123)\0bar\0". */</comment>
    <expr_stmt><expr><name pos:line="39" pos:column="5">sensor_name_ptr<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">+=<pos:position pos:line="39" pos:column="23"/></operator> <literal type="number" pos:line="39" pos:column="24">2<pos:position pos:line="39" pos:column="25"/></literal></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
    <comment type="block" pos:line="40" pos:column="5">/* `sensor_name_ptr' now points to "bar". */</comment>

    <expr_stmt><expr><name pos:line="42" pos:column="5">sensor_id_ptr<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">=<pos:position pos:line="42" pos:column="20"/></operator> <call><name pos:line="42" pos:column="21">strstr<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">buffer<pos:position pos:line="42" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="36">"("<pos:position pos:line="42" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">sensor_id_ptr<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">!=<pos:position pos:line="43" pos:column="25"/></operator> <name pos:line="43" pos:column="26">NULL<pos:position pos:line="43" pos:column="30"/></name></expr>)<pos:position pos:line="43" pos:column="31"/></condition><then pos:line="43" pos:column="31"> <block pos:line="43" pos:column="32">{
      <comment type="block" pos:line="44" pos:column="7">/* `sensor_id_ptr' now points to "(123)". */</comment>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">ssnprintf<pos:position pos:line="45" pos:column="16"/></name><argument_list pos:line="45" pos:column="16">(<argument><expr><name pos:line="45" pos:column="17">sensor_name<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="30">sizeof<argument_list pos:line="45" pos:column="36">(<argument><expr><name pos:line="45" pos:column="37">sensor_name<pos:position pos:line="45" pos:column="48"/></name></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="51">"%s %s"<pos:position pos:line="45" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="60">sensor_name_ptr<pos:position pos:line="45" pos:column="75"/></name></expr></argument>,
                <argument><expr><name pos:line="46" pos:column="17">sensor_id_ptr<pos:position pos:line="46" pos:column="30"/></name></expr></argument>)<pos:position pos:line="46" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="48" pos:column="5">/* else: don't touch sensor_name. */</comment>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="50" pos:column="3">sensor_name_ptr<pos:position pos:line="50" pos:column="18"/></name> <operator pos:line="50" pos:column="19">=<pos:position pos:line="50" pos:column="20"/></operator> <name pos:line="50" pos:column="21">sensor_name<pos:position pos:line="50" pos:column="32"/></name></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt>

  <comment type="block" pos:line="52" pos:column="3">/* Both `ignorelist' and `plugin_instance' may be NULL. */</comment>
  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><call><name pos:line="53" pos:column="7">ignorelist_match<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">ignorelist<pos:position pos:line="53" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="36">sensor_name_ptr<pos:position pos:line="53" pos:column="51"/></name></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></call> <operator pos:line="53" pos:column="53">!=<pos:position pos:line="53" pos:column="55"/></operator> <literal type="number" pos:line="53" pos:column="56">0<pos:position pos:line="53" pos:column="57"/></literal></expr>)<pos:position pos:line="53" pos:column="58"/></condition><then pos:line="53" pos:column="58">
    <block type="pseudo"><return pos:line="54" pos:column="5">return <expr><operator pos:line="54" pos:column="12">(<pos:position pos:line="54" pos:column="13"/></operator><literal type="number" pos:line="54" pos:column="13">0<pos:position pos:line="54" pos:column="14"/></literal><operator pos:line="54" pos:column="14">)<pos:position pos:line="54" pos:column="15"/></operator></expr>;<pos:position pos:line="54" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="56" pos:column="3">/* FIXME: Use rate unit or base unit to scale the value */</comment>

  <expr_stmt><expr><name pos:line="58" pos:column="3">sensor_type<pos:position pos:line="58" pos:column="14"/></name> <operator pos:line="58" pos:column="15">=<pos:position pos:line="58" pos:column="16"/></operator> <call><name pos:line="58" pos:column="17">ipmi_sensor_get_sensor_type<pos:position pos:line="58" pos:column="44"/></name><argument_list pos:line="58" pos:column="44">(<argument><expr><name pos:line="58" pos:column="45">sensor<pos:position pos:line="58" pos:column="51"/></name></expr></argument>)<pos:position pos:line="58" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="53"/></expr_stmt>
  <switch pos:line="59" pos:column="3">switch <condition pos:line="59" pos:column="10">(<expr><name pos:line="59" pos:column="11">sensor_type<pos:position pos:line="59" pos:column="22"/></name></expr>)<pos:position pos:line="59" pos:column="23"/></condition> <block pos:line="59" pos:column="24">{
  <case pos:line="60" pos:column="3">case <expr><name pos:line="60" pos:column="8">IPMI_SENSOR_TYPE_TEMPERATURE<pos:position pos:line="60" pos:column="36"/></name></expr>:<pos:position pos:line="60" pos:column="37"/></case>
    <expr_stmt><expr><name pos:line="61" pos:column="5">type<pos:position pos:line="61" pos:column="9"/></name> <operator pos:line="61" pos:column="10">=<pos:position pos:line="61" pos:column="11"/></operator> <literal type="string" pos:line="61" pos:column="12">"temperature"<pos:position pos:line="61" pos:column="25"/></literal></expr>;<pos:position pos:line="61" pos:column="26"/></expr_stmt>
    <break pos:line="62" pos:column="5">break;<pos:position pos:line="62" pos:column="11"/></break>

  <case pos:line="64" pos:column="3">case <expr><name pos:line="64" pos:column="8">IPMI_SENSOR_TYPE_VOLTAGE<pos:position pos:line="64" pos:column="32"/></name></expr>:<pos:position pos:line="64" pos:column="33"/></case>
    <expr_stmt><expr><name pos:line="65" pos:column="5">type<pos:position pos:line="65" pos:column="9"/></name> <operator pos:line="65" pos:column="10">=<pos:position pos:line="65" pos:column="11"/></operator> <literal type="string" pos:line="65" pos:column="12">"voltage"<pos:position pos:line="65" pos:column="21"/></literal></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt>
    <break pos:line="66" pos:column="5">break;<pos:position pos:line="66" pos:column="11"/></break>

  <case pos:line="68" pos:column="3">case <expr><name pos:line="68" pos:column="8">IPMI_SENSOR_TYPE_CURRENT<pos:position pos:line="68" pos:column="32"/></name></expr>:<pos:position pos:line="68" pos:column="33"/></case>
    <expr_stmt><expr><name pos:line="69" pos:column="5">type<pos:position pos:line="69" pos:column="9"/></name> <operator pos:line="69" pos:column="10">=<pos:position pos:line="69" pos:column="11"/></operator> <literal type="string" pos:line="69" pos:column="12">"current"<pos:position pos:line="69" pos:column="21"/></literal></expr>;<pos:position pos:line="69" pos:column="22"/></expr_stmt>
    <break pos:line="70" pos:column="5">break;<pos:position pos:line="70" pos:column="11"/></break>

  <case pos:line="72" pos:column="3">case <expr><name pos:line="72" pos:column="8">IPMI_SENSOR_TYPE_FAN<pos:position pos:line="72" pos:column="28"/></name></expr>:<pos:position pos:line="72" pos:column="29"/></case>
    <expr_stmt><expr><name pos:line="73" pos:column="5">type<pos:position pos:line="73" pos:column="9"/></name> <operator pos:line="73" pos:column="10">=<pos:position pos:line="73" pos:column="11"/></operator> <literal type="string" pos:line="73" pos:column="12">"fanspeed"<pos:position pos:line="73" pos:column="22"/></literal></expr>;<pos:position pos:line="73" pos:column="23"/></expr_stmt>
    <break pos:line="74" pos:column="5">break;<pos:position pos:line="74" pos:column="11"/></break>

  <default pos:line="76" pos:column="3">default:<pos:position pos:line="76" pos:column="11"/></default> <block pos:line="76" pos:column="12">{
    <decl_stmt><decl><type><specifier pos:line="77" pos:column="5">const<pos:position pos:line="77" pos:column="10"/></specifier> <name pos:line="77" pos:column="11">char<pos:position pos:line="77" pos:column="15"/></name> <modifier pos:line="77" pos:column="16">*<pos:position pos:line="77" pos:column="17"/></modifier></type><name pos:line="77" pos:column="17">sensor_type_str<pos:position pos:line="77" pos:column="32"/></name></decl>;<pos:position pos:line="77" pos:column="33"/></decl_stmt>

    <expr_stmt><expr><name pos:line="79" pos:column="5">sensor_type_str<pos:position pos:line="79" pos:column="20"/></name> <operator pos:line="79" pos:column="21">=<pos:position pos:line="79" pos:column="22"/></operator> <call><name pos:line="79" pos:column="23">ipmi_sensor_get_sensor_type_string<pos:position pos:line="79" pos:column="57"/></name><argument_list pos:line="79" pos:column="57">(<argument><expr><name pos:line="79" pos:column="58">sensor<pos:position pos:line="79" pos:column="64"/></name></expr></argument>)<pos:position pos:line="79" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">INFO<pos:position pos:line="80" pos:column="9"/></name><argument_list pos:line="80" pos:column="9">(<argument><expr><literal type="string" pos:line="80" pos:column="10">"ipmi plugin: sensor_list_add: Ignore sensor %s, "<pos:position pos:line="80" pos:column="60"/></literal>
         <literal type="string" pos:line="81" pos:column="10">"because I don't know how to handle its type (%#x, %s). "<pos:position pos:line="81" pos:column="67"/></literal>
         <literal type="string" pos:line="82" pos:column="10">"If you need this sensor, please file a bug report."<pos:position pos:line="82" pos:column="62"/></literal></expr></argument>,
         <argument><expr><name pos:line="83" pos:column="10">sensor_name_ptr<pos:position pos:line="83" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="27">sensor_type<pos:position pos:line="83" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="40">sensor_type_str<pos:position pos:line="83" pos:column="55"/></name></expr></argument>)<pos:position pos:line="83" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="57"/></expr_stmt>
    <return pos:line="84" pos:column="5">return <expr><operator pos:line="84" pos:column="12">(<pos:position pos:line="84" pos:column="13"/></operator><operator pos:line="84" pos:column="13">-<pos:position pos:line="84" pos:column="14"/></operator><literal type="number" pos:line="84" pos:column="14">1<pos:position pos:line="84" pos:column="15"/></literal><operator pos:line="84" pos:column="15">)<pos:position pos:line="84" pos:column="16"/></operator></expr>;<pos:position pos:line="84" pos:column="17"/></return>
  }<pos:position pos:line="85" pos:column="4"/></block>
  }<pos:position pos:line="86" pos:column="4"/></block></switch> <comment type="block" pos:line="86" pos:column="5">/* switch (sensor_type) */</comment>

  <expr_stmt><expr><call><name pos:line="88" pos:column="3">pthread_mutex_lock<pos:position pos:line="88" pos:column="21"/></name><argument_list pos:line="88" pos:column="21">(<argument><expr><operator pos:line="88" pos:column="22">&amp;<pos:position pos:line="88" pos:column="27"/></operator><name pos:line="88" pos:column="23">sensor_list_lock<pos:position pos:line="88" pos:column="39"/></name></expr></argument>)<pos:position pos:line="88" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><name pos:line="90" pos:column="3">list_prev<pos:position pos:line="90" pos:column="12"/></name> <operator pos:line="90" pos:column="13">=<pos:position pos:line="90" pos:column="14"/></operator> <name pos:line="90" pos:column="15">NULL<pos:position pos:line="90" pos:column="19"/></name></expr>;<pos:position pos:line="90" pos:column="20"/></expr_stmt>
  <for pos:line="91" pos:column="3">for <control pos:line="91" pos:column="7">(<init><expr><name pos:line="91" pos:column="8">list_item<pos:position pos:line="91" pos:column="17"/></name> <operator pos:line="91" pos:column="18">=<pos:position pos:line="91" pos:column="19"/></operator> <name pos:line="91" pos:column="20">sensor_list<pos:position pos:line="91" pos:column="31"/></name></expr>;<pos:position pos:line="91" pos:column="32"/></init> <condition><expr><name pos:line="91" pos:column="33">list_item<pos:position pos:line="91" pos:column="42"/></name> <operator pos:line="91" pos:column="43">!=<pos:position pos:line="91" pos:column="45"/></operator> <name pos:line="91" pos:column="46">NULL<pos:position pos:line="91" pos:column="50"/></name></expr>;<pos:position pos:line="91" pos:column="51"/></condition>
       <incr><expr><name pos:line="92" pos:column="8">list_item<pos:position pos:line="92" pos:column="17"/></name> <operator pos:line="92" pos:column="18">=<pos:position pos:line="92" pos:column="19"/></operator> <name><name pos:line="92" pos:column="20">list_item<pos:position pos:line="92" pos:column="29"/></name><operator pos:line="92" pos:column="29">-&gt;<pos:position pos:line="92" pos:column="34"/></operator><name pos:line="92" pos:column="31">next<pos:position pos:line="92" pos:column="35"/></name></name></expr></incr>)<pos:position pos:line="92" pos:column="36"/></control> <block pos:line="92" pos:column="37">{
    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><call><name pos:line="93" pos:column="9">ipmi_cmp_sensor_id<pos:position pos:line="93" pos:column="27"/></name><argument_list pos:line="93" pos:column="27">(<argument><expr><name pos:line="93" pos:column="28">sensor_id<pos:position pos:line="93" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="39">list_item<pos:position pos:line="93" pos:column="48"/></name><operator pos:line="93" pos:column="48">-&gt;<pos:position pos:line="93" pos:column="53"/></operator><name pos:line="93" pos:column="50">sensor_id<pos:position pos:line="93" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="60"/></argument_list></call> <operator pos:line="93" pos:column="61">==<pos:position pos:line="93" pos:column="63"/></operator> <literal type="number" pos:line="93" pos:column="64">0<pos:position pos:line="93" pos:column="65"/></literal></expr>)<pos:position pos:line="93" pos:column="66"/></condition><then pos:line="93" pos:column="66">
      <block type="pseudo"><break pos:line="94" pos:column="7">break;<pos:position pos:line="94" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="95" pos:column="5">list_prev<pos:position pos:line="95" pos:column="14"/></name> <operator pos:line="95" pos:column="15">=<pos:position pos:line="95" pos:column="16"/></operator> <name pos:line="95" pos:column="17">list_item<pos:position pos:line="95" pos:column="26"/></name></expr>;<pos:position pos:line="95" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="96" pos:column="4"/></block></for> <comment type="block" pos:line="96" pos:column="5">/* for (list_item) */</comment>

  <if pos:line="98" pos:column="3">if <condition pos:line="98" pos:column="6">(<expr><name pos:line="98" pos:column="7">list_item<pos:position pos:line="98" pos:column="16"/></name> <operator pos:line="98" pos:column="17">!=<pos:position pos:line="98" pos:column="19"/></operator> <name pos:line="98" pos:column="20">NULL<pos:position pos:line="98" pos:column="24"/></name></expr>)<pos:position pos:line="98" pos:column="25"/></condition><then pos:line="98" pos:column="25"> <block pos:line="98" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">pthread_mutex_unlock<pos:position pos:line="99" pos:column="25"/></name><argument_list pos:line="99" pos:column="25">(<argument><expr><operator pos:line="99" pos:column="26">&amp;<pos:position pos:line="99" pos:column="31"/></operator><name pos:line="99" pos:column="27">sensor_list_lock<pos:position pos:line="99" pos:column="43"/></name></expr></argument>)<pos:position pos:line="99" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="45"/></expr_stmt>
    <return pos:line="100" pos:column="5">return <expr><operator pos:line="100" pos:column="12">(<pos:position pos:line="100" pos:column="13"/></operator><literal type="number" pos:line="100" pos:column="13">0<pos:position pos:line="100" pos:column="14"/></literal><operator pos:line="100" pos:column="14">)<pos:position pos:line="100" pos:column="15"/></operator></expr>;<pos:position pos:line="100" pos:column="16"/></return>
  }<pos:position pos:line="101" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="103" pos:column="3">list_item<pos:position pos:line="103" pos:column="12"/></name> <operator pos:line="103" pos:column="13">=<pos:position pos:line="103" pos:column="14"/></operator> <operator pos:line="103" pos:column="15">(<pos:position pos:line="103" pos:column="16"/></operator><name pos:line="103" pos:column="16">c_ipmi_sensor_list_t<pos:position pos:line="103" pos:column="36"/></name> <operator pos:line="103" pos:column="37">*<pos:position pos:line="103" pos:column="38"/></operator><operator pos:line="103" pos:column="38">)<pos:position pos:line="103" pos:column="39"/></operator><call><name pos:line="103" pos:column="39">calloc<pos:position pos:line="103" pos:column="45"/></name><argument_list pos:line="103" pos:column="45">(<argument><expr><literal type="number" pos:line="103" pos:column="46">1<pos:position pos:line="103" pos:column="47"/></literal></expr></argument>, <argument><expr><sizeof pos:line="103" pos:column="49">sizeof<argument_list pos:line="103" pos:column="55">(<argument><expr><name pos:line="103" pos:column="56">c_ipmi_sensor_list_t<pos:position pos:line="103" pos:column="76"/></name></expr></argument>)<pos:position pos:line="103" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="103" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="79"/></expr_stmt>
  <if pos:line="104" pos:column="3">if <condition pos:line="104" pos:column="6">(<expr><name pos:line="104" pos:column="7">list_item<pos:position pos:line="104" pos:column="16"/></name> <operator pos:line="104" pos:column="17">==<pos:position pos:line="104" pos:column="19"/></operator> <name pos:line="104" pos:column="20">NULL<pos:position pos:line="104" pos:column="24"/></name></expr>)<pos:position pos:line="104" pos:column="25"/></condition><then pos:line="104" pos:column="25"> <block pos:line="104" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="105" pos:column="5">pthread_mutex_unlock<pos:position pos:line="105" pos:column="25"/></name><argument_list pos:line="105" pos:column="25">(<argument><expr><operator pos:line="105" pos:column="26">&amp;<pos:position pos:line="105" pos:column="31"/></operator><name pos:line="105" pos:column="27">sensor_list_lock<pos:position pos:line="105" pos:column="43"/></name></expr></argument>)<pos:position pos:line="105" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="45"/></expr_stmt>
    <return pos:line="106" pos:column="5">return <expr><operator pos:line="106" pos:column="12">(<pos:position pos:line="106" pos:column="13"/></operator><operator pos:line="106" pos:column="13">-<pos:position pos:line="106" pos:column="14"/></operator><literal type="number" pos:line="106" pos:column="14">1<pos:position pos:line="106" pos:column="15"/></literal><operator pos:line="106" pos:column="15">)<pos:position pos:line="106" pos:column="16"/></operator></expr>;<pos:position pos:line="106" pos:column="17"/></return>
  }<pos:position pos:line="107" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="109" pos:column="3">list_item<pos:position pos:line="109" pos:column="12"/></name><operator pos:line="109" pos:column="12">-&gt;<pos:position pos:line="109" pos:column="17"/></operator><name pos:line="109" pos:column="14">sensor_id<pos:position pos:line="109" pos:column="23"/></name></name> <operator pos:line="109" pos:column="24">=<pos:position pos:line="109" pos:column="25"/></operator> <call><name pos:line="109" pos:column="26">ipmi_sensor_convert_to_id<pos:position pos:line="109" pos:column="51"/></name><argument_list pos:line="109" pos:column="51">(<argument><expr><name pos:line="109" pos:column="52">sensor<pos:position pos:line="109" pos:column="58"/></name></expr></argument>)<pos:position pos:line="109" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="60"/></expr_stmt>

  <if pos:line="111" pos:column="3">if <condition pos:line="111" pos:column="6">(<expr><name pos:line="111" pos:column="7">list_prev<pos:position pos:line="111" pos:column="16"/></name> <operator pos:line="111" pos:column="17">!=<pos:position pos:line="111" pos:column="19"/></operator> <name pos:line="111" pos:column="20">NULL<pos:position pos:line="111" pos:column="24"/></name></expr>)<pos:position pos:line="111" pos:column="25"/></condition><then pos:line="111" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="112" pos:column="5">list_prev<pos:position pos:line="112" pos:column="14"/></name><operator pos:line="112" pos:column="14">-&gt;<pos:position pos:line="112" pos:column="19"/></operator><name pos:line="112" pos:column="16">next<pos:position pos:line="112" pos:column="20"/></name></name> <operator pos:line="112" pos:column="21">=<pos:position pos:line="112" pos:column="22"/></operator> <name pos:line="112" pos:column="23">list_item<pos:position pos:line="112" pos:column="32"/></name></expr>;<pos:position pos:line="112" pos:column="33"/></expr_stmt></block></then>
  <else pos:line="113" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="114" pos:column="5">sensor_list<pos:position pos:line="114" pos:column="16"/></name> <operator pos:line="114" pos:column="17">=<pos:position pos:line="114" pos:column="18"/></operator> <name pos:line="114" pos:column="19">list_item<pos:position pos:line="114" pos:column="28"/></name></expr>;<pos:position pos:line="114" pos:column="29"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="116" pos:column="3">sstrncpy<pos:position pos:line="116" pos:column="11"/></name><argument_list pos:line="116" pos:column="11">(<argument><expr><name><name pos:line="116" pos:column="12">list_item<pos:position pos:line="116" pos:column="21"/></name><operator pos:line="116" pos:column="21">-&gt;<pos:position pos:line="116" pos:column="26"/></operator><name pos:line="116" pos:column="23">sensor_name<pos:position pos:line="116" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="36">sensor_name_ptr<pos:position pos:line="116" pos:column="51"/></name></expr></argument>,
           <argument><expr><sizeof pos:line="117" pos:column="12">sizeof<argument_list pos:line="117" pos:column="18">(<argument><expr><name><name pos:line="117" pos:column="19">list_item<pos:position pos:line="117" pos:column="28"/></name><operator pos:line="117" pos:column="28">-&gt;<pos:position pos:line="117" pos:column="33"/></operator><name pos:line="117" pos:column="30">sensor_name<pos:position pos:line="117" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="117" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="118" pos:column="3">sstrncpy<pos:position pos:line="118" pos:column="11"/></name><argument_list pos:line="118" pos:column="11">(<argument><expr><name><name pos:line="118" pos:column="12">list_item<pos:position pos:line="118" pos:column="21"/></name><operator pos:line="118" pos:column="21">-&gt;<pos:position pos:line="118" pos:column="26"/></operator><name pos:line="118" pos:column="23">sensor_type<pos:position pos:line="118" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="36">type<pos:position pos:line="118" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="118" pos:column="42">sizeof<argument_list pos:line="118" pos:column="48">(<argument><expr><name><name pos:line="118" pos:column="49">list_item<pos:position pos:line="118" pos:column="58"/></name><operator pos:line="118" pos:column="58">-&gt;<pos:position pos:line="118" pos:column="63"/></operator><name pos:line="118" pos:column="60">sensor_type<pos:position pos:line="118" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="118" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="74"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="120" pos:column="3">pthread_mutex_unlock<pos:position pos:line="120" pos:column="23"/></name><argument_list pos:line="120" pos:column="23">(<argument><expr><operator pos:line="120" pos:column="24">&amp;<pos:position pos:line="120" pos:column="29"/></operator><name pos:line="120" pos:column="25">sensor_list_lock<pos:position pos:line="120" pos:column="41"/></name></expr></argument>)<pos:position pos:line="120" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="43"/></expr_stmt>

  <if pos:line="122" pos:column="3">if <condition pos:line="122" pos:column="6">(<expr><name pos:line="122" pos:column="7">c_ipmi_nofiy_add<pos:position pos:line="122" pos:column="23"/></name> <operator pos:line="122" pos:column="24">&amp;&amp;<pos:position pos:line="122" pos:column="34"/></operator> <operator pos:line="122" pos:column="27">(<pos:position pos:line="122" pos:column="28"/></operator><name pos:line="122" pos:column="28">c_ipmi_init_in_progress<pos:position pos:line="122" pos:column="51"/></name> <operator pos:line="122" pos:column="52">==<pos:position pos:line="122" pos:column="54"/></operator> <literal type="number" pos:line="122" pos:column="55">0<pos:position pos:line="122" pos:column="56"/></literal><operator pos:line="122" pos:column="56">)<pos:position pos:line="122" pos:column="57"/></operator></expr>)<pos:position pos:line="122" pos:column="58"/></condition><then pos:line="122" pos:column="58"> <block pos:line="122" pos:column="59">{
    <decl_stmt><decl><type><name pos:line="123" pos:column="5">notification_t<pos:position pos:line="123" pos:column="19"/></name></type> <name pos:line="123" pos:column="20">n<pos:position pos:line="123" pos:column="21"/></name> <init pos:line="123" pos:column="22">= <expr><block pos:line="123" pos:column="24">{<expr><name pos:line="123" pos:column="25">NOTIF_OKAY<pos:position pos:line="123" pos:column="35"/></name></expr>, <expr><call><name pos:line="123" pos:column="37">cdtime<pos:position pos:line="123" pos:column="43"/></name><argument_list pos:line="123" pos:column="43">()<pos:position pos:line="123" pos:column="45"/></argument_list></call></expr>, <expr><literal type="string" pos:line="123" pos:column="47">""<pos:position pos:line="123" pos:column="49"/></literal></expr>, <expr><literal type="string" pos:line="123" pos:column="51">""<pos:position pos:line="123" pos:column="53"/></literal></expr>, <expr><literal type="string" pos:line="123" pos:column="55">"ipmi"<pos:position pos:line="123" pos:column="61"/></literal></expr>, <expr><literal type="string" pos:line="123" pos:column="63">""<pos:position pos:line="123" pos:column="65"/></literal></expr>, <expr><literal type="string" pos:line="123" pos:column="67">""<pos:position pos:line="123" pos:column="69"/></literal></expr>, <expr><literal type="string" pos:line="123" pos:column="71">""<pos:position pos:line="123" pos:column="73"/></literal></expr>, <expr><name pos:line="123" pos:column="75">NULL<pos:position pos:line="123" pos:column="79"/></name></expr>}<pos:position pos:line="123" pos:column="80"/></block></expr></init></decl>;<pos:position pos:line="123" pos:column="81"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="125" pos:column="5">sstrncpy<pos:position pos:line="125" pos:column="13"/></name><argument_list pos:line="125" pos:column="13">(<argument><expr><name><name pos:line="125" pos:column="14">n<pos:position pos:line="125" pos:column="15"/></name><operator pos:line="125" pos:column="15">.<pos:position pos:line="125" pos:column="16"/></operator><name pos:line="125" pos:column="16">host<pos:position pos:line="125" pos:column="20"/></name></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="22">hostname_g<pos:position pos:line="125" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="125" pos:column="34">sizeof<argument_list pos:line="125" pos:column="40">(<argument><expr><name><name pos:line="125" pos:column="41">n<pos:position pos:line="125" pos:column="42"/></name><operator pos:line="125" pos:column="42">.<pos:position pos:line="125" pos:column="43"/></operator><name pos:line="125" pos:column="43">host<pos:position pos:line="125" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="125" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="126" pos:column="5">sstrncpy<pos:position pos:line="126" pos:column="13"/></name><argument_list pos:line="126" pos:column="13">(<argument><expr><name><name pos:line="126" pos:column="14">n<pos:position pos:line="126" pos:column="15"/></name><operator pos:line="126" pos:column="15">.<pos:position pos:line="126" pos:column="16"/></operator><name pos:line="126" pos:column="16">type_instance<pos:position pos:line="126" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="31">list_item<pos:position pos:line="126" pos:column="40"/></name><operator pos:line="126" pos:column="40">-&gt;<pos:position pos:line="126" pos:column="45"/></operator><name pos:line="126" pos:column="42">sensor_name<pos:position pos:line="126" pos:column="53"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="126" pos:column="55">sizeof<argument_list pos:line="126" pos:column="61">(<argument><expr><name><name pos:line="126" pos:column="62">n<pos:position pos:line="126" pos:column="63"/></name><operator pos:line="126" pos:column="63">.<pos:position pos:line="126" pos:column="64"/></operator><name pos:line="126" pos:column="64">type_instance<pos:position pos:line="126" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="126" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="127" pos:column="5">sstrncpy<pos:position pos:line="127" pos:column="13"/></name><argument_list pos:line="127" pos:column="13">(<argument><expr><name><name pos:line="127" pos:column="14">n<pos:position pos:line="127" pos:column="15"/></name><operator pos:line="127" pos:column="15">.<pos:position pos:line="127" pos:column="16"/></operator><name pos:line="127" pos:column="16">type<pos:position pos:line="127" pos:column="20"/></name></name></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="22">list_item<pos:position pos:line="127" pos:column="31"/></name><operator pos:line="127" pos:column="31">-&gt;<pos:position pos:line="127" pos:column="36"/></operator><name pos:line="127" pos:column="33">sensor_type<pos:position pos:line="127" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="127" pos:column="46">sizeof<argument_list pos:line="127" pos:column="52">(<argument><expr><name><name pos:line="127" pos:column="53">n<pos:position pos:line="127" pos:column="54"/></name><operator pos:line="127" pos:column="54">.<pos:position pos:line="127" pos:column="55"/></operator><name pos:line="127" pos:column="55">type<pos:position pos:line="127" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="127" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="128" pos:column="5">ssnprintf<pos:position pos:line="128" pos:column="14"/></name><argument_list pos:line="128" pos:column="14">(<argument><expr><name><name pos:line="128" pos:column="15">n<pos:position pos:line="128" pos:column="16"/></name><operator pos:line="128" pos:column="16">.<pos:position pos:line="128" pos:column="17"/></operator><name pos:line="128" pos:column="17">message<pos:position pos:line="128" pos:column="24"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="128" pos:column="26">sizeof<argument_list pos:line="128" pos:column="32">(<argument><expr><name><name pos:line="128" pos:column="33">n<pos:position pos:line="128" pos:column="34"/></name><operator pos:line="128" pos:column="34">.<pos:position pos:line="128" pos:column="35"/></operator><name pos:line="128" pos:column="35">message<pos:position pos:line="128" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="45">"sensor %s added"<pos:position pos:line="128" pos:column="62"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="129" pos:column="15">list_item<pos:position pos:line="129" pos:column="24"/></name><operator pos:line="129" pos:column="24">-&gt;<pos:position pos:line="129" pos:column="29"/></operator><name pos:line="129" pos:column="26">sensor_name<pos:position pos:line="129" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="131" pos:column="5">plugin_dispatch_notification<pos:position pos:line="131" pos:column="33"/></name><argument_list pos:line="131" pos:column="33">(<argument><expr><operator pos:line="131" pos:column="34">&amp;<pos:position pos:line="131" pos:column="39"/></operator><name pos:line="131" pos:column="35">n<pos:position pos:line="131" pos:column="36"/></name></expr></argument>)<pos:position pos:line="131" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="132" pos:column="4"/></block></then></if>

  <return pos:line="134" pos:column="3">return <expr><operator pos:line="134" pos:column="10">(<pos:position pos:line="134" pos:column="11"/></operator><literal type="number" pos:line="134" pos:column="11">0<pos:position pos:line="134" pos:column="12"/></literal><operator pos:line="134" pos:column="12">)<pos:position pos:line="134" pos:column="13"/></operator></expr>;<pos:position pos:line="134" pos:column="14"/></return>
}<pos:position pos:line="135" pos:column="2"/></block></function></unit>

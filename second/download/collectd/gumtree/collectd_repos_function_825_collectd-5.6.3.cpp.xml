<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_825_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">bind_xml_read_timestamp<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">xpath_expression<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="66">/* {{{ */</comment>
                                   <parameter><decl><type><name pos:line="2" pos:column="36">xmlDoc<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">doc<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">xmlXPathContext<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">xpathCtx<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="3" pos:column="36">time_t<pos:position pos:line="3" pos:column="42"/></name> <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier></type><name pos:line="3" pos:column="44">ret_value<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="54"/></parameter_list> <block pos:line="3" pos:column="55">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">xmlXPathObject<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">xpathObj<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">NULL<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">xmlNode<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">node<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">str_ptr<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">tmp<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">tm<pos:position pos:line="8" pos:column="12"/></name></name></type> <name pos:line="8" pos:column="13">tm<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><block pos:line="8" pos:column="18">{<expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr>}<pos:position pos:line="8" pos:column="21"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">xpathObj<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <macro><name pos:line="10" pos:column="14">xmlXPathEvalExpression<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">(<argument pos:line="10" pos:column="37">BAD_CAST xpath_expression<pos:position pos:line="10" pos:column="62"/></argument>, <argument pos:line="10" pos:column="64">xpathCtx<pos:position pos:line="10" pos:column="72"/></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></macro></expr>;<pos:position pos:line="10" pos:column="74"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">xpathObj<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">==<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">NULL<pos:position pos:line="11" pos:column="23"/></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24"> <block pos:line="11" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"bind plugin: Unable to evaluate XPath expression `%s'."<pos:position pos:line="12" pos:column="67"/></literal></expr></argument>,
          <argument><expr><name pos:line="13" pos:column="11">xpath_expression<pos:position pos:line="13" pos:column="27"/></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><name><name pos:line="17" pos:column="8">xpathObj<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">nodesetval<pos:position pos:line="17" pos:column="28"/></name></name> <operator pos:line="17" pos:column="29">==<pos:position pos:line="17" pos:column="31"/></operator> <name pos:line="17" pos:column="32">NULL<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">)<pos:position pos:line="17" pos:column="37"/></operator> <operator pos:line="17" pos:column="38">||<pos:position pos:line="17" pos:column="40"/></operator> <operator pos:line="17" pos:column="41">(<pos:position pos:line="17" pos:column="42"/></operator><name><name pos:line="17" pos:column="42">xpathObj<pos:position pos:line="17" pos:column="50"/></name><operator pos:line="17" pos:column="50">-&gt;<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="52">nodesetval<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">-&gt;<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="64">nodeNr<pos:position pos:line="17" pos:column="70"/></name></name> <operator pos:line="17" pos:column="71">&lt;<pos:position pos:line="17" pos:column="75"/></operator> <literal type="number" pos:line="17" pos:column="73">1<pos:position pos:line="17" pos:column="74"/></literal><operator pos:line="17" pos:column="74">)<pos:position pos:line="17" pos:column="75"/></operator></expr>)<pos:position pos:line="17" pos:column="76"/></condition><then pos:line="17" pos:column="76"> <block pos:line="17" pos:column="77">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">xmlXPathFreeObject<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">xpathObj<pos:position pos:line="18" pos:column="32"/></name></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name><name pos:line="22" pos:column="7">xpathObj<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">nodesetval<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">-&gt;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="29">nodeNr<pos:position pos:line="22" pos:column="35"/></name></name> <operator pos:line="22" pos:column="36">!=<pos:position pos:line="22" pos:column="38"/></operator> <literal type="number" pos:line="22" pos:column="39">1<pos:position pos:line="22" pos:column="40"/></literal></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41"> <block pos:line="22" pos:column="42">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">NOTICE<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="string" pos:line="23" pos:column="12">"bind plugin: Evaluating the XPath expression `%s' returned "<pos:position pos:line="23" pos:column="73"/></literal>
           <literal type="string" pos:line="24" pos:column="12">"%i nodes. Only handling the first one."<pos:position pos:line="24" pos:column="52"/></literal></expr></argument>,
           <argument><expr><name pos:line="25" pos:column="12">xpath_expression<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="30">xpathObj<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">nodesetval<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">-&gt;<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="52">nodeNr<pos:position pos:line="25" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="28" pos:column="3">node<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <name><name pos:line="28" pos:column="10">xpathObj<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">nodesetval<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">nodeTab<pos:position pos:line="28" pos:column="39"/></name><index pos:line="28" pos:column="39">[<expr><literal type="number" pos:line="28" pos:column="40">0<pos:position pos:line="28" pos:column="41"/></literal></expr>]<pos:position pos:line="28" pos:column="42"/></index></name></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name><name pos:line="30" pos:column="7">node<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">xmlChildrenNode<pos:position pos:line="30" pos:column="28"/></name></name> <operator pos:line="30" pos:column="29">==<pos:position pos:line="30" pos:column="31"/></operator> <name pos:line="30" pos:column="32">NULL<pos:position pos:line="30" pos:column="36"/></name></expr>)<pos:position pos:line="30" pos:column="37"/></condition><then pos:line="30" pos:column="37"> <block pos:line="30" pos:column="38">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ERROR<pos:position pos:line="31" pos:column="10"/></name><argument_list pos:line="31" pos:column="10">(<argument><expr><literal type="string" pos:line="31" pos:column="11">"bind plugin: bind_xml_read_timestamp: "<pos:position pos:line="31" pos:column="51"/></literal>
          <literal type="string" pos:line="32" pos:column="11">"node-&gt;xmlChildrenNode == NULL"<pos:position pos:line="32" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">xmlXPathFreeObject<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">xpathObj<pos:position pos:line="33" pos:column="32"/></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><operator pos:line="34" pos:column="13">-<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal><operator pos:line="34" pos:column="15">)<pos:position pos:line="34" pos:column="16"/></operator></expr>;<pos:position pos:line="34" pos:column="17"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="37" pos:column="3">str_ptr<pos:position pos:line="37" pos:column="10"/></name> <operator pos:line="37" pos:column="11">=<pos:position pos:line="37" pos:column="12"/></operator> <operator pos:line="37" pos:column="13">(<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">char<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">*<pos:position pos:line="37" pos:column="20"/></operator><operator pos:line="37" pos:column="20">)<pos:position pos:line="37" pos:column="21"/></operator><call><name pos:line="37" pos:column="21">xmlNodeListGetString<pos:position pos:line="37" pos:column="41"/></name><argument_list pos:line="37" pos:column="41">(<argument><expr><name pos:line="37" pos:column="42">doc<pos:position pos:line="37" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="47">node<pos:position pos:line="37" pos:column="51"/></name><operator pos:line="37" pos:column="51">-&gt;<pos:position pos:line="37" pos:column="56"/></operator><name pos:line="37" pos:column="53">xmlChildrenNode<pos:position pos:line="37" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="70">1<pos:position pos:line="37" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="73"/></expr_stmt>
  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name pos:line="38" pos:column="7">str_ptr<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">==<pos:position pos:line="38" pos:column="17"/></operator> <name pos:line="38" pos:column="18">NULL<pos:position pos:line="38" pos:column="22"/></name></expr>)<pos:position pos:line="38" pos:column="23"/></condition><then pos:line="38" pos:column="23"> <block pos:line="38" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">ERROR<pos:position pos:line="39" pos:column="10"/></name><argument_list pos:line="39" pos:column="10">(<argument><expr><literal type="string" pos:line="39" pos:column="11">"bind plugin: bind_xml_read_timestamp: xmlNodeListGetString failed."<pos:position pos:line="39" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">xmlXPathFreeObject<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><name pos:line="40" pos:column="24">xpathObj<pos:position pos:line="40" pos:column="32"/></name></expr></argument>)<pos:position pos:line="40" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><operator pos:line="41" pos:column="13">-<pos:position pos:line="41" pos:column="14"/></operator><literal type="number" pos:line="41" pos:column="14">1<pos:position pos:line="41" pos:column="15"/></literal><operator pos:line="41" pos:column="15">)<pos:position pos:line="41" pos:column="16"/></operator></expr>;<pos:position pos:line="41" pos:column="17"/></return>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="44" pos:column="3">tmp<pos:position pos:line="44" pos:column="6"/></name> <operator pos:line="44" pos:column="7">=<pos:position pos:line="44" pos:column="8"/></operator> <call><name pos:line="44" pos:column="9">strptime<pos:position pos:line="44" pos:column="17"/></name><argument_list pos:line="44" pos:column="17">(<argument><expr><name pos:line="44" pos:column="18">str_ptr<pos:position pos:line="44" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="27">"%Y-%m-%dT%T"<pos:position pos:line="44" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="44" pos:column="42">&amp;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="43">tm<pos:position pos:line="44" pos:column="45"/></name></expr></argument>)<pos:position pos:line="44" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">xmlFree<pos:position pos:line="45" pos:column="10"/></name><argument_list pos:line="45" pos:column="10">(<argument><expr><name pos:line="45" pos:column="11">str_ptr<pos:position pos:line="45" pos:column="18"/></name></expr></argument>)<pos:position pos:line="45" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="20"/></expr_stmt>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">tmp<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">==<pos:position pos:line="46" pos:column="13"/></operator> <name pos:line="46" pos:column="14">NULL<pos:position pos:line="46" pos:column="18"/></name></expr>)<pos:position pos:line="46" pos:column="19"/></condition><then pos:line="46" pos:column="19"> <block pos:line="46" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">ERROR<pos:position pos:line="47" pos:column="10"/></name><argument_list pos:line="47" pos:column="10">(<argument><expr><literal type="string" pos:line="47" pos:column="11">"bind plugin: bind_xml_read_timestamp: strptime failed."<pos:position pos:line="47" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">xmlXPathFreeObject<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><name pos:line="48" pos:column="24">xpathObj<pos:position pos:line="48" pos:column="32"/></name></expr></argument>)<pos:position pos:line="48" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt>
    <return pos:line="49" pos:column="5">return <expr><operator pos:line="49" pos:column="12">(<pos:position pos:line="49" pos:column="13"/></operator><operator pos:line="49" pos:column="13">-<pos:position pos:line="49" pos:column="14"/></operator><literal type="number" pos:line="49" pos:column="14">1<pos:position pos:line="49" pos:column="15"/></literal><operator pos:line="49" pos:column="15">)<pos:position pos:line="49" pos:column="16"/></operator></expr>;<pos:position pos:line="49" pos:column="17"/></return>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

<cpp:if pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">if<pos:position pos:line="52" pos:column="4"/></cpp:directive> <expr><name pos:line="52" pos:column="5">HAVE_TIMEGM<pos:position pos:line="52" pos:column="16"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="53" pos:column="3">time_t<pos:position pos:line="53" pos:column="9"/></name></type> <name pos:line="53" pos:column="10">t<pos:position pos:line="53" pos:column="11"/></name> <init pos:line="53" pos:column="12">= <expr><call><name pos:line="53" pos:column="14">timegm<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><operator pos:line="53" pos:column="21">&amp;<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="22">tm<pos:position pos:line="53" pos:column="24"/></name></expr></argument>)<pos:position pos:line="53" pos:column="25"/></argument_list></call></expr></init></decl>;<pos:position pos:line="53" pos:column="26"/></decl_stmt>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><name pos:line="54" pos:column="7">t<pos:position pos:line="54" pos:column="8"/></name> <operator pos:line="54" pos:column="9">==<pos:position pos:line="54" pos:column="11"/></operator> <operator pos:line="54" pos:column="12">(<pos:position pos:line="54" pos:column="13"/></operator><operator pos:line="54" pos:column="13">(<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="14">time_t<pos:position pos:line="54" pos:column="20"/></name><operator pos:line="54" pos:column="20">)<pos:position pos:line="54" pos:column="21"/></operator><operator pos:line="54" pos:column="21">-<pos:position pos:line="54" pos:column="22"/></operator><literal type="number" pos:line="54" pos:column="22">1<pos:position pos:line="54" pos:column="23"/></literal><operator pos:line="54" pos:column="23">)<pos:position pos:line="54" pos:column="24"/></operator></expr>)<pos:position pos:line="54" pos:column="25"/></condition><then pos:line="54" pos:column="25"> <block pos:line="54" pos:column="26">{
    <decl_stmt><decl><type><name pos:line="55" pos:column="5">char<pos:position pos:line="55" pos:column="9"/></name></type> <name><name pos:line="55" pos:column="10">errbuf<pos:position pos:line="55" pos:column="16"/></name><index pos:line="55" pos:column="16">[<expr><literal type="number" pos:line="55" pos:column="17">1024<pos:position pos:line="55" pos:column="21"/></literal></expr>]<pos:position pos:line="55" pos:column="22"/></index></name></decl>;<pos:position pos:line="55" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">ERROR<pos:position pos:line="56" pos:column="10"/></name><argument_list pos:line="56" pos:column="10">(<argument><expr><literal type="string" pos:line="56" pos:column="11">"bind plugin: timegm() failed: %s"<pos:position pos:line="56" pos:column="45"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="57" pos:column="11">sstrerror<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">errno<pos:position pos:line="57" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="28">errbuf<pos:position pos:line="57" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="36">sizeof<argument_list pos:line="57" pos:column="42">(<argument><expr><name pos:line="57" pos:column="43">errbuf<pos:position pos:line="57" pos:column="49"/></name></expr></argument>)<pos:position pos:line="57" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="53"/></expr_stmt>
    <return pos:line="58" pos:column="5">return <expr><operator pos:line="58" pos:column="12">(<pos:position pos:line="58" pos:column="13"/></operator><operator pos:line="58" pos:column="13">-<pos:position pos:line="58" pos:column="14"/></operator><literal type="number" pos:line="58" pos:column="14">1<pos:position pos:line="58" pos:column="15"/></literal><operator pos:line="58" pos:column="15">)<pos:position pos:line="58" pos:column="16"/></operator></expr>;<pos:position pos:line="58" pos:column="17"/></return>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if>
  <expr_stmt><expr><operator pos:line="60" pos:column="3">*<pos:position pos:line="60" pos:column="4"/></operator><name pos:line="60" pos:column="4">ret_value<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">=<pos:position pos:line="60" pos:column="15"/></operator> <name pos:line="60" pos:column="16">t<pos:position pos:line="60" pos:column="17"/></name></expr>;<pos:position pos:line="60" pos:column="18"/></expr_stmt>
<cpp:else pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">else<pos:position pos:line="61" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name pos:line="62" pos:column="3">time_t<pos:position pos:line="62" pos:column="9"/></name></type> <name pos:line="62" pos:column="10">t<pos:position pos:line="62" pos:column="11"/></name> <init pos:line="62" pos:column="12">= <expr><call><name pos:line="62" pos:column="14">mktime<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><operator pos:line="62" pos:column="21">&amp;<pos:position pos:line="62" pos:column="26"/></operator><name pos:line="62" pos:column="22">tm<pos:position pos:line="62" pos:column="24"/></name></expr></argument>)<pos:position pos:line="62" pos:column="25"/></argument_list></call></expr></init></decl>;<pos:position pos:line="62" pos:column="26"/></decl_stmt>
  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><name pos:line="63" pos:column="7">t<pos:position pos:line="63" pos:column="8"/></name> <operator pos:line="63" pos:column="9">==<pos:position pos:line="63" pos:column="11"/></operator> <operator pos:line="63" pos:column="12">(<pos:position pos:line="63" pos:column="13"/></operator><operator pos:line="63" pos:column="13">(<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="14">time_t<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">)<pos:position pos:line="63" pos:column="21"/></operator><operator pos:line="63" pos:column="21">-<pos:position pos:line="63" pos:column="22"/></operator><literal type="number" pos:line="63" pos:column="22">1<pos:position pos:line="63" pos:column="23"/></literal><operator pos:line="63" pos:column="23">)<pos:position pos:line="63" pos:column="24"/></operator></expr>)<pos:position pos:line="63" pos:column="25"/></condition><then pos:line="63" pos:column="25"> <block pos:line="63" pos:column="26">{
    <decl_stmt><decl><type><name pos:line="64" pos:column="5">char<pos:position pos:line="64" pos:column="9"/></name></type> <name><name pos:line="64" pos:column="10">errbuf<pos:position pos:line="64" pos:column="16"/></name><index pos:line="64" pos:column="16">[<expr><literal type="number" pos:line="64" pos:column="17">1024<pos:position pos:line="64" pos:column="21"/></literal></expr>]<pos:position pos:line="64" pos:column="22"/></index></name></decl>;<pos:position pos:line="64" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">ERROR<pos:position pos:line="65" pos:column="10"/></name><argument_list pos:line="65" pos:column="10">(<argument><expr><literal type="string" pos:line="65" pos:column="11">"bind plugin: mktime() failed: %s"<pos:position pos:line="65" pos:column="45"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="66" pos:column="11">sstrerror<pos:position pos:line="66" pos:column="20"/></name><argument_list pos:line="66" pos:column="20">(<argument><expr><name pos:line="66" pos:column="21">errno<pos:position pos:line="66" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="28">errbuf<pos:position pos:line="66" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="36">sizeof<argument_list pos:line="66" pos:column="42">(<argument><expr><name pos:line="66" pos:column="43">errbuf<pos:position pos:line="66" pos:column="49"/></name></expr></argument>)<pos:position pos:line="66" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="53"/></expr_stmt>
    <return pos:line="67" pos:column="5">return <expr><operator pos:line="67" pos:column="12">(<pos:position pos:line="67" pos:column="13"/></operator><operator pos:line="67" pos:column="13">-<pos:position pos:line="67" pos:column="14"/></operator><literal type="number" pos:line="67" pos:column="14">1<pos:position pos:line="67" pos:column="15"/></literal><operator pos:line="67" pos:column="15">)<pos:position pos:line="67" pos:column="16"/></operator></expr>;<pos:position pos:line="67" pos:column="17"/></return>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="69" pos:column="3">/* mktime assumes that tm is local time. Luckily, it also sets timezone to
   * the offset used for the conversion, and we undo the conversion to convert
   * back to UTC. */</comment>
  <expr_stmt><expr><operator pos:line="72" pos:column="3">*<pos:position pos:line="72" pos:column="4"/></operator><name pos:line="72" pos:column="4">ret_value<pos:position pos:line="72" pos:column="13"/></name> <operator pos:line="72" pos:column="14">=<pos:position pos:line="72" pos:column="15"/></operator> <name pos:line="72" pos:column="16">t<pos:position pos:line="72" pos:column="17"/></name> <operator pos:line="72" pos:column="18">-<pos:position pos:line="72" pos:column="19"/></operator> <name pos:line="72" pos:column="20">timezone<pos:position pos:line="72" pos:column="28"/></name></expr>;<pos:position pos:line="72" pos:column="29"/></expr_stmt>
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="75" pos:column="3">xmlXPathFreeObject<pos:position pos:line="75" pos:column="21"/></name><argument_list pos:line="75" pos:column="21">(<argument><expr><name pos:line="75" pos:column="22">xpathObj<pos:position pos:line="75" pos:column="30"/></name></expr></argument>)<pos:position pos:line="75" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="32"/></expr_stmt>
  <return pos:line="76" pos:column="3">return <expr><operator pos:line="76" pos:column="10">(<pos:position pos:line="76" pos:column="11"/></operator><literal type="number" pos:line="76" pos:column="11">0<pos:position pos:line="76" pos:column="12"/></literal><operator pos:line="76" pos:column="12">)<pos:position pos:line="76" pos:column="13"/></operator></expr>;<pos:position pos:line="76" pos:column="14"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

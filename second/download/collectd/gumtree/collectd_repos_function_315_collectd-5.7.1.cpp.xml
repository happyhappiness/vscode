<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_315_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">kafka_config_topic<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">rd_kafka_conf_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">conf<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">oconfig_item_t<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">ci<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list> <comment type="block" pos:line="2" pos:column="52">/* {{{ */</comment>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">kafka_topic_context<pos:position pos:line="5" pos:column="29"/></name></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">tctx<pos:position pos:line="5" pos:column="35"/></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">key<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">val<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">callback_name<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><name pos:line="8" pos:column="22">DATA_MAX_NAME_LEN<pos:position pos:line="8" pos:column="39"/></name></expr>]<pos:position pos:line="8" pos:column="40"/></index></name></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">errbuf<pos:position pos:line="9" pos:column="14"/></name><index pos:line="9" pos:column="14">[<expr><literal type="number" pos:line="9" pos:column="15">1024<pos:position pos:line="9" pos:column="19"/></literal></expr>]<pos:position pos:line="9" pos:column="20"/></index></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">oconfig_item_t<pos:position pos:line="10" pos:column="17"/></name> <modifier pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></modifier></type><name pos:line="10" pos:column="19">child<pos:position pos:line="10" pos:column="24"/></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">rd_kafka_conf_res_t<pos:position pos:line="11" pos:column="22"/></name></type> <name pos:line="11" pos:column="23">ret<pos:position pos:line="11" pos:column="26"/></name></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">(<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">tctx<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">calloc<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><literal type="number" pos:line="13" pos:column="22">1<pos:position pos:line="13" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="25">sizeof<argument_list pos:line="13" pos:column="31">(<argument><expr><operator pos:line="13" pos:column="32">*<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">tctx<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call><operator pos:line="13" pos:column="39">)<pos:position pos:line="13" pos:column="40"/></operator> <operator pos:line="13" pos:column="41">==<pos:position pos:line="13" pos:column="43"/></operator> <name pos:line="13" pos:column="44">NULL<pos:position pos:line="13" pos:column="48"/></name></expr>)<pos:position pos:line="13" pos:column="49"/></condition><then pos:line="13" pos:column="49"> <block pos:line="13" pos:column="50">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ERROR<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><literal type="string" pos:line="14" pos:column="11">"write_kafka plugin: calloc failed."<pos:position pos:line="14" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
    <return pos:line="15" pos:column="5">return;<pos:position pos:line="15" pos:column="12"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="18" pos:column="3">tctx<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">escape_char<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <literal type="char" pos:line="18" pos:column="23">'.'<pos:position pos:line="18" pos:column="26"/></literal></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">tctx<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">store_rates<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <literal type="number" pos:line="19" pos:column="23">1<pos:position pos:line="19" pos:column="24"/></literal></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">tctx<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">format<pos:position pos:line="20" pos:column="15"/></name></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">KAFKA_FORMAT_JSON<pos:position pos:line="20" pos:column="35"/></name></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">tctx<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">key<pos:position pos:line="21" pos:column="12"/></name></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">NULL<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><operator pos:line="23" pos:column="7">(<pos:position pos:line="23" pos:column="8"/></operator><name><name pos:line="23" pos:column="8">tctx<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">kafka_conf<pos:position pos:line="23" pos:column="24"/></name></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <call><name pos:line="23" pos:column="27">rd_kafka_conf_dup<pos:position pos:line="23" pos:column="44"/></name><argument_list pos:line="23" pos:column="44">(<argument><expr><name pos:line="23" pos:column="45">conf<pos:position pos:line="23" pos:column="49"/></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call><operator pos:line="23" pos:column="50">)<pos:position pos:line="23" pos:column="51"/></operator> <operator pos:line="23" pos:column="52">==<pos:position pos:line="23" pos:column="54"/></operator> <name pos:line="23" pos:column="55">NULL<pos:position pos:line="23" pos:column="59"/></name></expr>)<pos:position pos:line="23" pos:column="60"/></condition><then pos:line="23" pos:column="60"> <block pos:line="23" pos:column="61">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">sfree<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><name pos:line="24" pos:column="11">tctx<pos:position pos:line="24" pos:column="15"/></name></expr></argument>)<pos:position pos:line="24" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">ERROR<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><literal type="string" pos:line="25" pos:column="11">"write_kafka plugin: cannot allocate memory for kafka config"<pos:position pos:line="25" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="74"/></expr_stmt>
    <return pos:line="26" pos:column="5">return;<pos:position pos:line="26" pos:column="12"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">HAVE_LIBRDKAFKA_LOG_CB<pos:position pos:line="29" pos:column="30"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">rd_kafka_conf_set_log_cb<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name><name pos:line="30" pos:column="28">tctx<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">-&gt;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="34">kafka_conf<pos:position pos:line="30" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">kafka_log<pos:position pos:line="30" pos:column="55"/></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><operator pos:line="33" pos:column="7">(<pos:position pos:line="33" pos:column="8"/></operator><name><name pos:line="33" pos:column="8">tctx<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">conf<pos:position pos:line="33" pos:column="18"/></name></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <call><name pos:line="33" pos:column="21">rd_kafka_topic_conf_new<pos:position pos:line="33" pos:column="44"/></name><argument_list pos:line="33" pos:column="44">()<pos:position pos:line="33" pos:column="46"/></argument_list></call><operator pos:line="33" pos:column="46">)<pos:position pos:line="33" pos:column="47"/></operator> <operator pos:line="33" pos:column="48">==<pos:position pos:line="33" pos:column="50"/></operator> <name pos:line="33" pos:column="51">NULL<pos:position pos:line="33" pos:column="55"/></name></expr>)<pos:position pos:line="33" pos:column="56"/></condition><then pos:line="33" pos:column="56"> <block pos:line="33" pos:column="57">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">rd_kafka_conf_destroy<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name><name pos:line="34" pos:column="27">tctx<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">-&gt;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="33">kafka_conf<pos:position pos:line="34" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">sfree<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><name pos:line="35" pos:column="11">tctx<pos:position pos:line="35" pos:column="15"/></name></expr></argument>)<pos:position pos:line="35" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">ERROR<pos:position pos:line="36" pos:column="10"/></name><argument_list pos:line="36" pos:column="10">(<argument><expr><literal type="string" pos:line="36" pos:column="11">"write_kafka plugin: cannot create topic configuration."<pos:position pos:line="36" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="69"/></expr_stmt>
    <return pos:line="37" pos:column="5">return;<pos:position pos:line="37" pos:column="12"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name><name pos:line="40" pos:column="7">ci<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="11">values_num<pos:position pos:line="40" pos:column="21"/></name></name> <operator pos:line="40" pos:column="22">!=<pos:position pos:line="40" pos:column="24"/></operator> <literal type="number" pos:line="40" pos:column="25">1<pos:position pos:line="40" pos:column="26"/></literal></expr>)<pos:position pos:line="40" pos:column="27"/></condition><then pos:line="40" pos:column="27"> <block pos:line="40" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">WARNING<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><literal type="string" pos:line="41" pos:column="13">"kafka topic name needed."<pos:position pos:line="41" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>
    <goto pos:line="42" pos:column="5">goto <name pos:line="42" pos:column="10">errout<pos:position pos:line="42" pos:column="16"/></name>;<pos:position pos:line="42" pos:column="17"/></goto>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><name><name pos:line="45" pos:column="7">ci<pos:position pos:line="45" pos:column="9"/></name><operator pos:line="45" pos:column="9">-&gt;<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="11">values<pos:position pos:line="45" pos:column="17"/></name><index pos:line="45" pos:column="17">[<expr><literal type="number" pos:line="45" pos:column="18">0<pos:position pos:line="45" pos:column="19"/></literal></expr>]<pos:position pos:line="45" pos:column="20"/></index></name><operator pos:line="45" pos:column="20">.<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="21">type<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">!=<pos:position pos:line="45" pos:column="28"/></operator> <name pos:line="45" pos:column="29">OCONFIG_TYPE_STRING<pos:position pos:line="45" pos:column="48"/></name></expr>)<pos:position pos:line="45" pos:column="49"/></condition><then pos:line="45" pos:column="49"> <block pos:line="45" pos:column="50">{
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">WARNING<pos:position pos:line="46" pos:column="12"/></name><argument_list pos:line="46" pos:column="12">(<argument><expr><literal type="string" pos:line="46" pos:column="13">"kafka topic needs a string argument."<pos:position pos:line="46" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="53"/></expr_stmt>
    <goto pos:line="47" pos:column="5">goto <name pos:line="47" pos:column="10">errout<pos:position pos:line="47" pos:column="16"/></name>;<pos:position pos:line="47" pos:column="17"/></goto>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><operator pos:line="50" pos:column="7">(<pos:position pos:line="50" pos:column="8"/></operator><name><name pos:line="50" pos:column="8">tctx<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">-&gt;<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="14">topic_name<pos:position pos:line="50" pos:column="24"/></name></name> <operator pos:line="50" pos:column="25">=<pos:position pos:line="50" pos:column="26"/></operator> <call><name pos:line="50" pos:column="27">strdup<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><name><name pos:line="50" pos:column="34">ci<pos:position pos:line="50" pos:column="36"/></name><operator pos:line="50" pos:column="36">-&gt;<pos:position pos:line="50" pos:column="41"/></operator><name pos:line="50" pos:column="38">values<pos:position pos:line="50" pos:column="44"/></name><index pos:line="50" pos:column="44">[<expr><literal type="number" pos:line="50" pos:column="45">0<pos:position pos:line="50" pos:column="46"/></literal></expr>]<pos:position pos:line="50" pos:column="47"/></index></name><operator pos:line="50" pos:column="47">.<pos:position pos:line="50" pos:column="48"/></operator><name><name pos:line="50" pos:column="48">value<pos:position pos:line="50" pos:column="53"/></name><operator pos:line="50" pos:column="53">.<pos:position pos:line="50" pos:column="54"/></operator><name pos:line="50" pos:column="54">string<pos:position pos:line="50" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="61"/></argument_list></call><operator pos:line="50" pos:column="61">)<pos:position pos:line="50" pos:column="62"/></operator> <operator pos:line="50" pos:column="63">==<pos:position pos:line="50" pos:column="65"/></operator> <name pos:line="50" pos:column="66">NULL<pos:position pos:line="50" pos:column="70"/></name></expr>)<pos:position pos:line="50" pos:column="71"/></condition><then pos:line="50" pos:column="71"> <block pos:line="50" pos:column="72">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">ERROR<pos:position pos:line="51" pos:column="10"/></name><argument_list pos:line="51" pos:column="10">(<argument><expr><literal type="string" pos:line="51" pos:column="11">"write_kafka plugin: cannot copy topic name."<pos:position pos:line="51" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt>
    <goto pos:line="52" pos:column="5">goto <name pos:line="52" pos:column="10">errout<pos:position pos:line="52" pos:column="16"/></name>;<pos:position pos:line="52" pos:column="17"/></goto>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

  <for pos:line="55" pos:column="3">for <control pos:line="55" pos:column="7">(<init><decl><type><name pos:line="55" pos:column="8">int<pos:position pos:line="55" pos:column="11"/></name></type> <name pos:line="55" pos:column="12">i<pos:position pos:line="55" pos:column="13"/></name> <init pos:line="55" pos:column="14">= <expr><literal type="number" pos:line="55" pos:column="16">0<pos:position pos:line="55" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="55" pos:column="18"/></init> <condition><expr><name pos:line="55" pos:column="19">i<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">&lt;<pos:position pos:line="55" pos:column="25"/></operator> <name><name pos:line="55" pos:column="23">ci<pos:position pos:line="55" pos:column="25"/></name><operator pos:line="55" pos:column="25">-&gt;<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="27">children_num<pos:position pos:line="55" pos:column="39"/></name></name></expr>;<pos:position pos:line="55" pos:column="40"/></condition> <incr><expr><name pos:line="55" pos:column="41">i<pos:position pos:line="55" pos:column="42"/></name><operator pos:line="55" pos:column="42">++<pos:position pos:line="55" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="55" pos:column="45"/></control> <block pos:line="55" pos:column="46">{
    <comment type="block" pos:line="56" pos:column="5">/*
     * The code here could be simplified but makes room
     * for easy adding of new options later on.
     */</comment>
    <expr_stmt><expr><name pos:line="60" pos:column="5">child<pos:position pos:line="60" pos:column="10"/></name> <operator pos:line="60" pos:column="11">=<pos:position pos:line="60" pos:column="12"/></operator> <operator pos:line="60" pos:column="13">&amp;<pos:position pos:line="60" pos:column="18"/></operator><name><name pos:line="60" pos:column="14">ci<pos:position pos:line="60" pos:column="16"/></name><operator pos:line="60" pos:column="16">-&gt;<pos:position pos:line="60" pos:column="21"/></operator><name pos:line="60" pos:column="18">children<pos:position pos:line="60" pos:column="26"/></name><index pos:line="60" pos:column="26">[<expr><name pos:line="60" pos:column="27">i<pos:position pos:line="60" pos:column="28"/></name></expr>]<pos:position pos:line="60" pos:column="29"/></index></name></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="61" pos:column="5">status<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <literal type="number" pos:line="61" pos:column="14">0<pos:position pos:line="61" pos:column="15"/></literal></expr>;<pos:position pos:line="61" pos:column="16"/></expr_stmt>

    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><call><name pos:line="63" pos:column="9">strcasecmp<pos:position pos:line="63" pos:column="19"/></name><argument_list pos:line="63" pos:column="19">(<argument><expr><literal type="string" pos:line="63" pos:column="20">"Property"<pos:position pos:line="63" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="32">child<pos:position pos:line="63" pos:column="37"/></name><operator pos:line="63" pos:column="37">-&gt;<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="39">key<pos:position pos:line="63" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="43"/></argument_list></call> <operator pos:line="63" pos:column="44">==<pos:position pos:line="63" pos:column="46"/></operator> <literal type="number" pos:line="63" pos:column="47">0<pos:position pos:line="63" pos:column="48"/></literal></expr>)<pos:position pos:line="63" pos:column="49"/></condition><then pos:line="63" pos:column="49"> <block pos:line="63" pos:column="50">{
      <if pos:line="64" pos:column="7">if <condition pos:line="64" pos:column="10">(<expr><name><name pos:line="64" pos:column="11">child<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">-&gt;<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="18">values_num<pos:position pos:line="64" pos:column="28"/></name></name> <operator pos:line="64" pos:column="29">!=<pos:position pos:line="64" pos:column="31"/></operator> <literal type="number" pos:line="64" pos:column="32">2<pos:position pos:line="64" pos:column="33"/></literal></expr>)<pos:position pos:line="64" pos:column="34"/></condition><then pos:line="64" pos:column="34"> <block pos:line="64" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">WARNING<pos:position pos:line="65" pos:column="16"/></name><argument_list pos:line="65" pos:column="16">(<argument><expr><literal type="string" pos:line="65" pos:column="17">"kafka properties need both a key and a value."<pos:position pos:line="65" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="66"/></expr_stmt>
        <goto pos:line="66" pos:column="9">goto <name pos:line="66" pos:column="14">errout<pos:position pos:line="66" pos:column="20"/></name>;<pos:position pos:line="66" pos:column="21"/></goto>
      }<pos:position pos:line="67" pos:column="8"/></block></then></if>
      <if pos:line="68" pos:column="7">if <condition pos:line="68" pos:column="10">(<expr><name><name pos:line="68" pos:column="11">child<pos:position pos:line="68" pos:column="16"/></name><operator pos:line="68" pos:column="16">-&gt;<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="18">values<pos:position pos:line="68" pos:column="24"/></name><index pos:line="68" pos:column="24">[<expr><literal type="number" pos:line="68" pos:column="25">0<pos:position pos:line="68" pos:column="26"/></literal></expr>]<pos:position pos:line="68" pos:column="27"/></index></name><operator pos:line="68" pos:column="27">.<pos:position pos:line="68" pos:column="28"/></operator><name pos:line="68" pos:column="28">type<pos:position pos:line="68" pos:column="32"/></name> <operator pos:line="68" pos:column="33">!=<pos:position pos:line="68" pos:column="35"/></operator> <name pos:line="68" pos:column="36">OCONFIG_TYPE_STRING<pos:position pos:line="68" pos:column="55"/></name> <operator pos:line="68" pos:column="56">||<pos:position pos:line="68" pos:column="58"/></operator>
          <name><name pos:line="69" pos:column="11">child<pos:position pos:line="69" pos:column="16"/></name><operator pos:line="69" pos:column="16">-&gt;<pos:position pos:line="69" pos:column="21"/></operator><name pos:line="69" pos:column="18">values<pos:position pos:line="69" pos:column="24"/></name><index pos:line="69" pos:column="24">[<expr><literal type="number" pos:line="69" pos:column="25">1<pos:position pos:line="69" pos:column="26"/></literal></expr>]<pos:position pos:line="69" pos:column="27"/></index></name><operator pos:line="69" pos:column="27">.<pos:position pos:line="69" pos:column="28"/></operator><name pos:line="69" pos:column="28">type<pos:position pos:line="69" pos:column="32"/></name> <operator pos:line="69" pos:column="33">!=<pos:position pos:line="69" pos:column="35"/></operator> <name pos:line="69" pos:column="36">OCONFIG_TYPE_STRING<pos:position pos:line="69" pos:column="55"/></name></expr>)<pos:position pos:line="69" pos:column="56"/></condition><then pos:line="69" pos:column="56"> <block pos:line="69" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">WARNING<pos:position pos:line="70" pos:column="16"/></name><argument_list pos:line="70" pos:column="16">(<argument><expr><literal type="string" pos:line="70" pos:column="17">"kafka properties needs string arguments."<pos:position pos:line="70" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="61"/></expr_stmt>
        <goto pos:line="71" pos:column="9">goto <name pos:line="71" pos:column="14">errout<pos:position pos:line="71" pos:column="20"/></name>;<pos:position pos:line="71" pos:column="21"/></goto>
      }<pos:position pos:line="72" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="73" pos:column="7">key<pos:position pos:line="73" pos:column="10"/></name> <operator pos:line="73" pos:column="11">=<pos:position pos:line="73" pos:column="12"/></operator> <name><name pos:line="73" pos:column="13">child<pos:position pos:line="73" pos:column="18"/></name><operator pos:line="73" pos:column="18">-&gt;<pos:position pos:line="73" pos:column="23"/></operator><name pos:line="73" pos:column="20">values<pos:position pos:line="73" pos:column="26"/></name><index pos:line="73" pos:column="26">[<expr><literal type="number" pos:line="73" pos:column="27">0<pos:position pos:line="73" pos:column="28"/></literal></expr>]<pos:position pos:line="73" pos:column="29"/></index></name><operator pos:line="73" pos:column="29">.<pos:position pos:line="73" pos:column="30"/></operator><name><name pos:line="73" pos:column="30">value<pos:position pos:line="73" pos:column="35"/></name><operator pos:line="73" pos:column="35">.<pos:position pos:line="73" pos:column="36"/></operator><name pos:line="73" pos:column="36">string<pos:position pos:line="73" pos:column="42"/></name></name></expr>;<pos:position pos:line="73" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><name pos:line="74" pos:column="7">val<pos:position pos:line="74" pos:column="10"/></name> <operator pos:line="74" pos:column="11">=<pos:position pos:line="74" pos:column="12"/></operator> <name><name pos:line="74" pos:column="13">child<pos:position pos:line="74" pos:column="18"/></name><operator pos:line="74" pos:column="18">-&gt;<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="20">values<pos:position pos:line="74" pos:column="26"/></name><index pos:line="74" pos:column="26">[<expr><literal type="number" pos:line="74" pos:column="27">1<pos:position pos:line="74" pos:column="28"/></literal></expr>]<pos:position pos:line="74" pos:column="29"/></index></name><operator pos:line="74" pos:column="29">.<pos:position pos:line="74" pos:column="30"/></operator><name><name pos:line="74" pos:column="30">value<pos:position pos:line="74" pos:column="35"/></name><operator pos:line="74" pos:column="35">.<pos:position pos:line="74" pos:column="36"/></operator><name pos:line="74" pos:column="36">string<pos:position pos:line="74" pos:column="42"/></name></name></expr>;<pos:position pos:line="74" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><name pos:line="75" pos:column="7">ret<pos:position pos:line="75" pos:column="10"/></name> <operator pos:line="75" pos:column="11">=<pos:position pos:line="75" pos:column="12"/></operator>
          <call><name pos:line="76" pos:column="11">rd_kafka_topic_conf_set<pos:position pos:line="76" pos:column="34"/></name><argument_list pos:line="76" pos:column="34">(<argument><expr><name><name pos:line="76" pos:column="35">tctx<pos:position pos:line="76" pos:column="39"/></name><operator pos:line="76" pos:column="39">-&gt;<pos:position pos:line="76" pos:column="44"/></operator><name pos:line="76" pos:column="41">conf<pos:position pos:line="76" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="47">key<pos:position pos:line="76" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="52">val<pos:position pos:line="76" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="57">errbuf<pos:position pos:line="76" pos:column="63"/></name></expr></argument>, <argument><expr><sizeof pos:line="76" pos:column="65">sizeof<argument_list pos:line="76" pos:column="71">(<argument><expr><name pos:line="76" pos:column="72">errbuf<pos:position pos:line="76" pos:column="78"/></name></expr></argument>)<pos:position pos:line="76" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="76" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="81"/></expr_stmt>
      <if pos:line="77" pos:column="7">if <condition pos:line="77" pos:column="10">(<expr><name pos:line="77" pos:column="11">ret<pos:position pos:line="77" pos:column="14"/></name> <operator pos:line="77" pos:column="15">!=<pos:position pos:line="77" pos:column="17"/></operator> <name pos:line="77" pos:column="18">RD_KAFKA_CONF_OK<pos:position pos:line="77" pos:column="34"/></name></expr>)<pos:position pos:line="77" pos:column="35"/></condition><then pos:line="77" pos:column="35"> <block pos:line="77" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">WARNING<pos:position pos:line="78" pos:column="16"/></name><argument_list pos:line="78" pos:column="16">(<argument><expr><literal type="string" pos:line="78" pos:column="17">"cannot set kafka topic property %s to %s: %s."<pos:position pos:line="78" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="66">key<pos:position pos:line="78" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="71">val<pos:position pos:line="78" pos:column="74"/></name></expr></argument>,
                <argument><expr><name pos:line="79" pos:column="17">errbuf<pos:position pos:line="79" pos:column="23"/></name></expr></argument>)<pos:position pos:line="79" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="25"/></expr_stmt>
        <goto pos:line="80" pos:column="9">goto <name pos:line="80" pos:column="14">errout<pos:position pos:line="80" pos:column="20"/></name>;<pos:position pos:line="80" pos:column="21"/></goto>
      }<pos:position pos:line="81" pos:column="8"/></block></then></if>

    }<pos:position pos:line="83" pos:column="6"/></block></then> <elseif pos:line="83" pos:column="7">else <if pos:line="83" pos:column="12">if <condition pos:line="83" pos:column="15">(<expr><call><name pos:line="83" pos:column="16">strcasecmp<pos:position pos:line="83" pos:column="26"/></name><argument_list pos:line="83" pos:column="26">(<argument><expr><literal type="string" pos:line="83" pos:column="27">"Key"<pos:position pos:line="83" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="34">child<pos:position pos:line="83" pos:column="39"/></name><operator pos:line="83" pos:column="39">-&gt;<pos:position pos:line="83" pos:column="44"/></operator><name pos:line="83" pos:column="41">key<pos:position pos:line="83" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="45"/></argument_list></call> <operator pos:line="83" pos:column="46">==<pos:position pos:line="83" pos:column="48"/></operator> <literal type="number" pos:line="83" pos:column="49">0<pos:position pos:line="83" pos:column="50"/></literal></expr>)<pos:position pos:line="83" pos:column="51"/></condition><then pos:line="83" pos:column="51"> <block pos:line="83" pos:column="52">{
      <if pos:line="84" pos:column="7">if <condition pos:line="84" pos:column="10">(<expr><call><name pos:line="84" pos:column="11">cf_util_get_string<pos:position pos:line="84" pos:column="29"/></name><argument_list pos:line="84" pos:column="29">(<argument><expr><name pos:line="84" pos:column="30">child<pos:position pos:line="84" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="37">&amp;<pos:position pos:line="84" pos:column="42"/></operator><name><name pos:line="84" pos:column="38">tctx<pos:position pos:line="84" pos:column="42"/></name><operator pos:line="84" pos:column="42">-&gt;<pos:position pos:line="84" pos:column="47"/></operator><name pos:line="84" pos:column="44">key<pos:position pos:line="84" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="48"/></argument_list></call> <operator pos:line="84" pos:column="49">!=<pos:position pos:line="84" pos:column="51"/></operator> <literal type="number" pos:line="84" pos:column="52">0<pos:position pos:line="84" pos:column="53"/></literal></expr>)<pos:position pos:line="84" pos:column="54"/></condition><then pos:line="84" pos:column="54">
        <block type="pseudo"><continue pos:line="85" pos:column="9">continue;<pos:position pos:line="85" pos:column="18"/></continue></block></then></if>
      <if pos:line="86" pos:column="7">if <condition pos:line="86" pos:column="10">(<expr><call><name pos:line="86" pos:column="11">strcasecmp<pos:position pos:line="86" pos:column="21"/></name><argument_list pos:line="86" pos:column="21">(<argument><expr><literal type="string" pos:line="86" pos:column="22">"Random"<pos:position pos:line="86" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="32">tctx<pos:position pos:line="86" pos:column="36"/></name><operator pos:line="86" pos:column="36">-&gt;<pos:position pos:line="86" pos:column="41"/></operator><name pos:line="86" pos:column="38">key<pos:position pos:line="86" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="42"/></argument_list></call> <operator pos:line="86" pos:column="43">==<pos:position pos:line="86" pos:column="45"/></operator> <literal type="number" pos:line="86" pos:column="46">0<pos:position pos:line="86" pos:column="47"/></literal></expr>)<pos:position pos:line="86" pos:column="48"/></condition><then pos:line="86" pos:column="48"> <block pos:line="86" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">sfree<pos:position pos:line="87" pos:column="14"/></name><argument_list pos:line="87" pos:column="14">(<argument><expr><name><name pos:line="87" pos:column="15">tctx<pos:position pos:line="87" pos:column="19"/></name><operator pos:line="87" pos:column="19">-&gt;<pos:position pos:line="87" pos:column="24"/></operator><name pos:line="87" pos:column="21">key<pos:position pos:line="87" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="88" pos:column="9">tctx<pos:position pos:line="88" pos:column="13"/></name><operator pos:line="88" pos:column="13">-&gt;<pos:position pos:line="88" pos:column="18"/></operator><name pos:line="88" pos:column="15">key<pos:position pos:line="88" pos:column="18"/></name></name> <operator pos:line="88" pos:column="19">=<pos:position pos:line="88" pos:column="20"/></operator> <call><name pos:line="88" pos:column="21">strdup<pos:position pos:line="88" pos:column="27"/></name><argument_list pos:line="88" pos:column="27">(<argument><expr><call><name pos:line="88" pos:column="28">kafka_random_key<pos:position pos:line="88" pos:column="44"/></name><argument_list pos:line="88" pos:column="44">(<argument><expr><name pos:line="88" pos:column="45">KAFKA_RANDOM_KEY_BUFFER<pos:position pos:line="88" pos:column="68"/></name></expr></argument>)<pos:position pos:line="88" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="88" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="71"/></expr_stmt>
      }<pos:position pos:line="89" pos:column="8"/></block></then></if>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if></elseif> <elseif pos:line="90" pos:column="7">else <if pos:line="90" pos:column="12">if <condition pos:line="90" pos:column="15">(<expr><call><name pos:line="90" pos:column="16">strcasecmp<pos:position pos:line="90" pos:column="26"/></name><argument_list pos:line="90" pos:column="26">(<argument><expr><literal type="string" pos:line="90" pos:column="27">"Format"<pos:position pos:line="90" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="37">child<pos:position pos:line="90" pos:column="42"/></name><operator pos:line="90" pos:column="42">-&gt;<pos:position pos:line="90" pos:column="47"/></operator><name pos:line="90" pos:column="44">key<pos:position pos:line="90" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="48"/></argument_list></call> <operator pos:line="90" pos:column="49">==<pos:position pos:line="90" pos:column="51"/></operator> <literal type="number" pos:line="90" pos:column="52">0<pos:position pos:line="90" pos:column="53"/></literal></expr>)<pos:position pos:line="90" pos:column="54"/></condition><then pos:line="90" pos:column="54"> <block pos:line="90" pos:column="55">{
      <expr_stmt><expr><name pos:line="91" pos:column="7">status<pos:position pos:line="91" pos:column="13"/></name> <operator pos:line="91" pos:column="14">=<pos:position pos:line="91" pos:column="15"/></operator> <call><name pos:line="91" pos:column="16">cf_util_get_string<pos:position pos:line="91" pos:column="34"/></name><argument_list pos:line="91" pos:column="34">(<argument><expr><name pos:line="91" pos:column="35">child<pos:position pos:line="91" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="42">&amp;<pos:position pos:line="91" pos:column="47"/></operator><name pos:line="91" pos:column="43">key<pos:position pos:line="91" pos:column="46"/></name></expr></argument>)<pos:position pos:line="91" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="48"/></expr_stmt>
      <if pos:line="92" pos:column="7">if <condition pos:line="92" pos:column="10">(<expr><name pos:line="92" pos:column="11">status<pos:position pos:line="92" pos:column="17"/></name> <operator pos:line="92" pos:column="18">!=<pos:position pos:line="92" pos:column="20"/></operator> <literal type="number" pos:line="92" pos:column="21">0<pos:position pos:line="92" pos:column="22"/></literal></expr>)<pos:position pos:line="92" pos:column="23"/></condition><then pos:line="92" pos:column="23">
        <block type="pseudo"><goto pos:line="93" pos:column="9">goto <name pos:line="93" pos:column="14">errout<pos:position pos:line="93" pos:column="20"/></name>;<pos:position pos:line="93" pos:column="21"/></goto></block></then></if>

      <expr_stmt><expr><call><name pos:line="95" pos:column="7">assert<pos:position pos:line="95" pos:column="13"/></name><argument_list pos:line="95" pos:column="13">(<argument><expr><name pos:line="95" pos:column="14">key<pos:position pos:line="95" pos:column="17"/></name> <operator pos:line="95" pos:column="18">!=<pos:position pos:line="95" pos:column="20"/></operator> <name pos:line="95" pos:column="21">NULL<pos:position pos:line="95" pos:column="25"/></name></expr></argument>)<pos:position pos:line="95" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="27"/></expr_stmt>

      <if pos:line="97" pos:column="7">if <condition pos:line="97" pos:column="10">(<expr><call><name pos:line="97" pos:column="11">strcasecmp<pos:position pos:line="97" pos:column="21"/></name><argument_list pos:line="97" pos:column="21">(<argument><expr><name pos:line="97" pos:column="22">key<pos:position pos:line="97" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="27">"Command"<pos:position pos:line="97" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="37"/></argument_list></call> <operator pos:line="97" pos:column="38">==<pos:position pos:line="97" pos:column="40"/></operator> <literal type="number" pos:line="97" pos:column="41">0<pos:position pos:line="97" pos:column="42"/></literal></expr>)<pos:position pos:line="97" pos:column="43"/></condition><then pos:line="97" pos:column="43"> <block pos:line="97" pos:column="44">{
        <expr_stmt><expr><name><name pos:line="98" pos:column="9">tctx<pos:position pos:line="98" pos:column="13"/></name><operator pos:line="98" pos:column="13">-&gt;<pos:position pos:line="98" pos:column="18"/></operator><name pos:line="98" pos:column="15">format<pos:position pos:line="98" pos:column="21"/></name></name> <operator pos:line="98" pos:column="22">=<pos:position pos:line="98" pos:column="23"/></operator> <name pos:line="98" pos:column="24">KAFKA_FORMAT_COMMAND<pos:position pos:line="98" pos:column="44"/></name></expr>;<pos:position pos:line="98" pos:column="45"/></expr_stmt>

      }<pos:position pos:line="100" pos:column="8"/></block></then> <elseif pos:line="100" pos:column="9">else <if pos:line="100" pos:column="14">if <condition pos:line="100" pos:column="17">(<expr><call><name pos:line="100" pos:column="18">strcasecmp<pos:position pos:line="100" pos:column="28"/></name><argument_list pos:line="100" pos:column="28">(<argument><expr><name pos:line="100" pos:column="29">key<pos:position pos:line="100" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="34">"Graphite"<pos:position pos:line="100" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="45"/></argument_list></call> <operator pos:line="100" pos:column="46">==<pos:position pos:line="100" pos:column="48"/></operator> <literal type="number" pos:line="100" pos:column="49">0<pos:position pos:line="100" pos:column="50"/></literal></expr>)<pos:position pos:line="100" pos:column="51"/></condition><then pos:line="100" pos:column="51"> <block pos:line="100" pos:column="52">{
        <expr_stmt><expr><name><name pos:line="101" pos:column="9">tctx<pos:position pos:line="101" pos:column="13"/></name><operator pos:line="101" pos:column="13">-&gt;<pos:position pos:line="101" pos:column="18"/></operator><name pos:line="101" pos:column="15">format<pos:position pos:line="101" pos:column="21"/></name></name> <operator pos:line="101" pos:column="22">=<pos:position pos:line="101" pos:column="23"/></operator> <name pos:line="101" pos:column="24">KAFKA_FORMAT_GRAPHITE<pos:position pos:line="101" pos:column="45"/></name></expr>;<pos:position pos:line="101" pos:column="46"/></expr_stmt>

      }<pos:position pos:line="103" pos:column="8"/></block></then></if></elseif> <elseif pos:line="103" pos:column="9">else <if pos:line="103" pos:column="14">if <condition pos:line="103" pos:column="17">(<expr><call><name pos:line="103" pos:column="18">strcasecmp<pos:position pos:line="103" pos:column="28"/></name><argument_list pos:line="103" pos:column="28">(<argument><expr><name pos:line="103" pos:column="29">key<pos:position pos:line="103" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="34">"Json"<pos:position pos:line="103" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="41"/></argument_list></call> <operator pos:line="103" pos:column="42">==<pos:position pos:line="103" pos:column="44"/></operator> <literal type="number" pos:line="103" pos:column="45">0<pos:position pos:line="103" pos:column="46"/></literal></expr>)<pos:position pos:line="103" pos:column="47"/></condition><then pos:line="103" pos:column="47"> <block pos:line="103" pos:column="48">{
        <expr_stmt><expr><name><name pos:line="104" pos:column="9">tctx<pos:position pos:line="104" pos:column="13"/></name><operator pos:line="104" pos:column="13">-&gt;<pos:position pos:line="104" pos:column="18"/></operator><name pos:line="104" pos:column="15">format<pos:position pos:line="104" pos:column="21"/></name></name> <operator pos:line="104" pos:column="22">=<pos:position pos:line="104" pos:column="23"/></operator> <name pos:line="104" pos:column="24">KAFKA_FORMAT_JSON<pos:position pos:line="104" pos:column="41"/></name></expr>;<pos:position pos:line="104" pos:column="42"/></expr_stmt>

      }<pos:position pos:line="106" pos:column="8"/></block></then></if></elseif> <else pos:line="106" pos:column="9">else <block pos:line="106" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="107" pos:column="9">WARNING<pos:position pos:line="107" pos:column="16"/></name><argument_list pos:line="107" pos:column="16">(<argument><expr><literal type="string" pos:line="107" pos:column="17">"write_kafka plugin: Invalid format string: %s"<pos:position pos:line="107" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="66">key<pos:position pos:line="107" pos:column="69"/></name></expr></argument>)<pos:position pos:line="107" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="71"/></expr_stmt>
      }<pos:position pos:line="108" pos:column="8"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="110" pos:column="7">sfree<pos:position pos:line="110" pos:column="12"/></name><argument_list pos:line="110" pos:column="12">(<argument><expr><name pos:line="110" pos:column="13">key<pos:position pos:line="110" pos:column="16"/></name></expr></argument>)<pos:position pos:line="110" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="18"/></expr_stmt>

    }<pos:position pos:line="112" pos:column="6"/></block></then></if></elseif> <elseif pos:line="112" pos:column="7">else <if pos:line="112" pos:column="12">if <condition pos:line="112" pos:column="15">(<expr><call><name pos:line="112" pos:column="16">strcasecmp<pos:position pos:line="112" pos:column="26"/></name><argument_list pos:line="112" pos:column="26">(<argument><expr><literal type="string" pos:line="112" pos:column="27">"StoreRates"<pos:position pos:line="112" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="41">child<pos:position pos:line="112" pos:column="46"/></name><operator pos:line="112" pos:column="46">-&gt;<pos:position pos:line="112" pos:column="51"/></operator><name pos:line="112" pos:column="48">key<pos:position pos:line="112" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="52"/></argument_list></call> <operator pos:line="112" pos:column="53">==<pos:position pos:line="112" pos:column="55"/></operator> <literal type="number" pos:line="112" pos:column="56">0<pos:position pos:line="112" pos:column="57"/></literal></expr>)<pos:position pos:line="112" pos:column="58"/></condition><then pos:line="112" pos:column="58"> <block pos:line="112" pos:column="59">{
      <expr_stmt><expr><name pos:line="113" pos:column="7">status<pos:position pos:line="113" pos:column="13"/></name> <operator pos:line="113" pos:column="14">=<pos:position pos:line="113" pos:column="15"/></operator> <call><name pos:line="113" pos:column="16">cf_util_get_boolean<pos:position pos:line="113" pos:column="35"/></name><argument_list pos:line="113" pos:column="35">(<argument><expr><name pos:line="113" pos:column="36">child<pos:position pos:line="113" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="113" pos:column="43">&amp;<pos:position pos:line="113" pos:column="48"/></operator><name><name pos:line="113" pos:column="44">tctx<pos:position pos:line="113" pos:column="48"/></name><operator pos:line="113" pos:column="48">-&gt;<pos:position pos:line="113" pos:column="53"/></operator><name pos:line="113" pos:column="50">store_rates<pos:position pos:line="113" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="63"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="114" pos:column="7">(<pos:position pos:line="114" pos:column="8"/></operator><name pos:line="114" pos:column="8">void<pos:position pos:line="114" pos:column="12"/></name><operator pos:line="114" pos:column="12">)<pos:position pos:line="114" pos:column="13"/></operator><call><name pos:line="114" pos:column="13">cf_util_get_flag<pos:position pos:line="114" pos:column="29"/></name><argument_list pos:line="114" pos:column="29">(<argument><expr><name pos:line="114" pos:column="30">child<pos:position pos:line="114" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="37">&amp;<pos:position pos:line="114" pos:column="42"/></operator><name><name pos:line="114" pos:column="38">tctx<pos:position pos:line="114" pos:column="42"/></name><operator pos:line="114" pos:column="42">-&gt;<pos:position pos:line="114" pos:column="47"/></operator><name pos:line="114" pos:column="44">graphite_flags<pos:position pos:line="114" pos:column="58"/></name></name></expr></argument>,
                             <argument><expr><name pos:line="115" pos:column="30">GRAPHITE_STORE_RATES<pos:position pos:line="115" pos:column="50"/></name></expr></argument>)<pos:position pos:line="115" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="52"/></expr_stmt>

    }<pos:position pos:line="117" pos:column="6"/></block></then></if></elseif> <elseif pos:line="117" pos:column="7">else <if pos:line="117" pos:column="12">if <condition pos:line="117" pos:column="15">(<expr><call><name pos:line="117" pos:column="16">strcasecmp<pos:position pos:line="117" pos:column="26"/></name><argument_list pos:line="117" pos:column="26">(<argument><expr><literal type="string" pos:line="117" pos:column="27">"GraphiteSeparateInstances"<pos:position pos:line="117" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="56">child<pos:position pos:line="117" pos:column="61"/></name><operator pos:line="117" pos:column="61">-&gt;<pos:position pos:line="117" pos:column="66"/></operator><name pos:line="117" pos:column="63">key<pos:position pos:line="117" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="67"/></argument_list></call> <operator pos:line="117" pos:column="68">==<pos:position pos:line="117" pos:column="70"/></operator> <literal type="number" pos:line="117" pos:column="71">0<pos:position pos:line="117" pos:column="72"/></literal></expr>)<pos:position pos:line="117" pos:column="73"/></condition><then pos:line="117" pos:column="73"> <block pos:line="117" pos:column="74">{
      <expr_stmt><expr><name pos:line="118" pos:column="7">status<pos:position pos:line="118" pos:column="13"/></name> <operator pos:line="118" pos:column="14">=<pos:position pos:line="118" pos:column="15"/></operator> <call><name pos:line="118" pos:column="16">cf_util_get_flag<pos:position pos:line="118" pos:column="32"/></name><argument_list pos:line="118" pos:column="32">(<argument><expr><name pos:line="118" pos:column="33">child<pos:position pos:line="118" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="118" pos:column="40">&amp;<pos:position pos:line="118" pos:column="45"/></operator><name><name pos:line="118" pos:column="41">tctx<pos:position pos:line="118" pos:column="45"/></name><operator pos:line="118" pos:column="45">-&gt;<pos:position pos:line="118" pos:column="50"/></operator><name pos:line="118" pos:column="47">graphite_flags<pos:position pos:line="118" pos:column="61"/></name></name></expr></argument>,
                                <argument><expr><name pos:line="119" pos:column="33">GRAPHITE_SEPARATE_INSTANCES<pos:position pos:line="119" pos:column="60"/></name></expr></argument>)<pos:position pos:line="119" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="62"/></expr_stmt>

    }<pos:position pos:line="121" pos:column="6"/></block></then></if></elseif> <elseif pos:line="121" pos:column="7">else <if pos:line="121" pos:column="12">if <condition pos:line="121" pos:column="15">(<expr><call><name pos:line="121" pos:column="16">strcasecmp<pos:position pos:line="121" pos:column="26"/></name><argument_list pos:line="121" pos:column="26">(<argument><expr><literal type="string" pos:line="121" pos:column="27">"GraphiteAlwaysAppendDS"<pos:position pos:line="121" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="53">child<pos:position pos:line="121" pos:column="58"/></name><operator pos:line="121" pos:column="58">-&gt;<pos:position pos:line="121" pos:column="63"/></operator><name pos:line="121" pos:column="60">key<pos:position pos:line="121" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="64"/></argument_list></call> <operator pos:line="121" pos:column="65">==<pos:position pos:line="121" pos:column="67"/></operator> <literal type="number" pos:line="121" pos:column="68">0<pos:position pos:line="121" pos:column="69"/></literal></expr>)<pos:position pos:line="121" pos:column="70"/></condition><then pos:line="121" pos:column="70"> <block pos:line="121" pos:column="71">{
      <expr_stmt><expr><name pos:line="122" pos:column="7">status<pos:position pos:line="122" pos:column="13"/></name> <operator pos:line="122" pos:column="14">=<pos:position pos:line="122" pos:column="15"/></operator> <call><name pos:line="122" pos:column="16">cf_util_get_flag<pos:position pos:line="122" pos:column="32"/></name><argument_list pos:line="122" pos:column="32">(<argument><expr><name pos:line="122" pos:column="33">child<pos:position pos:line="122" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="40">&amp;<pos:position pos:line="122" pos:column="45"/></operator><name><name pos:line="122" pos:column="41">tctx<pos:position pos:line="122" pos:column="45"/></name><operator pos:line="122" pos:column="45">-&gt;<pos:position pos:line="122" pos:column="50"/></operator><name pos:line="122" pos:column="47">graphite_flags<pos:position pos:line="122" pos:column="61"/></name></name></expr></argument>,
                                <argument><expr><name pos:line="123" pos:column="33">GRAPHITE_ALWAYS_APPEND_DS<pos:position pos:line="123" pos:column="58"/></name></expr></argument>)<pos:position pos:line="123" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="60"/></expr_stmt>

    }<pos:position pos:line="125" pos:column="6"/></block></then></if></elseif> <elseif pos:line="125" pos:column="7">else <if pos:line="125" pos:column="12">if <condition pos:line="125" pos:column="15">(<expr><call><name pos:line="125" pos:column="16">strcasecmp<pos:position pos:line="125" pos:column="26"/></name><argument_list pos:line="125" pos:column="26">(<argument><expr><literal type="string" pos:line="125" pos:column="27">"GraphitePreserveSeparator"<pos:position pos:line="125" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="56">child<pos:position pos:line="125" pos:column="61"/></name><operator pos:line="125" pos:column="61">-&gt;<pos:position pos:line="125" pos:column="66"/></operator><name pos:line="125" pos:column="63">key<pos:position pos:line="125" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="67"/></argument_list></call> <operator pos:line="125" pos:column="68">==<pos:position pos:line="125" pos:column="70"/></operator> <literal type="number" pos:line="125" pos:column="71">0<pos:position pos:line="125" pos:column="72"/></literal></expr>)<pos:position pos:line="125" pos:column="73"/></condition><then pos:line="125" pos:column="73"> <block pos:line="125" pos:column="74">{
      <expr_stmt><expr><name pos:line="126" pos:column="7">status<pos:position pos:line="126" pos:column="13"/></name> <operator pos:line="126" pos:column="14">=<pos:position pos:line="126" pos:column="15"/></operator> <call><name pos:line="126" pos:column="16">cf_util_get_flag<pos:position pos:line="126" pos:column="32"/></name><argument_list pos:line="126" pos:column="32">(<argument><expr><name pos:line="126" pos:column="33">child<pos:position pos:line="126" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="126" pos:column="40">&amp;<pos:position pos:line="126" pos:column="45"/></operator><name><name pos:line="126" pos:column="41">tctx<pos:position pos:line="126" pos:column="45"/></name><operator pos:line="126" pos:column="45">-&gt;<pos:position pos:line="126" pos:column="50"/></operator><name pos:line="126" pos:column="47">graphite_flags<pos:position pos:line="126" pos:column="61"/></name></name></expr></argument>,
                                <argument><expr><name pos:line="127" pos:column="33">GRAPHITE_PRESERVE_SEPARATOR<pos:position pos:line="127" pos:column="60"/></name></expr></argument>)<pos:position pos:line="127" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="62"/></expr_stmt>

    }<pos:position pos:line="129" pos:column="6"/></block></then></if></elseif> <elseif pos:line="129" pos:column="7">else <if pos:line="129" pos:column="12">if <condition pos:line="129" pos:column="15">(<expr><call><name pos:line="129" pos:column="16">strcasecmp<pos:position pos:line="129" pos:column="26"/></name><argument_list pos:line="129" pos:column="26">(<argument><expr><literal type="string" pos:line="129" pos:column="27">"GraphitePrefix"<pos:position pos:line="129" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="45">child<pos:position pos:line="129" pos:column="50"/></name><operator pos:line="129" pos:column="50">-&gt;<pos:position pos:line="129" pos:column="55"/></operator><name pos:line="129" pos:column="52">key<pos:position pos:line="129" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="56"/></argument_list></call> <operator pos:line="129" pos:column="57">==<pos:position pos:line="129" pos:column="59"/></operator> <literal type="number" pos:line="129" pos:column="60">0<pos:position pos:line="129" pos:column="61"/></literal></expr>)<pos:position pos:line="129" pos:column="62"/></condition><then pos:line="129" pos:column="62"> <block pos:line="129" pos:column="63">{
      <expr_stmt><expr><name pos:line="130" pos:column="7">status<pos:position pos:line="130" pos:column="13"/></name> <operator pos:line="130" pos:column="14">=<pos:position pos:line="130" pos:column="15"/></operator> <call><name pos:line="130" pos:column="16">cf_util_get_string<pos:position pos:line="130" pos:column="34"/></name><argument_list pos:line="130" pos:column="34">(<argument><expr><name pos:line="130" pos:column="35">child<pos:position pos:line="130" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="42">&amp;<pos:position pos:line="130" pos:column="47"/></operator><name><name pos:line="130" pos:column="43">tctx<pos:position pos:line="130" pos:column="47"/></name><operator pos:line="130" pos:column="47">-&gt;<pos:position pos:line="130" pos:column="52"/></operator><name pos:line="130" pos:column="49">prefix<pos:position pos:line="130" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="131" pos:column="6"/></block></then></if></elseif> <elseif pos:line="131" pos:column="7">else <if pos:line="131" pos:column="12">if <condition pos:line="131" pos:column="15">(<expr><call><name pos:line="131" pos:column="16">strcasecmp<pos:position pos:line="131" pos:column="26"/></name><argument_list pos:line="131" pos:column="26">(<argument><expr><literal type="string" pos:line="131" pos:column="27">"GraphitePostfix"<pos:position pos:line="131" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="46">child<pos:position pos:line="131" pos:column="51"/></name><operator pos:line="131" pos:column="51">-&gt;<pos:position pos:line="131" pos:column="56"/></operator><name pos:line="131" pos:column="53">key<pos:position pos:line="131" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="131" pos:column="57"/></argument_list></call> <operator pos:line="131" pos:column="58">==<pos:position pos:line="131" pos:column="60"/></operator> <literal type="number" pos:line="131" pos:column="61">0<pos:position pos:line="131" pos:column="62"/></literal></expr>)<pos:position pos:line="131" pos:column="63"/></condition><then pos:line="131" pos:column="63"> <block pos:line="131" pos:column="64">{
      <expr_stmt><expr><name pos:line="132" pos:column="7">status<pos:position pos:line="132" pos:column="13"/></name> <operator pos:line="132" pos:column="14">=<pos:position pos:line="132" pos:column="15"/></operator> <call><name pos:line="132" pos:column="16">cf_util_get_string<pos:position pos:line="132" pos:column="34"/></name><argument_list pos:line="132" pos:column="34">(<argument><expr><name pos:line="132" pos:column="35">child<pos:position pos:line="132" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="132" pos:column="42">&amp;<pos:position pos:line="132" pos:column="47"/></operator><name><name pos:line="132" pos:column="43">tctx<pos:position pos:line="132" pos:column="47"/></name><operator pos:line="132" pos:column="47">-&gt;<pos:position pos:line="132" pos:column="52"/></operator><name pos:line="132" pos:column="49">postfix<pos:position pos:line="132" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="133" pos:column="6"/></block></then></if></elseif> <elseif pos:line="133" pos:column="7">else <if pos:line="133" pos:column="12">if <condition pos:line="133" pos:column="15">(<expr><call><name pos:line="133" pos:column="16">strcasecmp<pos:position pos:line="133" pos:column="26"/></name><argument_list pos:line="133" pos:column="26">(<argument><expr><literal type="string" pos:line="133" pos:column="27">"GraphiteEscapeChar"<pos:position pos:line="133" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="49">child<pos:position pos:line="133" pos:column="54"/></name><operator pos:line="133" pos:column="54">-&gt;<pos:position pos:line="133" pos:column="59"/></operator><name pos:line="133" pos:column="56">key<pos:position pos:line="133" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="60"/></argument_list></call> <operator pos:line="133" pos:column="61">==<pos:position pos:line="133" pos:column="63"/></operator> <literal type="number" pos:line="133" pos:column="64">0<pos:position pos:line="133" pos:column="65"/></literal></expr>)<pos:position pos:line="133" pos:column="66"/></condition><then pos:line="133" pos:column="66"> <block pos:line="133" pos:column="67">{
      <decl_stmt><decl><type><name pos:line="134" pos:column="7">char<pos:position pos:line="134" pos:column="11"/></name> <modifier pos:line="134" pos:column="12">*<pos:position pos:line="134" pos:column="13"/></modifier></type><name pos:line="134" pos:column="13">tmp_buff<pos:position pos:line="134" pos:column="21"/></name> <init pos:line="134" pos:column="22">= <expr><name pos:line="134" pos:column="24">NULL<pos:position pos:line="134" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="134" pos:column="29"/></decl_stmt>
      <expr_stmt><expr><name pos:line="135" pos:column="7">status<pos:position pos:line="135" pos:column="13"/></name> <operator pos:line="135" pos:column="14">=<pos:position pos:line="135" pos:column="15"/></operator> <call><name pos:line="135" pos:column="16">cf_util_get_string<pos:position pos:line="135" pos:column="34"/></name><argument_list pos:line="135" pos:column="34">(<argument><expr><name pos:line="135" pos:column="35">child<pos:position pos:line="135" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="135" pos:column="42">&amp;<pos:position pos:line="135" pos:column="47"/></operator><name pos:line="135" pos:column="43">tmp_buff<pos:position pos:line="135" pos:column="51"/></name></expr></argument>)<pos:position pos:line="135" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="53"/></expr_stmt>
      <if pos:line="136" pos:column="7">if <condition pos:line="136" pos:column="10">(<expr><call><name pos:line="136" pos:column="11">strlen<pos:position pos:line="136" pos:column="17"/></name><argument_list pos:line="136" pos:column="17">(<argument><expr><name pos:line="136" pos:column="18">tmp_buff<pos:position pos:line="136" pos:column="26"/></name></expr></argument>)<pos:position pos:line="136" pos:column="27"/></argument_list></call> <operator pos:line="136" pos:column="28">&gt;<pos:position pos:line="136" pos:column="32"/></operator> <literal type="number" pos:line="136" pos:column="30">1<pos:position pos:line="136" pos:column="31"/></literal></expr>)<pos:position pos:line="136" pos:column="32"/></condition><then pos:line="136" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="137" pos:column="9">WARNING<pos:position pos:line="137" pos:column="16"/></name><argument_list pos:line="137" pos:column="16">(<argument><expr><literal type="string" pos:line="137" pos:column="17">"write_kafka plugin: The option \"GraphiteEscapeChar\" handles "<pos:position pos:line="137" pos:column="81"/></literal>
                <literal type="string" pos:line="138" pos:column="17">"only one character. Others will be ignored."<pos:position pos:line="138" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="64"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name><name pos:line="139" pos:column="7">tctx<pos:position pos:line="139" pos:column="11"/></name><operator pos:line="139" pos:column="11">-&gt;<pos:position pos:line="139" pos:column="16"/></operator><name pos:line="139" pos:column="13">escape_char<pos:position pos:line="139" pos:column="24"/></name></name> <operator pos:line="139" pos:column="25">=<pos:position pos:line="139" pos:column="26"/></operator> <name><name pos:line="139" pos:column="27">tmp_buff<pos:position pos:line="139" pos:column="35"/></name><index pos:line="139" pos:column="35">[<expr><literal type="number" pos:line="139" pos:column="36">0<pos:position pos:line="139" pos:column="37"/></literal></expr>]<pos:position pos:line="139" pos:column="38"/></index></name></expr>;<pos:position pos:line="139" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="140" pos:column="7">sfree<pos:position pos:line="140" pos:column="12"/></name><argument_list pos:line="140" pos:column="12">(<argument><expr><name pos:line="140" pos:column="13">tmp_buff<pos:position pos:line="140" pos:column="21"/></name></expr></argument>)<pos:position pos:line="140" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="141" pos:column="6"/></block></then></if></elseif> <else pos:line="141" pos:column="7">else <block pos:line="141" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="142" pos:column="7">WARNING<pos:position pos:line="142" pos:column="14"/></name><argument_list pos:line="142" pos:column="14">(<argument><expr><literal type="string" pos:line="142" pos:column="15">"write_kafka plugin: Invalid directive: %s."<pos:position pos:line="142" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="61">child<pos:position pos:line="142" pos:column="66"/></name><operator pos:line="142" pos:column="66">-&gt;<pos:position pos:line="142" pos:column="71"/></operator><name pos:line="142" pos:column="68">key<pos:position pos:line="142" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="143" pos:column="6"/></block></else></if>

    <if pos:line="145" pos:column="5">if <condition pos:line="145" pos:column="8">(<expr><name pos:line="145" pos:column="9">status<pos:position pos:line="145" pos:column="15"/></name> <operator pos:line="145" pos:column="16">!=<pos:position pos:line="145" pos:column="18"/></operator> <literal type="number" pos:line="145" pos:column="19">0<pos:position pos:line="145" pos:column="20"/></literal></expr>)<pos:position pos:line="145" pos:column="21"/></condition><then pos:line="145" pos:column="21">
      <block type="pseudo"><break pos:line="146" pos:column="7">break;<pos:position pos:line="146" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="147" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="149" pos:column="3">rd_kafka_topic_conf_set_partitioner_cb<pos:position pos:line="149" pos:column="41"/></name><argument_list pos:line="149" pos:column="41">(<argument><expr><name><name pos:line="149" pos:column="42">tctx<pos:position pos:line="149" pos:column="46"/></name><operator pos:line="149" pos:column="46">-&gt;<pos:position pos:line="149" pos:column="51"/></operator><name pos:line="149" pos:column="48">conf<pos:position pos:line="149" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="54">kafka_partition<pos:position pos:line="149" pos:column="69"/></name></expr></argument>)<pos:position pos:line="149" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="71"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="150" pos:column="3">rd_kafka_topic_conf_set_opaque<pos:position pos:line="150" pos:column="33"/></name><argument_list pos:line="150" pos:column="33">(<argument><expr><name><name pos:line="150" pos:column="34">tctx<pos:position pos:line="150" pos:column="38"/></name><operator pos:line="150" pos:column="38">-&gt;<pos:position pos:line="150" pos:column="43"/></operator><name pos:line="150" pos:column="40">conf<pos:position pos:line="150" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="46">tctx<pos:position pos:line="150" pos:column="50"/></name></expr></argument>)<pos:position pos:line="150" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="52"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="152" pos:column="3">ssnprintf<pos:position pos:line="152" pos:column="12"/></name><argument_list pos:line="152" pos:column="12">(<argument><expr><name pos:line="152" pos:column="13">callback_name<pos:position pos:line="152" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="152" pos:column="28">sizeof<argument_list pos:line="152" pos:column="34">(<argument><expr><name pos:line="152" pos:column="35">callback_name<pos:position pos:line="152" pos:column="48"/></name></expr></argument>)<pos:position pos:line="152" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="51">"write_kafka/%s"<pos:position pos:line="152" pos:column="67"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="153" pos:column="13">tctx<pos:position pos:line="153" pos:column="17"/></name><operator pos:line="153" pos:column="17">-&gt;<pos:position pos:line="153" pos:column="22"/></operator><name pos:line="153" pos:column="19">topic_name<pos:position pos:line="153" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="153" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name pos:line="155" pos:column="3">status<pos:position pos:line="155" pos:column="9"/></name> <operator pos:line="155" pos:column="10">=<pos:position pos:line="155" pos:column="11"/></operator> <call><name pos:line="155" pos:column="12">plugin_register_write<pos:position pos:line="155" pos:column="33"/></name><argument_list pos:line="155" pos:column="33">(
      <argument><expr><name pos:line="156" pos:column="7">callback_name<pos:position pos:line="156" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="22">kafka_write<pos:position pos:line="156" pos:column="33"/></name></expr></argument>,
      <argument><expr><operator pos:line="157" pos:column="7">&amp;<pos:position pos:line="157" pos:column="12"/></operator><operator pos:line="157" pos:column="8">(<pos:position pos:line="157" pos:column="9"/></operator><name pos:line="157" pos:column="9">user_data_t<pos:position pos:line="157" pos:column="20"/></name><operator pos:line="157" pos:column="20">)<pos:position pos:line="157" pos:column="21"/></operator><block pos:line="157" pos:column="21">{
          <expr><operator pos:line="158" pos:column="11">.<pos:position pos:line="158" pos:column="12"/></operator><name pos:line="158" pos:column="12">data<pos:position pos:line="158" pos:column="16"/></name> <operator pos:line="158" pos:column="17">=<pos:position pos:line="158" pos:column="18"/></operator> <name pos:line="158" pos:column="19">tctx<pos:position pos:line="158" pos:column="23"/></name></expr>, <expr><operator pos:line="158" pos:column="25">.<pos:position pos:line="158" pos:column="26"/></operator><name pos:line="158" pos:column="26">free_func<pos:position pos:line="158" pos:column="35"/></name> <operator pos:line="158" pos:column="36">=<pos:position pos:line="158" pos:column="37"/></operator> <name pos:line="158" pos:column="38">kafka_topic_context_free<pos:position pos:line="158" pos:column="62"/></name></expr>,
      }<pos:position pos:line="159" pos:column="8"/></block></expr></argument>)<pos:position pos:line="159" pos:column="9"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="10"/></expr_stmt>
  <if pos:line="160" pos:column="3">if <condition pos:line="160" pos:column="6">(<expr><name pos:line="160" pos:column="7">status<pos:position pos:line="160" pos:column="13"/></name> <operator pos:line="160" pos:column="14">!=<pos:position pos:line="160" pos:column="16"/></operator> <literal type="number" pos:line="160" pos:column="17">0<pos:position pos:line="160" pos:column="18"/></literal></expr>)<pos:position pos:line="160" pos:column="19"/></condition><then pos:line="160" pos:column="19"> <block pos:line="160" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="161" pos:column="5">WARNING<pos:position pos:line="161" pos:column="12"/></name><argument_list pos:line="161" pos:column="12">(<argument><expr><literal type="string" pos:line="161" pos:column="13">"write_kafka plugin: plugin_register_write (\"%s\") "<pos:position pos:line="161" pos:column="66"/></literal>
            <literal type="string" pos:line="162" pos:column="13">"failed with status %i."<pos:position pos:line="162" pos:column="37"/></literal></expr></argument>,
            <argument><expr><name pos:line="163" pos:column="13">callback_name<pos:position pos:line="163" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="28">status<pos:position pos:line="163" pos:column="34"/></name></expr></argument>)<pos:position pos:line="163" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="36"/></expr_stmt>
    <goto pos:line="164" pos:column="5">goto <name pos:line="164" pos:column="10">errout<pos:position pos:line="164" pos:column="16"/></name>;<pos:position pos:line="164" pos:column="17"/></goto>
  }<pos:position pos:line="165" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="167" pos:column="3">pthread_mutex_init<pos:position pos:line="167" pos:column="21"/></name><argument_list pos:line="167" pos:column="21">(<argument><expr><operator pos:line="167" pos:column="22">&amp;<pos:position pos:line="167" pos:column="27"/></operator><name><name pos:line="167" pos:column="23">tctx<pos:position pos:line="167" pos:column="27"/></name><operator pos:line="167" pos:column="27">-&gt;<pos:position pos:line="167" pos:column="32"/></operator><name pos:line="167" pos:column="29">lock<pos:position pos:line="167" pos:column="33"/></name></name></expr></argument>, <comment type="block" pos:line="167" pos:column="35">/* attr = */</comment> <argument><expr><name pos:line="167" pos:column="48">NULL<pos:position pos:line="167" pos:column="52"/></name></expr></argument>)<pos:position pos:line="167" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="54"/></expr_stmt>

  <return pos:line="169" pos:column="3">return;<pos:position pos:line="169" pos:column="10"/></return>
<label><name pos:line="170" pos:column="1">errout<pos:position pos:line="170" pos:column="7"/></name>:<pos:position pos:line="170" pos:column="8"/></label>
  <if pos:line="171" pos:column="3">if <condition pos:line="171" pos:column="6">(<expr><name><name pos:line="171" pos:column="7">tctx<pos:position pos:line="171" pos:column="11"/></name><operator pos:line="171" pos:column="11">-&gt;<pos:position pos:line="171" pos:column="16"/></operator><name pos:line="171" pos:column="13">topic_name<pos:position pos:line="171" pos:column="23"/></name></name> <operator pos:line="171" pos:column="24">!=<pos:position pos:line="171" pos:column="26"/></operator> <name pos:line="171" pos:column="27">NULL<pos:position pos:line="171" pos:column="31"/></name></expr>)<pos:position pos:line="171" pos:column="32"/></condition><then pos:line="171" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="172" pos:column="5">free<pos:position pos:line="172" pos:column="9"/></name><argument_list pos:line="172" pos:column="9">(<argument><expr><name><name pos:line="172" pos:column="10">tctx<pos:position pos:line="172" pos:column="14"/></name><operator pos:line="172" pos:column="14">-&gt;<pos:position pos:line="172" pos:column="19"/></operator><name pos:line="172" pos:column="16">topic_name<pos:position pos:line="172" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="28"/></expr_stmt></block></then></if>
  <if pos:line="173" pos:column="3">if <condition pos:line="173" pos:column="6">(<expr><name><name pos:line="173" pos:column="7">tctx<pos:position pos:line="173" pos:column="11"/></name><operator pos:line="173" pos:column="11">-&gt;<pos:position pos:line="173" pos:column="16"/></operator><name pos:line="173" pos:column="13">conf<pos:position pos:line="173" pos:column="17"/></name></name> <operator pos:line="173" pos:column="18">!=<pos:position pos:line="173" pos:column="20"/></operator> <name pos:line="173" pos:column="21">NULL<pos:position pos:line="173" pos:column="25"/></name></expr>)<pos:position pos:line="173" pos:column="26"/></condition><then pos:line="173" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="174" pos:column="5">rd_kafka_topic_conf_destroy<pos:position pos:line="174" pos:column="32"/></name><argument_list pos:line="174" pos:column="32">(<argument><expr><name><name pos:line="174" pos:column="33">tctx<pos:position pos:line="174" pos:column="37"/></name><operator pos:line="174" pos:column="37">-&gt;<pos:position pos:line="174" pos:column="42"/></operator><name pos:line="174" pos:column="39">conf<pos:position pos:line="174" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="174" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="45"/></expr_stmt></block></then></if>
  <if pos:line="175" pos:column="3">if <condition pos:line="175" pos:column="6">(<expr><name><name pos:line="175" pos:column="7">tctx<pos:position pos:line="175" pos:column="11"/></name><operator pos:line="175" pos:column="11">-&gt;<pos:position pos:line="175" pos:column="16"/></operator><name pos:line="175" pos:column="13">kafka_conf<pos:position pos:line="175" pos:column="23"/></name></name> <operator pos:line="175" pos:column="24">!=<pos:position pos:line="175" pos:column="26"/></operator> <name pos:line="175" pos:column="27">NULL<pos:position pos:line="175" pos:column="31"/></name></expr>)<pos:position pos:line="175" pos:column="32"/></condition><then pos:line="175" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="176" pos:column="5">rd_kafka_conf_destroy<pos:position pos:line="176" pos:column="26"/></name><argument_list pos:line="176" pos:column="26">(<argument><expr><name><name pos:line="176" pos:column="27">tctx<pos:position pos:line="176" pos:column="31"/></name><operator pos:line="176" pos:column="31">-&gt;<pos:position pos:line="176" pos:column="36"/></operator><name pos:line="176" pos:column="33">kafka_conf<pos:position pos:line="176" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="176" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="45"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="177" pos:column="3">sfree<pos:position pos:line="177" pos:column="8"/></name><argument_list pos:line="177" pos:column="8">(<argument><expr><name pos:line="177" pos:column="9">tctx<pos:position pos:line="177" pos:column="13"/></name></expr></argument>)<pos:position pos:line="177" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="15"/></expr_stmt>
}<pos:position pos:line="178" pos:column="2"/></block></function></unit>

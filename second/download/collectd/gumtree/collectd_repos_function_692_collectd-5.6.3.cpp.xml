<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_692_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">procstat_t<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">ps_read_io<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">long<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">pid<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">procstat_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">ps<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <block pos:line="1" pos:column="57">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">FILE<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">fh<pos:position pos:line="2" pos:column="11"/></name></decl>;<pos:position pos:line="2" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><literal type="number" pos:line="3" pos:column="15">1024<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">filename<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><literal type="number" pos:line="4" pos:column="17">64<pos:position pos:line="4" pos:column="19"/></literal></expr>]<pos:position pos:line="4" pos:column="20"/></index></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name><name pos:line="6" pos:column="9">fields<pos:position pos:line="6" pos:column="15"/></name><index pos:line="6" pos:column="15">[<expr><literal type="number" pos:line="6" pos:column="16">8<pos:position pos:line="6" pos:column="17"/></literal></expr>]<pos:position pos:line="6" pos:column="18"/></index></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">numfields<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">ssnprintf<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">filename<pos:position pos:line="9" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="23">sizeof<argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">filename<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="41">"/proc/%li/io"<pos:position pos:line="9" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="57">pid<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">fh<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">fopen<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">filename<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="29">"r"<pos:position pos:line="10" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator> <operator pos:line="10" pos:column="35">==<pos:position pos:line="10" pos:column="37"/></operator> <name pos:line="10" pos:column="38">NULL<pos:position pos:line="10" pos:column="42"/></name></expr>)<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">NULL<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">)<pos:position pos:line="11" pos:column="18"/></operator></expr>;<pos:position pos:line="11" pos:column="19"/></return></block></then></if>

  <while pos:line="13" pos:column="3">while <condition pos:line="13" pos:column="9">(<expr><call><name pos:line="13" pos:column="10">fgets<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">buffer<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="24">sizeof<argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">buffer<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">fh<pos:position pos:line="13" pos:column="42"/></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call> <operator pos:line="13" pos:column="44">!=<pos:position pos:line="13" pos:column="46"/></operator> <name pos:line="13" pos:column="47">NULL<pos:position pos:line="13" pos:column="51"/></name></expr>)<pos:position pos:line="13" pos:column="52"/></condition> <block pos:line="13" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">derive_t<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">val<pos:position pos:line="14" pos:column="18"/></name> <init pos:line="14" pos:column="19">= <expr><name pos:line="14" pos:column="21">NULL<pos:position pos:line="14" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">long<pos:position pos:line="15" pos:column="9"/></name> <name pos:line="15" pos:column="10">long<pos:position pos:line="15" pos:column="14"/></name></type> <name pos:line="15" pos:column="15">tmp<pos:position pos:line="15" pos:column="18"/></name></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier></type><name pos:line="16" pos:column="11">endptr<pos:position pos:line="16" pos:column="17"/></name></decl>;<pos:position pos:line="16" pos:column="18"/></decl_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">strncasecmp<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">buffer<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="29">"rchar:"<pos:position pos:line="18" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="39">6<pos:position pos:line="18" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call> <operator pos:line="18" pos:column="42">==<pos:position pos:line="18" pos:column="44"/></operator> <literal type="number" pos:line="18" pos:column="45">0<pos:position pos:line="18" pos:column="46"/></literal></expr>)<pos:position pos:line="18" pos:column="47"/></condition><then pos:line="18" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="7">val<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <operator pos:line="19" pos:column="13">&amp;<pos:position pos:line="19" pos:column="18"/></operator><operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><name><name pos:line="19" pos:column="15">ps<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">io_rchar<pos:position pos:line="19" pos:column="27"/></name></name><operator pos:line="19" pos:column="27">)<pos:position pos:line="19" pos:column="28"/></operator></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt></block></then>
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><call><name pos:line="20" pos:column="14">strncasecmp<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">buffer<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="34">"wchar:"<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="44">6<pos:position pos:line="20" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call> <operator pos:line="20" pos:column="47">==<pos:position pos:line="20" pos:column="49"/></operator> <literal type="number" pos:line="20" pos:column="50">0<pos:position pos:line="20" pos:column="51"/></literal></expr>)<pos:position pos:line="20" pos:column="52"/></condition><then pos:line="20" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="7">val<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <operator pos:line="21" pos:column="13">&amp;<pos:position pos:line="21" pos:column="18"/></operator><operator pos:line="21" pos:column="14">(<pos:position pos:line="21" pos:column="15"/></operator><name><name pos:line="21" pos:column="15">ps<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">io_wchar<pos:position pos:line="21" pos:column="27"/></name></name><operator pos:line="21" pos:column="27">)<pos:position pos:line="21" pos:column="28"/></operator></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><call><name pos:line="22" pos:column="14">strncasecmp<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">buffer<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="34">"syscr:"<pos:position pos:line="22" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="44">6<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call> <operator pos:line="22" pos:column="47">==<pos:position pos:line="22" pos:column="49"/></operator> <literal type="number" pos:line="22" pos:column="50">0<pos:position pos:line="22" pos:column="51"/></literal></expr>)<pos:position pos:line="22" pos:column="52"/></condition><then pos:line="22" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="7">val<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <operator pos:line="23" pos:column="13">&amp;<pos:position pos:line="23" pos:column="18"/></operator><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><name><name pos:line="23" pos:column="15">ps<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">io_syscr<pos:position pos:line="23" pos:column="27"/></name></name><operator pos:line="23" pos:column="27">)<pos:position pos:line="23" pos:column="28"/></operator></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="24" pos:column="5">else <if pos:line="24" pos:column="10">if <condition pos:line="24" pos:column="13">(<expr><call><name pos:line="24" pos:column="14">strncasecmp<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">buffer<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="34">"syscw:"<pos:position pos:line="24" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="44">6<pos:position pos:line="24" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call> <operator pos:line="24" pos:column="47">==<pos:position pos:line="24" pos:column="49"/></operator> <literal type="number" pos:line="24" pos:column="50">0<pos:position pos:line="24" pos:column="51"/></literal></expr>)<pos:position pos:line="24" pos:column="52"/></condition><then pos:line="24" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="7">val<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <operator pos:line="25" pos:column="13">&amp;<pos:position pos:line="25" pos:column="18"/></operator><operator pos:line="25" pos:column="14">(<pos:position pos:line="25" pos:column="15"/></operator><name><name pos:line="25" pos:column="15">ps<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">io_syscw<pos:position pos:line="25" pos:column="27"/></name></name><operator pos:line="25" pos:column="27">)<pos:position pos:line="25" pos:column="28"/></operator></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt></block></then></if></elseif>
    <else pos:line="26" pos:column="5">else
      <block type="pseudo"><continue pos:line="27" pos:column="7">continue;<pos:position pos:line="27" pos:column="16"/></continue></block></else></if>

    <expr_stmt><expr><name pos:line="29" pos:column="5">numfields<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <call><name pos:line="29" pos:column="17">strsplit<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">buffer<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="34">fields<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="42">STATIC_ARRAY_SIZE<pos:position pos:line="29" pos:column="59"/></name><argument_list pos:line="29" pos:column="59">(<argument><expr><name pos:line="29" pos:column="60">fields<pos:position pos:line="29" pos:column="66"/></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="69"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">numfields<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">&lt;<pos:position pos:line="31" pos:column="23"/></operator> <literal type="number" pos:line="31" pos:column="21">2<pos:position pos:line="31" pos:column="22"/></literal></expr>)<pos:position pos:line="31" pos:column="23"/></condition><then pos:line="31" pos:column="23">
      <block type="pseudo"><continue pos:line="32" pos:column="7">continue;<pos:position pos:line="32" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="34" pos:column="5">errno<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <literal type="number" pos:line="34" pos:column="13">0<pos:position pos:line="34" pos:column="14"/></literal></expr>;<pos:position pos:line="34" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">endptr<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <name pos:line="35" pos:column="14">NULL<pos:position pos:line="35" pos:column="18"/></name></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">tmp<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <call><name pos:line="36" pos:column="11">strtoll<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><name><name pos:line="36" pos:column="19">fields<pos:position pos:line="36" pos:column="25"/></name><index pos:line="36" pos:column="25">[<expr><literal type="number" pos:line="36" pos:column="26">1<pos:position pos:line="36" pos:column="27"/></literal></expr>]<pos:position pos:line="36" pos:column="28"/></index></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="30">&amp;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="31">endptr<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <comment type="block" pos:line="36" pos:column="39">/* base = */</comment> <argument><expr><literal type="number" pos:line="36" pos:column="52">10<pos:position pos:line="36" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">(<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">errno<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">!=<pos:position pos:line="37" pos:column="18"/></operator> <literal type="number" pos:line="37" pos:column="19">0<pos:position pos:line="37" pos:column="20"/></literal><operator pos:line="37" pos:column="20">)<pos:position pos:line="37" pos:column="21"/></operator> <operator pos:line="37" pos:column="22">||<pos:position pos:line="37" pos:column="24"/></operator> <operator pos:line="37" pos:column="25">(<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="26">endptr<pos:position pos:line="37" pos:column="32"/></name> <operator pos:line="37" pos:column="33">==<pos:position pos:line="37" pos:column="35"/></operator> <name><name pos:line="37" pos:column="36">fields<pos:position pos:line="37" pos:column="42"/></name><index pos:line="37" pos:column="42">[<expr><literal type="number" pos:line="37" pos:column="43">1<pos:position pos:line="37" pos:column="44"/></literal></expr>]<pos:position pos:line="37" pos:column="45"/></index></name><operator pos:line="37" pos:column="45">)<pos:position pos:line="37" pos:column="46"/></operator></expr>)<pos:position pos:line="37" pos:column="47"/></condition><then pos:line="37" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="38" pos:column="7">*<pos:position pos:line="38" pos:column="8"/></operator><name pos:line="38" pos:column="8">val<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <operator pos:line="38" pos:column="14">-<pos:position pos:line="38" pos:column="15"/></operator><literal type="number" pos:line="38" pos:column="15">1<pos:position pos:line="38" pos:column="16"/></literal></expr>;<pos:position pos:line="38" pos:column="17"/></expr_stmt></block></then>
    <else pos:line="39" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="40" pos:column="7">*<pos:position pos:line="40" pos:column="8"/></operator><name pos:line="40" pos:column="8">val<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <operator pos:line="40" pos:column="14">(<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">derive_t<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">)<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">tmp<pos:position pos:line="40" pos:column="27"/></name></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt></block></else></if>
  }<pos:position pos:line="41" pos:column="4"/></block></while> <comment type="block" pos:line="41" pos:column="5">/* while (fgets) */</comment>

  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><call><name pos:line="43" pos:column="7">fclose<pos:position pos:line="43" pos:column="13"/></name><argument_list pos:line="43" pos:column="13">(<argument><expr><name pos:line="43" pos:column="14">fh<pos:position pos:line="43" pos:column="16"/></name></expr></argument>)<pos:position pos:line="43" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="18"/></condition><then pos:line="43" pos:column="18"> <block pos:line="43" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">char<pos:position pos:line="44" pos:column="9"/></name></type> <name><name pos:line="44" pos:column="10">errbuf<pos:position pos:line="44" pos:column="16"/></name><index pos:line="44" pos:column="16">[<expr><literal type="number" pos:line="44" pos:column="17">1024<pos:position pos:line="44" pos:column="21"/></literal></expr>]<pos:position pos:line="44" pos:column="22"/></index></name></decl>;<pos:position pos:line="44" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">WARNING<pos:position pos:line="45" pos:column="12"/></name><argument_list pos:line="45" pos:column="12">(<argument><expr><literal type="string" pos:line="45" pos:column="13">"processes: fclose: %s"<pos:position pos:line="45" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="38">sstrerror<pos:position pos:line="45" pos:column="47"/></name><argument_list pos:line="45" pos:column="47">(<argument><expr><name pos:line="45" pos:column="48">errno<pos:position pos:line="45" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="55">errbuf<pos:position pos:line="45" pos:column="61"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="63">sizeof<argument_list pos:line="45" pos:column="69">(<argument><expr><name pos:line="45" pos:column="70">errbuf<pos:position pos:line="45" pos:column="76"/></name></expr></argument>)<pos:position pos:line="45" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="80"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <return pos:line="48" pos:column="3">return <expr><operator pos:line="48" pos:column="10">(<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="11">ps<pos:position pos:line="48" pos:column="13"/></name><operator pos:line="48" pos:column="13">)<pos:position pos:line="48" pos:column="14"/></operator></expr>;<pos:position pos:line="48" pos:column="15"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

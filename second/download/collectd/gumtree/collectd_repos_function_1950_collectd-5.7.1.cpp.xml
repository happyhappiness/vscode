<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1950_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">procfs_iterate<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">sk<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list> <block pos:line="1" pos:column="35">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">buffer<pos:position pos:line="2" pos:column="14"/></name><index pos:line="2" pos:column="14">[<expr><literal type="number" pos:line="2" pos:column="15">1024<pos:position pos:line="2" pos:column="19"/></literal></expr>]<pos:position pos:line="2" pos:column="20"/></index></name></decl>;<pos:position pos:line="2" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">device<pos:position pos:line="3" pos:column="15"/></name></decl>, <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="18">dummy<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">fh<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">num_success<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">num_fail<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">fh<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <call><name pos:line="9" pos:column="13">fopen<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><literal type="string" pos:line="9" pos:column="19">"/proc/net/dev"<pos:position pos:line="9" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="36">"r"<pos:position pos:line="9" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call><operator pos:line="9" pos:column="40">)<pos:position pos:line="9" pos:column="41"/></operator> <operator pos:line="9" pos:column="42">==<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="45">NULL<pos:position pos:line="9" pos:column="49"/></name></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50"> <block pos:line="9" pos:column="51">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">WARNING<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><literal type="string" pos:line="10" pos:column="13">"madwifi plugin: opening /proc/net/dev failed"<pos:position pos:line="10" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">num_success<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">num_fail<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <literal type="number" pos:line="15" pos:column="14">0<pos:position pos:line="15" pos:column="15"/></literal></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt>
  <while pos:line="16" pos:column="3">while <condition pos:line="16" pos:column="9">(<expr><call><name pos:line="16" pos:column="10">fgets<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">buffer<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="24">sizeof<argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">buffer<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">fh<pos:position pos:line="16" pos:column="42"/></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call> <operator pos:line="16" pos:column="44">!=<pos:position pos:line="16" pos:column="46"/></operator> <name pos:line="16" pos:column="47">NULL<pos:position pos:line="16" pos:column="51"/></name></expr>)<pos:position pos:line="16" pos:column="52"/></condition> <block pos:line="16" pos:column="53">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">dummy<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">strchr<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">buffer<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="28">':'<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">dummy<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">==<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">NULL<pos:position pos:line="18" pos:column="22"/></name></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23">
      <block type="pseudo"><continue pos:line="19" pos:column="7">continue;<pos:position pos:line="19" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">dummy<pos:position pos:line="20" pos:column="10"/></name><index pos:line="20" pos:column="10">[<expr><literal type="number" pos:line="20" pos:column="11">0<pos:position pos:line="20" pos:column="12"/></literal></expr>]<pos:position pos:line="20" pos:column="13"/></index></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">device<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <name pos:line="22" pos:column="14">buffer<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
    <while pos:line="23" pos:column="5">while <condition pos:line="23" pos:column="11">(<expr><name><name pos:line="23" pos:column="12">device<pos:position pos:line="23" pos:column="18"/></name><index pos:line="23" pos:column="18">[<expr><literal type="number" pos:line="23" pos:column="19">0<pos:position pos:line="23" pos:column="20"/></literal></expr>]<pos:position pos:line="23" pos:column="21"/></index></name> <operator pos:line="23" pos:column="22">==<pos:position pos:line="23" pos:column="24"/></operator> <literal type="char" pos:line="23" pos:column="25">' '<pos:position pos:line="23" pos:column="28"/></literal></expr>)<pos:position pos:line="23" pos:column="29"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="7">device<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">++<pos:position pos:line="24" pos:column="15"/></operator></expr>;<pos:position pos:line="24" pos:column="16"/></expr_stmt></block></while>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name><name pos:line="26" pos:column="9">device<pos:position pos:line="26" pos:column="15"/></name><index pos:line="26" pos:column="15">[<expr><literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>]<pos:position pos:line="26" pos:column="18"/></index></name> <operator pos:line="26" pos:column="19">==<pos:position pos:line="26" pos:column="21"/></operator> <literal type="number" pos:line="26" pos:column="22">0<pos:position pos:line="26" pos:column="23"/></literal></expr>)<pos:position pos:line="26" pos:column="24"/></condition><then pos:line="26" pos:column="24">
      <block type="pseudo"><continue pos:line="27" pos:column="7">continue;<pos:position pos:line="27" pos:column="16"/></continue></block></then></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><call><name pos:line="29" pos:column="9">ignorelist_match<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">ignorelist<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">device<pos:position pos:line="29" pos:column="44"/></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call> <operator pos:line="29" pos:column="46">!=<pos:position pos:line="29" pos:column="48"/></operator> <literal type="number" pos:line="29" pos:column="49">0<pos:position pos:line="29" pos:column="50"/></literal></expr>)<pos:position pos:line="29" pos:column="51"/></condition><then pos:line="29" pos:column="51">
      <block type="pseudo"><continue pos:line="30" pos:column="7">continue;<pos:position pos:line="30" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="32" pos:column="5">status<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">process_device<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">sk<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="33">device<pos:position pos:line="32" pos:column="39"/></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">status<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">!=<pos:position pos:line="33" pos:column="18"/></operator> <literal type="number" pos:line="33" pos:column="19">0<pos:position pos:line="33" pos:column="20"/></literal></expr>)<pos:position pos:line="33" pos:column="21"/></condition><then pos:line="33" pos:column="21"> <block pos:line="33" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">ERROR<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><literal type="string" pos:line="34" pos:column="13">"madwifi plugin: Processing interface "<pos:position pos:line="34" pos:column="52"/></literal>
            <literal type="string" pos:line="35" pos:column="13">"%s failed."<pos:position pos:line="35" pos:column="25"/></literal></expr></argument>,
            <argument><expr><name pos:line="36" pos:column="13">device<pos:position pos:line="36" pos:column="19"/></name></expr></argument>)<pos:position pos:line="36" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="37" pos:column="7">num_fail<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">++<pos:position pos:line="37" pos:column="17"/></operator></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then> <else pos:line="38" pos:column="7">else <block pos:line="38" pos:column="12">{
      <expr_stmt><expr><name pos:line="39" pos:column="7">num_success<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">++<pos:position pos:line="39" pos:column="20"/></operator></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></else></if>
  }<pos:position pos:line="41" pos:column="4"/></block></while> <comment type="block" pos:line="41" pos:column="5">/* while (fgets) */</comment>

  <expr_stmt><expr><call><name pos:line="43" pos:column="3">fclose<pos:position pos:line="43" pos:column="9"/></name><argument_list pos:line="43" pos:column="9">(<argument><expr><name pos:line="43" pos:column="10">fh<pos:position pos:line="43" pos:column="12"/></name></expr></argument>)<pos:position pos:line="43" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="14"/></expr_stmt>

  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><operator pos:line="45" pos:column="7">(<pos:position pos:line="45" pos:column="8"/></operator><name pos:line="45" pos:column="8">num_success<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">==<pos:position pos:line="45" pos:column="22"/></operator> <literal type="number" pos:line="45" pos:column="23">0<pos:position pos:line="45" pos:column="24"/></literal><operator pos:line="45" pos:column="24">)<pos:position pos:line="45" pos:column="25"/></operator> <operator pos:line="45" pos:column="26">&amp;&amp;<pos:position pos:line="45" pos:column="36"/></operator> <operator pos:line="45" pos:column="29">(<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="30">num_fail<pos:position pos:line="45" pos:column="38"/></name> <operator pos:line="45" pos:column="39">!=<pos:position pos:line="45" pos:column="41"/></operator> <literal type="number" pos:line="45" pos:column="42">0<pos:position pos:line="45" pos:column="43"/></literal><operator pos:line="45" pos:column="43">)<pos:position pos:line="45" pos:column="44"/></operator></expr>)<pos:position pos:line="45" pos:column="45"/></condition><then pos:line="45" pos:column="45">
    <block type="pseudo"><return pos:line="46" pos:column="5">return <expr><operator pos:line="46" pos:column="12">(<pos:position pos:line="46" pos:column="13"/></operator><operator pos:line="46" pos:column="13">-<pos:position pos:line="46" pos:column="14"/></operator><literal type="number" pos:line="46" pos:column="14">1<pos:position pos:line="46" pos:column="15"/></literal><operator pos:line="46" pos:column="15">)<pos:position pos:line="46" pos:column="16"/></operator></expr>;<pos:position pos:line="46" pos:column="17"/></return></block></then></if>
  <return pos:line="47" pos:column="3">return <expr><literal type="number" pos:line="47" pos:column="10">0<pos:position pos:line="47" pos:column="11"/></literal></expr>;<pos:position pos:line="47" pos:column="12"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

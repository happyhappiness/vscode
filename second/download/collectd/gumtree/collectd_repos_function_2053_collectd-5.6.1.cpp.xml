<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2053_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wg_config_node<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">oconfig_item_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ci<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">struct<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">wg_callback<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">cb<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">callback_name<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><name pos:line="4" pos:column="24">DATA_MAX_NAME_LEN<pos:position pos:line="4" pos:column="41"/></name></expr>]<pos:position pos:line="4" pos:column="42"/></index></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">status<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">cb<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">calloc<pos:position pos:line="7" pos:column="16"/></name> <argument_list pos:line="7" pos:column="17">(<argument><expr><literal type="number" pos:line="7" pos:column="18">1<pos:position pos:line="7" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="21">sizeof <argument_list pos:line="7" pos:column="28">(<argument><expr><operator pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="30">cb<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">cb<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">==<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20">
    <block pos:line="9" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">ERROR<pos:position pos:line="10" pos:column="14"/></name> <argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="string" pos:line="10" pos:column="16">"write_graphite plugin: calloc failed."<pos:position pos:line="10" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="57"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><operator pos:line="11" pos:column="17">-<pos:position pos:line="11" pos:column="18"/></operator><literal type="number" pos:line="11" pos:column="18">1<pos:position pos:line="11" pos:column="19"/></literal><operator pos:line="11" pos:column="19">)<pos:position pos:line="11" pos:column="20"/></operator></expr>;<pos:position pos:line="11" pos:column="21"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">cb<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">sock_fd<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <operator pos:line="13" pos:column="19">-<pos:position pos:line="13" pos:column="20"/></operator><literal type="number" pos:line="13" pos:column="20">1<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">cb<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">name<pos:position pos:line="14" pos:column="13"/></name></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">cb<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">node<pos:position pos:line="15" pos:column="13"/></name></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">strdup<pos:position pos:line="15" pos:column="22"/></name> <argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">WG_DEFAULT_NODE<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">cb<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">service<pos:position pos:line="16" pos:column="16"/></name></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">strdup<pos:position pos:line="16" pos:column="25"/></name> <argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">WG_DEFAULT_SERVICE<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">cb<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">protocol<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <call><name pos:line="17" pos:column="20">strdup<pos:position pos:line="17" pos:column="26"/></name> <argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">WG_DEFAULT_PROTOCOL<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">cb<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">last_reconnect_time<pos:position pos:line="18" pos:column="28"/></name></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <call><name pos:line="18" pos:column="31">cdtime<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">()<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">cb<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">reconnect_interval<pos:position pos:line="19" pos:column="27"/></name></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <literal type="number" pos:line="19" pos:column="30">0<pos:position pos:line="19" pos:column="31"/></literal></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">cb<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">reconnect_interval_reached<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">=<pos:position pos:line="20" pos:column="37"/></operator> <literal type="number" pos:line="20" pos:column="38">0<pos:position pos:line="20" pos:column="39"/></literal></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">cb<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">log_send_errors<pos:position pos:line="21" pos:column="24"/></name></name> <operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator> <name pos:line="21" pos:column="27">WG_DEFAULT_LOG_SEND_ERRORS<pos:position pos:line="21" pos:column="53"/></name></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">cb<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">prefix<pos:position pos:line="22" pos:column="15"/></name></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">NULL<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">cb<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">postfix<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">NULL<pos:position pos:line="23" pos:column="23"/></name></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">cb<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">escape_char<pos:position pos:line="24" pos:column="20"/></name></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">WG_DEFAULT_ESCAPE<pos:position pos:line="24" pos:column="40"/></name></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">cb<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">format_flags<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">GRAPHITE_STORE_RATES<pos:position pos:line="25" pos:column="44"/></name></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>

    <comment type="block" pos:line="27" pos:column="5">/* FIXME: Legacy configuration syntax. */</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">strcasecmp<pos:position pos:line="28" pos:column="19"/></name> <argument_list pos:line="28" pos:column="20">(<argument><expr><literal type="string" pos:line="28" pos:column="21">"Carbon"<pos:position pos:line="28" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="31">ci<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">-&gt;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="35">key<pos:position pos:line="28" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call> <operator pos:line="28" pos:column="40">!=<pos:position pos:line="28" pos:column="42"/></operator> <literal type="number" pos:line="28" pos:column="43">0<pos:position pos:line="28" pos:column="44"/></literal></expr>)<pos:position pos:line="28" pos:column="45"/></condition><then pos:line="28" pos:column="45">
    <block pos:line="29" pos:column="5">{
        <expr_stmt><expr><name pos:line="30" pos:column="9">status<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">cf_util_get_string<pos:position pos:line="30" pos:column="36"/></name> <argument_list pos:line="30" pos:column="37">(<argument><expr><name pos:line="30" pos:column="38">ci<pos:position pos:line="30" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="42">&amp;<pos:position pos:line="30" pos:column="47"/></operator><name><name pos:line="30" pos:column="43">cb<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">-&gt;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="47">name<pos:position pos:line="30" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">status<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">!=<pos:position pos:line="31" pos:column="22"/></operator> <literal type="number" pos:line="31" pos:column="23">0<pos:position pos:line="31" pos:column="24"/></literal></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25">
        <block pos:line="32" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">wg_callback_free<pos:position pos:line="33" pos:column="29"/></name> <argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">cb<pos:position pos:line="33" pos:column="33"/></name></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
            <return pos:line="34" pos:column="13">return <expr><operator pos:line="34" pos:column="20">(<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="21">status<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">)<pos:position pos:line="34" pos:column="28"/></operator></expr>;<pos:position pos:line="34" pos:column="29"/></return>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">pthread_mutex_init<pos:position pos:line="38" pos:column="23"/></name> <argument_list pos:line="38" pos:column="24">(<argument><expr><operator pos:line="38" pos:column="25">&amp;<pos:position pos:line="38" pos:column="30"/></operator><name><name pos:line="38" pos:column="26">cb<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">-&gt;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="30">send_lock<pos:position pos:line="38" pos:column="39"/></name></name></expr></argument>, <comment type="block" pos:line="38" pos:column="41">/* attr = */</comment> <argument><expr><name pos:line="38" pos:column="54">NULL<pos:position pos:line="38" pos:column="58"/></name></expr></argument>)<pos:position pos:line="38" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">C_COMPLAIN_INIT<pos:position pos:line="39" pos:column="20"/></name> <argument_list pos:line="39" pos:column="21">(<argument><expr><operator pos:line="39" pos:column="22">&amp;<pos:position pos:line="39" pos:column="27"/></operator><name><name pos:line="39" pos:column="23">cb<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">-&gt;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="27">init_complaint<pos:position pos:line="39" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>

    <for pos:line="41" pos:column="5">for <control pos:line="41" pos:column="9">(<init><decl><type><name pos:line="41" pos:column="10">int<pos:position pos:line="41" pos:column="13"/></name></type> <name pos:line="41" pos:column="14">i<pos:position pos:line="41" pos:column="15"/></name> <init pos:line="41" pos:column="16">= <expr><literal type="number" pos:line="41" pos:column="18">0<pos:position pos:line="41" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="41" pos:column="20"/></init> <condition><expr><name pos:line="41" pos:column="21">i<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">&lt;<pos:position pos:line="41" pos:column="27"/></operator> <name><name pos:line="41" pos:column="25">ci<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">children_num<pos:position pos:line="41" pos:column="41"/></name></name></expr>;<pos:position pos:line="41" pos:column="42"/></condition> <incr><expr><name pos:line="41" pos:column="43">i<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">++<pos:position pos:line="41" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="47"/></control>
    <block pos:line="42" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="43" pos:column="9">oconfig_item_t<pos:position pos:line="43" pos:column="23"/></name> <modifier pos:line="43" pos:column="24">*<pos:position pos:line="43" pos:column="25"/></modifier></type><name pos:line="43" pos:column="25">child<pos:position pos:line="43" pos:column="30"/></name> <init pos:line="43" pos:column="31">= <expr><name><name pos:line="43" pos:column="33">ci<pos:position pos:line="43" pos:column="35"/></name><operator pos:line="43" pos:column="35">-&gt;<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="37">children<pos:position pos:line="43" pos:column="45"/></name></name> <operator pos:line="43" pos:column="46">+<pos:position pos:line="43" pos:column="47"/></operator> <name pos:line="43" pos:column="48">i<pos:position pos:line="43" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="43" pos:column="50"/></decl_stmt>

        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">strcasecmp<pos:position pos:line="45" pos:column="23"/></name> <argument_list pos:line="45" pos:column="24">(<argument><expr><literal type="string" pos:line="45" pos:column="25">"Host"<pos:position pos:line="45" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="33">child<pos:position pos:line="45" pos:column="38"/></name><operator pos:line="45" pos:column="38">-&gt;<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="40">key<pos:position pos:line="45" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call> <operator pos:line="45" pos:column="45">==<pos:position pos:line="45" pos:column="47"/></operator> <literal type="number" pos:line="45" pos:column="48">0<pos:position pos:line="45" pos:column="49"/></literal></expr>)<pos:position pos:line="45" pos:column="50"/></condition><then pos:line="45" pos:column="50">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="13">cf_util_get_string<pos:position pos:line="46" pos:column="31"/></name> <argument_list pos:line="46" pos:column="32">(<argument><expr><name pos:line="46" pos:column="33">child<pos:position pos:line="46" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="40">&amp;<pos:position pos:line="46" pos:column="45"/></operator><name><name pos:line="46" pos:column="41">cb<pos:position pos:line="46" pos:column="43"/></name><operator pos:line="46" pos:column="43">-&gt;<pos:position pos:line="46" pos:column="48"/></operator><name pos:line="46" pos:column="45">node<pos:position pos:line="46" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt></block></then>
        <elseif pos:line="47" pos:column="9">else <if pos:line="47" pos:column="14">if <condition pos:line="47" pos:column="17">(<expr><call><name pos:line="47" pos:column="18">strcasecmp<pos:position pos:line="47" pos:column="28"/></name> <argument_list pos:line="47" pos:column="29">(<argument><expr><literal type="string" pos:line="47" pos:column="30">"Port"<pos:position pos:line="47" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="38">child<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">-&gt;<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="45">key<pos:position pos:line="47" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="49"/></argument_list></call> <operator pos:line="47" pos:column="50">==<pos:position pos:line="47" pos:column="52"/></operator> <literal type="number" pos:line="47" pos:column="53">0<pos:position pos:line="47" pos:column="54"/></literal></expr>)<pos:position pos:line="47" pos:column="55"/></condition><then pos:line="47" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="13">cf_util_get_service<pos:position pos:line="48" pos:column="32"/></name> <argument_list pos:line="48" pos:column="33">(<argument><expr><name pos:line="48" pos:column="34">child<pos:position pos:line="48" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="41">&amp;<pos:position pos:line="48" pos:column="46"/></operator><name><name pos:line="48" pos:column="42">cb<pos:position pos:line="48" pos:column="44"/></name><operator pos:line="48" pos:column="44">-&gt;<pos:position pos:line="48" pos:column="49"/></operator><name pos:line="48" pos:column="46">service<pos:position pos:line="48" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="55"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="49" pos:column="9">else <if pos:line="49" pos:column="14">if <condition pos:line="49" pos:column="17">(<expr><call><name pos:line="49" pos:column="18">strcasecmp<pos:position pos:line="49" pos:column="28"/></name> <argument_list pos:line="49" pos:column="29">(<argument><expr><literal type="string" pos:line="49" pos:column="30">"Protocol"<pos:position pos:line="49" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="42">child<pos:position pos:line="49" pos:column="47"/></name><operator pos:line="49" pos:column="47">-&gt;<pos:position pos:line="49" pos:column="52"/></operator><name pos:line="49" pos:column="49">key<pos:position pos:line="49" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="53"/></argument_list></call> <operator pos:line="49" pos:column="54">==<pos:position pos:line="49" pos:column="56"/></operator> <literal type="number" pos:line="49" pos:column="57">0<pos:position pos:line="49" pos:column="58"/></literal></expr>)<pos:position pos:line="49" pos:column="59"/></condition><then pos:line="49" pos:column="59">
        <block pos:line="50" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">cf_util_get_string<pos:position pos:line="51" pos:column="31"/></name> <argument_list pos:line="51" pos:column="32">(<argument><expr><name pos:line="51" pos:column="33">child<pos:position pos:line="51" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="40">&amp;<pos:position pos:line="51" pos:column="45"/></operator><name><name pos:line="51" pos:column="41">cb<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">-&gt;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="45">protocol<pos:position pos:line="51" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt>

            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><call><name pos:line="53" pos:column="17">strcasecmp<pos:position pos:line="53" pos:column="27"/></name> <argument_list pos:line="53" pos:column="28">(<argument><expr><literal type="string" pos:line="53" pos:column="29">"UDP"<pos:position pos:line="53" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="36">cb<pos:position pos:line="53" pos:column="38"/></name><operator pos:line="53" pos:column="38">-&gt;<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="40">protocol<pos:position pos:line="53" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="49"/></argument_list></call> <operator pos:line="53" pos:column="50">!=<pos:position pos:line="53" pos:column="52"/></operator> <literal type="number" pos:line="53" pos:column="53">0<pos:position pos:line="53" pos:column="54"/></literal> <operator pos:line="53" pos:column="55">&amp;&amp;<pos:position pos:line="53" pos:column="65"/></operator>
                <call><name pos:line="54" pos:column="17">strcasecmp<pos:position pos:line="54" pos:column="27"/></name> <argument_list pos:line="54" pos:column="28">(<argument><expr><literal type="string" pos:line="54" pos:column="29">"TCP"<pos:position pos:line="54" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="36">cb<pos:position pos:line="54" pos:column="38"/></name><operator pos:line="54" pos:column="38">-&gt;<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="40">protocol<pos:position pos:line="54" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="49"/></argument_list></call> <operator pos:line="54" pos:column="50">!=<pos:position pos:line="54" pos:column="52"/></operator> <literal type="number" pos:line="54" pos:column="53">0<pos:position pos:line="54" pos:column="54"/></literal></expr>)<pos:position pos:line="54" pos:column="55"/></condition><then pos:line="54" pos:column="55">
            <block pos:line="55" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="56" pos:column="17">ERROR<pos:position pos:line="56" pos:column="22"/></name> <argument_list pos:line="56" pos:column="23">(<argument><expr><literal type="string" pos:line="56" pos:column="24">"write_graphite plugin: Unknown protocol (%s)"<pos:position pos:line="56" pos:column="70"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="57" pos:column="25">cb<pos:position pos:line="57" pos:column="27"/></name><operator pos:line="57" pos:column="27">-&gt;<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="29">protocol<pos:position pos:line="57" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name pos:line="58" pos:column="17">status<pos:position pos:line="58" pos:column="23"/></name> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <operator pos:line="58" pos:column="26">-<pos:position pos:line="58" pos:column="27"/></operator><literal type="number" pos:line="58" pos:column="27">1<pos:position pos:line="58" pos:column="28"/></literal></expr>;<pos:position pos:line="58" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="59" pos:column="14"/></block></then></if>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="61" pos:column="9">else <if pos:line="61" pos:column="14">if <condition pos:line="61" pos:column="17">(<expr><call><name pos:line="61" pos:column="18">strcasecmp<pos:position pos:line="61" pos:column="28"/></name> <argument_list pos:line="61" pos:column="29">(<argument><expr><literal type="string" pos:line="61" pos:column="30">"ReconnectInterval"<pos:position pos:line="61" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="51">child<pos:position pos:line="61" pos:column="56"/></name><operator pos:line="61" pos:column="56">-&gt;<pos:position pos:line="61" pos:column="61"/></operator><name pos:line="61" pos:column="58">key<pos:position pos:line="61" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="62"/></argument_list></call> <operator pos:line="61" pos:column="63">==<pos:position pos:line="61" pos:column="65"/></operator> <literal type="number" pos:line="61" pos:column="66">0<pos:position pos:line="61" pos:column="67"/></literal></expr>)<pos:position pos:line="61" pos:column="68"/></condition><then pos:line="61" pos:column="68">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="13">cf_util_get_cdtime<pos:position pos:line="62" pos:column="31"/></name> <argument_list pos:line="62" pos:column="32">(<argument><expr><name pos:line="62" pos:column="33">child<pos:position pos:line="62" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="40">&amp;<pos:position pos:line="62" pos:column="45"/></operator><name><name pos:line="62" pos:column="41">cb<pos:position pos:line="62" pos:column="43"/></name><operator pos:line="62" pos:column="43">-&gt;<pos:position pos:line="62" pos:column="48"/></operator><name pos:line="62" pos:column="45">reconnect_interval<pos:position pos:line="62" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="65"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="63" pos:column="9">else <if pos:line="63" pos:column="14">if <condition pos:line="63" pos:column="17">(<expr><call><name pos:line="63" pos:column="18">strcasecmp<pos:position pos:line="63" pos:column="28"/></name> <argument_list pos:line="63" pos:column="29">(<argument><expr><literal type="string" pos:line="63" pos:column="30">"LogSendErrors"<pos:position pos:line="63" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="47">child<pos:position pos:line="63" pos:column="52"/></name><operator pos:line="63" pos:column="52">-&gt;<pos:position pos:line="63" pos:column="57"/></operator><name pos:line="63" pos:column="54">key<pos:position pos:line="63" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="58"/></argument_list></call> <operator pos:line="63" pos:column="59">==<pos:position pos:line="63" pos:column="61"/></operator> <literal type="number" pos:line="63" pos:column="62">0<pos:position pos:line="63" pos:column="63"/></literal></expr>)<pos:position pos:line="63" pos:column="64"/></condition><then pos:line="63" pos:column="64">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="13">cf_util_get_boolean<pos:position pos:line="64" pos:column="32"/></name> <argument_list pos:line="64" pos:column="33">(<argument><expr><name pos:line="64" pos:column="34">child<pos:position pos:line="64" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="41">&amp;<pos:position pos:line="64" pos:column="46"/></operator><name><name pos:line="64" pos:column="42">cb<pos:position pos:line="64" pos:column="44"/></name><operator pos:line="64" pos:column="44">-&gt;<pos:position pos:line="64" pos:column="49"/></operator><name pos:line="64" pos:column="46">log_send_errors<pos:position pos:line="64" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="63"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="65" pos:column="9">else <if pos:line="65" pos:column="14">if <condition pos:line="65" pos:column="17">(<expr><call><name pos:line="65" pos:column="18">strcasecmp<pos:position pos:line="65" pos:column="28"/></name> <argument_list pos:line="65" pos:column="29">(<argument><expr><literal type="string" pos:line="65" pos:column="30">"Prefix"<pos:position pos:line="65" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="40">child<pos:position pos:line="65" pos:column="45"/></name><operator pos:line="65" pos:column="45">-&gt;<pos:position pos:line="65" pos:column="50"/></operator><name pos:line="65" pos:column="47">key<pos:position pos:line="65" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="51"/></argument_list></call> <operator pos:line="65" pos:column="52">==<pos:position pos:line="65" pos:column="54"/></operator> <literal type="number" pos:line="65" pos:column="55">0<pos:position pos:line="65" pos:column="56"/></literal></expr>)<pos:position pos:line="65" pos:column="57"/></condition><then pos:line="65" pos:column="57">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="13">cf_util_get_string<pos:position pos:line="66" pos:column="31"/></name> <argument_list pos:line="66" pos:column="32">(<argument><expr><name pos:line="66" pos:column="33">child<pos:position pos:line="66" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="40">&amp;<pos:position pos:line="66" pos:column="45"/></operator><name><name pos:line="66" pos:column="41">cb<pos:position pos:line="66" pos:column="43"/></name><operator pos:line="66" pos:column="43">-&gt;<pos:position pos:line="66" pos:column="48"/></operator><name pos:line="66" pos:column="45">prefix<pos:position pos:line="66" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="53"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="67" pos:column="9">else <if pos:line="67" pos:column="14">if <condition pos:line="67" pos:column="17">(<expr><call><name pos:line="67" pos:column="18">strcasecmp<pos:position pos:line="67" pos:column="28"/></name> <argument_list pos:line="67" pos:column="29">(<argument><expr><literal type="string" pos:line="67" pos:column="30">"Postfix"<pos:position pos:line="67" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="41">child<pos:position pos:line="67" pos:column="46"/></name><operator pos:line="67" pos:column="46">-&gt;<pos:position pos:line="67" pos:column="51"/></operator><name pos:line="67" pos:column="48">key<pos:position pos:line="67" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></call> <operator pos:line="67" pos:column="53">==<pos:position pos:line="67" pos:column="55"/></operator> <literal type="number" pos:line="67" pos:column="56">0<pos:position pos:line="67" pos:column="57"/></literal></expr>)<pos:position pos:line="67" pos:column="58"/></condition><then pos:line="67" pos:column="58">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="13">cf_util_get_string<pos:position pos:line="68" pos:column="31"/></name> <argument_list pos:line="68" pos:column="32">(<argument><expr><name pos:line="68" pos:column="33">child<pos:position pos:line="68" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="40">&amp;<pos:position pos:line="68" pos:column="45"/></operator><name><name pos:line="68" pos:column="41">cb<pos:position pos:line="68" pos:column="43"/></name><operator pos:line="68" pos:column="43">-&gt;<pos:position pos:line="68" pos:column="48"/></operator><name pos:line="68" pos:column="45">postfix<pos:position pos:line="68" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="54"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="69" pos:column="9">else <if pos:line="69" pos:column="14">if <condition pos:line="69" pos:column="17">(<expr><call><name pos:line="69" pos:column="18">strcasecmp<pos:position pos:line="69" pos:column="28"/></name> <argument_list pos:line="69" pos:column="29">(<argument><expr><literal type="string" pos:line="69" pos:column="30">"StoreRates"<pos:position pos:line="69" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="44">child<pos:position pos:line="69" pos:column="49"/></name><operator pos:line="69" pos:column="49">-&gt;<pos:position pos:line="69" pos:column="54"/></operator><name pos:line="69" pos:column="51">key<pos:position pos:line="69" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="55"/></argument_list></call> <operator pos:line="69" pos:column="56">==<pos:position pos:line="69" pos:column="58"/></operator> <literal type="number" pos:line="69" pos:column="59">0<pos:position pos:line="69" pos:column="60"/></literal></expr>)<pos:position pos:line="69" pos:column="61"/></condition><then pos:line="69" pos:column="61">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="13">cf_util_get_flag<pos:position pos:line="70" pos:column="29"/></name> <argument_list pos:line="70" pos:column="30">(<argument><expr><name pos:line="70" pos:column="31">child<pos:position pos:line="70" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="38">&amp;<pos:position pos:line="70" pos:column="43"/></operator><name><name pos:line="70" pos:column="39">cb<pos:position pos:line="70" pos:column="41"/></name><operator pos:line="70" pos:column="41">-&gt;<pos:position pos:line="70" pos:column="46"/></operator><name pos:line="70" pos:column="43">format_flags<pos:position pos:line="70" pos:column="55"/></name></name></expr></argument>,
                    <argument><expr><name pos:line="71" pos:column="21">GRAPHITE_STORE_RATES<pos:position pos:line="71" pos:column="41"/></name></expr></argument>)<pos:position pos:line="71" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="43"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="72" pos:column="9">else <if pos:line="72" pos:column="14">if <condition pos:line="72" pos:column="17">(<expr><call><name pos:line="72" pos:column="18">strcasecmp<pos:position pos:line="72" pos:column="28"/></name> <argument_list pos:line="72" pos:column="29">(<argument><expr><literal type="string" pos:line="72" pos:column="30">"SeparateInstances"<pos:position pos:line="72" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="51">child<pos:position pos:line="72" pos:column="56"/></name><operator pos:line="72" pos:column="56">-&gt;<pos:position pos:line="72" pos:column="61"/></operator><name pos:line="72" pos:column="58">key<pos:position pos:line="72" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="62"/></argument_list></call> <operator pos:line="72" pos:column="63">==<pos:position pos:line="72" pos:column="65"/></operator> <literal type="number" pos:line="72" pos:column="66">0<pos:position pos:line="72" pos:column="67"/></literal></expr>)<pos:position pos:line="72" pos:column="68"/></condition><then pos:line="72" pos:column="68">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="13">cf_util_get_flag<pos:position pos:line="73" pos:column="29"/></name> <argument_list pos:line="73" pos:column="30">(<argument><expr><name pos:line="73" pos:column="31">child<pos:position pos:line="73" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="38">&amp;<pos:position pos:line="73" pos:column="43"/></operator><name><name pos:line="73" pos:column="39">cb<pos:position pos:line="73" pos:column="41"/></name><operator pos:line="73" pos:column="41">-&gt;<pos:position pos:line="73" pos:column="46"/></operator><name pos:line="73" pos:column="43">format_flags<pos:position pos:line="73" pos:column="55"/></name></name></expr></argument>,
                    <argument><expr><name pos:line="74" pos:column="21">GRAPHITE_SEPARATE_INSTANCES<pos:position pos:line="74" pos:column="48"/></name></expr></argument>)<pos:position pos:line="74" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="50"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="75" pos:column="9">else <if pos:line="75" pos:column="14">if <condition pos:line="75" pos:column="17">(<expr><call><name pos:line="75" pos:column="18">strcasecmp<pos:position pos:line="75" pos:column="28"/></name> <argument_list pos:line="75" pos:column="29">(<argument><expr><literal type="string" pos:line="75" pos:column="30">"AlwaysAppendDS"<pos:position pos:line="75" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="48">child<pos:position pos:line="75" pos:column="53"/></name><operator pos:line="75" pos:column="53">-&gt;<pos:position pos:line="75" pos:column="58"/></operator><name pos:line="75" pos:column="55">key<pos:position pos:line="75" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="59"/></argument_list></call> <operator pos:line="75" pos:column="60">==<pos:position pos:line="75" pos:column="62"/></operator> <literal type="number" pos:line="75" pos:column="63">0<pos:position pos:line="75" pos:column="64"/></literal></expr>)<pos:position pos:line="75" pos:column="65"/></condition><then pos:line="75" pos:column="65">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="13">cf_util_get_flag<pos:position pos:line="76" pos:column="29"/></name> <argument_list pos:line="76" pos:column="30">(<argument><expr><name pos:line="76" pos:column="31">child<pos:position pos:line="76" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="38">&amp;<pos:position pos:line="76" pos:column="43"/></operator><name><name pos:line="76" pos:column="39">cb<pos:position pos:line="76" pos:column="41"/></name><operator pos:line="76" pos:column="41">-&gt;<pos:position pos:line="76" pos:column="46"/></operator><name pos:line="76" pos:column="43">format_flags<pos:position pos:line="76" pos:column="55"/></name></name></expr></argument>,
                    <argument><expr><name pos:line="77" pos:column="21">GRAPHITE_ALWAYS_APPEND_DS<pos:position pos:line="77" pos:column="46"/></name></expr></argument>)<pos:position pos:line="77" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="48"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="78" pos:column="9">else <if pos:line="78" pos:column="14">if <condition pos:line="78" pos:column="17">(<expr><call><name pos:line="78" pos:column="18">strcasecmp<pos:position pos:line="78" pos:column="28"/></name> <argument_list pos:line="78" pos:column="29">(<argument><expr><literal type="string" pos:line="78" pos:column="30">"EscapeCharacter"<pos:position pos:line="78" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="49">child<pos:position pos:line="78" pos:column="54"/></name><operator pos:line="78" pos:column="54">-&gt;<pos:position pos:line="78" pos:column="59"/></operator><name pos:line="78" pos:column="56">key<pos:position pos:line="78" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="60"/></argument_list></call> <operator pos:line="78" pos:column="61">==<pos:position pos:line="78" pos:column="63"/></operator> <literal type="number" pos:line="78" pos:column="64">0<pos:position pos:line="78" pos:column="65"/></literal></expr>)<pos:position pos:line="78" pos:column="66"/></condition><then pos:line="78" pos:column="66">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="13">config_set_char<pos:position pos:line="79" pos:column="28"/></name> <argument_list pos:line="79" pos:column="29">(<argument><expr><operator pos:line="79" pos:column="30">&amp;<pos:position pos:line="79" pos:column="35"/></operator><name><name pos:line="79" pos:column="31">cb<pos:position pos:line="79" pos:column="33"/></name><operator pos:line="79" pos:column="33">-&gt;<pos:position pos:line="79" pos:column="38"/></operator><name pos:line="79" pos:column="35">escape_char<pos:position pos:line="79" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="48">child<pos:position pos:line="79" pos:column="53"/></name></expr></argument>)<pos:position pos:line="79" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="55"/></expr_stmt></block></then></if></elseif>
        <else pos:line="80" pos:column="9">else
        <block pos:line="81" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="82" pos:column="13">ERROR<pos:position pos:line="82" pos:column="18"/></name> <argument_list pos:line="82" pos:column="19">(<argument><expr><literal type="string" pos:line="82" pos:column="20">"write_graphite plugin: Invalid configuration "<pos:position pos:line="82" pos:column="67"/></literal>
                        <literal type="string" pos:line="83" pos:column="25">"option: %s."<pos:position pos:line="83" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="40">child<pos:position pos:line="83" pos:column="45"/></name><operator pos:line="83" pos:column="45">-&gt;<pos:position pos:line="83" pos:column="50"/></operator><name pos:line="83" pos:column="47">key<pos:position pos:line="83" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><name pos:line="84" pos:column="13">status<pos:position pos:line="84" pos:column="19"/></name> <operator pos:line="84" pos:column="20">=<pos:position pos:line="84" pos:column="21"/></operator> <operator pos:line="84" pos:column="22">-<pos:position pos:line="84" pos:column="23"/></operator><literal type="number" pos:line="84" pos:column="23">1<pos:position pos:line="84" pos:column="24"/></literal></expr>;<pos:position pos:line="84" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="85" pos:column="10"/></block></else></if>

        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name pos:line="87" pos:column="13">status<pos:position pos:line="87" pos:column="19"/></name> <operator pos:line="87" pos:column="20">!=<pos:position pos:line="87" pos:column="22"/></operator> <literal type="number" pos:line="87" pos:column="23">0<pos:position pos:line="87" pos:column="24"/></literal></expr>)<pos:position pos:line="87" pos:column="25"/></condition><then pos:line="87" pos:column="25">
            <block type="pseudo"><break pos:line="88" pos:column="13">break;<pos:position pos:line="88" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="89" pos:column="6"/></block></for>

    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><name pos:line="91" pos:column="9">status<pos:position pos:line="91" pos:column="15"/></name> <operator pos:line="91" pos:column="16">!=<pos:position pos:line="91" pos:column="18"/></operator> <literal type="number" pos:line="91" pos:column="19">0<pos:position pos:line="91" pos:column="20"/></literal></expr>)<pos:position pos:line="91" pos:column="21"/></condition><then pos:line="91" pos:column="21">
    <block pos:line="92" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">wg_callback_free<pos:position pos:line="93" pos:column="25"/></name> <argument_list pos:line="93" pos:column="26">(<argument><expr><name pos:line="93" pos:column="27">cb<pos:position pos:line="93" pos:column="29"/></name></expr></argument>)<pos:position pos:line="93" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="31"/></expr_stmt>
        <return pos:line="94" pos:column="9">return <expr><operator pos:line="94" pos:column="16">(<pos:position pos:line="94" pos:column="17"/></operator><name pos:line="94" pos:column="17">status<pos:position pos:line="94" pos:column="23"/></name><operator pos:line="94" pos:column="23">)<pos:position pos:line="94" pos:column="24"/></operator></expr>;<pos:position pos:line="94" pos:column="25"/></return>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="97" pos:column="5">/* FIXME: Legacy configuration syntax. */</comment>
    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><name><name pos:line="98" pos:column="9">cb<pos:position pos:line="98" pos:column="11"/></name><operator pos:line="98" pos:column="11">-&gt;<pos:position pos:line="98" pos:column="16"/></operator><name pos:line="98" pos:column="13">name<pos:position pos:line="98" pos:column="17"/></name></name> <operator pos:line="98" pos:column="18">==<pos:position pos:line="98" pos:column="20"/></operator> <name pos:line="98" pos:column="21">NULL<pos:position pos:line="98" pos:column="25"/></name></expr>)<pos:position pos:line="98" pos:column="26"/></condition><then pos:line="98" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="9">ssnprintf<pos:position pos:line="99" pos:column="18"/></name> <argument_list pos:line="99" pos:column="19">(<argument><expr><name pos:line="99" pos:column="20">callback_name<pos:position pos:line="99" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="99" pos:column="35">sizeof <argument_list pos:line="99" pos:column="42">(<argument><expr><name pos:line="99" pos:column="43">callback_name<pos:position pos:line="99" pos:column="56"/></name></expr></argument>)<pos:position pos:line="99" pos:column="57"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="59">"write_graphite/%s/%s/%s"<pos:position pos:line="99" pos:column="84"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="100" pos:column="17">cb<pos:position pos:line="100" pos:column="19"/></name><operator pos:line="100" pos:column="19">-&gt;<pos:position pos:line="100" pos:column="24"/></operator><name pos:line="100" pos:column="21">node<pos:position pos:line="100" pos:column="25"/></name></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="27">cb<pos:position pos:line="100" pos:column="29"/></name><operator pos:line="100" pos:column="29">-&gt;<pos:position pos:line="100" pos:column="34"/></operator><name pos:line="100" pos:column="31">service<pos:position pos:line="100" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="40">cb<pos:position pos:line="100" pos:column="42"/></name><operator pos:line="100" pos:column="42">-&gt;<pos:position pos:line="100" pos:column="47"/></operator><name pos:line="100" pos:column="44">protocol<pos:position pos:line="100" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="54"/></expr_stmt></block></then>
    <else pos:line="101" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="9">ssnprintf<pos:position pos:line="102" pos:column="18"/></name> <argument_list pos:line="102" pos:column="19">(<argument><expr><name pos:line="102" pos:column="20">callback_name<pos:position pos:line="102" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="102" pos:column="35">sizeof <argument_list pos:line="102" pos:column="42">(<argument><expr><name pos:line="102" pos:column="43">callback_name<pos:position pos:line="102" pos:column="56"/></name></expr></argument>)<pos:position pos:line="102" pos:column="57"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="59">"write_graphite/%s"<pos:position pos:line="102" pos:column="78"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="103" pos:column="17">cb<pos:position pos:line="103" pos:column="19"/></name><operator pos:line="103" pos:column="19">-&gt;<pos:position pos:line="103" pos:column="24"/></operator><name pos:line="103" pos:column="21">name<pos:position pos:line="103" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="27"/></expr_stmt></block></else></if>

    <decl_stmt><decl><type><name pos:line="105" pos:column="5">user_data_t<pos:position pos:line="105" pos:column="16"/></name></type> <name pos:line="105" pos:column="17">ud<pos:position pos:line="105" pos:column="19"/></name> <init pos:line="105" pos:column="20">= <expr><block pos:line="105" pos:column="22">{
        <expr><operator pos:line="106" pos:column="9">.<pos:position pos:line="106" pos:column="10"/></operator><name pos:line="106" pos:column="10">data<pos:position pos:line="106" pos:column="14"/></name> <operator pos:line="106" pos:column="15">=<pos:position pos:line="106" pos:column="16"/></operator> <name pos:line="106" pos:column="17">cb<pos:position pos:line="106" pos:column="19"/></name></expr>,
        <expr><operator pos:line="107" pos:column="9">.<pos:position pos:line="107" pos:column="10"/></operator><name pos:line="107" pos:column="10">free_func<pos:position pos:line="107" pos:column="19"/></name> <operator pos:line="107" pos:column="20">=<pos:position pos:line="107" pos:column="21"/></operator> <name pos:line="107" pos:column="22">wg_callback_free<pos:position pos:line="107" pos:column="38"/></name></expr>
    }<pos:position pos:line="108" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="108" pos:column="7"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="110" pos:column="5">plugin_register_write<pos:position pos:line="110" pos:column="26"/></name> <argument_list pos:line="110" pos:column="27">(<argument><expr><name pos:line="110" pos:column="28">callback_name<pos:position pos:line="110" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="43">wg_write<pos:position pos:line="110" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="110" pos:column="53">&amp;<pos:position pos:line="110" pos:column="58"/></operator><name pos:line="110" pos:column="54">ud<pos:position pos:line="110" pos:column="56"/></name></expr></argument>)<pos:position pos:line="110" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="58"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="112" pos:column="5">ud<pos:position pos:line="112" pos:column="7"/></name><operator pos:line="112" pos:column="7">.<pos:position pos:line="112" pos:column="8"/></operator><name pos:line="112" pos:column="8">free_func<pos:position pos:line="112" pos:column="17"/></name></name> <operator pos:line="112" pos:column="18">=<pos:position pos:line="112" pos:column="19"/></operator> <name pos:line="112" pos:column="20">NULL<pos:position pos:line="112" pos:column="24"/></name></expr>;<pos:position pos:line="112" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="113" pos:column="5">plugin_register_flush<pos:position pos:line="113" pos:column="26"/></name> <argument_list pos:line="113" pos:column="27">(<argument><expr><name pos:line="113" pos:column="28">callback_name<pos:position pos:line="113" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="43">wg_flush<pos:position pos:line="113" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="113" pos:column="53">&amp;<pos:position pos:line="113" pos:column="58"/></operator><name pos:line="113" pos:column="54">ud<pos:position pos:line="113" pos:column="56"/></name></expr></argument>)<pos:position pos:line="113" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="58"/></expr_stmt>

    <return pos:line="115" pos:column="5">return <expr><operator pos:line="115" pos:column="12">(<pos:position pos:line="115" pos:column="13"/></operator><literal type="number" pos:line="115" pos:column="13">0<pos:position pos:line="115" pos:column="14"/></literal><operator pos:line="115" pos:column="14">)<pos:position pos:line="115" pos:column="15"/></operator></expr>;<pos:position pos:line="115" pos:column="16"/></return>
}<pos:position pos:line="116" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2018_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sigrok_config<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">oconfig_item_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">ci<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <block pos:line="1" pos:column="46">{
  <for pos:line="2" pos:column="3">for <control pos:line="2" pos:column="7">(<init><decl><type><name pos:line="2" pos:column="8">int<pos:position pos:line="2" pos:column="11"/></name></type> <name pos:line="2" pos:column="12">i<pos:position pos:line="2" pos:column="13"/></name> <init pos:line="2" pos:column="14">= <expr><literal type="number" pos:line="2" pos:column="16">0<pos:position pos:line="2" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="18"/></init> <condition><expr><name pos:line="2" pos:column="19">i<pos:position pos:line="2" pos:column="20"/></name> <operator pos:line="2" pos:column="21">&lt;<pos:position pos:line="2" pos:column="25"/></operator> <name><name pos:line="2" pos:column="23">ci<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">-&gt;<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="27">children_num<pos:position pos:line="2" pos:column="39"/></name></name></expr>;<pos:position pos:line="2" pos:column="40"/></condition> <incr><expr><name pos:line="2" pos:column="41">i<pos:position pos:line="2" pos:column="42"/></name><operator pos:line="2" pos:column="42">++<pos:position pos:line="2" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="2" pos:column="45"/></control> <block pos:line="2" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">oconfig_item_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">item<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name><name pos:line="3" pos:column="28">ci<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">-&gt;<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="32">children<pos:position pos:line="3" pos:column="40"/></name></name> <operator pos:line="3" pos:column="41">+<pos:position pos:line="3" pos:column="42"/></operator> <name pos:line="3" pos:column="43">i<pos:position pos:line="3" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">strcasecmp<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><literal type="string" pos:line="4" pos:column="20">"LogLevel"<pos:position pos:line="4" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="32">item<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">key<pos:position pos:line="4" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="42"/></argument_list></call> <operator pos:line="4" pos:column="43">==<pos:position pos:line="4" pos:column="45"/></operator> <literal type="number" pos:line="4" pos:column="46">0<pos:position pos:line="4" pos:column="47"/></literal></expr>)<pos:position pos:line="4" pos:column="48"/></condition><then pos:line="4" pos:column="48"> <block pos:line="4" pos:column="49">{
      <decl_stmt><decl><type><name pos:line="5" pos:column="7">int<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">status<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="6" pos:column="7">int<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">tmp<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><operator pos:line="6" pos:column="17">-<pos:position pos:line="6" pos:column="18"/></operator><literal type="number" pos:line="6" pos:column="18">1<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

      <expr_stmt><expr><name pos:line="8" pos:column="7">status<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">cf_util_get_int<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name pos:line="8" pos:column="32">item<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="38">&amp;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="39">tmp<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>
      <if pos:line="9" pos:column="7">if <condition pos:line="9" pos:column="10">(<expr><name pos:line="9" pos:column="11">status<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">!=<pos:position pos:line="9" pos:column="20"/></operator> <literal type="number" pos:line="9" pos:column="21">0<pos:position pos:line="9" pos:column="22"/></literal></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23">
        <block type="pseudo"><continue pos:line="10" pos:column="9">continue;<pos:position pos:line="10" pos:column="18"/></continue></block></then>
      <elseif pos:line="11" pos:column="7">else <if pos:line="11" pos:column="12">if <condition pos:line="11" pos:column="15">(<expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">tmp<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&lt;<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal><operator pos:line="11" pos:column="24">)<pos:position pos:line="11" pos:column="25"/></operator> <operator pos:line="11" pos:column="26">||<pos:position pos:line="11" pos:column="28"/></operator> <operator pos:line="11" pos:column="29">(<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">tmp<pos:position pos:line="11" pos:column="33"/></name> <operator pos:line="11" pos:column="34">&gt;<pos:position pos:line="11" pos:column="38"/></operator> <literal type="number" pos:line="11" pos:column="36">5<pos:position pos:line="11" pos:column="37"/></literal><operator pos:line="11" pos:column="37">)<pos:position pos:line="11" pos:column="38"/></operator></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39"> <block pos:line="11" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">ERROR<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><literal type="string" pos:line="12" pos:column="15">"sigrok plugin: The \"LogLevel\" "<pos:position pos:line="12" pos:column="49"/></literal>
              <literal type="string" pos:line="13" pos:column="15">"configuration option expects "<pos:position pos:line="13" pos:column="46"/></literal>
              <literal type="string" pos:line="14" pos:column="15">"an integer between 0 and 5 "<pos:position pos:line="14" pos:column="44"/></literal>
              <literal type="string" pos:line="15" pos:column="15">"(inclusive); you provided %i."<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>,
              <argument><expr><name pos:line="16" pos:column="15">tmp<pos:position pos:line="16" pos:column="18"/></name></expr></argument>)<pos:position pos:line="16" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
        <continue pos:line="17" pos:column="9">continue;<pos:position pos:line="17" pos:column="18"/></continue>
      }<pos:position pos:line="18" pos:column="8"/></block></then></if></elseif></if>
      <expr_stmt><expr><name pos:line="19" pos:column="7">loglevel<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">tmp<pos:position pos:line="19" pos:column="21"/></name></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then> <elseif pos:line="20" pos:column="7">else <if pos:line="20" pos:column="12">if <condition pos:line="20" pos:column="15">(<expr><operator pos:line="20" pos:column="16">!<pos:position pos:line="20" pos:column="17"/></operator><call><name pos:line="20" pos:column="17">strcasecmp<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name><name pos:line="20" pos:column="28">item<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">key<pos:position pos:line="20" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="39">"Device"<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="49"/></condition><then pos:line="20" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="7">sigrok_config_device<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">item<pos:position pos:line="21" pos:column="32"/></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt></block></then></if></elseif>
    <else pos:line="22" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="7">WARNING<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><literal type="string" pos:line="23" pos:column="15">"sigrok plugin: Invalid keyword \"%s\"."<pos:position pos:line="23" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="57">item<pos:position pos:line="23" pos:column="61"/></name><operator pos:line="23" pos:column="61">-&gt;<pos:position pos:line="23" pos:column="66"/></operator><name pos:line="23" pos:column="63">key<pos:position pos:line="23" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt></block></else></if>
  }<pos:position pos:line="24" pos:column="4"/></block></for>

  <return pos:line="26" pos:column="3">return <expr><literal type="number" pos:line="26" pos:column="10">0<pos:position pos:line="26" pos:column="11"/></literal></expr>;<pos:position pos:line="26" pos:column="12"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

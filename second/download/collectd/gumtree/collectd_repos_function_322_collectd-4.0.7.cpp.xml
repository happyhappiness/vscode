<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_322_collectd-4.0.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">do_check_con_none<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">values_num<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">double<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">values<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier><modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">values_names<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">num_critical<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><literal type="number" pos:line="5" pos:column="28">0<pos:position pos:line="5" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">num_warning<pos:position pos:line="6" pos:column="24"/></name>  <init pos:line="6" pos:column="26">= <expr><literal type="number" pos:line="6" pos:column="28">0<pos:position pos:line="6" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">num_okay<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">i<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></init> <condition><expr><name pos:line="9" pos:column="21">i<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="25">values_num<pos:position pos:line="9" pos:column="35"/></name></expr>;<pos:position pos:line="9" pos:column="36"/></condition> <incr><expr><name pos:line="9" pos:column="37">i<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">++<pos:position pos:line="9" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="41"/></control>
	<block pos:line="10" pos:column="9">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">isnan<pos:position pos:line="11" pos:column="26"/></name> <argument_list pos:line="11" pos:column="27">(<argument><expr><name><name pos:line="11" pos:column="28">values<pos:position pos:line="11" pos:column="34"/></name><index pos:line="11" pos:column="34">[<expr><name pos:line="11" pos:column="35">i<pos:position pos:line="11" pos:column="36"/></name></expr>]<pos:position pos:line="11" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">num_warning<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">++<pos:position pos:line="12" pos:column="38"/></operator></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt></block></then>
		<elseif pos:line="13" pos:column="17">else <if pos:line="13" pos:column="22">if <condition pos:line="13" pos:column="25">(<expr><call><name pos:line="13" pos:column="26">match_range<pos:position pos:line="13" pos:column="37"/></name> <argument_list pos:line="13" pos:column="38">(<argument><expr><operator pos:line="13" pos:column="39">&amp;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="40">range_critical_g<pos:position pos:line="13" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="58">values<pos:position pos:line="13" pos:column="64"/></name><index pos:line="13" pos:column="64">[<expr><name pos:line="13" pos:column="65">i<pos:position pos:line="13" pos:column="66"/></name></expr>]<pos:position pos:line="13" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call> <operator pos:line="13" pos:column="69">!=<pos:position pos:line="13" pos:column="71"/></operator> <literal type="number" pos:line="13" pos:column="72">0<pos:position pos:line="13" pos:column="73"/></literal></expr>)<pos:position pos:line="13" pos:column="74"/></condition><then pos:line="13" pos:column="74">
			<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="25">num_critical<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">++<pos:position pos:line="14" pos:column="39"/></operator></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="15" pos:column="17">else <if pos:line="15" pos:column="22">if <condition pos:line="15" pos:column="25">(<expr><call><name pos:line="15" pos:column="26">match_range<pos:position pos:line="15" pos:column="37"/></name> <argument_list pos:line="15" pos:column="38">(<argument><expr><operator pos:line="15" pos:column="39">&amp;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="40">range_warning_g<pos:position pos:line="15" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="57">values<pos:position pos:line="15" pos:column="63"/></name><index pos:line="15" pos:column="63">[<expr><name pos:line="15" pos:column="64">i<pos:position pos:line="15" pos:column="65"/></name></expr>]<pos:position pos:line="15" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></call> <operator pos:line="15" pos:column="68">!=<pos:position pos:line="15" pos:column="70"/></operator> <literal type="number" pos:line="15" pos:column="71">0<pos:position pos:line="15" pos:column="72"/></literal></expr>)<pos:position pos:line="15" pos:column="73"/></condition><then pos:line="15" pos:column="73">
			<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="25">num_warning<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">++<pos:position pos:line="16" pos:column="38"/></operator></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt></block></then></if></elseif>
		<else pos:line="17" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">num_okay<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">++<pos:position pos:line="18" pos:column="35"/></operator></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt></block></else></if>
	}<pos:position pos:line="19" pos:column="10"/></block></for>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">num_critical<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">!=<pos:position pos:line="21" pos:column="29"/></operator> <literal type="number" pos:line="21" pos:column="30">0<pos:position pos:line="21" pos:column="31"/></literal><operator pos:line="21" pos:column="31">)<pos:position pos:line="21" pos:column="32"/></operator> <operator pos:line="21" pos:column="33">||<pos:position pos:line="21" pos:column="35"/></operator> <operator pos:line="21" pos:column="36">(<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="37">values_num<pos:position pos:line="21" pos:column="47"/></name> <operator pos:line="21" pos:column="48">==<pos:position pos:line="21" pos:column="50"/></operator> <literal type="number" pos:line="21" pos:column="51">0<pos:position pos:line="21" pos:column="52"/></literal><operator pos:line="21" pos:column="52">)<pos:position pos:line="21" pos:column="53"/></operator></expr>)<pos:position pos:line="21" pos:column="54"/></condition><then pos:line="21" pos:column="54">
	<block pos:line="22" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">printf<pos:position pos:line="23" pos:column="23"/></name> <argument_list pos:line="23" pos:column="24">(<argument><expr><literal type="string" pos:line="23" pos:column="25">"CRITICAL: %i critical, %i warning, %i okay\n"<pos:position pos:line="23" pos:column="71"/></literal></expr></argument>,
				<argument><expr><name pos:line="24" pos:column="33">num_critical<pos:position pos:line="24" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="47">num_warning<pos:position pos:line="24" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="60">num_okay<pos:position pos:line="24" pos:column="68"/></name></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="70"/></expr_stmt>
		<return pos:line="25" pos:column="17">return <expr><operator pos:line="25" pos:column="24">(<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">RET_CRITICAL<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">)<pos:position pos:line="25" pos:column="38"/></operator></expr>;<pos:position pos:line="25" pos:column="39"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then>
	<elseif pos:line="27" pos:column="9">else <if pos:line="27" pos:column="14">if <condition pos:line="27" pos:column="17">(<expr><name pos:line="27" pos:column="18">num_warning<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">!=<pos:position pos:line="27" pos:column="32"/></operator> <literal type="number" pos:line="27" pos:column="33">0<pos:position pos:line="27" pos:column="34"/></literal></expr>)<pos:position pos:line="27" pos:column="35"/></condition><then pos:line="27" pos:column="35">
	<block pos:line="28" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">printf<pos:position pos:line="29" pos:column="23"/></name> <argument_list pos:line="29" pos:column="24">(<argument><expr><literal type="string" pos:line="29" pos:column="25">"WARNING: %i warning, %i okay\n"<pos:position pos:line="29" pos:column="57"/></literal></expr></argument>,
				<argument><expr><name pos:line="30" pos:column="33">num_warning<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">num_okay<pos:position pos:line="30" pos:column="54"/></name></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="56"/></expr_stmt>
		<return pos:line="31" pos:column="17">return <expr><operator pos:line="31" pos:column="24">(<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">RET_WARNING<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">)<pos:position pos:line="31" pos:column="37"/></operator></expr>;<pos:position pos:line="31" pos:column="38"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if></elseif>
	<else pos:line="33" pos:column="9">else
	<block pos:line="34" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">printf<pos:position pos:line="35" pos:column="23"/></name> <argument_list pos:line="35" pos:column="24">(<argument><expr><literal type="string" pos:line="35" pos:column="25">"OKAY: %i okay\n"<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="44">num_okay<pos:position pos:line="35" pos:column="52"/></name></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt>
		<return pos:line="36" pos:column="17">return <expr><operator pos:line="36" pos:column="24">(<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">RET_OKAY<pos:position pos:line="36" pos:column="33"/></name><operator pos:line="36" pos:column="33">)<pos:position pos:line="36" pos:column="34"/></operator></expr>;<pos:position pos:line="36" pos:column="35"/></return>
	}<pos:position pos:line="37" pos:column="10"/></block></else></if>

	<return pos:line="39" pos:column="9">return <expr><operator pos:line="39" pos:column="16">(<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">RET_UNKNOWN<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">)<pos:position pos:line="39" pos:column="29"/></operator></expr>;<pos:position pos:line="39" pos:column="30"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1309_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dispatch_loadplugin<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">oconfig_item_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">ci<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">name<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">flags<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><literal type="number" pos:line="5" pos:column="30">0<pos:position pos:line="5" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">assert<pos:position pos:line="6" pos:column="15"/></name> <argument_list pos:line="6" pos:column="16">(<argument><expr><call><name pos:line="6" pos:column="17">strcasecmp<pos:position pos:line="6" pos:column="27"/></name> <argument_list pos:line="6" pos:column="28">(<argument><expr><name><name pos:line="6" pos:column="29">ci<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">-&gt;<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="33">key<pos:position pos:line="6" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="38">"LoadPlugin"<pos:position pos:line="6" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call> <operator pos:line="6" pos:column="52">==<pos:position pos:line="6" pos:column="54"/></operator> <literal type="number" pos:line="6" pos:column="55">0<pos:position pos:line="6" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="58"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">ci<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">values_num<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">!=<pos:position pos:line="8" pos:column="30"/></operator> <literal type="number" pos:line="8" pos:column="31">1<pos:position pos:line="8" pos:column="32"/></literal></expr>)<pos:position pos:line="8" pos:column="33"/></condition><then pos:line="8" pos:column="33">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><operator pos:line="9" pos:column="25">-<pos:position pos:line="9" pos:column="26"/></operator><literal type="number" pos:line="9" pos:column="26">1<pos:position pos:line="9" pos:column="27"/></literal><operator pos:line="9" pos:column="27">)<pos:position pos:line="9" pos:column="28"/></operator></expr>;<pos:position pos:line="9" pos:column="29"/></return></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">ci<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">values<pos:position pos:line="10" pos:column="23"/></name><index pos:line="10" pos:column="23">[<expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>]<pos:position pos:line="10" pos:column="26"/></index></name><operator pos:line="10" pos:column="26">.<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">type<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">!=<pos:position pos:line="10" pos:column="34"/></operator> <name pos:line="10" pos:column="35">OCONFIG_TYPE_STRING<pos:position pos:line="10" pos:column="54"/></name></expr>)<pos:position pos:line="10" pos:column="55"/></condition><then pos:line="10" pos:column="55">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="13" pos:column="9">name<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name><name pos:line="13" pos:column="16">ci<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">values<pos:position pos:line="13" pos:column="26"/></name><index pos:line="13" pos:column="26">[<expr><literal type="number" pos:line="13" pos:column="27">0<pos:position pos:line="13" pos:column="28"/></literal></expr>]<pos:position pos:line="13" pos:column="29"/></index></name><operator pos:line="13" pos:column="29">.<pos:position pos:line="13" pos:column="30"/></operator><name><name pos:line="13" pos:column="30">value<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">.<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">string<pos:position pos:line="13" pos:column="42"/></name></name></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>

	<comment type="block" pos:line="15" pos:column="9">/*
	 * XXX: Magic at work:
	 *
	 * Some of the language bindings, for example the Python and Perl
	 * plugins, need to be able to export symbols to the scripts they run.
	 * For this to happen, the "Globals" flag needs to be set.
	 * Unfortunately, this technical detail is hard to explain to the
	 * average user and she shouldn't have to worry about this, ideally.
	 * So in order to save everyone's sanity use a different default for a
	 * handful of special plugins. --octo
	 */</comment>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">(<pos:position pos:line="26" pos:column="14"/></operator><call><name pos:line="26" pos:column="14">strcasecmp<pos:position pos:line="26" pos:column="24"/></name> <argument_list pos:line="26" pos:column="25">(<argument><expr><literal type="string" pos:line="26" pos:column="26">"Perl"<pos:position pos:line="26" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">name<pos:position pos:line="26" pos:column="38"/></name></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call> <operator pos:line="26" pos:column="40">==<pos:position pos:line="26" pos:column="42"/></operator> <literal type="number" pos:line="26" pos:column="43">0<pos:position pos:line="26" pos:column="44"/></literal><operator pos:line="26" pos:column="44">)<pos:position pos:line="26" pos:column="45"/></operator>
			<operator pos:line="27" pos:column="25">||<pos:position pos:line="27" pos:column="27"/></operator> <operator pos:line="27" pos:column="28">(<pos:position pos:line="27" pos:column="29"/></operator><call><name pos:line="27" pos:column="29">strcasecmp<pos:position pos:line="27" pos:column="39"/></name> <argument_list pos:line="27" pos:column="40">(<argument><expr><literal type="string" pos:line="27" pos:column="41">"Python"<pos:position pos:line="27" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="51">name<pos:position pos:line="27" pos:column="55"/></name></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call> <operator pos:line="27" pos:column="57">==<pos:position pos:line="27" pos:column="59"/></operator> <literal type="number" pos:line="27" pos:column="60">0<pos:position pos:line="27" pos:column="61"/></literal><operator pos:line="27" pos:column="61">)<pos:position pos:line="27" pos:column="62"/></operator></expr>)<pos:position pos:line="27" pos:column="63"/></condition><then pos:line="27" pos:column="63">
		<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="17">flags<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">|=<pos:position pos:line="28" pos:column="25"/></operator> <name pos:line="28" pos:column="26">PLUGIN_FLAGS_GLOBAL<pos:position pos:line="28" pos:column="45"/></name></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt></block></then></if>

	<for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">i<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></init> <condition><expr><name pos:line="30" pos:column="21">i<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">&lt;<pos:position pos:line="30" pos:column="27"/></operator> <name><name pos:line="30" pos:column="25">ci<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">-&gt;<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="29">children_num<pos:position pos:line="30" pos:column="41"/></name></name></expr>;<pos:position pos:line="30" pos:column="42"/></condition> <incr><expr><operator pos:line="30" pos:column="43">++<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="45">i<pos:position pos:line="30" pos:column="46"/></name></expr></incr>)<pos:position pos:line="30" pos:column="47"/></control> <block pos:line="30" pos:column="48">{
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">strcasecmp<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><literal type="string" pos:line="31" pos:column="32">"Globals"<pos:position pos:line="31" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="43">ci<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">-&gt;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="47">children<pos:position pos:line="31" pos:column="55"/></name><index pos:line="31" pos:column="55">[<expr><name pos:line="31" pos:column="56">i<pos:position pos:line="31" pos:column="57"/></name></expr>]<pos:position pos:line="31" pos:column="58"/></index></name><operator pos:line="31" pos:column="58">.<pos:position pos:line="31" pos:column="59"/></operator><name pos:line="31" pos:column="59">key<pos:position pos:line="31" pos:column="62"/></name></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></call> <operator pos:line="31" pos:column="64">==<pos:position pos:line="31" pos:column="66"/></operator> <literal type="number" pos:line="31" pos:column="67">0<pos:position pos:line="31" pos:column="68"/></literal></expr>)<pos:position pos:line="31" pos:column="69"/></condition><then pos:line="31" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="25">cf_util_get_flag<pos:position pos:line="32" pos:column="41"/></name> <argument_list pos:line="32" pos:column="42">(<argument><expr><name><name pos:line="32" pos:column="43">ci<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">-&gt;<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="47">children<pos:position pos:line="32" pos:column="55"/></name></name> <operator pos:line="32" pos:column="56">+<pos:position pos:line="32" pos:column="57"/></operator> <name pos:line="32" pos:column="58">i<pos:position pos:line="32" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="61">&amp;<pos:position pos:line="32" pos:column="66"/></operator><name pos:line="32" pos:column="62">flags<pos:position pos:line="32" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="69">PLUGIN_FLAGS_GLOBAL<pos:position pos:line="32" pos:column="88"/></name></expr></argument>)<pos:position pos:line="32" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="90"/></expr_stmt></block></then>
		<else pos:line="33" pos:column="17">else <block pos:line="33" pos:column="22">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">WARNING<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><literal type="string" pos:line="34" pos:column="33">"Ignoring unknown LoadPlugin option \"%s\" "<pos:position pos:line="34" pos:column="77"/></literal>
					<literal type="string" pos:line="35" pos:column="41">"for plugin \"%s\""<pos:position pos:line="35" pos:column="60"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="36" pos:column="41">ci<pos:position pos:line="36" pos:column="43"/></name><operator pos:line="36" pos:column="43">-&gt;<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="45">children<pos:position pos:line="36" pos:column="53"/></name><index pos:line="36" pos:column="53">[<expr><name pos:line="36" pos:column="54">i<pos:position pos:line="36" pos:column="55"/></name></expr>]<pos:position pos:line="36" pos:column="56"/></index></name><operator pos:line="36" pos:column="56">.<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="57">key<pos:position pos:line="36" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="62">ci<pos:position pos:line="36" pos:column="64"/></name><operator pos:line="36" pos:column="64">-&gt;<pos:position pos:line="36" pos:column="69"/></operator><name pos:line="36" pos:column="66">values<pos:position pos:line="36" pos:column="72"/></name><index pos:line="36" pos:column="72">[<expr><literal type="number" pos:line="36" pos:column="73">0<pos:position pos:line="36" pos:column="74"/></literal></expr>]<pos:position pos:line="36" pos:column="75"/></index></name><operator pos:line="36" pos:column="75">.<pos:position pos:line="36" pos:column="76"/></operator><name><name pos:line="36" pos:column="76">value<pos:position pos:line="36" pos:column="81"/></name><operator pos:line="36" pos:column="81">.<pos:position pos:line="36" pos:column="82"/></operator><name pos:line="36" pos:column="82">string<pos:position pos:line="36" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="90"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></else></if>
	}<pos:position pos:line="38" pos:column="10"/></block></for>

	<return pos:line="40" pos:column="9">return <expr><operator pos:line="40" pos:column="16">(<pos:position pos:line="40" pos:column="17"/></operator><call><name pos:line="40" pos:column="17">plugin_load<pos:position pos:line="40" pos:column="28"/></name> <argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">name<pos:position pos:line="40" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="36">(<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="37">uint32_t<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">)<pos:position pos:line="40" pos:column="46"/></operator> <name pos:line="40" pos:column="47">flags<pos:position pos:line="40" pos:column="52"/></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call><operator pos:line="40" pos:column="53">)<pos:position pos:line="40" pos:column="54"/></operator></expr>;<pos:position pos:line="40" pos:column="55"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1734_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ovs_db_table_echo_cb<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">ovs_db_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">pdb<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">yajl_val<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">jnode<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list> <block pos:line="1" pos:column="70">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">yajl_val<pos:position pos:line="2" pos:column="11"/></name></type> <name pos:line="2" pos:column="12">jparams<pos:position pos:line="2" pos:column="19"/></name></decl>;<pos:position pos:line="2" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">yajl_val<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">jid<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">yajl_gen<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">jgen<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">resp_len<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">resp<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">NULL<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name><name pos:line="7" pos:column="15">params_path<pos:position pos:line="7" pos:column="26"/></name><index pos:line="7" pos:column="26">[]<pos:position pos:line="7" pos:column="28"/></index></name> <init pos:line="7" pos:column="29">= <expr><block pos:line="7" pos:column="31">{<expr><literal type="string" pos:line="7" pos:column="32">"params"<pos:position pos:line="7" pos:column="40"/></literal></expr>, <expr><name pos:line="7" pos:column="42">NULL<pos:position pos:line="7" pos:column="46"/></name></expr>}<pos:position pos:line="7" pos:column="47"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name><name pos:line="8" pos:column="15">id_path<pos:position pos:line="8" pos:column="22"/></name><index pos:line="8" pos:column="22">[]<pos:position pos:line="8" pos:column="24"/></index></name> <init pos:line="8" pos:column="25">= <expr><block pos:line="8" pos:column="27">{<expr><literal type="string" pos:line="8" pos:column="28">"id"<pos:position pos:line="8" pos:column="32"/></literal></expr>, <expr><name pos:line="8" pos:column="34">NULL<pos:position pos:line="8" pos:column="38"/></name></expr>}<pos:position pos:line="8" pos:column="39"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">yajl_gen_status<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">yajl_gen_ret<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">(<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">jgen<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <call><name pos:line="11" pos:column="15">yajl_gen_alloc<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">NULL<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call><operator pos:line="11" pos:column="35">)<pos:position pos:line="11" pos:column="36"/></operator> <operator pos:line="11" pos:column="37">==<pos:position pos:line="11" pos:column="39"/></operator> <name pos:line="11" pos:column="40">NULL<pos:position pos:line="11" pos:column="44"/></name></expr>)<pos:position pos:line="11" pos:column="45"/></condition><then pos:line="11" pos:column="45">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return></block></then></if>

  <comment type="block" pos:line="14" pos:column="3">/* check &amp; get request attributes */</comment>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">(<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">jparams<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">yajl_tree_get<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">jnode<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">params_path<pos:position pos:line="15" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="52">yajl_t_array<pos:position pos:line="15" pos:column="64"/></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call><operator pos:line="15" pos:column="65">)<pos:position pos:line="15" pos:column="66"/></operator> <operator pos:line="15" pos:column="67">==<pos:position pos:line="15" pos:column="69"/></operator> <name pos:line="15" pos:column="70">NULL<pos:position pos:line="15" pos:column="74"/></name> <operator pos:line="15" pos:column="75">||<pos:position pos:line="15" pos:column="77"/></operator>
      <operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><operator pos:line="16" pos:column="8">(<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">jid<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">yajl_tree_get<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">jnode<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">id_path<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">yajl_t_any<pos:position pos:line="16" pos:column="55"/></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call><operator pos:line="16" pos:column="56">)<pos:position pos:line="16" pos:column="57"/></operator> <operator pos:line="16" pos:column="58">==<pos:position pos:line="16" pos:column="60"/></operator> <name pos:line="16" pos:column="61">NULL<pos:position pos:line="16" pos:column="65"/></name><operator pos:line="16" pos:column="65">)<pos:position pos:line="16" pos:column="66"/></operator></expr>)<pos:position pos:line="16" pos:column="67"/></condition><then pos:line="16" pos:column="67"> <block pos:line="16" pos:column="68">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">OVS_ERROR<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><literal type="string" pos:line="17" pos:column="15">"parse echo request failed"<pos:position pos:line="17" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
    <goto pos:line="18" pos:column="5">goto <name pos:line="18" pos:column="10">yajl_gen_failure<pos:position pos:line="18" pos:column="26"/></name>;<pos:position pos:line="18" pos:column="27"/></goto>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="21" pos:column="3">/* generate JSON echo response */</comment>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">OVS_YAJL_CALL<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">yajl_gen_map_open<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="36">jgen<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">OVS_YAJL_CALL<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">ovs_yajl_gen_tstring<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="39">jgen<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="45">"result"<pos:position pos:line="24" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">OVS_YAJL_CALL<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">(<argument><expr><name pos:line="25" pos:column="17">ovs_yajl_gen_val<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">jgen<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="41">jparams<pos:position pos:line="25" pos:column="48"/></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">OVS_YAJL_CALL<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">ovs_yajl_gen_tstring<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="39">jgen<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="45">"error"<pos:position pos:line="27" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">OVS_YAJL_CALL<pos:position pos:line="28" pos:column="16"/></name><argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">yajl_gen_null<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="32">jgen<pos:position pos:line="28" pos:column="36"/></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">OVS_YAJL_CALL<pos:position pos:line="30" pos:column="16"/></name><argument_list pos:line="30" pos:column="16">(<argument><expr><name pos:line="30" pos:column="17">ovs_yajl_gen_tstring<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="39">jgen<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="45">"id"<pos:position pos:line="30" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">OVS_YAJL_CALL<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">ovs_yajl_gen_val<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="35">jgen<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="41">jid<pos:position pos:line="31" pos:column="44"/></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">OVS_YAJL_CALL<pos:position pos:line="33" pos:column="16"/></name><argument_list pos:line="33" pos:column="16">(<argument><expr><name pos:line="33" pos:column="17">yajl_gen_map_close<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="37">jgen<pos:position pos:line="33" pos:column="41"/></name></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">OVS_YAJL_CALL<pos:position pos:line="34" pos:column="16"/></name><argument_list pos:line="34" pos:column="16">(<argument><expr><name pos:line="34" pos:column="17">yajl_gen_get_buf<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="35">jgen<pos:position pos:line="34" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="41">(<pos:position pos:line="34" pos:column="42"/></operator><specifier pos:line="34" pos:column="42">const<pos:position pos:line="34" pos:column="47"/></specifier> <name pos:line="34" pos:column="48">unsigned<pos:position pos:line="34" pos:column="56"/></name> <name pos:line="34" pos:column="57">char<pos:position pos:line="34" pos:column="61"/></name> <operator pos:line="34" pos:column="62">*<pos:position pos:line="34" pos:column="63"/></operator><operator pos:line="34" pos:column="63">*<pos:position pos:line="34" pos:column="64"/></operator><operator pos:line="34" pos:column="64">)<pos:position pos:line="34" pos:column="65"/></operator><operator pos:line="34" pos:column="65">&amp;<pos:position pos:line="34" pos:column="70"/></operator><name pos:line="34" pos:column="66">resp<pos:position pos:line="34" pos:column="70"/></name></expr></argument>,
                <argument><expr><operator pos:line="35" pos:column="17">&amp;<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="18">resp_len<pos:position pos:line="35" pos:column="26"/></name></expr></argument>)<pos:position pos:line="35" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="37" pos:column="3">/* send the response */</comment>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">OVS_DEBUG<pos:position pos:line="38" pos:column="12"/></name><argument_list pos:line="38" pos:column="12">(<argument><expr><literal type="string" pos:line="38" pos:column="13">"response: %s"<pos:position pos:line="38" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="29">resp<pos:position pos:line="38" pos:column="33"/></name></expr></argument>)<pos:position pos:line="38" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><call><name pos:line="39" pos:column="7">ovs_db_data_send<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">pdb<pos:position pos:line="39" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="29">resp<pos:position pos:line="39" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="35">resp_len<pos:position pos:line="39" pos:column="43"/></name></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call> <operator pos:line="39" pos:column="45">&lt;<pos:position pos:line="39" pos:column="49"/></operator> <literal type="number" pos:line="39" pos:column="47">0<pos:position pos:line="39" pos:column="48"/></literal></expr>)<pos:position pos:line="39" pos:column="49"/></condition><then pos:line="39" pos:column="49"> <block pos:line="39" pos:column="50">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">OVS_ERROR<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><literal type="string" pos:line="40" pos:column="15">"send echo reply failed"<pos:position pos:line="40" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
    <goto pos:line="41" pos:column="5">goto <name pos:line="41" pos:column="10">yajl_gen_failure<pos:position pos:line="41" pos:column="26"/></name>;<pos:position pos:line="41" pos:column="27"/></goto>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="43" pos:column="3">/* clean up and return success */</comment>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">yajl_gen_clear<pos:position pos:line="44" pos:column="17"/></name><argument_list pos:line="44" pos:column="17">(<argument><expr><name pos:line="44" pos:column="18">jgen<pos:position pos:line="44" pos:column="22"/></name></expr></argument>)<pos:position pos:line="44" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>
  <return pos:line="45" pos:column="3">return <expr><literal type="number" pos:line="45" pos:column="10">0<pos:position pos:line="45" pos:column="11"/></literal></expr>;<pos:position pos:line="45" pos:column="12"/></return>

<label><name pos:line="47" pos:column="1">yajl_gen_failure<pos:position pos:line="47" pos:column="17"/></name>:<pos:position pos:line="47" pos:column="18"/></label>
  <comment type="block" pos:line="48" pos:column="3">/* release memory */</comment>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">yajl_gen_clear<pos:position pos:line="49" pos:column="17"/></name><argument_list pos:line="49" pos:column="17">(<argument><expr><name pos:line="49" pos:column="18">jgen<pos:position pos:line="49" pos:column="22"/></name></expr></argument>)<pos:position pos:line="49" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>
  <return pos:line="50" pos:column="3">return <expr><operator pos:line="50" pos:column="10">-<pos:position pos:line="50" pos:column="11"/></operator><literal type="number" pos:line="50" pos:column="11">1<pos:position pos:line="50" pos:column="12"/></literal></expr>;<pos:position pos:line="50" pos:column="13"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

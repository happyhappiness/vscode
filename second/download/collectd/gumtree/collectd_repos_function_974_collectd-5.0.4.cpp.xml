<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_974_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">logfile_print<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">msg<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">severity<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
	   	<parameter><decl><type><name pos:line="2" pos:column="17">cdtime_t<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">timestamp_time<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">FILE<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">fh<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">do_close<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">tm<pos:position pos:line="6" pos:column="18"/></name></name></type> <name pos:line="6" pos:column="19">timestamp_tm<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">timestamp_str<pos:position pos:line="7" pos:column="27"/></name><index pos:line="7" pos:column="27">[<expr><literal type="number" pos:line="7" pos:column="28">64<pos:position pos:line="7" pos:column="30"/></literal></expr>]<pos:position pos:line="7" pos:column="31"/></index></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">level_str<pos:position pos:line="8" pos:column="23"/></name><index pos:line="8" pos:column="23">[<expr><literal type="number" pos:line="8" pos:column="24">16<pos:position pos:line="8" pos:column="26"/></literal></expr>]<pos:position pos:line="8" pos:column="27"/></index></name> <init pos:line="8" pos:column="28">= <expr><literal type="string" pos:line="8" pos:column="30">""<pos:position pos:line="8" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">print_severity<pos:position pos:line="10" pos:column="27"/></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28">
	<block pos:line="11" pos:column="9">{
		<switch pos:line="12" pos:column="17">switch <condition pos:line="12" pos:column="24">(<expr><name pos:line="12" pos:column="25">severity<pos:position pos:line="12" pos:column="33"/></name></expr>)<pos:position pos:line="12" pos:column="34"/></condition>
		<block pos:line="13" pos:column="17">{
		<case pos:line="14" pos:column="17">case <expr><name pos:line="14" pos:column="22">LOG_ERR<pos:position pos:line="14" pos:column="29"/></name></expr>:<pos:position pos:line="14" pos:column="30"/></case>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">snprintf<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">level_str<pos:position pos:line="15" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="45">sizeof <argument_list pos:line="15" pos:column="52">(<argument><expr><name pos:line="15" pos:column="53">level_str<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="65">"[error] "<pos:position pos:line="15" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="77"/></expr_stmt>
			<break pos:line="16" pos:column="25">break;<pos:position pos:line="16" pos:column="31"/></break>	
		<case pos:line="17" pos:column="17">case <expr><name pos:line="17" pos:column="22">LOG_WARNING<pos:position pos:line="17" pos:column="33"/></name></expr>:<pos:position pos:line="17" pos:column="34"/></case>
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">snprintf<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">level_str<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="45">sizeof <argument_list pos:line="18" pos:column="52">(<argument><expr><name pos:line="18" pos:column="53">level_str<pos:position pos:line="18" pos:column="62"/></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="65">"[warning] "<pos:position pos:line="18" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="79"/></expr_stmt>
			<break pos:line="19" pos:column="25">break;<pos:position pos:line="19" pos:column="31"/></break>
		<case pos:line="20" pos:column="17">case <expr><name pos:line="20" pos:column="22">LOG_NOTICE<pos:position pos:line="20" pos:column="32"/></name></expr>:<pos:position pos:line="20" pos:column="33"/></case>
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">snprintf<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">level_str<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="45">sizeof <argument_list pos:line="21" pos:column="52">(<argument><expr><name pos:line="21" pos:column="53">level_str<pos:position pos:line="21" pos:column="62"/></name></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="65">"[notice] "<pos:position pos:line="21" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="78"/></expr_stmt>
			<break pos:line="22" pos:column="25">break;<pos:position pos:line="22" pos:column="31"/></break>	
		<case pos:line="23" pos:column="17">case <expr><name pos:line="23" pos:column="22">LOG_INFO<pos:position pos:line="23" pos:column="30"/></name></expr>:<pos:position pos:line="23" pos:column="31"/></case>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">snprintf<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">level_str<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="45">sizeof <argument_list pos:line="24" pos:column="52">(<argument><expr><name pos:line="24" pos:column="53">level_str<pos:position pos:line="24" pos:column="62"/></name></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="65">"[info] "<pos:position pos:line="24" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="76"/></expr_stmt>
			<break pos:line="25" pos:column="25">break;<pos:position pos:line="25" pos:column="31"/></break>	
		<case pos:line="26" pos:column="17">case <expr><name pos:line="26" pos:column="22">LOG_DEBUG<pos:position pos:line="26" pos:column="31"/></name></expr>:<pos:position pos:line="26" pos:column="32"/></case>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">snprintf<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">level_str<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="45">sizeof <argument_list pos:line="27" pos:column="52">(<argument><expr><name pos:line="27" pos:column="53">level_str<pos:position pos:line="27" pos:column="62"/></name></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="65">"[debug] "<pos:position pos:line="27" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="77"/></expr_stmt>
			<break pos:line="28" pos:column="25">break;<pos:position pos:line="28" pos:column="31"/></break>	
		<default pos:line="29" pos:column="17">default:<pos:position pos:line="29" pos:column="25"/></default>
			<break pos:line="30" pos:column="25">break;<pos:position pos:line="30" pos:column="31"/></break>
		}<pos:position pos:line="31" pos:column="18"/></block></switch>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">print_timestamp<pos:position pos:line="34" pos:column="28"/></name></expr>)<pos:position pos:line="34" pos:column="29"/></condition><then pos:line="34" pos:column="29">
	<block pos:line="35" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="36" pos:column="17">time_t<pos:position pos:line="36" pos:column="23"/></name></type> <name pos:line="36" pos:column="24">tt<pos:position pos:line="36" pos:column="26"/></name> <init pos:line="36" pos:column="27">= <expr><call><name pos:line="36" pos:column="29">CDTIME_T_TO_TIME_T<pos:position pos:line="36" pos:column="47"/></name> <argument_list pos:line="36" pos:column="48">(<argument><expr><name pos:line="36" pos:column="49">timestamp_time<pos:position pos:line="36" pos:column="63"/></name></expr></argument>)<pos:position pos:line="36" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="65"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">localtime_r<pos:position pos:line="37" pos:column="28"/></name> <argument_list pos:line="37" pos:column="29">(<argument><expr><operator pos:line="37" pos:column="30">&amp;<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="31">tt<pos:position pos:line="37" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="35">&amp;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="36">timestamp_tm<pos:position pos:line="37" pos:column="48"/></name></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="50"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="39" pos:column="17">strftime<pos:position pos:line="39" pos:column="25"/></name> <argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">timestamp_str<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="42">sizeof <argument_list pos:line="39" pos:column="49">(<argument><expr><name pos:line="39" pos:column="50">timestamp_str<pos:position pos:line="39" pos:column="63"/></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="66">"%Y-%m-%d %H:%M:%S"<pos:position pos:line="39" pos:column="85"/></literal></expr></argument>,
				<argument><expr><operator pos:line="40" pos:column="33">&amp;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="34">timestamp_tm<pos:position pos:line="40" pos:column="46"/></name></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="41" pos:column="17">timestamp_str<pos:position pos:line="41" pos:column="30"/></name><index pos:line="41" pos:column="30">[<expr><sizeof pos:line="41" pos:column="31">sizeof <argument_list pos:line="41" pos:column="38">(<argument><expr><name pos:line="41" pos:column="39">timestamp_str<pos:position pos:line="41" pos:column="52"/></name></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></sizeof> <operator pos:line="41" pos:column="54">-<pos:position pos:line="41" pos:column="55"/></operator> <literal type="number" pos:line="41" pos:column="56">1<pos:position pos:line="41" pos:column="57"/></literal></expr>]<pos:position pos:line="41" pos:column="58"/></index></name> <operator pos:line="41" pos:column="59">=<pos:position pos:line="41" pos:column="60"/></operator> <literal type="char" pos:line="41" pos:column="61">'\0'<pos:position pos:line="41" pos:column="65"/></literal></expr>;<pos:position pos:line="41" pos:column="66"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="44" pos:column="9">pthread_mutex_lock<pos:position pos:line="44" pos:column="27"/></name> <argument_list pos:line="44" pos:column="28">(<argument><expr><operator pos:line="44" pos:column="29">&amp;<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="30">file_lock<pos:position pos:line="44" pos:column="39"/></name></expr></argument>)<pos:position pos:line="44" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">log_file<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">==<pos:position pos:line="46" pos:column="24"/></operator> <name pos:line="46" pos:column="25">NULL<pos:position pos:line="46" pos:column="29"/></name></expr>)<pos:position pos:line="46" pos:column="30"/></condition><then pos:line="46" pos:column="30">
	<block pos:line="47" pos:column="9">{
		<expr_stmt><expr><name pos:line="48" pos:column="17">fh<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <call><name pos:line="48" pos:column="22">fopen<pos:position pos:line="48" pos:column="27"/></name> <argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">DEFAULT_LOGFILE<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="46">"a"<pos:position pos:line="48" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="49" pos:column="17">do_close<pos:position pos:line="49" pos:column="25"/></name> <operator pos:line="49" pos:column="26">=<pos:position pos:line="49" pos:column="27"/></operator> <literal type="number" pos:line="49" pos:column="28">1<pos:position pos:line="49" pos:column="29"/></literal></expr>;<pos:position pos:line="49" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></then>
	<elseif pos:line="51" pos:column="9">else <if pos:line="51" pos:column="14">if <condition pos:line="51" pos:column="17">(<expr><call><name pos:line="51" pos:column="18">strcasecmp<pos:position pos:line="51" pos:column="28"/></name> <argument_list pos:line="51" pos:column="29">(<argument><expr><name pos:line="51" pos:column="30">log_file<pos:position pos:line="51" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="40">"stderr"<pos:position pos:line="51" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="49"/></argument_list></call> <operator pos:line="51" pos:column="50">==<pos:position pos:line="51" pos:column="52"/></operator> <literal type="number" pos:line="51" pos:column="53">0<pos:position pos:line="51" pos:column="54"/></literal></expr>)<pos:position pos:line="51" pos:column="55"/></condition><then pos:line="51" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="17">fh<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">=<pos:position pos:line="52" pos:column="21"/></operator> <name pos:line="52" pos:column="22">stderr<pos:position pos:line="52" pos:column="28"/></name></expr>;<pos:position pos:line="52" pos:column="29"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="53" pos:column="9">else <if pos:line="53" pos:column="14">if <condition pos:line="53" pos:column="17">(<expr><call><name pos:line="53" pos:column="18">strcasecmp<pos:position pos:line="53" pos:column="28"/></name> <argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">log_file<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="40">"stdout"<pos:position pos:line="53" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="49"/></argument_list></call> <operator pos:line="53" pos:column="50">==<pos:position pos:line="53" pos:column="52"/></operator> <literal type="number" pos:line="53" pos:column="53">0<pos:position pos:line="53" pos:column="54"/></literal></expr>)<pos:position pos:line="53" pos:column="55"/></condition><then pos:line="53" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="17">fh<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <name pos:line="54" pos:column="22">stdout<pos:position pos:line="54" pos:column="28"/></name></expr>;<pos:position pos:line="54" pos:column="29"/></expr_stmt></block></then></if></elseif>
	<else pos:line="55" pos:column="9">else
	<block pos:line="56" pos:column="9">{
		<expr_stmt><expr><name pos:line="57" pos:column="17">fh<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">=<pos:position pos:line="57" pos:column="21"/></operator> <call><name pos:line="57" pos:column="22">fopen<pos:position pos:line="57" pos:column="27"/></name> <argument_list pos:line="57" pos:column="28">(<argument><expr><name pos:line="57" pos:column="29">log_file<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="39">"a"<pos:position pos:line="57" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="58" pos:column="17">do_close<pos:position pos:line="58" pos:column="25"/></name> <operator pos:line="58" pos:column="26">=<pos:position pos:line="58" pos:column="27"/></operator> <literal type="number" pos:line="58" pos:column="28">1<pos:position pos:line="58" pos:column="29"/></literal></expr>;<pos:position pos:line="58" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></else></if>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">fh<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">==<pos:position pos:line="61" pos:column="18"/></operator> <name pos:line="61" pos:column="19">NULL<pos:position pos:line="61" pos:column="23"/></name></expr>)<pos:position pos:line="61" pos:column="24"/></condition><then pos:line="61" pos:column="24">
	<block pos:line="62" pos:column="9">{
			<decl_stmt><decl><type><name pos:line="63" pos:column="25">char<pos:position pos:line="63" pos:column="29"/></name></type> <name><name pos:line="63" pos:column="30">errbuf<pos:position pos:line="63" pos:column="36"/></name><index pos:line="63" pos:column="36">[<expr><literal type="number" pos:line="63" pos:column="37">1024<pos:position pos:line="63" pos:column="41"/></literal></expr>]<pos:position pos:line="63" pos:column="42"/></index></name></decl>;<pos:position pos:line="63" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="64" pos:column="25">fprintf<pos:position pos:line="64" pos:column="32"/></name> <argument_list pos:line="64" pos:column="33">(<argument><expr><name pos:line="64" pos:column="34">stderr<pos:position pos:line="64" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="42">"logfile plugin: fopen (%s) failed: %s\n"<pos:position pos:line="64" pos:column="83"/></literal></expr></argument>,
					<argument><expr><ternary><condition><expr><operator pos:line="65" pos:column="41">(<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="42">log_file<pos:position pos:line="65" pos:column="50"/></name> <operator pos:line="65" pos:column="51">==<pos:position pos:line="65" pos:column="53"/></operator> <name pos:line="65" pos:column="54">NULL<pos:position pos:line="65" pos:column="58"/></name><operator pos:line="65" pos:column="58">)<pos:position pos:line="65" pos:column="59"/></operator></expr> ?<pos:position pos:line="65" pos:column="61"/></condition><then pos:line="65" pos:column="61"> <expr><name pos:line="65" pos:column="62">DEFAULT_LOGFILE<pos:position pos:line="65" pos:column="77"/></name></expr> <pos:position pos:line="65" pos:column="78"/></then><else pos:line="65" pos:column="78">: <expr><name pos:line="65" pos:column="80">log_file<pos:position pos:line="65" pos:column="88"/></name></expr></else></ternary></expr></argument>,
					<argument><expr><call><name pos:line="66" pos:column="41">sstrerror<pos:position pos:line="66" pos:column="50"/></name> <argument_list pos:line="66" pos:column="51">(<argument><expr><name pos:line="66" pos:column="52">errno<pos:position pos:line="66" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="59">errbuf<pos:position pos:line="66" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="67">sizeof <argument_list pos:line="66" pos:column="74">(<argument><expr><name pos:line="66" pos:column="75">errbuf<pos:position pos:line="66" pos:column="81"/></name></expr></argument>)<pos:position pos:line="66" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="85"/></expr_stmt>
	}<pos:position pos:line="67" pos:column="10"/></block></then>
	<else pos:line="68" pos:column="9">else
	<block pos:line="69" pos:column="9">{
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><name pos:line="70" pos:column="21">print_timestamp<pos:position pos:line="70" pos:column="36"/></name></expr>)<pos:position pos:line="70" pos:column="37"/></condition><then pos:line="70" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="25">fprintf<pos:position pos:line="71" pos:column="32"/></name> <argument_list pos:line="71" pos:column="33">(<argument><expr><name pos:line="71" pos:column="34">fh<pos:position pos:line="71" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="38">"[%s] %s%s\n"<pos:position pos:line="71" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="53">timestamp_str<pos:position pos:line="71" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="68">level_str<pos:position pos:line="71" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="79">msg<pos:position pos:line="71" pos:column="82"/></name></expr></argument>)<pos:position pos:line="71" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="84"/></expr_stmt></block></then>
		<else pos:line="72" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="25">fprintf<pos:position pos:line="73" pos:column="32"/></name> <argument_list pos:line="73" pos:column="33">(<argument><expr><name pos:line="73" pos:column="34">fh<pos:position pos:line="73" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="38">"%s%s\n"<pos:position pos:line="73" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="48">level_str<pos:position pos:line="73" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="59">msg<pos:position pos:line="73" pos:column="62"/></name></expr></argument>)<pos:position pos:line="73" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="64"/></expr_stmt></block></else></if>

		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><name pos:line="75" pos:column="21">do_close<pos:position pos:line="75" pos:column="29"/></name> <operator pos:line="75" pos:column="30">!=<pos:position pos:line="75" pos:column="32"/></operator> <literal type="number" pos:line="75" pos:column="33">0<pos:position pos:line="75" pos:column="34"/></literal></expr>)<pos:position pos:line="75" pos:column="35"/></condition><then pos:line="75" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="25">fclose<pos:position pos:line="76" pos:column="31"/></name> <argument_list pos:line="76" pos:column="32">(<argument><expr><name pos:line="76" pos:column="33">fh<pos:position pos:line="76" pos:column="35"/></name></expr></argument>)<pos:position pos:line="76" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="37"/></expr_stmt></block></then></if>
	}<pos:position pos:line="77" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="79" pos:column="9">pthread_mutex_unlock<pos:position pos:line="79" pos:column="29"/></name> <argument_list pos:line="79" pos:column="30">(<argument><expr><operator pos:line="79" pos:column="31">&amp;<pos:position pos:line="79" pos:column="36"/></operator><name pos:line="79" pos:column="32">file_lock<pos:position pos:line="79" pos:column="41"/></name></expr></argument>)<pos:position pos:line="79" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="43"/></expr_stmt>

	<return pos:line="81" pos:column="9">return;<pos:position pos:line="81" pos:column="16"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

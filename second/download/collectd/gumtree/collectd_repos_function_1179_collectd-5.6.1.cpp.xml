<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1179_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mqtt_config_publisher<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">oconfig_item_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ci<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">mqtt_client_conf_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">conf<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">cb_name<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><literal type="number" pos:line="4" pos:column="18">1024<pos:position pos:line="4" pos:column="22"/></literal></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">status<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">conf<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <call><name pos:line="7" pos:column="12">calloc<pos:position pos:line="7" pos:column="18"/></name> <argument_list pos:line="7" pos:column="19">(<argument><expr><literal type="number" pos:line="7" pos:column="20">1<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="23">sizeof <argument_list pos:line="7" pos:column="30">(<argument><expr><operator pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">conf<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">conf<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">==<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">NULL<pos:position pos:line="8" pos:column="21"/></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22">
    <block pos:line="9" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">ERROR<pos:position pos:line="10" pos:column="14"/></name> <argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="string" pos:line="10" pos:column="16">"mqtt plugin: calloc failed."<pos:position pos:line="10" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><operator pos:line="11" pos:column="17">-<pos:position pos:line="11" pos:column="18"/></operator><literal type="number" pos:line="11" pos:column="18">1<pos:position pos:line="11" pos:column="19"/></literal><operator pos:line="11" pos:column="19">)<pos:position pos:line="11" pos:column="20"/></operator></expr>;<pos:position pos:line="11" pos:column="21"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">conf<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">publish<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="21">1<pos:position pos:line="13" pos:column="22"/></literal></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="15" pos:column="5">conf<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">name<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">NULL<pos:position pos:line="15" pos:column="22"/></name></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">status<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">cf_util_get_string<pos:position pos:line="16" pos:column="32"/></name> <argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">ci<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="38">&amp;<pos:position pos:line="16" pos:column="43"/></operator><name><name pos:line="16" pos:column="39">conf<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">-&gt;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="45">name<pos:position pos:line="16" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="51"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">status<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">!=<pos:position pos:line="17" pos:column="18"/></operator> <literal type="number" pos:line="17" pos:column="19">0<pos:position pos:line="17" pos:column="20"/></literal></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21">
    <block pos:line="18" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">mqtt_free<pos:position pos:line="19" pos:column="18"/></name> <argument_list pos:line="19" pos:column="19">(<argument><expr><name pos:line="19" pos:column="20">conf<pos:position pos:line="19" pos:column="24"/></name></expr></argument>)<pos:position pos:line="19" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><operator pos:line="20" pos:column="16">(<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">status<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">)<pos:position pos:line="20" pos:column="24"/></operator></expr>;<pos:position pos:line="20" pos:column="25"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="23" pos:column="5">conf<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">host<pos:position pos:line="23" pos:column="15"/></name></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <call><name pos:line="23" pos:column="18">strdup<pos:position pos:line="23" pos:column="24"/></name> <argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">MQTT_DEFAULT_HOST<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">conf<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">-&gt;<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="11">port<pos:position pos:line="24" pos:column="15"/></name></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">MQTT_DEFAULT_PORT<pos:position pos:line="24" pos:column="35"/></name></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">conf<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">client_id<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">NULL<pos:position pos:line="25" pos:column="27"/></name></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">conf<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">qos<pos:position pos:line="26" pos:column="14"/></name></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <literal type="number" pos:line="26" pos:column="17">0<pos:position pos:line="26" pos:column="18"/></literal></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">conf<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">-&gt;<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="11">topic_prefix<pos:position pos:line="27" pos:column="23"/></name></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <call><name pos:line="27" pos:column="26">strdup<pos:position pos:line="27" pos:column="32"/></name> <argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">MQTT_DEFAULT_TOPIC_PREFIX<pos:position pos:line="27" pos:column="59"/></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">conf<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">-&gt;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="11">store_rates<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <literal type="number" pos:line="28" pos:column="25">1<pos:position pos:line="28" pos:column="26"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="30" pos:column="5">status<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <call><name pos:line="30" pos:column="14">pthread_mutex_init<pos:position pos:line="30" pos:column="32"/></name> <argument_list pos:line="30" pos:column="33">(<argument><expr><operator pos:line="30" pos:column="34">&amp;<pos:position pos:line="30" pos:column="39"/></operator><name><name pos:line="30" pos:column="35">conf<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">lock<pos:position pos:line="30" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">NULL<pos:position pos:line="30" pos:column="51"/></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">status<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">!=<pos:position pos:line="31" pos:column="18"/></operator> <literal type="number" pos:line="31" pos:column="19">0<pos:position pos:line="31" pos:column="20"/></literal></expr>)<pos:position pos:line="31" pos:column="21"/></condition><then pos:line="31" pos:column="21">
    <block pos:line="32" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">mqtt_free<pos:position pos:line="33" pos:column="16"/></name> <argument_list pos:line="33" pos:column="17">(<argument><expr><name pos:line="33" pos:column="18">conf<pos:position pos:line="33" pos:column="22"/></name></expr></argument>)<pos:position pos:line="33" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>
      <return pos:line="34" pos:column="7">return <expr><operator pos:line="34" pos:column="14">(<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">status<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">)<pos:position pos:line="34" pos:column="22"/></operator></expr>;<pos:position pos:line="34" pos:column="23"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">C_COMPLAIN_INIT<pos:position pos:line="37" pos:column="20"/></name> <argument_list pos:line="37" pos:column="21">(<argument><expr><operator pos:line="37" pos:column="22">&amp;<pos:position pos:line="37" pos:column="27"/></operator><name><name pos:line="37" pos:column="23">conf<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">-&gt;<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="29">complaint_cantpublish<pos:position pos:line="37" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt>

    <for pos:line="39" pos:column="5">for <control pos:line="39" pos:column="9">(<init><decl><type><name pos:line="39" pos:column="10">int<pos:position pos:line="39" pos:column="13"/></name></type> <name pos:line="39" pos:column="14">i<pos:position pos:line="39" pos:column="15"/></name> <init pos:line="39" pos:column="16">= <expr><literal type="number" pos:line="39" pos:column="18">0<pos:position pos:line="39" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="20"/></init> <condition><expr><name pos:line="39" pos:column="21">i<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">&lt;<pos:position pos:line="39" pos:column="27"/></operator> <name><name pos:line="39" pos:column="25">ci<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">children_num<pos:position pos:line="39" pos:column="41"/></name></name></expr>;<pos:position pos:line="39" pos:column="42"/></condition> <incr><expr><name pos:line="39" pos:column="43">i<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">++<pos:position pos:line="39" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="47"/></control>
    <block pos:line="40" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="41" pos:column="9">oconfig_item_t<pos:position pos:line="41" pos:column="23"/></name> <modifier pos:line="41" pos:column="24">*<pos:position pos:line="41" pos:column="25"/></modifier></type><name pos:line="41" pos:column="25">child<pos:position pos:line="41" pos:column="30"/></name> <init pos:line="41" pos:column="31">= <expr><name><name pos:line="41" pos:column="33">ci<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">-&gt;<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="37">children<pos:position pos:line="41" pos:column="45"/></name></name> <operator pos:line="41" pos:column="46">+<pos:position pos:line="41" pos:column="47"/></operator> <name pos:line="41" pos:column="48">i<pos:position pos:line="41" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="41" pos:column="50"/></decl_stmt>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">strcasecmp<pos:position pos:line="42" pos:column="23"/></name> <argument_list pos:line="42" pos:column="24">(<argument><expr><literal type="string" pos:line="42" pos:column="25">"Host"<pos:position pos:line="42" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="33">child<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">-&gt;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="40">key<pos:position pos:line="42" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call> <operator pos:line="42" pos:column="45">==<pos:position pos:line="42" pos:column="47"/></operator> <literal type="number" pos:line="42" pos:column="48">0<pos:position pos:line="42" pos:column="49"/></literal></expr>)<pos:position pos:line="42" pos:column="50"/></condition><then pos:line="42" pos:column="50">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="13">cf_util_get_string<pos:position pos:line="43" pos:column="31"/></name> <argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">child<pos:position pos:line="43" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="40">&amp;<pos:position pos:line="43" pos:column="45"/></operator><name><name pos:line="43" pos:column="41">conf<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">-&gt;<pos:position pos:line="43" pos:column="50"/></operator><name pos:line="43" pos:column="47">host<pos:position pos:line="43" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt></block></then>
        <elseif pos:line="44" pos:column="9">else <if pos:line="44" pos:column="14">if <condition pos:line="44" pos:column="17">(<expr><call><name pos:line="44" pos:column="18">strcasecmp<pos:position pos:line="44" pos:column="28"/></name> <argument_list pos:line="44" pos:column="29">(<argument><expr><literal type="string" pos:line="44" pos:column="30">"Port"<pos:position pos:line="44" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="38">child<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">-&gt;<pos:position pos:line="44" pos:column="48"/></operator><name pos:line="44" pos:column="45">key<pos:position pos:line="44" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call> <operator pos:line="44" pos:column="50">==<pos:position pos:line="44" pos:column="52"/></operator> <literal type="number" pos:line="44" pos:column="53">0<pos:position pos:line="44" pos:column="54"/></literal></expr>)<pos:position pos:line="44" pos:column="55"/></condition><then pos:line="44" pos:column="55">
        <block pos:line="45" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="46" pos:column="13">int<pos:position pos:line="46" pos:column="16"/></name></type> <name pos:line="46" pos:column="17">tmp<pos:position pos:line="46" pos:column="20"/></name> <init pos:line="46" pos:column="21">= <expr><call><name pos:line="46" pos:column="23">cf_util_get_port_number<pos:position pos:line="46" pos:column="46"/></name> <argument_list pos:line="46" pos:column="47">(<argument><expr><name pos:line="46" pos:column="48">child<pos:position pos:line="46" pos:column="53"/></name></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="55"/></decl_stmt>
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name pos:line="47" pos:column="17">tmp<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">&lt;<pos:position pos:line="47" pos:column="25"/></operator> <literal type="number" pos:line="47" pos:column="23">0<pos:position pos:line="47" pos:column="24"/></literal></expr>)<pos:position pos:line="47" pos:column="25"/></condition><then pos:line="47" pos:column="25">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="17">ERROR<pos:position pos:line="48" pos:column="22"/></name> <argument_list pos:line="48" pos:column="23">(<argument><expr><literal type="string" pos:line="48" pos:column="24">"mqtt plugin: Invalid port number."<pos:position pos:line="48" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="61"/></expr_stmt></block></then>
            <else pos:line="49" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="17">conf<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">port<pos:position pos:line="50" pos:column="27"/></name></name> <operator pos:line="50" pos:column="28">=<pos:position pos:line="50" pos:column="29"/></operator> <name pos:line="50" pos:column="30">tmp<pos:position pos:line="50" pos:column="33"/></name></expr>;<pos:position pos:line="50" pos:column="34"/></expr_stmt></block></else></if>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="52" pos:column="9">else <if pos:line="52" pos:column="14">if <condition pos:line="52" pos:column="17">(<expr><call><name pos:line="52" pos:column="18">strcasecmp<pos:position pos:line="52" pos:column="28"/></name> <argument_list pos:line="52" pos:column="29">(<argument><expr><literal type="string" pos:line="52" pos:column="30">"ClientId"<pos:position pos:line="52" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="42">child<pos:position pos:line="52" pos:column="47"/></name><operator pos:line="52" pos:column="47">-&gt;<pos:position pos:line="52" pos:column="52"/></operator><name pos:line="52" pos:column="49">key<pos:position pos:line="52" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call> <operator pos:line="52" pos:column="54">==<pos:position pos:line="52" pos:column="56"/></operator> <literal type="number" pos:line="52" pos:column="57">0<pos:position pos:line="52" pos:column="58"/></literal></expr>)<pos:position pos:line="52" pos:column="59"/></condition><then pos:line="52" pos:column="59">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="13">cf_util_get_string<pos:position pos:line="53" pos:column="31"/></name> <argument_list pos:line="53" pos:column="32">(<argument><expr><name pos:line="53" pos:column="33">child<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="40">&amp;<pos:position pos:line="53" pos:column="45"/></operator><name><name pos:line="53" pos:column="41">conf<pos:position pos:line="53" pos:column="45"/></name><operator pos:line="53" pos:column="45">-&gt;<pos:position pos:line="53" pos:column="50"/></operator><name pos:line="53" pos:column="47">client_id<pos:position pos:line="53" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="58"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="54" pos:column="9">else <if pos:line="54" pos:column="14">if <condition pos:line="54" pos:column="17">(<expr><call><name pos:line="54" pos:column="18">strcasecmp<pos:position pos:line="54" pos:column="28"/></name> <argument_list pos:line="54" pos:column="29">(<argument><expr><literal type="string" pos:line="54" pos:column="30">"User"<pos:position pos:line="54" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="38">child<pos:position pos:line="54" pos:column="43"/></name><operator pos:line="54" pos:column="43">-&gt;<pos:position pos:line="54" pos:column="48"/></operator><name pos:line="54" pos:column="45">key<pos:position pos:line="54" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="49"/></argument_list></call> <operator pos:line="54" pos:column="50">==<pos:position pos:line="54" pos:column="52"/></operator> <literal type="number" pos:line="54" pos:column="53">0<pos:position pos:line="54" pos:column="54"/></literal></expr>)<pos:position pos:line="54" pos:column="55"/></condition><then pos:line="54" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="13">cf_util_get_string<pos:position pos:line="55" pos:column="31"/></name> <argument_list pos:line="55" pos:column="32">(<argument><expr><name pos:line="55" pos:column="33">child<pos:position pos:line="55" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="40">&amp;<pos:position pos:line="55" pos:column="45"/></operator><name><name pos:line="55" pos:column="41">conf<pos:position pos:line="55" pos:column="45"/></name><operator pos:line="55" pos:column="45">-&gt;<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="47">username<pos:position pos:line="55" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="57"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="56" pos:column="9">else <if pos:line="56" pos:column="14">if <condition pos:line="56" pos:column="17">(<expr><call><name pos:line="56" pos:column="18">strcasecmp<pos:position pos:line="56" pos:column="28"/></name> <argument_list pos:line="56" pos:column="29">(<argument><expr><literal type="string" pos:line="56" pos:column="30">"Password"<pos:position pos:line="56" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="42">child<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">-&gt;<pos:position pos:line="56" pos:column="52"/></operator><name pos:line="56" pos:column="49">key<pos:position pos:line="56" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="53"/></argument_list></call> <operator pos:line="56" pos:column="54">==<pos:position pos:line="56" pos:column="56"/></operator> <literal type="number" pos:line="56" pos:column="57">0<pos:position pos:line="56" pos:column="58"/></literal></expr>)<pos:position pos:line="56" pos:column="59"/></condition><then pos:line="56" pos:column="59">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="13">cf_util_get_string<pos:position pos:line="57" pos:column="31"/></name> <argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">child<pos:position pos:line="57" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="40">&amp;<pos:position pos:line="57" pos:column="45"/></operator><name><name pos:line="57" pos:column="41">conf<pos:position pos:line="57" pos:column="45"/></name><operator pos:line="57" pos:column="45">-&gt;<pos:position pos:line="57" pos:column="50"/></operator><name pos:line="57" pos:column="47">password<pos:position pos:line="57" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="57"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="58" pos:column="9">else <if pos:line="58" pos:column="14">if <condition pos:line="58" pos:column="17">(<expr><call><name pos:line="58" pos:column="18">strcasecmp<pos:position pos:line="58" pos:column="28"/></name> <argument_list pos:line="58" pos:column="29">(<argument><expr><literal type="string" pos:line="58" pos:column="30">"QoS"<pos:position pos:line="58" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="37">child<pos:position pos:line="58" pos:column="42"/></name><operator pos:line="58" pos:column="42">-&gt;<pos:position pos:line="58" pos:column="47"/></operator><name pos:line="58" pos:column="44">key<pos:position pos:line="58" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="48"/></argument_list></call> <operator pos:line="58" pos:column="49">==<pos:position pos:line="58" pos:column="51"/></operator> <literal type="number" pos:line="58" pos:column="52">0<pos:position pos:line="58" pos:column="53"/></literal></expr>)<pos:position pos:line="58" pos:column="54"/></condition><then pos:line="58" pos:column="54">
        <block pos:line="59" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="60" pos:column="13">int<pos:position pos:line="60" pos:column="16"/></name></type> <name pos:line="60" pos:column="17">tmp<pos:position pos:line="60" pos:column="20"/></name> <init pos:line="60" pos:column="21">= <expr><operator pos:line="60" pos:column="23">-<pos:position pos:line="60" pos:column="24"/></operator><literal type="number" pos:line="60" pos:column="24">1<pos:position pos:line="60" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="60" pos:column="26"/></decl_stmt>
            <expr_stmt><expr><name pos:line="61" pos:column="13">status<pos:position pos:line="61" pos:column="19"/></name> <operator pos:line="61" pos:column="20">=<pos:position pos:line="61" pos:column="21"/></operator> <call><name pos:line="61" pos:column="22">cf_util_get_int<pos:position pos:line="61" pos:column="37"/></name> <argument_list pos:line="61" pos:column="38">(<argument><expr><name pos:line="61" pos:column="39">child<pos:position pos:line="61" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="46">&amp;<pos:position pos:line="61" pos:column="51"/></operator><name pos:line="61" pos:column="47">tmp<pos:position pos:line="61" pos:column="50"/></name></expr></argument>)<pos:position pos:line="61" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="52"/></expr_stmt>
            <if pos:line="62" pos:column="13">if <condition pos:line="62" pos:column="16">(<expr><operator pos:line="62" pos:column="17">(<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="18">status<pos:position pos:line="62" pos:column="24"/></name> <operator pos:line="62" pos:column="25">!=<pos:position pos:line="62" pos:column="27"/></operator> <literal type="number" pos:line="62" pos:column="28">0<pos:position pos:line="62" pos:column="29"/></literal><operator pos:line="62" pos:column="29">)<pos:position pos:line="62" pos:column="30"/></operator> <operator pos:line="62" pos:column="31">||<pos:position pos:line="62" pos:column="33"/></operator> <operator pos:line="62" pos:column="34">(<pos:position pos:line="62" pos:column="35"/></operator><name pos:line="62" pos:column="35">tmp<pos:position pos:line="62" pos:column="38"/></name> <operator pos:line="62" pos:column="39">&lt;<pos:position pos:line="62" pos:column="43"/></operator> <literal type="number" pos:line="62" pos:column="41">0<pos:position pos:line="62" pos:column="42"/></literal><operator pos:line="62" pos:column="42">)<pos:position pos:line="62" pos:column="43"/></operator> <operator pos:line="62" pos:column="44">||<pos:position pos:line="62" pos:column="46"/></operator> <operator pos:line="62" pos:column="47">(<pos:position pos:line="62" pos:column="48"/></operator><name pos:line="62" pos:column="48">tmp<pos:position pos:line="62" pos:column="51"/></name> <operator pos:line="62" pos:column="52">&gt;<pos:position pos:line="62" pos:column="56"/></operator> <literal type="number" pos:line="62" pos:column="54">2<pos:position pos:line="62" pos:column="55"/></literal><operator pos:line="62" pos:column="55">)<pos:position pos:line="62" pos:column="56"/></operator></expr>)<pos:position pos:line="62" pos:column="57"/></condition><then pos:line="62" pos:column="57">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="17">ERROR<pos:position pos:line="63" pos:column="22"/></name> <argument_list pos:line="63" pos:column="23">(<argument><expr><literal type="string" pos:line="63" pos:column="24">"mqtt plugin: Not a valid QoS setting."<pos:position pos:line="63" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="65"/></expr_stmt></block></then>
            <else pos:line="64" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="17">conf<pos:position pos:line="65" pos:column="21"/></name><operator pos:line="65" pos:column="21">-&gt;<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="23">qos<pos:position pos:line="65" pos:column="26"/></name></name> <operator pos:line="65" pos:column="27">=<pos:position pos:line="65" pos:column="28"/></operator> <name pos:line="65" pos:column="29">tmp<pos:position pos:line="65" pos:column="32"/></name></expr>;<pos:position pos:line="65" pos:column="33"/></expr_stmt></block></else></if>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="67" pos:column="9">else <if pos:line="67" pos:column="14">if <condition pos:line="67" pos:column="17">(<expr><call><name pos:line="67" pos:column="18">strcasecmp<pos:position pos:line="67" pos:column="28"/></name> <argument_list pos:line="67" pos:column="29">(<argument><expr><literal type="string" pos:line="67" pos:column="30">"Prefix"<pos:position pos:line="67" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="40">child<pos:position pos:line="67" pos:column="45"/></name><operator pos:line="67" pos:column="45">-&gt;<pos:position pos:line="67" pos:column="50"/></operator><name pos:line="67" pos:column="47">key<pos:position pos:line="67" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="51"/></argument_list></call> <operator pos:line="67" pos:column="52">==<pos:position pos:line="67" pos:column="54"/></operator> <literal type="number" pos:line="67" pos:column="55">0<pos:position pos:line="67" pos:column="56"/></literal></expr>)<pos:position pos:line="67" pos:column="57"/></condition><then pos:line="67" pos:column="57">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="13">cf_util_get_string<pos:position pos:line="68" pos:column="31"/></name> <argument_list pos:line="68" pos:column="32">(<argument><expr><name pos:line="68" pos:column="33">child<pos:position pos:line="68" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="40">&amp;<pos:position pos:line="68" pos:column="45"/></operator><name><name pos:line="68" pos:column="41">conf<pos:position pos:line="68" pos:column="45"/></name><operator pos:line="68" pos:column="45">-&gt;<pos:position pos:line="68" pos:column="50"/></operator><name pos:line="68" pos:column="47">topic_prefix<pos:position pos:line="68" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="61"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="69" pos:column="9">else <if pos:line="69" pos:column="14">if <condition pos:line="69" pos:column="17">(<expr><call><name pos:line="69" pos:column="18">strcasecmp<pos:position pos:line="69" pos:column="28"/></name> <argument_list pos:line="69" pos:column="29">(<argument><expr><literal type="string" pos:line="69" pos:column="30">"StoreRates"<pos:position pos:line="69" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="44">child<pos:position pos:line="69" pos:column="49"/></name><operator pos:line="69" pos:column="49">-&gt;<pos:position pos:line="69" pos:column="54"/></operator><name pos:line="69" pos:column="51">key<pos:position pos:line="69" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="55"/></argument_list></call> <operator pos:line="69" pos:column="56">==<pos:position pos:line="69" pos:column="58"/></operator> <literal type="number" pos:line="69" pos:column="59">0<pos:position pos:line="69" pos:column="60"/></literal></expr>)<pos:position pos:line="69" pos:column="61"/></condition><then pos:line="69" pos:column="61">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="13">cf_util_get_boolean<pos:position pos:line="70" pos:column="32"/></name> <argument_list pos:line="70" pos:column="33">(<argument><expr><name pos:line="70" pos:column="34">child<pos:position pos:line="70" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="41">&amp;<pos:position pos:line="70" pos:column="46"/></operator><name><name pos:line="70" pos:column="42">conf<pos:position pos:line="70" pos:column="46"/></name><operator pos:line="70" pos:column="46">-&gt;<pos:position pos:line="70" pos:column="51"/></operator><name pos:line="70" pos:column="48">store_rates<pos:position pos:line="70" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="61"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="71" pos:column="9">else <if pos:line="71" pos:column="14">if <condition pos:line="71" pos:column="17">(<expr><call><name pos:line="71" pos:column="18">strcasecmp<pos:position pos:line="71" pos:column="28"/></name> <argument_list pos:line="71" pos:column="29">(<argument><expr><literal type="string" pos:line="71" pos:column="30">"Retain"<pos:position pos:line="71" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="40">child<pos:position pos:line="71" pos:column="45"/></name><operator pos:line="71" pos:column="45">-&gt;<pos:position pos:line="71" pos:column="50"/></operator><name pos:line="71" pos:column="47">key<pos:position pos:line="71" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call> <operator pos:line="71" pos:column="52">==<pos:position pos:line="71" pos:column="54"/></operator> <literal type="number" pos:line="71" pos:column="55">0<pos:position pos:line="71" pos:column="56"/></literal></expr>)<pos:position pos:line="71" pos:column="57"/></condition><then pos:line="71" pos:column="57">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="13">cf_util_get_boolean<pos:position pos:line="72" pos:column="32"/></name> <argument_list pos:line="72" pos:column="33">(<argument><expr><name pos:line="72" pos:column="34">child<pos:position pos:line="72" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="41">&amp;<pos:position pos:line="72" pos:column="46"/></operator><name><name pos:line="72" pos:column="42">conf<pos:position pos:line="72" pos:column="46"/></name><operator pos:line="72" pos:column="46">-&gt;<pos:position pos:line="72" pos:column="51"/></operator><name pos:line="72" pos:column="48">retain<pos:position pos:line="72" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="56"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="73" pos:column="9">else <if pos:line="73" pos:column="14">if <condition pos:line="73" pos:column="17">(<expr><call><name pos:line="73" pos:column="18">strcasecmp<pos:position pos:line="73" pos:column="28"/></name> <argument_list pos:line="73" pos:column="29">(<argument><expr><literal type="string" pos:line="73" pos:column="30">"CACert"<pos:position pos:line="73" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="40">child<pos:position pos:line="73" pos:column="45"/></name><operator pos:line="73" pos:column="45">-&gt;<pos:position pos:line="73" pos:column="50"/></operator><name pos:line="73" pos:column="47">key<pos:position pos:line="73" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="51"/></argument_list></call> <operator pos:line="73" pos:column="52">==<pos:position pos:line="73" pos:column="54"/></operator> <literal type="number" pos:line="73" pos:column="55">0<pos:position pos:line="73" pos:column="56"/></literal></expr>)<pos:position pos:line="73" pos:column="57"/></condition><then pos:line="73" pos:column="57">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="13">cf_util_get_string<pos:position pos:line="74" pos:column="31"/></name> <argument_list pos:line="74" pos:column="32">(<argument><expr><name pos:line="74" pos:column="33">child<pos:position pos:line="74" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="40">&amp;<pos:position pos:line="74" pos:column="45"/></operator><name><name pos:line="74" pos:column="41">conf<pos:position pos:line="74" pos:column="45"/></name><operator pos:line="74" pos:column="45">-&gt;<pos:position pos:line="74" pos:column="50"/></operator><name pos:line="74" pos:column="47">cacertificatefile<pos:position pos:line="74" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="66"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="75" pos:column="9">else <if pos:line="75" pos:column="14">if <condition pos:line="75" pos:column="17">(<expr><call><name pos:line="75" pos:column="18">strcasecmp<pos:position pos:line="75" pos:column="28"/></name> <argument_list pos:line="75" pos:column="29">(<argument><expr><literal type="string" pos:line="75" pos:column="30">"CertificateFile"<pos:position pos:line="75" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="49">child<pos:position pos:line="75" pos:column="54"/></name><operator pos:line="75" pos:column="54">-&gt;<pos:position pos:line="75" pos:column="59"/></operator><name pos:line="75" pos:column="56">key<pos:position pos:line="75" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="60"/></argument_list></call> <operator pos:line="75" pos:column="61">==<pos:position pos:line="75" pos:column="63"/></operator> <literal type="number" pos:line="75" pos:column="64">0<pos:position pos:line="75" pos:column="65"/></literal></expr>)<pos:position pos:line="75" pos:column="66"/></condition><then pos:line="75" pos:column="66">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="13">cf_util_get_string<pos:position pos:line="76" pos:column="31"/></name> <argument_list pos:line="76" pos:column="32">(<argument><expr><name pos:line="76" pos:column="33">child<pos:position pos:line="76" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="40">&amp;<pos:position pos:line="76" pos:column="45"/></operator><name><name pos:line="76" pos:column="41">conf<pos:position pos:line="76" pos:column="45"/></name><operator pos:line="76" pos:column="45">-&gt;<pos:position pos:line="76" pos:column="50"/></operator><name pos:line="76" pos:column="47">certificatefile<pos:position pos:line="76" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="64"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="77" pos:column="9">else <if pos:line="77" pos:column="14">if <condition pos:line="77" pos:column="17">(<expr><call><name pos:line="77" pos:column="18">strcasecmp<pos:position pos:line="77" pos:column="28"/></name> <argument_list pos:line="77" pos:column="29">(<argument><expr><literal type="string" pos:line="77" pos:column="30">"CertificateKeyFile"<pos:position pos:line="77" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="52">child<pos:position pos:line="77" pos:column="57"/></name><operator pos:line="77" pos:column="57">-&gt;<pos:position pos:line="77" pos:column="62"/></operator><name pos:line="77" pos:column="59">key<pos:position pos:line="77" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="63"/></argument_list></call> <operator pos:line="77" pos:column="64">==<pos:position pos:line="77" pos:column="66"/></operator> <literal type="number" pos:line="77" pos:column="67">0<pos:position pos:line="77" pos:column="68"/></literal></expr>)<pos:position pos:line="77" pos:column="69"/></condition><then pos:line="77" pos:column="69">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="13">cf_util_get_string<pos:position pos:line="78" pos:column="31"/></name> <argument_list pos:line="78" pos:column="32">(<argument><expr><name pos:line="78" pos:column="33">child<pos:position pos:line="78" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="40">&amp;<pos:position pos:line="78" pos:column="45"/></operator><name><name pos:line="78" pos:column="41">conf<pos:position pos:line="78" pos:column="45"/></name><operator pos:line="78" pos:column="45">-&gt;<pos:position pos:line="78" pos:column="50"/></operator><name pos:line="78" pos:column="47">certificatekeyfile<pos:position pos:line="78" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="67"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="79" pos:column="9">else <if pos:line="79" pos:column="14">if <condition pos:line="79" pos:column="17">(<expr><call><name pos:line="79" pos:column="18">strcasecmp<pos:position pos:line="79" pos:column="28"/></name> <argument_list pos:line="79" pos:column="29">(<argument><expr><literal type="string" pos:line="79" pos:column="30">"TLSProtocol"<pos:position pos:line="79" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="45">child<pos:position pos:line="79" pos:column="50"/></name><operator pos:line="79" pos:column="50">-&gt;<pos:position pos:line="79" pos:column="55"/></operator><name pos:line="79" pos:column="52">key<pos:position pos:line="79" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="56"/></argument_list></call> <operator pos:line="79" pos:column="57">==<pos:position pos:line="79" pos:column="59"/></operator> <literal type="number" pos:line="79" pos:column="60">0<pos:position pos:line="79" pos:column="61"/></literal></expr>)<pos:position pos:line="79" pos:column="62"/></condition><then pos:line="79" pos:column="62">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="80" pos:column="13">cf_util_get_string<pos:position pos:line="80" pos:column="31"/></name> <argument_list pos:line="80" pos:column="32">(<argument><expr><name pos:line="80" pos:column="33">child<pos:position pos:line="80" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="40">&amp;<pos:position pos:line="80" pos:column="45"/></operator><name><name pos:line="80" pos:column="41">conf<pos:position pos:line="80" pos:column="45"/></name><operator pos:line="80" pos:column="45">-&gt;<pos:position pos:line="80" pos:column="50"/></operator><name pos:line="80" pos:column="47">tlsprotocol<pos:position pos:line="80" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="60"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="81" pos:column="9">else <if pos:line="81" pos:column="14">if <condition pos:line="81" pos:column="17">(<expr><call><name pos:line="81" pos:column="18">strcasecmp<pos:position pos:line="81" pos:column="28"/></name> <argument_list pos:line="81" pos:column="29">(<argument><expr><literal type="string" pos:line="81" pos:column="30">"CipherSuite"<pos:position pos:line="81" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="45">child<pos:position pos:line="81" pos:column="50"/></name><operator pos:line="81" pos:column="50">-&gt;<pos:position pos:line="81" pos:column="55"/></operator><name pos:line="81" pos:column="52">key<pos:position pos:line="81" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="56"/></argument_list></call> <operator pos:line="81" pos:column="57">==<pos:position pos:line="81" pos:column="59"/></operator> <literal type="number" pos:line="81" pos:column="60">0<pos:position pos:line="81" pos:column="61"/></literal></expr>)<pos:position pos:line="81" pos:column="62"/></condition><then pos:line="81" pos:column="62">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="13">cf_util_get_string<pos:position pos:line="82" pos:column="31"/></name> <argument_list pos:line="82" pos:column="32">(<argument><expr><name pos:line="82" pos:column="33">child<pos:position pos:line="82" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="40">&amp;<pos:position pos:line="82" pos:column="45"/></operator><name><name pos:line="82" pos:column="41">conf<pos:position pos:line="82" pos:column="45"/></name><operator pos:line="82" pos:column="45">-&gt;<pos:position pos:line="82" pos:column="50"/></operator><name pos:line="82" pos:column="47">ciphersuite<pos:position pos:line="82" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="60"/></expr_stmt></block></then></if></elseif>
        <else pos:line="83" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="13">ERROR<pos:position pos:line="84" pos:column="18"/></name> <argument_list pos:line="84" pos:column="19">(<argument><expr><literal type="string" pos:line="84" pos:column="20">"mqtt plugin: Unknown config option: %s"<pos:position pos:line="84" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="62">child<pos:position pos:line="84" pos:column="67"/></name><operator pos:line="84" pos:column="67">-&gt;<pos:position pos:line="84" pos:column="72"/></operator><name pos:line="84" pos:column="69">key<pos:position pos:line="84" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="74"/></expr_stmt></block></else></if>
    }<pos:position pos:line="85" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="87" pos:column="5">ssnprintf<pos:position pos:line="87" pos:column="14"/></name> <argument_list pos:line="87" pos:column="15">(<argument><expr><name pos:line="87" pos:column="16">cb_name<pos:position pos:line="87" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="87" pos:column="25">sizeof <argument_list pos:line="87" pos:column="32">(<argument><expr><name pos:line="87" pos:column="33">cb_name<pos:position pos:line="87" pos:column="40"/></name></expr></argument>)<pos:position pos:line="87" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="43">"mqtt/%s"<pos:position pos:line="87" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="54">conf<pos:position pos:line="87" pos:column="58"/></name><operator pos:line="87" pos:column="58">-&gt;<pos:position pos:line="87" pos:column="63"/></operator><name pos:line="87" pos:column="60">name<pos:position pos:line="87" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="66"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="88" pos:column="5">user_data_t<pos:position pos:line="88" pos:column="16"/></name></type> <name pos:line="88" pos:column="17">user_data<pos:position pos:line="88" pos:column="26"/></name> <init pos:line="88" pos:column="27">= <expr><block pos:line="88" pos:column="29">{
        <expr><operator pos:line="89" pos:column="9">.<pos:position pos:line="89" pos:column="10"/></operator><name pos:line="89" pos:column="10">data<pos:position pos:line="89" pos:column="14"/></name> <operator pos:line="89" pos:column="15">=<pos:position pos:line="89" pos:column="16"/></operator> <name pos:line="89" pos:column="17">conf<pos:position pos:line="89" pos:column="21"/></name></expr>
    }<pos:position pos:line="90" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="90" pos:column="7"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="92" pos:column="5">plugin_register_write<pos:position pos:line="92" pos:column="26"/></name> <argument_list pos:line="92" pos:column="27">(<argument><expr><name pos:line="92" pos:column="28">cb_name<pos:position pos:line="92" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="37">mqtt_write<pos:position pos:line="92" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="49">&amp;<pos:position pos:line="92" pos:column="54"/></operator><name pos:line="92" pos:column="50">user_data<pos:position pos:line="92" pos:column="59"/></name></expr></argument>)<pos:position pos:line="92" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="61"/></expr_stmt>
    <return pos:line="93" pos:column="5">return <expr><operator pos:line="93" pos:column="12">(<pos:position pos:line="93" pos:column="13"/></operator><literal type="number" pos:line="93" pos:column="13">0<pos:position pos:line="93" pos:column="14"/></literal><operator pos:line="93" pos:column="14">)<pos:position pos:line="93" pos:column="15"/></operator></expr>;<pos:position pos:line="93" pos:column="16"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_270_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">varnish_read<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">user_data_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">ud<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list> <comment type="block" pos:line="1" pos:column="43">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">VSM_data<pos:position pos:line="3" pos:column="24"/></name></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">vd<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">c_varnish_stats_t<pos:position pos:line="4" pos:column="32"/></name> <modifier pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></modifier></type><name pos:line="4" pos:column="34">stats<pos:position pos:line="4" pos:column="39"/></name></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">user_config_t<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">conf<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">ud<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">==<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">NULL<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">)<pos:position pos:line="8" pos:column="25"/></operator> <operator pos:line="8" pos:column="26">||<pos:position pos:line="8" pos:column="28"/></operator> <operator pos:line="8" pos:column="29">(<pos:position pos:line="8" pos:column="30"/></operator><name><name pos:line="8" pos:column="30">ud<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">data<pos:position pos:line="8" pos:column="38"/></name></name> <operator pos:line="8" pos:column="39">==<pos:position pos:line="8" pos:column="41"/></operator> <name pos:line="8" pos:column="42">NULL<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">)<pos:position pos:line="8" pos:column="47"/></operator></expr>)<pos:position pos:line="8" pos:column="48"/></condition><then pos:line="8" pos:column="48">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">EINVAL<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">)<pos:position pos:line="9" pos:column="32"/></operator></expr>;<pos:position pos:line="9" pos:column="33"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="11" pos:column="9">conf<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name><name pos:line="11" pos:column="16">ud<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">data<pos:position pos:line="11" pos:column="24"/></name></name></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">vd<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">VSM_New<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">()<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="14" pos:column="20"/></name></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">VSC_Setup<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">vd<pos:position pos:line="15" pos:column="21"/></name></expr></argument>)<pos:position pos:line="15" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">conf<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">instance<pos:position pos:line="18" pos:column="27"/></name></name> <operator pos:line="18" pos:column="28">!=<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">NULL<pos:position pos:line="18" pos:column="35"/></name></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36">
	<block pos:line="19" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">int<pos:position pos:line="20" pos:column="20"/></name></type> <name pos:line="20" pos:column="21">status<pos:position pos:line="20" pos:column="27"/></name></decl>;<pos:position pos:line="20" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name pos:line="22" pos:column="17">status<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <call><name pos:line="22" pos:column="26">VSM_n_Arg<pos:position pos:line="22" pos:column="35"/></name> <argument_list pos:line="22" pos:column="36">(<argument><expr><name pos:line="22" pos:column="37">vd<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="41">conf<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">-&gt;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="47">instance<pos:position pos:line="22" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="57"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">status<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">&lt;<pos:position pos:line="23" pos:column="32"/></operator> <literal type="number" pos:line="23" pos:column="30">0<pos:position pos:line="23" pos:column="31"/></literal></expr>)<pos:position pos:line="23" pos:column="32"/></condition><then pos:line="23" pos:column="32">
		<block pos:line="24" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">VSM_Delete<pos:position pos:line="25" pos:column="35"/></name> <argument_list pos:line="25" pos:column="36">(<argument><expr><name pos:line="25" pos:column="37">vd<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">ERROR<pos:position pos:line="26" pos:column="30"/></name> <argument_list pos:line="26" pos:column="31">(<argument><expr><literal type="string" pos:line="26" pos:column="32">"varnish plugin: VSM_n_Arg (\"%s\") failed "<pos:position pos:line="26" pos:column="76"/></literal>
					<literal type="string" pos:line="27" pos:column="41">"with status %i."<pos:position pos:line="27" pos:column="58"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="28" pos:column="41">conf<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">instance<pos:position pos:line="28" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="57">status<pos:position pos:line="28" pos:column="63"/></name></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>
			<return pos:line="29" pos:column="25">return <expr><operator pos:line="29" pos:column="32">(<pos:position pos:line="29" pos:column="33"/></operator><operator pos:line="29" pos:column="33">-<pos:position pos:line="29" pos:column="34"/></operator><literal type="number" pos:line="29" pos:column="34">1<pos:position pos:line="29" pos:column="35"/></literal><operator pos:line="29" pos:column="35">)<pos:position pos:line="29" pos:column="36"/></operator></expr>;<pos:position pos:line="29" pos:column="37"/></return>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><name pos:line="33" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="33" pos:column="20"/></name></expr></cpp:if>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">VSC_Open<pos:position pos:line="34" pos:column="21"/></name> <argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">vd<pos:position pos:line="34" pos:column="25"/></name></expr></argument>, <comment type="block" pos:line="34" pos:column="27">/* diag = */</comment> <argument><expr><literal type="number" pos:line="34" pos:column="40">1<pos:position pos:line="34" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="43"/></condition><then pos:line="34" pos:column="43">
<cpp:else pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">else<pos:position pos:line="35" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="35" pos:column="7">/* if HAVE_VARNISH_V4 */</comment>
	<block type="pseudo"><if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">VSM_Open<pos:position pos:line="36" pos:column="21"/></name> <argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">vd<pos:position pos:line="36" pos:column="25"/></name></expr></argument>)<pos:position pos:line="36" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27">
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>
	<block pos:line="38" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">VSM_Delete<pos:position pos:line="39" pos:column="27"/></name> <argument_list pos:line="39" pos:column="28">(<argument><expr><name pos:line="39" pos:column="29">vd<pos:position pos:line="39" pos:column="31"/></name></expr></argument>)<pos:position pos:line="39" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">ERROR<pos:position pos:line="40" pos:column="22"/></name> <argument_list pos:line="40" pos:column="23">(<argument><expr><literal type="string" pos:line="40" pos:column="24">"varnish plugin: Unable to open connection."<pos:position pos:line="40" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="70"/></expr_stmt>

		<return pos:line="42" pos:column="17">return <expr><operator pos:line="42" pos:column="24">(<pos:position pos:line="42" pos:column="25"/></operator><operator pos:line="42" pos:column="25">-<pos:position pos:line="42" pos:column="26"/></operator><literal type="number" pos:line="42" pos:column="26">1<pos:position pos:line="42" pos:column="27"/></literal><operator pos:line="42" pos:column="27">)<pos:position pos:line="42" pos:column="28"/></operator></expr>;<pos:position pos:line="42" pos:column="29"/></return>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if></block></then></if>

<cpp:if pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">if<pos:position pos:line="45" pos:column="4"/></cpp:directive> <expr><name pos:line="45" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="45" pos:column="20"/></name></expr></cpp:if>
	<expr_stmt><expr><name pos:line="46" pos:column="9">stats<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator> <call><name pos:line="46" pos:column="17">VSC_Main<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">vd<pos:position pos:line="46" pos:column="28"/></name></expr></argument>)<pos:position pos:line="46" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
<cpp:else pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">else<pos:position pos:line="47" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="47" pos:column="7">/* if HAVE_VARNISH_V4 */</comment>
	<expr_stmt><expr><name pos:line="48" pos:column="9">stats<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">=<pos:position pos:line="48" pos:column="16"/></operator> <call><name pos:line="48" pos:column="17">VSC_Main<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">vd<pos:position pos:line="48" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="30">NULL<pos:position pos:line="48" pos:column="34"/></name></expr></argument>)<pos:position pos:line="48" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">!<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">stats<pos:position pos:line="50" pos:column="19"/></name></expr>)<pos:position pos:line="50" pos:column="20"/></condition><then pos:line="50" pos:column="20">
	<block pos:line="51" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">VSM_Delete<pos:position pos:line="52" pos:column="27"/></name> <argument_list pos:line="52" pos:column="28">(<argument><expr><name pos:line="52" pos:column="29">vd<pos:position pos:line="52" pos:column="31"/></name></expr></argument>)<pos:position pos:line="52" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">ERROR<pos:position pos:line="53" pos:column="22"/></name> <argument_list pos:line="53" pos:column="23">(<argument><expr><literal type="string" pos:line="53" pos:column="24">"varnish plugin: Unable to get statistics."<pos:position pos:line="53" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="69"/></expr_stmt>

		<return pos:line="55" pos:column="17">return <expr><operator pos:line="55" pos:column="24">(<pos:position pos:line="55" pos:column="25"/></operator><operator pos:line="55" pos:column="25">-<pos:position pos:line="55" pos:column="26"/></operator><literal type="number" pos:line="55" pos:column="26">1<pos:position pos:line="55" pos:column="27"/></literal><operator pos:line="55" pos:column="27">)<pos:position pos:line="55" pos:column="28"/></operator></expr>;<pos:position pos:line="55" pos:column="29"/></return>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>

<cpp:if pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">if<pos:position pos:line="58" pos:column="4"/></cpp:directive> <expr><name pos:line="58" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="58" pos:column="20"/></name></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">VSC_Iter<pos:position pos:line="59" pos:column="17"/></name> <argument_list pos:line="59" pos:column="18">(<argument><expr><name pos:line="59" pos:column="19">vd<pos:position pos:line="59" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="23">varnish_monitor<pos:position pos:line="59" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="40">conf<pos:position pos:line="59" pos:column="44"/></name></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="46"/></expr_stmt>
<cpp:else pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">else<pos:position pos:line="60" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="60" pos:column="7">/* if HAVE_VARNISH_V4 */</comment>
	<expr_stmt><expr><call><name pos:line="61" pos:column="9">VSC_Iter<pos:position pos:line="61" pos:column="17"/></name> <argument_list pos:line="61" pos:column="18">(<argument><expr><name pos:line="61" pos:column="19">vd<pos:position pos:line="61" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="23">NULL<pos:position pos:line="61" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="29">varnish_monitor<pos:position pos:line="61" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="46">conf<pos:position pos:line="61" pos:column="50"/></name></expr></argument>)<pos:position pos:line="61" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif<pos:position pos:line="62" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">VSM_Delete<pos:position pos:line="63" pos:column="19"/></name> <argument_list pos:line="63" pos:column="20">(<argument><expr><name pos:line="63" pos:column="21">vd<pos:position pos:line="63" pos:column="23"/></name></expr></argument>)<pos:position pos:line="63" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="25"/></expr_stmt>

	<return pos:line="65" pos:column="9">return <expr><operator pos:line="65" pos:column="16">(<pos:position pos:line="65" pos:column="17"/></operator><literal type="number" pos:line="65" pos:column="17">0<pos:position pos:line="65" pos:column="18"/></literal><operator pos:line="65" pos:column="18">)<pos:position pos:line="65" pos:column="19"/></operator></expr>;<pos:position pos:line="65" pos:column="20"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

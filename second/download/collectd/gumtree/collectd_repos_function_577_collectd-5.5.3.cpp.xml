<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_577_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensu_config_node<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">oconfig_item_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">ci<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">sensu_host<pos:position pos:line="3" pos:column="26"/></name></name>	<modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">host<pos:position pos:line="3" pos:column="38"/></name> <init pos:line="3" pos:column="39">= <expr><name pos:line="3" pos:column="41">NULL<pos:position pos:line="3" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type>					<name pos:line="4" pos:column="49">status<pos:position pos:line="4" pos:column="55"/></name> <init pos:line="4" pos:column="56">= <expr><literal type="number" pos:line="4" pos:column="58">0<pos:position pos:line="4" pos:column="59"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type>					<name pos:line="5" pos:column="49">i<pos:position pos:line="5" pos:column="50"/></name></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">oconfig_item_t<pos:position pos:line="6" pos:column="23"/></name>		<modifier pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></modifier></type><name pos:line="6" pos:column="34">child<pos:position pos:line="6" pos:column="39"/></name></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type>				<name><name pos:line="7" pos:column="41">callback_name<pos:position pos:line="7" pos:column="54"/></name><index pos:line="7" pos:column="54">[<expr><name pos:line="7" pos:column="55">DATA_MAX_NAME_LEN<pos:position pos:line="7" pos:column="72"/></name></expr>]<pos:position pos:line="7" pos:column="73"/></index></name></decl>;<pos:position pos:line="7" pos:column="74"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">user_data_t<pos:position pos:line="8" pos:column="20"/></name></type>			<name pos:line="8" pos:column="41">ud<pos:position pos:line="8" pos:column="43"/></name></decl>;<pos:position pos:line="8" pos:column="44"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">host<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <call><name pos:line="10" pos:column="21">calloc<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><literal type="number" pos:line="10" pos:column="28">1<pos:position pos:line="10" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="31">sizeof<argument_list pos:line="10" pos:column="37">(<argument><expr><operator pos:line="10" pos:column="38">*<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="39">host<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call><operator pos:line="10" pos:column="45">)<pos:position pos:line="10" pos:column="46"/></operator> <operator pos:line="10" pos:column="47">==<pos:position pos:line="10" pos:column="49"/></operator> <name pos:line="10" pos:column="50">NULL<pos:position pos:line="10" pos:column="54"/></name></expr>)<pos:position pos:line="10" pos:column="55"/></condition><then pos:line="10" pos:column="55"> <block pos:line="10" pos:column="56">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">ERROR<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><literal type="string" pos:line="11" pos:column="23">"write_sensu plugin: calloc failed."<pos:position pos:line="11" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="61"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">ENOMEM<pos:position pos:line="12" pos:column="30"/></name></expr>;<pos:position pos:line="12" pos:column="31"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">pthread_mutex_init<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><operator pos:line="14" pos:column="28">&amp;<pos:position pos:line="14" pos:column="33"/></operator><name><name pos:line="14" pos:column="29">host<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">-&gt;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="35">lock<pos:position pos:line="14" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">NULL<pos:position pos:line="14" pos:column="45"/></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">host<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">reference_count<pos:position pos:line="15" pos:column="30"/></name></name> <operator pos:line="15" pos:column="31">=<pos:position pos:line="15" pos:column="32"/></operator> <literal type="number" pos:line="15" pos:column="33">1<pos:position pos:line="15" pos:column="34"/></literal></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">host<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">node<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">NULL<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">host<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">service<pos:position pos:line="17" pos:column="22"/></name></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">NULL<pos:position pos:line="17" pos:column="29"/></name></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">host<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">notifications<pos:position pos:line="18" pos:column="28"/></name></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <literal type="number" pos:line="18" pos:column="31">0<pos:position pos:line="18" pos:column="32"/></literal></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">host<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">metrics<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <literal type="number" pos:line="19" pos:column="25">0<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">host<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">store_rates<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <literal type="number" pos:line="20" pos:column="29">1<pos:position pos:line="20" pos:column="30"/></literal></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">host<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">always_append_ds<pos:position pos:line="21" pos:column="31"/></name></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <literal type="number" pos:line="21" pos:column="34">0<pos:position pos:line="21" pos:column="35"/></literal></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">host<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">metric_handlers<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">.<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">nb_strs<pos:position pos:line="22" pos:column="38"/></name></name> <operator pos:line="22" pos:column="39">=<pos:position pos:line="22" pos:column="40"/></operator> <literal type="number" pos:line="22" pos:column="41">0<pos:position pos:line="22" pos:column="42"/></literal></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">host<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">metric_handlers<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">.<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">strs<pos:position pos:line="23" pos:column="35"/></name></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <name pos:line="23" pos:column="38">NULL<pos:position pos:line="23" pos:column="42"/></name></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">host<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">notification_handlers<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">.<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="37">nb_strs<pos:position pos:line="24" pos:column="44"/></name></name> <operator pos:line="24" pos:column="45">=<pos:position pos:line="24" pos:column="46"/></operator> <literal type="number" pos:line="24" pos:column="47">0<pos:position pos:line="24" pos:column="48"/></literal></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">host<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">notification_handlers<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">.<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="37">strs<pos:position pos:line="25" pos:column="41"/></name></name> <operator pos:line="25" pos:column="42">=<pos:position pos:line="25" pos:column="43"/></operator> <name pos:line="25" pos:column="44">NULL<pos:position pos:line="25" pos:column="48"/></name></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">host<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">-&gt;<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="15">separator<pos:position pos:line="26" pos:column="24"/></name></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <call><name pos:line="26" pos:column="27">strdup<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><literal type="string" pos:line="26" pos:column="34">"/"<pos:position pos:line="26" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">host<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">separator<pos:position pos:line="27" pos:column="28"/></name></name> <operator pos:line="27" pos:column="29">==<pos:position pos:line="27" pos:column="31"/></operator> <name pos:line="27" pos:column="32">NULL<pos:position pos:line="27" pos:column="36"/></name></expr>)<pos:position pos:line="27" pos:column="37"/></condition><then pos:line="27" pos:column="37"> <block pos:line="27" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">ERROR<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><literal type="string" pos:line="28" pos:column="23">"write_sensu plugin: Unable to alloc memory"<pos:position pos:line="28" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">sensu_free<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">host<pos:position pos:line="29" pos:column="32"/></name></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
		<return pos:line="30" pos:column="17">return <expr><operator pos:line="30" pos:column="24">-<pos:position pos:line="30" pos:column="25"/></operator><literal type="number" pos:line="30" pos:column="25">1<pos:position pos:line="30" pos:column="26"/></literal></expr>;<pos:position pos:line="30" pos:column="27"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="33" pos:column="9">status<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">cf_util_get_string<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name pos:line="33" pos:column="37">ci<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="41">&amp;<pos:position pos:line="33" pos:column="46"/></operator><name><name pos:line="33" pos:column="42">host<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">-&gt;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="48">name<pos:position pos:line="33" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="54"/></expr_stmt>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">status<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">!=<pos:position pos:line="34" pos:column="22"/></operator> <literal type="number" pos:line="34" pos:column="23">0<pos:position pos:line="34" pos:column="24"/></literal></expr>)<pos:position pos:line="34" pos:column="25"/></condition><then pos:line="34" pos:column="25"> <block pos:line="34" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">WARNING<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><literal type="string" pos:line="35" pos:column="25">"write_sensu plugin: Required host name is missing."<pos:position pos:line="35" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">sensu_free<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><name pos:line="36" pos:column="28">host<pos:position pos:line="36" pos:column="32"/></name></expr></argument>)<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
		<return pos:line="37" pos:column="17">return <expr><operator pos:line="37" pos:column="24">-<pos:position pos:line="37" pos:column="25"/></operator><literal type="number" pos:line="37" pos:column="25">1<pos:position pos:line="37" pos:column="26"/></literal></expr>;<pos:position pos:line="37" pos:column="27"/></return>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<for pos:line="40" pos:column="9">for <control pos:line="40" pos:column="13">(<init><expr><name pos:line="40" pos:column="14">i<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <literal type="number" pos:line="40" pos:column="18">0<pos:position pos:line="40" pos:column="19"/></literal></expr>;<pos:position pos:line="40" pos:column="20"/></init> <condition><expr><name pos:line="40" pos:column="21">i<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">&lt;<pos:position pos:line="40" pos:column="27"/></operator> <name><name pos:line="40" pos:column="25">ci<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">children_num<pos:position pos:line="40" pos:column="41"/></name></name></expr>;<pos:position pos:line="40" pos:column="42"/></condition> <incr><expr><name pos:line="40" pos:column="43">i<pos:position pos:line="40" pos:column="44"/></name><operator pos:line="40" pos:column="44">++<pos:position pos:line="40" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="47"/></control> <block pos:line="40" pos:column="48">{
		<expr_stmt><expr><name pos:line="41" pos:column="17">child<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">=<pos:position pos:line="41" pos:column="24"/></operator> <operator pos:line="41" pos:column="25">&amp;<pos:position pos:line="41" pos:column="30"/></operator><name><name pos:line="41" pos:column="26">ci<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">-&gt;<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="30">children<pos:position pos:line="41" pos:column="38"/></name><index pos:line="41" pos:column="38">[<expr><name pos:line="41" pos:column="39">i<pos:position pos:line="41" pos:column="40"/></name></expr>]<pos:position pos:line="41" pos:column="41"/></index></name></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="42" pos:column="17">status<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">=<pos:position pos:line="42" pos:column="25"/></operator> <literal type="number" pos:line="42" pos:column="26">0<pos:position pos:line="42" pos:column="27"/></literal></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>

		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><call><name pos:line="44" pos:column="21">strcasecmp<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><literal type="string" pos:line="44" pos:column="32">"Host"<pos:position pos:line="44" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="40">child<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">-&gt;<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="47">key<pos:position pos:line="44" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call> <operator pos:line="44" pos:column="52">==<pos:position pos:line="44" pos:column="54"/></operator> <literal type="number" pos:line="44" pos:column="55">0<pos:position pos:line="44" pos:column="56"/></literal></expr>)<pos:position pos:line="44" pos:column="57"/></condition><then pos:line="44" pos:column="57"> <block pos:line="44" pos:column="58">{
			<expr_stmt><expr><name pos:line="45" pos:column="25">status<pos:position pos:line="45" pos:column="31"/></name> <operator pos:line="45" pos:column="32">=<pos:position pos:line="45" pos:column="33"/></operator> <call><name pos:line="45" pos:column="34">cf_util_get_string<pos:position pos:line="45" pos:column="52"/></name><argument_list pos:line="45" pos:column="52">(<argument><expr><name pos:line="45" pos:column="53">child<pos:position pos:line="45" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="60">&amp;<pos:position pos:line="45" pos:column="65"/></operator><name><name pos:line="45" pos:column="61">host<pos:position pos:line="45" pos:column="65"/></name><operator pos:line="45" pos:column="65">-&gt;<pos:position pos:line="45" pos:column="70"/></operator><name pos:line="45" pos:column="67">node<pos:position pos:line="45" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="73"/></expr_stmt>
			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><name pos:line="46" pos:column="29">status<pos:position pos:line="46" pos:column="35"/></name> <operator pos:line="46" pos:column="36">!=<pos:position pos:line="46" pos:column="38"/></operator> <literal type="number" pos:line="46" pos:column="39">0<pos:position pos:line="46" pos:column="40"/></literal></expr>)<pos:position pos:line="46" pos:column="41"/></condition><then pos:line="46" pos:column="41">
				<block type="pseudo"><break pos:line="47" pos:column="33">break;<pos:position pos:line="47" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="48" pos:column="18"/></block></then> <elseif pos:line="48" pos:column="19">else <if pos:line="48" pos:column="24">if <condition pos:line="48" pos:column="27">(<expr><call><name pos:line="48" pos:column="28">strcasecmp<pos:position pos:line="48" pos:column="38"/></name><argument_list pos:line="48" pos:column="38">(<argument><expr><literal type="string" pos:line="48" pos:column="39">"Notifications"<pos:position pos:line="48" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="56">child<pos:position pos:line="48" pos:column="61"/></name><operator pos:line="48" pos:column="61">-&gt;<pos:position pos:line="48" pos:column="66"/></operator><name pos:line="48" pos:column="63">key<pos:position pos:line="48" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="67"/></argument_list></call> <operator pos:line="48" pos:column="68">==<pos:position pos:line="48" pos:column="70"/></operator> <literal type="number" pos:line="48" pos:column="71">0<pos:position pos:line="48" pos:column="72"/></literal></expr>)<pos:position pos:line="48" pos:column="73"/></condition><then pos:line="48" pos:column="73"> <block pos:line="48" pos:column="74">{
			<expr_stmt><expr><name pos:line="49" pos:column="25">status<pos:position pos:line="49" pos:column="31"/></name> <operator pos:line="49" pos:column="32">=<pos:position pos:line="49" pos:column="33"/></operator> <call><name pos:line="49" pos:column="34">cf_util_get_boolean<pos:position pos:line="49" pos:column="53"/></name><argument_list pos:line="49" pos:column="53">(<argument><expr><name pos:line="49" pos:column="54">child<pos:position pos:line="49" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="61">&amp;<pos:position pos:line="49" pos:column="66"/></operator><name><name pos:line="49" pos:column="62">host<pos:position pos:line="49" pos:column="66"/></name><operator pos:line="49" pos:column="66">-&gt;<pos:position pos:line="49" pos:column="71"/></operator><name pos:line="49" pos:column="68">notifications<pos:position pos:line="49" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="83"/></expr_stmt>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><name pos:line="50" pos:column="29">status<pos:position pos:line="50" pos:column="35"/></name> <operator pos:line="50" pos:column="36">!=<pos:position pos:line="50" pos:column="38"/></operator> <literal type="number" pos:line="50" pos:column="39">0<pos:position pos:line="50" pos:column="40"/></literal></expr>)<pos:position pos:line="50" pos:column="41"/></condition><then pos:line="50" pos:column="41">
				<block type="pseudo"><break pos:line="51" pos:column="33">break;<pos:position pos:line="51" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="52" pos:column="18"/></block></then></if></elseif> <elseif pos:line="52" pos:column="19">else <if pos:line="52" pos:column="24">if <condition pos:line="52" pos:column="27">(<expr><call><name pos:line="52" pos:column="28">strcasecmp<pos:position pos:line="52" pos:column="38"/></name><argument_list pos:line="52" pos:column="38">(<argument><expr><literal type="string" pos:line="52" pos:column="39">"Metrics"<pos:position pos:line="52" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="50">child<pos:position pos:line="52" pos:column="55"/></name><operator pos:line="52" pos:column="55">-&gt;<pos:position pos:line="52" pos:column="60"/></operator><name pos:line="52" pos:column="57">key<pos:position pos:line="52" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="61"/></argument_list></call> <operator pos:line="52" pos:column="62">==<pos:position pos:line="52" pos:column="64"/></operator> <literal type="number" pos:line="52" pos:column="65">0<pos:position pos:line="52" pos:column="66"/></literal></expr>)<pos:position pos:line="52" pos:column="67"/></condition><then pos:line="52" pos:column="67"> <block pos:line="52" pos:column="68">{
					<expr_stmt><expr><name pos:line="53" pos:column="41">status<pos:position pos:line="53" pos:column="47"/></name> <operator pos:line="53" pos:column="48">=<pos:position pos:line="53" pos:column="49"/></operator> <call><name pos:line="53" pos:column="50">cf_util_get_boolean<pos:position pos:line="53" pos:column="69"/></name><argument_list pos:line="53" pos:column="69">(<argument><expr><name pos:line="53" pos:column="70">child<pos:position pos:line="53" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="77">&amp;<pos:position pos:line="53" pos:column="82"/></operator><name><name pos:line="53" pos:column="78">host<pos:position pos:line="53" pos:column="82"/></name><operator pos:line="53" pos:column="82">-&gt;<pos:position pos:line="53" pos:column="87"/></operator><name pos:line="53" pos:column="84">metrics<pos:position pos:line="53" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="93"/></expr_stmt>
					<if pos:line="54" pos:column="41">if <condition pos:line="54" pos:column="44">(<expr><name pos:line="54" pos:column="45">status<pos:position pos:line="54" pos:column="51"/></name> <operator pos:line="54" pos:column="52">!=<pos:position pos:line="54" pos:column="54"/></operator> <literal type="number" pos:line="54" pos:column="55">0<pos:position pos:line="54" pos:column="56"/></literal></expr>)<pos:position pos:line="54" pos:column="57"/></condition><then pos:line="54" pos:column="57">
						<block type="pseudo"><break pos:line="55" pos:column="49">break;<pos:position pos:line="55" pos:column="55"/></break></block></then></if>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if></elseif> <elseif pos:line="56" pos:column="19">else <if pos:line="56" pos:column="24">if <condition pos:line="56" pos:column="27">(<expr><call><name pos:line="56" pos:column="28">strcasecmp<pos:position pos:line="56" pos:column="38"/></name><argument_list pos:line="56" pos:column="38">(<argument><expr><literal type="string" pos:line="56" pos:column="39">"EventServicePrefix"<pos:position pos:line="56" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="61">child<pos:position pos:line="56" pos:column="66"/></name><operator pos:line="56" pos:column="66">-&gt;<pos:position pos:line="56" pos:column="71"/></operator><name pos:line="56" pos:column="68">key<pos:position pos:line="56" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="72"/></argument_list></call> <operator pos:line="56" pos:column="73">==<pos:position pos:line="56" pos:column="75"/></operator> <literal type="number" pos:line="56" pos:column="76">0<pos:position pos:line="56" pos:column="77"/></literal></expr>)<pos:position pos:line="56" pos:column="78"/></condition><then pos:line="56" pos:column="78"> <block pos:line="56" pos:column="79">{
			<expr_stmt><expr><name pos:line="57" pos:column="25">status<pos:position pos:line="57" pos:column="31"/></name> <operator pos:line="57" pos:column="32">=<pos:position pos:line="57" pos:column="33"/></operator> <call><name pos:line="57" pos:column="34">cf_util_get_string<pos:position pos:line="57" pos:column="52"/></name><argument_list pos:line="57" pos:column="52">(<argument><expr><name pos:line="57" pos:column="53">child<pos:position pos:line="57" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="60">&amp;<pos:position pos:line="57" pos:column="65"/></operator><name><name pos:line="57" pos:column="61">host<pos:position pos:line="57" pos:column="65"/></name><operator pos:line="57" pos:column="65">-&gt;<pos:position pos:line="57" pos:column="70"/></operator><name pos:line="57" pos:column="67">event_service_prefix<pos:position pos:line="57" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="89"/></expr_stmt>
			<if pos:line="58" pos:column="25">if <condition pos:line="58" pos:column="28">(<expr><name pos:line="58" pos:column="29">status<pos:position pos:line="58" pos:column="35"/></name> <operator pos:line="58" pos:column="36">!=<pos:position pos:line="58" pos:column="38"/></operator> <literal type="number" pos:line="58" pos:column="39">0<pos:position pos:line="58" pos:column="40"/></literal></expr>)<pos:position pos:line="58" pos:column="41"/></condition><then pos:line="58" pos:column="41">
				<block type="pseudo"><break pos:line="59" pos:column="33">break;<pos:position pos:line="59" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if></elseif> <elseif pos:line="60" pos:column="19">else <if pos:line="60" pos:column="24">if <condition pos:line="60" pos:column="27">(<expr><call><name pos:line="60" pos:column="28">strcasecmp<pos:position pos:line="60" pos:column="38"/></name><argument_list pos:line="60" pos:column="38">(<argument><expr><literal type="string" pos:line="60" pos:column="39">"Separator"<pos:position pos:line="60" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="52">child<pos:position pos:line="60" pos:column="57"/></name><operator pos:line="60" pos:column="57">-&gt;<pos:position pos:line="60" pos:column="62"/></operator><name pos:line="60" pos:column="59">key<pos:position pos:line="60" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="63"/></argument_list></call> <operator pos:line="60" pos:column="64">==<pos:position pos:line="60" pos:column="66"/></operator> <literal type="number" pos:line="60" pos:column="67">0<pos:position pos:line="60" pos:column="68"/></literal></expr>)<pos:position pos:line="60" pos:column="69"/></condition><then pos:line="60" pos:column="69"> <block pos:line="60" pos:column="70">{
				<expr_stmt><expr><name pos:line="61" pos:column="33">status<pos:position pos:line="61" pos:column="39"/></name> <operator pos:line="61" pos:column="40">=<pos:position pos:line="61" pos:column="41"/></operator> <call><name pos:line="61" pos:column="42">cf_util_get_string<pos:position pos:line="61" pos:column="60"/></name><argument_list pos:line="61" pos:column="60">(<argument><expr><name pos:line="61" pos:column="61">child<pos:position pos:line="61" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="68">&amp;<pos:position pos:line="61" pos:column="73"/></operator><name><name pos:line="61" pos:column="69">host<pos:position pos:line="61" pos:column="73"/></name><operator pos:line="61" pos:column="73">-&gt;<pos:position pos:line="61" pos:column="78"/></operator><name pos:line="61" pos:column="75">separator<pos:position pos:line="61" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="86"/></expr_stmt>
				<if pos:line="62" pos:column="33">if <condition pos:line="62" pos:column="36">(<expr><name pos:line="62" pos:column="37">status<pos:position pos:line="62" pos:column="43"/></name> <operator pos:line="62" pos:column="44">!=<pos:position pos:line="62" pos:column="46"/></operator> <literal type="number" pos:line="62" pos:column="47">0<pos:position pos:line="62" pos:column="48"/></literal></expr>)<pos:position pos:line="62" pos:column="49"/></condition><then pos:line="62" pos:column="49">
					<block type="pseudo"><break pos:line="63" pos:column="41">break;<pos:position pos:line="63" pos:column="47"/></break></block></then></if>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if></elseif> <elseif pos:line="64" pos:column="19">else <if pos:line="64" pos:column="24">if <condition pos:line="64" pos:column="27">(<expr><call><name pos:line="64" pos:column="28">strcasecmp<pos:position pos:line="64" pos:column="38"/></name><argument_list pos:line="64" pos:column="38">(<argument><expr><literal type="string" pos:line="64" pos:column="39">"MetricHandler"<pos:position pos:line="64" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="56">child<pos:position pos:line="64" pos:column="61"/></name><operator pos:line="64" pos:column="61">-&gt;<pos:position pos:line="64" pos:column="66"/></operator><name pos:line="64" pos:column="63">key<pos:position pos:line="64" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="67"/></argument_list></call> <operator pos:line="64" pos:column="68">==<pos:position pos:line="64" pos:column="70"/></operator> <literal type="number" pos:line="64" pos:column="71">0<pos:position pos:line="64" pos:column="72"/></literal></expr>)<pos:position pos:line="64" pos:column="73"/></condition><then pos:line="64" pos:column="73"> <block pos:line="64" pos:column="74">{
			<decl_stmt><decl><type><name pos:line="65" pos:column="25">char<pos:position pos:line="65" pos:column="29"/></name> <modifier pos:line="65" pos:column="30">*<pos:position pos:line="65" pos:column="31"/></modifier></type><name pos:line="65" pos:column="31">temp_str<pos:position pos:line="65" pos:column="39"/></name> <init pos:line="65" pos:column="40">= <expr><name pos:line="65" pos:column="42">NULL<pos:position pos:line="65" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="65" pos:column="47"/></decl_stmt>
			<expr_stmt><expr><name pos:line="66" pos:column="25">status<pos:position pos:line="66" pos:column="31"/></name> <operator pos:line="66" pos:column="32">=<pos:position pos:line="66" pos:column="33"/></operator> <call><name pos:line="66" pos:column="34">cf_util_get_string<pos:position pos:line="66" pos:column="52"/></name><argument_list pos:line="66" pos:column="52">(<argument><expr><name pos:line="66" pos:column="53">child<pos:position pos:line="66" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="60">&amp;<pos:position pos:line="66" pos:column="65"/></operator><name pos:line="66" pos:column="61">temp_str<pos:position pos:line="66" pos:column="69"/></name></expr></argument>)<pos:position pos:line="66" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="71"/></expr_stmt>
			<if pos:line="67" pos:column="25">if <condition pos:line="67" pos:column="28">(<expr><name pos:line="67" pos:column="29">status<pos:position pos:line="67" pos:column="35"/></name> <operator pos:line="67" pos:column="36">!=<pos:position pos:line="67" pos:column="38"/></operator> <literal type="number" pos:line="67" pos:column="39">0<pos:position pos:line="67" pos:column="40"/></literal></expr>)<pos:position pos:line="67" pos:column="41"/></condition><then pos:line="67" pos:column="41">
				<block type="pseudo"><break pos:line="68" pos:column="33">break;<pos:position pos:line="68" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="69" pos:column="25">status<pos:position pos:line="69" pos:column="31"/></name> <operator pos:line="69" pos:column="32">=<pos:position pos:line="69" pos:column="33"/></operator> <call><name pos:line="69" pos:column="34">add_str_to_list<pos:position pos:line="69" pos:column="49"/></name><argument_list pos:line="69" pos:column="49">(<argument><expr><operator pos:line="69" pos:column="50">&amp;<pos:position pos:line="69" pos:column="55"/></operator><operator pos:line="69" pos:column="51">(<pos:position pos:line="69" pos:column="52"/></operator><name><name pos:line="69" pos:column="52">host<pos:position pos:line="69" pos:column="56"/></name><operator pos:line="69" pos:column="56">-&gt;<pos:position pos:line="69" pos:column="61"/></operator><name pos:line="69" pos:column="58">metric_handlers<pos:position pos:line="69" pos:column="73"/></name></name><operator pos:line="69" pos:column="73">)<pos:position pos:line="69" pos:column="74"/></operator></expr></argument>, <argument><expr><name pos:line="69" pos:column="76">temp_str<pos:position pos:line="69" pos:column="84"/></name></expr></argument>)<pos:position pos:line="69" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="86"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="70" pos:column="25">free<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><name pos:line="70" pos:column="30">temp_str<pos:position pos:line="70" pos:column="38"/></name></expr></argument>)<pos:position pos:line="70" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="40"/></expr_stmt>
			<if pos:line="71" pos:column="25">if <condition pos:line="71" pos:column="28">(<expr><name pos:line="71" pos:column="29">status<pos:position pos:line="71" pos:column="35"/></name> <operator pos:line="71" pos:column="36">!=<pos:position pos:line="71" pos:column="38"/></operator> <literal type="number" pos:line="71" pos:column="39">0<pos:position pos:line="71" pos:column="40"/></literal></expr>)<pos:position pos:line="71" pos:column="41"/></condition><then pos:line="71" pos:column="41">
				<block type="pseudo"><break pos:line="72" pos:column="33">break;<pos:position pos:line="72" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="73" pos:column="18"/></block></then></if></elseif> <elseif pos:line="73" pos:column="19">else <if pos:line="73" pos:column="24">if <condition pos:line="73" pos:column="27">(<expr><call><name pos:line="73" pos:column="28">strcasecmp<pos:position pos:line="73" pos:column="38"/></name><argument_list pos:line="73" pos:column="38">(<argument><expr><literal type="string" pos:line="73" pos:column="39">"NotificationHandler"<pos:position pos:line="73" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="62">child<pos:position pos:line="73" pos:column="67"/></name><operator pos:line="73" pos:column="67">-&gt;<pos:position pos:line="73" pos:column="72"/></operator><name pos:line="73" pos:column="69">key<pos:position pos:line="73" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="73"/></argument_list></call> <operator pos:line="73" pos:column="74">==<pos:position pos:line="73" pos:column="76"/></operator> <literal type="number" pos:line="73" pos:column="77">0<pos:position pos:line="73" pos:column="78"/></literal></expr>)<pos:position pos:line="73" pos:column="79"/></condition><then pos:line="73" pos:column="79"> <block pos:line="73" pos:column="80">{
			<decl_stmt><decl><type><name pos:line="74" pos:column="25">char<pos:position pos:line="74" pos:column="29"/></name> <modifier pos:line="74" pos:column="30">*<pos:position pos:line="74" pos:column="31"/></modifier></type><name pos:line="74" pos:column="31">temp_str<pos:position pos:line="74" pos:column="39"/></name> <init pos:line="74" pos:column="40">= <expr><name pos:line="74" pos:column="42">NULL<pos:position pos:line="74" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="74" pos:column="47"/></decl_stmt>
			<expr_stmt><expr><name pos:line="75" pos:column="25">status<pos:position pos:line="75" pos:column="31"/></name> <operator pos:line="75" pos:column="32">=<pos:position pos:line="75" pos:column="33"/></operator> <call><name pos:line="75" pos:column="34">cf_util_get_string<pos:position pos:line="75" pos:column="52"/></name><argument_list pos:line="75" pos:column="52">(<argument><expr><name pos:line="75" pos:column="53">child<pos:position pos:line="75" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="60">&amp;<pos:position pos:line="75" pos:column="65"/></operator><name pos:line="75" pos:column="61">temp_str<pos:position pos:line="75" pos:column="69"/></name></expr></argument>)<pos:position pos:line="75" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="71"/></expr_stmt>
			<if pos:line="76" pos:column="25">if <condition pos:line="76" pos:column="28">(<expr><name pos:line="76" pos:column="29">status<pos:position pos:line="76" pos:column="35"/></name> <operator pos:line="76" pos:column="36">!=<pos:position pos:line="76" pos:column="38"/></operator> <literal type="number" pos:line="76" pos:column="39">0<pos:position pos:line="76" pos:column="40"/></literal></expr>)<pos:position pos:line="76" pos:column="41"/></condition><then pos:line="76" pos:column="41">
				<block type="pseudo"><break pos:line="77" pos:column="33">break;<pos:position pos:line="77" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="78" pos:column="25">status<pos:position pos:line="78" pos:column="31"/></name> <operator pos:line="78" pos:column="32">=<pos:position pos:line="78" pos:column="33"/></operator> <call><name pos:line="78" pos:column="34">add_str_to_list<pos:position pos:line="78" pos:column="49"/></name><argument_list pos:line="78" pos:column="49">(<argument><expr><operator pos:line="78" pos:column="50">&amp;<pos:position pos:line="78" pos:column="55"/></operator><operator pos:line="78" pos:column="51">(<pos:position pos:line="78" pos:column="52"/></operator><name><name pos:line="78" pos:column="52">host<pos:position pos:line="78" pos:column="56"/></name><operator pos:line="78" pos:column="56">-&gt;<pos:position pos:line="78" pos:column="61"/></operator><name pos:line="78" pos:column="58">notification_handlers<pos:position pos:line="78" pos:column="79"/></name></name><operator pos:line="78" pos:column="79">)<pos:position pos:line="78" pos:column="80"/></operator></expr></argument>, <argument><expr><name pos:line="78" pos:column="82">temp_str<pos:position pos:line="78" pos:column="90"/></name></expr></argument>)<pos:position pos:line="78" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="92"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="79" pos:column="25">free<pos:position pos:line="79" pos:column="29"/></name><argument_list pos:line="79" pos:column="29">(<argument><expr><name pos:line="79" pos:column="30">temp_str<pos:position pos:line="79" pos:column="38"/></name></expr></argument>)<pos:position pos:line="79" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="40"/></expr_stmt>
			<if pos:line="80" pos:column="25">if <condition pos:line="80" pos:column="28">(<expr><name pos:line="80" pos:column="29">status<pos:position pos:line="80" pos:column="35"/></name> <operator pos:line="80" pos:column="36">!=<pos:position pos:line="80" pos:column="38"/></operator> <literal type="number" pos:line="80" pos:column="39">0<pos:position pos:line="80" pos:column="40"/></literal></expr>)<pos:position pos:line="80" pos:column="41"/></condition><then pos:line="80" pos:column="41">
				<block type="pseudo"><break pos:line="81" pos:column="33">break;<pos:position pos:line="81" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="82" pos:column="18"/></block></then></if></elseif> <elseif pos:line="82" pos:column="19">else <if pos:line="82" pos:column="24">if <condition pos:line="82" pos:column="27">(<expr><call><name pos:line="82" pos:column="28">strcasecmp<pos:position pos:line="82" pos:column="38"/></name><argument_list pos:line="82" pos:column="38">(<argument><expr><literal type="string" pos:line="82" pos:column="39">"Port"<pos:position pos:line="82" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="47">child<pos:position pos:line="82" pos:column="52"/></name><operator pos:line="82" pos:column="52">-&gt;<pos:position pos:line="82" pos:column="57"/></operator><name pos:line="82" pos:column="54">key<pos:position pos:line="82" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="58"/></argument_list></call> <operator pos:line="82" pos:column="59">==<pos:position pos:line="82" pos:column="61"/></operator> <literal type="number" pos:line="82" pos:column="62">0<pos:position pos:line="82" pos:column="63"/></literal></expr>)<pos:position pos:line="82" pos:column="64"/></condition><then pos:line="82" pos:column="64"> <block pos:line="82" pos:column="65">{
			<expr_stmt><expr><name pos:line="83" pos:column="25">status<pos:position pos:line="83" pos:column="31"/></name> <operator pos:line="83" pos:column="32">=<pos:position pos:line="83" pos:column="33"/></operator> <call><name pos:line="83" pos:column="34">cf_util_get_service<pos:position pos:line="83" pos:column="53"/></name><argument_list pos:line="83" pos:column="53">(<argument><expr><name pos:line="83" pos:column="54">child<pos:position pos:line="83" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="61">&amp;<pos:position pos:line="83" pos:column="66"/></operator><name><name pos:line="83" pos:column="62">host<pos:position pos:line="83" pos:column="66"/></name><operator pos:line="83" pos:column="66">-&gt;<pos:position pos:line="83" pos:column="71"/></operator><name pos:line="83" pos:column="68">service<pos:position pos:line="83" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="77"/></expr_stmt>
			<if pos:line="84" pos:column="25">if <condition pos:line="84" pos:column="28">(<expr><name pos:line="84" pos:column="29">status<pos:position pos:line="84" pos:column="35"/></name> <operator pos:line="84" pos:column="36">!=<pos:position pos:line="84" pos:column="38"/></operator> <literal type="number" pos:line="84" pos:column="39">0<pos:position pos:line="84" pos:column="40"/></literal></expr>)<pos:position pos:line="84" pos:column="41"/></condition><then pos:line="84" pos:column="41"> <block pos:line="84" pos:column="42">{
				<expr_stmt><expr><call><name pos:line="85" pos:column="33">ERROR<pos:position pos:line="85" pos:column="38"/></name><argument_list pos:line="85" pos:column="38">(<argument><expr><literal type="string" pos:line="85" pos:column="39">"write_sensu plugin: Invalid argument "<pos:position pos:line="85" pos:column="78"/></literal>
						<literal type="string" pos:line="86" pos:column="49">"configured for the \"Port\" "<pos:position pos:line="86" pos:column="79"/></literal>
						<literal type="string" pos:line="87" pos:column="49">"option."<pos:position pos:line="87" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="60"/></expr_stmt>
				<break pos:line="88" pos:column="33">break;<pos:position pos:line="88" pos:column="39"/></break>
			}<pos:position pos:line="89" pos:column="26"/></block></then></if>
		}<pos:position pos:line="90" pos:column="18"/></block></then></if></elseif> <elseif pos:line="90" pos:column="19">else <if pos:line="90" pos:column="24">if <condition pos:line="90" pos:column="27">(<expr><call><name pos:line="90" pos:column="28">strcasecmp<pos:position pos:line="90" pos:column="38"/></name><argument_list pos:line="90" pos:column="38">(<argument><expr><literal type="string" pos:line="90" pos:column="39">"StoreRates"<pos:position pos:line="90" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="53">child<pos:position pos:line="90" pos:column="58"/></name><operator pos:line="90" pos:column="58">-&gt;<pos:position pos:line="90" pos:column="63"/></operator><name pos:line="90" pos:column="60">key<pos:position pos:line="90" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="64"/></argument_list></call> <operator pos:line="90" pos:column="65">==<pos:position pos:line="90" pos:column="67"/></operator> <literal type="number" pos:line="90" pos:column="68">0<pos:position pos:line="90" pos:column="69"/></literal></expr>)<pos:position pos:line="90" pos:column="70"/></condition><then pos:line="90" pos:column="70"> <block pos:line="90" pos:column="71">{
			<expr_stmt><expr><name pos:line="91" pos:column="25">status<pos:position pos:line="91" pos:column="31"/></name> <operator pos:line="91" pos:column="32">=<pos:position pos:line="91" pos:column="33"/></operator> <call><name pos:line="91" pos:column="34">cf_util_get_boolean<pos:position pos:line="91" pos:column="53"/></name><argument_list pos:line="91" pos:column="53">(<argument><expr><name pos:line="91" pos:column="54">child<pos:position pos:line="91" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="61">&amp;<pos:position pos:line="91" pos:column="66"/></operator><name><name pos:line="91" pos:column="62">host<pos:position pos:line="91" pos:column="66"/></name><operator pos:line="91" pos:column="66">-&gt;<pos:position pos:line="91" pos:column="71"/></operator><name pos:line="91" pos:column="68">store_rates<pos:position pos:line="91" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="81"/></expr_stmt>
			<if pos:line="92" pos:column="25">if <condition pos:line="92" pos:column="28">(<expr><name pos:line="92" pos:column="29">status<pos:position pos:line="92" pos:column="35"/></name> <operator pos:line="92" pos:column="36">!=<pos:position pos:line="92" pos:column="38"/></operator> <literal type="number" pos:line="92" pos:column="39">0<pos:position pos:line="92" pos:column="40"/></literal></expr>)<pos:position pos:line="92" pos:column="41"/></condition><then pos:line="92" pos:column="41">
				<block type="pseudo"><break pos:line="93" pos:column="33">break;<pos:position pos:line="93" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="94" pos:column="18"/></block></then></if></elseif> <elseif pos:line="94" pos:column="19">else <if pos:line="94" pos:column="24">if <condition pos:line="94" pos:column="27">(<expr><call><name pos:line="94" pos:column="28">strcasecmp<pos:position pos:line="94" pos:column="38"/></name><argument_list pos:line="94" pos:column="38">(<argument><expr><literal type="string" pos:line="94" pos:column="39">"AlwaysAppendDS"<pos:position pos:line="94" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="57">child<pos:position pos:line="94" pos:column="62"/></name><operator pos:line="94" pos:column="62">-&gt;<pos:position pos:line="94" pos:column="67"/></operator><name pos:line="94" pos:column="64">key<pos:position pos:line="94" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="68"/></argument_list></call> <operator pos:line="94" pos:column="69">==<pos:position pos:line="94" pos:column="71"/></operator> <literal type="number" pos:line="94" pos:column="72">0<pos:position pos:line="94" pos:column="73"/></literal></expr>)<pos:position pos:line="94" pos:column="74"/></condition><then pos:line="94" pos:column="74"> <block pos:line="94" pos:column="75">{
			<expr_stmt><expr><name pos:line="95" pos:column="25">status<pos:position pos:line="95" pos:column="31"/></name> <operator pos:line="95" pos:column="32">=<pos:position pos:line="95" pos:column="33"/></operator> <call><name pos:line="95" pos:column="34">cf_util_get_boolean<pos:position pos:line="95" pos:column="53"/></name><argument_list pos:line="95" pos:column="53">(<argument><expr><name pos:line="95" pos:column="54">child<pos:position pos:line="95" pos:column="59"/></name></expr></argument>,
					<argument><expr><operator pos:line="96" pos:column="41">&amp;<pos:position pos:line="96" pos:column="46"/></operator><name><name pos:line="96" pos:column="42">host<pos:position pos:line="96" pos:column="46"/></name><operator pos:line="96" pos:column="46">-&gt;<pos:position pos:line="96" pos:column="51"/></operator><name pos:line="96" pos:column="48">always_append_ds<pos:position pos:line="96" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="66"/></expr_stmt>
			<if pos:line="97" pos:column="25">if <condition pos:line="97" pos:column="28">(<expr><name pos:line="97" pos:column="29">status<pos:position pos:line="97" pos:column="35"/></name> <operator pos:line="97" pos:column="36">!=<pos:position pos:line="97" pos:column="38"/></operator> <literal type="number" pos:line="97" pos:column="39">0<pos:position pos:line="97" pos:column="40"/></literal></expr>)<pos:position pos:line="97" pos:column="41"/></condition><then pos:line="97" pos:column="41">
				<block type="pseudo"><break pos:line="98" pos:column="33">break;<pos:position pos:line="98" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="99" pos:column="18"/></block></then></if></elseif> <else pos:line="99" pos:column="19">else <block pos:line="99" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="100" pos:column="25">WARNING<pos:position pos:line="100" pos:column="32"/></name><argument_list pos:line="100" pos:column="32">(<argument><expr><literal type="string" pos:line="100" pos:column="33">"write_sensu plugin: ignoring unknown config "<pos:position pos:line="100" pos:column="79"/></literal>
				<literal type="string" pos:line="101" pos:column="33">"option: \"%s\""<pos:position pos:line="101" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="51">child<pos:position pos:line="101" pos:column="56"/></name><operator pos:line="101" pos:column="56">-&gt;<pos:position pos:line="101" pos:column="61"/></operator><name pos:line="101" pos:column="58">key<pos:position pos:line="101" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="63"/></expr_stmt>
		}<pos:position pos:line="102" pos:column="18"/></block></else></if>
	}<pos:position pos:line="103" pos:column="10"/></block></for>
	<if pos:line="104" pos:column="9">if <condition pos:line="104" pos:column="12">(<expr><name pos:line="104" pos:column="13">status<pos:position pos:line="104" pos:column="19"/></name> <operator pos:line="104" pos:column="20">!=<pos:position pos:line="104" pos:column="22"/></operator> <literal type="number" pos:line="104" pos:column="23">0<pos:position pos:line="104" pos:column="24"/></literal></expr>)<pos:position pos:line="104" pos:column="25"/></condition><then pos:line="104" pos:column="25"> <block pos:line="104" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="105" pos:column="17">sensu_free<pos:position pos:line="105" pos:column="27"/></name><argument_list pos:line="105" pos:column="27">(<argument><expr><name pos:line="105" pos:column="28">host<pos:position pos:line="105" pos:column="32"/></name></expr></argument>)<pos:position pos:line="105" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="34"/></expr_stmt>
		<return pos:line="106" pos:column="17">return <expr><name pos:line="106" pos:column="24">status<pos:position pos:line="106" pos:column="30"/></name></expr>;<pos:position pos:line="106" pos:column="31"/></return>
	}<pos:position pos:line="107" pos:column="10"/></block></then></if>

	<if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name><name pos:line="109" pos:column="13">host<pos:position pos:line="109" pos:column="17"/></name><operator pos:line="109" pos:column="17">-&gt;<pos:position pos:line="109" pos:column="22"/></operator><name pos:line="109" pos:column="19">metrics<pos:position pos:line="109" pos:column="26"/></name></name> <operator pos:line="109" pos:column="27">&amp;&amp;<pos:position pos:line="109" pos:column="37"/></operator> <operator pos:line="109" pos:column="30">(<pos:position pos:line="109" pos:column="31"/></operator><name><name pos:line="109" pos:column="31">host<pos:position pos:line="109" pos:column="35"/></name><operator pos:line="109" pos:column="35">-&gt;<pos:position pos:line="109" pos:column="40"/></operator><name pos:line="109" pos:column="37">metric_handlers<pos:position pos:line="109" pos:column="52"/></name><operator pos:line="109" pos:column="52">.<pos:position pos:line="109" pos:column="53"/></operator><name pos:line="109" pos:column="53">nb_strs<pos:position pos:line="109" pos:column="60"/></name></name> <operator pos:line="109" pos:column="61">==<pos:position pos:line="109" pos:column="63"/></operator> <literal type="number" pos:line="109" pos:column="64">0<pos:position pos:line="109" pos:column="65"/></literal><operator pos:line="109" pos:column="65">)<pos:position pos:line="109" pos:column="66"/></operator></expr>)<pos:position pos:line="109" pos:column="67"/></condition><then pos:line="109" pos:column="67"> <block pos:line="109" pos:column="68">{
			<expr_stmt><expr><call><name pos:line="110" pos:column="25">sensu_free<pos:position pos:line="110" pos:column="35"/></name><argument_list pos:line="110" pos:column="35">(<argument><expr><name pos:line="110" pos:column="36">host<pos:position pos:line="110" pos:column="40"/></name></expr></argument>)<pos:position pos:line="110" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="111" pos:column="25">WARNING<pos:position pos:line="111" pos:column="32"/></name><argument_list pos:line="111" pos:column="32">(<argument><expr><literal type="string" pos:line="111" pos:column="33">"write_sensu plugin: metrics enabled but no MetricHandler defined. Giving up."<pos:position pos:line="111" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="113"/></expr_stmt>
			<return pos:line="112" pos:column="25">return <expr><operator pos:line="112" pos:column="32">-<pos:position pos:line="112" pos:column="33"/></operator><literal type="number" pos:line="112" pos:column="33">1<pos:position pos:line="112" pos:column="34"/></literal></expr>;<pos:position pos:line="112" pos:column="35"/></return>
		}<pos:position pos:line="113" pos:column="18"/></block></then></if>

	<if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><name><name pos:line="115" pos:column="13">host<pos:position pos:line="115" pos:column="17"/></name><operator pos:line="115" pos:column="17">-&gt;<pos:position pos:line="115" pos:column="22"/></operator><name pos:line="115" pos:column="19">notifications<pos:position pos:line="115" pos:column="32"/></name></name> <operator pos:line="115" pos:column="33">&amp;&amp;<pos:position pos:line="115" pos:column="43"/></operator> <operator pos:line="115" pos:column="36">(<pos:position pos:line="115" pos:column="37"/></operator><name><name pos:line="115" pos:column="37">host<pos:position pos:line="115" pos:column="41"/></name><operator pos:line="115" pos:column="41">-&gt;<pos:position pos:line="115" pos:column="46"/></operator><name pos:line="115" pos:column="43">notification_handlers<pos:position pos:line="115" pos:column="64"/></name><operator pos:line="115" pos:column="64">.<pos:position pos:line="115" pos:column="65"/></operator><name pos:line="115" pos:column="65">nb_strs<pos:position pos:line="115" pos:column="72"/></name></name> <operator pos:line="115" pos:column="73">==<pos:position pos:line="115" pos:column="75"/></operator> <literal type="number" pos:line="115" pos:column="76">0<pos:position pos:line="115" pos:column="77"/></literal><operator pos:line="115" pos:column="77">)<pos:position pos:line="115" pos:column="78"/></operator></expr>)<pos:position pos:line="115" pos:column="79"/></condition><then pos:line="115" pos:column="79"> <block pos:line="115" pos:column="80">{
		<expr_stmt><expr><call><name pos:line="116" pos:column="17">sensu_free<pos:position pos:line="116" pos:column="27"/></name><argument_list pos:line="116" pos:column="27">(<argument><expr><name pos:line="116" pos:column="28">host<pos:position pos:line="116" pos:column="32"/></name></expr></argument>)<pos:position pos:line="116" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="117" pos:column="17">WARNING<pos:position pos:line="117" pos:column="24"/></name><argument_list pos:line="117" pos:column="24">(<argument><expr><literal type="string" pos:line="117" pos:column="25">"write_sensu plugin: notifications enabled but no NotificationHandler defined. Giving up."<pos:position pos:line="117" pos:column="115"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="117"/></expr_stmt>
		<return pos:line="118" pos:column="17">return <expr><operator pos:line="118" pos:column="24">-<pos:position pos:line="118" pos:column="25"/></operator><literal type="number" pos:line="118" pos:column="25">1<pos:position pos:line="118" pos:column="26"/></literal></expr>;<pos:position pos:line="118" pos:column="27"/></return>
	}<pos:position pos:line="119" pos:column="10"/></block></then></if>

	<if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><operator pos:line="121" pos:column="13">(<pos:position pos:line="121" pos:column="14"/></operator><name><name pos:line="121" pos:column="14">host<pos:position pos:line="121" pos:column="18"/></name><operator pos:line="121" pos:column="18">-&gt;<pos:position pos:line="121" pos:column="23"/></operator><name pos:line="121" pos:column="20">notification_handlers<pos:position pos:line="121" pos:column="41"/></name><operator pos:line="121" pos:column="41">.<pos:position pos:line="121" pos:column="42"/></operator><name pos:line="121" pos:column="42">nb_strs<pos:position pos:line="121" pos:column="49"/></name></name> <operator pos:line="121" pos:column="50">&gt;<pos:position pos:line="121" pos:column="54"/></operator> <literal type="number" pos:line="121" pos:column="52">0<pos:position pos:line="121" pos:column="53"/></literal><operator pos:line="121" pos:column="53">)<pos:position pos:line="121" pos:column="54"/></operator> <operator pos:line="121" pos:column="55">&amp;&amp;<pos:position pos:line="121" pos:column="65"/></operator> <operator pos:line="121" pos:column="58">(<pos:position pos:line="121" pos:column="59"/></operator><name><name pos:line="121" pos:column="59">host<pos:position pos:line="121" pos:column="63"/></name><operator pos:line="121" pos:column="63">-&gt;<pos:position pos:line="121" pos:column="68"/></operator><name pos:line="121" pos:column="65">notifications<pos:position pos:line="121" pos:column="78"/></name></name> <operator pos:line="121" pos:column="79">==<pos:position pos:line="121" pos:column="81"/></operator> <literal type="number" pos:line="121" pos:column="82">0<pos:position pos:line="121" pos:column="83"/></literal><operator pos:line="121" pos:column="83">)<pos:position pos:line="121" pos:column="84"/></operator></expr>)<pos:position pos:line="121" pos:column="85"/></condition><then pos:line="121" pos:column="85"> <block pos:line="121" pos:column="86">{
		<expr_stmt><expr><call><name pos:line="122" pos:column="17">WARNING<pos:position pos:line="122" pos:column="24"/></name><argument_list pos:line="122" pos:column="24">(<argument><expr><literal type="string" pos:line="122" pos:column="25">"write_sensu plugin: NotificationHandler given so forcing notifications to be enabled"<pos:position pos:line="122" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="113"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="123" pos:column="17">host<pos:position pos:line="123" pos:column="21"/></name><operator pos:line="123" pos:column="21">-&gt;<pos:position pos:line="123" pos:column="26"/></operator><name pos:line="123" pos:column="23">notifications<pos:position pos:line="123" pos:column="36"/></name></name> <operator pos:line="123" pos:column="37">=<pos:position pos:line="123" pos:column="38"/></operator> <literal type="number" pos:line="123" pos:column="39">1<pos:position pos:line="123" pos:column="40"/></literal></expr>;<pos:position pos:line="123" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="124" pos:column="10"/></block></then></if>

	<if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><operator pos:line="126" pos:column="13">(<pos:position pos:line="126" pos:column="14"/></operator><name><name pos:line="126" pos:column="14">host<pos:position pos:line="126" pos:column="18"/></name><operator pos:line="126" pos:column="18">-&gt;<pos:position pos:line="126" pos:column="23"/></operator><name pos:line="126" pos:column="20">metric_handlers<pos:position pos:line="126" pos:column="35"/></name><operator pos:line="126" pos:column="35">.<pos:position pos:line="126" pos:column="36"/></operator><name pos:line="126" pos:column="36">nb_strs<pos:position pos:line="126" pos:column="43"/></name></name> <operator pos:line="126" pos:column="44">&gt;<pos:position pos:line="126" pos:column="48"/></operator> <literal type="number" pos:line="126" pos:column="46">0<pos:position pos:line="126" pos:column="47"/></literal><operator pos:line="126" pos:column="47">)<pos:position pos:line="126" pos:column="48"/></operator> <operator pos:line="126" pos:column="49">&amp;&amp;<pos:position pos:line="126" pos:column="59"/></operator> <operator pos:line="126" pos:column="52">(<pos:position pos:line="126" pos:column="53"/></operator><name><name pos:line="126" pos:column="53">host<pos:position pos:line="126" pos:column="57"/></name><operator pos:line="126" pos:column="57">-&gt;<pos:position pos:line="126" pos:column="62"/></operator><name pos:line="126" pos:column="59">metrics<pos:position pos:line="126" pos:column="66"/></name></name> <operator pos:line="126" pos:column="67">==<pos:position pos:line="126" pos:column="69"/></operator> <literal type="number" pos:line="126" pos:column="70">0<pos:position pos:line="126" pos:column="71"/></literal><operator pos:line="126" pos:column="71">)<pos:position pos:line="126" pos:column="72"/></operator></expr>)<pos:position pos:line="126" pos:column="73"/></condition><then pos:line="126" pos:column="73"> <block pos:line="126" pos:column="74">{
		<expr_stmt><expr><call><name pos:line="127" pos:column="17">WARNING<pos:position pos:line="127" pos:column="24"/></name><argument_list pos:line="127" pos:column="24">(<argument><expr><literal type="string" pos:line="127" pos:column="25">"write_sensu plugin: MetricHandler given so forcing metrics to be enabled"<pos:position pos:line="127" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="101"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="128" pos:column="17">host<pos:position pos:line="128" pos:column="21"/></name><operator pos:line="128" pos:column="21">-&gt;<pos:position pos:line="128" pos:column="26"/></operator><name pos:line="128" pos:column="23">metrics<pos:position pos:line="128" pos:column="30"/></name></name> <operator pos:line="128" pos:column="31">=<pos:position pos:line="128" pos:column="32"/></operator> <literal type="number" pos:line="128" pos:column="33">1<pos:position pos:line="128" pos:column="34"/></literal></expr>;<pos:position pos:line="128" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="129" pos:column="10"/></block></then></if>

	<if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><operator pos:line="131" pos:column="13">!<pos:position pos:line="131" pos:column="14"/></operator><operator pos:line="131" pos:column="14">(<pos:position pos:line="131" pos:column="15"/></operator><name><name pos:line="131" pos:column="15">host<pos:position pos:line="131" pos:column="19"/></name><operator pos:line="131" pos:column="19">-&gt;<pos:position pos:line="131" pos:column="24"/></operator><name pos:line="131" pos:column="21">notifications<pos:position pos:line="131" pos:column="34"/></name></name> <operator pos:line="131" pos:column="35">||<pos:position pos:line="131" pos:column="37"/></operator> <name><name pos:line="131" pos:column="38">host<pos:position pos:line="131" pos:column="42"/></name><operator pos:line="131" pos:column="42">-&gt;<pos:position pos:line="131" pos:column="47"/></operator><name pos:line="131" pos:column="44">metrics<pos:position pos:line="131" pos:column="51"/></name></name><operator pos:line="131" pos:column="51">)<pos:position pos:line="131" pos:column="52"/></operator></expr>)<pos:position pos:line="131" pos:column="53"/></condition><then pos:line="131" pos:column="53"> <block pos:line="131" pos:column="54">{
		<expr_stmt><expr><call><name pos:line="132" pos:column="17">WARNING<pos:position pos:line="132" pos:column="24"/></name><argument_list pos:line="132" pos:column="24">(<argument><expr><literal type="string" pos:line="132" pos:column="25">"write_sensu plugin: neither metrics nor notifications enabled. Giving up."<pos:position pos:line="132" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="102"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="133" pos:column="17">sensu_free<pos:position pos:line="133" pos:column="27"/></name><argument_list pos:line="133" pos:column="27">(<argument><expr><name pos:line="133" pos:column="28">host<pos:position pos:line="133" pos:column="32"/></name></expr></argument>)<pos:position pos:line="133" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="34"/></expr_stmt>
		<return pos:line="134" pos:column="17">return <expr><operator pos:line="134" pos:column="24">-<pos:position pos:line="134" pos:column="25"/></operator><literal type="number" pos:line="134" pos:column="25">1<pos:position pos:line="134" pos:column="26"/></literal></expr>;<pos:position pos:line="134" pos:column="27"/></return>
	}<pos:position pos:line="135" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="137" pos:column="9">ssnprintf<pos:position pos:line="137" pos:column="18"/></name><argument_list pos:line="137" pos:column="18">(<argument><expr><name pos:line="137" pos:column="19">callback_name<pos:position pos:line="137" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="137" pos:column="34">sizeof<argument_list pos:line="137" pos:column="40">(<argument><expr><name pos:line="137" pos:column="41">callback_name<pos:position pos:line="137" pos:column="54"/></name></expr></argument>)<pos:position pos:line="137" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="57">"write_sensu/%s"<pos:position pos:line="137" pos:column="73"/></literal></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="75">host<pos:position pos:line="137" pos:column="79"/></name><operator pos:line="137" pos:column="79">-&gt;<pos:position pos:line="137" pos:column="84"/></operator><name pos:line="137" pos:column="81">name<pos:position pos:line="137" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="137" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="87"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="138" pos:column="9">ud<pos:position pos:line="138" pos:column="11"/></name><operator pos:line="138" pos:column="11">.<pos:position pos:line="138" pos:column="12"/></operator><name pos:line="138" pos:column="12">data<pos:position pos:line="138" pos:column="16"/></name></name> <operator pos:line="138" pos:column="17">=<pos:position pos:line="138" pos:column="18"/></operator> <name pos:line="138" pos:column="19">host<pos:position pos:line="138" pos:column="23"/></name></expr>;<pos:position pos:line="138" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="139" pos:column="9">ud<pos:position pos:line="139" pos:column="11"/></name><operator pos:line="139" pos:column="11">.<pos:position pos:line="139" pos:column="12"/></operator><name pos:line="139" pos:column="12">free_func<pos:position pos:line="139" pos:column="21"/></name></name> <operator pos:line="139" pos:column="22">=<pos:position pos:line="139" pos:column="23"/></operator> <name pos:line="139" pos:column="24">sensu_free<pos:position pos:line="139" pos:column="34"/></name></expr>;<pos:position pos:line="139" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="141" pos:column="9">pthread_mutex_lock<pos:position pos:line="141" pos:column="27"/></name><argument_list pos:line="141" pos:column="27">(<argument><expr><operator pos:line="141" pos:column="28">&amp;<pos:position pos:line="141" pos:column="33"/></operator><name><name pos:line="141" pos:column="29">host<pos:position pos:line="141" pos:column="33"/></name><operator pos:line="141" pos:column="33">-&gt;<pos:position pos:line="141" pos:column="38"/></operator><name pos:line="141" pos:column="35">lock<pos:position pos:line="141" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="141" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="41"/></expr_stmt>

	<if pos:line="143" pos:column="9">if <condition pos:line="143" pos:column="12">(<expr><name><name pos:line="143" pos:column="13">host<pos:position pos:line="143" pos:column="17"/></name><operator pos:line="143" pos:column="17">-&gt;<pos:position pos:line="143" pos:column="22"/></operator><name pos:line="143" pos:column="19">metrics<pos:position pos:line="143" pos:column="26"/></name></name></expr>)<pos:position pos:line="143" pos:column="27"/></condition><then pos:line="143" pos:column="27"> <block pos:line="143" pos:column="28">{
		<expr_stmt><expr><name pos:line="144" pos:column="17">status<pos:position pos:line="144" pos:column="23"/></name> <operator pos:line="144" pos:column="24">=<pos:position pos:line="144" pos:column="25"/></operator> <call><name pos:line="144" pos:column="26">plugin_register_write<pos:position pos:line="144" pos:column="47"/></name><argument_list pos:line="144" pos:column="47">(<argument><expr><name pos:line="144" pos:column="48">callback_name<pos:position pos:line="144" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="63">sensu_write<pos:position pos:line="144" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="144" pos:column="76">&amp;<pos:position pos:line="144" pos:column="81"/></operator><name pos:line="144" pos:column="77">ud<pos:position pos:line="144" pos:column="79"/></name></expr></argument>)<pos:position pos:line="144" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="81"/></expr_stmt>
		<if pos:line="145" pos:column="17">if <condition pos:line="145" pos:column="20">(<expr><name pos:line="145" pos:column="21">status<pos:position pos:line="145" pos:column="27"/></name> <operator pos:line="145" pos:column="28">!=<pos:position pos:line="145" pos:column="30"/></operator> <literal type="number" pos:line="145" pos:column="31">0<pos:position pos:line="145" pos:column="32"/></literal></expr>)<pos:position pos:line="145" pos:column="33"/></condition><then pos:line="145" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="146" pos:column="25">WARNING<pos:position pos:line="146" pos:column="32"/></name><argument_list pos:line="146" pos:column="32">(<argument><expr><literal type="string" pos:line="146" pos:column="33">"write_sensu plugin: plugin_register_write (\"%s\") "<pos:position pos:line="146" pos:column="86"/></literal>
					<literal type="string" pos:line="147" pos:column="41">"failed with status %i."<pos:position pos:line="147" pos:column="65"/></literal></expr></argument>,
					<argument><expr><name pos:line="148" pos:column="41">callback_name<pos:position pos:line="148" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="56">status<pos:position pos:line="148" pos:column="62"/></name></expr></argument>)<pos:position pos:line="148" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="64"/></expr_stmt></block></then>
		<else pos:line="149" pos:column="17">else <comment type="block" pos:line="149" pos:column="22">/* success */</comment>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="150" pos:column="25">host<pos:position pos:line="150" pos:column="29"/></name><operator pos:line="150" pos:column="29">-&gt;<pos:position pos:line="150" pos:column="34"/></operator><name pos:line="150" pos:column="31">reference_count<pos:position pos:line="150" pos:column="46"/></name></name><operator pos:line="150" pos:column="46">++<pos:position pos:line="150" pos:column="48"/></operator></expr>;<pos:position pos:line="150" pos:column="49"/></expr_stmt></block></else></if>
	}<pos:position pos:line="151" pos:column="10"/></block></then></if>

	<if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><name><name pos:line="153" pos:column="13">host<pos:position pos:line="153" pos:column="17"/></name><operator pos:line="153" pos:column="17">-&gt;<pos:position pos:line="153" pos:column="22"/></operator><name pos:line="153" pos:column="19">notifications<pos:position pos:line="153" pos:column="32"/></name></name></expr>)<pos:position pos:line="153" pos:column="33"/></condition><then pos:line="153" pos:column="33"> <block pos:line="153" pos:column="34">{
		<expr_stmt><expr><name pos:line="154" pos:column="17">status<pos:position pos:line="154" pos:column="23"/></name> <operator pos:line="154" pos:column="24">=<pos:position pos:line="154" pos:column="25"/></operator> <call><name pos:line="154" pos:column="26">plugin_register_notification<pos:position pos:line="154" pos:column="54"/></name><argument_list pos:line="154" pos:column="54">(<argument><expr><name pos:line="154" pos:column="55">callback_name<pos:position pos:line="154" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="70">sensu_notification<pos:position pos:line="154" pos:column="88"/></name></expr></argument>, <argument><expr><operator pos:line="154" pos:column="90">&amp;<pos:position pos:line="154" pos:column="95"/></operator><name pos:line="154" pos:column="91">ud<pos:position pos:line="154" pos:column="93"/></name></expr></argument>)<pos:position pos:line="154" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="95"/></expr_stmt>
		<if pos:line="155" pos:column="17">if <condition pos:line="155" pos:column="20">(<expr><name pos:line="155" pos:column="21">status<pos:position pos:line="155" pos:column="27"/></name> <operator pos:line="155" pos:column="28">!=<pos:position pos:line="155" pos:column="30"/></operator> <literal type="number" pos:line="155" pos:column="31">0<pos:position pos:line="155" pos:column="32"/></literal></expr>)<pos:position pos:line="155" pos:column="33"/></condition><then pos:line="155" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="156" pos:column="25">WARNING<pos:position pos:line="156" pos:column="32"/></name><argument_list pos:line="156" pos:column="32">(<argument><expr><literal type="string" pos:line="156" pos:column="33">"write_sensu plugin: plugin_register_notification (\"%s\") "<pos:position pos:line="156" pos:column="93"/></literal>
					<literal type="string" pos:line="157" pos:column="41">"failed with status %i."<pos:position pos:line="157" pos:column="65"/></literal></expr></argument>,
					<argument><expr><name pos:line="158" pos:column="41">callback_name<pos:position pos:line="158" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="56">status<pos:position pos:line="158" pos:column="62"/></name></expr></argument>)<pos:position pos:line="158" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="64"/></expr_stmt></block></then>
		<else pos:line="159" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="160" pos:column="25">host<pos:position pos:line="160" pos:column="29"/></name><operator pos:line="160" pos:column="29">-&gt;<pos:position pos:line="160" pos:column="34"/></operator><name pos:line="160" pos:column="31">reference_count<pos:position pos:line="160" pos:column="46"/></name></name><operator pos:line="160" pos:column="46">++<pos:position pos:line="160" pos:column="48"/></operator></expr>;<pos:position pos:line="160" pos:column="49"/></expr_stmt></block></else></if>
	}<pos:position pos:line="161" pos:column="10"/></block></then></if>

	<if pos:line="163" pos:column="9">if <condition pos:line="163" pos:column="12">(<expr><name><name pos:line="163" pos:column="13">host<pos:position pos:line="163" pos:column="17"/></name><operator pos:line="163" pos:column="17">-&gt;<pos:position pos:line="163" pos:column="22"/></operator><name pos:line="163" pos:column="19">reference_count<pos:position pos:line="163" pos:column="34"/></name></name> <operator pos:line="163" pos:column="35">&lt;=<pos:position pos:line="163" pos:column="40"/></operator> <literal type="number" pos:line="163" pos:column="38">1<pos:position pos:line="163" pos:column="39"/></literal></expr>)<pos:position pos:line="163" pos:column="40"/></condition><then pos:line="163" pos:column="40"> <block pos:line="163" pos:column="41">{
		<comment type="block" pos:line="164" pos:column="17">/* Both callbacks failed =&gt; free memory.
		 * We need to unlock here, because sensu_free() will lock.
		 * This is not a race condition, because we're the only one
		 * holding a reference. */</comment>
		<expr_stmt><expr><call><name pos:line="168" pos:column="17">pthread_mutex_unlock<pos:position pos:line="168" pos:column="37"/></name><argument_list pos:line="168" pos:column="37">(<argument><expr><operator pos:line="168" pos:column="38">&amp;<pos:position pos:line="168" pos:column="43"/></operator><name><name pos:line="168" pos:column="39">host<pos:position pos:line="168" pos:column="43"/></name><operator pos:line="168" pos:column="43">-&gt;<pos:position pos:line="168" pos:column="48"/></operator><name pos:line="168" pos:column="45">lock<pos:position pos:line="168" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="168" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="169" pos:column="17">sensu_free<pos:position pos:line="169" pos:column="27"/></name><argument_list pos:line="169" pos:column="27">(<argument><expr><name pos:line="169" pos:column="28">host<pos:position pos:line="169" pos:column="32"/></name></expr></argument>)<pos:position pos:line="169" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="34"/></expr_stmt>
		<return pos:line="170" pos:column="17">return <expr><operator pos:line="170" pos:column="24">-<pos:position pos:line="170" pos:column="25"/></operator><literal type="number" pos:line="170" pos:column="25">1<pos:position pos:line="170" pos:column="26"/></literal></expr>;<pos:position pos:line="170" pos:column="27"/></return>
	}<pos:position pos:line="171" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="173" pos:column="9">host<pos:position pos:line="173" pos:column="13"/></name><operator pos:line="173" pos:column="13">-&gt;<pos:position pos:line="173" pos:column="18"/></operator><name pos:line="173" pos:column="15">reference_count<pos:position pos:line="173" pos:column="30"/></name></name><operator pos:line="173" pos:column="30">--<pos:position pos:line="173" pos:column="32"/></operator></expr>;<pos:position pos:line="173" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="174" pos:column="9">pthread_mutex_unlock<pos:position pos:line="174" pos:column="29"/></name><argument_list pos:line="174" pos:column="29">(<argument><expr><operator pos:line="174" pos:column="30">&amp;<pos:position pos:line="174" pos:column="35"/></operator><name><name pos:line="174" pos:column="31">host<pos:position pos:line="174" pos:column="35"/></name><operator pos:line="174" pos:column="35">-&gt;<pos:position pos:line="174" pos:column="40"/></operator><name pos:line="174" pos:column="37">lock<pos:position pos:line="174" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="174" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="43"/></expr_stmt>

	<return pos:line="176" pos:column="9">return <expr><name pos:line="176" pos:column="16">status<pos:position pos:line="176" pos:column="22"/></name></expr>;<pos:position pos:line="176" pos:column="23"/></return>
}<pos:position pos:line="177" pos:column="2"/></block></function></unit>

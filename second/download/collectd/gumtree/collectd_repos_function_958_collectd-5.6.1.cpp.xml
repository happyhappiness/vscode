<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_958_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">av2value<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">pTHX_<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">name<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">AV<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">array<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">value_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">value<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">size_t<pos:position pos:line="1" pos:column="76"/></name></type> <name pos:line="1" pos:column="77">array_len<pos:position pos:line="1" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="87"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">data_set_t<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">ds<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">(<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">NULL<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">==<pos:position pos:line="5" pos:column="21"/></operator> <name pos:line="5" pos:column="22">name<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">)<pos:position pos:line="5" pos:column="27"/></operator> <operator pos:line="5" pos:column="28">||<pos:position pos:line="5" pos:column="30"/></operator> <operator pos:line="5" pos:column="31">(<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">NULL<pos:position pos:line="5" pos:column="36"/></name> <operator pos:line="5" pos:column="37">==<pos:position pos:line="5" pos:column="39"/></operator> <name pos:line="5" pos:column="40">array<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">)<pos:position pos:line="5" pos:column="46"/></operator> <operator pos:line="5" pos:column="47">||<pos:position pos:line="5" pos:column="49"/></operator> <operator pos:line="5" pos:column="50">(<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="51">NULL<pos:position pos:line="5" pos:column="55"/></name> <operator pos:line="5" pos:column="56">==<pos:position pos:line="5" pos:column="58"/></operator> <name pos:line="5" pos:column="59">value<pos:position pos:line="5" pos:column="64"/></name><operator pos:line="5" pos:column="64">)<pos:position pos:line="5" pos:column="65"/></operator> <operator pos:line="5" pos:column="66">||<pos:position pos:line="5" pos:column="68"/></operator> <operator pos:line="5" pos:column="69">(<pos:position pos:line="5" pos:column="70"/></operator><name pos:line="5" pos:column="70">array_len<pos:position pos:line="5" pos:column="79"/></name> <operator pos:line="5" pos:column="80">==<pos:position pos:line="5" pos:column="82"/></operator> <literal type="number" pos:line="5" pos:column="83">0<pos:position pos:line="5" pos:column="84"/></literal><operator pos:line="5" pos:column="84">)<pos:position pos:line="5" pos:column="85"/></operator></expr>)<pos:position pos:line="5" pos:column="86"/></condition><then pos:line="5" pos:column="86">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="8" pos:column="9">ds<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">plugin_get_ds<pos:position pos:line="8" pos:column="27"/></name> <argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">name<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">NULL<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">==<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">ds<pos:position pos:line="9" pos:column="23"/></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24"> <block pos:line="9" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">log_err<pos:position pos:line="10" pos:column="24"/></name> <argument_list pos:line="10" pos:column="25">(<argument><expr><literal type="string" pos:line="10" pos:column="26">"av2value: Unknown dataset \"%s\""<pos:position pos:line="10" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="62">name<pos:position pos:line="10" pos:column="66"/></name></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">array_len<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&lt;<pos:position pos:line="14" pos:column="27"/></operator> <name><name pos:line="14" pos:column="25">ds<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">ds_num<pos:position pos:line="14" pos:column="35"/></name></name></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36"> <block pos:line="14" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">log_warn<pos:position pos:line="15" pos:column="25"/></name> <argument_list pos:line="15" pos:column="26">(<argument><expr><literal type="string" pos:line="15" pos:column="27">"av2value: array does not contain enough elements for type \"%s\": got %zu, want %zu"<pos:position pos:line="15" pos:column="112"/></literal></expr></argument>,
				<argument><expr><name pos:line="16" pos:column="33">name<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="39">array_len<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="50">ds<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">-&gt;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="54">ds_num<pos:position pos:line="16" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="62"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then> <elseif pos:line="18" pos:column="11">else <if pos:line="18" pos:column="16">if <condition pos:line="18" pos:column="19">(<expr><name pos:line="18" pos:column="20">array_len<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">&gt;<pos:position pos:line="18" pos:column="34"/></operator> <name><name pos:line="18" pos:column="32">ds<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">-&gt;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="36">ds_num<pos:position pos:line="18" pos:column="42"/></name></name></expr>)<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43"> <block pos:line="18" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">log_warn<pos:position pos:line="19" pos:column="25"/></name> <argument_list pos:line="19" pos:column="26">(<argument><expr><literal type="string" pos:line="19" pos:column="27">"av2value: array contains excess elements for type \"%s\": got %zu, want %zu"<pos:position pos:line="19" pos:column="104"/></literal></expr></argument>,
				<argument><expr><name pos:line="20" pos:column="33">name<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="39">array_len<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="50">ds<pos:position pos:line="20" pos:column="52"/></name><operator pos:line="20" pos:column="52">-&gt;<pos:position pos:line="20" pos:column="57"/></operator><name pos:line="20" pos:column="54">ds_num<pos:position pos:line="20" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if></elseif></if>

	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><decl><type><name pos:line="23" pos:column="14">size_t<pos:position pos:line="23" pos:column="20"/></name></type> <name pos:line="23" pos:column="21">i<pos:position pos:line="23" pos:column="22"/></name> <init pos:line="23" pos:column="23">= <expr><literal type="number" pos:line="23" pos:column="25">0<pos:position pos:line="23" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="27"/></init> <condition><expr><name pos:line="23" pos:column="28">i<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">&lt;<pos:position pos:line="23" pos:column="34"/></operator> <name><name pos:line="23" pos:column="32">ds<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">ds_num<pos:position pos:line="23" pos:column="42"/></name></name></expr>;<pos:position pos:line="23" pos:column="43"/></condition> <incr><expr><operator pos:line="23" pos:column="44">++<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="46">i<pos:position pos:line="23" pos:column="47"/></name></expr></incr>)<pos:position pos:line="23" pos:column="48"/></control> <block pos:line="23" pos:column="49">{
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">SV<pos:position pos:line="24" pos:column="19"/></name> <modifier pos:line="24" pos:column="20">*<pos:position pos:line="24" pos:column="21"/></modifier><modifier pos:line="24" pos:column="21">*<pos:position pos:line="24" pos:column="22"/></modifier></type><name pos:line="24" pos:column="22">tmp<pos:position pos:line="24" pos:column="25"/></name> <init pos:line="24" pos:column="26">= <expr><call><name pos:line="24" pos:column="28">av_fetch<pos:position pos:line="24" pos:column="36"/></name> <argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">array<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="45">i<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="48">0<pos:position pos:line="24" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="51"/></decl_stmt>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">NULL<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">!=<pos:position pos:line="26" pos:column="28"/></operator> <name pos:line="26" pos:column="29">tmp<pos:position pos:line="26" pos:column="32"/></name></expr>)<pos:position pos:line="26" pos:column="33"/></condition><then pos:line="26" pos:column="33"> <block pos:line="26" pos:column="34">{
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><name pos:line="27" pos:column="29">DS_TYPE_COUNTER<pos:position pos:line="27" pos:column="44"/></name> <operator pos:line="27" pos:column="45">==<pos:position pos:line="27" pos:column="47"/></operator> <name><name pos:line="27" pos:column="48">ds<pos:position pos:line="27" pos:column="50"/></name><operator pos:line="27" pos:column="50">-&gt;<pos:position pos:line="27" pos:column="55"/></operator><name pos:line="27" pos:column="52">ds<pos:position pos:line="27" pos:column="54"/></name><index pos:line="27" pos:column="54">[<expr><name pos:line="27" pos:column="55">i<pos:position pos:line="27" pos:column="56"/></name></expr>]<pos:position pos:line="27" pos:column="57"/></index></name><operator pos:line="27" pos:column="57">.<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="58">type<pos:position pos:line="27" pos:column="62"/></name></expr>)<pos:position pos:line="27" pos:column="63"/></condition><then pos:line="27" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="33">value<pos:position pos:line="28" pos:column="38"/></name><index pos:line="28" pos:column="38">[<expr><name pos:line="28" pos:column="39">i<pos:position pos:line="28" pos:column="40"/></name></expr>]<pos:position pos:line="28" pos:column="41"/></index></name><operator pos:line="28" pos:column="41">.<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="42">counter<pos:position pos:line="28" pos:column="49"/></name> <operator pos:line="28" pos:column="50">=<pos:position pos:line="28" pos:column="51"/></operator> <call><name pos:line="28" pos:column="52">SvIV<pos:position pos:line="28" pos:column="56"/></name> <argument_list pos:line="28" pos:column="57">(<argument><expr><operator pos:line="28" pos:column="58">*<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="59">tmp<pos:position pos:line="28" pos:column="62"/></name></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt></block></then>
			<elseif pos:line="29" pos:column="25">else <if pos:line="29" pos:column="30">if <condition pos:line="29" pos:column="33">(<expr><name pos:line="29" pos:column="34">DS_TYPE_GAUGE<pos:position pos:line="29" pos:column="47"/></name> <operator pos:line="29" pos:column="48">==<pos:position pos:line="29" pos:column="50"/></operator> <name><name pos:line="29" pos:column="51">ds<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">-&gt;<pos:position pos:line="29" pos:column="58"/></operator><name pos:line="29" pos:column="55">ds<pos:position pos:line="29" pos:column="57"/></name><index pos:line="29" pos:column="57">[<expr><name pos:line="29" pos:column="58">i<pos:position pos:line="29" pos:column="59"/></name></expr>]<pos:position pos:line="29" pos:column="60"/></index></name><operator pos:line="29" pos:column="60">.<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="61">type<pos:position pos:line="29" pos:column="65"/></name></expr>)<pos:position pos:line="29" pos:column="66"/></condition><then pos:line="29" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="33">value<pos:position pos:line="30" pos:column="38"/></name><index pos:line="30" pos:column="38">[<expr><name pos:line="30" pos:column="39">i<pos:position pos:line="30" pos:column="40"/></name></expr>]<pos:position pos:line="30" pos:column="41"/></index></name><operator pos:line="30" pos:column="41">.<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="42">gauge<pos:position pos:line="30" pos:column="47"/></name> <operator pos:line="30" pos:column="48">=<pos:position pos:line="30" pos:column="49"/></operator> <call><name pos:line="30" pos:column="50">SvNV<pos:position pos:line="30" pos:column="54"/></name> <argument_list pos:line="30" pos:column="55">(<argument><expr><operator pos:line="30" pos:column="56">*<pos:position pos:line="30" pos:column="57"/></operator><name pos:line="30" pos:column="57">tmp<pos:position pos:line="30" pos:column="60"/></name></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="62"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="31" pos:column="25">else <if pos:line="31" pos:column="30">if <condition pos:line="31" pos:column="33">(<expr><name pos:line="31" pos:column="34">DS_TYPE_DERIVE<pos:position pos:line="31" pos:column="48"/></name> <operator pos:line="31" pos:column="49">==<pos:position pos:line="31" pos:column="51"/></operator> <name><name pos:line="31" pos:column="52">ds<pos:position pos:line="31" pos:column="54"/></name><operator pos:line="31" pos:column="54">-&gt;<pos:position pos:line="31" pos:column="59"/></operator><name pos:line="31" pos:column="56">ds<pos:position pos:line="31" pos:column="58"/></name><index pos:line="31" pos:column="58">[<expr><name pos:line="31" pos:column="59">i<pos:position pos:line="31" pos:column="60"/></name></expr>]<pos:position pos:line="31" pos:column="61"/></index></name><operator pos:line="31" pos:column="61">.<pos:position pos:line="31" pos:column="62"/></operator><name pos:line="31" pos:column="62">type<pos:position pos:line="31" pos:column="66"/></name></expr>)<pos:position pos:line="31" pos:column="67"/></condition><then pos:line="31" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="33">value<pos:position pos:line="32" pos:column="38"/></name><index pos:line="32" pos:column="38">[<expr><name pos:line="32" pos:column="39">i<pos:position pos:line="32" pos:column="40"/></name></expr>]<pos:position pos:line="32" pos:column="41"/></index></name><operator pos:line="32" pos:column="41">.<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="42">derive<pos:position pos:line="32" pos:column="48"/></name> <operator pos:line="32" pos:column="49">=<pos:position pos:line="32" pos:column="50"/></operator> <call><name pos:line="32" pos:column="51">SvIV<pos:position pos:line="32" pos:column="55"/></name> <argument_list pos:line="32" pos:column="56">(<argument><expr><operator pos:line="32" pos:column="57">*<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="58">tmp<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="33" pos:column="25">else <if pos:line="33" pos:column="30">if <condition pos:line="33" pos:column="33">(<expr><name pos:line="33" pos:column="34">DS_TYPE_ABSOLUTE<pos:position pos:line="33" pos:column="50"/></name> <operator pos:line="33" pos:column="51">==<pos:position pos:line="33" pos:column="53"/></operator> <name><name pos:line="33" pos:column="54">ds<pos:position pos:line="33" pos:column="56"/></name><operator pos:line="33" pos:column="56">-&gt;<pos:position pos:line="33" pos:column="61"/></operator><name pos:line="33" pos:column="58">ds<pos:position pos:line="33" pos:column="60"/></name><index pos:line="33" pos:column="60">[<expr><name pos:line="33" pos:column="61">i<pos:position pos:line="33" pos:column="62"/></name></expr>]<pos:position pos:line="33" pos:column="63"/></index></name><operator pos:line="33" pos:column="63">.<pos:position pos:line="33" pos:column="64"/></operator><name pos:line="33" pos:column="64">type<pos:position pos:line="33" pos:column="68"/></name></expr>)<pos:position pos:line="33" pos:column="69"/></condition><then pos:line="33" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="33">value<pos:position pos:line="34" pos:column="38"/></name><index pos:line="34" pos:column="38">[<expr><name pos:line="34" pos:column="39">i<pos:position pos:line="34" pos:column="40"/></name></expr>]<pos:position pos:line="34" pos:column="41"/></index></name><operator pos:line="34" pos:column="41">.<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="42">absolute<pos:position pos:line="34" pos:column="50"/></name> <operator pos:line="34" pos:column="51">=<pos:position pos:line="34" pos:column="52"/></operator> <call><name pos:line="34" pos:column="53">SvIV<pos:position pos:line="34" pos:column="57"/></name> <argument_list pos:line="34" pos:column="58">(<argument><expr><operator pos:line="34" pos:column="59">*<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="60">tmp<pos:position pos:line="34" pos:column="63"/></name></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="65"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="35" pos:column="18"/></block></then>
		<else pos:line="36" pos:column="17">else <block pos:line="36" pos:column="22">{
			<return pos:line="37" pos:column="25">return <expr><literal type="number" pos:line="37" pos:column="32">0<pos:position pos:line="37" pos:column="33"/></literal></expr>;<pos:position pos:line="37" pos:column="34"/></return>
		}<pos:position pos:line="38" pos:column="18"/></block></else></if>
	}<pos:position pos:line="39" pos:column="10"/></block></for>

	<return pos:line="41" pos:column="9">return <expr><name><name pos:line="41" pos:column="16">ds<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">-&gt;<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="20">ds_num<pos:position pos:line="41" pos:column="26"/></name></name></expr>;<pos:position pos:line="41" pos:column="27"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

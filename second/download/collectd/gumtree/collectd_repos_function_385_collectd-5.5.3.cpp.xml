<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_385_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_acpi_callback<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">dir<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="49">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">power_supply<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">void<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">user_data<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="33"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">battery_index<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">user_data<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="7" pos:column="9">gauge_t<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">power<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">NAN<pos:position pos:line="7" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">gauge_t<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">voltage<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><name pos:line="8" pos:column="27">NAN<pos:position pos:line="8" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">gauge_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">capacity_charged<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><name pos:line="9" pos:column="36">NAN<pos:position pos:line="9" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">gauge_t<pos:position pos:line="10" pos:column="16"/></name></type> <name pos:line="10" pos:column="17">capacity_full<pos:position pos:line="10" pos:column="30"/></name> <init pos:line="10" pos:column="31">= <expr><name pos:line="10" pos:column="33">NAN<pos:position pos:line="10" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">gauge_t<pos:position pos:line="11" pos:column="16"/></name></type> <name pos:line="11" pos:column="17">capacity_design<pos:position pos:line="11" pos:column="32"/></name> <init pos:line="11" pos:column="33">= <expr><name pos:line="11" pos:column="35">NAN<pos:position pos:line="11" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">_Bool<pos:position pos:line="12" pos:column="14"/></name></type> <name pos:line="12" pos:column="15">charging<pos:position pos:line="12" pos:column="23"/></name> <init pos:line="12" pos:column="24">= <expr><literal type="number" pos:line="12" pos:column="26">0<pos:position pos:line="12" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">_Bool<pos:position pos:line="13" pos:column="14"/></name></type> <name pos:line="13" pos:column="15">is_current<pos:position pos:line="13" pos:column="25"/></name> <init pos:line="13" pos:column="26">= <expr><literal type="number" pos:line="13" pos:column="28">0<pos:position pos:line="13" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <specifier pos:line="15" pos:column="14">const<pos:position pos:line="15" pos:column="19"/></specifier> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type><name pos:line="15" pos:column="21">plugin_instance<pos:position pos:line="15" pos:column="36"/></name></decl>;<pos:position pos:line="15" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name></type> <name><name pos:line="16" pos:column="14">filename<pos:position pos:line="16" pos:column="22"/></name><index pos:line="16" pos:column="22">[<expr><name pos:line="16" pos:column="23">PATH_MAX<pos:position pos:line="16" pos:column="31"/></name></expr>]<pos:position pos:line="16" pos:column="32"/></index></name></decl>;<pos:position pos:line="16" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name></type> <name><name pos:line="17" pos:column="14">buffer<pos:position pos:line="17" pos:column="20"/></name><index pos:line="17" pos:column="20">[<expr><literal type="number" pos:line="17" pos:column="21">1024<pos:position pos:line="17" pos:column="25"/></literal></expr>]<pos:position pos:line="17" pos:column="26"/></index></name></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="19" pos:column="9">FILE<pos:position pos:line="19" pos:column="13"/></name> <modifier pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></modifier></type><name pos:line="19" pos:column="15">fh<pos:position pos:line="19" pos:column="17"/></name></decl>;<pos:position pos:line="19" pos:column="18"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="21" pos:column="9">ssnprintf<pos:position pos:line="21" pos:column="18"/></name> <argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">filename<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="30">sizeof <argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">filename<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="49">"%s/%s/state"<pos:position pos:line="21" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="64">dir<pos:position pos:line="21" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="69">power_supply<pos:position pos:line="21" pos:column="81"/></name></expr></argument>)<pos:position pos:line="21" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="83"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">fh<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">fopen<pos:position pos:line="22" pos:column="19"/></name> <argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">filename<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="31">"r"<pos:position pos:line="22" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">fh<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">==<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">NULL<pos:position pos:line="23" pos:column="23"/></name></expr>)<pos:position pos:line="23" pos:column="24"/></condition><then pos:line="23" pos:column="24">
	<block pos:line="24" pos:column="9">{
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">(<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">errno<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">==<pos:position pos:line="25" pos:column="30"/></operator> <name pos:line="25" pos:column="31">EAGAIN<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">)<pos:position pos:line="25" pos:column="38"/></operator> <operator pos:line="25" pos:column="39">||<pos:position pos:line="25" pos:column="41"/></operator> <operator pos:line="25" pos:column="42">(<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">errno<pos:position pos:line="25" pos:column="48"/></name> <operator pos:line="25" pos:column="49">==<pos:position pos:line="25" pos:column="51"/></operator> <name pos:line="25" pos:column="52">EINTR<pos:position pos:line="25" pos:column="57"/></name><operator pos:line="25" pos:column="57">)<pos:position pos:line="25" pos:column="58"/></operator> <operator pos:line="25" pos:column="59">||<pos:position pos:line="25" pos:column="61"/></operator> <operator pos:line="25" pos:column="62">(<pos:position pos:line="25" pos:column="63"/></operator><name pos:line="25" pos:column="63">errno<pos:position pos:line="25" pos:column="68"/></name> <operator pos:line="25" pos:column="69">==<pos:position pos:line="25" pos:column="71"/></operator> <name pos:line="25" pos:column="72">ENOENT<pos:position pos:line="25" pos:column="78"/></name><operator pos:line="25" pos:column="78">)<pos:position pos:line="25" pos:column="79"/></operator></expr>)<pos:position pos:line="25" pos:column="80"/></condition><then pos:line="25" pos:column="80">
			<block type="pseudo"><return pos:line="26" pos:column="25">return <expr><operator pos:line="26" pos:column="32">(<pos:position pos:line="26" pos:column="33"/></operator><literal type="number" pos:line="26" pos:column="33">0<pos:position pos:line="26" pos:column="34"/></literal><operator pos:line="26" pos:column="34">)<pos:position pos:line="26" pos:column="35"/></operator></expr>;<pos:position pos:line="26" pos:column="36"/></return></block></then>
		<else pos:line="27" pos:column="17">else
			<block type="pseudo"><return pos:line="28" pos:column="25">return <expr><operator pos:line="28" pos:column="32">(<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="33">errno<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">)<pos:position pos:line="28" pos:column="39"/></operator></expr>;<pos:position pos:line="28" pos:column="40"/></return></block></else></if>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="31" pos:column="9">/*
	 * [11:00] &lt;@tokkee&gt; $ cat /proc/acpi/battery/BAT1/state
	 * [11:00] &lt;@tokkee&gt; present:                 yes
	 * [11:00] &lt;@tokkee&gt; capacity state:          ok
	 * [11:00] &lt;@tokkee&gt; charging state:          charging
	 * [11:00] &lt;@tokkee&gt; present rate:            1724 mA
	 * [11:00] &lt;@tokkee&gt; remaining capacity:      4136 mAh
	 * [11:00] &lt;@tokkee&gt; present voltage:         12428 mV
	 */</comment>
	<while pos:line="40" pos:column="9">while <condition pos:line="40" pos:column="15">(<expr><call><name pos:line="40" pos:column="16">fgets<pos:position pos:line="40" pos:column="21"/></name> <argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">buffer<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="31">sizeof <argument_list pos:line="40" pos:column="38">(<argument><expr><name pos:line="40" pos:column="39">buffer<pos:position pos:line="40" pos:column="45"/></name></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="40" pos:column="48">fh<pos:position pos:line="40" pos:column="50"/></name></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call> <operator pos:line="40" pos:column="52">!=<pos:position pos:line="40" pos:column="54"/></operator> <name pos:line="40" pos:column="55">NULL<pos:position pos:line="40" pos:column="59"/></name></expr>)<pos:position pos:line="40" pos:column="60"/></condition>
	<block pos:line="41" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="42" pos:column="17">char<pos:position pos:line="42" pos:column="21"/></name> <modifier pos:line="42" pos:column="22">*<pos:position pos:line="42" pos:column="23"/></modifier></type><name><name pos:line="42" pos:column="23">fields<pos:position pos:line="42" pos:column="29"/></name><index pos:line="42" pos:column="29">[<expr><literal type="number" pos:line="42" pos:column="30">8<pos:position pos:line="42" pos:column="31"/></literal></expr>]<pos:position pos:line="42" pos:column="32"/></index></name></decl>;<pos:position pos:line="42" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="43" pos:column="17">int<pos:position pos:line="43" pos:column="20"/></name></type> <name pos:line="43" pos:column="21">numfields<pos:position pos:line="43" pos:column="30"/></name></decl>;<pos:position pos:line="43" pos:column="31"/></decl_stmt>

		<expr_stmt><expr><name pos:line="45" pos:column="17">numfields<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">=<pos:position pos:line="45" pos:column="28"/></operator> <call><name pos:line="45" pos:column="29">strsplit<pos:position pos:line="45" pos:column="37"/></name> <argument_list pos:line="45" pos:column="38">(<argument><expr><name pos:line="45" pos:column="39">buffer<pos:position pos:line="45" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="47">fields<pos:position pos:line="45" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="55">STATIC_ARRAY_SIZE<pos:position pos:line="45" pos:column="72"/></name> <argument_list pos:line="45" pos:column="73">(<argument><expr><name pos:line="45" pos:column="74">fields<pos:position pos:line="45" pos:column="80"/></name></expr></argument>)<pos:position pos:line="45" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="83"/></expr_stmt>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">numfields<pos:position pos:line="46" pos:column="30"/></name> <operator pos:line="46" pos:column="31">&lt;<pos:position pos:line="46" pos:column="35"/></operator> <literal type="number" pos:line="46" pos:column="33">3<pos:position pos:line="46" pos:column="34"/></literal></expr>)<pos:position pos:line="46" pos:column="35"/></condition><then pos:line="46" pos:column="35">
			<block type="pseudo"><continue pos:line="47" pos:column="25">continue;<pos:position pos:line="47" pos:column="34"/></continue></block></then></if>

		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><operator pos:line="49" pos:column="21">(<pos:position pos:line="49" pos:column="22"/></operator><call><name pos:line="49" pos:column="22">strcmp<pos:position pos:line="49" pos:column="28"/></name> <argument_list pos:line="49" pos:column="29">(<argument><expr><name><name pos:line="49" pos:column="30">fields<pos:position pos:line="49" pos:column="36"/></name><index pos:line="49" pos:column="36">[<expr><literal type="number" pos:line="49" pos:column="37">0<pos:position pos:line="49" pos:column="38"/></literal></expr>]<pos:position pos:line="49" pos:column="39"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="41">"charging"<pos:position pos:line="49" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call> <operator pos:line="49" pos:column="53">==<pos:position pos:line="49" pos:column="55"/></operator> <literal type="number" pos:line="49" pos:column="56">0<pos:position pos:line="49" pos:column="57"/></literal><operator pos:line="49" pos:column="57">)<pos:position pos:line="49" pos:column="58"/></operator>
				<operator pos:line="50" pos:column="33">&amp;&amp;<pos:position pos:line="50" pos:column="43"/></operator> <operator pos:line="50" pos:column="36">(<pos:position pos:line="50" pos:column="37"/></operator><call><name pos:line="50" pos:column="37">strcmp<pos:position pos:line="50" pos:column="43"/></name> <argument_list pos:line="50" pos:column="44">(<argument><expr><name><name pos:line="50" pos:column="45">fields<pos:position pos:line="50" pos:column="51"/></name><index pos:line="50" pos:column="51">[<expr><literal type="number" pos:line="50" pos:column="52">1<pos:position pos:line="50" pos:column="53"/></literal></expr>]<pos:position pos:line="50" pos:column="54"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="56">"state:"<pos:position pos:line="50" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="65"/></argument_list></call> <operator pos:line="50" pos:column="66">==<pos:position pos:line="50" pos:column="68"/></operator> <literal type="number" pos:line="50" pos:column="69">0<pos:position pos:line="50" pos:column="70"/></literal><operator pos:line="50" pos:column="70">)<pos:position pos:line="50" pos:column="71"/></operator></expr>)<pos:position pos:line="50" pos:column="72"/></condition><then pos:line="50" pos:column="72">
		<block pos:line="51" pos:column="17">{
			<if pos:line="52" pos:column="25">if <condition pos:line="52" pos:column="28">(<expr><call><name pos:line="52" pos:column="29">strcmp<pos:position pos:line="52" pos:column="35"/></name> <argument_list pos:line="52" pos:column="36">(<argument><expr><name><name pos:line="52" pos:column="37">fields<pos:position pos:line="52" pos:column="43"/></name><index pos:line="52" pos:column="43">[<expr><literal type="number" pos:line="52" pos:column="44">2<pos:position pos:line="52" pos:column="45"/></literal></expr>]<pos:position pos:line="52" pos:column="46"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="48">"charging"<pos:position pos:line="52" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="59"/></argument_list></call> <operator pos:line="52" pos:column="60">==<pos:position pos:line="52" pos:column="62"/></operator> <literal type="number" pos:line="52" pos:column="63">0<pos:position pos:line="52" pos:column="64"/></literal></expr>)<pos:position pos:line="52" pos:column="65"/></condition><then pos:line="52" pos:column="65">
				<block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="33">charging<pos:position pos:line="53" pos:column="41"/></name> <operator pos:line="53" pos:column="42">=<pos:position pos:line="53" pos:column="43"/></operator> <literal type="number" pos:line="53" pos:column="44">1<pos:position pos:line="53" pos:column="45"/></literal></expr>;<pos:position pos:line="53" pos:column="46"/></expr_stmt></block></then>
			<else pos:line="54" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="33">charging<pos:position pos:line="55" pos:column="41"/></name> <operator pos:line="55" pos:column="42">=<pos:position pos:line="55" pos:column="43"/></operator> <literal type="number" pos:line="55" pos:column="44">0<pos:position pos:line="55" pos:column="45"/></literal></expr>;<pos:position pos:line="55" pos:column="46"/></expr_stmt></block></else></if>
			<continue pos:line="56" pos:column="25">continue;<pos:position pos:line="56" pos:column="34"/></continue>
		}<pos:position pos:line="57" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="59" pos:column="17">/* The unit of "present rate" depends on the battery. Modern
		 * batteries export power (watts), older batteries (used to)
		 * export current (amperes). We check the fourth column and try
		 * to find old batteries this way. */</comment>
		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><operator pos:line="63" pos:column="21">(<pos:position pos:line="63" pos:column="22"/></operator><call><name pos:line="63" pos:column="22">strcmp<pos:position pos:line="63" pos:column="28"/></name> <argument_list pos:line="63" pos:column="29">(<argument><expr><name><name pos:line="63" pos:column="30">fields<pos:position pos:line="63" pos:column="36"/></name><index pos:line="63" pos:column="36">[<expr><literal type="number" pos:line="63" pos:column="37">0<pos:position pos:line="63" pos:column="38"/></literal></expr>]<pos:position pos:line="63" pos:column="39"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="41">"present"<pos:position pos:line="63" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="51"/></argument_list></call> <operator pos:line="63" pos:column="52">==<pos:position pos:line="63" pos:column="54"/></operator> <literal type="number" pos:line="63" pos:column="55">0<pos:position pos:line="63" pos:column="56"/></literal><operator pos:line="63" pos:column="56">)<pos:position pos:line="63" pos:column="57"/></operator>
				<operator pos:line="64" pos:column="33">&amp;&amp;<pos:position pos:line="64" pos:column="43"/></operator> <operator pos:line="64" pos:column="36">(<pos:position pos:line="64" pos:column="37"/></operator><call><name pos:line="64" pos:column="37">strcmp<pos:position pos:line="64" pos:column="43"/></name> <argument_list pos:line="64" pos:column="44">(<argument><expr><name><name pos:line="64" pos:column="45">fields<pos:position pos:line="64" pos:column="51"/></name><index pos:line="64" pos:column="51">[<expr><literal type="number" pos:line="64" pos:column="52">1<pos:position pos:line="64" pos:column="53"/></literal></expr>]<pos:position pos:line="64" pos:column="54"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="56">"rate:"<pos:position pos:line="64" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="64"/></argument_list></call> <operator pos:line="64" pos:column="65">==<pos:position pos:line="64" pos:column="67"/></operator> <literal type="number" pos:line="64" pos:column="68">0<pos:position pos:line="64" pos:column="69"/></literal><operator pos:line="64" pos:column="69">)<pos:position pos:line="64" pos:column="70"/></operator></expr>)<pos:position pos:line="64" pos:column="71"/></condition><then pos:line="64" pos:column="71">
		<block pos:line="65" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="66" pos:column="25">strtogauge<pos:position pos:line="66" pos:column="35"/></name> <argument_list pos:line="66" pos:column="36">(<argument><expr><name><name pos:line="66" pos:column="37">fields<pos:position pos:line="66" pos:column="43"/></name><index pos:line="66" pos:column="43">[<expr><literal type="number" pos:line="66" pos:column="44">2<pos:position pos:line="66" pos:column="45"/></literal></expr>]<pos:position pos:line="66" pos:column="46"/></index></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="48">&amp;<pos:position pos:line="66" pos:column="53"/></operator><name pos:line="66" pos:column="49">power<pos:position pos:line="66" pos:column="54"/></name></expr></argument>)<pos:position pos:line="66" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="56"/></expr_stmt>

			<if pos:line="68" pos:column="25">if <condition pos:line="68" pos:column="28">(<expr><operator pos:line="68" pos:column="29">(<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="30">numfields<pos:position pos:line="68" pos:column="39"/></name> <operator pos:line="68" pos:column="40">&gt;=<pos:position pos:line="68" pos:column="45"/></operator> <literal type="number" pos:line="68" pos:column="43">4<pos:position pos:line="68" pos:column="44"/></literal><operator pos:line="68" pos:column="44">)<pos:position pos:line="68" pos:column="45"/></operator> <operator pos:line="68" pos:column="46">&amp;&amp;<pos:position pos:line="68" pos:column="56"/></operator> <operator pos:line="68" pos:column="49">(<pos:position pos:line="68" pos:column="50"/></operator><call><name pos:line="68" pos:column="50">strcmp<pos:position pos:line="68" pos:column="56"/></name> <argument_list pos:line="68" pos:column="57">(<argument><expr><literal type="string" pos:line="68" pos:column="58">"mA"<pos:position pos:line="68" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="64">fields<pos:position pos:line="68" pos:column="70"/></name><index pos:line="68" pos:column="70">[<expr><literal type="number" pos:line="68" pos:column="71">3<pos:position pos:line="68" pos:column="72"/></literal></expr>]<pos:position pos:line="68" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="68" pos:column="74"/></argument_list></call> <operator pos:line="68" pos:column="75">==<pos:position pos:line="68" pos:column="77"/></operator> <literal type="number" pos:line="68" pos:column="78">0<pos:position pos:line="68" pos:column="79"/></literal><operator pos:line="68" pos:column="79">)<pos:position pos:line="68" pos:column="80"/></operator></expr>)<pos:position pos:line="68" pos:column="81"/></condition><then pos:line="68" pos:column="81">
				<block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="33">is_current<pos:position pos:line="69" pos:column="43"/></name> <operator pos:line="69" pos:column="44">=<pos:position pos:line="69" pos:column="45"/></operator> <literal type="number" pos:line="69" pos:column="46">1<pos:position pos:line="69" pos:column="47"/></literal></expr>;<pos:position pos:line="69" pos:column="48"/></expr_stmt></block></then></if>
		}<pos:position pos:line="70" pos:column="18"/></block></then>
		<elseif pos:line="71" pos:column="17">else <if pos:line="71" pos:column="22">if <condition pos:line="71" pos:column="25">(<expr><operator pos:line="71" pos:column="26">(<pos:position pos:line="71" pos:column="27"/></operator><call><name pos:line="71" pos:column="27">strcmp<pos:position pos:line="71" pos:column="33"/></name> <argument_list pos:line="71" pos:column="34">(<argument><expr><name><name pos:line="71" pos:column="35">fields<pos:position pos:line="71" pos:column="41"/></name><index pos:line="71" pos:column="41">[<expr><literal type="number" pos:line="71" pos:column="42">0<pos:position pos:line="71" pos:column="43"/></literal></expr>]<pos:position pos:line="71" pos:column="44"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="46">"remaining"<pos:position pos:line="71" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="58"/></argument_list></call> <operator pos:line="71" pos:column="59">==<pos:position pos:line="71" pos:column="61"/></operator> <literal type="number" pos:line="71" pos:column="62">0<pos:position pos:line="71" pos:column="63"/></literal><operator pos:line="71" pos:column="63">)<pos:position pos:line="71" pos:column="64"/></operator>
				<operator pos:line="72" pos:column="33">&amp;&amp;<pos:position pos:line="72" pos:column="43"/></operator> <operator pos:line="72" pos:column="36">(<pos:position pos:line="72" pos:column="37"/></operator><call><name pos:line="72" pos:column="37">strcmp<pos:position pos:line="72" pos:column="43"/></name> <argument_list pos:line="72" pos:column="44">(<argument><expr><name><name pos:line="72" pos:column="45">fields<pos:position pos:line="72" pos:column="51"/></name><index pos:line="72" pos:column="51">[<expr><literal type="number" pos:line="72" pos:column="52">1<pos:position pos:line="72" pos:column="53"/></literal></expr>]<pos:position pos:line="72" pos:column="54"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="56">"capacity:"<pos:position pos:line="72" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="68"/></argument_list></call> <operator pos:line="72" pos:column="69">==<pos:position pos:line="72" pos:column="71"/></operator> <literal type="number" pos:line="72" pos:column="72">0<pos:position pos:line="72" pos:column="73"/></literal><operator pos:line="72" pos:column="73">)<pos:position pos:line="72" pos:column="74"/></operator></expr>)<pos:position pos:line="72" pos:column="75"/></condition><then pos:line="72" pos:column="75">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="25">strtogauge<pos:position pos:line="73" pos:column="35"/></name> <argument_list pos:line="73" pos:column="36">(<argument><expr><name><name pos:line="73" pos:column="37">fields<pos:position pos:line="73" pos:column="43"/></name><index pos:line="73" pos:column="43">[<expr><literal type="number" pos:line="73" pos:column="44">2<pos:position pos:line="73" pos:column="45"/></literal></expr>]<pos:position pos:line="73" pos:column="46"/></index></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="48">&amp;<pos:position pos:line="73" pos:column="53"/></operator><name pos:line="73" pos:column="49">capacity_charged<pos:position pos:line="73" pos:column="65"/></name></expr></argument>)<pos:position pos:line="73" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="67"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="74" pos:column="17">else <if pos:line="74" pos:column="22">if <condition pos:line="74" pos:column="25">(<expr><operator pos:line="74" pos:column="26">(<pos:position pos:line="74" pos:column="27"/></operator><call><name pos:line="74" pos:column="27">strcmp<pos:position pos:line="74" pos:column="33"/></name> <argument_list pos:line="74" pos:column="34">(<argument><expr><name><name pos:line="74" pos:column="35">fields<pos:position pos:line="74" pos:column="41"/></name><index pos:line="74" pos:column="41">[<expr><literal type="number" pos:line="74" pos:column="42">0<pos:position pos:line="74" pos:column="43"/></literal></expr>]<pos:position pos:line="74" pos:column="44"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="46">"present"<pos:position pos:line="74" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="56"/></argument_list></call> <operator pos:line="74" pos:column="57">==<pos:position pos:line="74" pos:column="59"/></operator> <literal type="number" pos:line="74" pos:column="60">0<pos:position pos:line="74" pos:column="61"/></literal><operator pos:line="74" pos:column="61">)<pos:position pos:line="74" pos:column="62"/></operator>
				<operator pos:line="75" pos:column="33">&amp;&amp;<pos:position pos:line="75" pos:column="43"/></operator> <operator pos:line="75" pos:column="36">(<pos:position pos:line="75" pos:column="37"/></operator><call><name pos:line="75" pos:column="37">strcmp<pos:position pos:line="75" pos:column="43"/></name> <argument_list pos:line="75" pos:column="44">(<argument><expr><name><name pos:line="75" pos:column="45">fields<pos:position pos:line="75" pos:column="51"/></name><index pos:line="75" pos:column="51">[<expr><literal type="number" pos:line="75" pos:column="52">1<pos:position pos:line="75" pos:column="53"/></literal></expr>]<pos:position pos:line="75" pos:column="54"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="56">"voltage:"<pos:position pos:line="75" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="67"/></argument_list></call> <operator pos:line="75" pos:column="68">==<pos:position pos:line="75" pos:column="70"/></operator> <literal type="number" pos:line="75" pos:column="71">0<pos:position pos:line="75" pos:column="72"/></literal><operator pos:line="75" pos:column="72">)<pos:position pos:line="75" pos:column="73"/></operator></expr>)<pos:position pos:line="75" pos:column="74"/></condition><then pos:line="75" pos:column="74">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="25">strtogauge<pos:position pos:line="76" pos:column="35"/></name> <argument_list pos:line="76" pos:column="36">(<argument><expr><name><name pos:line="76" pos:column="37">fields<pos:position pos:line="76" pos:column="43"/></name><index pos:line="76" pos:column="43">[<expr><literal type="number" pos:line="76" pos:column="44">2<pos:position pos:line="76" pos:column="45"/></literal></expr>]<pos:position pos:line="76" pos:column="46"/></index></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="48">&amp;<pos:position pos:line="76" pos:column="53"/></operator><name pos:line="76" pos:column="49">voltage<pos:position pos:line="76" pos:column="56"/></name></expr></argument>)<pos:position pos:line="76" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="58"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="77" pos:column="10"/></block></while> <comment type="block" pos:line="77" pos:column="11">/* while (fgets (buffer, sizeof (buffer), fh) != NULL) */</comment>

	<expr_stmt><expr><call><name pos:line="79" pos:column="9">fclose<pos:position pos:line="79" pos:column="15"/></name> <argument_list pos:line="79" pos:column="16">(<argument><expr><name pos:line="79" pos:column="17">fh<pos:position pos:line="79" pos:column="19"/></name></expr></argument>)<pos:position pos:line="79" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="21"/></expr_stmt>

	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><operator pos:line="81" pos:column="13">!<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">charging<pos:position pos:line="81" pos:column="22"/></name></expr>)<pos:position pos:line="81" pos:column="23"/></condition><then pos:line="81" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="17">power<pos:position pos:line="82" pos:column="22"/></name> <operator pos:line="82" pos:column="23">*=<pos:position pos:line="82" pos:column="25"/></operator> <operator pos:line="82" pos:column="26">-<pos:position pos:line="82" pos:column="27"/></operator><literal type="number" pos:line="82" pos:column="27">1.0<pos:position pos:line="82" pos:column="30"/></literal></expr>;<pos:position pos:line="82" pos:column="31"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="84" pos:column="9">/* FIXME: This is a dirty hack for backwards compatibility: The battery
	 * plugin, for a very long time, has had the plugin_instance
	 * hard-coded to "0". So, to keep backwards compatibility, we'll use
	 * "0" for the first battery we find and the power_supply name for all
	 * following. This should be reverted in a future major version. */</comment>
	<expr_stmt><expr><name pos:line="89" pos:column="9">plugin_instance<pos:position pos:line="89" pos:column="24"/></name> <operator pos:line="89" pos:column="25">=<pos:position pos:line="89" pos:column="26"/></operator> <ternary><condition><expr><operator pos:line="89" pos:column="27">(<pos:position pos:line="89" pos:column="28"/></operator><operator pos:line="89" pos:column="28">*<pos:position pos:line="89" pos:column="29"/></operator><name pos:line="89" pos:column="29">battery_index<pos:position pos:line="89" pos:column="42"/></name> <operator pos:line="89" pos:column="43">==<pos:position pos:line="89" pos:column="45"/></operator> <literal type="number" pos:line="89" pos:column="46">0<pos:position pos:line="89" pos:column="47"/></literal><operator pos:line="89" pos:column="47">)<pos:position pos:line="89" pos:column="48"/></operator></expr> ?<pos:position pos:line="89" pos:column="50"/></condition><then pos:line="89" pos:column="50"> <expr><literal type="string" pos:line="89" pos:column="51">"0"<pos:position pos:line="89" pos:column="54"/></literal></expr> <pos:position pos:line="89" pos:column="55"/></then><else pos:line="89" pos:column="55">: <expr><name pos:line="89" pos:column="57">power_supply<pos:position pos:line="89" pos:column="69"/></name></expr></else></ternary></expr>;<pos:position pos:line="89" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="90" pos:column="9">(<pos:position pos:line="90" pos:column="10"/></operator><operator pos:line="90" pos:column="10">*<pos:position pos:line="90" pos:column="11"/></operator><name pos:line="90" pos:column="11">battery_index<pos:position pos:line="90" pos:column="24"/></name><operator pos:line="90" pos:column="24">)<pos:position pos:line="90" pos:column="25"/></operator><operator pos:line="90" pos:column="25">++<pos:position pos:line="90" pos:column="27"/></operator></expr>;<pos:position pos:line="90" pos:column="28"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="92" pos:column="9">read_acpi_full_capacity<pos:position pos:line="92" pos:column="32"/></name> <argument_list pos:line="92" pos:column="33">(<argument><expr><name pos:line="92" pos:column="34">dir<pos:position pos:line="92" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="39">power_supply<pos:position pos:line="92" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="53">&amp;<pos:position pos:line="92" pos:column="58"/></operator><name pos:line="92" pos:column="54">capacity_full<pos:position pos:line="92" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="69">&amp;<pos:position pos:line="92" pos:column="74"/></operator><name pos:line="92" pos:column="70">capacity_design<pos:position pos:line="92" pos:column="85"/></name></expr></argument>)<pos:position pos:line="92" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="87"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="94" pos:column="9">submit_capacity<pos:position pos:line="94" pos:column="24"/></name> <argument_list pos:line="94" pos:column="25">(<argument><expr><name pos:line="94" pos:column="26">plugin_instance<pos:position pos:line="94" pos:column="41"/></name></expr></argument>,
			<argument><expr><name pos:line="95" pos:column="25">capacity_charged<pos:position pos:line="95" pos:column="41"/></name> <operator pos:line="95" pos:column="42">*<pos:position pos:line="95" pos:column="43"/></operator> <name pos:line="95" pos:column="44">PROC_ACPI_FACTOR<pos:position pos:line="95" pos:column="60"/></name></expr></argument>,
			<argument><expr><name pos:line="96" pos:column="25">capacity_full<pos:position pos:line="96" pos:column="38"/></name> <operator pos:line="96" pos:column="39">*<pos:position pos:line="96" pos:column="40"/></operator> <name pos:line="96" pos:column="41">PROC_ACPI_FACTOR<pos:position pos:line="96" pos:column="57"/></name></expr></argument>,
			<argument><expr><name pos:line="97" pos:column="25">capacity_design<pos:position pos:line="97" pos:column="40"/></name> <operator pos:line="97" pos:column="41">*<pos:position pos:line="97" pos:column="42"/></operator> <name pos:line="97" pos:column="43">PROC_ACPI_FACTOR<pos:position pos:line="97" pos:column="59"/></name></expr></argument>)<pos:position pos:line="97" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="61"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="99" pos:column="9">battery_submit<pos:position pos:line="99" pos:column="23"/></name> <argument_list pos:line="99" pos:column="24">(<argument><expr><name pos:line="99" pos:column="25">plugin_instance<pos:position pos:line="99" pos:column="40"/></name></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="100" pos:column="25">is_current<pos:position pos:line="100" pos:column="35"/></name></expr> ?<pos:position pos:line="100" pos:column="37"/></condition><then pos:line="100" pos:column="37"> <expr><literal type="string" pos:line="100" pos:column="38">"current"<pos:position pos:line="100" pos:column="47"/></literal></expr> <pos:position pos:line="100" pos:column="48"/></then><else pos:line="100" pos:column="48">: <expr><literal type="string" pos:line="100" pos:column="50">"power"<pos:position pos:line="100" pos:column="57"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><name pos:line="101" pos:column="25">power<pos:position pos:line="101" pos:column="30"/></name> <operator pos:line="101" pos:column="31">*<pos:position pos:line="101" pos:column="32"/></operator> <name pos:line="101" pos:column="33">PROC_ACPI_FACTOR<pos:position pos:line="101" pos:column="49"/></name></expr></argument>)<pos:position pos:line="101" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="102" pos:column="9">battery_submit<pos:position pos:line="102" pos:column="23"/></name> <argument_list pos:line="102" pos:column="24">(<argument><expr><name pos:line="102" pos:column="25">plugin_instance<pos:position pos:line="102" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="42">"voltage"<pos:position pos:line="102" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="53">voltage<pos:position pos:line="102" pos:column="60"/></name> <operator pos:line="102" pos:column="61">*<pos:position pos:line="102" pos:column="62"/></operator> <name pos:line="102" pos:column="63">PROC_ACPI_FACTOR<pos:position pos:line="102" pos:column="79"/></name></expr></argument>)<pos:position pos:line="102" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="81"/></expr_stmt>

	<return pos:line="104" pos:column="9">return <expr><literal type="number" pos:line="104" pos:column="16">0<pos:position pos:line="104" pos:column="17"/></literal></expr>;<pos:position pos:line="104" pos:column="18"/></return>
}<pos:position pos:line="105" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1388_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">za_read<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list> <block pos:line="1" pos:column="26">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">gauge_t<pos:position pos:line="2" pos:column="10"/></name></type> <name pos:line="2" pos:column="11">arc_hits<pos:position pos:line="2" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="21">arc_misses<pos:position pos:line="2" pos:column="31"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="33">l2_hits<pos:position pos:line="2" pos:column="40"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="42">l2_misses<pos:position pos:line="2" pos:column="51"/></name></decl>;<pos:position pos:line="2" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">kstat_t<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">ksp<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><name pos:line="3" pos:column="18">NULL<pos:position pos:line="3" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><call><name pos:line="5" pos:column="5">defined<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">KERNEL_LINUX<pos:position pos:line="5" pos:column="25"/></name></expr></argument>)<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">FILE<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">fh<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">buffer<pos:position pos:line="7" pos:column="14"/></name><index pos:line="7" pos:column="14">[<expr><literal type="number" pos:line="7" pos:column="15">1024<pos:position pos:line="7" pos:column="19"/></literal></expr>]<pos:position pos:line="7" pos:column="20"/></index></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">fh<pos:position pos:line="9" pos:column="5"/></name> <operator pos:line="9" pos:column="6">=<pos:position pos:line="9" pos:column="7"/></operator> <call><name pos:line="9" pos:column="8">fopen<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">ZOL_ARCSTATS_FILE<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="33">"r"<pos:position pos:line="9" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">fh<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">==<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">NULL<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18"> <block pos:line="10" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name><name pos:line="11" pos:column="10">errbuf<pos:position pos:line="11" pos:column="16"/></name><index pos:line="11" pos:column="16">[<expr><literal type="number" pos:line="11" pos:column="17">1024<pos:position pos:line="11" pos:column="21"/></literal></expr>]<pos:position pos:line="11" pos:column="22"/></index></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"zfs_arc plugin: Opening \"%s\" failed: %s"<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="56">ZOL_ARCSTATS_FILE<pos:position pos:line="12" pos:column="73"/></name></expr></argument>,
          <argument><expr><call><name pos:line="13" pos:column="11">sstrerror<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">errno<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">errbuf<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="36">sizeof<argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">errbuf<pos:position pos:line="13" pos:column="49"/></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="17" pos:column="3">/* Ignore the first two lines because they contain information about the rest
   * of the file.
   * See kstat_seq_show_headers module/spl/spl-kstat.c of the spl kernel module.
   */</comment>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">(<pos:position pos:line="21" pos:column="8"/></operator><call><name pos:line="21" pos:column="8">fgets<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><name pos:line="21" pos:column="14">buffer<pos:position pos:line="21" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="22">sizeof<argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">buffer<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">fh<pos:position pos:line="21" pos:column="40"/></name></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call> <operator pos:line="21" pos:column="42">==<pos:position pos:line="21" pos:column="44"/></operator> <name pos:line="21" pos:column="45">NULL<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">)<pos:position pos:line="21" pos:column="50"/></operator> <operator pos:line="21" pos:column="51">||<pos:position pos:line="21" pos:column="53"/></operator>
      <operator pos:line="22" pos:column="7">(<pos:position pos:line="22" pos:column="8"/></operator><call><name pos:line="22" pos:column="8">fgets<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">buffer<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="22">sizeof<argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">buffer<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">fh<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call> <operator pos:line="22" pos:column="42">==<pos:position pos:line="22" pos:column="44"/></operator> <name pos:line="22" pos:column="45">NULL<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">)<pos:position pos:line="22" pos:column="50"/></operator></expr>)<pos:position pos:line="22" pos:column="51"/></condition><then pos:line="22" pos:column="51"> <block pos:line="22" pos:column="52">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ERROR<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><literal type="string" pos:line="23" pos:column="11">"zfs_arc plugin: \"%s\" does not contain at least two lines."<pos:position pos:line="23" pos:column="72"/></literal></expr></argument>,
          <argument><expr><name pos:line="24" pos:column="11">ZOL_ARCSTATS_FILE<pos:position pos:line="24" pos:column="28"/></name></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">fclose<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">fh<pos:position pos:line="25" pos:column="14"/></name></expr></argument>)<pos:position pos:line="25" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="16"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><operator pos:line="26" pos:column="12">-<pos:position pos:line="26" pos:column="13"/></operator><literal type="number" pos:line="26" pos:column="13">1<pos:position pos:line="26" pos:column="14"/></literal></expr>;<pos:position pos:line="26" pos:column="15"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="29" pos:column="3">ksp<pos:position pos:line="29" pos:column="6"/></name> <operator pos:line="29" pos:column="7">=<pos:position pos:line="29" pos:column="8"/></operator> <call><name pos:line="29" pos:column="9">llist_create<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">()<pos:position pos:line="29" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">ksp<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">==<pos:position pos:line="30" pos:column="13"/></operator> <name pos:line="30" pos:column="14">NULL<pos:position pos:line="30" pos:column="18"/></name></expr>)<pos:position pos:line="30" pos:column="19"/></condition><then pos:line="30" pos:column="19"> <block pos:line="30" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ERROR<pos:position pos:line="31" pos:column="10"/></name><argument_list pos:line="31" pos:column="10">(<argument><expr><literal type="string" pos:line="31" pos:column="11">"zfs_arc plugin: `llist_create' failed."<pos:position pos:line="31" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">fclose<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><name pos:line="32" pos:column="12">fh<pos:position pos:line="32" pos:column="14"/></name></expr></argument>)<pos:position pos:line="32" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="16"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><operator pos:line="33" pos:column="12">-<pos:position pos:line="33" pos:column="13"/></operator><literal type="number" pos:line="33" pos:column="13">1<pos:position pos:line="33" pos:column="14"/></literal></expr>;<pos:position pos:line="33" pos:column="15"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <while pos:line="36" pos:column="3">while <condition pos:line="36" pos:column="9">(<expr><call><name pos:line="36" pos:column="10">fgets<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><name pos:line="36" pos:column="16">buffer<pos:position pos:line="36" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="24">sizeof<argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">buffer<pos:position pos:line="36" pos:column="37"/></name></expr></argument>)<pos:position pos:line="36" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="36" pos:column="40">fh<pos:position pos:line="36" pos:column="42"/></name></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call> <operator pos:line="36" pos:column="44">!=<pos:position pos:line="36" pos:column="46"/></operator> <name pos:line="36" pos:column="47">NULL<pos:position pos:line="36" pos:column="51"/></name></expr>)<pos:position pos:line="36" pos:column="52"/></condition> <block pos:line="36" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">char<pos:position pos:line="37" pos:column="9"/></name> <modifier pos:line="37" pos:column="10">*<pos:position pos:line="37" pos:column="11"/></modifier></type><name><name pos:line="37" pos:column="11">fields<pos:position pos:line="37" pos:column="17"/></name><index pos:line="37" pos:column="17">[<expr><literal type="number" pos:line="37" pos:column="18">3<pos:position pos:line="37" pos:column="19"/></literal></expr>]<pos:position pos:line="37" pos:column="20"/></index></name></decl>;<pos:position pos:line="37" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">value_t<pos:position pos:line="38" pos:column="12"/></name></type> <name pos:line="38" pos:column="13">v<pos:position pos:line="38" pos:column="14"/></name></decl>;<pos:position pos:line="38" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">int<pos:position pos:line="39" pos:column="8"/></name></type> <name pos:line="39" pos:column="9">status<pos:position pos:line="39" pos:column="15"/></name></decl>;<pos:position pos:line="39" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="41" pos:column="5">status<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <call><name pos:line="41" pos:column="14">strsplit<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">buffer<pos:position pos:line="41" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="31">fields<pos:position pos:line="41" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="39">STATIC_ARRAY_SIZE<pos:position pos:line="41" pos:column="56"/></name><argument_list pos:line="41" pos:column="56">(<argument><expr><name pos:line="41" pos:column="57">fields<pos:position pos:line="41" pos:column="63"/></name></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="66"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">status<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">!=<pos:position pos:line="42" pos:column="18"/></operator> <literal type="number" pos:line="42" pos:column="19">3<pos:position pos:line="42" pos:column="20"/></literal></expr>)<pos:position pos:line="42" pos:column="21"/></condition><then pos:line="42" pos:column="21">
      <block type="pseudo"><continue pos:line="43" pos:column="7">continue;<pos:position pos:line="43" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="45" pos:column="5">status<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <call><name pos:line="45" pos:column="14">parse_value<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name><name pos:line="45" pos:column="26">fields<pos:position pos:line="45" pos:column="32"/></name><index pos:line="45" pos:column="32">[<expr><literal type="number" pos:line="45" pos:column="33">2<pos:position pos:line="45" pos:column="34"/></literal></expr>]<pos:position pos:line="45" pos:column="35"/></index></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="37">&amp;<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="38">v<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="41">DS_TYPE_DERIVE<pos:position pos:line="45" pos:column="55"/></name></expr></argument>)<pos:position pos:line="45" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="57"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">status<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">!=<pos:position pos:line="46" pos:column="18"/></operator> <literal type="number" pos:line="46" pos:column="19">0<pos:position pos:line="46" pos:column="20"/></literal></expr>)<pos:position pos:line="46" pos:column="21"/></condition><then pos:line="46" pos:column="21">
      <block type="pseudo"><continue pos:line="47" pos:column="7">continue;<pos:position pos:line="47" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">put_zfs_value<pos:position pos:line="49" pos:column="18"/></name><argument_list pos:line="49" pos:column="18">(<argument><expr><name pos:line="49" pos:column="19">ksp<pos:position pos:line="49" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="24">fields<pos:position pos:line="49" pos:column="30"/></name><index pos:line="49" pos:column="30">[<expr><literal type="number" pos:line="49" pos:column="31">0<pos:position pos:line="49" pos:column="32"/></literal></expr>]<pos:position pos:line="49" pos:column="33"/></index></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="35">v<pos:position pos:line="49" pos:column="36"/></name></expr></argument>)<pos:position pos:line="49" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="50" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="52" pos:column="3">fclose<pos:position pos:line="52" pos:column="9"/></name><argument_list pos:line="52" pos:column="9">(<argument><expr><name pos:line="52" pos:column="10">fh<pos:position pos:line="52" pos:column="12"/></name></expr></argument>)<pos:position pos:line="52" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="14"/></expr_stmt>

<cpp:elif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">elif<pos:position pos:line="54" pos:column="6"/></cpp:directive> <expr><call><name pos:line="54" pos:column="7">defined<pos:position pos:line="54" pos:column="14"/></name><argument_list pos:line="54" pos:column="14">(<argument><expr><name pos:line="54" pos:column="15">KERNEL_SOLARIS<pos:position pos:line="54" pos:column="29"/></name></expr></argument>)<pos:position pos:line="54" pos:column="30"/></argument_list></call></expr></cpp:elif>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">get_kstat<pos:position pos:line="55" pos:column="12"/></name><argument_list pos:line="55" pos:column="12">(<argument><expr><operator pos:line="55" pos:column="13">&amp;<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="14">ksp<pos:position pos:line="55" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="19">"zfs"<pos:position pos:line="55" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="26">0<pos:position pos:line="55" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="29">"arcstats"<pos:position pos:line="55" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="41"/></expr_stmt>
  <if pos:line="56" pos:column="3">if <condition pos:line="56" pos:column="6">(<expr><name pos:line="56" pos:column="7">ksp<pos:position pos:line="56" pos:column="10"/></name> <operator pos:line="56" pos:column="11">==<pos:position pos:line="56" pos:column="13"/></operator> <name pos:line="56" pos:column="14">NULL<pos:position pos:line="56" pos:column="18"/></name></expr>)<pos:position pos:line="56" pos:column="19"/></condition><then pos:line="56" pos:column="19"> <block pos:line="56" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">ERROR<pos:position pos:line="57" pos:column="10"/></name><argument_list pos:line="57" pos:column="10">(<argument><expr><literal type="string" pos:line="57" pos:column="11">"zfs_arc plugin: Cannot find zfs:0:arcstats kstat."<pos:position pos:line="57" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="64"/></expr_stmt>
    <return pos:line="58" pos:column="5">return <expr><operator pos:line="58" pos:column="12">-<pos:position pos:line="58" pos:column="13"/></operator><literal type="number" pos:line="58" pos:column="13">1<pos:position pos:line="58" pos:column="14"/></literal></expr>;<pos:position pos:line="58" pos:column="15"/></return>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="62" pos:column="3">/* Sizes */</comment>
  <expr_stmt><expr><call><name pos:line="63" pos:column="3">za_read_gauge<pos:position pos:line="63" pos:column="16"/></name><argument_list pos:line="63" pos:column="16">(<argument><expr><name pos:line="63" pos:column="17">ksp<pos:position pos:line="63" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="22">"anon_size"<pos:position pos:line="63" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="35">"cache_size"<pos:position pos:line="63" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="49">"anon_size"<pos:position pos:line="63" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">za_read_gauge<pos:position pos:line="64" pos:column="16"/></name><argument_list pos:line="64" pos:column="16">(<argument><expr><name pos:line="64" pos:column="17">ksp<pos:position pos:line="64" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="22">"c"<pos:position pos:line="64" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="27">"cache_size"<pos:position pos:line="64" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="41">"c"<pos:position pos:line="64" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">za_read_gauge<pos:position pos:line="65" pos:column="16"/></name><argument_list pos:line="65" pos:column="16">(<argument><expr><name pos:line="65" pos:column="17">ksp<pos:position pos:line="65" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="22">"c_max"<pos:position pos:line="65" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="31">"cache_size"<pos:position pos:line="65" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="45">"c_max"<pos:position pos:line="65" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="66" pos:column="3">za_read_gauge<pos:position pos:line="66" pos:column="16"/></name><argument_list pos:line="66" pos:column="16">(<argument><expr><name pos:line="66" pos:column="17">ksp<pos:position pos:line="66" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="22">"c_min"<pos:position pos:line="66" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="31">"cache_size"<pos:position pos:line="66" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="45">"c_min"<pos:position pos:line="66" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="67" pos:column="3">za_read_gauge<pos:position pos:line="67" pos:column="16"/></name><argument_list pos:line="67" pos:column="16">(<argument><expr><name pos:line="67" pos:column="17">ksp<pos:position pos:line="67" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="22">"hdr_size"<pos:position pos:line="67" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="34">"cache_size"<pos:position pos:line="67" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="48">"hdr_size"<pos:position pos:line="67" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="68" pos:column="3">za_read_gauge<pos:position pos:line="68" pos:column="16"/></name><argument_list pos:line="68" pos:column="16">(<argument><expr><name pos:line="68" pos:column="17">ksp<pos:position pos:line="68" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="22">"metadata_size"<pos:position pos:line="68" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="39">"cache_size"<pos:position pos:line="68" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="53">"metadata_size"<pos:position pos:line="68" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="69" pos:column="3">za_read_gauge<pos:position pos:line="69" pos:column="16"/></name><argument_list pos:line="69" pos:column="16">(<argument><expr><name pos:line="69" pos:column="17">ksp<pos:position pos:line="69" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="22">"mfu_ghost_size"<pos:position pos:line="69" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="40">"cache_size"<pos:position pos:line="69" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="54">"mfu_ghost_size"<pos:position pos:line="69" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="70" pos:column="3">za_read_gauge<pos:position pos:line="70" pos:column="16"/></name><argument_list pos:line="70" pos:column="16">(<argument><expr><name pos:line="70" pos:column="17">ksp<pos:position pos:line="70" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="22">"mfu_size"<pos:position pos:line="70" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="34">"cache_size"<pos:position pos:line="70" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="48">"mfu_size"<pos:position pos:line="70" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="71" pos:column="3">za_read_gauge<pos:position pos:line="71" pos:column="16"/></name><argument_list pos:line="71" pos:column="16">(<argument><expr><name pos:line="71" pos:column="17">ksp<pos:position pos:line="71" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="22">"mru_ghost_size"<pos:position pos:line="71" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="40">"cache_size"<pos:position pos:line="71" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="54">"mru_ghost_size"<pos:position pos:line="71" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">za_read_gauge<pos:position pos:line="72" pos:column="16"/></name><argument_list pos:line="72" pos:column="16">(<argument><expr><name pos:line="72" pos:column="17">ksp<pos:position pos:line="72" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="22">"mru_size"<pos:position pos:line="72" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="34">"cache_size"<pos:position pos:line="72" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="48">"mru_size"<pos:position pos:line="72" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="73" pos:column="3">za_read_gauge<pos:position pos:line="73" pos:column="16"/></name><argument_list pos:line="73" pos:column="16">(<argument><expr><name pos:line="73" pos:column="17">ksp<pos:position pos:line="73" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="22">"other_size"<pos:position pos:line="73" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="36">"cache_size"<pos:position pos:line="73" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="50">"other_size"<pos:position pos:line="73" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="74" pos:column="3">za_read_gauge<pos:position pos:line="74" pos:column="16"/></name><argument_list pos:line="74" pos:column="16">(<argument><expr><name pos:line="74" pos:column="17">ksp<pos:position pos:line="74" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="22">"p"<pos:position pos:line="74" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="27">"cache_size"<pos:position pos:line="74" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="41">"p"<pos:position pos:line="74" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="75" pos:column="3">za_read_gauge<pos:position pos:line="75" pos:column="16"/></name><argument_list pos:line="75" pos:column="16">(<argument><expr><name pos:line="75" pos:column="17">ksp<pos:position pos:line="75" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="22">"size"<pos:position pos:line="75" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="30">"cache_size"<pos:position pos:line="75" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="44">"arc"<pos:position pos:line="75" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="51"/></expr_stmt>

  <comment type="block" pos:line="77" pos:column="3">/* The "l2_size" value has disappeared from Solaris some time in
   * early 2013, and has only reappeared recently in Solaris 11.2.
   * Stop trying if we ever fail to read it, so we don't spam the log.
   */</comment>
  <decl_stmt><decl><specifier pos:line="81" pos:column="3">static<pos:position pos:line="81" pos:column="9"/></specifier> <type><name pos:line="81" pos:column="10">int<pos:position pos:line="81" pos:column="13"/></name></type> <name pos:line="81" pos:column="14">l2_size_avail<pos:position pos:line="81" pos:column="27"/></name> <init pos:line="81" pos:column="28">= <expr><literal type="number" pos:line="81" pos:column="30">1<pos:position pos:line="81" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="81" pos:column="32"/></decl_stmt>
  <if pos:line="82" pos:column="3">if <condition pos:line="82" pos:column="6">(<expr><name pos:line="82" pos:column="7">l2_size_avail<pos:position pos:line="82" pos:column="20"/></name> <operator pos:line="82" pos:column="21">&amp;&amp;<pos:position pos:line="82" pos:column="31"/></operator> <call><name pos:line="82" pos:column="24">za_read_gauge<pos:position pos:line="82" pos:column="37"/></name><argument_list pos:line="82" pos:column="37">(<argument><expr><name pos:line="82" pos:column="38">ksp<pos:position pos:line="82" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="43">"l2_size"<pos:position pos:line="82" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="54">"cache_size"<pos:position pos:line="82" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="68">"L2"<pos:position pos:line="82" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="73"/></argument_list></call> <operator pos:line="82" pos:column="74">!=<pos:position pos:line="82" pos:column="76"/></operator> <literal type="number" pos:line="82" pos:column="77">0<pos:position pos:line="82" pos:column="78"/></literal></expr>)<pos:position pos:line="82" pos:column="79"/></condition><then pos:line="82" pos:column="79">
    <block type="pseudo"><expr_stmt><expr><name pos:line="83" pos:column="5">l2_size_avail<pos:position pos:line="83" pos:column="18"/></name> <operator pos:line="83" pos:column="19">=<pos:position pos:line="83" pos:column="20"/></operator> <literal type="number" pos:line="83" pos:column="21">0<pos:position pos:line="83" pos:column="22"/></literal></expr>;<pos:position pos:line="83" pos:column="23"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="85" pos:column="3">/* Operations */</comment>
  <expr_stmt><expr><call><name pos:line="86" pos:column="3">za_read_derive<pos:position pos:line="86" pos:column="17"/></name><argument_list pos:line="86" pos:column="17">(<argument><expr><name pos:line="86" pos:column="18">ksp<pos:position pos:line="86" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="23">"deleted"<pos:position pos:line="86" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="34">"cache_operation"<pos:position pos:line="86" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="53">"deleted"<pos:position pos:line="86" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="64"/></expr_stmt>
<cpp:if pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">if<pos:position pos:line="87" pos:column="4"/></cpp:directive> <expr><call><name pos:line="87" pos:column="5">defined<pos:position pos:line="87" pos:column="12"/></name><argument_list pos:line="87" pos:column="12">(<argument><expr><name pos:line="87" pos:column="13">KERNEL_FREEBSD<pos:position pos:line="87" pos:column="27"/></name></expr></argument>)<pos:position pos:line="87" pos:column="28"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="88" pos:column="3">za_read_derive<pos:position pos:line="88" pos:column="17"/></name><argument_list pos:line="88" pos:column="17">(<argument><expr><name pos:line="88" pos:column="18">ksp<pos:position pos:line="88" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="23">"allocated"<pos:position pos:line="88" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="36">"cache_operation"<pos:position pos:line="88" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="55">"allocated"<pos:position pos:line="88" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">endif<pos:position pos:line="89" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="91" pos:column="3">/* Issue indicators */</comment>
  <expr_stmt><expr><call><name pos:line="92" pos:column="3">za_read_derive<pos:position pos:line="92" pos:column="17"/></name><argument_list pos:line="92" pos:column="17">(<argument><expr><name pos:line="92" pos:column="18">ksp<pos:position pos:line="92" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="23">"mutex_miss"<pos:position pos:line="92" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="37">"mutex_operations"<pos:position pos:line="92" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="57">"miss"<pos:position pos:line="92" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="93" pos:column="3">za_read_derive<pos:position pos:line="93" pos:column="17"/></name><argument_list pos:line="93" pos:column="17">(<argument><expr><name pos:line="93" pos:column="18">ksp<pos:position pos:line="93" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="23">"hash_collisions"<pos:position pos:line="93" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="42">"hash_collisions"<pos:position pos:line="93" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="61">""<pos:position pos:line="93" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="94" pos:column="3">za_read_derive<pos:position pos:line="94" pos:column="17"/></name><argument_list pos:line="94" pos:column="17">(<argument><expr><name pos:line="94" pos:column="18">ksp<pos:position pos:line="94" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="23">"memory_throttle_count"<pos:position pos:line="94" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="48">"memory_throttle_count"<pos:position pos:line="94" pos:column="71"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="73">""<pos:position pos:line="94" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="77"/></expr_stmt>

  <comment type="block" pos:line="96" pos:column="3">/* Evictions */</comment>
  <expr_stmt><expr><call><name pos:line="97" pos:column="3">za_read_derive<pos:position pos:line="97" pos:column="17"/></name><argument_list pos:line="97" pos:column="17">(<argument><expr><name pos:line="97" pos:column="18">ksp<pos:position pos:line="97" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="23">"evict_l2_cached"<pos:position pos:line="97" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="42">"cache_eviction"<pos:position pos:line="97" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="60">"cached"<pos:position pos:line="97" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="98" pos:column="3">za_read_derive<pos:position pos:line="98" pos:column="17"/></name><argument_list pos:line="98" pos:column="17">(<argument><expr><name pos:line="98" pos:column="18">ksp<pos:position pos:line="98" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="23">"evict_l2_eligible"<pos:position pos:line="98" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="44">"cache_eviction"<pos:position pos:line="98" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="62">"eligible"<pos:position pos:line="98" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="74"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="99" pos:column="3">za_read_derive<pos:position pos:line="99" pos:column="17"/></name><argument_list pos:line="99" pos:column="17">(<argument><expr><name pos:line="99" pos:column="18">ksp<pos:position pos:line="99" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="23">"evict_l2_ineligible"<pos:position pos:line="99" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="46">"cache_eviction"<pos:position pos:line="99" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="64">"ineligible"<pos:position pos:line="99" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="78"/></expr_stmt>

  <comment type="block" pos:line="101" pos:column="3">/* Hits / misses */</comment>
  <expr_stmt><expr><call><name pos:line="102" pos:column="3">za_read_derive<pos:position pos:line="102" pos:column="17"/></name><argument_list pos:line="102" pos:column="17">(<argument><expr><name pos:line="102" pos:column="18">ksp<pos:position pos:line="102" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="23">"demand_data_hits"<pos:position pos:line="102" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="43">"cache_result"<pos:position pos:line="102" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="59">"demand_data-hit"<pos:position pos:line="102" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="78"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="103" pos:column="3">za_read_derive<pos:position pos:line="103" pos:column="17"/></name><argument_list pos:line="103" pos:column="17">(<argument><expr><name pos:line="103" pos:column="18">ksp<pos:position pos:line="103" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="23">"demand_metadata_hits"<pos:position pos:line="103" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="47">"cache_result"<pos:position pos:line="103" pos:column="61"/></literal></expr></argument>,
                 <argument><expr><literal type="string" pos:line="104" pos:column="18">"demand_metadata-hit"<pos:position pos:line="104" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="105" pos:column="3">za_read_derive<pos:position pos:line="105" pos:column="17"/></name><argument_list pos:line="105" pos:column="17">(<argument><expr><name pos:line="105" pos:column="18">ksp<pos:position pos:line="105" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="23">"prefetch_data_hits"<pos:position pos:line="105" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="45">"cache_result"<pos:position pos:line="105" pos:column="59"/></literal></expr></argument>,
                 <argument><expr><literal type="string" pos:line="106" pos:column="18">"prefetch_data-hit"<pos:position pos:line="106" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="107" pos:column="3">za_read_derive<pos:position pos:line="107" pos:column="17"/></name><argument_list pos:line="107" pos:column="17">(<argument><expr><name pos:line="107" pos:column="18">ksp<pos:position pos:line="107" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="23">"prefetch_metadata_hits"<pos:position pos:line="107" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="49">"cache_result"<pos:position pos:line="107" pos:column="63"/></literal></expr></argument>,
                 <argument><expr><literal type="string" pos:line="108" pos:column="18">"prefetch_metadata-hit"<pos:position pos:line="108" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="109" pos:column="3">za_read_derive<pos:position pos:line="109" pos:column="17"/></name><argument_list pos:line="109" pos:column="17">(<argument><expr><name pos:line="109" pos:column="18">ksp<pos:position pos:line="109" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="23">"demand_data_misses"<pos:position pos:line="109" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="45">"cache_result"<pos:position pos:line="109" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="61">"demand_data-miss"<pos:position pos:line="109" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="81"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="110" pos:column="3">za_read_derive<pos:position pos:line="110" pos:column="17"/></name><argument_list pos:line="110" pos:column="17">(<argument><expr><name pos:line="110" pos:column="18">ksp<pos:position pos:line="110" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="23">"demand_metadata_misses"<pos:position pos:line="110" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="49">"cache_result"<pos:position pos:line="110" pos:column="63"/></literal></expr></argument>,
                 <argument><expr><literal type="string" pos:line="111" pos:column="18">"demand_metadata-miss"<pos:position pos:line="111" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="112" pos:column="3">za_read_derive<pos:position pos:line="112" pos:column="17"/></name><argument_list pos:line="112" pos:column="17">(<argument><expr><name pos:line="112" pos:column="18">ksp<pos:position pos:line="112" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="23">"prefetch_data_misses"<pos:position pos:line="112" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="47">"cache_result"<pos:position pos:line="112" pos:column="61"/></literal></expr></argument>,
                 <argument><expr><literal type="string" pos:line="113" pos:column="18">"prefetch_data-miss"<pos:position pos:line="113" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="114" pos:column="3">za_read_derive<pos:position pos:line="114" pos:column="17"/></name><argument_list pos:line="114" pos:column="17">(<argument><expr><name pos:line="114" pos:column="18">ksp<pos:position pos:line="114" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="23">"prefetch_metadata_misses"<pos:position pos:line="114" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="51">"cache_result"<pos:position pos:line="114" pos:column="65"/></literal></expr></argument>,
                 <argument><expr><literal type="string" pos:line="115" pos:column="18">"prefetch_metadata-miss"<pos:position pos:line="115" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="116" pos:column="3">za_read_derive<pos:position pos:line="116" pos:column="17"/></name><argument_list pos:line="116" pos:column="17">(<argument><expr><name pos:line="116" pos:column="18">ksp<pos:position pos:line="116" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="23">"mfu_hits"<pos:position pos:line="116" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="35">"cache_result"<pos:position pos:line="116" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="51">"mfu-hit"<pos:position pos:line="116" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="117" pos:column="3">za_read_derive<pos:position pos:line="117" pos:column="17"/></name><argument_list pos:line="117" pos:column="17">(<argument><expr><name pos:line="117" pos:column="18">ksp<pos:position pos:line="117" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="23">"mfu_ghost_hits"<pos:position pos:line="117" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="41">"cache_result"<pos:position pos:line="117" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="57">"mfu_ghost-hit"<pos:position pos:line="117" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="74"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="118" pos:column="3">za_read_derive<pos:position pos:line="118" pos:column="17"/></name><argument_list pos:line="118" pos:column="17">(<argument><expr><name pos:line="118" pos:column="18">ksp<pos:position pos:line="118" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="23">"mru_hits"<pos:position pos:line="118" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="35">"cache_result"<pos:position pos:line="118" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="51">"mru-hit"<pos:position pos:line="118" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="119" pos:column="3">za_read_derive<pos:position pos:line="119" pos:column="17"/></name><argument_list pos:line="119" pos:column="17">(<argument><expr><name pos:line="119" pos:column="18">ksp<pos:position pos:line="119" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="23">"mru_ghost_hits"<pos:position pos:line="119" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="41">"cache_result"<pos:position pos:line="119" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="57">"mru_ghost-hit"<pos:position pos:line="119" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="74"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="121" pos:column="3">cdtime_t<pos:position pos:line="121" pos:column="11"/></name></type> <name pos:line="121" pos:column="12">now<pos:position pos:line="121" pos:column="15"/></name> <init pos:line="121" pos:column="16">= <expr><call><name pos:line="121" pos:column="18">cdtime<pos:position pos:line="121" pos:column="24"/></name><argument_list pos:line="121" pos:column="24">()<pos:position pos:line="121" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="121" pos:column="27"/></decl_stmt>

  <comment type="block" pos:line="123" pos:column="3">/* Ratios */</comment>
  <if pos:line="124" pos:column="3">if <condition pos:line="124" pos:column="6">(<expr><operator pos:line="124" pos:column="7">(<pos:position pos:line="124" pos:column="8"/></operator><call><name pos:line="124" pos:column="8">value_to_rate<pos:position pos:line="124" pos:column="21"/></name><argument_list pos:line="124" pos:column="21">(<argument><expr><operator pos:line="124" pos:column="22">&amp;<pos:position pos:line="124" pos:column="27"/></operator><name pos:line="124" pos:column="23">arc_hits<pos:position pos:line="124" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="33">(<pos:position pos:line="124" pos:column="34"/></operator><name pos:line="124" pos:column="34">value_t<pos:position pos:line="124" pos:column="41"/></name><operator pos:line="124" pos:column="41">)<pos:position pos:line="124" pos:column="42"/></operator></expr></argument></argument_list></call></expr></condition><then><block pos:line="124" pos:column="42">{<expr_stmt><expr><operator pos:line="124" pos:column="43">.<pos:position pos:line="124" pos:column="44"/></operator><name pos:line="124" pos:column="44">derive<pos:position pos:line="124" pos:column="50"/></name> <operator pos:line="124" pos:column="51">=<pos:position pos:line="124" pos:column="52"/></operator> <macro><name pos:line="124" pos:column="53">get_zfs_value<pos:position pos:line="124" pos:column="66"/></name><argument_list pos:line="124" pos:column="66">(<argument pos:line="124" pos:column="67">ksp<pos:position pos:line="124" pos:column="70"/></argument>, <argument><literal type="string" pos:line="124" pos:column="72">"hits"<pos:position pos:line="124" pos:column="78"/></literal></argument>)<pos:position pos:line="124" pos:column="79"/></argument_list></macro></expr></expr_stmt>}<pos:position pos:line="124" pos:column="80"/></block></then></if><operator pos:line="124" pos:column="80">,<pos:position pos:line="124" pos:column="81"/></operator>
                     <expr_stmt><expr><name pos:line="125" pos:column="22">DS_TYPE_DERIVE<pos:position pos:line="125" pos:column="36"/></name></expr><operator pos:line="125" pos:column="36">,<pos:position pos:line="125" pos:column="37"/></operator> <expr><name pos:line="125" pos:column="38">now<pos:position pos:line="125" pos:column="41"/></name></expr><operator pos:line="125" pos:column="41">,<pos:position pos:line="125" pos:column="42"/></operator> <expr><operator pos:line="125" pos:column="43">&amp;<pos:position pos:line="125" pos:column="48"/></operator><name pos:line="125" pos:column="44">arc_hits_state<pos:position pos:line="125" pos:column="58"/></name></expr></expr_stmt>)<pos:position pos:line="125" pos:column="59"/></block> == 0<pos:position pos:line="125" pos:column="64"/></function></unit>

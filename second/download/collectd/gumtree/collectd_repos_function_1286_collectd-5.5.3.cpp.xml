<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1286_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dns_child_callback<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">rfc1035_header_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">dns<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">dns<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">-&gt;<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="18">qr<pos:position pos:line="3" pos:column="20"/></name></name> <operator pos:line="3" pos:column="21">==<pos:position pos:line="3" pos:column="23"/></operator> <literal type="number" pos:line="3" pos:column="24">0<pos:position pos:line="3" pos:column="25"/></literal></expr>)<pos:position pos:line="3" pos:column="26"/></condition><then pos:line="3" pos:column="26">
	<block pos:line="4" pos:column="9">{
		<comment type="block" pos:line="5" pos:column="17">/* This is a query */</comment>
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">int<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">skip<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><literal type="number" pos:line="6" pos:column="28">0<pos:position pos:line="6" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">select_numeric_qtype<pos:position pos:line="7" pos:column="42"/></name></expr>)<pos:position pos:line="7" pos:column="43"/></condition><then pos:line="7" pos:column="43">
		<block pos:line="8" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="9" pos:column="25">const<pos:position pos:line="9" pos:column="30"/></specifier> <name pos:line="9" pos:column="31">char<pos:position pos:line="9" pos:column="35"/></name> <modifier pos:line="9" pos:column="36">*<pos:position pos:line="9" pos:column="37"/></modifier></type><name pos:line="9" pos:column="37">str<pos:position pos:line="9" pos:column="40"/></name> <init pos:line="9" pos:column="41">= <expr><call><name pos:line="9" pos:column="43">qtype_str<pos:position pos:line="9" pos:column="52"/></name><argument_list pos:line="9" pos:column="52">(<argument><expr><name><name pos:line="9" pos:column="53">dns<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">-&gt;<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="58">qtype<pos:position pos:line="9" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="65"/></decl_stmt>
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><operator pos:line="10" pos:column="29">(<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">str<pos:position pos:line="10" pos:column="33"/></name> <operator pos:line="10" pos:column="34">==<pos:position pos:line="10" pos:column="36"/></operator> <name pos:line="10" pos:column="37">NULL<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">)<pos:position pos:line="10" pos:column="42"/></operator> <operator pos:line="10" pos:column="43">||<pos:position pos:line="10" pos:column="45"/></operator> <operator pos:line="10" pos:column="46">(<pos:position pos:line="10" pos:column="47"/></operator><name><name pos:line="10" pos:column="47">str<pos:position pos:line="10" pos:column="50"/></name><index pos:line="10" pos:column="50">[<expr><literal type="number" pos:line="10" pos:column="51">0<pos:position pos:line="10" pos:column="52"/></literal></expr>]<pos:position pos:line="10" pos:column="53"/></index></name> <operator pos:line="10" pos:column="54">==<pos:position pos:line="10" pos:column="56"/></operator> <literal type="char" pos:line="10" pos:column="57">'#'<pos:position pos:line="10" pos:column="60"/></literal><operator pos:line="10" pos:column="60">)<pos:position pos:line="10" pos:column="61"/></operator></expr>)<pos:position pos:line="10" pos:column="62"/></condition><then pos:line="10" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="33">skip<pos:position pos:line="11" pos:column="37"/></name> <operator pos:line="11" pos:column="38">=<pos:position pos:line="11" pos:column="39"/></operator> <literal type="number" pos:line="11" pos:column="40">1<pos:position pos:line="11" pos:column="41"/></literal></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt></block></then></if>
		}<pos:position pos:line="12" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="14" pos:column="17">pthread_mutex_lock<pos:position pos:line="14" pos:column="35"/></name> <argument_list pos:line="14" pos:column="36">(<argument><expr><operator pos:line="14" pos:column="37">&amp;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="38">traffic_mutex<pos:position pos:line="14" pos:column="51"/></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">tr_queries<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">+=<pos:position pos:line="15" pos:column="30"/></operator> <name><name pos:line="15" pos:column="31">dns<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">length<pos:position pos:line="15" pos:column="42"/></name></name></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">pthread_mutex_unlock<pos:position pos:line="16" pos:column="37"/></name> <argument_list pos:line="16" pos:column="38">(<argument><expr><operator pos:line="16" pos:column="39">&amp;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="40">traffic_mutex<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>

		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">skip<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">==<pos:position pos:line="18" pos:column="28"/></operator> <literal type="number" pos:line="18" pos:column="29">0<pos:position pos:line="18" pos:column="30"/></literal></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31">
		<block pos:line="19" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">pthread_mutex_lock<pos:position pos:line="20" pos:column="43"/></name> <argument_list pos:line="20" pos:column="44">(<argument><expr><operator pos:line="20" pos:column="45">&amp;<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="46">qtype_mutex<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">counter_list_add<pos:position pos:line="21" pos:column="41"/></name> <argument_list pos:line="21" pos:column="42">(<argument><expr><operator pos:line="21" pos:column="43">&amp;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="44">qtype_list<pos:position pos:line="21" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="56">dns<pos:position pos:line="21" pos:column="59"/></name><operator pos:line="21" pos:column="59">-&gt;<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="61">qtype<pos:position pos:line="21" pos:column="66"/></name></name></expr></argument>,  <argument><expr><literal type="number" pos:line="21" pos:column="69">1<pos:position pos:line="21" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">pthread_mutex_unlock<pos:position pos:line="22" pos:column="45"/></name> <argument_list pos:line="22" pos:column="46">(<argument><expr><operator pos:line="22" pos:column="47">&amp;<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="48">qtype_mutex<pos:position pos:line="22" pos:column="59"/></name></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
	}<pos:position pos:line="24" pos:column="10"/></block></then>
	<else pos:line="25" pos:column="9">else
	<block pos:line="26" pos:column="9">{
		<comment type="block" pos:line="27" pos:column="17">/* This is a reply */</comment>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">pthread_mutex_lock<pos:position pos:line="28" pos:column="35"/></name> <argument_list pos:line="28" pos:column="36">(<argument><expr><operator pos:line="28" pos:column="37">&amp;<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="38">traffic_mutex<pos:position pos:line="28" pos:column="51"/></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">tr_responses<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">+=<pos:position pos:line="29" pos:column="32"/></operator> <name><name pos:line="29" pos:column="33">dns<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">-&gt;<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="38">length<pos:position pos:line="29" pos:column="44"/></name></name></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">pthread_mutex_unlock<pos:position pos:line="30" pos:column="37"/></name> <argument_list pos:line="30" pos:column="38">(<argument><expr><operator pos:line="30" pos:column="39">&amp;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="40">traffic_mutex<pos:position pos:line="30" pos:column="53"/></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="32" pos:column="17">pthread_mutex_lock<pos:position pos:line="32" pos:column="35"/></name> <argument_list pos:line="32" pos:column="36">(<argument><expr><operator pos:line="32" pos:column="37">&amp;<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="38">rcode_mutex<pos:position pos:line="32" pos:column="49"/></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">counter_list_add<pos:position pos:line="33" pos:column="33"/></name> <argument_list pos:line="33" pos:column="34">(<argument><expr><operator pos:line="33" pos:column="35">&amp;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="36">rcode_list<pos:position pos:line="33" pos:column="46"/></name></expr></argument>,  <argument><expr><name><name pos:line="33" pos:column="49">dns<pos:position pos:line="33" pos:column="52"/></name><operator pos:line="33" pos:column="52">-&gt;<pos:position pos:line="33" pos:column="57"/></operator><name pos:line="33" pos:column="54">rcode<pos:position pos:line="33" pos:column="59"/></name></name></expr></argument>,  <argument><expr><literal type="number" pos:line="33" pos:column="62">1<pos:position pos:line="33" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">pthread_mutex_unlock<pos:position pos:line="34" pos:column="37"/></name> <argument_list pos:line="34" pos:column="38">(<argument><expr><operator pos:line="34" pos:column="39">&amp;<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="40">rcode_mutex<pos:position pos:line="34" pos:column="51"/></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="37" pos:column="9">/* FIXME: Are queries, replies or both interesting? */</comment>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">pthread_mutex_lock<pos:position pos:line="38" pos:column="27"/></name> <argument_list pos:line="38" pos:column="28">(<argument><expr><operator pos:line="38" pos:column="29">&amp;<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="30">opcode_mutex<pos:position pos:line="38" pos:column="42"/></name></expr></argument>)<pos:position pos:line="38" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">counter_list_add<pos:position pos:line="39" pos:column="25"/></name> <argument_list pos:line="39" pos:column="26">(<argument><expr><operator pos:line="39" pos:column="27">&amp;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="28">opcode_list<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="41">dns<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">-&gt;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="46">opcode<pos:position pos:line="39" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="54">1<pos:position pos:line="39" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">pthread_mutex_unlock<pos:position pos:line="40" pos:column="29"/></name> <argument_list pos:line="40" pos:column="30">(<argument><expr><operator pos:line="40" pos:column="31">&amp;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="32">opcode_mutex<pos:position pos:line="40" pos:column="44"/></name></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

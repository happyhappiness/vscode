<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1051_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">swap_read<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list> <comment type="block" pos:line="1" pos:column="29">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">fh<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buffer<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">1024<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name><name pos:line="6" pos:column="15">fields<pos:position pos:line="6" pos:column="21"/></name><index pos:line="6" pos:column="21">[<expr><literal type="number" pos:line="6" pos:column="22">8<pos:position pos:line="6" pos:column="23"/></literal></expr>]<pos:position pos:line="6" pos:column="24"/></index></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">numfields<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">_Bool<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">old_kernel<pos:position pos:line="9" pos:column="25"/></name><init pos:line="9" pos:column="25">=<expr><literal type="number" pos:line="9" pos:column="26">0<pos:position pos:line="9" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="11" pos:column="9">derive_t<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">swap_used<pos:position pos:line="11" pos:column="27"/></name>   <init pos:line="11" pos:column="30">= <expr><literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">derive_t<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">swap_cached<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><literal type="number" pos:line="12" pos:column="32">0<pos:position pos:line="12" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">derive_t<pos:position pos:line="13" pos:column="17"/></name></type> <name pos:line="13" pos:column="18">swap_free<pos:position pos:line="13" pos:column="27"/></name>   <init pos:line="13" pos:column="30">= <expr><literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">derive_t<pos:position pos:line="14" pos:column="17"/></name></type> <name pos:line="14" pos:column="18">swap_total<pos:position pos:line="14" pos:column="28"/></name>  <init pos:line="14" pos:column="30">= <expr><literal type="number" pos:line="14" pos:column="32">0<pos:position pos:line="14" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">derive_t<pos:position pos:line="15" pos:column="17"/></name></type> <name pos:line="15" pos:column="18">swap_in<pos:position pos:line="15" pos:column="25"/></name>     <init pos:line="15" pos:column="30">= <expr><literal type="number" pos:line="15" pos:column="32">0<pos:position pos:line="15" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">derive_t<pos:position pos:line="16" pos:column="17"/></name></type> <name pos:line="16" pos:column="18">swap_out<pos:position pos:line="16" pos:column="26"/></name>    <init pos:line="16" pos:column="30">= <expr><literal type="number" pos:line="16" pos:column="32">0<pos:position pos:line="16" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="34"/></decl_stmt>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">fh<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <call><name pos:line="18" pos:column="19">fopen<pos:position pos:line="18" pos:column="24"/></name> <argument_list pos:line="18" pos:column="25">(<argument><expr><literal type="string" pos:line="18" pos:column="26">"/proc/meminfo"<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="43">"r"<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call><operator pos:line="18" pos:column="47">)<pos:position pos:line="18" pos:column="48"/></operator> <operator pos:line="18" pos:column="49">==<pos:position pos:line="18" pos:column="51"/></operator> <name pos:line="18" pos:column="52">NULL<pos:position pos:line="18" pos:column="56"/></name></expr>)<pos:position pos:line="18" pos:column="57"/></condition><then pos:line="18" pos:column="57">
	<block pos:line="19" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">char<pos:position pos:line="20" pos:column="21"/></name></type> <name><name pos:line="20" pos:column="22">errbuf<pos:position pos:line="20" pos:column="28"/></name><index pos:line="20" pos:column="28">[<expr><literal type="number" pos:line="20" pos:column="29">1024<pos:position pos:line="20" pos:column="33"/></literal></expr>]<pos:position pos:line="20" pos:column="34"/></index></name></decl>;<pos:position pos:line="20" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">WARNING<pos:position pos:line="21" pos:column="24"/></name> <argument_list pos:line="21" pos:column="25">(<argument><expr><literal type="string" pos:line="21" pos:column="26">"memory: fopen: %s"<pos:position pos:line="21" pos:column="45"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="22" pos:column="33">sstrerror<pos:position pos:line="22" pos:column="42"/></name> <argument_list pos:line="22" pos:column="43">(<argument><expr><name pos:line="22" pos:column="44">errno<pos:position pos:line="22" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="51">errbuf<pos:position pos:line="22" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="59">sizeof <argument_list pos:line="22" pos:column="66">(<argument><expr><name pos:line="22" pos:column="67">errbuf<pos:position pos:line="22" pos:column="73"/></name></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="77"/></expr_stmt>
		<return pos:line="23" pos:column="17">return <expr><operator pos:line="23" pos:column="24">(<pos:position pos:line="23" pos:column="25"/></operator><operator pos:line="23" pos:column="25">-<pos:position pos:line="23" pos:column="26"/></operator><literal type="number" pos:line="23" pos:column="26">1<pos:position pos:line="23" pos:column="27"/></literal><operator pos:line="23" pos:column="27">)<pos:position pos:line="23" pos:column="28"/></operator></expr>;<pos:position pos:line="23" pos:column="29"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<while pos:line="26" pos:column="9">while <condition pos:line="26" pos:column="15">(<expr><call><name pos:line="26" pos:column="16">fgets<pos:position pos:line="26" pos:column="21"/></name> <argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">buffer<pos:position pos:line="26" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="31">sizeof <argument_list pos:line="26" pos:column="38">(<argument><expr><name pos:line="26" pos:column="39">buffer<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="26" pos:column="48">fh<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call> <operator pos:line="26" pos:column="52">!=<pos:position pos:line="26" pos:column="54"/></operator> <name pos:line="26" pos:column="55">NULL<pos:position pos:line="26" pos:column="59"/></name></expr>)<pos:position pos:line="26" pos:column="60"/></condition>
	<block pos:line="27" pos:column="9">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">numfields<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <call><name pos:line="28" pos:column="29">strsplit<pos:position pos:line="28" pos:column="37"/></name> <argument_list pos:line="28" pos:column="38">(<argument><expr><name pos:line="28" pos:column="39">buffer<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">fields<pos:position pos:line="28" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="55">STATIC_ARRAY_SIZE<pos:position pos:line="28" pos:column="72"/></name> <argument_list pos:line="28" pos:column="73">(<argument><expr><name pos:line="28" pos:column="74">fields<pos:position pos:line="28" pos:column="80"/></name></expr></argument>)<pos:position pos:line="28" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="83"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">numfields<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">&lt;<pos:position pos:line="29" pos:column="35"/></operator> <literal type="number" pos:line="29" pos:column="33">2<pos:position pos:line="29" pos:column="34"/></literal></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35">
			<block type="pseudo"><continue pos:line="30" pos:column="25">continue;<pos:position pos:line="30" pos:column="34"/></continue></block></then></if>

		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">strcasecmp<pos:position pos:line="32" pos:column="31"/></name> <argument_list pos:line="32" pos:column="32">(<argument><expr><name><name pos:line="32" pos:column="33">fields<pos:position pos:line="32" pos:column="39"/></name><index pos:line="32" pos:column="39">[<expr><literal type="number" pos:line="32" pos:column="40">0<pos:position pos:line="32" pos:column="41"/></literal></expr>]<pos:position pos:line="32" pos:column="42"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="44">"SwapTotal:"<pos:position pos:line="32" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call> <operator pos:line="32" pos:column="58">==<pos:position pos:line="32" pos:column="60"/></operator> <literal type="number" pos:line="32" pos:column="61">0<pos:position pos:line="32" pos:column="62"/></literal></expr>)<pos:position pos:line="32" pos:column="63"/></condition><then pos:line="32" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="25">strtoderive<pos:position pos:line="33" pos:column="36"/></name> <argument_list pos:line="33" pos:column="37">(<argument><expr><name><name pos:line="33" pos:column="38">fields<pos:position pos:line="33" pos:column="44"/></name><index pos:line="33" pos:column="44">[<expr><literal type="number" pos:line="33" pos:column="45">1<pos:position pos:line="33" pos:column="46"/></literal></expr>]<pos:position pos:line="33" pos:column="47"/></index></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="49">&amp;<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="50">swap_total<pos:position pos:line="33" pos:column="60"/></name></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt></block></then>
		<elseif pos:line="34" pos:column="17">else <if pos:line="34" pos:column="22">if <condition pos:line="34" pos:column="25">(<expr><call><name pos:line="34" pos:column="26">strcasecmp<pos:position pos:line="34" pos:column="36"/></name> <argument_list pos:line="34" pos:column="37">(<argument><expr><name><name pos:line="34" pos:column="38">fields<pos:position pos:line="34" pos:column="44"/></name><index pos:line="34" pos:column="44">[<expr><literal type="number" pos:line="34" pos:column="45">0<pos:position pos:line="34" pos:column="46"/></literal></expr>]<pos:position pos:line="34" pos:column="47"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="49">"SwapFree:"<pos:position pos:line="34" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call> <operator pos:line="34" pos:column="62">==<pos:position pos:line="34" pos:column="64"/></operator> <literal type="number" pos:line="34" pos:column="65">0<pos:position pos:line="34" pos:column="66"/></literal></expr>)<pos:position pos:line="34" pos:column="67"/></condition><then pos:line="34" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="25">strtoderive<pos:position pos:line="35" pos:column="36"/></name> <argument_list pos:line="35" pos:column="37">(<argument><expr><name><name pos:line="35" pos:column="38">fields<pos:position pos:line="35" pos:column="44"/></name><index pos:line="35" pos:column="44">[<expr><literal type="number" pos:line="35" pos:column="45">1<pos:position pos:line="35" pos:column="46"/></literal></expr>]<pos:position pos:line="35" pos:column="47"/></index></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="49">&amp;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="50">swap_free<pos:position pos:line="35" pos:column="59"/></name></expr></argument>)<pos:position pos:line="35" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="61"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="36" pos:column="17">else <if pos:line="36" pos:column="22">if <condition pos:line="36" pos:column="25">(<expr><call><name pos:line="36" pos:column="26">strcasecmp<pos:position pos:line="36" pos:column="36"/></name> <argument_list pos:line="36" pos:column="37">(<argument><expr><name><name pos:line="36" pos:column="38">fields<pos:position pos:line="36" pos:column="44"/></name><index pos:line="36" pos:column="44">[<expr><literal type="number" pos:line="36" pos:column="45">0<pos:position pos:line="36" pos:column="46"/></literal></expr>]<pos:position pos:line="36" pos:column="47"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="49">"SwapCached:"<pos:position pos:line="36" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call> <operator pos:line="36" pos:column="64">==<pos:position pos:line="36" pos:column="66"/></operator> <literal type="number" pos:line="36" pos:column="67">0<pos:position pos:line="36" pos:column="68"/></literal></expr>)<pos:position pos:line="36" pos:column="69"/></condition><then pos:line="36" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">strtoderive<pos:position pos:line="37" pos:column="36"/></name> <argument_list pos:line="37" pos:column="37">(<argument><expr><name><name pos:line="37" pos:column="38">fields<pos:position pos:line="37" pos:column="44"/></name><index pos:line="37" pos:column="44">[<expr><literal type="number" pos:line="37" pos:column="45">1<pos:position pos:line="37" pos:column="46"/></literal></expr>]<pos:position pos:line="37" pos:column="47"/></index></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="49">&amp;<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="50">swap_cached<pos:position pos:line="37" pos:column="61"/></name></expr></argument>)<pos:position pos:line="37" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="63"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="38" pos:column="10"/></block></while>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name pos:line="40" pos:column="13">fclose<pos:position pos:line="40" pos:column="19"/></name> <argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">fh<pos:position pos:line="40" pos:column="23"/></name></expr></argument>)<pos:position pos:line="40" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25">
	<block pos:line="41" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="42" pos:column="17">char<pos:position pos:line="42" pos:column="21"/></name></type> <name><name pos:line="42" pos:column="22">errbuf<pos:position pos:line="42" pos:column="28"/></name><index pos:line="42" pos:column="28">[<expr><literal type="number" pos:line="42" pos:column="29">1024<pos:position pos:line="42" pos:column="33"/></literal></expr>]<pos:position pos:line="42" pos:column="34"/></index></name></decl>;<pos:position pos:line="42" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">WARNING<pos:position pos:line="43" pos:column="24"/></name> <argument_list pos:line="43" pos:column="25">(<argument><expr><literal type="string" pos:line="43" pos:column="26">"memory: fclose: %s"<pos:position pos:line="43" pos:column="46"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="44" pos:column="33">sstrerror<pos:position pos:line="44" pos:column="42"/></name> <argument_list pos:line="44" pos:column="43">(<argument><expr><name pos:line="44" pos:column="44">errno<pos:position pos:line="44" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="51">errbuf<pos:position pos:line="44" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="59">sizeof <argument_list pos:line="44" pos:column="66">(<argument><expr><name pos:line="44" pos:column="67">errbuf<pos:position pos:line="44" pos:column="73"/></name></expr></argument>)<pos:position pos:line="44" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">(<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">swap_total<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">==<pos:position pos:line="47" pos:column="27"/></operator> <literal type="number" pos:line="47" pos:column="28">0LL<pos:position pos:line="47" pos:column="31"/></literal><operator pos:line="47" pos:column="31">)<pos:position pos:line="47" pos:column="32"/></operator> <operator pos:line="47" pos:column="33">||<pos:position pos:line="47" pos:column="35"/></operator> <operator pos:line="47" pos:column="36">(<pos:position pos:line="47" pos:column="37"/></operator><operator pos:line="47" pos:column="37">(<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="38">swap_free<pos:position pos:line="47" pos:column="47"/></name> <operator pos:line="47" pos:column="48">+<pos:position pos:line="47" pos:column="49"/></operator> <name pos:line="47" pos:column="50">swap_cached<pos:position pos:line="47" pos:column="61"/></name><operator pos:line="47" pos:column="61">)<pos:position pos:line="47" pos:column="62"/></operator> <operator pos:line="47" pos:column="63">&gt;<pos:position pos:line="47" pos:column="67"/></operator> <name pos:line="47" pos:column="65">swap_total<pos:position pos:line="47" pos:column="75"/></name><operator pos:line="47" pos:column="75">)<pos:position pos:line="47" pos:column="76"/></operator></expr>)<pos:position pos:line="47" pos:column="77"/></condition><then pos:line="47" pos:column="77">
		<block type="pseudo"><return pos:line="48" pos:column="17">return <expr><operator pos:line="48" pos:column="24">(<pos:position pos:line="48" pos:column="25"/></operator><operator pos:line="48" pos:column="25">-<pos:position pos:line="48" pos:column="26"/></operator><literal type="number" pos:line="48" pos:column="26">1<pos:position pos:line="48" pos:column="27"/></literal><operator pos:line="48" pos:column="27">)<pos:position pos:line="48" pos:column="28"/></operator></expr>;<pos:position pos:line="48" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="50" pos:column="9">swap_used<pos:position pos:line="50" pos:column="18"/></name> <operator pos:line="50" pos:column="19">=<pos:position pos:line="50" pos:column="20"/></operator> <name pos:line="50" pos:column="21">swap_total<pos:position pos:line="50" pos:column="31"/></name> <operator pos:line="50" pos:column="32">-<pos:position pos:line="50" pos:column="33"/></operator> <operator pos:line="50" pos:column="34">(<pos:position pos:line="50" pos:column="35"/></operator><name pos:line="50" pos:column="35">swap_free<pos:position pos:line="50" pos:column="44"/></name> <operator pos:line="50" pos:column="45">+<pos:position pos:line="50" pos:column="46"/></operator> <name pos:line="50" pos:column="47">swap_cached<pos:position pos:line="50" pos:column="58"/></name><operator pos:line="50" pos:column="58">)<pos:position pos:line="50" pos:column="59"/></operator></expr>;<pos:position pos:line="50" pos:column="60"/></expr_stmt>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><operator pos:line="52" pos:column="13">(<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="14">fh<pos:position pos:line="52" pos:column="16"/></name> <operator pos:line="52" pos:column="17">=<pos:position pos:line="52" pos:column="18"/></operator> <call><name pos:line="52" pos:column="19">fopen<pos:position pos:line="52" pos:column="24"/></name> <argument_list pos:line="52" pos:column="25">(<argument><expr><literal type="string" pos:line="52" pos:column="26">"/proc/vmstat"<pos:position pos:line="52" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="42">"r"<pos:position pos:line="52" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></call><operator pos:line="52" pos:column="46">)<pos:position pos:line="52" pos:column="47"/></operator> <operator pos:line="52" pos:column="48">==<pos:position pos:line="52" pos:column="50"/></operator> <name pos:line="52" pos:column="51">NULL<pos:position pos:line="52" pos:column="55"/></name></expr>)<pos:position pos:line="52" pos:column="56"/></condition><then pos:line="52" pos:column="56">
	<block pos:line="53" pos:column="9">{
		<comment type="line" pos:line="54" pos:column="17">// /proc/vmstat does not exist in kernels &lt;2.6</comment>
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><operator pos:line="55" pos:column="21">(<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="22">fh<pos:position pos:line="55" pos:column="24"/></name> <operator pos:line="55" pos:column="25">=<pos:position pos:line="55" pos:column="26"/></operator> <call><name pos:line="55" pos:column="27">fopen<pos:position pos:line="55" pos:column="32"/></name> <argument_list pos:line="55" pos:column="33">(<argument><expr><literal type="string" pos:line="55" pos:column="34">"/proc/stat"<pos:position pos:line="55" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="48">"r"<pos:position pos:line="55" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call><operator pos:line="55" pos:column="52">)<pos:position pos:line="55" pos:column="53"/></operator> <operator pos:line="55" pos:column="54">==<pos:position pos:line="55" pos:column="56"/></operator> <name pos:line="55" pos:column="57">NULL<pos:position pos:line="55" pos:column="61"/></name></expr> )<pos:position pos:line="55" pos:column="63"/></condition><then pos:line="55" pos:column="63">
		<block pos:line="56" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="57" pos:column="25">char<pos:position pos:line="57" pos:column="29"/></name></type> <name><name pos:line="57" pos:column="30">errbuf<pos:position pos:line="57" pos:column="36"/></name><index pos:line="57" pos:column="36">[<expr><literal type="number" pos:line="57" pos:column="37">1024<pos:position pos:line="57" pos:column="41"/></literal></expr>]<pos:position pos:line="57" pos:column="42"/></index></name></decl>;<pos:position pos:line="57" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">WARNING<pos:position pos:line="58" pos:column="32"/></name> <argument_list pos:line="58" pos:column="33">(<argument><expr><literal type="string" pos:line="58" pos:column="34">"swap: fopen: %s"<pos:position pos:line="58" pos:column="51"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="59" pos:column="41">sstrerror<pos:position pos:line="59" pos:column="50"/></name> <argument_list pos:line="59" pos:column="51">(<argument><expr><name pos:line="59" pos:column="52">errno<pos:position pos:line="59" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="59">errbuf<pos:position pos:line="59" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="67">sizeof <argument_list pos:line="59" pos:column="74">(<argument><expr><name pos:line="59" pos:column="75">errbuf<pos:position pos:line="59" pos:column="81"/></name></expr></argument>)<pos:position pos:line="59" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="59" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="85"/></expr_stmt>
			<return pos:line="60" pos:column="25">return <expr><operator pos:line="60" pos:column="32">(<pos:position pos:line="60" pos:column="33"/></operator><operator pos:line="60" pos:column="33">-<pos:position pos:line="60" pos:column="34"/></operator><literal type="number" pos:line="60" pos:column="34">1<pos:position pos:line="60" pos:column="35"/></literal><operator pos:line="60" pos:column="35">)<pos:position pos:line="60" pos:column="36"/></operator></expr>;<pos:position pos:line="60" pos:column="37"/></return>
		}<pos:position pos:line="61" pos:column="18"/></block></then>
		<else pos:line="62" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="25">old_kernel<pos:position pos:line="63" pos:column="35"/></name> <operator pos:line="63" pos:column="36">=<pos:position pos:line="63" pos:column="37"/></operator> <literal type="number" pos:line="63" pos:column="38">1<pos:position pos:line="63" pos:column="39"/></literal></expr>;<pos:position pos:line="63" pos:column="40"/></expr_stmt></block></else></if>
	}<pos:position pos:line="64" pos:column="10"/></block></then></if>

	<while pos:line="66" pos:column="9">while <condition pos:line="66" pos:column="15">(<expr><call><name pos:line="66" pos:column="16">fgets<pos:position pos:line="66" pos:column="21"/></name> <argument_list pos:line="66" pos:column="22">(<argument><expr><name pos:line="66" pos:column="23">buffer<pos:position pos:line="66" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="31">sizeof <argument_list pos:line="66" pos:column="38">(<argument><expr><name pos:line="66" pos:column="39">buffer<pos:position pos:line="66" pos:column="45"/></name></expr></argument>)<pos:position pos:line="66" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="66" pos:column="48">fh<pos:position pos:line="66" pos:column="50"/></name></expr></argument>)<pos:position pos:line="66" pos:column="51"/></argument_list></call> <operator pos:line="66" pos:column="52">!=<pos:position pos:line="66" pos:column="54"/></operator> <name pos:line="66" pos:column="55">NULL<pos:position pos:line="66" pos:column="59"/></name></expr>)<pos:position pos:line="66" pos:column="60"/></condition>
	<block pos:line="67" pos:column="9">{
		<expr_stmt><expr><name pos:line="68" pos:column="17">numfields<pos:position pos:line="68" pos:column="26"/></name> <operator pos:line="68" pos:column="27">=<pos:position pos:line="68" pos:column="28"/></operator> <call><name pos:line="68" pos:column="29">strsplit<pos:position pos:line="68" pos:column="37"/></name> <argument_list pos:line="68" pos:column="38">(<argument><expr><name pos:line="68" pos:column="39">buffer<pos:position pos:line="68" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="47">fields<pos:position pos:line="68" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="55">STATIC_ARRAY_SIZE<pos:position pos:line="68" pos:column="72"/></name> <argument_list pos:line="68" pos:column="73">(<argument><expr><name pos:line="68" pos:column="74">fields<pos:position pos:line="68" pos:column="80"/></name></expr></argument>)<pos:position pos:line="68" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="83"/></expr_stmt>

		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><operator pos:line="70" pos:column="21">!<pos:position pos:line="70" pos:column="22"/></operator><name pos:line="70" pos:column="22">old_kernel<pos:position pos:line="70" pos:column="32"/></name></expr>)<pos:position pos:line="70" pos:column="33"/></condition><then pos:line="70" pos:column="33">
		<block pos:line="71" pos:column="17">{
			<if pos:line="72" pos:column="25">if <condition pos:line="72" pos:column="28">(<expr><name pos:line="72" pos:column="29">numfields<pos:position pos:line="72" pos:column="38"/></name> <operator pos:line="72" pos:column="39">!=<pos:position pos:line="72" pos:column="41"/></operator> <literal type="number" pos:line="72" pos:column="42">2<pos:position pos:line="72" pos:column="43"/></literal></expr>)<pos:position pos:line="72" pos:column="44"/></condition><then pos:line="72" pos:column="44">
				<block type="pseudo"><continue pos:line="73" pos:column="33">continue;<pos:position pos:line="73" pos:column="42"/></continue></block></then></if>

			<if pos:line="75" pos:column="25">if <condition pos:line="75" pos:column="28">(<expr><call><name pos:line="75" pos:column="29">strcasecmp<pos:position pos:line="75" pos:column="39"/></name> <argument_list pos:line="75" pos:column="40">(<argument><expr><literal type="string" pos:line="75" pos:column="41">"pswpin"<pos:position pos:line="75" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="51">fields<pos:position pos:line="75" pos:column="57"/></name><index pos:line="75" pos:column="57">[<expr><literal type="number" pos:line="75" pos:column="58">0<pos:position pos:line="75" pos:column="59"/></literal></expr>]<pos:position pos:line="75" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="75" pos:column="61"/></argument_list></call> <operator pos:line="75" pos:column="62">==<pos:position pos:line="75" pos:column="64"/></operator> <literal type="number" pos:line="75" pos:column="65">0<pos:position pos:line="75" pos:column="66"/></literal></expr>)<pos:position pos:line="75" pos:column="67"/></condition><then pos:line="75" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="33">strtoderive<pos:position pos:line="76" pos:column="44"/></name> <argument_list pos:line="76" pos:column="45">(<argument><expr><name><name pos:line="76" pos:column="46">fields<pos:position pos:line="76" pos:column="52"/></name><index pos:line="76" pos:column="52">[<expr><literal type="number" pos:line="76" pos:column="53">1<pos:position pos:line="76" pos:column="54"/></literal></expr>]<pos:position pos:line="76" pos:column="55"/></index></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="57">&amp;<pos:position pos:line="76" pos:column="62"/></operator><name pos:line="76" pos:column="58">swap_in<pos:position pos:line="76" pos:column="65"/></name></expr></argument>)<pos:position pos:line="76" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="67"/></expr_stmt></block></then>
			<elseif pos:line="77" pos:column="25">else <if pos:line="77" pos:column="30">if <condition pos:line="77" pos:column="33">(<expr><call><name pos:line="77" pos:column="34">strcasecmp<pos:position pos:line="77" pos:column="44"/></name> <argument_list pos:line="77" pos:column="45">(<argument><expr><literal type="string" pos:line="77" pos:column="46">"pswpout"<pos:position pos:line="77" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="57">fields<pos:position pos:line="77" pos:column="63"/></name><index pos:line="77" pos:column="63">[<expr><literal type="number" pos:line="77" pos:column="64">0<pos:position pos:line="77" pos:column="65"/></literal></expr>]<pos:position pos:line="77" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="77" pos:column="67"/></argument_list></call> <operator pos:line="77" pos:column="68">==<pos:position pos:line="77" pos:column="70"/></operator> <literal type="number" pos:line="77" pos:column="71">0<pos:position pos:line="77" pos:column="72"/></literal></expr>)<pos:position pos:line="77" pos:column="73"/></condition><then pos:line="77" pos:column="73">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="33">strtoderive<pos:position pos:line="78" pos:column="44"/></name> <argument_list pos:line="78" pos:column="45">(<argument><expr><name><name pos:line="78" pos:column="46">fields<pos:position pos:line="78" pos:column="52"/></name><index pos:line="78" pos:column="52">[<expr><literal type="number" pos:line="78" pos:column="53">1<pos:position pos:line="78" pos:column="54"/></literal></expr>]<pos:position pos:line="78" pos:column="55"/></index></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="57">&amp;<pos:position pos:line="78" pos:column="62"/></operator><name pos:line="78" pos:column="58">swap_out<pos:position pos:line="78" pos:column="66"/></name></expr></argument>)<pos:position pos:line="78" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="68"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="79" pos:column="18"/></block></then>
		<else pos:line="80" pos:column="17">else <comment type="block" pos:line="80" pos:column="22">/* if (old_kernel) */</comment>
		<block pos:line="81" pos:column="17">{
			<if pos:line="82" pos:column="25">if <condition pos:line="82" pos:column="28">(<expr><name pos:line="82" pos:column="29">numfields<pos:position pos:line="82" pos:column="38"/></name> <operator pos:line="82" pos:column="39">!=<pos:position pos:line="82" pos:column="41"/></operator> <literal type="number" pos:line="82" pos:column="42">3<pos:position pos:line="82" pos:column="43"/></literal></expr>)<pos:position pos:line="82" pos:column="44"/></condition><then pos:line="82" pos:column="44">
				<block type="pseudo"><continue pos:line="83" pos:column="33">continue;<pos:position pos:line="83" pos:column="42"/></continue></block></then></if>

			<if pos:line="85" pos:column="25">if <condition pos:line="85" pos:column="28">(<expr><call><name pos:line="85" pos:column="29">strcasecmp<pos:position pos:line="85" pos:column="39"/></name> <argument_list pos:line="85" pos:column="40">(<argument><expr><literal type="string" pos:line="85" pos:column="41">"page"<pos:position pos:line="85" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="49">fields<pos:position pos:line="85" pos:column="55"/></name><index pos:line="85" pos:column="55">[<expr><literal type="number" pos:line="85" pos:column="56">0<pos:position pos:line="85" pos:column="57"/></literal></expr>]<pos:position pos:line="85" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="85" pos:column="59"/></argument_list></call> <operator pos:line="85" pos:column="60">==<pos:position pos:line="85" pos:column="62"/></operator> <literal type="number" pos:line="85" pos:column="63">0<pos:position pos:line="85" pos:column="64"/></literal></expr>)<pos:position pos:line="85" pos:column="65"/></condition><then pos:line="85" pos:column="65">
			<block pos:line="86" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="87" pos:column="33">strtoderive<pos:position pos:line="87" pos:column="44"/></name> <argument_list pos:line="87" pos:column="45">(<argument><expr><name><name pos:line="87" pos:column="46">fields<pos:position pos:line="87" pos:column="52"/></name><index pos:line="87" pos:column="52">[<expr><literal type="number" pos:line="87" pos:column="53">1<pos:position pos:line="87" pos:column="54"/></literal></expr>]<pos:position pos:line="87" pos:column="55"/></index></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="57">&amp;<pos:position pos:line="87" pos:column="62"/></operator><name pos:line="87" pos:column="58">swap_in<pos:position pos:line="87" pos:column="65"/></name></expr></argument>)<pos:position pos:line="87" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="67"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="88" pos:column="33">strtoderive<pos:position pos:line="88" pos:column="44"/></name> <argument_list pos:line="88" pos:column="45">(<argument><expr><name><name pos:line="88" pos:column="46">fields<pos:position pos:line="88" pos:column="52"/></name><index pos:line="88" pos:column="52">[<expr><literal type="number" pos:line="88" pos:column="53">2<pos:position pos:line="88" pos:column="54"/></literal></expr>]<pos:position pos:line="88" pos:column="55"/></index></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="57">&amp;<pos:position pos:line="88" pos:column="62"/></operator><name pos:line="88" pos:column="58">swap_out<pos:position pos:line="88" pos:column="66"/></name></expr></argument>)<pos:position pos:line="88" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="68"/></expr_stmt>
			}<pos:position pos:line="89" pos:column="26"/></block></then></if>
		}<pos:position pos:line="90" pos:column="18"/></block></else></if>
	}<pos:position pos:line="91" pos:column="10"/></block></while> <comment type="block" pos:line="91" pos:column="11">/* while (fgets) */</comment>

	<if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><call><name pos:line="93" pos:column="13">fclose<pos:position pos:line="93" pos:column="19"/></name> <argument_list pos:line="93" pos:column="20">(<argument><expr><name pos:line="93" pos:column="21">fh<pos:position pos:line="93" pos:column="23"/></name></expr></argument>)<pos:position pos:line="93" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="25"/></condition><then pos:line="93" pos:column="25">
	<block pos:line="94" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="95" pos:column="17">char<pos:position pos:line="95" pos:column="21"/></name></type> <name><name pos:line="95" pos:column="22">errbuf<pos:position pos:line="95" pos:column="28"/></name><index pos:line="95" pos:column="28">[<expr><literal type="number" pos:line="95" pos:column="29">1024<pos:position pos:line="95" pos:column="33"/></literal></expr>]<pos:position pos:line="95" pos:column="34"/></index></name></decl>;<pos:position pos:line="95" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="96" pos:column="17">WARNING<pos:position pos:line="96" pos:column="24"/></name> <argument_list pos:line="96" pos:column="25">(<argument><expr><literal type="string" pos:line="96" pos:column="26">"swap: fclose: %s"<pos:position pos:line="96" pos:column="44"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="97" pos:column="33">sstrerror<pos:position pos:line="97" pos:column="42"/></name> <argument_list pos:line="97" pos:column="43">(<argument><expr><name pos:line="97" pos:column="44">errno<pos:position pos:line="97" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="51">errbuf<pos:position pos:line="97" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="59">sizeof <argument_list pos:line="97" pos:column="66">(<argument><expr><name pos:line="97" pos:column="67">errbuf<pos:position pos:line="97" pos:column="73"/></name></expr></argument>)<pos:position pos:line="97" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="97" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="98" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="100" pos:column="9">swap_submit<pos:position pos:line="100" pos:column="20"/></name> <argument_list pos:line="100" pos:column="21">(<argument><expr><literal type="string" pos:line="100" pos:column="22">"used"<pos:position pos:line="100" pos:column="28"/></literal></expr></argument>,   <argument><expr><literal type="number" pos:line="100" pos:column="32">1024<pos:position pos:line="100" pos:column="36"/></literal> <operator pos:line="100" pos:column="37">*<pos:position pos:line="100" pos:column="38"/></operator> <name pos:line="100" pos:column="39">swap_used<pos:position pos:line="100" pos:column="48"/></name></expr></argument>,   <argument><expr><name pos:line="100" pos:column="52">DS_TYPE_GAUGE<pos:position pos:line="100" pos:column="65"/></name></expr></argument>)<pos:position pos:line="100" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="101" pos:column="9">swap_submit<pos:position pos:line="101" pos:column="20"/></name> <argument_list pos:line="101" pos:column="21">(<argument><expr><literal type="string" pos:line="101" pos:column="22">"free"<pos:position pos:line="101" pos:column="28"/></literal></expr></argument>,   <argument><expr><literal type="number" pos:line="101" pos:column="32">1024<pos:position pos:line="101" pos:column="36"/></literal> <operator pos:line="101" pos:column="37">*<pos:position pos:line="101" pos:column="38"/></operator> <name pos:line="101" pos:column="39">swap_free<pos:position pos:line="101" pos:column="48"/></name></expr></argument>,   <argument><expr><name pos:line="101" pos:column="52">DS_TYPE_GAUGE<pos:position pos:line="101" pos:column="65"/></name></expr></argument>)<pos:position pos:line="101" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="102" pos:column="9">swap_submit<pos:position pos:line="102" pos:column="20"/></name> <argument_list pos:line="102" pos:column="21">(<argument><expr><literal type="string" pos:line="102" pos:column="22">"cached"<pos:position pos:line="102" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="32">1024<pos:position pos:line="102" pos:column="36"/></literal> <operator pos:line="102" pos:column="37">*<pos:position pos:line="102" pos:column="38"/></operator> <name pos:line="102" pos:column="39">swap_cached<pos:position pos:line="102" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="52">DS_TYPE_GAUGE<pos:position pos:line="102" pos:column="65"/></name></expr></argument>)<pos:position pos:line="102" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="103" pos:column="9">swap_submit<pos:position pos:line="103" pos:column="20"/></name> <argument_list pos:line="103" pos:column="21">(<argument><expr><literal type="string" pos:line="103" pos:column="22">"in"<pos:position pos:line="103" pos:column="26"/></literal></expr></argument>,  <argument><expr><name pos:line="103" pos:column="29">swap_in<pos:position pos:line="103" pos:column="36"/></name></expr></argument>,  <argument><expr><name pos:line="103" pos:column="39">DS_TYPE_DERIVE<pos:position pos:line="103" pos:column="53"/></name></expr></argument>)<pos:position pos:line="103" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="104" pos:column="9">swap_submit<pos:position pos:line="104" pos:column="20"/></name> <argument_list pos:line="104" pos:column="21">(<argument><expr><literal type="string" pos:line="104" pos:column="22">"out"<pos:position pos:line="104" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="29">swap_out<pos:position pos:line="104" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="39">DS_TYPE_DERIVE<pos:position pos:line="104" pos:column="53"/></name></expr></argument>)<pos:position pos:line="104" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="55"/></expr_stmt>

	<return pos:line="106" pos:column="9">return <expr><operator pos:line="106" pos:column="16">(<pos:position pos:line="106" pos:column="17"/></operator><literal type="number" pos:line="106" pos:column="17">0<pos:position pos:line="106" pos:column="18"/></literal><operator pos:line="106" pos:column="18">)<pos:position pos:line="106" pos:column="19"/></operator></expr>;<pos:position pos:line="106" pos:column="20"/></return>
}<pos:position pos:line="107" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1122_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">logfile_config<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">key<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">value<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal> <operator pos:line="3" pos:column="15">==<pos:position pos:line="3" pos:column="17"/></operator> <call><name pos:line="3" pos:column="18">strcasecmp<pos:position pos:line="3" pos:column="28"/></name> <argument_list pos:line="3" pos:column="29">(<argument><expr><name pos:line="3" pos:column="30">key<pos:position pos:line="3" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="35">"LogLevel"<pos:position pos:line="3" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="47"/></condition><then pos:line="3" pos:column="47"> <block pos:line="3" pos:column="48">{
		<expr_stmt><expr><name pos:line="4" pos:column="17">log_level<pos:position pos:line="4" pos:column="26"/></name> <operator pos:line="4" pos:column="27">=<pos:position pos:line="4" pos:column="28"/></operator> <call><name pos:line="4" pos:column="29">parse_log_severity<pos:position pos:line="4" pos:column="47"/></name><argument_list pos:line="4" pos:column="47">(<argument><expr><name pos:line="4" pos:column="48">value<pos:position pos:line="4" pos:column="53"/></name></expr></argument>)<pos:position pos:line="4" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="55"/></expr_stmt>
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><name pos:line="5" pos:column="21">log_level<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">&lt;<pos:position pos:line="5" pos:column="35"/></operator> <literal type="number" pos:line="5" pos:column="33">0<pos:position pos:line="5" pos:column="34"/></literal></expr>)<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35"> <block pos:line="5" pos:column="36">{
			<expr_stmt><expr><name pos:line="6" pos:column="25">log_level<pos:position pos:line="6" pos:column="34"/></name> <operator pos:line="6" pos:column="35">=<pos:position pos:line="6" pos:column="36"/></operator> <name pos:line="6" pos:column="37">LOG_INFO<pos:position pos:line="6" pos:column="45"/></name></expr>;<pos:position pos:line="6" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="7" pos:column="25">ERROR<pos:position pos:line="7" pos:column="30"/></name> <argument_list pos:line="7" pos:column="31">(<argument><expr><literal type="string" pos:line="7" pos:column="32">"logfile: invalid loglevel [%s] defaulting to 'info'"<pos:position pos:line="7" pos:column="85"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="87">value<pos:position pos:line="7" pos:column="92"/></name></expr></argument>)<pos:position pos:line="7" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="94"/></expr_stmt>
			<return pos:line="8" pos:column="25">return <expr><operator pos:line="8" pos:column="32">(<pos:position pos:line="8" pos:column="33"/></operator><literal type="number" pos:line="8" pos:column="33">1<pos:position pos:line="8" pos:column="34"/></literal><operator pos:line="8" pos:column="34">)<pos:position pos:line="8" pos:column="35"/></operator></expr>;<pos:position pos:line="8" pos:column="36"/></return>
		}<pos:position pos:line="9" pos:column="18"/></block></then></if>
	}<pos:position pos:line="10" pos:column="10"/></block></then>
	<elseif pos:line="11" pos:column="9">else <if pos:line="11" pos:column="14">if <condition pos:line="11" pos:column="17">(<expr><literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal> <operator pos:line="11" pos:column="20">==<pos:position pos:line="11" pos:column="22"/></operator> <call><name pos:line="11" pos:column="23">strcasecmp<pos:position pos:line="11" pos:column="33"/></name> <argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">key<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="40">"File"<pos:position pos:line="11" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="48"/></condition><then pos:line="11" pos:column="48"> <block pos:line="11" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">sfree<pos:position pos:line="12" pos:column="22"/></name> <argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">log_file<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="13" pos:column="17">log_file<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <call><name pos:line="13" pos:column="28">strdup<pos:position pos:line="13" pos:column="34"/></name> <argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">value<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="15" pos:column="9">else <if pos:line="15" pos:column="14">if <condition pos:line="15" pos:column="17">(<expr><literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal> <operator pos:line="15" pos:column="20">==<pos:position pos:line="15" pos:column="22"/></operator> <call><name pos:line="15" pos:column="23">strcasecmp<pos:position pos:line="15" pos:column="33"/></name> <argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">key<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="40">"Timestamp"<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="53"/></condition><then pos:line="15" pos:column="53"> <block pos:line="15" pos:column="54">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><call><name pos:line="16" pos:column="21">IS_FALSE<pos:position pos:line="16" pos:column="29"/></name> <argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">value<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="38"/></condition><then pos:line="16" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">print_timestamp<pos:position pos:line="17" pos:column="40"/></name> <operator pos:line="17" pos:column="41">=<pos:position pos:line="17" pos:column="42"/></operator> <literal type="number" pos:line="17" pos:column="43">0<pos:position pos:line="17" pos:column="44"/></literal></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt></block></then>
		<else pos:line="18" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="25">print_timestamp<pos:position pos:line="19" pos:column="40"/></name> <operator pos:line="19" pos:column="41">=<pos:position pos:line="19" pos:column="42"/></operator> <literal type="number" pos:line="19" pos:column="43">1<pos:position pos:line="19" pos:column="44"/></literal></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt></block></else></if>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if></elseif> <elseif pos:line="20" pos:column="11">else <if pos:line="20" pos:column="16">if <condition pos:line="20" pos:column="19">(<expr><literal type="number" pos:line="20" pos:column="20">0<pos:position pos:line="20" pos:column="21"/></literal> <operator pos:line="20" pos:column="22">==<pos:position pos:line="20" pos:column="24"/></operator> <call><name pos:line="20" pos:column="25">strcasecmp<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">key<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="41">"PrintSeverity"<pos:position pos:line="20" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="58"/></condition><then pos:line="20" pos:column="58"> <block pos:line="20" pos:column="59">{
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><call><name pos:line="21" pos:column="21">IS_FALSE<pos:position pos:line="21" pos:column="29"/></name> <argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">value<pos:position pos:line="21" pos:column="36"/></name></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="38"/></condition><then pos:line="21" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="25">print_severity<pos:position pos:line="22" pos:column="39"/></name> <operator pos:line="22" pos:column="40">=<pos:position pos:line="22" pos:column="41"/></operator> <literal type="number" pos:line="22" pos:column="42">0<pos:position pos:line="22" pos:column="43"/></literal></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt></block></then>
		<else pos:line="23" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">print_severity<pos:position pos:line="24" pos:column="39"/></name> <operator pos:line="24" pos:column="40">=<pos:position pos:line="24" pos:column="41"/></operator> <literal type="number" pos:line="24" pos:column="42">1<pos:position pos:line="24" pos:column="43"/></literal></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt></block></else></if>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if></elseif>
	<else pos:line="26" pos:column="9">else <block pos:line="26" pos:column="14">{
		<return pos:line="27" pos:column="17">return <expr><operator pos:line="27" pos:column="24">-<pos:position pos:line="27" pos:column="25"/></operator><literal type="number" pos:line="27" pos:column="25">1<pos:position pos:line="27" pos:column="26"/></literal></expr>;<pos:position pos:line="27" pos:column="27"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></else></if>
	<return pos:line="29" pos:column="9">return <expr><literal type="number" pos:line="29" pos:column="16">0<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

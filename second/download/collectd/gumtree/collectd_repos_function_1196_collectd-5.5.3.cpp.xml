<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1196_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cldap_submit_derive<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">type<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">type_instance<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="79">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">derive_t<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">d<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">cldap_t<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">st<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">value_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">v<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<expr_stmt><expr><name><name pos:line="5" pos:column="9">v<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">.<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">derive<pos:position pos:line="5" pos:column="17"/></name></name> <operator pos:line="5" pos:column="18">=<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">d<pos:position pos:line="5" pos:column="21"/></name></expr>;<pos:position pos:line="5" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">cldap_submit_value<pos:position pos:line="6" pos:column="27"/></name> <argument_list pos:line="6" pos:column="28">(<argument><expr><name pos:line="6" pos:column="29">type<pos:position pos:line="6" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="35">type_instance<pos:position pos:line="6" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="50">v<pos:position pos:line="6" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="53">st<pos:position pos:line="6" pos:column="55"/></name></expr></argument>)<pos:position pos:line="6" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="57"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

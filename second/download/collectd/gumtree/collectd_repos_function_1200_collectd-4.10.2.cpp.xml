<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1200_collectd-4.10.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dispatch_value_plugin<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">plugin<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">oconfig_item_t<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">ci<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type>  <name><name pos:line="3" pos:column="15">buffer<pos:position pos:line="3" pos:column="21"/></name><index pos:line="3" pos:column="21">[<expr><literal type="number" pos:line="3" pos:column="22">4096<pos:position pos:line="3" pos:column="26"/></literal></expr>]<pos:position pos:line="3" pos:column="27"/></index></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">buffer_ptr<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type>   <name pos:line="5" pos:column="15">buffer_free<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">buffer_ptr<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="22">buffer<pos:position pos:line="8" pos:column="28"/></name></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">buffer_free<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <sizeof pos:line="9" pos:column="23">sizeof <argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">buffer<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></sizeof></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name><name pos:line="11" pos:column="25">ci<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">values_num<pos:position pos:line="11" pos:column="39"/></name></name></expr>;<pos:position pos:line="11" pos:column="40"/></condition> <incr><expr><name pos:line="11" pos:column="41">i<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">++<pos:position pos:line="11" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="45"/></control>
	<block pos:line="12" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">int<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">status<pos:position pos:line="13" pos:column="27"/></name> <init pos:line="13" pos:column="28">= <expr><operator pos:line="13" pos:column="30">-<pos:position pos:line="13" pos:column="31"/></operator><literal type="number" pos:line="13" pos:column="31">1<pos:position pos:line="13" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="33"/></decl_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">ci<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="25">values<pos:position pos:line="15" pos:column="31"/></name><index pos:line="15" pos:column="31">[<expr><name pos:line="15" pos:column="32">i<pos:position pos:line="15" pos:column="33"/></name></expr>]<pos:position pos:line="15" pos:column="34"/></index></name><operator pos:line="15" pos:column="34">.<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="35">type<pos:position pos:line="15" pos:column="39"/></name> <operator pos:line="15" pos:column="40">==<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="43">OCONFIG_TYPE_STRING<pos:position pos:line="15" pos:column="62"/></name></expr>)<pos:position pos:line="15" pos:column="63"/></condition><then pos:line="15" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="25">status<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">=<pos:position pos:line="16" pos:column="33"/></operator> <call><name pos:line="16" pos:column="34">ssnprintf<pos:position pos:line="16" pos:column="43"/></name> <argument_list pos:line="16" pos:column="44">(<argument><expr><name pos:line="16" pos:column="45">buffer_ptr<pos:position pos:line="16" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="57">buffer_free<pos:position pos:line="16" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="70">" %s"<pos:position pos:line="16" pos:column="75"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="17" pos:column="41">ci<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">values<pos:position pos:line="17" pos:column="51"/></name><index pos:line="17" pos:column="51">[<expr><name pos:line="17" pos:column="52">i<pos:position pos:line="17" pos:column="53"/></name></expr>]<pos:position pos:line="17" pos:column="54"/></index></name><operator pos:line="17" pos:column="54">.<pos:position pos:line="17" pos:column="55"/></operator><name><name pos:line="17" pos:column="55">value<pos:position pos:line="17" pos:column="60"/></name><operator pos:line="17" pos:column="60">.<pos:position pos:line="17" pos:column="61"/></operator><name pos:line="17" pos:column="61">string<pos:position pos:line="17" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="69"/></expr_stmt></block></then>
		<elseif pos:line="18" pos:column="17">else <if pos:line="18" pos:column="22">if <condition pos:line="18" pos:column="25">(<expr><name><name pos:line="18" pos:column="26">ci<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">-&gt;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">values<pos:position pos:line="18" pos:column="36"/></name><index pos:line="18" pos:column="36">[<expr><name pos:line="18" pos:column="37">i<pos:position pos:line="18" pos:column="38"/></name></expr>]<pos:position pos:line="18" pos:column="39"/></index></name><operator pos:line="18" pos:column="39">.<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="40">type<pos:position pos:line="18" pos:column="44"/></name> <operator pos:line="18" pos:column="45">==<pos:position pos:line="18" pos:column="47"/></operator> <name pos:line="18" pos:column="48">OCONFIG_TYPE_NUMBER<pos:position pos:line="18" pos:column="67"/></name></expr>)<pos:position pos:line="18" pos:column="68"/></condition><then pos:line="18" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="25">status<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">=<pos:position pos:line="19" pos:column="33"/></operator> <call><name pos:line="19" pos:column="34">ssnprintf<pos:position pos:line="19" pos:column="43"/></name> <argument_list pos:line="19" pos:column="44">(<argument><expr><name pos:line="19" pos:column="45">buffer_ptr<pos:position pos:line="19" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="57">buffer_free<pos:position pos:line="19" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="70">" %lf"<pos:position pos:line="19" pos:column="76"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="20" pos:column="41">ci<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">values<pos:position pos:line="20" pos:column="51"/></name><index pos:line="20" pos:column="51">[<expr><name pos:line="20" pos:column="52">i<pos:position pos:line="20" pos:column="53"/></name></expr>]<pos:position pos:line="20" pos:column="54"/></index></name><operator pos:line="20" pos:column="54">.<pos:position pos:line="20" pos:column="55"/></operator><name><name pos:line="20" pos:column="55">value<pos:position pos:line="20" pos:column="60"/></name><operator pos:line="20" pos:column="60">.<pos:position pos:line="20" pos:column="61"/></operator><name pos:line="20" pos:column="61">number<pos:position pos:line="20" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="69"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="21" pos:column="17">else <if pos:line="21" pos:column="22">if <condition pos:line="21" pos:column="25">(<expr><name><name pos:line="21" pos:column="26">ci<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">values<pos:position pos:line="21" pos:column="36"/></name><index pos:line="21" pos:column="36">[<expr><name pos:line="21" pos:column="37">i<pos:position pos:line="21" pos:column="38"/></name></expr>]<pos:position pos:line="21" pos:column="39"/></index></name><operator pos:line="21" pos:column="39">.<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="40">type<pos:position pos:line="21" pos:column="44"/></name> <operator pos:line="21" pos:column="45">==<pos:position pos:line="21" pos:column="47"/></operator> <name pos:line="21" pos:column="48">OCONFIG_TYPE_BOOLEAN<pos:position pos:line="21" pos:column="68"/></name></expr>)<pos:position pos:line="21" pos:column="69"/></condition><then pos:line="21" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="25">status<pos:position pos:line="22" pos:column="31"/></name> <operator pos:line="22" pos:column="32">=<pos:position pos:line="22" pos:column="33"/></operator> <call><name pos:line="22" pos:column="34">ssnprintf<pos:position pos:line="22" pos:column="43"/></name> <argument_list pos:line="22" pos:column="44">(<argument><expr><name pos:line="22" pos:column="45">buffer_ptr<pos:position pos:line="22" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="57">buffer_free<pos:position pos:line="22" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="70">" %s"<pos:position pos:line="22" pos:column="75"/></literal></expr></argument>,
					<argument><expr><ternary><condition><expr><name><name pos:line="23" pos:column="41">ci<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">values<pos:position pos:line="23" pos:column="51"/></name><index pos:line="23" pos:column="51">[<expr><name pos:line="23" pos:column="52">i<pos:position pos:line="23" pos:column="53"/></name></expr>]<pos:position pos:line="23" pos:column="54"/></index></name><operator pos:line="23" pos:column="54">.<pos:position pos:line="23" pos:column="55"/></operator><name><name pos:line="23" pos:column="55">value<pos:position pos:line="23" pos:column="60"/></name><operator pos:line="23" pos:column="60">.<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="61">boolean<pos:position pos:line="23" pos:column="68"/></name></name></expr>
					?<pos:position pos:line="24" pos:column="42"/></condition><then pos:line="24" pos:column="42"> <expr><literal type="string" pos:line="24" pos:column="43">"true"<pos:position pos:line="24" pos:column="49"/></literal></expr> <pos:position pos:line="24" pos:column="50"/></then><else pos:line="24" pos:column="50">: <expr><literal type="string" pos:line="24" pos:column="52">"false"<pos:position pos:line="24" pos:column="59"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt></block></then></if></elseif></if>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">(<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">status<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">&lt;<pos:position pos:line="26" pos:column="33"/></operator> <literal type="number" pos:line="26" pos:column="31">0<pos:position pos:line="26" pos:column="32"/></literal><operator pos:line="26" pos:column="32">)<pos:position pos:line="26" pos:column="33"/></operator> <operator pos:line="26" pos:column="34">||<pos:position pos:line="26" pos:column="36"/></operator> <operator pos:line="26" pos:column="37">(<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">status<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">&gt;=<pos:position pos:line="26" pos:column="50"/></operator> <name pos:line="26" pos:column="48">buffer_free<pos:position pos:line="26" pos:column="59"/></name><operator pos:line="26" pos:column="59">)<pos:position pos:line="26" pos:column="60"/></operator></expr>)<pos:position pos:line="26" pos:column="61"/></condition><then pos:line="26" pos:column="61">
			<block type="pseudo"><return pos:line="27" pos:column="25">return <expr><operator pos:line="27" pos:column="32">(<pos:position pos:line="27" pos:column="33"/></operator><operator pos:line="27" pos:column="33">-<pos:position pos:line="27" pos:column="34"/></operator><literal type="number" pos:line="27" pos:column="34">1<pos:position pos:line="27" pos:column="35"/></literal><operator pos:line="27" pos:column="35">)<pos:position pos:line="27" pos:column="36"/></operator></expr>;<pos:position pos:line="27" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="28" pos:column="17">buffer_free<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">-=<pos:position pos:line="28" pos:column="31"/></operator> <name pos:line="28" pos:column="32">status<pos:position pos:line="28" pos:column="38"/></name></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">buffer_ptr<pos:position pos:line="29" pos:column="27"/></name>  <operator pos:line="29" pos:column="29">+=<pos:position pos:line="29" pos:column="31"/></operator> <name pos:line="29" pos:column="32">status<pos:position pos:line="29" pos:column="38"/></name></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></for>
	<comment type="block" pos:line="31" pos:column="9">/* skip the initial space */</comment>
	<expr_stmt><expr><name pos:line="32" pos:column="9">buffer_ptr<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">buffer<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">+<pos:position pos:line="32" pos:column="30"/></operator> <literal type="number" pos:line="32" pos:column="31">1<pos:position pos:line="32" pos:column="32"/></literal></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>

	<return pos:line="34" pos:column="9">return <expr><operator pos:line="34" pos:column="16">(<pos:position pos:line="34" pos:column="17"/></operator><call><name pos:line="34" pos:column="17">cf_dispatch<pos:position pos:line="34" pos:column="28"/></name> <argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">plugin<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="38">ci<pos:position pos:line="34" pos:column="40"/></name><operator pos:line="34" pos:column="40">-&gt;<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="42">key<pos:position pos:line="34" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="47">buffer_ptr<pos:position pos:line="34" pos:column="57"/></name></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call><operator pos:line="34" pos:column="58">)<pos:position pos:line="34" pos:column="59"/></operator></expr>;<pos:position pos:line="34" pos:column="60"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

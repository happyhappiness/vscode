<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_141_collectd-4.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ping_read<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">pingobj_iter_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">iter<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type>   <name><name pos:line="5" pos:column="16">host<pos:position pos:line="5" pos:column="20"/></name><index pos:line="5" pos:column="20">[<expr><literal type="number" pos:line="5" pos:column="21">512<pos:position pos:line="5" pos:column="24"/></literal></expr>]<pos:position pos:line="5" pos:column="25"/></index></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">double<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">latency<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">buf_len<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type>    <name pos:line="8" pos:column="16">number_of_hosts<pos:position pos:line="8" pos:column="31"/></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">pingobj<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">==<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">NULL<pos:position pos:line="10" pos:column="28"/></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">hosts<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">!=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">NULL<pos:position pos:line="13" pos:column="26"/></name></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">add_hosts<pos:position pos:line="14" pos:column="26"/></name> <argument_list pos:line="14" pos:column="27">()<pos:position pos:line="14" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">ping_send<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">pingobj<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call> <operator pos:line="16" pos:column="33">&lt;<pos:position pos:line="16" pos:column="37"/></operator> <literal type="number" pos:line="16" pos:column="35">0<pos:position pos:line="16" pos:column="36"/></literal></expr>)<pos:position pos:line="16" pos:column="37"/></condition><then pos:line="16" pos:column="37">
	<block pos:line="17" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">ERROR<pos:position pos:line="18" pos:column="22"/></name> <argument_list pos:line="18" pos:column="23">(<argument><expr><literal type="string" pos:line="18" pos:column="24">"ping plugin: `ping_send' failed: %s"<pos:position pos:line="18" pos:column="61"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="19" pos:column="33">ping_get_error<pos:position pos:line="19" pos:column="47"/></name> <argument_list pos:line="19" pos:column="48">(<argument><expr><name pos:line="19" pos:column="49">pingobj<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
		<return pos:line="20" pos:column="17">return <expr><operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><operator pos:line="20" pos:column="25">-<pos:position pos:line="20" pos:column="26"/></operator><literal type="number" pos:line="20" pos:column="26">1<pos:position pos:line="20" pos:column="27"/></literal><operator pos:line="20" pos:column="27">)<pos:position pos:line="20" pos:column="28"/></operator></expr>;<pos:position pos:line="20" pos:column="29"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">number_of_hosts<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <literal type="number" pos:line="23" pos:column="27">0<pos:position pos:line="23" pos:column="28"/></literal></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
	<for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><expr><name pos:line="24" pos:column="14">iter<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <call><name pos:line="24" pos:column="21">ping_iterator_get<pos:position pos:line="24" pos:column="38"/></name> <argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">pingobj<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></init>
			<condition><expr><name pos:line="25" pos:column="25">iter<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">!=<pos:position pos:line="25" pos:column="32"/></operator> <name pos:line="25" pos:column="33">NULL<pos:position pos:line="25" pos:column="37"/></name></expr>;<pos:position pos:line="25" pos:column="38"/></condition>
			<incr><expr><name pos:line="26" pos:column="25">iter<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <call><name pos:line="26" pos:column="32">ping_iterator_next<pos:position pos:line="26" pos:column="50"/></name> <argument_list pos:line="26" pos:column="51">(<argument><expr><name pos:line="26" pos:column="52">iter<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr></incr>)<pos:position pos:line="26" pos:column="58"/></control>
	<block pos:line="27" pos:column="9">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">buf_len<pos:position pos:line="28" pos:column="24"/></name> <operator pos:line="28" pos:column="25">=<pos:position pos:line="28" pos:column="26"/></operator> <sizeof pos:line="28" pos:column="27">sizeof <argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">host<pos:position pos:line="28" pos:column="39"/></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></sizeof></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">ping_iterator_get_info<pos:position pos:line="29" pos:column="43"/></name> <argument_list pos:line="29" pos:column="44">(<argument><expr><name pos:line="29" pos:column="45">iter<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">PING_INFO_HOSTNAME<pos:position pos:line="29" pos:column="69"/></name></expr></argument>,
					<argument><expr><name pos:line="30" pos:column="41">host<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="47">&amp;<pos:position pos:line="30" pos:column="52"/></operator><name pos:line="30" pos:column="48">buf_len<pos:position pos:line="30" pos:column="55"/></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="57"/></condition><then pos:line="30" pos:column="57">
		<block pos:line="31" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">WARNING<pos:position pos:line="32" pos:column="32"/></name> <argument_list pos:line="32" pos:column="33">(<argument><expr><literal type="string" pos:line="32" pos:column="34">"ping plugin: ping_iterator_get_info "<pos:position pos:line="32" pos:column="72"/></literal>
					<literal type="string" pos:line="33" pos:column="41">"(PING_INFO_HOSTNAME) failed."<pos:position pos:line="33" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="73"/></expr_stmt>
			<continue pos:line="34" pos:column="25">continue;<pos:position pos:line="34" pos:column="34"/></continue>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="37" pos:column="17">buf_len<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <sizeof pos:line="37" pos:column="27">sizeof <argument_list pos:line="37" pos:column="34">(<argument><expr><name pos:line="37" pos:column="35">latency<pos:position pos:line="37" pos:column="42"/></name></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></sizeof></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">ping_iterator_get_info<pos:position pos:line="38" pos:column="43"/></name> <argument_list pos:line="38" pos:column="44">(<argument><expr><name pos:line="38" pos:column="45">iter<pos:position pos:line="38" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="51">PING_INFO_LATENCY<pos:position pos:line="38" pos:column="68"/></name></expr></argument>,
					<argument><expr><operator pos:line="39" pos:column="41">&amp;<pos:position pos:line="39" pos:column="46"/></operator><name pos:line="39" pos:column="42">latency<pos:position pos:line="39" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="51">&amp;<pos:position pos:line="39" pos:column="56"/></operator><name pos:line="39" pos:column="52">buf_len<pos:position pos:line="39" pos:column="59"/></name></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="61"/></condition><then pos:line="39" pos:column="61">
		<block pos:line="40" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">WARNING<pos:position pos:line="41" pos:column="32"/></name> <argument_list pos:line="41" pos:column="33">(<argument><expr><literal type="string" pos:line="41" pos:column="34">"ping plugin: ping_iterator_get_info (%s, "<pos:position pos:line="41" pos:column="77"/></literal>
					<literal type="string" pos:line="42" pos:column="41">"PING_INFO_LATENCY) failed."<pos:position pos:line="42" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="71">host<pos:position pos:line="42" pos:column="75"/></name></expr></argument>)<pos:position pos:line="42" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="77"/></expr_stmt>
			<continue pos:line="43" pos:column="25">continue;<pos:position pos:line="43" pos:column="34"/></continue>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="46" pos:column="17">DEBUG<pos:position pos:line="46" pos:column="22"/></name> <argument_list pos:line="46" pos:column="23">(<argument><expr><literal type="string" pos:line="46" pos:column="24">"ping plugin: host = %s, latency = %f"<pos:position pos:line="46" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="64">host<pos:position pos:line="46" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="70">latency<pos:position pos:line="46" pos:column="77"/></name></expr></argument>)<pos:position pos:line="46" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">ping_submit<pos:position pos:line="47" pos:column="28"/></name> <argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">host<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="36">latency<pos:position pos:line="47" pos:column="43"/></name></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="48" pos:column="17">number_of_hosts<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">++<pos:position pos:line="48" pos:column="34"/></operator></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></for>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">(<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">number_of_hosts<pos:position pos:line="51" pos:column="29"/></name> <operator pos:line="51" pos:column="30">==<pos:position pos:line="51" pos:column="32"/></operator> <literal type="number" pos:line="51" pos:column="33">0<pos:position pos:line="51" pos:column="34"/></literal><operator pos:line="51" pos:column="34">)<pos:position pos:line="51" pos:column="35"/></operator> <operator pos:line="51" pos:column="36">&amp;&amp;<pos:position pos:line="51" pos:column="46"/></operator> <operator pos:line="51" pos:column="39">(<pos:position pos:line="51" pos:column="40"/></operator><call><name pos:line="51" pos:column="40">getuid<pos:position pos:line="51" pos:column="46"/></name> <argument_list pos:line="51" pos:column="47">()<pos:position pos:line="51" pos:column="49"/></argument_list></call> <operator pos:line="51" pos:column="50">!=<pos:position pos:line="51" pos:column="52"/></operator> <literal type="number" pos:line="51" pos:column="53">0<pos:position pos:line="51" pos:column="54"/></literal><operator pos:line="51" pos:column="54">)<pos:position pos:line="51" pos:column="55"/></operator></expr>)<pos:position pos:line="51" pos:column="56"/></condition><then pos:line="51" pos:column="56">
	<block pos:line="52" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">ERROR<pos:position pos:line="53" pos:column="22"/></name> <argument_list pos:line="53" pos:column="23">(<argument><expr><literal type="string" pos:line="53" pos:column="24">"ping plugin: All hosts failed. Try starting collectd as root."<pos:position pos:line="53" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="89"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></then></if>

	<return pos:line="56" pos:column="9">return <expr><operator pos:line="56" pos:column="16">(<pos:position pos:line="56" pos:column="17"/></operator><ternary><condition><expr><name pos:line="56" pos:column="17">number_of_hosts<pos:position pos:line="56" pos:column="32"/></name> <operator pos:line="56" pos:column="33">==<pos:position pos:line="56" pos:column="35"/></operator> <literal type="number" pos:line="56" pos:column="36">0<pos:position pos:line="56" pos:column="37"/></literal></expr> ?<pos:position pos:line="56" pos:column="39"/></condition><then pos:line="56" pos:column="39"> <expr><operator pos:line="56" pos:column="40">-<pos:position pos:line="56" pos:column="41"/></operator><literal type="number" pos:line="56" pos:column="41">1<pos:position pos:line="56" pos:column="42"/></literal></expr> <pos:position pos:line="56" pos:column="43"/></then><else pos:line="56" pos:column="43">: <expr><literal type="number" pos:line="56" pos:column="45">0<pos:position pos:line="56" pos:column="46"/></literal></expr></else></ternary><operator pos:line="56" pos:column="46">)<pos:position pos:line="56" pos:column="47"/></operator></expr>;<pos:position pos:line="56" pos:column="48"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

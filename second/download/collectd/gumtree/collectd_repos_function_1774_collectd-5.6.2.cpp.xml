<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1774_collectd-5.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">handle_flush<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">FILE<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">fh<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">buffer<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list> <block pos:line="1" pos:column="42">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">success<pos:position pos:line="2" pos:column="14"/></name> <init pos:line="2" pos:column="15">= <expr><literal type="number" pos:line="2" pos:column="17">0<pos:position pos:line="2" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">error<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><literal type="number" pos:line="3" pos:column="15">0<pos:position pos:line="3" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">double<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">timeout<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><literal type="number" pos:line="5" pos:column="20">0.0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier><modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">plugins<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">plugins_num<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier><modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">identifiers<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><name pos:line="8" pos:column="24">NULL<pos:position pos:line="8" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">identifiers_num<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><literal type="number" pos:line="9" pos:column="28">0<pos:position pos:line="9" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>

<cpp:define pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">define<pos:position pos:line="11" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="11" pos:column="9">PRINT_TO_SOCK<pos:position pos:line="11" pos:column="22"/></name><parameter_list pos:line="11" pos:column="22">(<parameter><type><name pos:line="11" pos:column="23">fh<pos:position pos:line="11" pos:column="25"/></name></type></parameter>, <parameter><type><modifier pos:line="11" pos:column="27">...<pos:position pos:line="11" pos:column="30"/></modifier></type></parameter>)<pos:position pos:line="11" pos:column="31"/></parameter_list></cpp:macro>                                                 \
  <cpp:value pos:line="12" pos:column="3">do {                                                                         \
    if (fprintf(fh, __VA_ARGS__) &lt; 0) {                                        \
      char errbuf[1024];                                                       \
      WARNING("handle_flush: failed to write to socket #%i: %s", fileno(fh),   \
              sstrerror(errno, errbuf, sizeof(errbuf)));                       \
      strarray_free(plugins, plugins_num);                                     \
      strarray_free(identifiers, identifiers_num);                             \
      return -1;                                                               \
    }                                                                          \
    fflush(fh);                                                                \
  } while (0)<pos:position pos:line="22" pos:column="14"/></cpp:value></cpp:define>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">(<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">fh<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">==<pos:position pos:line="24" pos:column="13"/></operator> <name pos:line="24" pos:column="14">NULL<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">)<pos:position pos:line="24" pos:column="19"/></operator> <operator pos:line="24" pos:column="20">||<pos:position pos:line="24" pos:column="22"/></operator> <operator pos:line="24" pos:column="23">(<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">buffer<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">==<pos:position pos:line="24" pos:column="33"/></operator> <name pos:line="24" pos:column="34">NULL<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">)<pos:position pos:line="24" pos:column="39"/></operator></expr>)<pos:position pos:line="24" pos:column="40"/></condition><then pos:line="24" pos:column="40">
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><operator pos:line="25" pos:column="13">-<pos:position pos:line="25" pos:column="14"/></operator><literal type="number" pos:line="25" pos:column="14">1<pos:position pos:line="25" pos:column="15"/></literal><operator pos:line="25" pos:column="15">)<pos:position pos:line="25" pos:column="16"/></operator></expr>;<pos:position pos:line="25" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">DEBUG<pos:position pos:line="27" pos:column="8"/></name><argument_list pos:line="27" pos:column="8">(<argument><expr><literal type="string" pos:line="27" pos:column="9">"utils_cmd_flush: handle_flush (fh = %p, buffer = %s);"<pos:position pos:line="27" pos:column="64"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="66">(<pos:position pos:line="27" pos:column="67"/></operator><name pos:line="27" pos:column="67">void<pos:position pos:line="27" pos:column="71"/></name> <operator pos:line="27" pos:column="72">*<pos:position pos:line="27" pos:column="73"/></operator><operator pos:line="27" pos:column="73">)<pos:position pos:line="27" pos:column="74"/></operator><name pos:line="27" pos:column="74">fh<pos:position pos:line="27" pos:column="76"/></name></expr></argument>,
        <argument><expr><name pos:line="28" pos:column="9">buffer<pos:position pos:line="28" pos:column="15"/></name></expr></argument>)<pos:position pos:line="28" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="17"/></expr_stmt>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><call><name pos:line="30" pos:column="7">strncasecmp<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">(<argument><expr><literal type="string" pos:line="30" pos:column="19">"FLUSH"<pos:position pos:line="30" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="28">buffer<pos:position pos:line="30" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="36">strlen<pos:position pos:line="30" pos:column="42"/></name><argument_list pos:line="30" pos:column="42">(<argument><expr><literal type="string" pos:line="30" pos:column="43">"FLUSH"<pos:position pos:line="30" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call> <operator pos:line="30" pos:column="53">!=<pos:position pos:line="30" pos:column="55"/></operator> <literal type="number" pos:line="30" pos:column="56">0<pos:position pos:line="30" pos:column="57"/></literal></expr>)<pos:position pos:line="30" pos:column="58"/></condition><then pos:line="30" pos:column="58"> <block pos:line="30" pos:column="59">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">PRINT_TO_SOCK<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">(<argument><expr><name pos:line="31" pos:column="19">fh<pos:position pos:line="31" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="23">"-1 Cannot parse command.\n"<pos:position pos:line="31" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><operator pos:line="32" pos:column="13">-<pos:position pos:line="32" pos:column="14"/></operator><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal><operator pos:line="32" pos:column="15">)<pos:position pos:line="32" pos:column="16"/></operator></expr>;<pos:position pos:line="32" pos:column="17"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="34" pos:column="3">buffer<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">+=<pos:position pos:line="34" pos:column="12"/></operator> <call><name pos:line="34" pos:column="13">strlen<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><literal type="string" pos:line="34" pos:column="20">"FLUSH"<pos:position pos:line="34" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>

  <while pos:line="36" pos:column="3">while <condition pos:line="36" pos:column="9">(<expr><operator pos:line="36" pos:column="10">*<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">buffer<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">!=<pos:position pos:line="36" pos:column="20"/></operator> <literal type="number" pos:line="36" pos:column="21">0<pos:position pos:line="36" pos:column="22"/></literal></expr>)<pos:position pos:line="36" pos:column="23"/></condition> <block pos:line="36" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">char<pos:position pos:line="37" pos:column="9"/></name> <modifier pos:line="37" pos:column="10">*<pos:position pos:line="37" pos:column="11"/></modifier></type><name pos:line="37" pos:column="11">opt_key<pos:position pos:line="37" pos:column="18"/></name></decl>;<pos:position pos:line="37" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">char<pos:position pos:line="38" pos:column="9"/></name> <modifier pos:line="38" pos:column="10">*<pos:position pos:line="38" pos:column="11"/></modifier></type><name pos:line="38" pos:column="11">opt_value<pos:position pos:line="38" pos:column="20"/></name></decl>;<pos:position pos:line="38" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">int<pos:position pos:line="39" pos:column="8"/></name></type> <name pos:line="39" pos:column="9">status<pos:position pos:line="39" pos:column="15"/></name></decl>;<pos:position pos:line="39" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="41" pos:column="5">opt_key<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <name pos:line="41" pos:column="15">NULL<pos:position pos:line="41" pos:column="19"/></name></expr>;<pos:position pos:line="41" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">opt_value<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <name pos:line="42" pos:column="17">NULL<pos:position pos:line="42" pos:column="21"/></name></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">status<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <call><name pos:line="43" pos:column="14">parse_option<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><operator pos:line="43" pos:column="27">&amp;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="28">buffer<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="36">&amp;<pos:position pos:line="43" pos:column="41"/></operator><name pos:line="43" pos:column="37">opt_key<pos:position pos:line="43" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="46">&amp;<pos:position pos:line="43" pos:column="51"/></operator><name pos:line="43" pos:column="47">opt_value<pos:position pos:line="43" pos:column="56"/></name></expr></argument>)<pos:position pos:line="43" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="58"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">status<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">!=<pos:position pos:line="44" pos:column="18"/></operator> <literal type="number" pos:line="44" pos:column="19">0<pos:position pos:line="44" pos:column="20"/></literal></expr>)<pos:position pos:line="44" pos:column="21"/></condition><then pos:line="44" pos:column="21"> <block pos:line="44" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">PRINT_TO_SOCK<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><name pos:line="45" pos:column="21">fh<pos:position pos:line="45" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="25">"-1 Parsing options failed.\n"<pos:position pos:line="45" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">strarray_free<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">plugins<pos:position pos:line="46" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="30">plugins_num<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">strarray_free<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">identifiers<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">identifiers_num<pos:position pos:line="47" pos:column="49"/></name></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="51"/></expr_stmt>
      <return pos:line="48" pos:column="7">return <expr><operator pos:line="48" pos:column="14">(<pos:position pos:line="48" pos:column="15"/></operator><operator pos:line="48" pos:column="15">-<pos:position pos:line="48" pos:column="16"/></operator><literal type="number" pos:line="48" pos:column="16">1<pos:position pos:line="48" pos:column="17"/></literal><operator pos:line="48" pos:column="17">)<pos:position pos:line="48" pos:column="18"/></operator></expr>;<pos:position pos:line="48" pos:column="19"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><call><name pos:line="51" pos:column="9">strcasecmp<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><literal type="string" pos:line="51" pos:column="20">"plugin"<pos:position pos:line="51" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="30">opt_key<pos:position pos:line="51" pos:column="37"/></name></expr></argument>)<pos:position pos:line="51" pos:column="38"/></argument_list></call> <operator pos:line="51" pos:column="39">==<pos:position pos:line="51" pos:column="41"/></operator> <literal type="number" pos:line="51" pos:column="42">0<pos:position pos:line="51" pos:column="43"/></literal></expr>)<pos:position pos:line="51" pos:column="44"/></condition><then pos:line="51" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="7">strarray_add<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><operator pos:line="52" pos:column="20">&amp;<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="21">plugins<pos:position pos:line="52" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="30">&amp;<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="31">plugins_num<pos:position pos:line="52" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="44">opt_value<pos:position pos:line="52" pos:column="53"/></name></expr></argument>)<pos:position pos:line="52" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="55"/></expr_stmt></block></then>
    <elseif pos:line="53" pos:column="5">else <if pos:line="53" pos:column="10">if <condition pos:line="53" pos:column="13">(<expr><call><name pos:line="53" pos:column="14">strcasecmp<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><literal type="string" pos:line="53" pos:column="25">"identifier"<pos:position pos:line="53" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="39">opt_key<pos:position pos:line="53" pos:column="46"/></name></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call> <operator pos:line="53" pos:column="48">==<pos:position pos:line="53" pos:column="50"/></operator> <literal type="number" pos:line="53" pos:column="51">0<pos:position pos:line="53" pos:column="52"/></literal></expr>)<pos:position pos:line="53" pos:column="53"/></condition><then pos:line="53" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="7">strarray_add<pos:position pos:line="54" pos:column="19"/></name><argument_list pos:line="54" pos:column="19">(<argument><expr><operator pos:line="54" pos:column="20">&amp;<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="21">identifiers<pos:position pos:line="54" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="34">&amp;<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="35">identifiers_num<pos:position pos:line="54" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="52">opt_value<pos:position pos:line="54" pos:column="61"/></name></expr></argument>)<pos:position pos:line="54" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="63"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="55" pos:column="5">else <if pos:line="55" pos:column="10">if <condition pos:line="55" pos:column="13">(<expr><call><name pos:line="55" pos:column="14">strcasecmp<pos:position pos:line="55" pos:column="24"/></name><argument_list pos:line="55" pos:column="24">(<argument><expr><literal type="string" pos:line="55" pos:column="25">"timeout"<pos:position pos:line="55" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="36">opt_key<pos:position pos:line="55" pos:column="43"/></name></expr></argument>)<pos:position pos:line="55" pos:column="44"/></argument_list></call> <operator pos:line="55" pos:column="45">==<pos:position pos:line="55" pos:column="47"/></operator> <literal type="number" pos:line="55" pos:column="48">0<pos:position pos:line="55" pos:column="49"/></literal></expr>)<pos:position pos:line="55" pos:column="50"/></condition><then pos:line="55" pos:column="50"> <block pos:line="55" pos:column="51">{
      <decl_stmt><decl><type><name pos:line="56" pos:column="7">char<pos:position pos:line="56" pos:column="11"/></name> <modifier pos:line="56" pos:column="12">*<pos:position pos:line="56" pos:column="13"/></modifier></type><name pos:line="56" pos:column="13">endptr<pos:position pos:line="56" pos:column="19"/></name></decl>;<pos:position pos:line="56" pos:column="20"/></decl_stmt>

      <expr_stmt><expr><name pos:line="58" pos:column="7">errno<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <literal type="number" pos:line="58" pos:column="15">0<pos:position pos:line="58" pos:column="16"/></literal></expr>;<pos:position pos:line="58" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="59" pos:column="7">endptr<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <name pos:line="59" pos:column="16">NULL<pos:position pos:line="59" pos:column="20"/></name></expr>;<pos:position pos:line="59" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="60" pos:column="7">timeout<pos:position pos:line="60" pos:column="14"/></name> <operator pos:line="60" pos:column="15">=<pos:position pos:line="60" pos:column="16"/></operator> <call><name pos:line="60" pos:column="17">strtod<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">(<argument><expr><name pos:line="60" pos:column="24">opt_value<pos:position pos:line="60" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="35">&amp;<pos:position pos:line="60" pos:column="40"/></operator><name pos:line="60" pos:column="36">endptr<pos:position pos:line="60" pos:column="42"/></name></expr></argument>)<pos:position pos:line="60" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="44"/></expr_stmt>

      <if pos:line="62" pos:column="7">if <condition pos:line="62" pos:column="10">(<expr><operator pos:line="62" pos:column="11">(<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="12">endptr<pos:position pos:line="62" pos:column="18"/></name> <operator pos:line="62" pos:column="19">==<pos:position pos:line="62" pos:column="21"/></operator> <name pos:line="62" pos:column="22">opt_value<pos:position pos:line="62" pos:column="31"/></name><operator pos:line="62" pos:column="31">)<pos:position pos:line="62" pos:column="32"/></operator> <operator pos:line="62" pos:column="33">||<pos:position pos:line="62" pos:column="35"/></operator> <operator pos:line="62" pos:column="36">(<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="37">errno<pos:position pos:line="62" pos:column="42"/></name> <operator pos:line="62" pos:column="43">!=<pos:position pos:line="62" pos:column="45"/></operator> <literal type="number" pos:line="62" pos:column="46">0<pos:position pos:line="62" pos:column="47"/></literal><operator pos:line="62" pos:column="47">)<pos:position pos:line="62" pos:column="48"/></operator> <operator pos:line="62" pos:column="49">||<pos:position pos:line="62" pos:column="51"/></operator> <operator pos:line="62" pos:column="52">(<pos:position pos:line="62" pos:column="53"/></operator><operator pos:line="62" pos:column="53">!<pos:position pos:line="62" pos:column="54"/></operator><call><name pos:line="62" pos:column="54">isfinite<pos:position pos:line="62" pos:column="62"/></name><argument_list pos:line="62" pos:column="62">(<argument><expr><name pos:line="62" pos:column="63">timeout<pos:position pos:line="62" pos:column="70"/></name></expr></argument>)<pos:position pos:line="62" pos:column="71"/></argument_list></call><operator pos:line="62" pos:column="71">)<pos:position pos:line="62" pos:column="72"/></operator></expr>)<pos:position pos:line="62" pos:column="73"/></condition><then pos:line="62" pos:column="73"> <block pos:line="62" pos:column="74">{
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">PRINT_TO_SOCK<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><name pos:line="63" pos:column="23">fh<pos:position pos:line="63" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="27">"-1 Invalid value for option `timeout': "<pos:position pos:line="63" pos:column="68"/></literal>
                          <literal type="string" pos:line="64" pos:column="27">"%s\n"<pos:position pos:line="64" pos:column="33"/></literal></expr></argument>,
                      <argument><expr><name pos:line="65" pos:column="23">opt_value<pos:position pos:line="65" pos:column="32"/></name></expr></argument>)<pos:position pos:line="65" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">strarray_free<pos:position pos:line="66" pos:column="22"/></name><argument_list pos:line="66" pos:column="22">(<argument><expr><name pos:line="66" pos:column="23">plugins<pos:position pos:line="66" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="32">plugins_num<pos:position pos:line="66" pos:column="43"/></name></expr></argument>)<pos:position pos:line="66" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">strarray_free<pos:position pos:line="67" pos:column="22"/></name><argument_list pos:line="67" pos:column="22">(<argument><expr><name pos:line="67" pos:column="23">identifiers<pos:position pos:line="67" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="36">identifiers_num<pos:position pos:line="67" pos:column="51"/></name></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="53"/></expr_stmt>
        <return pos:line="68" pos:column="9">return <expr><operator pos:line="68" pos:column="16">(<pos:position pos:line="68" pos:column="17"/></operator><operator pos:line="68" pos:column="17">-<pos:position pos:line="68" pos:column="18"/></operator><literal type="number" pos:line="68" pos:column="18">1<pos:position pos:line="68" pos:column="19"/></literal><operator pos:line="68" pos:column="19">)<pos:position pos:line="68" pos:column="20"/></operator></expr>;<pos:position pos:line="68" pos:column="21"/></return>
      }<pos:position pos:line="69" pos:column="8"/></block></then> <elseif pos:line="69" pos:column="9">else <if pos:line="69" pos:column="14">if <condition pos:line="69" pos:column="17">(<expr><name pos:line="69" pos:column="18">timeout<pos:position pos:line="69" pos:column="25"/></name> <operator pos:line="69" pos:column="26">&lt;<pos:position pos:line="69" pos:column="30"/></operator> <literal type="number" pos:line="69" pos:column="28">0.0<pos:position pos:line="69" pos:column="31"/></literal></expr>)<pos:position pos:line="69" pos:column="32"/></condition><then pos:line="69" pos:column="32"> <block pos:line="69" pos:column="33">{
        <expr_stmt><expr><name pos:line="70" pos:column="9">timeout<pos:position pos:line="70" pos:column="16"/></name> <operator pos:line="70" pos:column="17">=<pos:position pos:line="70" pos:column="18"/></operator> <literal type="number" pos:line="70" pos:column="19">0.0<pos:position pos:line="70" pos:column="22"/></literal></expr>;<pos:position pos:line="70" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="71" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if></elseif> <else pos:line="72" pos:column="7">else <block pos:line="72" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">PRINT_TO_SOCK<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">(<argument><expr><name pos:line="73" pos:column="21">fh<pos:position pos:line="73" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="25">"-1 Cannot parse option %s\n"<pos:position pos:line="73" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="56">opt_key<pos:position pos:line="73" pos:column="63"/></name></expr></argument>)<pos:position pos:line="73" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="74" pos:column="7">strarray_free<pos:position pos:line="74" pos:column="20"/></name><argument_list pos:line="74" pos:column="20">(<argument><expr><name pos:line="74" pos:column="21">plugins<pos:position pos:line="74" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="30">plugins_num<pos:position pos:line="74" pos:column="41"/></name></expr></argument>)<pos:position pos:line="74" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="75" pos:column="7">strarray_free<pos:position pos:line="75" pos:column="20"/></name><argument_list pos:line="75" pos:column="20">(<argument><expr><name pos:line="75" pos:column="21">identifiers<pos:position pos:line="75" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="34">identifiers_num<pos:position pos:line="75" pos:column="49"/></name></expr></argument>)<pos:position pos:line="75" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="51"/></expr_stmt>
      <return pos:line="76" pos:column="7">return <expr><operator pos:line="76" pos:column="14">(<pos:position pos:line="76" pos:column="15"/></operator><operator pos:line="76" pos:column="15">-<pos:position pos:line="76" pos:column="16"/></operator><literal type="number" pos:line="76" pos:column="16">1<pos:position pos:line="76" pos:column="17"/></literal><operator pos:line="76" pos:column="17">)<pos:position pos:line="76" pos:column="18"/></operator></expr>;<pos:position pos:line="76" pos:column="19"/></return>
    }<pos:position pos:line="77" pos:column="6"/></block></else></if>
  }<pos:position pos:line="78" pos:column="4"/></block></while> <comment type="block" pos:line="78" pos:column="5">/* while (*buffer != 0) */</comment>

  <for pos:line="80" pos:column="3">for <control pos:line="80" pos:column="7">(<init><decl><type><name pos:line="80" pos:column="8">size_t<pos:position pos:line="80" pos:column="14"/></name></type> <name pos:line="80" pos:column="15">i<pos:position pos:line="80" pos:column="16"/></name> <init pos:line="80" pos:column="17">= <expr><literal type="number" pos:line="80" pos:column="19">0<pos:position pos:line="80" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="80" pos:column="21"/></init> <condition><expr><operator pos:line="80" pos:column="22">(<pos:position pos:line="80" pos:column="23"/></operator><name pos:line="80" pos:column="23">i<pos:position pos:line="80" pos:column="24"/></name> <operator pos:line="80" pos:column="25">==<pos:position pos:line="80" pos:column="27"/></operator> <literal type="number" pos:line="80" pos:column="28">0<pos:position pos:line="80" pos:column="29"/></literal><operator pos:line="80" pos:column="29">)<pos:position pos:line="80" pos:column="30"/></operator> <operator pos:line="80" pos:column="31">||<pos:position pos:line="80" pos:column="33"/></operator> <operator pos:line="80" pos:column="34">(<pos:position pos:line="80" pos:column="35"/></operator><name pos:line="80" pos:column="35">i<pos:position pos:line="80" pos:column="36"/></name> <operator pos:line="80" pos:column="37">&lt;<pos:position pos:line="80" pos:column="41"/></operator> <name pos:line="80" pos:column="39">plugins_num<pos:position pos:line="80" pos:column="50"/></name><operator pos:line="80" pos:column="50">)<pos:position pos:line="80" pos:column="51"/></operator></expr>;<pos:position pos:line="80" pos:column="52"/></condition> <incr><expr><name pos:line="80" pos:column="53">i<pos:position pos:line="80" pos:column="54"/></name><operator pos:line="80" pos:column="54">++<pos:position pos:line="80" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="80" pos:column="57"/></control> <block pos:line="80" pos:column="58">{
    <decl_stmt><decl><type><name pos:line="81" pos:column="5">char<pos:position pos:line="81" pos:column="9"/></name> <modifier pos:line="81" pos:column="10">*<pos:position pos:line="81" pos:column="11"/></modifier></type><name pos:line="81" pos:column="11">plugin<pos:position pos:line="81" pos:column="17"/></name> <init pos:line="81" pos:column="18">= <expr><name pos:line="81" pos:column="20">NULL<pos:position pos:line="81" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="81" pos:column="25"/></decl_stmt>

    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name pos:line="83" pos:column="9">plugins_num<pos:position pos:line="83" pos:column="20"/></name> <operator pos:line="83" pos:column="21">!=<pos:position pos:line="83" pos:column="23"/></operator> <literal type="number" pos:line="83" pos:column="24">0<pos:position pos:line="83" pos:column="25"/></literal></expr>)<pos:position pos:line="83" pos:column="26"/></condition><then pos:line="83" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="7">plugin<pos:position pos:line="84" pos:column="13"/></name> <operator pos:line="84" pos:column="14">=<pos:position pos:line="84" pos:column="15"/></operator> <name><name pos:line="84" pos:column="16">plugins<pos:position pos:line="84" pos:column="23"/></name><index pos:line="84" pos:column="23">[<expr><name pos:line="84" pos:column="24">i<pos:position pos:line="84" pos:column="25"/></name></expr>]<pos:position pos:line="84" pos:column="26"/></index></name></expr>;<pos:position pos:line="84" pos:column="27"/></expr_stmt></block></then></if>

    <for pos:line="86" pos:column="5">for <control pos:line="86" pos:column="9">(<init><decl><type><name pos:line="86" pos:column="10">size_t<pos:position pos:line="86" pos:column="16"/></name></type> <name pos:line="86" pos:column="17">j<pos:position pos:line="86" pos:column="18"/></name> <init pos:line="86" pos:column="19">= <expr><literal type="number" pos:line="86" pos:column="21">0<pos:position pos:line="86" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="86" pos:column="23"/></init> <condition><expr><operator pos:line="86" pos:column="24">(<pos:position pos:line="86" pos:column="25"/></operator><name pos:line="86" pos:column="25">j<pos:position pos:line="86" pos:column="26"/></name> <operator pos:line="86" pos:column="27">==<pos:position pos:line="86" pos:column="29"/></operator> <literal type="number" pos:line="86" pos:column="30">0<pos:position pos:line="86" pos:column="31"/></literal><operator pos:line="86" pos:column="31">)<pos:position pos:line="86" pos:column="32"/></operator> <operator pos:line="86" pos:column="33">||<pos:position pos:line="86" pos:column="35"/></operator> <operator pos:line="86" pos:column="36">(<pos:position pos:line="86" pos:column="37"/></operator><name pos:line="86" pos:column="37">j<pos:position pos:line="86" pos:column="38"/></name> <operator pos:line="86" pos:column="39">&lt;<pos:position pos:line="86" pos:column="43"/></operator> <name pos:line="86" pos:column="41">identifiers_num<pos:position pos:line="86" pos:column="56"/></name><operator pos:line="86" pos:column="56">)<pos:position pos:line="86" pos:column="57"/></operator></expr>;<pos:position pos:line="86" pos:column="58"/></condition> <incr><expr><name pos:line="86" pos:column="59">j<pos:position pos:line="86" pos:column="60"/></name><operator pos:line="86" pos:column="60">++<pos:position pos:line="86" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="86" pos:column="63"/></control> <block pos:line="86" pos:column="64">{
      <decl_stmt><decl><type><name pos:line="87" pos:column="7">char<pos:position pos:line="87" pos:column="11"/></name> <modifier pos:line="87" pos:column="12">*<pos:position pos:line="87" pos:column="13"/></modifier></type><name pos:line="87" pos:column="13">identifier<pos:position pos:line="87" pos:column="23"/></name> <init pos:line="87" pos:column="24">= <expr><name pos:line="87" pos:column="26">NULL<pos:position pos:line="87" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="87" pos:column="31"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="88" pos:column="7">int<pos:position pos:line="88" pos:column="10"/></name></type> <name pos:line="88" pos:column="11">status<pos:position pos:line="88" pos:column="17"/></name></decl>;<pos:position pos:line="88" pos:column="18"/></decl_stmt>

      <if pos:line="90" pos:column="7">if <condition pos:line="90" pos:column="10">(<expr><name pos:line="90" pos:column="11">identifiers_num<pos:position pos:line="90" pos:column="26"/></name> <operator pos:line="90" pos:column="27">!=<pos:position pos:line="90" pos:column="29"/></operator> <literal type="number" pos:line="90" pos:column="30">0<pos:position pos:line="90" pos:column="31"/></literal></expr>)<pos:position pos:line="90" pos:column="32"/></condition><then pos:line="90" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="9">identifier<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">=<pos:position pos:line="91" pos:column="21"/></operator> <name><name pos:line="91" pos:column="22">identifiers<pos:position pos:line="91" pos:column="33"/></name><index pos:line="91" pos:column="33">[<expr><name pos:line="91" pos:column="34">j<pos:position pos:line="91" pos:column="35"/></name></expr>]<pos:position pos:line="91" pos:column="36"/></index></name></expr>;<pos:position pos:line="91" pos:column="37"/></expr_stmt></block></then></if>

      <expr_stmt><expr><name pos:line="93" pos:column="7">status<pos:position pos:line="93" pos:column="13"/></name> <operator pos:line="93" pos:column="14">=<pos:position pos:line="93" pos:column="15"/></operator> <call><name pos:line="93" pos:column="16">plugin_flush<pos:position pos:line="93" pos:column="28"/></name><argument_list pos:line="93" pos:column="28">(<argument><expr><name pos:line="93" pos:column="29">plugin<pos:position pos:line="93" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="93" pos:column="37">DOUBLE_TO_CDTIME_T<pos:position pos:line="93" pos:column="55"/></name><argument_list pos:line="93" pos:column="55">(<argument><expr><name pos:line="93" pos:column="56">timeout<pos:position pos:line="93" pos:column="63"/></name></expr></argument>)<pos:position pos:line="93" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="93" pos:column="66">identifier<pos:position pos:line="93" pos:column="76"/></name></expr></argument>)<pos:position pos:line="93" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="78"/></expr_stmt>
      <if pos:line="94" pos:column="7">if <condition pos:line="94" pos:column="10">(<expr><name pos:line="94" pos:column="11">status<pos:position pos:line="94" pos:column="17"/></name> <operator pos:line="94" pos:column="18">==<pos:position pos:line="94" pos:column="20"/></operator> <literal type="number" pos:line="94" pos:column="21">0<pos:position pos:line="94" pos:column="22"/></literal></expr>)<pos:position pos:line="94" pos:column="23"/></condition><then pos:line="94" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="9">success<pos:position pos:line="95" pos:column="16"/></name><operator pos:line="95" pos:column="16">++<pos:position pos:line="95" pos:column="18"/></operator></expr>;<pos:position pos:line="95" pos:column="19"/></expr_stmt></block></then>
      <else pos:line="96" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="9">error<pos:position pos:line="97" pos:column="14"/></name><operator pos:line="97" pos:column="14">++<pos:position pos:line="97" pos:column="16"/></operator></expr>;<pos:position pos:line="97" pos:column="17"/></expr_stmt></block></else></if>
    }<pos:position pos:line="98" pos:column="6"/></block></for>
  }<pos:position pos:line="99" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="101" pos:column="3">PRINT_TO_SOCK<pos:position pos:line="101" pos:column="16"/></name><argument_list pos:line="101" pos:column="16">(<argument><expr><name pos:line="101" pos:column="17">fh<pos:position pos:line="101" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="21">"0 Done: %i successful, %i errors\n"<pos:position pos:line="101" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="59">success<pos:position pos:line="101" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="68">error<pos:position pos:line="101" pos:column="73"/></name></expr></argument>)<pos:position pos:line="101" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="75"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="103" pos:column="3">strarray_free<pos:position pos:line="103" pos:column="16"/></name><argument_list pos:line="103" pos:column="16">(<argument><expr><name pos:line="103" pos:column="17">plugins<pos:position pos:line="103" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="26">plugins_num<pos:position pos:line="103" pos:column="37"/></name></expr></argument>)<pos:position pos:line="103" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="104" pos:column="3">strarray_free<pos:position pos:line="104" pos:column="16"/></name><argument_list pos:line="104" pos:column="16">(<argument><expr><name pos:line="104" pos:column="17">identifiers<pos:position pos:line="104" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="30">identifiers_num<pos:position pos:line="104" pos:column="45"/></name></expr></argument>)<pos:position pos:line="104" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="47"/></expr_stmt>
  <return pos:line="105" pos:column="3">return <expr><operator pos:line="105" pos:column="10">(<pos:position pos:line="105" pos:column="11"/></operator><literal type="number" pos:line="105" pos:column="11">0<pos:position pos:line="105" pos:column="12"/></literal><operator pos:line="105" pos:column="12">)<pos:position pos:line="105" pos:column="13"/></operator></expr>;<pos:position pos:line="105" pos:column="14"/></return>
<cpp:undef pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">undef<pos:position pos:line="106" pos:column="7"/></cpp:directive> <name pos:line="106" pos:column="8">PRINT_TO_SOCK<pos:position pos:line="106" pos:column="21"/></name></cpp:undef>
}<pos:position pos:line="107" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1549_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">cpy_oconfig_to_pyconfig<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">oconfig_item_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">ci<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">PyObject<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">parent<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list> <block pos:line="1" pos:column="80">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">i<pos:position pos:line="2" pos:column="14"/></name></decl>;<pos:position pos:line="2" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">PyObject<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">item<pos:position pos:line="3" pos:column="23"/></name></decl>, <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="26">values<pos:position pos:line="3" pos:column="32"/></name></decl>, <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="35">children<pos:position pos:line="3" pos:column="43"/></name></decl>, <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="46">tmp<pos:position pos:line="3" pos:column="49"/></name></decl>;<pos:position pos:line="3" pos:column="50"/></decl_stmt>
	
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">parent<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">==<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">NULL<pos:position pos:line="5" pos:column="27"/></name></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">parent<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">=<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="26">Py_None<pos:position pos:line="6" pos:column="33"/></name></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt></block></then></if>
	
	<expr_stmt><expr><name pos:line="8" pos:column="9">values<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">PyTuple_New<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name><name pos:line="8" pos:column="30">ci<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">values_num<pos:position pos:line="8" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt> <comment type="block" pos:line="8" pos:column="47">/* New reference. */</comment>
	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">i<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></init> <condition><expr><name pos:line="9" pos:column="21">i<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <name><name pos:line="9" pos:column="25">ci<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">values_num<pos:position pos:line="9" pos:column="39"/></name></name></expr>;<pos:position pos:line="9" pos:column="40"/></condition> <incr><expr><operator pos:line="9" pos:column="41">++<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="43">i<pos:position pos:line="9" pos:column="44"/></name></expr></incr>)<pos:position pos:line="9" pos:column="45"/></control> <block pos:line="9" pos:column="46">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name><name pos:line="10" pos:column="21">ci<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">values<pos:position pos:line="10" pos:column="31"/></name><index pos:line="10" pos:column="31">[<expr><name pos:line="10" pos:column="32">i<pos:position pos:line="10" pos:column="33"/></name></expr>]<pos:position pos:line="10" pos:column="34"/></index></name><operator pos:line="10" pos:column="34">.<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">type<pos:position pos:line="10" pos:column="39"/></name> <operator pos:line="10" pos:column="40">==<pos:position pos:line="10" pos:column="42"/></operator> <name pos:line="10" pos:column="43">OCONFIG_TYPE_STRING<pos:position pos:line="10" pos:column="62"/></name></expr>)<pos:position pos:line="10" pos:column="63"/></condition><then pos:line="10" pos:column="63"> <block pos:line="10" pos:column="64">{
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">PyTuple_SET_ITEM<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">values<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">i<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="53">cpy_string_to_unicode_or_bytes<pos:position pos:line="11" pos:column="83"/></name><argument_list pos:line="11" pos:column="83">(<argument><expr><name><name pos:line="11" pos:column="84">ci<pos:position pos:line="11" pos:column="86"/></name><operator pos:line="11" pos:column="86">-&gt;<pos:position pos:line="11" pos:column="91"/></operator><name pos:line="11" pos:column="88">values<pos:position pos:line="11" pos:column="94"/></name><index pos:line="11" pos:column="94">[<expr><name pos:line="11" pos:column="95">i<pos:position pos:line="11" pos:column="96"/></name></expr>]<pos:position pos:line="11" pos:column="97"/></index></name><operator pos:line="11" pos:column="97">.<pos:position pos:line="11" pos:column="98"/></operator><name><name pos:line="11" pos:column="98">value<pos:position pos:line="11" pos:column="103"/></name><operator pos:line="11" pos:column="103">.<pos:position pos:line="11" pos:column="104"/></operator><name pos:line="11" pos:column="104">string<pos:position pos:line="11" pos:column="110"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="113"/></expr_stmt>
		}<pos:position pos:line="12" pos:column="18"/></block></then> <elseif pos:line="12" pos:column="19">else <if pos:line="12" pos:column="24">if <condition pos:line="12" pos:column="27">(<expr><name><name pos:line="12" pos:column="28">ci<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">values<pos:position pos:line="12" pos:column="38"/></name><index pos:line="12" pos:column="38">[<expr><name pos:line="12" pos:column="39">i<pos:position pos:line="12" pos:column="40"/></name></expr>]<pos:position pos:line="12" pos:column="41"/></index></name><operator pos:line="12" pos:column="41">.<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="42">type<pos:position pos:line="12" pos:column="46"/></name> <operator pos:line="12" pos:column="47">==<pos:position pos:line="12" pos:column="49"/></operator> <name pos:line="12" pos:column="50">OCONFIG_TYPE_NUMBER<pos:position pos:line="12" pos:column="69"/></name></expr>)<pos:position pos:line="12" pos:column="70"/></condition><then pos:line="12" pos:column="70"> <block pos:line="12" pos:column="71">{
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">PyTuple_SET_ITEM<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><name pos:line="13" pos:column="42">values<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">i<pos:position pos:line="13" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="53">PyFloat_FromDouble<pos:position pos:line="13" pos:column="71"/></name><argument_list pos:line="13" pos:column="71">(<argument><expr><name><name pos:line="13" pos:column="72">ci<pos:position pos:line="13" pos:column="74"/></name><operator pos:line="13" pos:column="74">-&gt;<pos:position pos:line="13" pos:column="79"/></operator><name pos:line="13" pos:column="76">values<pos:position pos:line="13" pos:column="82"/></name><index pos:line="13" pos:column="82">[<expr><name pos:line="13" pos:column="83">i<pos:position pos:line="13" pos:column="84"/></name></expr>]<pos:position pos:line="13" pos:column="85"/></index></name><operator pos:line="13" pos:column="85">.<pos:position pos:line="13" pos:column="86"/></operator><name><name pos:line="13" pos:column="86">value<pos:position pos:line="13" pos:column="91"/></name><operator pos:line="13" pos:column="91">.<pos:position pos:line="13" pos:column="92"/></operator><name pos:line="13" pos:column="92">number<pos:position pos:line="13" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="101"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if></elseif> <elseif pos:line="14" pos:column="19">else <if pos:line="14" pos:column="24">if <condition pos:line="14" pos:column="27">(<expr><name><name pos:line="14" pos:column="28">ci<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">values<pos:position pos:line="14" pos:column="38"/></name><index pos:line="14" pos:column="38">[<expr><name pos:line="14" pos:column="39">i<pos:position pos:line="14" pos:column="40"/></name></expr>]<pos:position pos:line="14" pos:column="41"/></index></name><operator pos:line="14" pos:column="41">.<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">type<pos:position pos:line="14" pos:column="46"/></name> <operator pos:line="14" pos:column="47">==<pos:position pos:line="14" pos:column="49"/></operator> <name pos:line="14" pos:column="50">OCONFIG_TYPE_BOOLEAN<pos:position pos:line="14" pos:column="70"/></name></expr>)<pos:position pos:line="14" pos:column="71"/></condition><then pos:line="14" pos:column="71"> <block pos:line="14" pos:column="72">{
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">PyTuple_SET_ITEM<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">values<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">i<pos:position pos:line="15" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="53">PyBool_FromLong<pos:position pos:line="15" pos:column="68"/></name><argument_list pos:line="15" pos:column="68">(<argument><expr><name><name pos:line="15" pos:column="69">ci<pos:position pos:line="15" pos:column="71"/></name><operator pos:line="15" pos:column="71">-&gt;<pos:position pos:line="15" pos:column="76"/></operator><name pos:line="15" pos:column="73">values<pos:position pos:line="15" pos:column="79"/></name><index pos:line="15" pos:column="79">[<expr><name pos:line="15" pos:column="80">i<pos:position pos:line="15" pos:column="81"/></name></expr>]<pos:position pos:line="15" pos:column="82"/></index></name><operator pos:line="15" pos:column="82">.<pos:position pos:line="15" pos:column="83"/></operator><name><name pos:line="15" pos:column="83">value<pos:position pos:line="15" pos:column="88"/></name><operator pos:line="15" pos:column="88">.<pos:position pos:line="15" pos:column="89"/></operator><name pos:line="15" pos:column="89">boolean<pos:position pos:line="15" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="99"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="17" pos:column="10"/></block></for>
	
	<expr_stmt><expr><name pos:line="19" pos:column="9">tmp<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">cpy_string_to_unicode_or_bytes<pos:position pos:line="19" pos:column="45"/></name><argument_list pos:line="19" pos:column="45">(<argument><expr><name><name pos:line="19" pos:column="46">ci<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">-&gt;<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="50">key<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">item<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">PyObject_CallFunction<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><operator pos:line="20" pos:column="38">(<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">void<pos:position pos:line="20" pos:column="43"/></name> <operator pos:line="20" pos:column="44">*<pos:position pos:line="20" pos:column="45"/></operator><operator pos:line="20" pos:column="45">)<pos:position pos:line="20" pos:column="46"/></operator> <operator pos:line="20" pos:column="47">&amp;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="48">ConfigType<pos:position pos:line="20" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="60">"NONO"<pos:position pos:line="20" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="68">tmp<pos:position pos:line="20" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="73">parent<pos:position pos:line="20" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="81">values<pos:position pos:line="20" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="89">Py_None<pos:position pos:line="20" pos:column="96"/></name></expr></argument>)<pos:position pos:line="20" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="98"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">item<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">==<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">NULL<pos:position pos:line="21" pos:column="25"/></name></expr>)<pos:position pos:line="21" pos:column="26"/></condition><then pos:line="21" pos:column="26">
		<block type="pseudo"><return pos:line="22" pos:column="17">return <expr><name pos:line="22" pos:column="24">NULL<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="23" pos:column="9">children<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <call><name pos:line="23" pos:column="20">PyTuple_New<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><name><name pos:line="23" pos:column="32">ci<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">children_num<pos:position pos:line="23" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="50"/></expr_stmt> <comment type="block" pos:line="23" pos:column="51">/* New reference. */</comment>
	<for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><expr><name pos:line="24" pos:column="14">i<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <literal type="number" pos:line="24" pos:column="18">0<pos:position pos:line="24" pos:column="19"/></literal></expr>;<pos:position pos:line="24" pos:column="20"/></init> <condition><expr><name pos:line="24" pos:column="21">i<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">&lt;<pos:position pos:line="24" pos:column="27"/></operator> <name><name pos:line="24" pos:column="25">ci<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">children_num<pos:position pos:line="24" pos:column="41"/></name></name></expr>;<pos:position pos:line="24" pos:column="42"/></condition> <incr><expr><operator pos:line="24" pos:column="43">++<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="45">i<pos:position pos:line="24" pos:column="46"/></name></expr></incr>)<pos:position pos:line="24" pos:column="47"/></control> <block pos:line="24" pos:column="48">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">PyTuple_SET_ITEM<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><name pos:line="25" pos:column="34">children<pos:position pos:line="25" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">i<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="47">cpy_oconfig_to_pyconfig<pos:position pos:line="25" pos:column="70"/></name><argument_list pos:line="25" pos:column="70">(<argument><expr><name><name pos:line="25" pos:column="71">ci<pos:position pos:line="25" pos:column="73"/></name><operator pos:line="25" pos:column="73">-&gt;<pos:position pos:line="25" pos:column="78"/></operator><name pos:line="25" pos:column="75">children<pos:position pos:line="25" pos:column="83"/></name></name> <operator pos:line="25" pos:column="84">+<pos:position pos:line="25" pos:column="85"/></operator> <name pos:line="25" pos:column="86">i<pos:position pos:line="25" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="89">item<pos:position pos:line="25" pos:column="93"/></name></expr></argument>)<pos:position pos:line="25" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="96"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></for>
	<expr_stmt><expr><name pos:line="27" pos:column="9">tmp<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <operator pos:line="27" pos:column="15">(<pos:position pos:line="27" pos:column="16"/></operator><operator pos:line="27" pos:column="16">(<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">Config<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">*<pos:position pos:line="27" pos:column="25"/></operator><operator pos:line="27" pos:column="25">)<pos:position pos:line="27" pos:column="26"/></operator> <name pos:line="27" pos:column="27">item<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">)<pos:position pos:line="27" pos:column="32"/></operator><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">children<pos:position pos:line="27" pos:column="42"/></name></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="28" pos:column="9">(<pos:position pos:line="28" pos:column="10"/></operator><operator pos:line="28" pos:column="10">(<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="11">Config<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">*<pos:position pos:line="28" pos:column="19"/></operator><operator pos:line="28" pos:column="19">)<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">item<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">)<pos:position pos:line="28" pos:column="26"/></operator><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">children<pos:position pos:line="28" pos:column="36"/></name> <operator pos:line="28" pos:column="37">=<pos:position pos:line="28" pos:column="38"/></operator> <name pos:line="28" pos:column="39">children<pos:position pos:line="28" pos:column="47"/></name></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">Py_XDECREF<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">tmp<pos:position pos:line="29" pos:column="23"/></name></expr></argument>)<pos:position pos:line="29" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
	<return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">item<pos:position pos:line="30" pos:column="20"/></name></expr>;<pos:position pos:line="30" pos:column="21"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

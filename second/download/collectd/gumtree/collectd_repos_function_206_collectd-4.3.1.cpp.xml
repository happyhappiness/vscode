<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_206_collectd-4.3.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">signed<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">long<pos:position pos:line="1" pos:column="19"/></name> <name pos:line="1" pos:column="20">long<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">dict_get_value<pos:position pos:line="1" pos:column="39"/></name> <parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">CFDictionaryRef<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">dict<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="63">const<pos:position pos:line="1" pos:column="68"/></specifier> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">key<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">signed<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">long<pos:position pos:line="3" pos:column="20"/></name> <name pos:line="3" pos:column="21">long<pos:position pos:line="3" pos:column="25"/></name></type> <name pos:line="3" pos:column="26">val_int<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">CFNumberRef<pos:position pos:line="4" pos:column="20"/></name></type>      <name pos:line="4" pos:column="26">val_obj<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">CFStringRef<pos:position pos:line="5" pos:column="20"/></name></type>      <name pos:line="5" pos:column="26">key_obj<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* `key_obj' needs to be released. */</comment>
	<expr_stmt><expr><name pos:line="8" pos:column="9">key_obj<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <call><name pos:line="8" pos:column="19">CFStringCreateWithCString<pos:position pos:line="8" pos:column="44"/></name> <argument_list pos:line="8" pos:column="45">(<argument><expr><name pos:line="8" pos:column="46">kCFAllocatorDefault<pos:position pos:line="8" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="67">key<pos:position pos:line="8" pos:column="70"/></name></expr></argument>,
		       	<argument><expr><name pos:line="9" pos:column="25">kCFStringEncodingASCII<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">key_obj<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">==<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">NULL<pos:position pos:line="10" pos:column="28"/></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29">
	<block pos:line="11" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">DEBUG<pos:position pos:line="12" pos:column="22"/></name> <argument_list pos:line="12" pos:column="23">(<argument><expr><literal type="string" pos:line="12" pos:column="24">"CFStringCreateWithCString (%s) failed."<pos:position pos:line="12" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="66">key<pos:position pos:line="12" pos:column="69"/></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>
		<return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">(<pos:position pos:line="13" pos:column="25"/></operator><operator pos:line="13" pos:column="25">-<pos:position pos:line="13" pos:column="26"/></operator><literal type="number" pos:line="13" pos:column="26">1LL<pos:position pos:line="13" pos:column="29"/></literal><operator pos:line="13" pos:column="29">)<pos:position pos:line="13" pos:column="30"/></operator></expr>;<pos:position pos:line="13" pos:column="31"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	
	<comment type="block" pos:line="16" pos:column="9">/* get =&gt; we don't need to release (== free) the object */</comment>
	<expr_stmt><expr><name pos:line="17" pos:column="9">val_obj<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <operator pos:line="17" pos:column="19">(<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">CFNumberRef<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">)<pos:position pos:line="17" pos:column="32"/></operator> <call><name pos:line="17" pos:column="33">CFDictionaryGetValue<pos:position pos:line="17" pos:column="53"/></name> <argument_list pos:line="17" pos:column="54">(<argument><expr><name pos:line="17" pos:column="55">dict<pos:position pos:line="17" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="61">key_obj<pos:position pos:line="17" pos:column="68"/></name></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="70"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">CFRelease<pos:position pos:line="19" pos:column="18"/></name> <argument_list pos:line="19" pos:column="19">(<argument><expr><name pos:line="19" pos:column="20">key_obj<pos:position pos:line="19" pos:column="27"/></name></expr></argument>)<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">val_obj<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">==<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="24">NULL<pos:position pos:line="21" pos:column="28"/></name></expr>)<pos:position pos:line="21" pos:column="29"/></condition><then pos:line="21" pos:column="29">
	<block pos:line="22" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">DEBUG<pos:position pos:line="23" pos:column="22"/></name> <argument_list pos:line="23" pos:column="23">(<argument><expr><literal type="string" pos:line="23" pos:column="24">"CFDictionaryGetValue (%s) failed."<pos:position pos:line="23" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="61">key<pos:position pos:line="23" pos:column="64"/></name></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt>
		<return pos:line="24" pos:column="17">return <expr><operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><operator pos:line="24" pos:column="25">-<pos:position pos:line="24" pos:column="26"/></operator><literal type="number" pos:line="24" pos:column="26">1LL<pos:position pos:line="24" pos:column="29"/></literal><operator pos:line="24" pos:column="29">)<pos:position pos:line="24" pos:column="30"/></operator></expr>;<pos:position pos:line="24" pos:column="31"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><call><name pos:line="27" pos:column="14">CFNumberGetValue<pos:position pos:line="27" pos:column="30"/></name> <argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">val_obj<pos:position pos:line="27" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="41">kCFNumberSInt64Type<pos:position pos:line="27" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="62">&amp;<pos:position pos:line="27" pos:column="67"/></operator><name pos:line="27" pos:column="63">val_int<pos:position pos:line="27" pos:column="70"/></name></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="72"/></condition><then pos:line="27" pos:column="72">
	<block pos:line="28" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">DEBUG<pos:position pos:line="29" pos:column="22"/></name> <argument_list pos:line="29" pos:column="23">(<argument><expr><literal type="string" pos:line="29" pos:column="24">"CFNumberGetValue (%s) failed."<pos:position pos:line="29" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="57">key<pos:position pos:line="29" pos:column="60"/></name></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="62"/></expr_stmt>
		<return pos:line="30" pos:column="17">return <expr><operator pos:line="30" pos:column="24">(<pos:position pos:line="30" pos:column="25"/></operator><operator pos:line="30" pos:column="25">-<pos:position pos:line="30" pos:column="26"/></operator><literal type="number" pos:line="30" pos:column="26">1LL<pos:position pos:line="30" pos:column="29"/></literal><operator pos:line="30" pos:column="29">)<pos:position pos:line="30" pos:column="30"/></operator></expr>;<pos:position pos:line="30" pos:column="31"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<return pos:line="33" pos:column="9">return <expr><operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">val_int<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">)<pos:position pos:line="33" pos:column="25"/></operator></expr>;<pos:position pos:line="33" pos:column="26"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

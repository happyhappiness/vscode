<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_289_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">varnish_init<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list> <comment type="block" pos:line="1" pos:column="31">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">user_config_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">conf<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">have_instance<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal><operator pos:line="6" pos:column="14">)<pos:position pos:line="6" pos:column="15"/></operator></expr>;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="8" pos:column="3">conf<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <call><name pos:line="8" pos:column="10">calloc<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><literal type="number" pos:line="8" pos:column="17">1<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="20">sizeof<argument_list pos:line="8" pos:column="26">(<argument><expr><operator pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">conf<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">conf<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">NULL<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">ENOMEM<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">)<pos:position pos:line="10" pos:column="20"/></operator></expr>;<pos:position pos:line="10" pos:column="21"/></return></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* Default settings: */</comment>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">conf<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">instance<pos:position pos:line="13" pos:column="17"/></name></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">NULL<pos:position pos:line="13" pos:column="24"/></name></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">varnish_config_apply_default<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">conf<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">plugin_register_complex_read<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(
      <comment type="block" pos:line="18" pos:column="7">/* group = */</comment> <argument><expr><literal type="string" pos:line="18" pos:column="21">"varnish"<pos:position pos:line="18" pos:column="30"/></literal></expr></argument>,
      <comment type="block" pos:line="19" pos:column="7">/* name      = */</comment> <argument><expr><literal type="string" pos:line="19" pos:column="25">"varnish/localhost"<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>,
      <comment type="block" pos:line="20" pos:column="7">/* callback  = */</comment> <argument><expr><name pos:line="20" pos:column="25">varnish_read<pos:position pos:line="20" pos:column="37"/></name></expr></argument>,
      <comment type="block" pos:line="21" pos:column="7">/* interval  = */</comment> <argument><expr><literal type="number" pos:line="21" pos:column="25">0<pos:position pos:line="21" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="28">&amp;<pos:position pos:line="21" pos:column="33"/></operator><operator pos:line="21" pos:column="29">(<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">user_data_t<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">)<pos:position pos:line="21" pos:column="42"/></operator><block pos:line="21" pos:column="42">{
                               <expr><operator pos:line="22" pos:column="32">.<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">data<pos:position pos:line="22" pos:column="37"/></name> <operator pos:line="22" pos:column="38">=<pos:position pos:line="22" pos:column="39"/></operator> <name pos:line="22" pos:column="40">conf<pos:position pos:line="22" pos:column="44"/></name></expr>, <expr><operator pos:line="22" pos:column="46">.<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="47">free_func<pos:position pos:line="22" pos:column="56"/></name> <operator pos:line="22" pos:column="57">=<pos:position pos:line="22" pos:column="58"/></operator> <name pos:line="22" pos:column="59">varnish_config_free<pos:position pos:line="22" pos:column="78"/></name></expr>,
                           }<pos:position pos:line="23" pos:column="29"/></block></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>

  <return pos:line="25" pos:column="3">return <expr><operator pos:line="25" pos:column="10">(<pos:position pos:line="25" pos:column="11"/></operator><literal type="number" pos:line="25" pos:column="11">0<pos:position pos:line="25" pos:column="12"/></literal><operator pos:line="25" pos:column="12">)<pos:position pos:line="25" pos:column="13"/></operator></expr>;<pos:position pos:line="25" pos:column="14"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

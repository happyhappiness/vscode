<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_156_collectd-4.5.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">qos_filter<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">sockaddr_nl<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">sa<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
    <parameter><decl><type><name><name pos:line="2" pos:column="5">struct<pos:position pos:line="2" pos:column="11"/></name> <name pos:line="2" pos:column="12">nlmsghdr<pos:position pos:line="2" pos:column="20"/></name></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">nmh<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">void<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">args<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">tcmsg<pos:position pos:line="4" pos:column="15"/></name></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">msg<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">msg_len<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">rtattr<pos:position pos:line="6" pos:column="16"/></name></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name><name pos:line="6" pos:column="18">attrs<pos:position pos:line="6" pos:column="23"/></name><index pos:line="6" pos:column="23">[<expr><name pos:line="6" pos:column="24">TCA_MAX<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">+<pos:position pos:line="6" pos:column="33"/></operator> <literal type="number" pos:line="6" pos:column="34">1<pos:position pos:line="6" pos:column="35"/></literal></expr>]<pos:position pos:line="6" pos:column="36"/></index></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">wanted_ifindex<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><operator pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></operator><operator pos:line="8" pos:column="25">(<pos:position pos:line="8" pos:column="26"/></operator><operator pos:line="8" pos:column="26">(<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">int<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">*<pos:position pos:line="8" pos:column="32"/></operator><operator pos:line="8" pos:column="32">)<pos:position pos:line="8" pos:column="33"/></operator> <name pos:line="8" pos:column="34">args<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">)<pos:position pos:line="8" pos:column="39"/></operator></expr></init></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">dev<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* char *type_instance; */</comment>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">tc_type<pos:position pos:line="13" pos:column="16"/></name></decl>;<pos:position pos:line="13" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name></type> <name><name pos:line="14" pos:column="8">tc_inst<pos:position pos:line="14" pos:column="15"/></name><index pos:line="14" pos:column="15">[<expr><name pos:line="14" pos:column="16">DATA_MAX_NAME_LEN<pos:position pos:line="14" pos:column="33"/></name></expr>]<pos:position pos:line="14" pos:column="34"/></index></name></decl>;<pos:position pos:line="14" pos:column="35"/></decl_stmt>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name><name pos:line="16" pos:column="7">nmh<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">nlmsg_type<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">==<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">RTM_NEWQDISC<pos:position pos:line="16" pos:column="38"/></name></expr>)<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="5">tc_type<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <literal type="string" pos:line="17" pos:column="15">"qdisc"<pos:position pos:line="17" pos:column="22"/></literal></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt></block></then>
  <elseif pos:line="18" pos:column="3">else <if pos:line="18" pos:column="8">if <condition pos:line="18" pos:column="11">(<expr><name><name pos:line="18" pos:column="12">nmh<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">nlmsg_type<pos:position pos:line="18" pos:column="27"/></name></name> <operator pos:line="18" pos:column="28">==<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">RTM_NEWTCLASS<pos:position pos:line="18" pos:column="44"/></name></expr>)<pos:position pos:line="18" pos:column="45"/></condition><then pos:line="18" pos:column="45">
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">tc_type<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <literal type="string" pos:line="19" pos:column="15">"class"<pos:position pos:line="19" pos:column="22"/></literal></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="20" pos:column="3">else <if pos:line="20" pos:column="8">if <condition pos:line="20" pos:column="11">(<expr><name><name pos:line="20" pos:column="12">nmh<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">nlmsg_type<pos:position pos:line="20" pos:column="27"/></name></name> <operator pos:line="20" pos:column="28">==<pos:position pos:line="20" pos:column="30"/></operator> <name pos:line="20" pos:column="31">RTM_NEWTFILTER<pos:position pos:line="20" pos:column="45"/></name></expr>)<pos:position pos:line="20" pos:column="46"/></condition><then pos:line="20" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="5">tc_type<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <literal type="string" pos:line="21" pos:column="15">"filter"<pos:position pos:line="21" pos:column="23"/></literal></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt></block></then></if></elseif>
  <else pos:line="22" pos:column="3">else
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">ERROR<pos:position pos:line="24" pos:column="10"/></name> <argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="string" pos:line="24" pos:column="12">"netlink plugin: qos_filter: Don't know how to handle type %i."<pos:position pos:line="24" pos:column="75"/></literal></expr></argument>,
	<argument><expr><name><name pos:line="25" pos:column="9">nmh<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">nlmsg_type<pos:position pos:line="25" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><operator pos:line="26" pos:column="12">(<pos:position pos:line="26" pos:column="13"/></operator><operator pos:line="26" pos:column="13">-<pos:position pos:line="26" pos:column="14"/></operator><literal type="number" pos:line="26" pos:column="14">1<pos:position pos:line="26" pos:column="15"/></literal><operator pos:line="26" pos:column="15">)<pos:position pos:line="26" pos:column="16"/></operator></expr>;<pos:position pos:line="26" pos:column="17"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="29" pos:column="3">msg<pos:position pos:line="29" pos:column="6"/></name> <operator pos:line="29" pos:column="7">=<pos:position pos:line="29" pos:column="8"/></operator> <call><name pos:line="29" pos:column="9">NLMSG_DATA<pos:position pos:line="29" pos:column="19"/></name> <argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">nmh<pos:position pos:line="29" pos:column="24"/></name></expr></argument>)<pos:position pos:line="29" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name pos:line="31" pos:column="3">msg_len<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <name><name pos:line="31" pos:column="13">nmh<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">nlmsg_len<pos:position pos:line="31" pos:column="27"/></name></name> <operator pos:line="31" pos:column="28">-<pos:position pos:line="31" pos:column="29"/></operator> <sizeof pos:line="31" pos:column="30">sizeof <argument_list pos:line="31" pos:column="37">(<argument><expr pos:line="31" pos:column="38">struct <name pos:line="31" pos:column="45">tcmsg<pos:position pos:line="31" pos:column="50"/></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></sizeof></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">msg_len<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">&lt;<pos:position pos:line="32" pos:column="19"/></operator> <literal type="number" pos:line="32" pos:column="17">0<pos:position pos:line="32" pos:column="18"/></literal></expr>)<pos:position pos:line="32" pos:column="19"/></condition><then pos:line="32" pos:column="19">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ERROR<pos:position pos:line="34" pos:column="10"/></name> <argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="string" pos:line="34" pos:column="12">"netlink plugin: qos_filter: msg_len = %i &lt; 0;"<pos:position pos:line="34" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="61">msg_len<pos:position pos:line="34" pos:column="68"/></name></expr></argument>)<pos:position pos:line="34" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="70"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">(<pos:position pos:line="35" pos:column="13"/></operator><operator pos:line="35" pos:column="13">-<pos:position pos:line="35" pos:column="14"/></operator><literal type="number" pos:line="35" pos:column="14">1<pos:position pos:line="35" pos:column="15"/></literal><operator pos:line="35" pos:column="15">)<pos:position pos:line="35" pos:column="16"/></operator></expr>;<pos:position pos:line="35" pos:column="17"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name><name pos:line="38" pos:column="7">msg<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">tcm_ifindex<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">!=<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">wanted_ifindex<pos:position pos:line="38" pos:column="41"/></name></expr>)<pos:position pos:line="38" pos:column="42"/></condition><then pos:line="38" pos:column="42">
  <block pos:line="39" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">DEBUG<pos:position pos:line="40" pos:column="10"/></name> <argument_list pos:line="40" pos:column="11">(<argument><expr><literal type="string" pos:line="40" pos:column="12">"netlink plugin: qos_filter: Got %s for interface #%i, "<pos:position pos:line="40" pos:column="68"/></literal>
	<literal type="string" pos:line="41" pos:column="9">"but expected #%i."<pos:position pos:line="41" pos:column="28"/></literal></expr></argument>,
	<argument><expr><name pos:line="42" pos:column="9">tc_type<pos:position pos:line="42" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="18">msg<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">tcm_ifindex<pos:position pos:line="42" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="36">wanted_ifindex<pos:position pos:line="42" pos:column="50"/></name></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="52"/></expr_stmt>
    <return pos:line="43" pos:column="5">return <expr><operator pos:line="43" pos:column="12">(<pos:position pos:line="43" pos:column="13"/></operator><literal type="number" pos:line="43" pos:column="13">0<pos:position pos:line="43" pos:column="14"/></literal><operator pos:line="43" pos:column="14">)<pos:position pos:line="43" pos:column="15"/></operator></expr>;<pos:position pos:line="43" pos:column="16"/></return>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name><name pos:line="46" pos:column="7">msg<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">-&gt;<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="12">tcm_ifindex<pos:position pos:line="46" pos:column="23"/></name></name> <operator pos:line="46" pos:column="24">&gt;=<pos:position pos:line="46" pos:column="29"/></operator> <name pos:line="46" pos:column="27">iflist_len<pos:position pos:line="46" pos:column="37"/></name></expr>)<pos:position pos:line="46" pos:column="38"/></condition><then pos:line="46" pos:column="38">
  <block pos:line="47" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">ERROR<pos:position pos:line="48" pos:column="10"/></name> <argument_list pos:line="48" pos:column="11">(<argument><expr><literal type="string" pos:line="48" pos:column="12">"netlink plugin: qos_filter: msg-&gt;tcm_ifindex = %i "<pos:position pos:line="48" pos:column="67"/></literal>
	<literal type="string" pos:line="49" pos:column="9">"&gt;= iflist_len = %i"<pos:position pos:line="49" pos:column="32"/></literal></expr></argument>,
	<argument><expr><name><name pos:line="50" pos:column="9">msg<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">-&gt;<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="14">tcm_ifindex<pos:position pos:line="50" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="27">iflist_len<pos:position pos:line="50" pos:column="37"/></name></expr></argument>)<pos:position pos:line="50" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="39"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><operator pos:line="51" pos:column="13">-<pos:position pos:line="51" pos:column="14"/></operator><literal type="number" pos:line="51" pos:column="14">1<pos:position pos:line="51" pos:column="15"/></literal><operator pos:line="51" pos:column="15">)<pos:position pos:line="51" pos:column="16"/></operator></expr>;<pos:position pos:line="51" pos:column="17"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="54" pos:column="3">dev<pos:position pos:line="54" pos:column="6"/></name> <operator pos:line="54" pos:column="7">=<pos:position pos:line="54" pos:column="8"/></operator> <name><name pos:line="54" pos:column="9">iflist<pos:position pos:line="54" pos:column="15"/></name><index pos:line="54" pos:column="15">[<expr><name><name pos:line="54" pos:column="16">msg<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">-&gt;<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="21">tcm_ifindex<pos:position pos:line="54" pos:column="32"/></name></name></expr>]<pos:position pos:line="54" pos:column="33"/></index></name></expr>;<pos:position pos:line="54" pos:column="34"/></expr_stmt>
  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><name pos:line="55" pos:column="7">dev<pos:position pos:line="55" pos:column="10"/></name> <operator pos:line="55" pos:column="11">==<pos:position pos:line="55" pos:column="13"/></operator> <name pos:line="55" pos:column="14">NULL<pos:position pos:line="55" pos:column="18"/></name></expr>)<pos:position pos:line="55" pos:column="19"/></condition><then pos:line="55" pos:column="19">
  <block pos:line="56" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">ERROR<pos:position pos:line="57" pos:column="10"/></name> <argument_list pos:line="57" pos:column="11">(<argument><expr><literal type="string" pos:line="57" pos:column="12">"netlink plugin: qos_filter: iflist[%i] == NULL"<pos:position pos:line="57" pos:column="60"/></literal></expr></argument>,
	<argument><expr><name><name pos:line="58" pos:column="9">msg<pos:position pos:line="58" pos:column="12"/></name><operator pos:line="58" pos:column="12">-&gt;<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="14">tcm_ifindex<pos:position pos:line="58" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="27"/></expr_stmt>
    <return pos:line="59" pos:column="5">return <expr><operator pos:line="59" pos:column="12">(<pos:position pos:line="59" pos:column="13"/></operator><operator pos:line="59" pos:column="13">-<pos:position pos:line="59" pos:column="14"/></operator><literal type="number" pos:line="59" pos:column="14">1<pos:position pos:line="59" pos:column="15"/></literal><operator pos:line="59" pos:column="15">)<pos:position pos:line="59" pos:column="16"/></operator></expr>;<pos:position pos:line="59" pos:column="17"/></return>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="62" pos:column="3">memset<pos:position pos:line="62" pos:column="9"/></name> <argument_list pos:line="62" pos:column="10">(<argument><expr><name pos:line="62" pos:column="11">attrs<pos:position pos:line="62" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="62" pos:column="18">'\0'<pos:position pos:line="62" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="24">sizeof <argument_list pos:line="62" pos:column="31">(<argument><expr><name pos:line="62" pos:column="32">attrs<pos:position pos:line="62" pos:column="37"/></name></expr></argument>)<pos:position pos:line="62" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="40"/></expr_stmt>
  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><call><name pos:line="63" pos:column="7">parse_rtattr<pos:position pos:line="63" pos:column="19"/></name> <argument_list pos:line="63" pos:column="20">(<argument><expr><name pos:line="63" pos:column="21">attrs<pos:position pos:line="63" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="28">TCA_MAX<pos:position pos:line="63" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="37">TCA_RTA<pos:position pos:line="63" pos:column="44"/></name> <argument_list pos:line="63" pos:column="45">(<argument><expr><name pos:line="63" pos:column="46">msg<pos:position pos:line="63" pos:column="49"/></name></expr></argument>)<pos:position pos:line="63" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="63" pos:column="52">msg_len<pos:position pos:line="63" pos:column="59"/></name></expr></argument>)<pos:position pos:line="63" pos:column="60"/></argument_list></call> <operator pos:line="63" pos:column="61">!=<pos:position pos:line="63" pos:column="63"/></operator> <literal type="number" pos:line="63" pos:column="64">0<pos:position pos:line="63" pos:column="65"/></literal></expr>)<pos:position pos:line="63" pos:column="66"/></condition><then pos:line="63" pos:column="66">
  <block pos:line="64" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">ERROR<pos:position pos:line="65" pos:column="10"/></name> <argument_list pos:line="65" pos:column="11">(<argument><expr><literal type="string" pos:line="65" pos:column="12">"netlink plugin: qos_filter: parse_rtattr failed."<pos:position pos:line="65" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="64"/></expr_stmt>
    <return pos:line="66" pos:column="5">return <expr><operator pos:line="66" pos:column="12">(<pos:position pos:line="66" pos:column="13"/></operator><operator pos:line="66" pos:column="13">-<pos:position pos:line="66" pos:column="14"/></operator><literal type="number" pos:line="66" pos:column="14">1<pos:position pos:line="66" pos:column="15"/></literal><operator pos:line="66" pos:column="15">)<pos:position pos:line="66" pos:column="16"/></operator></expr>;<pos:position pos:line="66" pos:column="17"/></return>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if>

  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><name><name pos:line="69" pos:column="7">attrs<pos:position pos:line="69" pos:column="12"/></name><index pos:line="69" pos:column="12">[<expr><name pos:line="69" pos:column="13">TCA_KIND<pos:position pos:line="69" pos:column="21"/></name></expr>]<pos:position pos:line="69" pos:column="22"/></index></name> <operator pos:line="69" pos:column="23">==<pos:position pos:line="69" pos:column="25"/></operator> <name pos:line="69" pos:column="26">NULL<pos:position pos:line="69" pos:column="30"/></name></expr>)<pos:position pos:line="69" pos:column="31"/></condition><then pos:line="69" pos:column="31">
  <block pos:line="70" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">ERROR<pos:position pos:line="71" pos:column="10"/></name> <argument_list pos:line="71" pos:column="11">(<argument><expr><literal type="string" pos:line="71" pos:column="12">"netlink plugin: qos_filter: attrs[TCA_KIND] == NULL"<pos:position pos:line="71" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="67"/></expr_stmt>
    <return pos:line="72" pos:column="5">return <expr><operator pos:line="72" pos:column="12">(<pos:position pos:line="72" pos:column="13"/></operator><operator pos:line="72" pos:column="13">-<pos:position pos:line="72" pos:column="14"/></operator><literal type="number" pos:line="72" pos:column="14">1<pos:position pos:line="72" pos:column="15"/></literal><operator pos:line="72" pos:column="15">)<pos:position pos:line="72" pos:column="16"/></operator></expr>;<pos:position pos:line="72" pos:column="17"/></return>
  }<pos:position pos:line="73" pos:column="4"/></block></then></if>

  <block pos:line="75" pos:column="3">{ <comment type="block" pos:line="75" pos:column="5">/* The the ID */</comment>
    <decl_stmt><decl><type><name pos:line="76" pos:column="5">uint32_t<pos:position pos:line="76" pos:column="13"/></name></type> <name pos:line="76" pos:column="14">numberic_id<pos:position pos:line="76" pos:column="25"/></name></decl>;<pos:position pos:line="76" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><name pos:line="78" pos:column="5">numberic_id<pos:position pos:line="78" pos:column="16"/></name> <operator pos:line="78" pos:column="17">=<pos:position pos:line="78" pos:column="18"/></operator> <name><name pos:line="78" pos:column="19">msg<pos:position pos:line="78" pos:column="22"/></name><operator pos:line="78" pos:column="22">-&gt;<pos:position pos:line="78" pos:column="27"/></operator><name pos:line="78" pos:column="24">tcm_handle<pos:position pos:line="78" pos:column="34"/></name></name></expr>;<pos:position pos:line="78" pos:column="35"/></expr_stmt>
    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><call><name pos:line="79" pos:column="9">strcmp<pos:position pos:line="79" pos:column="15"/></name> <argument_list pos:line="79" pos:column="16">(<argument><expr><name pos:line="79" pos:column="17">tc_type<pos:position pos:line="79" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="26">"filter"<pos:position pos:line="79" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="35"/></argument_list></call> <operator pos:line="79" pos:column="36">==<pos:position pos:line="79" pos:column="38"/></operator> <literal type="number" pos:line="79" pos:column="39">0<pos:position pos:line="79" pos:column="40"/></literal></expr>)<pos:position pos:line="79" pos:column="41"/></condition><then pos:line="79" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="7">numberic_id<pos:position pos:line="80" pos:column="18"/></name> <operator pos:line="80" pos:column="19">=<pos:position pos:line="80" pos:column="20"/></operator> <name><name pos:line="80" pos:column="21">msg<pos:position pos:line="80" pos:column="24"/></name><operator pos:line="80" pos:column="24">-&gt;<pos:position pos:line="80" pos:column="29"/></operator><name pos:line="80" pos:column="26">tcm_parent<pos:position pos:line="80" pos:column="36"/></name></name></expr>;<pos:position pos:line="80" pos:column="37"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="82" pos:column="5">ssnprintf<pos:position pos:line="82" pos:column="14"/></name> <argument_list pos:line="82" pos:column="15">(<argument><expr><name pos:line="82" pos:column="16">tc_inst<pos:position pos:line="82" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="25">sizeof <argument_list pos:line="82" pos:column="32">(<argument><expr><name pos:line="82" pos:column="33">tc_inst<pos:position pos:line="82" pos:column="40"/></name></expr></argument>)<pos:position pos:line="82" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="43">"%s-%x:%x"<pos:position pos:line="82" pos:column="53"/></literal></expr></argument>,
	<argument><expr><operator pos:line="83" pos:column="9">(<pos:position pos:line="83" pos:column="10"/></operator><specifier pos:line="83" pos:column="10">const<pos:position pos:line="83" pos:column="15"/></specifier> <name pos:line="83" pos:column="16">char<pos:position pos:line="83" pos:column="20"/></name> <operator pos:line="83" pos:column="21">*<pos:position pos:line="83" pos:column="22"/></operator><operator pos:line="83" pos:column="22">)<pos:position pos:line="83" pos:column="23"/></operator> <call><name pos:line="83" pos:column="24">RTA_DATA<pos:position pos:line="83" pos:column="32"/></name> <argument_list pos:line="83" pos:column="33">(<argument><expr><name><name pos:line="83" pos:column="34">attrs<pos:position pos:line="83" pos:column="39"/></name><index pos:line="83" pos:column="39">[<expr><name pos:line="83" pos:column="40">TCA_KIND<pos:position pos:line="83" pos:column="48"/></name></expr>]<pos:position pos:line="83" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="83" pos:column="50"/></argument_list></call></expr></argument>,
	<argument><expr><name pos:line="84" pos:column="9">numberic_id<pos:position pos:line="84" pos:column="20"/></name> <operator pos:line="84" pos:column="21">&gt;&gt;<pos:position pos:line="84" pos:column="26"/></operator> <literal type="number" pos:line="84" pos:column="24">16<pos:position pos:line="84" pos:column="26"/></literal></expr></argument>,
	<argument><expr><name pos:line="85" pos:column="9">numberic_id<pos:position pos:line="85" pos:column="20"/></name> <operator pos:line="85" pos:column="21">&amp;<pos:position pos:line="85" pos:column="26"/></operator> <literal type="number" pos:line="85" pos:column="23">0x0000FFFF<pos:position pos:line="85" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="86" pos:column="4"/></block>

  <expr_stmt><expr><call><name pos:line="88" pos:column="3">DEBUG<pos:position pos:line="88" pos:column="8"/></name> <argument_list pos:line="88" pos:column="9">(<argument><expr><literal type="string" pos:line="88" pos:column="10">"netlink plugin: qos_filter: got %s for %s (%i)."<pos:position pos:line="88" pos:column="59"/></literal></expr></argument>,
      <argument><expr><name pos:line="89" pos:column="7">tc_type<pos:position pos:line="89" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="16">dev<pos:position pos:line="89" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="21">msg<pos:position pos:line="89" pos:column="24"/></name><operator pos:line="89" pos:column="24">-&gt;<pos:position pos:line="89" pos:column="29"/></operator><name pos:line="89" pos:column="26">tcm_ifindex<pos:position pos:line="89" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="39"/></expr_stmt>
  
  <if pos:line="91" pos:column="3">if <condition pos:line="91" pos:column="6">(<expr><call><name pos:line="91" pos:column="7">check_ignorelist<pos:position pos:line="91" pos:column="23"/></name> <argument_list pos:line="91" pos:column="24">(<argument><expr><name pos:line="91" pos:column="25">dev<pos:position pos:line="91" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="30">tc_type<pos:position pos:line="91" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="39">tc_inst<pos:position pos:line="91" pos:column="46"/></name></expr></argument>)<pos:position pos:line="91" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="48"/></condition><then pos:line="91" pos:column="48">
    <block type="pseudo"><return pos:line="92" pos:column="5">return <expr><operator pos:line="92" pos:column="12">(<pos:position pos:line="92" pos:column="13"/></operator><literal type="number" pos:line="92" pos:column="13">0<pos:position pos:line="92" pos:column="14"/></literal><operator pos:line="92" pos:column="14">)<pos:position pos:line="92" pos:column="15"/></operator></expr>;<pos:position pos:line="92" pos:column="16"/></return></block></then></if>

<cpp:if pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">if<pos:position pos:line="94" pos:column="4"/></cpp:directive> <expr><name pos:line="94" pos:column="5">HAVE_TCA_STATS2<pos:position pos:line="94" pos:column="20"/></name></expr></cpp:if>
  <if pos:line="95" pos:column="3">if <condition pos:line="95" pos:column="6">(<expr><name><name pos:line="95" pos:column="7">attrs<pos:position pos:line="95" pos:column="12"/></name><index pos:line="95" pos:column="12">[<expr><name pos:line="95" pos:column="13">TCA_STATS2<pos:position pos:line="95" pos:column="23"/></name></expr>]<pos:position pos:line="95" pos:column="24"/></index></name></expr>)<pos:position pos:line="95" pos:column="25"/></condition><then pos:line="95" pos:column="25">
  <block pos:line="96" pos:column="3">{
    <decl_stmt><decl><type><name><name pos:line="97" pos:column="5">struct<pos:position pos:line="97" pos:column="11"/></name> <name pos:line="97" pos:column="12">rtattr<pos:position pos:line="97" pos:column="18"/></name></name> <modifier pos:line="97" pos:column="19">*<pos:position pos:line="97" pos:column="20"/></modifier></type><name><name pos:line="97" pos:column="20">attrs_stats<pos:position pos:line="97" pos:column="31"/></name><index pos:line="97" pos:column="31">[<expr><name pos:line="97" pos:column="32">TCA_STATS_MAX<pos:position pos:line="97" pos:column="45"/></name> <operator pos:line="97" pos:column="46">+<pos:position pos:line="97" pos:column="47"/></operator> <literal type="number" pos:line="97" pos:column="48">1<pos:position pos:line="97" pos:column="49"/></literal></expr>]<pos:position pos:line="97" pos:column="50"/></index></name></decl>;<pos:position pos:line="97" pos:column="51"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="99" pos:column="5">memset<pos:position pos:line="99" pos:column="11"/></name> <argument_list pos:line="99" pos:column="12">(<argument><expr><name pos:line="99" pos:column="13">attrs_stats<pos:position pos:line="99" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="99" pos:column="26">'\0'<pos:position pos:line="99" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="99" pos:column="32">sizeof <argument_list pos:line="99" pos:column="39">(<argument><expr><name pos:line="99" pos:column="40">attrs_stats<pos:position pos:line="99" pos:column="51"/></name></expr></argument>)<pos:position pos:line="99" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="99" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="100" pos:column="5">parse_rtattr_nested<pos:position pos:line="100" pos:column="24"/></name> <argument_list pos:line="100" pos:column="25">(<argument><expr><name pos:line="100" pos:column="26">attrs_stats<pos:position pos:line="100" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="39">TCA_STATS_MAX<pos:position pos:line="100" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="54">attrs<pos:position pos:line="100" pos:column="59"/></name><index pos:line="100" pos:column="59">[<expr><name pos:line="100" pos:column="60">TCA_STATS2<pos:position pos:line="100" pos:column="70"/></name></expr>]<pos:position pos:line="100" pos:column="71"/></index></name></expr></argument>)<pos:position pos:line="100" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="73"/></expr_stmt>

    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><name><name pos:line="102" pos:column="9">attrs_stats<pos:position pos:line="102" pos:column="20"/></name><index pos:line="102" pos:column="20">[<expr><name pos:line="102" pos:column="21">TCA_STATS_BASIC<pos:position pos:line="102" pos:column="36"/></name></expr>]<pos:position pos:line="102" pos:column="37"/></index></name></expr>)<pos:position pos:line="102" pos:column="38"/></condition><then pos:line="102" pos:column="38">
    <block pos:line="103" pos:column="5">{
      <decl_stmt><decl><type><name><name pos:line="104" pos:column="7">struct<pos:position pos:line="104" pos:column="13"/></name> <name pos:line="104" pos:column="14">gnet_stats_basic<pos:position pos:line="104" pos:column="30"/></name></name></type> <name pos:line="104" pos:column="31">bs<pos:position pos:line="104" pos:column="33"/></name></decl>;<pos:position pos:line="104" pos:column="34"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="105" pos:column="7">char<pos:position pos:line="105" pos:column="11"/></name></type> <name><name pos:line="105" pos:column="12">type_instance<pos:position pos:line="105" pos:column="25"/></name><index pos:line="105" pos:column="25">[<expr><name pos:line="105" pos:column="26">DATA_MAX_NAME_LEN<pos:position pos:line="105" pos:column="43"/></name></expr>]<pos:position pos:line="105" pos:column="44"/></index></name></decl>;<pos:position pos:line="105" pos:column="45"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="107" pos:column="7">ssnprintf<pos:position pos:line="107" pos:column="16"/></name> <argument_list pos:line="107" pos:column="17">(<argument><expr><name pos:line="107" pos:column="18">type_instance<pos:position pos:line="107" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="107" pos:column="33">sizeof <argument_list pos:line="107" pos:column="40">(<argument><expr><name pos:line="107" pos:column="41">type_instance<pos:position pos:line="107" pos:column="54"/></name></expr></argument>)<pos:position pos:line="107" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="57">"%s-%s"<pos:position pos:line="107" pos:column="64"/></literal></expr></argument>,
	  <argument><expr><name pos:line="108" pos:column="11">tc_type<pos:position pos:line="108" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="20">tc_inst<pos:position pos:line="108" pos:column="27"/></name></expr></argument>)<pos:position pos:line="108" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="29"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="110" pos:column="7">memset<pos:position pos:line="110" pos:column="13"/></name> <argument_list pos:line="110" pos:column="14">(<argument><expr><operator pos:line="110" pos:column="15">&amp;<pos:position pos:line="110" pos:column="20"/></operator><name pos:line="110" pos:column="16">bs<pos:position pos:line="110" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="110" pos:column="20">'\0'<pos:position pos:line="110" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="110" pos:column="26">sizeof <argument_list pos:line="110" pos:column="33">(<argument><expr><name pos:line="110" pos:column="34">bs<pos:position pos:line="110" pos:column="36"/></name></expr></argument>)<pos:position pos:line="110" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="110" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="111" pos:column="7">memcpy<pos:position pos:line="111" pos:column="13"/></name> <argument_list pos:line="111" pos:column="14">(<argument><expr><operator pos:line="111" pos:column="15">&amp;<pos:position pos:line="111" pos:column="20"/></operator><name pos:line="111" pos:column="16">bs<pos:position pos:line="111" pos:column="18"/></name></expr></argument>, <argument><expr><call><name pos:line="111" pos:column="20">RTA_DATA<pos:position pos:line="111" pos:column="28"/></name> <argument_list pos:line="111" pos:column="29">(<argument><expr><name><name pos:line="111" pos:column="30">attrs_stats<pos:position pos:line="111" pos:column="41"/></name><index pos:line="111" pos:column="41">[<expr><name pos:line="111" pos:column="42">TCA_STATS_BASIC<pos:position pos:line="111" pos:column="57"/></name></expr>]<pos:position pos:line="111" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="111" pos:column="59"/></argument_list></call></expr></argument>,
	  <argument><expr><call><name pos:line="112" pos:column="11">MIN<pos:position pos:line="112" pos:column="14"/></name> <argument_list pos:line="112" pos:column="15">(<argument><expr><call><name pos:line="112" pos:column="16">RTA_PAYLOAD<pos:position pos:line="112" pos:column="27"/></name> <argument_list pos:line="112" pos:column="28">(<argument><expr><name><name pos:line="112" pos:column="29">attrs_stats<pos:position pos:line="112" pos:column="40"/></name><index pos:line="112" pos:column="40">[<expr><name pos:line="112" pos:column="41">TCA_STATS_BASIC<pos:position pos:line="112" pos:column="56"/></name></expr>]<pos:position pos:line="112" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="112" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="112" pos:column="60">sizeof<argument_list pos:line="112" pos:column="66">(<argument><expr><name pos:line="112" pos:column="67">bs<pos:position pos:line="112" pos:column="69"/></name></expr></argument>)<pos:position pos:line="112" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="112" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="73"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="114" pos:column="7">submit_one<pos:position pos:line="114" pos:column="17"/></name> <argument_list pos:line="114" pos:column="18">(<argument><expr><name pos:line="114" pos:column="19">dev<pos:position pos:line="114" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="24">"ipt_bytes"<pos:position pos:line="114" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="37">type_instance<pos:position pos:line="114" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="52">bs<pos:position pos:line="114" pos:column="54"/></name><operator pos:line="114" pos:column="54">.<pos:position pos:line="114" pos:column="55"/></operator><name pos:line="114" pos:column="55">bytes<pos:position pos:line="114" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="115" pos:column="7">submit_one<pos:position pos:line="115" pos:column="17"/></name> <argument_list pos:line="115" pos:column="18">(<argument><expr><name pos:line="115" pos:column="19">dev<pos:position pos:line="115" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="24">"ipt_packets"<pos:position pos:line="115" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="115" pos:column="39">type_instance<pos:position pos:line="115" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="54">bs<pos:position pos:line="115" pos:column="56"/></name><operator pos:line="115" pos:column="56">.<pos:position pos:line="115" pos:column="57"/></operator><name pos:line="115" pos:column="57">packets<pos:position pos:line="115" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="116" pos:column="6"/></block></then></if>
  }<pos:position pos:line="117" pos:column="4"/></block></then>
<cpp:endif pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">endif<pos:position pos:line="118" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="118" pos:column="8">/* TCA_STATS2 */</comment>
<cpp:if pos:line="119" pos:column="1">#<cpp:directive pos:line="119" pos:column="2">if<pos:position pos:line="119" pos:column="4"/></cpp:directive> <expr><name pos:line="119" pos:column="5">HAVE_TCA_STATS<pos:position pos:line="119" pos:column="19"/></name> <operator pos:line="119" pos:column="20">&amp;&amp;<pos:position pos:line="119" pos:column="30"/></operator> <name pos:line="119" pos:column="23">HAVE_TCA_STATS2<pos:position pos:line="119" pos:column="38"/></name></expr></cpp:if>
  <elseif pos:line="120" pos:column="3">else
<cpp:endif pos:line="121" pos:column="1">#<cpp:directive pos:line="121" pos:column="2">endif<pos:position pos:line="121" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">if<pos:position pos:line="122" pos:column="4"/></cpp:directive> <expr><name pos:line="122" pos:column="5">HAVE_TCA_STATS<pos:position pos:line="122" pos:column="19"/></name></expr></cpp:if>
  <if pos:line="123" pos:column="3">if <condition pos:line="123" pos:column="6">(<expr><name><name pos:line="123" pos:column="7">attrs<pos:position pos:line="123" pos:column="12"/></name><index pos:line="123" pos:column="12">[<expr><name pos:line="123" pos:column="13">TCA_STATS<pos:position pos:line="123" pos:column="22"/></name></expr>]<pos:position pos:line="123" pos:column="23"/></index></name> <operator pos:line="123" pos:column="24">!=<pos:position pos:line="123" pos:column="26"/></operator> <name pos:line="123" pos:column="27">NULL<pos:position pos:line="123" pos:column="31"/></name></expr>)<pos:position pos:line="123" pos:column="32"/></condition><then pos:line="123" pos:column="32">
  <block pos:line="124" pos:column="3">{
    <decl_stmt><decl><type><name><name pos:line="125" pos:column="5">struct<pos:position pos:line="125" pos:column="11"/></name> <name pos:line="125" pos:column="12">tc_stats<pos:position pos:line="125" pos:column="20"/></name></name></type> <name pos:line="125" pos:column="21">ts<pos:position pos:line="125" pos:column="23"/></name></decl>;<pos:position pos:line="125" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="126" pos:column="5">char<pos:position pos:line="126" pos:column="9"/></name></type> <name><name pos:line="126" pos:column="10">type_instance<pos:position pos:line="126" pos:column="23"/></name><index pos:line="126" pos:column="23">[<expr><name pos:line="126" pos:column="24">DATA_MAX_NAME_LEN<pos:position pos:line="126" pos:column="41"/></name></expr>]<pos:position pos:line="126" pos:column="42"/></index></name></decl>;<pos:position pos:line="126" pos:column="43"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="128" pos:column="5">ssnprintf<pos:position pos:line="128" pos:column="14"/></name> <argument_list pos:line="128" pos:column="15">(<argument><expr><name pos:line="128" pos:column="16">type_instance<pos:position pos:line="128" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="128" pos:column="31">sizeof <argument_list pos:line="128" pos:column="38">(<argument><expr><name pos:line="128" pos:column="39">type_instance<pos:position pos:line="128" pos:column="52"/></name></expr></argument>)<pos:position pos:line="128" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="55">"%s-%s"<pos:position pos:line="128" pos:column="62"/></literal></expr></argument>,
	<argument><expr><name pos:line="129" pos:column="9">tc_type<pos:position pos:line="129" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="18">tc_inst<pos:position pos:line="129" pos:column="25"/></name></expr></argument>)<pos:position pos:line="129" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="131" pos:column="5">memset<pos:position pos:line="131" pos:column="11"/></name><argument_list pos:line="131" pos:column="11">(<argument><expr><operator pos:line="131" pos:column="12">&amp;<pos:position pos:line="131" pos:column="17"/></operator><name pos:line="131" pos:column="13">ts<pos:position pos:line="131" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="131" pos:column="17">'\0'<pos:position pos:line="131" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="131" pos:column="23">sizeof <argument_list pos:line="131" pos:column="30">(<argument><expr><name pos:line="131" pos:column="31">ts<pos:position pos:line="131" pos:column="33"/></name></expr></argument>)<pos:position pos:line="131" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="131" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="132" pos:column="5">memcpy<pos:position pos:line="132" pos:column="11"/></name><argument_list pos:line="132" pos:column="11">(<argument><expr><operator pos:line="132" pos:column="12">&amp;<pos:position pos:line="132" pos:column="17"/></operator><name pos:line="132" pos:column="13">ts<pos:position pos:line="132" pos:column="15"/></name></expr></argument>, <argument><expr><call><name pos:line="132" pos:column="17">RTA_DATA<pos:position pos:line="132" pos:column="25"/></name> <argument_list pos:line="132" pos:column="26">(<argument><expr><name><name pos:line="132" pos:column="27">attrs<pos:position pos:line="132" pos:column="32"/></name><index pos:line="132" pos:column="32">[<expr><name pos:line="132" pos:column="33">TCA_STATS<pos:position pos:line="132" pos:column="42"/></name></expr>]<pos:position pos:line="132" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="132" pos:column="44"/></argument_list></call></expr></argument>,
	<argument><expr><call><name pos:line="133" pos:column="9">MIN<pos:position pos:line="133" pos:column="12"/></name> <argument_list pos:line="133" pos:column="13">(<argument><expr><call><name pos:line="133" pos:column="14">RTA_PAYLOAD<pos:position pos:line="133" pos:column="25"/></name> <argument_list pos:line="133" pos:column="26">(<argument><expr><name><name pos:line="133" pos:column="27">attrs<pos:position pos:line="133" pos:column="32"/></name><index pos:line="133" pos:column="32">[<expr><name pos:line="133" pos:column="33">TCA_STATS<pos:position pos:line="133" pos:column="42"/></name></expr>]<pos:position pos:line="133" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="133" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="133" pos:column="46">sizeof <argument_list pos:line="133" pos:column="53">(<argument><expr><name pos:line="133" pos:column="54">ts<pos:position pos:line="133" pos:column="56"/></name></expr></argument>)<pos:position pos:line="133" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="133" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="133" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="135" pos:column="5">submit_one<pos:position pos:line="135" pos:column="15"/></name> <argument_list pos:line="135" pos:column="16">(<argument><expr><name pos:line="135" pos:column="17">dev<pos:position pos:line="135" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="22">"ipt_bytes"<pos:position pos:line="135" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="135" pos:column="35">type_instance<pos:position pos:line="135" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="135" pos:column="50">ts<pos:position pos:line="135" pos:column="52"/></name><operator pos:line="135" pos:column="52">.<pos:position pos:line="135" pos:column="53"/></operator><name pos:line="135" pos:column="53">bytes<pos:position pos:line="135" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="136" pos:column="5">submit_one<pos:position pos:line="136" pos:column="15"/></name> <argument_list pos:line="136" pos:column="16">(<argument><expr><name pos:line="136" pos:column="17">dev<pos:position pos:line="136" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="22">"ipt_packets"<pos:position pos:line="136" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="136" pos:column="37">type_instance<pos:position pos:line="136" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="52">ts<pos:position pos:line="136" pos:column="54"/></name><operator pos:line="136" pos:column="54">.<pos:position pos:line="136" pos:column="55"/></operator><name pos:line="136" pos:column="55">packets<pos:position pos:line="136" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="137" pos:column="4"/></block></then></if></elseif>
<cpp:endif pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">endif<pos:position pos:line="138" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="138" pos:column="8">/* TCA_STATS */</comment>
<cpp:if pos:line="139" pos:column="1">#<cpp:directive pos:line="139" pos:column="2">if<pos:position pos:line="139" pos:column="4"/></cpp:directive> <expr><name pos:line="139" pos:column="5">HAVE_TCA_STATS<pos:position pos:line="139" pos:column="19"/></name> <operator pos:line="139" pos:column="20">||<pos:position pos:line="139" pos:column="22"/></operator> <name pos:line="139" pos:column="23">HAVE_TCA_STATS2<pos:position pos:line="139" pos:column="38"/></name></expr></cpp:if>
  <else pos:line="140" pos:column="3">else
<cpp:endif pos:line="141" pos:column="1">#<cpp:directive pos:line="141" pos:column="2">endif<pos:position pos:line="141" pos:column="7"/></cpp:directive></cpp:endif>
  <block pos:line="142" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="143" pos:column="5">DEBUG<pos:position pos:line="143" pos:column="10"/></name> <argument_list pos:line="143" pos:column="11">(<argument><expr><literal type="string" pos:line="143" pos:column="12">"netlink plugin: qos_filter: Have neither TCA_STATS2 nor "<pos:position pos:line="143" pos:column="70"/></literal>
	<literal type="string" pos:line="144" pos:column="9">"TCA_STATS."<pos:position pos:line="144" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="145" pos:column="4"/></block></else></if>

  <return pos:line="147" pos:column="3">return <expr><operator pos:line="147" pos:column="10">(<pos:position pos:line="147" pos:column="11"/></operator><literal type="number" pos:line="147" pos:column="11">0<pos:position pos:line="147" pos:column="12"/></literal><operator pos:line="147" pos:column="12">)<pos:position pos:line="147" pos:column="13"/></operator></expr>;<pos:position pos:line="147" pos:column="14"/></return>
}<pos:position pos:line="148" pos:column="2"/></block></function></unit>

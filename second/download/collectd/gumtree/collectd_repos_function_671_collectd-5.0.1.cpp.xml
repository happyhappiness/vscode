<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_671_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">email_read<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">type_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">ptr<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">double<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">score_old<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">score_count_old<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">disabled<pos:position pos:line="8" pos:column="21"/></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><operator pos:line="9" pos:column="25">-<pos:position pos:line="9" pos:column="26"/></operator><literal type="number" pos:line="9" pos:column="26">1<pos:position pos:line="9" pos:column="27"/></literal><operator pos:line="9" pos:column="27">)<pos:position pos:line="9" pos:column="28"/></operator></expr>;<pos:position pos:line="9" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="11" pos:column="9">/* email count */</comment>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">pthread_mutex_lock<pos:position pos:line="12" pos:column="27"/></name> <argument_list pos:line="12" pos:column="28">(<argument><expr><operator pos:line="12" pos:column="29">&amp;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="30">count_mutex<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">copy_type_list<pos:position pos:line="14" pos:column="23"/></name> <argument_list pos:line="14" pos:column="24">(<argument><expr><operator pos:line="14" pos:column="25">&amp;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="26">list_count<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="38">&amp;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="39">list_count_copy<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">pthread_mutex_unlock<pos:position pos:line="16" pos:column="29"/></name> <argument_list pos:line="16" pos:column="30">(<argument><expr><operator pos:line="16" pos:column="31">&amp;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="32">count_mutex<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>

	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">ptr<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <name><name pos:line="18" pos:column="20">list_count_copy<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">.<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="36">head<pos:position pos:line="18" pos:column="40"/></name></name></expr>;<pos:position pos:line="18" pos:column="41"/></init> <condition><expr><name pos:line="18" pos:column="42">NULL<pos:position pos:line="18" pos:column="46"/></name> <operator pos:line="18" pos:column="47">!=<pos:position pos:line="18" pos:column="49"/></operator> <name pos:line="18" pos:column="50">ptr<pos:position pos:line="18" pos:column="53"/></name></expr>;<pos:position pos:line="18" pos:column="54"/></condition> <incr><expr><name pos:line="18" pos:column="55">ptr<pos:position pos:line="18" pos:column="58"/></name> <operator pos:line="18" pos:column="59">=<pos:position pos:line="18" pos:column="60"/></operator> <name><name pos:line="18" pos:column="61">ptr<pos:position pos:line="18" pos:column="64"/></name><operator pos:line="18" pos:column="64">-&gt;<pos:position pos:line="18" pos:column="69"/></operator><name pos:line="18" pos:column="66">next<pos:position pos:line="18" pos:column="70"/></name></name></expr></incr>)<pos:position pos:line="18" pos:column="71"/></control> <block pos:line="18" pos:column="72">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">email_submit<pos:position pos:line="19" pos:column="29"/></name> <argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="string" pos:line="19" pos:column="31">"email_count"<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="46">ptr<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">-&gt;<pos:position pos:line="19" pos:column="54"/></operator><name pos:line="19" pos:column="51">name<pos:position pos:line="19" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="57">ptr<pos:position pos:line="19" pos:column="60"/></name><operator pos:line="19" pos:column="60">-&gt;<pos:position pos:line="19" pos:column="65"/></operator><name pos:line="19" pos:column="62">value<pos:position pos:line="19" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="69"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></for>

	<comment type="block" pos:line="22" pos:column="9">/* email size */</comment>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">pthread_mutex_lock<pos:position pos:line="23" pos:column="27"/></name> <argument_list pos:line="23" pos:column="28">(<argument><expr><operator pos:line="23" pos:column="29">&amp;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="30">size_mutex<pos:position pos:line="23" pos:column="40"/></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">copy_type_list<pos:position pos:line="25" pos:column="23"/></name> <argument_list pos:line="25" pos:column="24">(<argument><expr><operator pos:line="25" pos:column="25">&amp;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="26">list_size<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="37">&amp;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="38">list_size_copy<pos:position pos:line="25" pos:column="52"/></name></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="54"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="27" pos:column="9">pthread_mutex_unlock<pos:position pos:line="27" pos:column="29"/></name> <argument_list pos:line="27" pos:column="30">(<argument><expr><operator pos:line="27" pos:column="31">&amp;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="32">size_mutex<pos:position pos:line="27" pos:column="42"/></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>

	<for pos:line="29" pos:column="9">for <control pos:line="29" pos:column="13">(<init><expr><name pos:line="29" pos:column="14">ptr<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <name><name pos:line="29" pos:column="20">list_size_copy<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">.<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="35">head<pos:position pos:line="29" pos:column="39"/></name></name></expr>;<pos:position pos:line="29" pos:column="40"/></init> <condition><expr><name pos:line="29" pos:column="41">NULL<pos:position pos:line="29" pos:column="45"/></name> <operator pos:line="29" pos:column="46">!=<pos:position pos:line="29" pos:column="48"/></operator> <name pos:line="29" pos:column="49">ptr<pos:position pos:line="29" pos:column="52"/></name></expr>;<pos:position pos:line="29" pos:column="53"/></condition> <incr><expr><name pos:line="29" pos:column="54">ptr<pos:position pos:line="29" pos:column="57"/></name> <operator pos:line="29" pos:column="58">=<pos:position pos:line="29" pos:column="59"/></operator> <name><name pos:line="29" pos:column="60">ptr<pos:position pos:line="29" pos:column="63"/></name><operator pos:line="29" pos:column="63">-&gt;<pos:position pos:line="29" pos:column="68"/></operator><name pos:line="29" pos:column="65">next<pos:position pos:line="29" pos:column="69"/></name></name></expr></incr>)<pos:position pos:line="29" pos:column="70"/></control> <block pos:line="29" pos:column="71">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">email_submit<pos:position pos:line="30" pos:column="29"/></name> <argument_list pos:line="30" pos:column="30">(<argument><expr><literal type="string" pos:line="30" pos:column="31">"email_size"<pos:position pos:line="30" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="45">ptr<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">-&gt;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="50">name<pos:position pos:line="30" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="56">ptr<pos:position pos:line="30" pos:column="59"/></name><operator pos:line="30" pos:column="59">-&gt;<pos:position pos:line="30" pos:column="64"/></operator><name pos:line="30" pos:column="61">value<pos:position pos:line="30" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></for>

	<comment type="block" pos:line="33" pos:column="9">/* spam score */</comment>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">pthread_mutex_lock<pos:position pos:line="34" pos:column="27"/></name> <argument_list pos:line="34" pos:column="28">(<argument><expr><operator pos:line="34" pos:column="29">&amp;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="30">score_mutex<pos:position pos:line="34" pos:column="41"/></name></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><name pos:line="36" pos:column="9">score_old<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <name pos:line="36" pos:column="21">score<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="37" pos:column="9">score_count_old<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <name pos:line="37" pos:column="27">score_count<pos:position pos:line="37" pos:column="38"/></name></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name pos:line="38" pos:column="9">score<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <literal type="number" pos:line="38" pos:column="17">0.0<pos:position pos:line="38" pos:column="20"/></literal></expr>;<pos:position pos:line="38" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="39" pos:column="9">score_count<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <literal type="number" pos:line="39" pos:column="23">0<pos:position pos:line="39" pos:column="24"/></literal></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="41" pos:column="9">pthread_mutex_unlock<pos:position pos:line="41" pos:column="29"/></name> <argument_list pos:line="41" pos:column="30">(<argument><expr><operator pos:line="41" pos:column="31">&amp;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="32">score_mutex<pos:position pos:line="41" pos:column="43"/></name></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="45"/></expr_stmt>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">score_count_old<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">&gt;<pos:position pos:line="43" pos:column="33"/></operator> <literal type="number" pos:line="43" pos:column="31">0<pos:position pos:line="43" pos:column="32"/></literal></expr>)<pos:position pos:line="43" pos:column="33"/></condition><then pos:line="43" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="17">email_submit<pos:position pos:line="44" pos:column="29"/></name> <argument_list pos:line="44" pos:column="30">(<argument><expr><literal type="string" pos:line="44" pos:column="31">"spam_score"<pos:position pos:line="44" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="45">""<pos:position pos:line="44" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="49">score_old<pos:position pos:line="44" pos:column="58"/></name></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="46" pos:column="9">/* spam checks */</comment>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">pthread_mutex_lock<pos:position pos:line="47" pos:column="27"/></name> <argument_list pos:line="47" pos:column="28">(<argument><expr><operator pos:line="47" pos:column="29">&amp;<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="30">check_mutex<pos:position pos:line="47" pos:column="41"/></name></expr></argument>)<pos:position pos:line="47" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="49" pos:column="9">copy_type_list<pos:position pos:line="49" pos:column="23"/></name> <argument_list pos:line="49" pos:column="24">(<argument><expr><operator pos:line="49" pos:column="25">&amp;<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="26">list_check<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="38">&amp;<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="39">list_check_copy<pos:position pos:line="49" pos:column="54"/></name></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="56"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="51" pos:column="9">pthread_mutex_unlock<pos:position pos:line="51" pos:column="29"/></name> <argument_list pos:line="51" pos:column="30">(<argument><expr><operator pos:line="51" pos:column="31">&amp;<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="32">check_mutex<pos:position pos:line="51" pos:column="43"/></name></expr></argument>)<pos:position pos:line="51" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="45"/></expr_stmt>

	<for pos:line="53" pos:column="9">for <control pos:line="53" pos:column="13">(<init><expr><name pos:line="53" pos:column="14">ptr<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <name><name pos:line="53" pos:column="20">list_check_copy<pos:position pos:line="53" pos:column="35"/></name><operator pos:line="53" pos:column="35">.<pos:position pos:line="53" pos:column="36"/></operator><name pos:line="53" pos:column="36">head<pos:position pos:line="53" pos:column="40"/></name></name></expr>;<pos:position pos:line="53" pos:column="41"/></init> <condition><expr><name pos:line="53" pos:column="42">NULL<pos:position pos:line="53" pos:column="46"/></name> <operator pos:line="53" pos:column="47">!=<pos:position pos:line="53" pos:column="49"/></operator> <name pos:line="53" pos:column="50">ptr<pos:position pos:line="53" pos:column="53"/></name></expr>;<pos:position pos:line="53" pos:column="54"/></condition> <incr><expr><name pos:line="53" pos:column="55">ptr<pos:position pos:line="53" pos:column="58"/></name> <operator pos:line="53" pos:column="59">=<pos:position pos:line="53" pos:column="60"/></operator> <name><name pos:line="53" pos:column="61">ptr<pos:position pos:line="53" pos:column="64"/></name><operator pos:line="53" pos:column="64">-&gt;<pos:position pos:line="53" pos:column="69"/></operator><name pos:line="53" pos:column="66">next<pos:position pos:line="53" pos:column="70"/></name></name></expr></incr>)<pos:position pos:line="53" pos:column="71"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="17">email_submit<pos:position pos:line="54" pos:column="29"/></name> <argument_list pos:line="54" pos:column="30">(<argument><expr><literal type="string" pos:line="54" pos:column="31">"spam_check"<pos:position pos:line="54" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="45">ptr<pos:position pos:line="54" pos:column="48"/></name><operator pos:line="54" pos:column="48">-&gt;<pos:position pos:line="54" pos:column="53"/></operator><name pos:line="54" pos:column="50">name<pos:position pos:line="54" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="56">ptr<pos:position pos:line="54" pos:column="59"/></name><operator pos:line="54" pos:column="59">-&gt;<pos:position pos:line="54" pos:column="64"/></operator><name pos:line="54" pos:column="61">value<pos:position pos:line="54" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="68"/></expr_stmt></block></for>

	<return pos:line="56" pos:column="9">return <expr><operator pos:line="56" pos:column="16">(<pos:position pos:line="56" pos:column="17"/></operator><literal type="number" pos:line="56" pos:column="17">0<pos:position pos:line="56" pos:column="18"/></literal><operator pos:line="56" pos:column="18">)<pos:position pos:line="56" pos:column="19"/></operator></expr>;<pos:position pos:line="56" pos:column="20"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

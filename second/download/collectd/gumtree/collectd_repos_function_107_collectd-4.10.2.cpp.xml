<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_107_collectd-4.10.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">lt_module<pos:position pos:line="1" pos:column="17"/></name></type>
<name pos:line="2" pos:column="1">vm_open<pos:position pos:line="2" pos:column="8"/></name> <parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">lt_user_data<pos:position pos:line="2" pos:column="22"/></name> <name pos:line="2" pos:column="23">LT__UNUSED<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">loader_data<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">filename<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
         <parameter><decl><type><name pos:line="3" pos:column="10">lt_dladvise<pos:position pos:line="3" pos:column="21"/></name> <name pos:line="3" pos:column="22">LT__UNUSED<pos:position pos:line="3" pos:column="32"/></name></type> <name pos:line="3" pos:column="33">advise<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="40"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">lt_module<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">module<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><call><name pos:line="5" pos:column="22">lt__strdup<pos:position pos:line="5" pos:column="32"/></name> <argument_list pos:line="5" pos:column="33">(<argument><expr><name pos:line="5" pos:column="34">filename<pos:position pos:line="5" pos:column="42"/></name></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">dld_link<pos:position pos:line="7" pos:column="15"/></name> <argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">filename<pos:position pos:line="7" pos:column="25"/></name></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call> <operator pos:line="7" pos:column="27">!=<pos:position pos:line="7" pos:column="29"/></operator> <literal type="number" pos:line="7" pos:column="30">0<pos:position pos:line="7" pos:column="31"/></literal></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32">
    <block pos:line="8" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="9" pos:column="7">LT__SETERROR<pos:position pos:line="9" pos:column="19"/></name> <argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">CANNOT_OPEN<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">FREE<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">module<pos:position pos:line="10" pos:column="19"/></name></expr></argument>)<pos:position pos:line="10" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

  <return pos:line="13" pos:column="3">return <expr><name pos:line="13" pos:column="10">module<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

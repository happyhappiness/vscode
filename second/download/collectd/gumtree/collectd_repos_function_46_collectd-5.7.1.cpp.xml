<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_46_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">lt_dlforeachfile<pos:position pos:line="2" pos:column="17"/></name> <parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">search_path<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>,
		  <parameter><function_decl><type><name pos:line="3" pos:column="19">int<pos:position pos:line="3" pos:column="22"/></name></type> (<modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier><name pos:line="3" pos:column="25">func<pos:position pos:line="3" pos:column="29"/></name>) <parameter_list pos:line="3" pos:column="31">(<parameter><decl><type><specifier pos:line="3" pos:column="32">const<pos:position pos:line="3" pos:column="37"/></specifier> <name pos:line="3" pos:column="38">char<pos:position pos:line="3" pos:column="42"/></name> <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier></type><name pos:line="3" pos:column="44">filename<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="54">void<pos:position pos:line="3" pos:column="58"/></name> <modifier pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></modifier></type><name pos:line="3" pos:column="60">data<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="65"/></parameter_list></function_decl></parameter>,
		  <parameter><decl><type><name pos:line="4" pos:column="19">void<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">data<pos:position pos:line="4" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="30"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">is_done<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">file_worker_func<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier><modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">fpptr<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><operator pos:line="7" pos:column="30">&amp;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="31">func<pos:position pos:line="7" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">search_path<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19">
    <block pos:line="10" pos:column="5">{
      <comment type="block" pos:line="11" pos:column="7">/* If a specific path was passed, search only the directories
	 listed in it.  */</comment>
      <expr_stmt><expr><name pos:line="13" pos:column="7">is_done<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <call><name pos:line="13" pos:column="17">foreach_dirinpath<pos:position pos:line="13" pos:column="34"/></name> <argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">search_path<pos:position pos:line="13" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="49">0<pos:position pos:line="13" pos:column="50"/></literal></expr></argument>,
				   <argument><expr><name pos:line="14" pos:column="36">foreachfile_callback<pos:position pos:line="14" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="58">fpptr<pos:position pos:line="14" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="65">data<pos:position pos:line="14" pos:column="69"/></name></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then>
  <else pos:line="16" pos:column="3">else
    <block pos:line="17" pos:column="5">{
      <comment type="block" pos:line="18" pos:column="7">/* Otherwise search the default paths.  */</comment>
      <expr_stmt><expr><name pos:line="19" pos:column="7">is_done<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <call><name pos:line="19" pos:column="17">foreach_dirinpath<pos:position pos:line="19" pos:column="34"/></name> <argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">user_search_path<pos:position pos:line="19" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="54">0<pos:position pos:line="19" pos:column="55"/></literal></expr></argument>,
				   <argument><expr><name pos:line="20" pos:column="36">foreachfile_callback<pos:position pos:line="20" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="58">fpptr<pos:position pos:line="20" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="65">data<pos:position pos:line="20" pos:column="69"/></name></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="71"/></expr_stmt>
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><operator pos:line="21" pos:column="11">!<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">is_done<pos:position pos:line="21" pos:column="19"/></name></expr>)<pos:position pos:line="21" pos:column="20"/></condition><then pos:line="21" pos:column="20">
	<block pos:line="22" pos:column="9">{
	  <expr_stmt><expr><name pos:line="23" pos:column="11">is_done<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <call><name pos:line="23" pos:column="21">foreach_dirinpath<pos:position pos:line="23" pos:column="38"/></name> <argument_list pos:line="23" pos:column="39">(<argument><expr><call><name pos:line="23" pos:column="40">getenv<pos:position pos:line="23" pos:column="46"/></name><argument_list pos:line="23" pos:column="46">(<argument><expr><name pos:line="23" pos:column="47">LTDL_SEARCHPATH_VAR<pos:position pos:line="23" pos:column="66"/></name></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="69">0<pos:position pos:line="23" pos:column="70"/></literal></expr></argument>,
				       <argument><expr><name pos:line="24" pos:column="40">foreachfile_callback<pos:position pos:line="24" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="62">fpptr<pos:position pos:line="24" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="69">data<pos:position pos:line="24" pos:column="73"/></name></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

<cpp:if pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">if<pos:position pos:line="27" pos:column="4"/></cpp:directive> <expr><call><name pos:line="27" pos:column="5">defined<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">LT_MODULE_PATH_VAR<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr></cpp:if>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><operator pos:line="28" pos:column="11">!<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="12">is_done<pos:position pos:line="28" pos:column="19"/></name></expr>)<pos:position pos:line="28" pos:column="20"/></condition><then pos:line="28" pos:column="20">
	<block pos:line="29" pos:column="9">{
	  <expr_stmt><expr><name pos:line="30" pos:column="11">is_done<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <call><name pos:line="30" pos:column="21">foreach_dirinpath<pos:position pos:line="30" pos:column="38"/></name> <argument_list pos:line="30" pos:column="39">(<argument><expr><call><name pos:line="30" pos:column="40">getenv<pos:position pos:line="30" pos:column="46"/></name><argument_list pos:line="30" pos:column="46">(<argument><expr><name pos:line="30" pos:column="47">LT_MODULE_PATH_VAR<pos:position pos:line="30" pos:column="65"/></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="68">0<pos:position pos:line="30" pos:column="69"/></literal></expr></argument>,
				       <argument><expr><name pos:line="31" pos:column="40">foreachfile_callback<pos:position pos:line="31" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="62">fpptr<pos:position pos:line="31" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="69">data<pos:position pos:line="31" pos:column="73"/></name></expr></argument>)<pos:position pos:line="31" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">if<pos:position pos:line="34" pos:column="4"/></cpp:directive> <expr><call><name pos:line="34" pos:column="5">defined<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">LT_DLSEARCH_PATH<pos:position pos:line="34" pos:column="29"/></name></expr></argument>)<pos:position pos:line="34" pos:column="30"/></argument_list></call></expr></cpp:if>
      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><operator pos:line="35" pos:column="11">!<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">is_done<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">&amp;&amp;<pos:position pos:line="35" pos:column="30"/></operator> <operator pos:line="35" pos:column="23">*<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="24">sys_dlsearch_path<pos:position pos:line="35" pos:column="41"/></name></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42">
	<block pos:line="36" pos:column="9">{
	  <expr_stmt><expr><name pos:line="37" pos:column="11">is_done<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <call><name pos:line="37" pos:column="21">foreach_dirinpath<pos:position pos:line="37" pos:column="38"/></name> <argument_list pos:line="37" pos:column="39">(<argument><expr><name pos:line="37" pos:column="40">sys_dlsearch_path<pos:position pos:line="37" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="59">0<pos:position pos:line="37" pos:column="60"/></literal></expr></argument>,
				       <argument><expr><name pos:line="38" pos:column="40">foreachfile_callback<pos:position pos:line="38" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="62">fpptr<pos:position pos:line="38" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="69">data<pos:position pos:line="38" pos:column="73"/></name></expr></argument>)<pos:position pos:line="38" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="41" pos:column="6"/></block></else></if>

  <return pos:line="43" pos:column="3">return <expr><name pos:line="43" pos:column="10">is_done<pos:position pos:line="43" pos:column="17"/></name></expr>;<pos:position pos:line="43" pos:column="18"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

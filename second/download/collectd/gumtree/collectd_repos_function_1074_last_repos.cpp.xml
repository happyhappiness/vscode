<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1074_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">socket_reinit<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">socket_adapter_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">self<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <block pos:line="1" pos:column="50">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">errbuff<pos:position pos:line="2" pos:column="15"/></name><index pos:line="2" pos:column="15">[<expr><name pos:line="2" pos:column="16">MCELOG_BUFF_SIZE<pos:position pos:line="2" pos:column="32"/></name></expr>]<pos:position pos:line="2" pos:column="33"/></index></name></decl>;<pos:position pos:line="2" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><operator pos:line="3" pos:column="13">-<pos:position pos:line="3" pos:column="14"/></operator><literal type="number" pos:line="3" pos:column="14">1<pos:position pos:line="3" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cdtime_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">interval<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><call><name pos:line="4" pos:column="23">plugin_get_interval<pos:position pos:line="4" pos:column="42"/></name><argument_list pos:line="4" pos:column="42">()<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">timeval<pos:position pos:line="5" pos:column="17"/></name></name></type> <name pos:line="5" pos:column="18">socket_timeout<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><call><name pos:line="5" pos:column="35">CDTIME_T_TO_TIMEVAL<pos:position pos:line="5" pos:column="54"/></name><argument_list pos:line="5" pos:column="54">(<argument><expr><name pos:line="5" pos:column="55">interval<pos:position pos:line="5" pos:column="63"/></name></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="65"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* synchronization via write lock since sock_fd may be changed here */</comment>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">pthread_rwlock_wrlock<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><operator pos:line="8" pos:column="25">&amp;<pos:position pos:line="8" pos:column="30"/></operator><name><name pos:line="8" pos:column="26">self<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">-&gt;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="32">lock<pos:position pos:line="8" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">self<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">sock_fd<pos:position pos:line="9" pos:column="16"/></name></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator>
      <call><name pos:line="10" pos:column="7">socket<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">PF_UNIX<pos:position pos:line="10" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="23">SOCK_STREAM<pos:position pos:line="10" pos:column="34"/></name> <operator pos:line="10" pos:column="35">|<pos:position pos:line="10" pos:column="36"/></operator> <name pos:line="10" pos:column="37">SOCK_CLOEXEC<pos:position pos:line="10" pos:column="49"/></name> <operator pos:line="10" pos:column="50">|<pos:position pos:line="10" pos:column="51"/></operator> <name pos:line="10" pos:column="52">SOCK_NONBLOCK<pos:position pos:line="10" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="67">0<pos:position pos:line="10" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="70"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name><name pos:line="11" pos:column="7">self<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">sock_fd<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">&lt;<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25"> <block pos:line="11" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">MCELOG_PLUGIN<pos:position pos:line="12" pos:column="24"/></name> <literal type="string" pos:line="12" pos:column="25">": Could not create a socket. %s"<pos:position pos:line="12" pos:column="58"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="13" pos:column="11">sstrerror<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">errno<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">errbuff<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="37">sizeof<argument_list pos:line="13" pos:column="43">(<argument><expr><name pos:line="13" pos:column="44">errbuff<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">pthread_rwlock_unlock<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><operator pos:line="14" pos:column="27">&amp;<pos:position pos:line="14" pos:column="32"/></operator><name><name pos:line="14" pos:column="28">self<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">lock<pos:position pos:line="14" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">ret<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="18" pos:column="3">/* Set socket timeout option */</comment>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><call><name pos:line="19" pos:column="7">setsockopt<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name><name pos:line="19" pos:column="18">self<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">sock_fd<pos:position pos:line="19" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="33">SOL_SOCKET<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">SO_SNDTIMEO<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="58">&amp;<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="59">socket_timeout<pos:position pos:line="19" pos:column="73"/></name></expr></argument>,
                 <argument><expr><sizeof pos:line="20" pos:column="18">sizeof<argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">socket_timeout<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call> <operator pos:line="20" pos:column="42">&lt;<pos:position pos:line="20" pos:column="46"/></operator> <literal type="number" pos:line="20" pos:column="44">0<pos:position pos:line="20" pos:column="45"/></literal></expr>)<pos:position pos:line="20" pos:column="46"/></condition><then pos:line="20" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="5">ERROR<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><name pos:line="21" pos:column="11">MCELOG_PLUGIN<pos:position pos:line="21" pos:column="24"/></name> <literal type="string" pos:line="21" pos:column="25">": Failed to set the socket timeout option."<pos:position pos:line="21" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="23" pos:column="3">/* downgrading to read lock due to possible recursive read locks
   * in self-&gt;close(self) call */</comment>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">pthread_rwlock_unlock<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><operator pos:line="25" pos:column="25">&amp;<pos:position pos:line="25" pos:column="30"/></operator><name><name pos:line="25" pos:column="26">self<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">-&gt;<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="32">lock<pos:position pos:line="25" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">pthread_rwlock_rdlock<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><operator pos:line="26" pos:column="25">&amp;<pos:position pos:line="26" pos:column="30"/></operator><name><name pos:line="26" pos:column="26">self<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">lock<pos:position pos:line="26" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><call><name pos:line="27" pos:column="7">connect<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name><name pos:line="27" pos:column="15">self<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">-&gt;<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="21">sock_fd<pos:position pos:line="27" pos:column="28"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="30">(<pos:position pos:line="27" pos:column="31"/></operator>struct <name pos:line="27" pos:column="38">sockaddr<pos:position pos:line="27" pos:column="46"/></name> <operator pos:line="27" pos:column="47">*<pos:position pos:line="27" pos:column="48"/></operator><operator pos:line="27" pos:column="48">)<pos:position pos:line="27" pos:column="49"/></operator><operator pos:line="27" pos:column="49">&amp;<pos:position pos:line="27" pos:column="54"/></operator><operator pos:line="27" pos:column="50">(<pos:position pos:line="27" pos:column="51"/></operator><name><name pos:line="27" pos:column="51">self<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">unix_sock<pos:position pos:line="27" pos:column="66"/></name></name><operator pos:line="27" pos:column="66">)<pos:position pos:line="27" pos:column="67"/></operator></expr></argument>,
              <argument><expr><sizeof pos:line="28" pos:column="15">sizeof<argument_list pos:line="28" pos:column="21">(<argument><expr><name><name pos:line="28" pos:column="22">self<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">unix_sock<pos:position pos:line="28" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call> <operator pos:line="28" pos:column="40">&lt;<pos:position pos:line="28" pos:column="44"/></operator> <literal type="number" pos:line="28" pos:column="42">0<pos:position pos:line="28" pos:column="43"/></literal></expr>)<pos:position pos:line="28" pos:column="44"/></condition><then pos:line="28" pos:column="44"> <block pos:line="28" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">ERROR<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><name pos:line="29" pos:column="11">MCELOG_PLUGIN<pos:position pos:line="29" pos:column="24"/></name> <literal type="string" pos:line="29" pos:column="25">": Failed to connect to mcelog server. %s"<pos:position pos:line="29" pos:column="67"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="30" pos:column="11">sstrerror<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">errno<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="28">errbuff<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="37">sizeof<argument_list pos:line="30" pos:column="43">(<argument><expr><name pos:line="30" pos:column="44">errbuff<pos:position pos:line="30" pos:column="51"/></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="31" pos:column="5">self<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">close<pos:position pos:line="31" pos:column="16"/></name></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">self<pos:position pos:line="31" pos:column="21"/></name></expr></argument>)<pos:position pos:line="31" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">ret<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <operator pos:line="32" pos:column="11">-<pos:position pos:line="32" pos:column="12"/></operator><literal type="number" pos:line="32" pos:column="12">1<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></then> <else pos:line="33" pos:column="5">else <block pos:line="33" pos:column="10">{
    <expr_stmt><expr><name pos:line="34" pos:column="5">ret<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">=<pos:position pos:line="34" pos:column="10"/></operator> <literal type="number" pos:line="34" pos:column="11">0<pos:position pos:line="34" pos:column="12"/></literal></expr>;<pos:position pos:line="34" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">mcelog_dispatch_notification<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(
        <argument><expr><operator pos:line="36" pos:column="9">&amp;<pos:position pos:line="36" pos:column="14"/></operator><operator pos:line="36" pos:column="10">(<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">notification_t<pos:position pos:line="36" pos:column="25"/></name><operator pos:line="36" pos:column="25">)<pos:position pos:line="36" pos:column="26"/></operator><block pos:line="36" pos:column="26">{<expr><operator pos:line="36" pos:column="27">.<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="28">severity<pos:position pos:line="36" pos:column="36"/></name> <operator pos:line="36" pos:column="37">=<pos:position pos:line="36" pos:column="38"/></operator> <name pos:line="36" pos:column="39">NOTIF_OKAY<pos:position pos:line="36" pos:column="49"/></name></expr>,
                          <expr><operator pos:line="37" pos:column="27">.<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="28">time<pos:position pos:line="37" pos:column="32"/></name> <operator pos:line="37" pos:column="33">=<pos:position pos:line="37" pos:column="34"/></operator> <call><name pos:line="37" pos:column="35">cdtime<pos:position pos:line="37" pos:column="41"/></name><argument_list pos:line="37" pos:column="41">()<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr>,
                          <expr><operator pos:line="38" pos:column="27">.<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="28">message<pos:position pos:line="38" pos:column="35"/></name> <operator pos:line="38" pos:column="36">=<pos:position pos:line="38" pos:column="37"/></operator> <literal type="string" pos:line="38" pos:column="38">"Connected to mcelog server"<pos:position pos:line="38" pos:column="66"/></literal></expr>,
                          <expr><operator pos:line="39" pos:column="27">.<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="28">plugin<pos:position pos:line="39" pos:column="34"/></name> <operator pos:line="39" pos:column="35">=<pos:position pos:line="39" pos:column="36"/></operator> <name pos:line="39" pos:column="37">MCELOG_PLUGIN<pos:position pos:line="39" pos:column="50"/></name></expr>,
                          <expr><operator pos:line="40" pos:column="27">.<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">type_instance<pos:position pos:line="40" pos:column="41"/></name> <operator pos:line="40" pos:column="42">=<pos:position pos:line="40" pos:column="43"/></operator> <literal type="string" pos:line="40" pos:column="44">"mcelog_status"<pos:position pos:line="40" pos:column="59"/></literal></expr>}<pos:position pos:line="40" pos:column="60"/></block></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="62"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">pthread_rwlock_unlock<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><operator pos:line="42" pos:column="25">&amp;<pos:position pos:line="42" pos:column="30"/></operator><name><name pos:line="42" pos:column="26">self<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">-&gt;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="32">lock<pos:position pos:line="42" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>
  <return pos:line="43" pos:column="3">return <expr><name pos:line="43" pos:column="10">ret<pos:position pos:line="43" pos:column="13"/></name></expr>;<pos:position pos:line="43" pos:column="14"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

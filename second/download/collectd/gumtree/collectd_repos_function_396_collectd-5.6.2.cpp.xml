<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_396_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_acpi_callback<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">dir<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="48">/* {{{ */</comment>
                              <parameter><decl><type><name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">power_supply<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">void<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">user_data<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list> <block pos:line="2" pos:column="74">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name> <modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type><name pos:line="3" pos:column="8">battery_index<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><name pos:line="3" pos:column="24">user_data<pos:position pos:line="3" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">gauge_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">power<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name pos:line="5" pos:column="19">NAN<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">gauge_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">voltage<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">NAN<pos:position pos:line="6" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">gauge_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">capacity_charged<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><name pos:line="7" pos:column="30">NAN<pos:position pos:line="7" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gauge_t<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">capacity_full<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><name pos:line="8" pos:column="27">NAN<pos:position pos:line="8" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">gauge_t<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">capacity_design<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name pos:line="9" pos:column="29">NAN<pos:position pos:line="9" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">_Bool<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">charging<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><literal type="number" pos:line="10" pos:column="20">0<pos:position pos:line="10" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">_Bool<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">is_current<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <specifier pos:line="13" pos:column="8">const<pos:position pos:line="13" pos:column="13"/></specifier> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">plugin_instance<pos:position pos:line="13" pos:column="30"/></name></decl>;<pos:position pos:line="13" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name></type> <name><name pos:line="14" pos:column="8">filename<pos:position pos:line="14" pos:column="16"/></name><index pos:line="14" pos:column="16">[<expr><name pos:line="14" pos:column="17">PATH_MAX<pos:position pos:line="14" pos:column="25"/></name></expr>]<pos:position pos:line="14" pos:column="26"/></index></name></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">char<pos:position pos:line="15" pos:column="7"/></name></type> <name><name pos:line="15" pos:column="8">buffer<pos:position pos:line="15" pos:column="14"/></name><index pos:line="15" pos:column="14">[<expr><literal type="number" pos:line="15" pos:column="15">1024<pos:position pos:line="15" pos:column="19"/></literal></expr>]<pos:position pos:line="15" pos:column="20"/></index></name></decl>;<pos:position pos:line="15" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="17" pos:column="3">FILE<pos:position pos:line="17" pos:column="7"/></name> <modifier pos:line="17" pos:column="8">*<pos:position pos:line="17" pos:column="9"/></modifier></type><name pos:line="17" pos:column="9">fh<pos:position pos:line="17" pos:column="11"/></name></decl>;<pos:position pos:line="17" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="19" pos:column="3">ssnprintf<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">filename<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="23">sizeof<argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">filename<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="41">"%s/%s/state"<pos:position pos:line="19" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="56">dir<pos:position pos:line="19" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="61">power_supply<pos:position pos:line="19" pos:column="73"/></name></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="75"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">fh<pos:position pos:line="20" pos:column="5"/></name> <operator pos:line="20" pos:column="6">=<pos:position pos:line="20" pos:column="7"/></operator> <call><name pos:line="20" pos:column="8">fopen<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><name pos:line="20" pos:column="14">filename<pos:position pos:line="20" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="24">"r"<pos:position pos:line="20" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">fh<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">==<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">NULL<pos:position pos:line="21" pos:column="17"/></name></expr>)<pos:position pos:line="21" pos:column="18"/></condition><then pos:line="21" pos:column="18"> <block pos:line="21" pos:column="19">{
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">errno<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">==<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">EAGAIN<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">)<pos:position pos:line="22" pos:column="26"/></operator> <operator pos:line="22" pos:column="27">||<pos:position pos:line="22" pos:column="29"/></operator> <operator pos:line="22" pos:column="30">(<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">errno<pos:position pos:line="22" pos:column="36"/></name> <operator pos:line="22" pos:column="37">==<pos:position pos:line="22" pos:column="39"/></operator> <name pos:line="22" pos:column="40">EINTR<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">)<pos:position pos:line="22" pos:column="46"/></operator> <operator pos:line="22" pos:column="47">||<pos:position pos:line="22" pos:column="49"/></operator> <operator pos:line="22" pos:column="50">(<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="51">errno<pos:position pos:line="22" pos:column="56"/></name> <operator pos:line="22" pos:column="57">==<pos:position pos:line="22" pos:column="59"/></operator> <name pos:line="22" pos:column="60">ENOENT<pos:position pos:line="22" pos:column="66"/></name><operator pos:line="22" pos:column="66">)<pos:position pos:line="22" pos:column="67"/></operator></expr>)<pos:position pos:line="22" pos:column="68"/></condition><then pos:line="22" pos:column="68">
      <block type="pseudo"><return pos:line="23" pos:column="7">return <expr><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><literal type="number" pos:line="23" pos:column="15">0<pos:position pos:line="23" pos:column="16"/></literal><operator pos:line="23" pos:column="16">)<pos:position pos:line="23" pos:column="17"/></operator></expr>;<pos:position pos:line="23" pos:column="18"/></return></block></then>
    <else pos:line="24" pos:column="5">else
      <block type="pseudo"><return pos:line="25" pos:column="7">return <expr><operator pos:line="25" pos:column="14">(<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">errno<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">)<pos:position pos:line="25" pos:column="21"/></operator></expr>;<pos:position pos:line="25" pos:column="22"/></return></block></else></if>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="28" pos:column="3">/*
   * [11:00] &lt;@tokkee&gt; $ cat /proc/acpi/battery/BAT1/state
   * [11:00] &lt;@tokkee&gt; present:                 yes
   * [11:00] &lt;@tokkee&gt; capacity state:          ok
   * [11:00] &lt;@tokkee&gt; charging state:          charging
   * [11:00] &lt;@tokkee&gt; present rate:            1724 mA
   * [11:00] &lt;@tokkee&gt; remaining capacity:      4136 mAh
   * [11:00] &lt;@tokkee&gt; present voltage:         12428 mV
   */</comment>
  <while pos:line="37" pos:column="3">while <condition pos:line="37" pos:column="9">(<expr><call><name pos:line="37" pos:column="10">fgets<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><name pos:line="37" pos:column="16">buffer<pos:position pos:line="37" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="24">sizeof<argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">buffer<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="37" pos:column="40">fh<pos:position pos:line="37" pos:column="42"/></name></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call> <operator pos:line="37" pos:column="44">!=<pos:position pos:line="37" pos:column="46"/></operator> <name pos:line="37" pos:column="47">NULL<pos:position pos:line="37" pos:column="51"/></name></expr>)<pos:position pos:line="37" pos:column="52"/></condition> <block pos:line="37" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">char<pos:position pos:line="38" pos:column="9"/></name> <modifier pos:line="38" pos:column="10">*<pos:position pos:line="38" pos:column="11"/></modifier></type><name><name pos:line="38" pos:column="11">fields<pos:position pos:line="38" pos:column="17"/></name><index pos:line="38" pos:column="17">[<expr><literal type="number" pos:line="38" pos:column="18">8<pos:position pos:line="38" pos:column="19"/></literal></expr>]<pos:position pos:line="38" pos:column="20"/></index></name></decl>;<pos:position pos:line="38" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">int<pos:position pos:line="39" pos:column="8"/></name></type> <name pos:line="39" pos:column="9">numfields<pos:position pos:line="39" pos:column="18"/></name></decl>;<pos:position pos:line="39" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><name pos:line="41" pos:column="5">numfields<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <call><name pos:line="41" pos:column="17">strsplit<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">buffer<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="34">fields<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="42">STATIC_ARRAY_SIZE<pos:position pos:line="41" pos:column="59"/></name><argument_list pos:line="41" pos:column="59">(<argument><expr><name pos:line="41" pos:column="60">fields<pos:position pos:line="41" pos:column="66"/></name></expr></argument>)<pos:position pos:line="41" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="69"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">numfields<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">&lt;<pos:position pos:line="42" pos:column="23"/></operator> <literal type="number" pos:line="42" pos:column="21">3<pos:position pos:line="42" pos:column="22"/></literal></expr>)<pos:position pos:line="42" pos:column="23"/></condition><then pos:line="42" pos:column="23">
      <block type="pseudo"><continue pos:line="43" pos:column="7">continue;<pos:position pos:line="43" pos:column="16"/></continue></block></then></if>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">(<pos:position pos:line="45" pos:column="10"/></operator><call><name pos:line="45" pos:column="10">strcmp<pos:position pos:line="45" pos:column="16"/></name><argument_list pos:line="45" pos:column="16">(<argument><expr><name><name pos:line="45" pos:column="17">fields<pos:position pos:line="45" pos:column="23"/></name><index pos:line="45" pos:column="23">[<expr><literal type="number" pos:line="45" pos:column="24">0<pos:position pos:line="45" pos:column="25"/></literal></expr>]<pos:position pos:line="45" pos:column="26"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="28">"charging"<pos:position pos:line="45" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></call> <operator pos:line="45" pos:column="40">==<pos:position pos:line="45" pos:column="42"/></operator> <literal type="number" pos:line="45" pos:column="43">0<pos:position pos:line="45" pos:column="44"/></literal><operator pos:line="45" pos:column="44">)<pos:position pos:line="45" pos:column="45"/></operator> <operator pos:line="45" pos:column="46">&amp;&amp;<pos:position pos:line="45" pos:column="56"/></operator>
        <operator pos:line="46" pos:column="9">(<pos:position pos:line="46" pos:column="10"/></operator><call><name pos:line="46" pos:column="10">strcmp<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><name><name pos:line="46" pos:column="17">fields<pos:position pos:line="46" pos:column="23"/></name><index pos:line="46" pos:column="23">[<expr><literal type="number" pos:line="46" pos:column="24">1<pos:position pos:line="46" pos:column="25"/></literal></expr>]<pos:position pos:line="46" pos:column="26"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="28">"state:"<pos:position pos:line="46" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="37"/></argument_list></call> <operator pos:line="46" pos:column="38">==<pos:position pos:line="46" pos:column="40"/></operator> <literal type="number" pos:line="46" pos:column="41">0<pos:position pos:line="46" pos:column="42"/></literal><operator pos:line="46" pos:column="42">)<pos:position pos:line="46" pos:column="43"/></operator></expr>)<pos:position pos:line="46" pos:column="44"/></condition><then pos:line="46" pos:column="44"> <block pos:line="46" pos:column="45">{
      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><call><name pos:line="47" pos:column="11">strcmp<pos:position pos:line="47" pos:column="17"/></name><argument_list pos:line="47" pos:column="17">(<argument><expr><name><name pos:line="47" pos:column="18">fields<pos:position pos:line="47" pos:column="24"/></name><index pos:line="47" pos:column="24">[<expr><literal type="number" pos:line="47" pos:column="25">2<pos:position pos:line="47" pos:column="26"/></literal></expr>]<pos:position pos:line="47" pos:column="27"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="29">"charging"<pos:position pos:line="47" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call> <operator pos:line="47" pos:column="41">==<pos:position pos:line="47" pos:column="43"/></operator> <literal type="number" pos:line="47" pos:column="44">0<pos:position pos:line="47" pos:column="45"/></literal></expr>)<pos:position pos:line="47" pos:column="46"/></condition><then pos:line="47" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="9">charging<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <literal type="number" pos:line="48" pos:column="20">1<pos:position pos:line="48" pos:column="21"/></literal></expr>;<pos:position pos:line="48" pos:column="22"/></expr_stmt></block></then>
      <else pos:line="49" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="9">charging<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <literal type="number" pos:line="50" pos:column="20">0<pos:position pos:line="50" pos:column="21"/></literal></expr>;<pos:position pos:line="50" pos:column="22"/></expr_stmt></block></else></if>
      <continue pos:line="51" pos:column="7">continue;<pos:position pos:line="51" pos:column="16"/></continue>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="54" pos:column="5">/* The unit of "present rate" depends on the battery. Modern
     * batteries export power (watts), older batteries (used to)
     * export current (amperes). We check the fourth column and try
     * to find old batteries this way. */</comment>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">(<pos:position pos:line="58" pos:column="10"/></operator><call><name pos:line="58" pos:column="10">strcmp<pos:position pos:line="58" pos:column="16"/></name><argument_list pos:line="58" pos:column="16">(<argument><expr><name><name pos:line="58" pos:column="17">fields<pos:position pos:line="58" pos:column="23"/></name><index pos:line="58" pos:column="23">[<expr><literal type="number" pos:line="58" pos:column="24">0<pos:position pos:line="58" pos:column="25"/></literal></expr>]<pos:position pos:line="58" pos:column="26"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="28">"present"<pos:position pos:line="58" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="38"/></argument_list></call> <operator pos:line="58" pos:column="39">==<pos:position pos:line="58" pos:column="41"/></operator> <literal type="number" pos:line="58" pos:column="42">0<pos:position pos:line="58" pos:column="43"/></literal><operator pos:line="58" pos:column="43">)<pos:position pos:line="58" pos:column="44"/></operator> <operator pos:line="58" pos:column="45">&amp;&amp;<pos:position pos:line="58" pos:column="55"/></operator>
        <operator pos:line="59" pos:column="9">(<pos:position pos:line="59" pos:column="10"/></operator><call><name pos:line="59" pos:column="10">strcmp<pos:position pos:line="59" pos:column="16"/></name><argument_list pos:line="59" pos:column="16">(<argument><expr><name><name pos:line="59" pos:column="17">fields<pos:position pos:line="59" pos:column="23"/></name><index pos:line="59" pos:column="23">[<expr><literal type="number" pos:line="59" pos:column="24">1<pos:position pos:line="59" pos:column="25"/></literal></expr>]<pos:position pos:line="59" pos:column="26"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="28">"rate:"<pos:position pos:line="59" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="36"/></argument_list></call> <operator pos:line="59" pos:column="37">==<pos:position pos:line="59" pos:column="39"/></operator> <literal type="number" pos:line="59" pos:column="40">0<pos:position pos:line="59" pos:column="41"/></literal><operator pos:line="59" pos:column="41">)<pos:position pos:line="59" pos:column="42"/></operator></expr>)<pos:position pos:line="59" pos:column="43"/></condition><then pos:line="59" pos:column="43"> <block pos:line="59" pos:column="44">{
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">strtogauge<pos:position pos:line="60" pos:column="17"/></name><argument_list pos:line="60" pos:column="17">(<argument><expr><name><name pos:line="60" pos:column="18">fields<pos:position pos:line="60" pos:column="24"/></name><index pos:line="60" pos:column="24">[<expr><literal type="number" pos:line="60" pos:column="25">2<pos:position pos:line="60" pos:column="26"/></literal></expr>]<pos:position pos:line="60" pos:column="27"/></index></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="29">&amp;<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="30">power<pos:position pos:line="60" pos:column="35"/></name></expr></argument>)<pos:position pos:line="60" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt>

      <if pos:line="62" pos:column="7">if <condition pos:line="62" pos:column="10">(<expr><operator pos:line="62" pos:column="11">(<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="12">numfields<pos:position pos:line="62" pos:column="21"/></name> <operator pos:line="62" pos:column="22">&gt;=<pos:position pos:line="62" pos:column="27"/></operator> <literal type="number" pos:line="62" pos:column="25">4<pos:position pos:line="62" pos:column="26"/></literal><operator pos:line="62" pos:column="26">)<pos:position pos:line="62" pos:column="27"/></operator> <operator pos:line="62" pos:column="28">&amp;&amp;<pos:position pos:line="62" pos:column="38"/></operator> <operator pos:line="62" pos:column="31">(<pos:position pos:line="62" pos:column="32"/></operator><call><name pos:line="62" pos:column="32">strcmp<pos:position pos:line="62" pos:column="38"/></name><argument_list pos:line="62" pos:column="38">(<argument><expr><literal type="string" pos:line="62" pos:column="39">"mA"<pos:position pos:line="62" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="45">fields<pos:position pos:line="62" pos:column="51"/></name><index pos:line="62" pos:column="51">[<expr><literal type="number" pos:line="62" pos:column="52">3<pos:position pos:line="62" pos:column="53"/></literal></expr>]<pos:position pos:line="62" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="62" pos:column="55"/></argument_list></call> <operator pos:line="62" pos:column="56">==<pos:position pos:line="62" pos:column="58"/></operator> <literal type="number" pos:line="62" pos:column="59">0<pos:position pos:line="62" pos:column="60"/></literal><operator pos:line="62" pos:column="60">)<pos:position pos:line="62" pos:column="61"/></operator></expr>)<pos:position pos:line="62" pos:column="62"/></condition><then pos:line="62" pos:column="62">
        <block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="9">is_current<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">=<pos:position pos:line="63" pos:column="21"/></operator> <literal type="number" pos:line="63" pos:column="22">1<pos:position pos:line="63" pos:column="23"/></literal></expr>;<pos:position pos:line="63" pos:column="24"/></expr_stmt></block></then></if>
    }<pos:position pos:line="64" pos:column="6"/></block></then> <elseif pos:line="64" pos:column="7">else <if pos:line="64" pos:column="12">if <condition pos:line="64" pos:column="15">(<expr><operator pos:line="64" pos:column="16">(<pos:position pos:line="64" pos:column="17"/></operator><call><name pos:line="64" pos:column="17">strcmp<pos:position pos:line="64" pos:column="23"/></name><argument_list pos:line="64" pos:column="23">(<argument><expr><name><name pos:line="64" pos:column="24">fields<pos:position pos:line="64" pos:column="30"/></name><index pos:line="64" pos:column="30">[<expr><literal type="number" pos:line="64" pos:column="31">0<pos:position pos:line="64" pos:column="32"/></literal></expr>]<pos:position pos:line="64" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="35">"remaining"<pos:position pos:line="64" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="47"/></argument_list></call> <operator pos:line="64" pos:column="48">==<pos:position pos:line="64" pos:column="50"/></operator> <literal type="number" pos:line="64" pos:column="51">0<pos:position pos:line="64" pos:column="52"/></literal><operator pos:line="64" pos:column="52">)<pos:position pos:line="64" pos:column="53"/></operator> <operator pos:line="64" pos:column="54">&amp;&amp;<pos:position pos:line="64" pos:column="64"/></operator>
               <operator pos:line="65" pos:column="16">(<pos:position pos:line="65" pos:column="17"/></operator><call><name pos:line="65" pos:column="17">strcmp<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><name><name pos:line="65" pos:column="24">fields<pos:position pos:line="65" pos:column="30"/></name><index pos:line="65" pos:column="30">[<expr><literal type="number" pos:line="65" pos:column="31">1<pos:position pos:line="65" pos:column="32"/></literal></expr>]<pos:position pos:line="65" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="35">"capacity:"<pos:position pos:line="65" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="47"/></argument_list></call> <operator pos:line="65" pos:column="48">==<pos:position pos:line="65" pos:column="50"/></operator> <literal type="number" pos:line="65" pos:column="51">0<pos:position pos:line="65" pos:column="52"/></literal><operator pos:line="65" pos:column="52">)<pos:position pos:line="65" pos:column="53"/></operator></expr>)<pos:position pos:line="65" pos:column="54"/></condition><then pos:line="65" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="7">strtogauge<pos:position pos:line="66" pos:column="17"/></name><argument_list pos:line="66" pos:column="17">(<argument><expr><name><name pos:line="66" pos:column="18">fields<pos:position pos:line="66" pos:column="24"/></name><index pos:line="66" pos:column="24">[<expr><literal type="number" pos:line="66" pos:column="25">2<pos:position pos:line="66" pos:column="26"/></literal></expr>]<pos:position pos:line="66" pos:column="27"/></index></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="29">&amp;<pos:position pos:line="66" pos:column="34"/></operator><name pos:line="66" pos:column="30">capacity_charged<pos:position pos:line="66" pos:column="46"/></name></expr></argument>)<pos:position pos:line="66" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="48"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="67" pos:column="5">else <if pos:line="67" pos:column="10">if <condition pos:line="67" pos:column="13">(<expr><operator pos:line="67" pos:column="14">(<pos:position pos:line="67" pos:column="15"/></operator><call><name pos:line="67" pos:column="15">strcmp<pos:position pos:line="67" pos:column="21"/></name><argument_list pos:line="67" pos:column="21">(<argument><expr><name><name pos:line="67" pos:column="22">fields<pos:position pos:line="67" pos:column="28"/></name><index pos:line="67" pos:column="28">[<expr><literal type="number" pos:line="67" pos:column="29">0<pos:position pos:line="67" pos:column="30"/></literal></expr>]<pos:position pos:line="67" pos:column="31"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="33">"present"<pos:position pos:line="67" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="43"/></argument_list></call> <operator pos:line="67" pos:column="44">==<pos:position pos:line="67" pos:column="46"/></operator> <literal type="number" pos:line="67" pos:column="47">0<pos:position pos:line="67" pos:column="48"/></literal><operator pos:line="67" pos:column="48">)<pos:position pos:line="67" pos:column="49"/></operator> <operator pos:line="67" pos:column="50">&amp;&amp;<pos:position pos:line="67" pos:column="60"/></operator>
             <operator pos:line="68" pos:column="14">(<pos:position pos:line="68" pos:column="15"/></operator><call><name pos:line="68" pos:column="15">strcmp<pos:position pos:line="68" pos:column="21"/></name><argument_list pos:line="68" pos:column="21">(<argument><expr><name><name pos:line="68" pos:column="22">fields<pos:position pos:line="68" pos:column="28"/></name><index pos:line="68" pos:column="28">[<expr><literal type="number" pos:line="68" pos:column="29">1<pos:position pos:line="68" pos:column="30"/></literal></expr>]<pos:position pos:line="68" pos:column="31"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="33">"voltage:"<pos:position pos:line="68" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="44"/></argument_list></call> <operator pos:line="68" pos:column="45">==<pos:position pos:line="68" pos:column="47"/></operator> <literal type="number" pos:line="68" pos:column="48">0<pos:position pos:line="68" pos:column="49"/></literal><operator pos:line="68" pos:column="49">)<pos:position pos:line="68" pos:column="50"/></operator></expr>)<pos:position pos:line="68" pos:column="51"/></condition><then pos:line="68" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="7">strtogauge<pos:position pos:line="69" pos:column="17"/></name><argument_list pos:line="69" pos:column="17">(<argument><expr><name><name pos:line="69" pos:column="18">fields<pos:position pos:line="69" pos:column="24"/></name><index pos:line="69" pos:column="24">[<expr><literal type="number" pos:line="69" pos:column="25">2<pos:position pos:line="69" pos:column="26"/></literal></expr>]<pos:position pos:line="69" pos:column="27"/></index></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="29">&amp;<pos:position pos:line="69" pos:column="34"/></operator><name pos:line="69" pos:column="30">voltage<pos:position pos:line="69" pos:column="37"/></name></expr></argument>)<pos:position pos:line="69" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="39"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="70" pos:column="4"/></block></while> <comment type="block" pos:line="70" pos:column="5">/* while (fgets (buffer, sizeof (buffer), fh) != NULL) */</comment>

  <expr_stmt><expr><call><name pos:line="72" pos:column="3">fclose<pos:position pos:line="72" pos:column="9"/></name><argument_list pos:line="72" pos:column="9">(<argument><expr><name pos:line="72" pos:column="10">fh<pos:position pos:line="72" pos:column="12"/></name></expr></argument>)<pos:position pos:line="72" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="14"/></expr_stmt>

  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><operator pos:line="74" pos:column="7">!<pos:position pos:line="74" pos:column="8"/></operator><name pos:line="74" pos:column="8">charging<pos:position pos:line="74" pos:column="16"/></name></expr>)<pos:position pos:line="74" pos:column="17"/></condition><then pos:line="74" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="5">power<pos:position pos:line="75" pos:column="10"/></name> <operator pos:line="75" pos:column="11">*=<pos:position pos:line="75" pos:column="13"/></operator> <operator pos:line="75" pos:column="14">-<pos:position pos:line="75" pos:column="15"/></operator><literal type="number" pos:line="75" pos:column="15">1.0<pos:position pos:line="75" pos:column="18"/></literal></expr>;<pos:position pos:line="75" pos:column="19"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="77" pos:column="3">/* FIXME: This is a dirty hack for backwards compatibility: The battery
   * plugin, for a very long time, has had the plugin_instance
   * hard-coded to "0". So, to keep backwards compatibility, we'll use
   * "0" for the first battery we find and the power_supply name for all
   * following. This should be reverted in a future major version. */</comment>
  <expr_stmt><expr><name pos:line="82" pos:column="3">plugin_instance<pos:position pos:line="82" pos:column="18"/></name> <operator pos:line="82" pos:column="19">=<pos:position pos:line="82" pos:column="20"/></operator> <ternary><condition><expr><operator pos:line="82" pos:column="21">(<pos:position pos:line="82" pos:column="22"/></operator><operator pos:line="82" pos:column="22">*<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="23">battery_index<pos:position pos:line="82" pos:column="36"/></name> <operator pos:line="82" pos:column="37">==<pos:position pos:line="82" pos:column="39"/></operator> <literal type="number" pos:line="82" pos:column="40">0<pos:position pos:line="82" pos:column="41"/></literal><operator pos:line="82" pos:column="41">)<pos:position pos:line="82" pos:column="42"/></operator></expr> ?<pos:position pos:line="82" pos:column="44"/></condition><then pos:line="82" pos:column="44"> <expr><literal type="string" pos:line="82" pos:column="45">"0"<pos:position pos:line="82" pos:column="48"/></literal></expr> <pos:position pos:line="82" pos:column="49"/></then><else pos:line="82" pos:column="49">: <expr><name pos:line="82" pos:column="51">power_supply<pos:position pos:line="82" pos:column="63"/></name></expr></else></ternary></expr>;<pos:position pos:line="82" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="83" pos:column="3">(<pos:position pos:line="83" pos:column="4"/></operator><operator pos:line="83" pos:column="4">*<pos:position pos:line="83" pos:column="5"/></operator><name pos:line="83" pos:column="5">battery_index<pos:position pos:line="83" pos:column="18"/></name><operator pos:line="83" pos:column="18">)<pos:position pos:line="83" pos:column="19"/></operator><operator pos:line="83" pos:column="19">++<pos:position pos:line="83" pos:column="21"/></operator></expr>;<pos:position pos:line="83" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="85" pos:column="3">read_acpi_full_capacity<pos:position pos:line="85" pos:column="26"/></name><argument_list pos:line="85" pos:column="26">(<argument><expr><name pos:line="85" pos:column="27">dir<pos:position pos:line="85" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="32">power_supply<pos:position pos:line="85" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="46">&amp;<pos:position pos:line="85" pos:column="51"/></operator><name pos:line="85" pos:column="47">capacity_full<pos:position pos:line="85" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="62">&amp;<pos:position pos:line="85" pos:column="67"/></operator><name pos:line="85" pos:column="63">capacity_design<pos:position pos:line="85" pos:column="78"/></name></expr></argument>)<pos:position pos:line="85" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="80"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="87" pos:column="3">submit_capacity<pos:position pos:line="87" pos:column="18"/></name><argument_list pos:line="87" pos:column="18">(<argument><expr><name pos:line="87" pos:column="19">plugin_instance<pos:position pos:line="87" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="36">capacity_charged<pos:position pos:line="87" pos:column="52"/></name> <operator pos:line="87" pos:column="53">*<pos:position pos:line="87" pos:column="54"/></operator> <name pos:line="87" pos:column="55">PROC_ACPI_FACTOR<pos:position pos:line="87" pos:column="71"/></name></expr></argument>,
                  <argument><expr><name pos:line="88" pos:column="19">capacity_full<pos:position pos:line="88" pos:column="32"/></name> <operator pos:line="88" pos:column="33">*<pos:position pos:line="88" pos:column="34"/></operator> <name pos:line="88" pos:column="35">PROC_ACPI_FACTOR<pos:position pos:line="88" pos:column="51"/></name></expr></argument>,
                  <argument><expr><name pos:line="89" pos:column="19">capacity_design<pos:position pos:line="89" pos:column="34"/></name> <operator pos:line="89" pos:column="35">*<pos:position pos:line="89" pos:column="36"/></operator> <name pos:line="89" pos:column="37">PROC_ACPI_FACTOR<pos:position pos:line="89" pos:column="53"/></name></expr></argument>)<pos:position pos:line="89" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="91" pos:column="3">battery_submit<pos:position pos:line="91" pos:column="17"/></name><argument_list pos:line="91" pos:column="17">(<argument><expr><name pos:line="91" pos:column="18">plugin_instance<pos:position pos:line="91" pos:column="33"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="91" pos:column="35">is_current<pos:position pos:line="91" pos:column="45"/></name></expr> ?<pos:position pos:line="91" pos:column="47"/></condition><then pos:line="91" pos:column="47"> <expr><literal type="string" pos:line="91" pos:column="48">"current"<pos:position pos:line="91" pos:column="57"/></literal></expr> <pos:position pos:line="91" pos:column="58"/></then><else pos:line="91" pos:column="58">: <expr><literal type="string" pos:line="91" pos:column="60">"power"<pos:position pos:line="91" pos:column="67"/></literal></expr></else></ternary></expr></argument>,
                 <argument><expr><name pos:line="92" pos:column="18">power<pos:position pos:line="92" pos:column="23"/></name> <operator pos:line="92" pos:column="24">*<pos:position pos:line="92" pos:column="25"/></operator> <name pos:line="92" pos:column="26">PROC_ACPI_FACTOR<pos:position pos:line="92" pos:column="42"/></name></expr></argument>)<pos:position pos:line="92" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="93" pos:column="3">battery_submit<pos:position pos:line="93" pos:column="17"/></name><argument_list pos:line="93" pos:column="17">(<argument><expr><name pos:line="93" pos:column="18">plugin_instance<pos:position pos:line="93" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="35">"voltage"<pos:position pos:line="93" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="46">voltage<pos:position pos:line="93" pos:column="53"/></name> <operator pos:line="93" pos:column="54">*<pos:position pos:line="93" pos:column="55"/></operator> <name pos:line="93" pos:column="56">PROC_ACPI_FACTOR<pos:position pos:line="93" pos:column="72"/></name></expr></argument>)<pos:position pos:line="93" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="74"/></expr_stmt>

  <return pos:line="95" pos:column="3">return <expr><literal type="number" pos:line="95" pos:column="10">0<pos:position pos:line="95" pos:column="11"/></literal></expr>;<pos:position pos:line="95" pos:column="12"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

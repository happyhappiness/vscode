<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_890_collectd-4.10.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_config<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">oconfig_item_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">ci<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list> <block pos:line="1" pos:column="44">{ <comment type="block" pos:line="1" pos:column="46">/* {{{ */</comment>
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">i<pos:position pos:line="2" pos:column="14"/></name></decl>;<pos:position pos:line="2" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">oconfig_item_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">item<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr>;<pos:position pos:line="5" pos:column="20"/></init> <condition><expr><name pos:line="5" pos:column="21">i<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&lt;<pos:position pos:line="5" pos:column="27"/></operator> <name><name pos:line="5" pos:column="25">ci<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">children_num<pos:position pos:line="5" pos:column="41"/></name></name></expr>;<pos:position pos:line="5" pos:column="42"/></condition> <incr><expr><operator pos:line="5" pos:column="43">++<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="45">i<pos:position pos:line="5" pos:column="46"/></name></expr></incr>)<pos:position pos:line="5" pos:column="47"/></control> <block pos:line="5" pos:column="48">{
		<expr_stmt><expr><name pos:line="6" pos:column="17">item<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">=<pos:position pos:line="6" pos:column="23"/></operator> <name><name pos:line="6" pos:column="24">ci<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">children<pos:position pos:line="6" pos:column="36"/></name></name> <operator pos:line="6" pos:column="37">+<pos:position pos:line="6" pos:column="38"/></operator> <name pos:line="6" pos:column="39">i<pos:position pos:line="6" pos:column="40"/></name></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>

		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><call><name pos:line="8" pos:column="21">strcasecmp<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name><name pos:line="8" pos:column="32">item<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">key<pos:position pos:line="8" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="43">"Host"<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call> <operator pos:line="8" pos:column="51">==<pos:position pos:line="8" pos:column="53"/></operator> <literal type="number" pos:line="8" pos:column="54">0<pos:position pos:line="8" pos:column="55"/></literal></expr>)<pos:position pos:line="8" pos:column="56"/></condition><then pos:line="8" pos:column="56">
		<block pos:line="9" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="10" pos:column="25">host_config_t<pos:position pos:line="10" pos:column="38"/></name> <modifier pos:line="10" pos:column="39">*<pos:position pos:line="10" pos:column="40"/></modifier></type><name pos:line="10" pos:column="40">host<pos:position pos:line="10" pos:column="44"/></name></decl>;<pos:position pos:line="10" pos:column="45"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="11" pos:column="25">char<pos:position pos:line="11" pos:column="29"/></name></type> <name><name pos:line="11" pos:column="30">cb_name<pos:position pos:line="11" pos:column="37"/></name><index pos:line="11" pos:column="37">[<expr><literal type="number" pos:line="11" pos:column="38">256<pos:position pos:line="11" pos:column="41"/></literal></expr>]<pos:position pos:line="11" pos:column="42"/></index></name></decl>;<pos:position pos:line="11" pos:column="43"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="12" pos:column="25">struct<pos:position pos:line="12" pos:column="31"/></name> <name pos:line="12" pos:column="32">timespec<pos:position pos:line="12" pos:column="40"/></name></name></type> <name pos:line="12" pos:column="41">interval<pos:position pos:line="12" pos:column="49"/></name></decl>;<pos:position pos:line="12" pos:column="50"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="13" pos:column="25">user_data_t<pos:position pos:line="13" pos:column="36"/></name></type> <name pos:line="13" pos:column="37">ud<pos:position pos:line="13" pos:column="39"/></name></decl>;<pos:position pos:line="13" pos:column="40"/></decl_stmt>

			<expr_stmt><expr><name pos:line="15" pos:column="25">host<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <call><name pos:line="15" pos:column="32">cna_config_host<pos:position pos:line="15" pos:column="47"/></name> <argument_list pos:line="15" pos:column="48">(<argument><expr><name pos:line="15" pos:column="49">item<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><name pos:line="16" pos:column="29">host<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">==<pos:position pos:line="16" pos:column="36"/></operator> <name pos:line="16" pos:column="37">NULL<pos:position pos:line="16" pos:column="41"/></name></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42">
				<block type="pseudo"><continue pos:line="17" pos:column="33">continue;<pos:position pos:line="17" pos:column="42"/></continue></block></then></if>

			<expr_stmt><expr><call><name pos:line="19" pos:column="25">ssnprintf<pos:position pos:line="19" pos:column="34"/></name> <argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">cb_name<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="45">sizeof <argument_list pos:line="19" pos:column="52">(<argument><expr><name pos:line="19" pos:column="53">cb_name<pos:position pos:line="19" pos:column="60"/></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="63">"netapp-%s"<pos:position pos:line="19" pos:column="74"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="76">host<pos:position pos:line="19" pos:column="80"/></name><operator pos:line="19" pos:column="80">-&gt;<pos:position pos:line="19" pos:column="85"/></operator><name pos:line="19" pos:column="82">name<pos:position pos:line="19" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="88"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="21" pos:column="25">memset<pos:position pos:line="21" pos:column="31"/></name> <argument_list pos:line="21" pos:column="32">(<argument><expr><operator pos:line="21" pos:column="33">&amp;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="34">interval<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="44">0<pos:position pos:line="21" pos:column="45"/></literal></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="47">sizeof <argument_list pos:line="21" pos:column="54">(<argument><expr><name pos:line="21" pos:column="55">interval<pos:position pos:line="21" pos:column="63"/></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="22" pos:column="25">interval<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">.<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">tv_sec<pos:position pos:line="22" pos:column="40"/></name></name> <operator pos:line="22" pos:column="41">=<pos:position pos:line="22" pos:column="42"/></operator> <name><name pos:line="22" pos:column="43">host<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">-&gt;<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="49">interval<pos:position pos:line="22" pos:column="57"/></name></name></expr>;<pos:position pos:line="22" pos:column="58"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="24" pos:column="25">memset<pos:position pos:line="24" pos:column="31"/></name> <argument_list pos:line="24" pos:column="32">(<argument><expr><operator pos:line="24" pos:column="33">&amp;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="34">ud<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="38">0<pos:position pos:line="24" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="41">sizeof <argument_list pos:line="24" pos:column="48">(<argument><expr><name pos:line="24" pos:column="49">ud<pos:position pos:line="24" pos:column="51"/></name></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="25" pos:column="25">ud<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">.<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">data<pos:position pos:line="25" pos:column="32"/></name></name> <operator pos:line="25" pos:column="33">=<pos:position pos:line="25" pos:column="34"/></operator> <name pos:line="25" pos:column="35">host<pos:position pos:line="25" pos:column="39"/></name></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="26" pos:column="25">ud<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">.<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="28">free_func<pos:position pos:line="26" pos:column="37"/></name></name> <operator pos:line="26" pos:column="38">=<pos:position pos:line="26" pos:column="39"/></operator> <operator pos:line="26" pos:column="40">(<pos:position pos:line="26" pos:column="41"/></operator><call><call><name pos:line="26" pos:column="41">void<pos:position pos:line="26" pos:column="45"/></name> <argument_list pos:line="26" pos:column="46">(<argument><expr><operator pos:line="26" pos:column="47">*<pos:position pos:line="26" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call> <argument_list pos:line="26" pos:column="50">(<argument><expr><name pos:line="26" pos:column="51">void<pos:position pos:line="26" pos:column="55"/></name> <operator pos:line="26" pos:column="56">*<pos:position pos:line="26" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call><operator pos:line="26" pos:column="58">)<pos:position pos:line="26" pos:column="59"/></operator> <name pos:line="26" pos:column="60">free_host_config<pos:position pos:line="26" pos:column="76"/></name></expr>;<pos:position pos:line="26" pos:column="77"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="28" pos:column="25">plugin_register_complex_read<pos:position pos:line="28" pos:column="53"/></name> <argument_list pos:line="28" pos:column="54">(<comment type="block" pos:line="28" pos:column="55">/* group = */</comment> <argument><expr><name pos:line="28" pos:column="69">NULL<pos:position pos:line="28" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="75">cb_name<pos:position pos:line="28" pos:column="82"/></name></expr></argument>,
					<comment type="block" pos:line="29" pos:column="41">/* callback  = */</comment> <argument><expr><name pos:line="29" pos:column="59">cna_read<pos:position pos:line="29" pos:column="67"/></name></expr></argument>, 
					<comment type="block" pos:line="30" pos:column="41">/* interval  = */</comment> <argument><expr><ternary><condition><expr><operator pos:line="30" pos:column="59">(<pos:position pos:line="30" pos:column="60"/></operator><name><name pos:line="30" pos:column="60">host<pos:position pos:line="30" pos:column="64"/></name><operator pos:line="30" pos:column="64">-&gt;<pos:position pos:line="30" pos:column="69"/></operator><name pos:line="30" pos:column="66">interval<pos:position pos:line="30" pos:column="74"/></name></name> <operator pos:line="30" pos:column="75">&gt;<pos:position pos:line="30" pos:column="79"/></operator> <literal type="number" pos:line="30" pos:column="77">0<pos:position pos:line="30" pos:column="78"/></literal><operator pos:line="30" pos:column="78">)<pos:position pos:line="30" pos:column="79"/></operator></expr> ?<pos:position pos:line="30" pos:column="81"/></condition><then pos:line="30" pos:column="81"> <expr><operator pos:line="30" pos:column="82">&amp;<pos:position pos:line="30" pos:column="87"/></operator><name pos:line="30" pos:column="83">interval<pos:position pos:line="30" pos:column="91"/></name></expr> <pos:position pos:line="30" pos:column="92"/></then><else pos:line="30" pos:column="92">: <expr><name pos:line="30" pos:column="94">NULL<pos:position pos:line="30" pos:column="98"/></name></expr></else></ternary></expr></argument>,
					<comment type="block" pos:line="31" pos:column="41">/* user data = */</comment> <argument><expr><operator pos:line="31" pos:column="59">&amp;<pos:position pos:line="31" pos:column="64"/></operator><name pos:line="31" pos:column="60">ud<pos:position pos:line="31" pos:column="62"/></name></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="64"/></expr_stmt>
			<continue pos:line="32" pos:column="25">continue;<pos:position pos:line="32" pos:column="34"/></continue>
		}<pos:position pos:line="33" pos:column="18"/></block></then>
		<else pos:line="34" pos:column="17">else <comment type="block" pos:line="34" pos:column="22">/* if (item-&gt;key != "Host") */</comment>
		<block pos:line="35" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">WARNING<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><literal type="string" pos:line="36" pos:column="33">"netapp plugin: Ignoring unknown config option \"%s\"."<pos:position pos:line="36" pos:column="88"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="90">item<pos:position pos:line="36" pos:column="94"/></name><operator pos:line="36" pos:column="94">-&gt;<pos:position pos:line="36" pos:column="99"/></operator><name pos:line="36" pos:column="96">key<pos:position pos:line="36" pos:column="99"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="101"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></else></if>
	}<pos:position pos:line="38" pos:column="10"/></block></for>
	<return pos:line="39" pos:column="9">return <expr><literal type="number" pos:line="39" pos:column="16">0<pos:position pos:line="39" pos:column="17"/></literal></expr>;<pos:position pos:line="39" pos:column="18"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

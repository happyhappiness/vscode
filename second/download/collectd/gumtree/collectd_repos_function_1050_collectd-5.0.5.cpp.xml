<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1050_collectd-5.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">za_init<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list> <comment type="block" pos:line="1" pos:column="27">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/* kstats chain already opened by update_kstat (using *kc), verify everything went fine. */</comment>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">kc<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">==<pos:position pos:line="4" pos:column="18"/></operator> <name pos:line="4" pos:column="19">NULL<pos:position pos:line="4" pos:column="23"/></name></expr>)<pos:position pos:line="4" pos:column="24"/></condition><then pos:line="4" pos:column="24">
	<block pos:line="5" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">ERROR<pos:position pos:line="6" pos:column="22"/></name> <argument_list pos:line="6" pos:column="23">(<argument><expr><literal type="string" pos:line="6" pos:column="24">"zfs_arc plugin: kstat chain control structure not available."<pos:position pos:line="6" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="88"/></expr_stmt>
		<return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><operator pos:line="7" pos:column="25">-<pos:position pos:line="7" pos:column="26"/></operator><literal type="number" pos:line="7" pos:column="26">1<pos:position pos:line="7" pos:column="27"/></literal><operator pos:line="7" pos:column="27">)<pos:position pos:line="7" pos:column="28"/></operator></expr>;<pos:position pos:line="7" pos:column="29"/></return>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>

	<return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal><operator pos:line="10" pos:column="18">)<pos:position pos:line="10" pos:column="19"/></operator></expr>;<pos:position pos:line="10" pos:column="20"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

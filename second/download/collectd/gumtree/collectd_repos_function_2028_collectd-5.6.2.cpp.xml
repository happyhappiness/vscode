<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2028_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensors_load_conf<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list> <block pos:line="1" pos:column="36">{
  <decl_stmt><decl><specifier pos:line="2" pos:column="3">static<pos:position pos:line="2" pos:column="9"/></specifier> <type><name pos:line="2" pos:column="10">int<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">call_once<pos:position pos:line="2" pos:column="23"/></name> <init pos:line="2" pos:column="24">= <expr><literal type="number" pos:line="2" pos:column="26">0<pos:position pos:line="2" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="28"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">fh<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><name pos:line="4" pos:column="14">NULL<pos:position pos:line="4" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">featurelist_t<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">last_feature<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><name pos:line="5" pos:column="33">NULL<pos:position pos:line="5" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">sensors_chip_name<pos:position pos:line="7" pos:column="26"/></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">chip<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">chip_num<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">status<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">call_once<pos:position pos:line="12" pos:column="16"/></name></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">call_once<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <literal type="number" pos:line="15" pos:column="15">1<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">conffile<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">!=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">NULL<pos:position pos:line="17" pos:column="23"/></name></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24"> <block pos:line="17" pos:column="25">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">fh<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">fopen<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">conffile<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="26">"r"<pos:position pos:line="18" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">fh<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">==<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">NULL<pos:position pos:line="19" pos:column="19"/></name></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20"> <block pos:line="19" pos:column="21">{
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">char<pos:position pos:line="20" pos:column="11"/></name></type> <name><name pos:line="20" pos:column="12">errbuf<pos:position pos:line="20" pos:column="18"/></name><index pos:line="20" pos:column="18">[<expr><literal type="number" pos:line="20" pos:column="19">1024<pos:position pos:line="20" pos:column="23"/></literal></expr>]<pos:position pos:line="20" pos:column="24"/></index></name></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">ERROR<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><literal type="string" pos:line="21" pos:column="13">"sensors plugin: fopen(%s) failed: %s"<pos:position pos:line="21" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">conffile<pos:position pos:line="21" pos:column="61"/></name></expr></argument>,
            <argument><expr><call><name pos:line="22" pos:column="13">sstrerror<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">errno<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="30">errbuf<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="38">sizeof<argument_list pos:line="22" pos:column="44">(<argument><expr><name pos:line="22" pos:column="45">errbuf<pos:position pos:line="22" pos:column="51"/></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="55"/></expr_stmt>
      <return pos:line="23" pos:column="7">return <expr><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><operator pos:line="23" pos:column="15">-<pos:position pos:line="23" pos:column="16"/></operator><literal type="number" pos:line="23" pos:column="16">1<pos:position pos:line="23" pos:column="17"/></literal><operator pos:line="23" pos:column="17">)<pos:position pos:line="23" pos:column="18"/></operator></expr>;<pos:position pos:line="23" pos:column="19"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="27" pos:column="3">status<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <call><name pos:line="27" pos:column="12">sensors_init<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">fh<pos:position pos:line="27" pos:column="27"/></name></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">fh<pos:position pos:line="28" pos:column="9"/></name></expr>)<pos:position pos:line="28" pos:column="10"/></condition><then pos:line="28" pos:column="10">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">fclose<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><name pos:line="29" pos:column="12">fh<pos:position pos:line="29" pos:column="14"/></name></expr></argument>)<pos:position pos:line="29" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="16"/></expr_stmt></block></then></if>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">status<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">!=<pos:position pos:line="31" pos:column="16"/></operator> <literal type="number" pos:line="31" pos:column="17">0<pos:position pos:line="31" pos:column="18"/></literal></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19"> <block pos:line="31" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">ERROR<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><literal type="string" pos:line="32" pos:column="11">"sensors plugin: Cannot initialize sensors. "<pos:position pos:line="32" pos:column="56"/></literal>
          <literal type="string" pos:line="33" pos:column="11">"Data will not be collected."<pos:position pos:line="33" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><operator pos:line="34" pos:column="13">-<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal><operator pos:line="34" pos:column="15">)<pos:position pos:line="34" pos:column="16"/></operator></expr>;<pos:position pos:line="34" pos:column="17"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

<cpp:if pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">if<pos:position pos:line="37" pos:column="4"/></cpp:directive> <expr><name pos:line="37" pos:column="5">SENSORS_API_VERSION<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">&lt;<pos:position pos:line="37" pos:column="29"/></operator> <literal type="number" pos:line="37" pos:column="27">0x400<pos:position pos:line="37" pos:column="32"/></literal></expr></cpp:if>
  <expr_stmt><expr><name pos:line="38" pos:column="3">chip_num<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <literal type="number" pos:line="38" pos:column="14">0<pos:position pos:line="38" pos:column="15"/></literal></expr>;<pos:position pos:line="38" pos:column="16"/></expr_stmt>
  <while pos:line="39" pos:column="3">while <condition pos:line="39" pos:column="9">(<expr><operator pos:line="39" pos:column="10">(<pos:position pos:line="39" pos:column="11"/></operator><name pos:line="39" pos:column="11">chip<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">sensors_get_detected_chips<pos:position pos:line="39" pos:column="44"/></name><argument_list pos:line="39" pos:column="44">(<argument><expr><operator pos:line="39" pos:column="45">&amp;<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="46">chip_num<pos:position pos:line="39" pos:column="54"/></name></expr></argument>)<pos:position pos:line="39" pos:column="55"/></argument_list></call><operator pos:line="39" pos:column="55">)<pos:position pos:line="39" pos:column="56"/></operator> <operator pos:line="39" pos:column="57">!=<pos:position pos:line="39" pos:column="59"/></operator> <name pos:line="39" pos:column="60">NULL<pos:position pos:line="39" pos:column="64"/></name></expr>)<pos:position pos:line="39" pos:column="65"/></condition> <block pos:line="39" pos:column="66">{
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">int<pos:position pos:line="40" pos:column="8"/></name></type> <name pos:line="40" pos:column="9">feature_num0<pos:position pos:line="40" pos:column="21"/></name> <init pos:line="40" pos:column="22">= <expr><literal type="number" pos:line="40" pos:column="24">0<pos:position pos:line="40" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="40" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="41" pos:column="5">int<pos:position pos:line="41" pos:column="8"/></name></type> <name pos:line="41" pos:column="9">feature_num1<pos:position pos:line="41" pos:column="21"/></name> <init pos:line="41" pos:column="22">= <expr><literal type="number" pos:line="41" pos:column="24">0<pos:position pos:line="41" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="41" pos:column="26"/></decl_stmt>

    <while pos:line="43" pos:column="5">while <condition pos:line="43" pos:column="11">(<expr><literal type="number" pos:line="43" pos:column="12">42<pos:position pos:line="43" pos:column="14"/></literal></expr>)<pos:position pos:line="43" pos:column="15"/></condition> <block pos:line="43" pos:column="16">{
      <decl_stmt><decl><type><specifier pos:line="44" pos:column="7">const<pos:position pos:line="44" pos:column="12"/></specifier> <name pos:line="44" pos:column="13">sensors_feature_data<pos:position pos:line="44" pos:column="33"/></name> <modifier pos:line="44" pos:column="34">*<pos:position pos:line="44" pos:column="35"/></modifier></type><name pos:line="44" pos:column="35">feature<pos:position pos:line="44" pos:column="42"/></name></decl>;<pos:position pos:line="44" pos:column="43"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="45" pos:column="7">int<pos:position pos:line="45" pos:column="10"/></name></type> <name pos:line="45" pos:column="11">feature_type<pos:position pos:line="45" pos:column="23"/></name></decl>;<pos:position pos:line="45" pos:column="24"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="46" pos:column="7">featurelist_t<pos:position pos:line="46" pos:column="20"/></name> <modifier pos:line="46" pos:column="21">*<pos:position pos:line="46" pos:column="22"/></modifier></type><name pos:line="46" pos:column="22">fl<pos:position pos:line="46" pos:column="24"/></name></decl>;<pos:position pos:line="46" pos:column="25"/></decl_stmt>

      <expr_stmt><expr><name pos:line="48" pos:column="7">feature<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">=<pos:position pos:line="48" pos:column="16"/></operator> <call><name pos:line="48" pos:column="17">sensors_get_all_features<pos:position pos:line="48" pos:column="41"/></name><argument_list pos:line="48" pos:column="41">(<argument><expr><operator pos:line="48" pos:column="42">*<pos:position pos:line="48" pos:column="43"/></operator><name pos:line="48" pos:column="43">chip<pos:position pos:line="48" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="49">&amp;<pos:position pos:line="48" pos:column="54"/></operator><name pos:line="48" pos:column="50">feature_num0<pos:position pos:line="48" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="64">&amp;<pos:position pos:line="48" pos:column="69"/></operator><name pos:line="48" pos:column="65">feature_num1<pos:position pos:line="48" pos:column="77"/></name></expr></argument>)<pos:position pos:line="48" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="79"/></expr_stmt>

      <comment type="block" pos:line="50" pos:column="7">/* Check if all features have been read. */</comment>
      <if pos:line="51" pos:column="7">if <condition pos:line="51" pos:column="10">(<expr><name pos:line="51" pos:column="11">feature<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">==<pos:position pos:line="51" pos:column="21"/></operator> <name pos:line="51" pos:column="22">NULL<pos:position pos:line="51" pos:column="26"/></name></expr>)<pos:position pos:line="51" pos:column="27"/></condition><then pos:line="51" pos:column="27">
        <block type="pseudo"><break pos:line="52" pos:column="9">break;<pos:position pos:line="52" pos:column="15"/></break></block></then></if>

      <comment type="block" pos:line="54" pos:column="7">/* "master features" only */</comment>
      <if pos:line="55" pos:column="7">if <condition pos:line="55" pos:column="10">(<expr><name><name pos:line="55" pos:column="11">feature<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">-&gt;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="20">mapping<pos:position pos:line="55" pos:column="27"/></name></name> <operator pos:line="55" pos:column="28">!=<pos:position pos:line="55" pos:column="30"/></operator> <name pos:line="55" pos:column="31">SENSORS_NO_MAPPING<pos:position pos:line="55" pos:column="49"/></name></expr>)<pos:position pos:line="55" pos:column="50"/></condition><then pos:line="55" pos:column="50"> <block pos:line="55" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">DEBUG<pos:position pos:line="56" pos:column="14"/></name><argument_list pos:line="56" pos:column="14">(<argument><expr><literal type="string" pos:line="56" pos:column="15">"sensors plugin: sensors_load_conf: "<pos:position pos:line="56" pos:column="52"/></literal>
              <literal type="string" pos:line="57" pos:column="15">"Ignoring subfeature `%s', "<pos:position pos:line="57" pos:column="43"/></literal>
              <literal type="string" pos:line="58" pos:column="15">"because (feature-&gt;mapping "<pos:position pos:line="58" pos:column="46"/></literal>
              <literal type="string" pos:line="59" pos:column="15">"!= SENSORS_NO_MAPPING)."<pos:position pos:line="59" pos:column="40"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="60" pos:column="15">feature<pos:position pos:line="60" pos:column="22"/></name><operator pos:line="60" pos:column="22">-&gt;<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="24">name<pos:position pos:line="60" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt>
        <continue pos:line="61" pos:column="9">continue;<pos:position pos:line="61" pos:column="18"/></continue>
      }<pos:position pos:line="62" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="64" pos:column="7">/* skip ignored in sensors.conf */</comment>
      <if pos:line="65" pos:column="7">if <condition pos:line="65" pos:column="10">(<expr><call><name pos:line="65" pos:column="11">sensors_get_ignored<pos:position pos:line="65" pos:column="30"/></name><argument_list pos:line="65" pos:column="30">(<argument><expr><operator pos:line="65" pos:column="31">*<pos:position pos:line="65" pos:column="32"/></operator><name pos:line="65" pos:column="32">chip<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="38">feature<pos:position pos:line="65" pos:column="45"/></name><operator pos:line="65" pos:column="45">-&gt;<pos:position pos:line="65" pos:column="50"/></operator><name pos:line="65" pos:column="47">number<pos:position pos:line="65" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="54"/></argument_list></call> <operator pos:line="65" pos:column="55">==<pos:position pos:line="65" pos:column="57"/></operator> <literal type="number" pos:line="65" pos:column="58">0<pos:position pos:line="65" pos:column="59"/></literal></expr>)<pos:position pos:line="65" pos:column="60"/></condition><then pos:line="65" pos:column="60"> <block pos:line="65" pos:column="61">{
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">DEBUG<pos:position pos:line="66" pos:column="14"/></name><argument_list pos:line="66" pos:column="14">(<argument><expr><literal type="string" pos:line="66" pos:column="15">"sensors plugin: sensors_load_conf: "<pos:position pos:line="66" pos:column="52"/></literal>
              <literal type="string" pos:line="67" pos:column="15">"Ignoring subfeature `%s', "<pos:position pos:line="67" pos:column="43"/></literal>
              <literal type="string" pos:line="68" pos:column="15">"because "<pos:position pos:line="68" pos:column="25"/></literal>
              <literal type="string" pos:line="69" pos:column="15">"`sensors_get_ignored' told "<pos:position pos:line="69" pos:column="44"/></literal>
              <literal type="string" pos:line="70" pos:column="15">"me so."<pos:position pos:line="70" pos:column="23"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="71" pos:column="15">feature<pos:position pos:line="71" pos:column="22"/></name><operator pos:line="71" pos:column="22">-&gt;<pos:position pos:line="71" pos:column="27"/></operator><name pos:line="71" pos:column="24">name<pos:position pos:line="71" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="30"/></expr_stmt>
        <continue pos:line="72" pos:column="9">continue;<pos:position pos:line="72" pos:column="18"/></continue>
      }<pos:position pos:line="73" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="75" pos:column="7">feature_type<pos:position pos:line="75" pos:column="19"/></name> <operator pos:line="75" pos:column="20">=<pos:position pos:line="75" pos:column="21"/></operator> <call><name pos:line="75" pos:column="22">sensors_feature_name_to_type<pos:position pos:line="75" pos:column="50"/></name><argument_list pos:line="75" pos:column="50">(<argument><expr><name><name pos:line="75" pos:column="51">feature<pos:position pos:line="75" pos:column="58"/></name><operator pos:line="75" pos:column="58">-&gt;<pos:position pos:line="75" pos:column="63"/></operator><name pos:line="75" pos:column="60">name<pos:position pos:line="75" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="66"/></expr_stmt>
      <if pos:line="76" pos:column="7">if <condition pos:line="76" pos:column="10">(<expr><name pos:line="76" pos:column="11">feature_type<pos:position pos:line="76" pos:column="23"/></name> <operator pos:line="76" pos:column="24">==<pos:position pos:line="76" pos:column="26"/></operator> <name pos:line="76" pos:column="27">SENSOR_TYPE_UNKNOWN<pos:position pos:line="76" pos:column="46"/></name></expr>)<pos:position pos:line="76" pos:column="47"/></condition><then pos:line="76" pos:column="47"> <block pos:line="76" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">DEBUG<pos:position pos:line="77" pos:column="14"/></name><argument_list pos:line="77" pos:column="14">(<argument><expr><literal type="string" pos:line="77" pos:column="15">"sensors plugin: sensors_load_conf: "<pos:position pos:line="77" pos:column="52"/></literal>
              <literal type="string" pos:line="78" pos:column="15">"Ignoring subfeature `%s', "<pos:position pos:line="78" pos:column="43"/></literal>
              <literal type="string" pos:line="79" pos:column="15">"because its type is "<pos:position pos:line="79" pos:column="37"/></literal>
              <literal type="string" pos:line="80" pos:column="15">"unknown."<pos:position pos:line="80" pos:column="25"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="81" pos:column="15">feature<pos:position pos:line="81" pos:column="22"/></name><operator pos:line="81" pos:column="22">-&gt;<pos:position pos:line="81" pos:column="27"/></operator><name pos:line="81" pos:column="24">name<pos:position pos:line="81" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="30"/></expr_stmt>
        <continue pos:line="82" pos:column="9">continue;<pos:position pos:line="82" pos:column="18"/></continue>
      }<pos:position pos:line="83" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="85" pos:column="7">fl<pos:position pos:line="85" pos:column="9"/></name> <operator pos:line="85" pos:column="10">=<pos:position pos:line="85" pos:column="11"/></operator> <call><name pos:line="85" pos:column="12">calloc<pos:position pos:line="85" pos:column="18"/></name><argument_list pos:line="85" pos:column="18">(<argument><expr><literal type="number" pos:line="85" pos:column="19">1<pos:position pos:line="85" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="85" pos:column="22">sizeof<argument_list pos:line="85" pos:column="28">(<argument><expr><operator pos:line="85" pos:column="29">*<pos:position pos:line="85" pos:column="30"/></operator><name pos:line="85" pos:column="30">fl<pos:position pos:line="85" pos:column="32"/></name></expr></argument>)<pos:position pos:line="85" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="85" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt>
      <if pos:line="86" pos:column="7">if <condition pos:line="86" pos:column="10">(<expr><name pos:line="86" pos:column="11">fl<pos:position pos:line="86" pos:column="13"/></name> <operator pos:line="86" pos:column="14">==<pos:position pos:line="86" pos:column="16"/></operator> <name pos:line="86" pos:column="17">NULL<pos:position pos:line="86" pos:column="21"/></name></expr>)<pos:position pos:line="86" pos:column="22"/></condition><then pos:line="86" pos:column="22"> <block pos:line="86" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">ERROR<pos:position pos:line="87" pos:column="14"/></name><argument_list pos:line="87" pos:column="14">(<argument><expr><literal type="string" pos:line="87" pos:column="15">"sensors plugin: calloc failed."<pos:position pos:line="87" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="49"/></expr_stmt>
        <continue pos:line="88" pos:column="9">continue;<pos:position pos:line="88" pos:column="18"/></continue>
      }<pos:position pos:line="89" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="91" pos:column="7">fl<pos:position pos:line="91" pos:column="9"/></name><operator pos:line="91" pos:column="9">-&gt;<pos:position pos:line="91" pos:column="14"/></operator><name pos:line="91" pos:column="11">chip<pos:position pos:line="91" pos:column="15"/></name></name> <operator pos:line="91" pos:column="16">=<pos:position pos:line="91" pos:column="17"/></operator> <name pos:line="91" pos:column="18">chip<pos:position pos:line="91" pos:column="22"/></name></expr>;<pos:position pos:line="91" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="92" pos:column="7">fl<pos:position pos:line="92" pos:column="9"/></name><operator pos:line="92" pos:column="9">-&gt;<pos:position pos:line="92" pos:column="14"/></operator><name pos:line="92" pos:column="11">data<pos:position pos:line="92" pos:column="15"/></name></name> <operator pos:line="92" pos:column="16">=<pos:position pos:line="92" pos:column="17"/></operator> <name pos:line="92" pos:column="18">feature<pos:position pos:line="92" pos:column="25"/></name></expr>;<pos:position pos:line="92" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="93" pos:column="7">fl<pos:position pos:line="93" pos:column="9"/></name><operator pos:line="93" pos:column="9">-&gt;<pos:position pos:line="93" pos:column="14"/></operator><name pos:line="93" pos:column="11">type<pos:position pos:line="93" pos:column="15"/></name></name> <operator pos:line="93" pos:column="16">=<pos:position pos:line="93" pos:column="17"/></operator> <name pos:line="93" pos:column="18">feature_type<pos:position pos:line="93" pos:column="30"/></name></expr>;<pos:position pos:line="93" pos:column="31"/></expr_stmt>

      <if pos:line="95" pos:column="7">if <condition pos:line="95" pos:column="10">(<expr><name pos:line="95" pos:column="11">first_feature<pos:position pos:line="95" pos:column="24"/></name> <operator pos:line="95" pos:column="25">==<pos:position pos:line="95" pos:column="27"/></operator> <name pos:line="95" pos:column="28">NULL<pos:position pos:line="95" pos:column="32"/></name></expr>)<pos:position pos:line="95" pos:column="33"/></condition><then pos:line="95" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="9">first_feature<pos:position pos:line="96" pos:column="22"/></name> <operator pos:line="96" pos:column="23">=<pos:position pos:line="96" pos:column="24"/></operator> <name pos:line="96" pos:column="25">fl<pos:position pos:line="96" pos:column="27"/></name></expr>;<pos:position pos:line="96" pos:column="28"/></expr_stmt></block></then>
      <else pos:line="97" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="98" pos:column="9">last_feature<pos:position pos:line="98" pos:column="21"/></name><operator pos:line="98" pos:column="21">-&gt;<pos:position pos:line="98" pos:column="26"/></operator><name pos:line="98" pos:column="23">next<pos:position pos:line="98" pos:column="27"/></name></name> <operator pos:line="98" pos:column="28">=<pos:position pos:line="98" pos:column="29"/></operator> <name pos:line="98" pos:column="30">fl<pos:position pos:line="98" pos:column="32"/></name></expr>;<pos:position pos:line="98" pos:column="33"/></expr_stmt></block></else></if>
      <expr_stmt><expr><name pos:line="99" pos:column="7">last_feature<pos:position pos:line="99" pos:column="19"/></name> <operator pos:line="99" pos:column="20">=<pos:position pos:line="99" pos:column="21"/></operator> <name pos:line="99" pos:column="22">fl<pos:position pos:line="99" pos:column="24"/></name></expr>;<pos:position pos:line="99" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></while> <comment type="block" pos:line="100" pos:column="7">/* while sensors_get_all_features */</comment>
  }<pos:position pos:line="101" pos:column="4"/></block></while>   <comment type="block" pos:line="101" pos:column="7">/* while sensors_get_detected_chips */</comment>
<comment type="block" pos:line="102" pos:column="1">/* #endif SENSORS_API_VERSION &lt; 0x400 */</comment>

<cpp:elif pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">elif<pos:position pos:line="104" pos:column="6"/></cpp:directive> <expr><operator pos:line="104" pos:column="7">(<pos:position pos:line="104" pos:column="8"/></operator><name pos:line="104" pos:column="8">SENSORS_API_VERSION<pos:position pos:line="104" pos:column="27"/></name> <operator pos:line="104" pos:column="28">&gt;=<pos:position pos:line="104" pos:column="33"/></operator> <literal type="number" pos:line="104" pos:column="31">0x400<pos:position pos:line="104" pos:column="36"/></literal><operator pos:line="104" pos:column="36">)<pos:position pos:line="104" pos:column="37"/></operator> <operator pos:line="104" pos:column="38">&amp;&amp;<pos:position pos:line="104" pos:column="48"/></operator> <operator pos:line="104" pos:column="41">(<pos:position pos:line="104" pos:column="42"/></operator><name pos:line="104" pos:column="42">SENSORS_API_VERSION<pos:position pos:line="104" pos:column="61"/></name> <operator pos:line="104" pos:column="62">&lt;<pos:position pos:line="104" pos:column="66"/></operator> <literal type="number" pos:line="104" pos:column="64">0x500<pos:position pos:line="104" pos:column="69"/></literal><operator pos:line="104" pos:column="69">)<pos:position pos:line="104" pos:column="70"/></operator></expr></cpp:elif>
  <expr_stmt><expr><name pos:line="105" pos:column="3">chip_num<pos:position pos:line="105" pos:column="11"/></name> <operator pos:line="105" pos:column="12">=<pos:position pos:line="105" pos:column="13"/></operator> <literal type="number" pos:line="105" pos:column="14">0<pos:position pos:line="105" pos:column="15"/></literal></expr>;<pos:position pos:line="105" pos:column="16"/></expr_stmt>
  <while pos:line="106" pos:column="3">while <condition pos:line="106" pos:column="9">(<expr><operator pos:line="106" pos:column="10">(<pos:position pos:line="106" pos:column="11"/></operator><name pos:line="106" pos:column="11">chip<pos:position pos:line="106" pos:column="15"/></name> <operator pos:line="106" pos:column="16">=<pos:position pos:line="106" pos:column="17"/></operator> <call><name pos:line="106" pos:column="18">sensors_get_detected_chips<pos:position pos:line="106" pos:column="44"/></name><argument_list pos:line="106" pos:column="44">(<argument><expr><name pos:line="106" pos:column="45">NULL<pos:position pos:line="106" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="51">&amp;<pos:position pos:line="106" pos:column="56"/></operator><name pos:line="106" pos:column="52">chip_num<pos:position pos:line="106" pos:column="60"/></name></expr></argument>)<pos:position pos:line="106" pos:column="61"/></argument_list></call><operator pos:line="106" pos:column="61">)<pos:position pos:line="106" pos:column="62"/></operator> <operator pos:line="106" pos:column="63">!=<pos:position pos:line="106" pos:column="65"/></operator> <name pos:line="106" pos:column="66">NULL<pos:position pos:line="106" pos:column="70"/></name></expr>)<pos:position pos:line="106" pos:column="71"/></condition> <block pos:line="106" pos:column="72">{
    <decl_stmt><decl><type><specifier pos:line="107" pos:column="5">const<pos:position pos:line="107" pos:column="10"/></specifier> <name pos:line="107" pos:column="11">sensors_feature<pos:position pos:line="107" pos:column="26"/></name> <modifier pos:line="107" pos:column="27">*<pos:position pos:line="107" pos:column="28"/></modifier></type><name pos:line="107" pos:column="28">feature<pos:position pos:line="107" pos:column="35"/></name></decl>;<pos:position pos:line="107" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="108" pos:column="5">int<pos:position pos:line="108" pos:column="8"/></name></type> <name pos:line="108" pos:column="9">feature_num<pos:position pos:line="108" pos:column="20"/></name> <init pos:line="108" pos:column="21">= <expr><literal type="number" pos:line="108" pos:column="23">0<pos:position pos:line="108" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="108" pos:column="25"/></decl_stmt>

    <while pos:line="110" pos:column="5">while <condition pos:line="110" pos:column="11">(<expr><operator pos:line="110" pos:column="12">(<pos:position pos:line="110" pos:column="13"/></operator><name pos:line="110" pos:column="13">feature<pos:position pos:line="110" pos:column="20"/></name> <operator pos:line="110" pos:column="21">=<pos:position pos:line="110" pos:column="22"/></operator> <call><name pos:line="110" pos:column="23">sensors_get_features<pos:position pos:line="110" pos:column="43"/></name><argument_list pos:line="110" pos:column="43">(<argument><expr><name pos:line="110" pos:column="44">chip<pos:position pos:line="110" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="110" pos:column="50">&amp;<pos:position pos:line="110" pos:column="55"/></operator><name pos:line="110" pos:column="51">feature_num<pos:position pos:line="110" pos:column="62"/></name></expr></argument>)<pos:position pos:line="110" pos:column="63"/></argument_list></call><operator pos:line="110" pos:column="63">)<pos:position pos:line="110" pos:column="64"/></operator> <operator pos:line="110" pos:column="65">!=<pos:position pos:line="110" pos:column="67"/></operator> <name pos:line="110" pos:column="68">NULL<pos:position pos:line="110" pos:column="72"/></name></expr>)<pos:position pos:line="110" pos:column="73"/></condition> <block pos:line="110" pos:column="74">{
      <decl_stmt><decl><type><specifier pos:line="111" pos:column="7">const<pos:position pos:line="111" pos:column="12"/></specifier> <name pos:line="111" pos:column="13">sensors_subfeature<pos:position pos:line="111" pos:column="31"/></name> <modifier pos:line="111" pos:column="32">*<pos:position pos:line="111" pos:column="33"/></modifier></type><name pos:line="111" pos:column="33">subfeature<pos:position pos:line="111" pos:column="43"/></name></decl>;<pos:position pos:line="111" pos:column="44"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="112" pos:column="7">int<pos:position pos:line="112" pos:column="10"/></name></type> <name pos:line="112" pos:column="11">subfeature_num<pos:position pos:line="112" pos:column="25"/></name> <init pos:line="112" pos:column="26">= <expr><literal type="number" pos:line="112" pos:column="28">0<pos:position pos:line="112" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="112" pos:column="30"/></decl_stmt>

      <comment type="block" pos:line="114" pos:column="7">/* Only handle voltage, fanspeeds and temperatures */</comment>
      <if pos:line="115" pos:column="7">if <condition pos:line="115" pos:column="10">(<expr><operator pos:line="115" pos:column="11">(<pos:position pos:line="115" pos:column="12"/></operator><name><name pos:line="115" pos:column="12">feature<pos:position pos:line="115" pos:column="19"/></name><operator pos:line="115" pos:column="19">-&gt;<pos:position pos:line="115" pos:column="24"/></operator><name pos:line="115" pos:column="21">type<pos:position pos:line="115" pos:column="25"/></name></name> <operator pos:line="115" pos:column="26">!=<pos:position pos:line="115" pos:column="28"/></operator> <name pos:line="115" pos:column="29">SENSORS_FEATURE_IN<pos:position pos:line="115" pos:column="47"/></name><operator pos:line="115" pos:column="47">)<pos:position pos:line="115" pos:column="48"/></operator> <operator pos:line="115" pos:column="49">&amp;&amp;<pos:position pos:line="115" pos:column="59"/></operator>
          <operator pos:line="116" pos:column="11">(<pos:position pos:line="116" pos:column="12"/></operator><name><name pos:line="116" pos:column="12">feature<pos:position pos:line="116" pos:column="19"/></name><operator pos:line="116" pos:column="19">-&gt;<pos:position pos:line="116" pos:column="24"/></operator><name pos:line="116" pos:column="21">type<pos:position pos:line="116" pos:column="25"/></name></name> <operator pos:line="116" pos:column="26">!=<pos:position pos:line="116" pos:column="28"/></operator> <name pos:line="116" pos:column="29">SENSORS_FEATURE_FAN<pos:position pos:line="116" pos:column="48"/></name><operator pos:line="116" pos:column="48">)<pos:position pos:line="116" pos:column="49"/></operator> <operator pos:line="116" pos:column="50">&amp;&amp;<pos:position pos:line="116" pos:column="60"/></operator>
          <operator pos:line="117" pos:column="11">(<pos:position pos:line="117" pos:column="12"/></operator><name><name pos:line="117" pos:column="12">feature<pos:position pos:line="117" pos:column="19"/></name><operator pos:line="117" pos:column="19">-&gt;<pos:position pos:line="117" pos:column="24"/></operator><name pos:line="117" pos:column="21">type<pos:position pos:line="117" pos:column="25"/></name></name> <operator pos:line="117" pos:column="26">!=<pos:position pos:line="117" pos:column="28"/></operator> <name pos:line="117" pos:column="29">SENSORS_FEATURE_TEMP<pos:position pos:line="117" pos:column="49"/></name><operator pos:line="117" pos:column="49">)<pos:position pos:line="117" pos:column="50"/></operator> <operator pos:line="117" pos:column="51">&amp;&amp;<pos:position pos:line="117" pos:column="61"/></operator>
          <operator pos:line="118" pos:column="11">(<pos:position pos:line="118" pos:column="12"/></operator><name><name pos:line="118" pos:column="12">feature<pos:position pos:line="118" pos:column="19"/></name><operator pos:line="118" pos:column="19">-&gt;<pos:position pos:line="118" pos:column="24"/></operator><name pos:line="118" pos:column="21">type<pos:position pos:line="118" pos:column="25"/></name></name> <operator pos:line="118" pos:column="26">!=<pos:position pos:line="118" pos:column="28"/></operator> <name pos:line="118" pos:column="29">SENSORS_FEATURE_POWER<pos:position pos:line="118" pos:column="50"/></name><operator pos:line="118" pos:column="50">)<pos:position pos:line="118" pos:column="51"/></operator></expr>)<pos:position pos:line="118" pos:column="52"/></condition><then pos:line="118" pos:column="52"> <block pos:line="118" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="119" pos:column="9">DEBUG<pos:position pos:line="119" pos:column="14"/></name><argument_list pos:line="119" pos:column="14">(<argument><expr><literal type="string" pos:line="119" pos:column="15">"sensors plugin: sensors_load_conf: "<pos:position pos:line="119" pos:column="52"/></literal>
              <literal type="string" pos:line="120" pos:column="15">"Ignoring feature `%s', "<pos:position pos:line="120" pos:column="40"/></literal>
              <literal type="string" pos:line="121" pos:column="15">"because its type is not "<pos:position pos:line="121" pos:column="41"/></literal>
              <literal type="string" pos:line="122" pos:column="15">"supported."<pos:position pos:line="122" pos:column="27"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="123" pos:column="15">feature<pos:position pos:line="123" pos:column="22"/></name><operator pos:line="123" pos:column="22">-&gt;<pos:position pos:line="123" pos:column="27"/></operator><name pos:line="123" pos:column="24">name<pos:position pos:line="123" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="30"/></expr_stmt>
        <continue pos:line="124" pos:column="9">continue;<pos:position pos:line="124" pos:column="18"/></continue>
      }<pos:position pos:line="125" pos:column="8"/></block></then></if>

      <while pos:line="127" pos:column="7">while <condition pos:line="127" pos:column="13">(<expr><operator pos:line="127" pos:column="14">(<pos:position pos:line="127" pos:column="15"/></operator><name pos:line="127" pos:column="15">subfeature<pos:position pos:line="127" pos:column="25"/></name> <operator pos:line="127" pos:column="26">=<pos:position pos:line="127" pos:column="27"/></operator> <call><name pos:line="127" pos:column="28">sensors_get_all_subfeatures<pos:position pos:line="127" pos:column="55"/></name><argument_list pos:line="127" pos:column="55">(
                  <argument><expr><name pos:line="128" pos:column="19">chip<pos:position pos:line="128" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="25">feature<pos:position pos:line="128" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="128" pos:column="34">&amp;<pos:position pos:line="128" pos:column="39"/></operator><name pos:line="128" pos:column="35">subfeature_num<pos:position pos:line="128" pos:column="49"/></name></expr></argument>)<pos:position pos:line="128" pos:column="50"/></argument_list></call><operator pos:line="128" pos:column="50">)<pos:position pos:line="128" pos:column="51"/></operator> <operator pos:line="128" pos:column="52">!=<pos:position pos:line="128" pos:column="54"/></operator> <name pos:line="128" pos:column="55">NULL<pos:position pos:line="128" pos:column="59"/></name></expr>)<pos:position pos:line="128" pos:column="60"/></condition> <block pos:line="128" pos:column="61">{
        <decl_stmt><decl><type><name pos:line="129" pos:column="9">featurelist_t<pos:position pos:line="129" pos:column="22"/></name> <modifier pos:line="129" pos:column="23">*<pos:position pos:line="129" pos:column="24"/></modifier></type><name pos:line="129" pos:column="24">fl<pos:position pos:line="129" pos:column="26"/></name></decl>;<pos:position pos:line="129" pos:column="27"/></decl_stmt>

        <if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><operator pos:line="131" pos:column="13">(<pos:position pos:line="131" pos:column="14"/></operator><name><name pos:line="131" pos:column="14">subfeature<pos:position pos:line="131" pos:column="24"/></name><operator pos:line="131" pos:column="24">-&gt;<pos:position pos:line="131" pos:column="29"/></operator><name pos:line="131" pos:column="26">type<pos:position pos:line="131" pos:column="30"/></name></name> <operator pos:line="131" pos:column="31">!=<pos:position pos:line="131" pos:column="33"/></operator> <name pos:line="131" pos:column="34">SENSORS_SUBFEATURE_IN_INPUT<pos:position pos:line="131" pos:column="61"/></name><operator pos:line="131" pos:column="61">)<pos:position pos:line="131" pos:column="62"/></operator> <operator pos:line="131" pos:column="63">&amp;&amp;<pos:position pos:line="131" pos:column="73"/></operator>
            <operator pos:line="132" pos:column="13">(<pos:position pos:line="132" pos:column="14"/></operator><name><name pos:line="132" pos:column="14">subfeature<pos:position pos:line="132" pos:column="24"/></name><operator pos:line="132" pos:column="24">-&gt;<pos:position pos:line="132" pos:column="29"/></operator><name pos:line="132" pos:column="26">type<pos:position pos:line="132" pos:column="30"/></name></name> <operator pos:line="132" pos:column="31">!=<pos:position pos:line="132" pos:column="33"/></operator> <name pos:line="132" pos:column="34">SENSORS_SUBFEATURE_FAN_INPUT<pos:position pos:line="132" pos:column="62"/></name><operator pos:line="132" pos:column="62">)<pos:position pos:line="132" pos:column="63"/></operator> <operator pos:line="132" pos:column="64">&amp;&amp;<pos:position pos:line="132" pos:column="74"/></operator>
            <operator pos:line="133" pos:column="13">(<pos:position pos:line="133" pos:column="14"/></operator><name><name pos:line="133" pos:column="14">subfeature<pos:position pos:line="133" pos:column="24"/></name><operator pos:line="133" pos:column="24">-&gt;<pos:position pos:line="133" pos:column="29"/></operator><name pos:line="133" pos:column="26">type<pos:position pos:line="133" pos:column="30"/></name></name> <operator pos:line="133" pos:column="31">!=<pos:position pos:line="133" pos:column="33"/></operator> <name pos:line="133" pos:column="34">SENSORS_SUBFEATURE_TEMP_INPUT<pos:position pos:line="133" pos:column="63"/></name><operator pos:line="133" pos:column="63">)<pos:position pos:line="133" pos:column="64"/></operator> <operator pos:line="133" pos:column="65">&amp;&amp;<pos:position pos:line="133" pos:column="75"/></operator>
            <operator pos:line="134" pos:column="13">(<pos:position pos:line="134" pos:column="14"/></operator><name><name pos:line="134" pos:column="14">subfeature<pos:position pos:line="134" pos:column="24"/></name><operator pos:line="134" pos:column="24">-&gt;<pos:position pos:line="134" pos:column="29"/></operator><name pos:line="134" pos:column="26">type<pos:position pos:line="134" pos:column="30"/></name></name> <operator pos:line="134" pos:column="31">!=<pos:position pos:line="134" pos:column="33"/></operator> <name pos:line="134" pos:column="34">SENSORS_SUBFEATURE_POWER_INPUT<pos:position pos:line="134" pos:column="64"/></name><operator pos:line="134" pos:column="64">)<pos:position pos:line="134" pos:column="65"/></operator></expr>)<pos:position pos:line="134" pos:column="66"/></condition><then pos:line="134" pos:column="66">
          <block type="pseudo"><continue pos:line="135" pos:column="11">continue;<pos:position pos:line="135" pos:column="20"/></continue></block></then></if>

        <expr_stmt><expr><name pos:line="137" pos:column="9">fl<pos:position pos:line="137" pos:column="11"/></name> <operator pos:line="137" pos:column="12">=<pos:position pos:line="137" pos:column="13"/></operator> <call><name pos:line="137" pos:column="14">calloc<pos:position pos:line="137" pos:column="20"/></name><argument_list pos:line="137" pos:column="20">(<argument><expr><literal type="number" pos:line="137" pos:column="21">1<pos:position pos:line="137" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="137" pos:column="24">sizeof<argument_list pos:line="137" pos:column="30">(<argument><expr><operator pos:line="137" pos:column="31">*<pos:position pos:line="137" pos:column="32"/></operator><name pos:line="137" pos:column="32">fl<pos:position pos:line="137" pos:column="34"/></name></expr></argument>)<pos:position pos:line="137" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="137" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="37"/></expr_stmt>
        <if pos:line="138" pos:column="9">if <condition pos:line="138" pos:column="12">(<expr><name pos:line="138" pos:column="13">fl<pos:position pos:line="138" pos:column="15"/></name> <operator pos:line="138" pos:column="16">==<pos:position pos:line="138" pos:column="18"/></operator> <name pos:line="138" pos:column="19">NULL<pos:position pos:line="138" pos:column="23"/></name></expr>)<pos:position pos:line="138" pos:column="24"/></condition><then pos:line="138" pos:column="24"> <block pos:line="138" pos:column="25">{
          <expr_stmt><expr><call><name pos:line="139" pos:column="11">ERROR<pos:position pos:line="139" pos:column="16"/></name><argument_list pos:line="139" pos:column="16">(<argument><expr><literal type="string" pos:line="139" pos:column="17">"sensors plugin: calloc failed."<pos:position pos:line="139" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="51"/></expr_stmt>
          <continue pos:line="140" pos:column="11">continue;<pos:position pos:line="140" pos:column="20"/></continue>
        }<pos:position pos:line="141" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="143" pos:column="9">fl<pos:position pos:line="143" pos:column="11"/></name><operator pos:line="143" pos:column="11">-&gt;<pos:position pos:line="143" pos:column="16"/></operator><name pos:line="143" pos:column="13">chip<pos:position pos:line="143" pos:column="17"/></name></name> <operator pos:line="143" pos:column="18">=<pos:position pos:line="143" pos:column="19"/></operator> <name pos:line="143" pos:column="20">chip<pos:position pos:line="143" pos:column="24"/></name></expr>;<pos:position pos:line="143" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="144" pos:column="9">fl<pos:position pos:line="144" pos:column="11"/></name><operator pos:line="144" pos:column="11">-&gt;<pos:position pos:line="144" pos:column="16"/></operator><name pos:line="144" pos:column="13">feature<pos:position pos:line="144" pos:column="20"/></name></name> <operator pos:line="144" pos:column="21">=<pos:position pos:line="144" pos:column="22"/></operator> <name pos:line="144" pos:column="23">feature<pos:position pos:line="144" pos:column="30"/></name></expr>;<pos:position pos:line="144" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="145" pos:column="9">fl<pos:position pos:line="145" pos:column="11"/></name><operator pos:line="145" pos:column="11">-&gt;<pos:position pos:line="145" pos:column="16"/></operator><name pos:line="145" pos:column="13">subfeature<pos:position pos:line="145" pos:column="23"/></name></name> <operator pos:line="145" pos:column="24">=<pos:position pos:line="145" pos:column="25"/></operator> <name pos:line="145" pos:column="26">subfeature<pos:position pos:line="145" pos:column="36"/></name></expr>;<pos:position pos:line="145" pos:column="37"/></expr_stmt>

        <if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><name pos:line="147" pos:column="13">first_feature<pos:position pos:line="147" pos:column="26"/></name> <operator pos:line="147" pos:column="27">==<pos:position pos:line="147" pos:column="29"/></operator> <name pos:line="147" pos:column="30">NULL<pos:position pos:line="147" pos:column="34"/></name></expr>)<pos:position pos:line="147" pos:column="35"/></condition><then pos:line="147" pos:column="35">
          <block type="pseudo"><expr_stmt><expr><name pos:line="148" pos:column="11">first_feature<pos:position pos:line="148" pos:column="24"/></name> <operator pos:line="148" pos:column="25">=<pos:position pos:line="148" pos:column="26"/></operator> <name pos:line="148" pos:column="27">fl<pos:position pos:line="148" pos:column="29"/></name></expr>;<pos:position pos:line="148" pos:column="30"/></expr_stmt></block></then>
        <else pos:line="149" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="150" pos:column="11">last_feature<pos:position pos:line="150" pos:column="23"/></name><operator pos:line="150" pos:column="23">-&gt;<pos:position pos:line="150" pos:column="28"/></operator><name pos:line="150" pos:column="25">next<pos:position pos:line="150" pos:column="29"/></name></name> <operator pos:line="150" pos:column="30">=<pos:position pos:line="150" pos:column="31"/></operator> <name pos:line="150" pos:column="32">fl<pos:position pos:line="150" pos:column="34"/></name></expr>;<pos:position pos:line="150" pos:column="35"/></expr_stmt></block></else></if>
        <expr_stmt><expr><name pos:line="151" pos:column="9">last_feature<pos:position pos:line="151" pos:column="21"/></name> <operator pos:line="151" pos:column="22">=<pos:position pos:line="151" pos:column="23"/></operator> <name pos:line="151" pos:column="24">fl<pos:position pos:line="151" pos:column="26"/></name></expr>;<pos:position pos:line="151" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="152" pos:column="8"/></block></while> <comment type="block" pos:line="152" pos:column="9">/* while (subfeature) */</comment>
    }<pos:position pos:line="153" pos:column="6"/></block></while>   <comment type="block" pos:line="153" pos:column="9">/* while (feature) */</comment>
  }<pos:position pos:line="154" pos:column="4"/></block></while>     <comment type="block" pos:line="154" pos:column="9">/* while (chip) */</comment>
<cpp:endif pos:line="155" pos:column="1">#<cpp:directive pos:line="155" pos:column="2">endif<pos:position pos:line="155" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="155" pos:column="8">/* (SENSORS_API_VERSION &gt;= 0x400) &amp;&amp; (SENSORS_API_VERSION &lt; 0x500) */</comment>

  <if pos:line="157" pos:column="3">if <condition pos:line="157" pos:column="6">(<expr><name pos:line="157" pos:column="7">first_feature<pos:position pos:line="157" pos:column="20"/></name> <operator pos:line="157" pos:column="21">==<pos:position pos:line="157" pos:column="23"/></operator> <name pos:line="157" pos:column="24">NULL<pos:position pos:line="157" pos:column="28"/></name></expr>)<pos:position pos:line="157" pos:column="29"/></condition><then pos:line="157" pos:column="29"> <block pos:line="157" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="158" pos:column="5">sensors_cleanup<pos:position pos:line="158" pos:column="20"/></name><argument_list pos:line="158" pos:column="20">()<pos:position pos:line="158" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="159" pos:column="5">INFO<pos:position pos:line="159" pos:column="9"/></name><argument_list pos:line="159" pos:column="9">(<argument><expr><literal type="string" pos:line="159" pos:column="10">"sensors plugin: lm_sensors reports no "<pos:position pos:line="159" pos:column="50"/></literal>
         <literal type="string" pos:line="160" pos:column="10">"features. Data will not be collected."<pos:position pos:line="160" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="51"/></expr_stmt>
    <return pos:line="161" pos:column="5">return <expr><operator pos:line="161" pos:column="12">(<pos:position pos:line="161" pos:column="13"/></operator><operator pos:line="161" pos:column="13">-<pos:position pos:line="161" pos:column="14"/></operator><literal type="number" pos:line="161" pos:column="14">1<pos:position pos:line="161" pos:column="15"/></literal><operator pos:line="161" pos:column="15">)<pos:position pos:line="161" pos:column="16"/></operator></expr>;<pos:position pos:line="161" pos:column="17"/></return>
  }<pos:position pos:line="162" pos:column="4"/></block></then></if>

  <return pos:line="164" pos:column="3">return <expr><operator pos:line="164" pos:column="10">(<pos:position pos:line="164" pos:column="11"/></operator><literal type="number" pos:line="164" pos:column="11">0<pos:position pos:line="164" pos:column="12"/></literal><operator pos:line="164" pos:column="12">)<pos:position pos:line="164" pos:column="13"/></operator></expr>;<pos:position pos:line="164" pos:column="14"/></return>
}<pos:position pos:line="165" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_313_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cpu_commit<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list> <comment type="block" pos:line="1" pos:column="30">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">gauge_t<pos:position pos:line="3" pos:column="10"/></name></type> <name><name pos:line="3" pos:column="11">global_rates<pos:position pos:line="3" pos:column="23"/></name><index pos:line="3" pos:column="23">[<expr><name pos:line="3" pos:column="24">COLLECTD_CPU_STATE_MAX<pos:position pos:line="3" pos:column="46"/></name></expr>]<pos:position pos:line="3" pos:column="47"/></index></name> <init pos:line="3" pos:column="48">= <expr><block pos:line="3" pos:column="50">{
      <expr><name pos:line="4" pos:column="7">NAN<pos:position pos:line="4" pos:column="10"/></name></expr>, <expr><name pos:line="4" pos:column="12">NAN<pos:position pos:line="4" pos:column="15"/></name></expr>, <expr><name pos:line="4" pos:column="17">NAN<pos:position pos:line="4" pos:column="20"/></name></expr>, <expr><name pos:line="4" pos:column="22">NAN<pos:position pos:line="4" pos:column="25"/></name></expr>, <expr><name pos:line="4" pos:column="27">NAN<pos:position pos:line="4" pos:column="30"/></name></expr>, <expr><name pos:line="4" pos:column="32">NAN<pos:position pos:line="4" pos:column="35"/></name></expr>, <expr><name pos:line="4" pos:column="37">NAN<pos:position pos:line="4" pos:column="40"/></name></expr>, <expr><name pos:line="4" pos:column="42">NAN<pos:position pos:line="4" pos:column="45"/></name></expr>, <expr><name pos:line="4" pos:column="47">NAN<pos:position pos:line="4" pos:column="50"/></name></expr>, <expr><name pos:line="4" pos:column="52">NAN<pos:position pos:line="4" pos:column="55"/></name></expr> <comment type="block" pos:line="4" pos:column="56">/* Batman! */</comment>
  }<pos:position pos:line="5" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="5"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">report_num_cpu<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="5">cpu_commit_num_cpu<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">gauge_t<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">)<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">global_cpu_num<pos:position pos:line="8" pos:column="47"/></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="49"/></expr_stmt></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">report_by_state<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">&amp;&amp;<pos:position pos:line="10" pos:column="33"/></operator> <name pos:line="10" pos:column="26">report_by_cpu<pos:position pos:line="10" pos:column="39"/></name> <operator pos:line="10" pos:column="40">&amp;&amp;<pos:position pos:line="10" pos:column="50"/></operator> <operator pos:line="10" pos:column="43">!<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">report_percent<pos:position pos:line="10" pos:column="58"/></name></expr>)<pos:position pos:line="10" pos:column="59"/></condition><then pos:line="10" pos:column="59"> <block pos:line="10" pos:column="60">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">cpu_commit_without_aggregation<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">()<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
    <return pos:line="12" pos:column="5">return;<pos:position pos:line="12" pos:column="12"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">aggregate<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">global_rates<pos:position pos:line="15" pos:column="25"/></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">!<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">report_by_cpu<pos:position pos:line="17" pos:column="21"/></name></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22"> <block pos:line="17" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">cpu_commit_one<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><operator pos:line="18" pos:column="20">-<pos:position pos:line="18" pos:column="21"/></operator><literal type="number" pos:line="18" pos:column="21">1<pos:position pos:line="18" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="24">global_rates<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
    <return pos:line="19" pos:column="5">return;<pos:position pos:line="19" pos:column="12"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <for pos:line="22" pos:column="3">for <control pos:line="22" pos:column="7">(<init><decl><type><name pos:line="22" pos:column="8">size_t<pos:position pos:line="22" pos:column="14"/></name></type> <name pos:line="22" pos:column="15">cpu_num<pos:position pos:line="22" pos:column="22"/></name> <init pos:line="22" pos:column="23">= <expr><literal type="number" pos:line="22" pos:column="25">0<pos:position pos:line="22" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="27"/></init> <condition><expr><name pos:line="22" pos:column="28">cpu_num<pos:position pos:line="22" pos:column="35"/></name> <operator pos:line="22" pos:column="36">&lt;<pos:position pos:line="22" pos:column="40"/></operator> <name pos:line="22" pos:column="38">global_cpu_num<pos:position pos:line="22" pos:column="52"/></name></expr>;<pos:position pos:line="22" pos:column="53"/></condition> <incr><expr><name pos:line="22" pos:column="54">cpu_num<pos:position pos:line="22" pos:column="61"/></name><operator pos:line="22" pos:column="61">++<pos:position pos:line="22" pos:column="63"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="64"/></control> <block pos:line="22" pos:column="65">{
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">cpu_state_t<pos:position pos:line="23" pos:column="16"/></name> <modifier pos:line="23" pos:column="17">*<pos:position pos:line="23" pos:column="18"/></modifier></type><name pos:line="23" pos:column="18">this_cpu_states<pos:position pos:line="23" pos:column="33"/></name> <init pos:line="23" pos:column="34">= <expr><call><name pos:line="23" pos:column="36">get_cpu_state<pos:position pos:line="23" pos:column="49"/></name><argument_list pos:line="23" pos:column="49">(<argument><expr><name pos:line="23" pos:column="50">cpu_num<pos:position pos:line="23" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="59">0<pos:position pos:line="23" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="62"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">gauge_t<pos:position pos:line="24" pos:column="12"/></name></type> <name><name pos:line="24" pos:column="13">local_rates<pos:position pos:line="24" pos:column="24"/></name><index pos:line="24" pos:column="24">[<expr><name pos:line="24" pos:column="25">COLLECTD_CPU_STATE_MAX<pos:position pos:line="24" pos:column="47"/></name></expr>]<pos:position pos:line="24" pos:column="48"/></index></name> <init pos:line="24" pos:column="49">= <expr><block pos:line="24" pos:column="51">{<expr><name pos:line="24" pos:column="52">NAN<pos:position pos:line="24" pos:column="55"/></name></expr>, <expr><name pos:line="24" pos:column="57">NAN<pos:position pos:line="24" pos:column="60"/></name></expr>, <expr><name pos:line="24" pos:column="62">NAN<pos:position pos:line="24" pos:column="65"/></name></expr>, <expr><name pos:line="24" pos:column="67">NAN<pos:position pos:line="24" pos:column="70"/></name></expr>, <expr><name pos:line="24" pos:column="72">NAN<pos:position pos:line="24" pos:column="75"/></name></expr>,
                                                   <expr><name pos:line="25" pos:column="52">NAN<pos:position pos:line="25" pos:column="55"/></name></expr>, <expr><name pos:line="25" pos:column="57">NAN<pos:position pos:line="25" pos:column="60"/></name></expr>, <expr><name pos:line="25" pos:column="62">NAN<pos:position pos:line="25" pos:column="65"/></name></expr>, <expr><name pos:line="25" pos:column="67">NAN<pos:position pos:line="25" pos:column="70"/></name></expr>, <expr><name pos:line="25" pos:column="72">NAN<pos:position pos:line="25" pos:column="75"/></name></expr>}<pos:position pos:line="25" pos:column="76"/></block></expr></init></decl>;<pos:position pos:line="25" pos:column="77"/></decl_stmt>

    <for pos:line="27" pos:column="5">for <control pos:line="27" pos:column="9">(<init><decl><type><name pos:line="27" pos:column="10">size_t<pos:position pos:line="27" pos:column="16"/></name></type> <name pos:line="27" pos:column="17">state<pos:position pos:line="27" pos:column="22"/></name> <init pos:line="27" pos:column="23">= <expr><literal type="number" pos:line="27" pos:column="25">0<pos:position pos:line="27" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="27"/></init> <condition><expr><name pos:line="27" pos:column="28">state<pos:position pos:line="27" pos:column="33"/></name> <operator pos:line="27" pos:column="34">&lt;<pos:position pos:line="27" pos:column="38"/></operator> <name pos:line="27" pos:column="36">COLLECTD_CPU_STATE_MAX<pos:position pos:line="27" pos:column="58"/></name></expr>;<pos:position pos:line="27" pos:column="59"/></condition> <incr><expr><name pos:line="27" pos:column="60">state<pos:position pos:line="27" pos:column="65"/></name><operator pos:line="27" pos:column="65">++<pos:position pos:line="27" pos:column="67"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="68"/></control>
      <block type="pseudo"><if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><name><name pos:line="28" pos:column="11">this_cpu_states<pos:position pos:line="28" pos:column="26"/></name><index pos:line="28" pos:column="26">[<expr><name pos:line="28" pos:column="27">state<pos:position pos:line="28" pos:column="32"/></name></expr>]<pos:position pos:line="28" pos:column="33"/></index></name><operator pos:line="28" pos:column="33">.<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">has_value<pos:position pos:line="28" pos:column="43"/></name></expr>)<pos:position pos:line="28" pos:column="44"/></condition><then pos:line="28" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="9">local_rates<pos:position pos:line="29" pos:column="20"/></name><index pos:line="29" pos:column="20">[<expr><name pos:line="29" pos:column="21">state<pos:position pos:line="29" pos:column="26"/></name></expr>]<pos:position pos:line="29" pos:column="27"/></index></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <name><name pos:line="29" pos:column="30">this_cpu_states<pos:position pos:line="29" pos:column="45"/></name><index pos:line="29" pos:column="45">[<expr><name pos:line="29" pos:column="46">state<pos:position pos:line="29" pos:column="51"/></name></expr>]<pos:position pos:line="29" pos:column="52"/></index></name><operator pos:line="29" pos:column="52">.<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="53">rate<pos:position pos:line="29" pos:column="57"/></name></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt></block></then></if></block></for>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">cpu_commit_one<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><operator pos:line="31" pos:column="20">(<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">int<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">)<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">cpu_num<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">local_rates<pos:position pos:line="31" pos:column="45"/></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></for>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

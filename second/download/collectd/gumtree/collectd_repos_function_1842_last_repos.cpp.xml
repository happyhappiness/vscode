<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1842_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cx_config_add_xpath<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">cx_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">db<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">oconfig_item_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">ci<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list> <comment type="block" pos:line="1" pos:column="62">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cx_xpath_t<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">xpath<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><call><name pos:line="3" pos:column="23">calloc<pos:position pos:line="3" pos:column="29"/></name><argument_list pos:line="3" pos:column="29">(<argument><expr><literal type="number" pos:line="3" pos:column="30">1<pos:position pos:line="3" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="33">sizeof<argument_list pos:line="3" pos:column="39">(<argument><expr><operator pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="41">xpath<pos:position pos:line="3" pos:column="46"/></name></expr></argument>)<pos:position pos:line="3" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">xpath<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">==<pos:position pos:line="4" pos:column="15"/></operator> <name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21"> <block pos:line="4" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">ERROR<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><literal type="string" pos:line="5" pos:column="11">"curl_xml plugin: calloc failed."<pos:position pos:line="5" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="46"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></return>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">status<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><call><name pos:line="9" pos:column="16">cf_util_get_string<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">ci<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="39">&amp;<pos:position pos:line="9" pos:column="44"/></operator><name><name pos:line="9" pos:column="40">xpath<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">-&gt;<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="47">path<pos:position pos:line="9" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="53"/></decl_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">status<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">!=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block pos:line="10" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">cx_xpath_free<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">xpath<pos:position pos:line="11" pos:column="24"/></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">status<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="15" pos:column="3">/* error out if xpath-&gt;path is an empty string */</comment>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><call><name pos:line="16" pos:column="7">strlen<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name><name pos:line="16" pos:column="14">xpath<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">path<pos:position pos:line="16" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="26"/></argument_list></call> <operator pos:line="16" pos:column="27">==<pos:position pos:line="16" pos:column="29"/></operator> <literal type="number" pos:line="16" pos:column="30">0<pos:position pos:line="16" pos:column="31"/></literal></expr>)<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32"> <block pos:line="16" pos:column="33">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ERROR<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><literal type="string" pos:line="17" pos:column="11">"curl_xml plugin: invalid xpath. "<pos:position pos:line="17" pos:column="45"/></literal>
          <literal type="string" pos:line="18" pos:column="11">"xpath value can't be an empty string"<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">cx_xpath_free<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">xpath<pos:position pos:line="19" pos:column="24"/></name></expr></argument>)<pos:position pos:line="19" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">-<pos:position pos:line="20" pos:column="13"/></operator><literal type="number" pos:line="20" pos:column="13">1<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="23" pos:column="3">status<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <literal type="number" pos:line="23" pos:column="12">0<pos:position pos:line="23" pos:column="13"/></literal></expr>;<pos:position pos:line="23" pos:column="14"/></expr_stmt>
  <for pos:line="24" pos:column="3">for <control pos:line="24" pos:column="7">(<init><decl><type><name pos:line="24" pos:column="8">int<pos:position pos:line="24" pos:column="11"/></name></type> <name pos:line="24" pos:column="12">i<pos:position pos:line="24" pos:column="13"/></name> <init pos:line="24" pos:column="14">= <expr><literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="18"/></init> <condition><expr><name pos:line="24" pos:column="19">i<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">&lt;<pos:position pos:line="24" pos:column="25"/></operator> <name><name pos:line="24" pos:column="23">ci<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">children_num<pos:position pos:line="24" pos:column="39"/></name></name></expr>;<pos:position pos:line="24" pos:column="40"/></condition> <incr><expr><name pos:line="24" pos:column="41">i<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">++<pos:position pos:line="24" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="45"/></control> <block pos:line="24" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">oconfig_item_t<pos:position pos:line="25" pos:column="19"/></name> <modifier pos:line="25" pos:column="20">*<pos:position pos:line="25" pos:column="21"/></modifier></type><name pos:line="25" pos:column="21">child<pos:position pos:line="25" pos:column="26"/></name> <init pos:line="25" pos:column="27">= <expr><name><name pos:line="25" pos:column="29">ci<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">children<pos:position pos:line="25" pos:column="41"/></name></name> <operator pos:line="25" pos:column="42">+<pos:position pos:line="25" pos:column="43"/></operator> <name pos:line="25" pos:column="44">i<pos:position pos:line="25" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="46"/></decl_stmt>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><call><name pos:line="27" pos:column="9">strcasecmp<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><literal type="string" pos:line="27" pos:column="20">"Type"<pos:position pos:line="27" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="28">child<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">-&gt;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="35">key<pos:position pos:line="27" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call> <operator pos:line="27" pos:column="40">==<pos:position pos:line="27" pos:column="42"/></operator> <literal type="number" pos:line="27" pos:column="43">0<pos:position pos:line="27" pos:column="44"/></literal></expr>)<pos:position pos:line="27" pos:column="45"/></condition><then pos:line="27" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">status<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">cf_util_get_string<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">child<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="42">&amp;<pos:position pos:line="28" pos:column="47"/></operator><name><name pos:line="28" pos:column="43">xpath<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">-&gt;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="50">type<pos:position pos:line="28" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="56"/></expr_stmt></block></then>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><call><name pos:line="29" pos:column="14">strcasecmp<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><literal type="string" pos:line="29" pos:column="25">"InstancePrefix"<pos:position pos:line="29" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="43">child<pos:position pos:line="29" pos:column="48"/></name><operator pos:line="29" pos:column="48">-&gt;<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="50">key<pos:position pos:line="29" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call> <operator pos:line="29" pos:column="55">==<pos:position pos:line="29" pos:column="57"/></operator> <literal type="number" pos:line="29" pos:column="58">0<pos:position pos:line="29" pos:column="59"/></literal></expr>)<pos:position pos:line="29" pos:column="60"/></condition><then pos:line="29" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="7">status<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">cf_util_get_string<pos:position pos:line="30" pos:column="34"/></name><argument_list pos:line="30" pos:column="34">(<argument><expr><name pos:line="30" pos:column="35">child<pos:position pos:line="30" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="42">&amp;<pos:position pos:line="30" pos:column="47"/></operator><name><name pos:line="30" pos:column="43">xpath<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">-&gt;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="50">instance_prefix<pos:position pos:line="30" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><call><name pos:line="31" pos:column="14">strcasecmp<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="string" pos:line="31" pos:column="25">"InstanceFrom"<pos:position pos:line="31" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="41">child<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">-&gt;<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="48">key<pos:position pos:line="31" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call> <operator pos:line="31" pos:column="53">==<pos:position pos:line="31" pos:column="55"/></operator> <literal type="number" pos:line="31" pos:column="56">0<pos:position pos:line="31" pos:column="57"/></literal></expr>)<pos:position pos:line="31" pos:column="58"/></condition><then pos:line="31" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="7">status<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <call><name pos:line="32" pos:column="16">cf_util_get_string<pos:position pos:line="32" pos:column="34"/></name><argument_list pos:line="32" pos:column="34">(<argument><expr><name pos:line="32" pos:column="35">child<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="42">&amp;<pos:position pos:line="32" pos:column="47"/></operator><name><name pos:line="32" pos:column="43">xpath<pos:position pos:line="32" pos:column="48"/></name><operator pos:line="32" pos:column="48">-&gt;<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="50">instance<pos:position pos:line="32" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="60"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if <condition pos:line="33" pos:column="13">(<expr><call><name pos:line="33" pos:column="14">strcasecmp<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><literal type="string" pos:line="33" pos:column="25">"PluginInstanceFrom"<pos:position pos:line="33" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="47">child<pos:position pos:line="33" pos:column="52"/></name><operator pos:line="33" pos:column="52">-&gt;<pos:position pos:line="33" pos:column="57"/></operator><name pos:line="33" pos:column="54">key<pos:position pos:line="33" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call> <operator pos:line="33" pos:column="59">==<pos:position pos:line="33" pos:column="61"/></operator> <literal type="number" pos:line="33" pos:column="62">0<pos:position pos:line="33" pos:column="63"/></literal></expr>)<pos:position pos:line="33" pos:column="64"/></condition><then pos:line="33" pos:column="64">
      <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="7">status<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <call><name pos:line="34" pos:column="16">cf_util_get_string<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">child<pos:position pos:line="34" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="42">&amp;<pos:position pos:line="34" pos:column="47"/></operator><name><name pos:line="34" pos:column="43">xpath<pos:position pos:line="34" pos:column="48"/></name><operator pos:line="34" pos:column="48">-&gt;<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="50">plugin_instance_from<pos:position pos:line="34" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="35" pos:column="5">else <if pos:line="35" pos:column="10">if <condition pos:line="35" pos:column="13">(<expr><call><name pos:line="35" pos:column="14">strcasecmp<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><literal type="string" pos:line="35" pos:column="25">"ValuesFrom"<pos:position pos:line="35" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="39">child<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">-&gt;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="46">key<pos:position pos:line="35" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call> <operator pos:line="35" pos:column="51">==<pos:position pos:line="35" pos:column="53"/></operator> <literal type="number" pos:line="35" pos:column="54">0<pos:position pos:line="35" pos:column="55"/></literal></expr>)<pos:position pos:line="35" pos:column="56"/></condition><then pos:line="35" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">status<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <call><name pos:line="36" pos:column="16">cx_config_add_values<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><literal type="string" pos:line="36" pos:column="37">"ValuesFrom"<pos:position pos:line="36" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="51">xpath<pos:position pos:line="36" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="58">child<pos:position pos:line="36" pos:column="63"/></name></expr></argument>)<pos:position pos:line="36" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="65"/></expr_stmt></block></then></if></elseif>
    <else pos:line="37" pos:column="5">else <block pos:line="37" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">WARNING<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><literal type="string" pos:line="38" pos:column="15">"curl_xml plugin: Option `%s' not allowed here."<pos:position pos:line="38" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="65">child<pos:position pos:line="38" pos:column="70"/></name><operator pos:line="38" pos:column="70">-&gt;<pos:position pos:line="38" pos:column="75"/></operator><name pos:line="38" pos:column="72">key<pos:position pos:line="38" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><name pos:line="39" pos:column="7">status<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <operator pos:line="39" pos:column="16">-<pos:position pos:line="39" pos:column="17"/></operator><literal type="number" pos:line="39" pos:column="17">1<pos:position pos:line="39" pos:column="18"/></literal></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></else></if>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">status<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">!=<pos:position pos:line="42" pos:column="18"/></operator> <literal type="number" pos:line="42" pos:column="19">0<pos:position pos:line="42" pos:column="20"/></literal></expr>)<pos:position pos:line="42" pos:column="21"/></condition><then pos:line="42" pos:column="21">
      <block type="pseudo"><break pos:line="43" pos:column="7">break;<pos:position pos:line="43" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="44" pos:column="4"/></block></for> <comment type="block" pos:line="44" pos:column="5">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">status<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">!=<pos:position pos:line="46" pos:column="16"/></operator> <literal type="number" pos:line="46" pos:column="17">0<pos:position pos:line="46" pos:column="18"/></literal></expr>)<pos:position pos:line="46" pos:column="19"/></condition><then pos:line="46" pos:column="19"> <block pos:line="46" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">cx_xpath_free<pos:position pos:line="47" pos:column="18"/></name><argument_list pos:line="47" pos:column="18">(<argument><expr><name pos:line="47" pos:column="19">xpath<pos:position pos:line="47" pos:column="24"/></name></expr></argument>)<pos:position pos:line="47" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>
    <return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">status<pos:position pos:line="48" pos:column="18"/></name></expr>;<pos:position pos:line="48" pos:column="19"/></return>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><name><name pos:line="51" pos:column="7">xpath<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">-&gt;<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="14">type<pos:position pos:line="51" pos:column="18"/></name></name> <operator pos:line="51" pos:column="19">==<pos:position pos:line="51" pos:column="21"/></operator> <name pos:line="51" pos:column="22">NULL<pos:position pos:line="51" pos:column="26"/></name></expr>)<pos:position pos:line="51" pos:column="27"/></condition><then pos:line="51" pos:column="27"> <block pos:line="51" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">WARNING<pos:position pos:line="52" pos:column="12"/></name><argument_list pos:line="52" pos:column="12">(<argument><expr><literal type="string" pos:line="52" pos:column="13">"curl_xml plugin: `Type' missing in `xpath' block."<pos:position pos:line="52" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">cx_xpath_free<pos:position pos:line="53" pos:column="18"/></name><argument_list pos:line="53" pos:column="18">(<argument><expr><name pos:line="53" pos:column="19">xpath<pos:position pos:line="53" pos:column="24"/></name></expr></argument>)<pos:position pos:line="53" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="26"/></expr_stmt>
    <return pos:line="54" pos:column="5">return <expr><operator pos:line="54" pos:column="12">-<pos:position pos:line="54" pos:column="13"/></operator><literal type="number" pos:line="54" pos:column="13">1<pos:position pos:line="54" pos:column="14"/></literal></expr>;<pos:position pos:line="54" pos:column="15"/></return>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>

  <if pos:line="57" pos:column="3">if <condition pos:line="57" pos:column="6">(<expr><name><name pos:line="57" pos:column="7">xpath<pos:position pos:line="57" pos:column="12"/></name><operator pos:line="57" pos:column="12">-&gt;<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="14">values_len<pos:position pos:line="57" pos:column="24"/></name></name> <operator pos:line="57" pos:column="25">==<pos:position pos:line="57" pos:column="27"/></operator> <literal type="number" pos:line="57" pos:column="28">0<pos:position pos:line="57" pos:column="29"/></literal></expr>)<pos:position pos:line="57" pos:column="30"/></condition><then pos:line="57" pos:column="30"> <block pos:line="57" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">WARNING<pos:position pos:line="58" pos:column="12"/></name><argument_list pos:line="58" pos:column="12">(<argument><expr><literal type="string" pos:line="58" pos:column="13">"curl_xml plugin: `ValuesFrom' missing in `xpath' block."<pos:position pos:line="58" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">cx_xpath_free<pos:position pos:line="59" pos:column="18"/></name><argument_list pos:line="59" pos:column="18">(<argument><expr><name pos:line="59" pos:column="19">xpath<pos:position pos:line="59" pos:column="24"/></name></expr></argument>)<pos:position pos:line="59" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="26"/></expr_stmt>
    <return pos:line="60" pos:column="5">return <expr><operator pos:line="60" pos:column="12">-<pos:position pos:line="60" pos:column="13"/></operator><literal type="number" pos:line="60" pos:column="13">1<pos:position pos:line="60" pos:column="14"/></literal></expr>;<pos:position pos:line="60" pos:column="15"/></return>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="63" pos:column="3">llentry_t<pos:position pos:line="63" pos:column="12"/></name> <modifier pos:line="63" pos:column="13">*<pos:position pos:line="63" pos:column="14"/></modifier></type><name pos:line="63" pos:column="14">le<pos:position pos:line="63" pos:column="16"/></name> <init pos:line="63" pos:column="17">= <expr><call><name pos:line="63" pos:column="19">llentry_create<pos:position pos:line="63" pos:column="33"/></name><argument_list pos:line="63" pos:column="33">(<argument><expr><name><name pos:line="63" pos:column="34">xpath<pos:position pos:line="63" pos:column="39"/></name><operator pos:line="63" pos:column="39">-&gt;<pos:position pos:line="63" pos:column="44"/></operator><name pos:line="63" pos:column="41">path<pos:position pos:line="63" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="47">xpath<pos:position pos:line="63" pos:column="52"/></name></expr></argument>)<pos:position pos:line="63" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="63" pos:column="54"/></decl_stmt>
  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><name pos:line="64" pos:column="7">le<pos:position pos:line="64" pos:column="9"/></name> <operator pos:line="64" pos:column="10">==<pos:position pos:line="64" pos:column="12"/></operator> <name pos:line="64" pos:column="13">NULL<pos:position pos:line="64" pos:column="17"/></name></expr>)<pos:position pos:line="64" pos:column="18"/></condition><then pos:line="64" pos:column="18"> <block pos:line="64" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">ERROR<pos:position pos:line="65" pos:column="10"/></name><argument_list pos:line="65" pos:column="10">(<argument><expr><literal type="string" pos:line="65" pos:column="11">"curl_xml plugin: llentry_create failed."<pos:position pos:line="65" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">cx_xpath_free<pos:position pos:line="66" pos:column="18"/></name><argument_list pos:line="66" pos:column="18">(<argument><expr><name pos:line="66" pos:column="19">xpath<pos:position pos:line="66" pos:column="24"/></name></expr></argument>)<pos:position pos:line="66" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="26"/></expr_stmt>
    <return pos:line="67" pos:column="5">return <expr><operator pos:line="67" pos:column="12">-<pos:position pos:line="67" pos:column="13"/></operator><literal type="number" pos:line="67" pos:column="13">1<pos:position pos:line="67" pos:column="14"/></literal></expr>;<pos:position pos:line="67" pos:column="15"/></return>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="70" pos:column="3">llist_append<pos:position pos:line="70" pos:column="15"/></name><argument_list pos:line="70" pos:column="15">(<argument><expr><name><name pos:line="70" pos:column="16">db<pos:position pos:line="70" pos:column="18"/></name><operator pos:line="70" pos:column="18">-&gt;<pos:position pos:line="70" pos:column="23"/></operator><name pos:line="70" pos:column="20">xpath_list<pos:position pos:line="70" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="32">le<pos:position pos:line="70" pos:column="34"/></name></expr></argument>)<pos:position pos:line="70" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="36"/></expr_stmt>
  <return pos:line="71" pos:column="3">return <expr><literal type="number" pos:line="71" pos:column="10">0<pos:position pos:line="71" pos:column="11"/></literal></expr>;<pos:position pos:line="71" pos:column="12"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_725_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">iptables_config<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">key<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">value<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* int ip_value; */</comment>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">protocol_version_t<pos:position pos:line="4" pos:column="23"/></name></type> <name pos:line="4" pos:column="24">ip_version<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><literal type="number" pos:line="4" pos:column="37">0<pos:position pos:line="4" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">strcasecmp<pos:position pos:line="6" pos:column="19"/></name> <argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">key<pos:position pos:line="6" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="26">"Chain"<pos:position pos:line="6" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call> <operator pos:line="6" pos:column="35">==<pos:position pos:line="6" pos:column="37"/></operator> <literal type="number" pos:line="6" pos:column="38">0<pos:position pos:line="6" pos:column="39"/></literal></expr>)<pos:position pos:line="6" pos:column="40"/></condition><then pos:line="6" pos:column="40">
        <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="9">ip_version<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">IPV4<pos:position pos:line="7" pos:column="26"/></name></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt></block></then>
    <elseif pos:line="8" pos:column="5">else <if pos:line="8" pos:column="10">if <condition pos:line="8" pos:column="13">(<expr><call><name pos:line="8" pos:column="14">strcasecmp<pos:position pos:line="8" pos:column="24"/></name> <argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">key<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="31">"Chain6"<pos:position pos:line="8" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call> <operator pos:line="8" pos:column="41">==<pos:position pos:line="8" pos:column="43"/></operator> <literal type="number" pos:line="8" pos:column="44">0<pos:position pos:line="8" pos:column="45"/></literal></expr>)<pos:position pos:line="8" pos:column="46"/></condition><then pos:line="8" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">ip_version<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">IPV6<pos:position pos:line="9" pos:column="26"/></name></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt></block></then></if></elseif>
    <else pos:line="10" pos:column="5">else
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><literal type="number" pos:line="11" pos:column="17">1<pos:position pos:line="11" pos:column="18"/></literal><operator pos:line="11" pos:column="18">)<pos:position pos:line="11" pos:column="19"/></operator></expr>;<pos:position pos:line="11" pos:column="20"/></return></block></else></if>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">ip_chain_t<pos:position pos:line="13" pos:column="15"/></name></type>  <name pos:line="13" pos:column="17">temp<pos:position pos:line="13" pos:column="21"/></name> <init pos:line="13" pos:column="22">= <expr><block pos:line="13" pos:column="24">{ <expr><literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr> }<pos:position pos:line="13" pos:column="29"/></block></expr></init></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">ip_chain_t<pos:position pos:line="14" pos:column="15"/></name> <modifier pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></modifier></type><name pos:line="14" pos:column="17">final<pos:position pos:line="14" pos:column="22"/></name></decl>, <modifier pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></modifier><modifier pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="14" pos:column="26">list<pos:position pos:line="14" pos:column="30"/></name></decl>;<pos:position pos:line="14" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name> <modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier></type><name pos:line="15" pos:column="11">table<pos:position pos:line="15" pos:column="16"/></name></decl>;<pos:position pos:line="15" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type>   <name pos:line="16" pos:column="11">table_len<pos:position pos:line="16" pos:column="20"/></name></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name> <modifier pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></modifier></type><name pos:line="17" pos:column="11">chain<pos:position pos:line="17" pos:column="16"/></name></decl>;<pos:position pos:line="17" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type>   <name pos:line="18" pos:column="11">chain_len<pos:position pos:line="18" pos:column="20"/></name></decl>;<pos:position pos:line="18" pos:column="21"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="20" pos:column="5">char<pos:position pos:line="20" pos:column="9"/></name> <modifier pos:line="20" pos:column="10">*<pos:position pos:line="20" pos:column="11"/></modifier></type><name pos:line="20" pos:column="11">value_copy<pos:position pos:line="20" pos:column="21"/></name></decl>;<pos:position pos:line="20" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name> <modifier pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></modifier></type><name><name pos:line="21" pos:column="11">fields<pos:position pos:line="21" pos:column="17"/></name><index pos:line="21" pos:column="17">[<expr><literal type="number" pos:line="21" pos:column="18">4<pos:position pos:line="21" pos:column="19"/></literal></expr>]<pos:position pos:line="21" pos:column="20"/></index></name></decl>;<pos:position pos:line="21" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">int<pos:position pos:line="22" pos:column="8"/></name></type>   <name pos:line="22" pos:column="11">fields_num<pos:position pos:line="22" pos:column="21"/></name></decl>;<pos:position pos:line="22" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><name pos:line="24" pos:column="5">value_copy<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <call><name pos:line="24" pos:column="18">strdup<pos:position pos:line="24" pos:column="24"/></name> <argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">value<pos:position pos:line="24" pos:column="31"/></name></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">value_copy<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">==<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">NULL<pos:position pos:line="25" pos:column="27"/></name></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28">
    <block pos:line="26" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">char<pos:position pos:line="27" pos:column="13"/></name></type> <name><name pos:line="27" pos:column="14">errbuf<pos:position pos:line="27" pos:column="20"/></name><index pos:line="27" pos:column="20">[<expr><literal type="number" pos:line="27" pos:column="21">1024<pos:position pos:line="27" pos:column="25"/></literal></expr>]<pos:position pos:line="27" pos:column="26"/></index></name></decl>;<pos:position pos:line="27" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">ERROR<pos:position pos:line="28" pos:column="14"/></name> <argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="string" pos:line="28" pos:column="16">"strdup failed: %s"<pos:position pos:line="28" pos:column="35"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="29" pos:column="17">sstrerror<pos:position pos:line="29" pos:column="26"/></name> <argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">errno<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="35">errbuf<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="43">sizeof <argument_list pos:line="29" pos:column="50">(<argument><expr><name pos:line="29" pos:column="51">errbuf<pos:position pos:line="29" pos:column="57"/></name></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="61"/></expr_stmt>
        <return pos:line="30" pos:column="9">return <expr><operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><literal type="number" pos:line="30" pos:column="17">1<pos:position pos:line="30" pos:column="18"/></literal><operator pos:line="30" pos:column="18">)<pos:position pos:line="30" pos:column="19"/></operator></expr>;<pos:position pos:line="30" pos:column="20"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="33" pos:column="5">/*
     *  Time to fill the temp element
     *  Examine value string, it should look like:
     *  Chain[6] &lt;table&gt; &lt;chain&gt; [&lt;comment|num&gt; [name]]
     */</comment>

    <comment type="block" pos:line="39" pos:column="5">/* set IPv4 or IPv6 */</comment>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">temp<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">.<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">ip_version<pos:position pos:line="40" pos:column="20"/></name></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <name pos:line="40" pos:column="23">ip_version<pos:position pos:line="40" pos:column="33"/></name></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="42" pos:column="5">/* Chain &lt;table&gt; &lt;chain&gt; [&lt;comment|num&gt; [name]] */</comment>
    <expr_stmt><expr><name pos:line="43" pos:column="5">fields_num<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <call><name pos:line="43" pos:column="18">strsplit<pos:position pos:line="43" pos:column="26"/></name> <argument_list pos:line="43" pos:column="27">(<argument><expr><name pos:line="43" pos:column="28">value_copy<pos:position pos:line="43" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="40">fields<pos:position pos:line="43" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="48">4<pos:position pos:line="43" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="51"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">fields_num<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">&lt;<pos:position pos:line="44" pos:column="24"/></operator> <literal type="number" pos:line="44" pos:column="22">2<pos:position pos:line="44" pos:column="23"/></literal></expr>)<pos:position pos:line="44" pos:column="24"/></condition><then pos:line="44" pos:column="24">
    <block pos:line="45" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">free<pos:position pos:line="46" pos:column="13"/></name> <argument_list pos:line="46" pos:column="14">(<argument><expr><name pos:line="46" pos:column="15">value_copy<pos:position pos:line="46" pos:column="25"/></name></expr></argument>)<pos:position pos:line="46" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="27"/></expr_stmt>
        <return pos:line="47" pos:column="9">return <expr><operator pos:line="47" pos:column="16">(<pos:position pos:line="47" pos:column="17"/></operator><literal type="number" pos:line="47" pos:column="17">1<pos:position pos:line="47" pos:column="18"/></literal><operator pos:line="47" pos:column="18">)<pos:position pos:line="47" pos:column="19"/></operator></expr>;<pos:position pos:line="47" pos:column="20"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="50" pos:column="5">table<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator> <name><name pos:line="50" pos:column="13">fields<pos:position pos:line="50" pos:column="19"/></name><index pos:line="50" pos:column="19">[<expr><literal type="number" pos:line="50" pos:column="20">0<pos:position pos:line="50" pos:column="21"/></literal></expr>]<pos:position pos:line="50" pos:column="22"/></index></name></expr>;<pos:position pos:line="50" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="51" pos:column="5">chain<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <name><name pos:line="51" pos:column="13">fields<pos:position pos:line="51" pos:column="19"/></name><index pos:line="51" pos:column="19">[<expr><literal type="number" pos:line="51" pos:column="20">1<pos:position pos:line="51" pos:column="21"/></literal></expr>]<pos:position pos:line="51" pos:column="22"/></index></name></expr>;<pos:position pos:line="51" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name pos:line="53" pos:column="5">table_len<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">=<pos:position pos:line="53" pos:column="16"/></operator> <call><name pos:line="53" pos:column="17">strlen<pos:position pos:line="53" pos:column="23"/></name> <argument_list pos:line="53" pos:column="24">(<argument><expr><name pos:line="53" pos:column="25">table<pos:position pos:line="53" pos:column="30"/></name></expr></argument>)<pos:position pos:line="53" pos:column="31"/></argument_list></call> <operator pos:line="53" pos:column="32">+<pos:position pos:line="53" pos:column="33"/></operator> <literal type="number" pos:line="53" pos:column="34">1<pos:position pos:line="53" pos:column="35"/></literal></expr>;<pos:position pos:line="53" pos:column="36"/></expr_stmt>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><operator pos:line="54" pos:column="9">(<pos:position pos:line="54" pos:column="10"/></operator><name pos:line="54" pos:column="10">unsigned<pos:position pos:line="54" pos:column="18"/></name> <name pos:line="54" pos:column="19">int<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">)<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="23">table_len<pos:position pos:line="54" pos:column="32"/></name> <operator pos:line="54" pos:column="33">&gt;<pos:position pos:line="54" pos:column="37"/></operator> <sizeof pos:line="54" pos:column="35">sizeof<argument_list pos:line="54" pos:column="41">(<argument><expr><name><name pos:line="54" pos:column="42">temp<pos:position pos:line="54" pos:column="46"/></name><operator pos:line="54" pos:column="46">.<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="47">table<pos:position pos:line="54" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="53"/></argument_list></sizeof></expr>)<pos:position pos:line="54" pos:column="54"/></condition><then pos:line="54" pos:column="54">
    <block pos:line="55" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">ERROR<pos:position pos:line="56" pos:column="14"/></name> <argument_list pos:line="56" pos:column="15">(<argument><expr><literal type="string" pos:line="56" pos:column="16">"Table `%s' too long."<pos:position pos:line="56" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="40">table<pos:position pos:line="56" pos:column="45"/></name></expr></argument>)<pos:position pos:line="56" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">free<pos:position pos:line="57" pos:column="13"/></name> <argument_list pos:line="57" pos:column="14">(<argument><expr><name pos:line="57" pos:column="15">value_copy<pos:position pos:line="57" pos:column="25"/></name></expr></argument>)<pos:position pos:line="57" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>
        <return pos:line="58" pos:column="9">return <expr><operator pos:line="58" pos:column="16">(<pos:position pos:line="58" pos:column="17"/></operator><literal type="number" pos:line="58" pos:column="17">1<pos:position pos:line="58" pos:column="18"/></literal><operator pos:line="58" pos:column="18">)<pos:position pos:line="58" pos:column="19"/></operator></expr>;<pos:position pos:line="58" pos:column="20"/></return>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">sstrncpy<pos:position pos:line="60" pos:column="13"/></name> <argument_list pos:line="60" pos:column="14">(<argument><expr><name><name pos:line="60" pos:column="15">temp<pos:position pos:line="60" pos:column="19"/></name><operator pos:line="60" pos:column="19">.<pos:position pos:line="60" pos:column="20"/></operator><name pos:line="60" pos:column="20">table<pos:position pos:line="60" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="27">table<pos:position pos:line="60" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="34">table_len<pos:position pos:line="60" pos:column="43"/></name></expr></argument>)<pos:position pos:line="60" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><name pos:line="62" pos:column="5">chain_len<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">=<pos:position pos:line="62" pos:column="16"/></operator> <call><name pos:line="62" pos:column="17">strlen<pos:position pos:line="62" pos:column="23"/></name> <argument_list pos:line="62" pos:column="24">(<argument><expr><name pos:line="62" pos:column="25">chain<pos:position pos:line="62" pos:column="30"/></name></expr></argument>)<pos:position pos:line="62" pos:column="31"/></argument_list></call> <operator pos:line="62" pos:column="32">+<pos:position pos:line="62" pos:column="33"/></operator> <literal type="number" pos:line="62" pos:column="34">1<pos:position pos:line="62" pos:column="35"/></literal></expr>;<pos:position pos:line="62" pos:column="36"/></expr_stmt>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><operator pos:line="63" pos:column="9">(<pos:position pos:line="63" pos:column="10"/></operator><name pos:line="63" pos:column="10">unsigned<pos:position pos:line="63" pos:column="18"/></name> <name pos:line="63" pos:column="19">int<pos:position pos:line="63" pos:column="22"/></name><operator pos:line="63" pos:column="22">)<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="23">chain_len<pos:position pos:line="63" pos:column="32"/></name> <operator pos:line="63" pos:column="33">&gt;<pos:position pos:line="63" pos:column="37"/></operator> <sizeof pos:line="63" pos:column="35">sizeof<argument_list pos:line="63" pos:column="41">(<argument><expr><name><name pos:line="63" pos:column="42">temp<pos:position pos:line="63" pos:column="46"/></name><operator pos:line="63" pos:column="46">.<pos:position pos:line="63" pos:column="47"/></operator><name pos:line="63" pos:column="47">chain<pos:position pos:line="63" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="53"/></argument_list></sizeof></expr>)<pos:position pos:line="63" pos:column="54"/></condition><then pos:line="63" pos:column="54">
    <block pos:line="64" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">ERROR<pos:position pos:line="65" pos:column="14"/></name> <argument_list pos:line="65" pos:column="15">(<argument><expr><literal type="string" pos:line="65" pos:column="16">"Chain `%s' too long."<pos:position pos:line="65" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="40">chain<pos:position pos:line="65" pos:column="45"/></name></expr></argument>)<pos:position pos:line="65" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">free<pos:position pos:line="66" pos:column="13"/></name> <argument_list pos:line="66" pos:column="14">(<argument><expr><name pos:line="66" pos:column="15">value_copy<pos:position pos:line="66" pos:column="25"/></name></expr></argument>)<pos:position pos:line="66" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="27"/></expr_stmt>
        <return pos:line="67" pos:column="9">return <expr><operator pos:line="67" pos:column="16">(<pos:position pos:line="67" pos:column="17"/></operator><literal type="number" pos:line="67" pos:column="17">1<pos:position pos:line="67" pos:column="18"/></literal><operator pos:line="67" pos:column="18">)<pos:position pos:line="67" pos:column="19"/></operator></expr>;<pos:position pos:line="67" pos:column="20"/></return>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">sstrncpy<pos:position pos:line="69" pos:column="13"/></name> <argument_list pos:line="69" pos:column="14">(<argument><expr><name><name pos:line="69" pos:column="15">temp<pos:position pos:line="69" pos:column="19"/></name><operator pos:line="69" pos:column="19">.<pos:position pos:line="69" pos:column="20"/></operator><name pos:line="69" pos:column="20">chain<pos:position pos:line="69" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="27">chain<pos:position pos:line="69" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="34">chain_len<pos:position pos:line="69" pos:column="43"/></name></expr></argument>)<pos:position pos:line="69" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="45"/></expr_stmt>

    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">fields_num<pos:position pos:line="71" pos:column="19"/></name> <operator pos:line="71" pos:column="20">&gt;=<pos:position pos:line="71" pos:column="25"/></operator> <literal type="number" pos:line="71" pos:column="23">3<pos:position pos:line="71" pos:column="24"/></literal></expr>)<pos:position pos:line="71" pos:column="25"/></condition><then pos:line="71" pos:column="25">
    <block pos:line="72" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="73" pos:column="9">char<pos:position pos:line="73" pos:column="13"/></name> <modifier pos:line="73" pos:column="14">*<pos:position pos:line="73" pos:column="15"/></modifier></type><name pos:line="73" pos:column="15">comment<pos:position pos:line="73" pos:column="22"/></name> <init pos:line="73" pos:column="23">= <expr><name><name pos:line="73" pos:column="25">fields<pos:position pos:line="73" pos:column="31"/></name><index pos:line="73" pos:column="31">[<expr><literal type="number" pos:line="73" pos:column="32">2<pos:position pos:line="73" pos:column="33"/></literal></expr>]<pos:position pos:line="73" pos:column="34"/></index></name></expr></init></decl>;<pos:position pos:line="73" pos:column="35"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="74" pos:column="9">int<pos:position pos:line="74" pos:column="12"/></name></type>   <name pos:line="74" pos:column="15">rule<pos:position pos:line="74" pos:column="19"/></name> <init pos:line="74" pos:column="20">= <expr><call><name pos:line="74" pos:column="22">atoi<pos:position pos:line="74" pos:column="26"/></name> <argument_list pos:line="74" pos:column="27">(<argument><expr><name pos:line="74" pos:column="28">comment<pos:position pos:line="74" pos:column="35"/></name></expr></argument>)<pos:position pos:line="74" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="74" pos:column="37"/></decl_stmt>

        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">rule<pos:position pos:line="76" pos:column="17"/></name></expr>)<pos:position pos:line="76" pos:column="18"/></condition><then pos:line="76" pos:column="18">
        <block pos:line="77" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="78" pos:column="13">temp<pos:position pos:line="78" pos:column="17"/></name><operator pos:line="78" pos:column="17">.<pos:position pos:line="78" pos:column="18"/></operator><name pos:line="78" pos:column="18">rule<pos:position pos:line="78" pos:column="22"/></name><operator pos:line="78" pos:column="22">.<pos:position pos:line="78" pos:column="23"/></operator><name pos:line="78" pos:column="23">num<pos:position pos:line="78" pos:column="26"/></name></name> <operator pos:line="78" pos:column="27">=<pos:position pos:line="78" pos:column="28"/></operator> <name pos:line="78" pos:column="29">rule<pos:position pos:line="78" pos:column="33"/></name></expr>;<pos:position pos:line="78" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="79" pos:column="13">temp<pos:position pos:line="79" pos:column="17"/></name><operator pos:line="79" pos:column="17">.<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="18">rule_type<pos:position pos:line="79" pos:column="27"/></name></name> <operator pos:line="79" pos:column="28">=<pos:position pos:line="79" pos:column="29"/></operator> <name pos:line="79" pos:column="30">RTYPE_NUM<pos:position pos:line="79" pos:column="39"/></name></expr>;<pos:position pos:line="79" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="80" pos:column="10"/></block></then>
        <else pos:line="81" pos:column="9">else
        <block pos:line="82" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="83" pos:column="13">temp<pos:position pos:line="83" pos:column="17"/></name><operator pos:line="83" pos:column="17">.<pos:position pos:line="83" pos:column="18"/></operator><name pos:line="83" pos:column="18">rule<pos:position pos:line="83" pos:column="22"/></name><operator pos:line="83" pos:column="22">.<pos:position pos:line="83" pos:column="23"/></operator><name pos:line="83" pos:column="23">comment<pos:position pos:line="83" pos:column="30"/></name></name> <operator pos:line="83" pos:column="31">=<pos:position pos:line="83" pos:column="32"/></operator> <call><name pos:line="83" pos:column="33">strdup<pos:position pos:line="83" pos:column="39"/></name> <argument_list pos:line="83" pos:column="40">(<argument><expr><name pos:line="83" pos:column="41">comment<pos:position pos:line="83" pos:column="48"/></name></expr></argument>)<pos:position pos:line="83" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="50"/></expr_stmt>
            <if pos:line="84" pos:column="13">if <condition pos:line="84" pos:column="16">(<expr><name><name pos:line="84" pos:column="17">temp<pos:position pos:line="84" pos:column="21"/></name><operator pos:line="84" pos:column="21">.<pos:position pos:line="84" pos:column="22"/></operator><name pos:line="84" pos:column="22">rule<pos:position pos:line="84" pos:column="26"/></name><operator pos:line="84" pos:column="26">.<pos:position pos:line="84" pos:column="27"/></operator><name pos:line="84" pos:column="27">comment<pos:position pos:line="84" pos:column="34"/></name></name> <operator pos:line="84" pos:column="35">==<pos:position pos:line="84" pos:column="37"/></operator> <name pos:line="84" pos:column="38">NULL<pos:position pos:line="84" pos:column="42"/></name></expr>)<pos:position pos:line="84" pos:column="43"/></condition><then pos:line="84" pos:column="43">
            <block pos:line="85" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="86" pos:column="17">free<pos:position pos:line="86" pos:column="21"/></name> <argument_list pos:line="86" pos:column="22">(<argument><expr><name pos:line="86" pos:column="23">value_copy<pos:position pos:line="86" pos:column="33"/></name></expr></argument>)<pos:position pos:line="86" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="35"/></expr_stmt>
                <return pos:line="87" pos:column="17">return <expr><operator pos:line="87" pos:column="24">(<pos:position pos:line="87" pos:column="25"/></operator><literal type="number" pos:line="87" pos:column="25">1<pos:position pos:line="87" pos:column="26"/></literal><operator pos:line="87" pos:column="26">)<pos:position pos:line="87" pos:column="27"/></operator></expr>;<pos:position pos:line="87" pos:column="28"/></return>
            }<pos:position pos:line="88" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="89" pos:column="13">temp<pos:position pos:line="89" pos:column="17"/></name><operator pos:line="89" pos:column="17">.<pos:position pos:line="89" pos:column="18"/></operator><name pos:line="89" pos:column="18">rule_type<pos:position pos:line="89" pos:column="27"/></name></name> <operator pos:line="89" pos:column="28">=<pos:position pos:line="89" pos:column="29"/></operator> <name pos:line="89" pos:column="30">RTYPE_COMMENT<pos:position pos:line="89" pos:column="43"/></name></expr>;<pos:position pos:line="89" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block></else></if>
    }<pos:position pos:line="91" pos:column="6"/></block></then>
    <else pos:line="92" pos:column="5">else
    <block pos:line="93" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="94" pos:column="9">temp<pos:position pos:line="94" pos:column="13"/></name><operator pos:line="94" pos:column="13">.<pos:position pos:line="94" pos:column="14"/></operator><name pos:line="94" pos:column="14">rule_type<pos:position pos:line="94" pos:column="23"/></name></name> <operator pos:line="94" pos:column="24">=<pos:position pos:line="94" pos:column="25"/></operator> <name pos:line="94" pos:column="26">RTYPE_COMMENT_ALL<pos:position pos:line="94" pos:column="43"/></name></expr>;<pos:position pos:line="94" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="95" pos:column="6"/></block></else></if>

    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><name pos:line="97" pos:column="9">fields_num<pos:position pos:line="97" pos:column="19"/></name> <operator pos:line="97" pos:column="20">&gt;=<pos:position pos:line="97" pos:column="25"/></operator> <literal type="number" pos:line="97" pos:column="23">4<pos:position pos:line="97" pos:column="24"/></literal></expr>)<pos:position pos:line="97" pos:column="25"/></condition><then pos:line="97" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="9">sstrncpy<pos:position pos:line="98" pos:column="17"/></name> <argument_list pos:line="98" pos:column="18">(<argument><expr><name><name pos:line="98" pos:column="19">temp<pos:position pos:line="98" pos:column="23"/></name><operator pos:line="98" pos:column="23">.<pos:position pos:line="98" pos:column="24"/></operator><name pos:line="98" pos:column="24">name<pos:position pos:line="98" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="30">fields<pos:position pos:line="98" pos:column="36"/></name><index pos:line="98" pos:column="36">[<expr><literal type="number" pos:line="98" pos:column="37">3<pos:position pos:line="98" pos:column="38"/></literal></expr>]<pos:position pos:line="98" pos:column="39"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="98" pos:column="41">sizeof <argument_list pos:line="98" pos:column="48">(<argument><expr><name><name pos:line="98" pos:column="49">temp<pos:position pos:line="98" pos:column="53"/></name><operator pos:line="98" pos:column="53">.<pos:position pos:line="98" pos:column="54"/></operator><name pos:line="98" pos:column="54">name<pos:position pos:line="98" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="98" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="61"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="100" pos:column="5">free<pos:position pos:line="100" pos:column="9"/></name> <argument_list pos:line="100" pos:column="10">(<argument><expr><name pos:line="100" pos:column="11">value_copy<pos:position pos:line="100" pos:column="21"/></name></expr></argument>)<pos:position pos:line="100" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="101" pos:column="5">value_copy<pos:position pos:line="101" pos:column="15"/></name> <operator pos:line="101" pos:column="16">=<pos:position pos:line="101" pos:column="17"/></operator> <name pos:line="101" pos:column="18">NULL<pos:position pos:line="101" pos:column="22"/></name></expr>;<pos:position pos:line="101" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="102" pos:column="5">table<pos:position pos:line="102" pos:column="10"/></name> <operator pos:line="102" pos:column="11">=<pos:position pos:line="102" pos:column="12"/></operator> <name pos:line="102" pos:column="13">NULL<pos:position pos:line="102" pos:column="17"/></name></expr>;<pos:position pos:line="102" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="103" pos:column="5">chain<pos:position pos:line="103" pos:column="10"/></name> <operator pos:line="103" pos:column="11">=<pos:position pos:line="103" pos:column="12"/></operator> <name pos:line="103" pos:column="13">NULL<pos:position pos:line="103" pos:column="17"/></name></expr>;<pos:position pos:line="103" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="105" pos:column="5">list<pos:position pos:line="105" pos:column="9"/></name> <operator pos:line="105" pos:column="10">=<pos:position pos:line="105" pos:column="11"/></operator> <call><name pos:line="105" pos:column="12">realloc<pos:position pos:line="105" pos:column="19"/></name> <argument_list pos:line="105" pos:column="20">(<argument><expr><name pos:line="105" pos:column="21">chain_list<pos:position pos:line="105" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="105" pos:column="33">(<pos:position pos:line="105" pos:column="34"/></operator><name pos:line="105" pos:column="34">chain_num<pos:position pos:line="105" pos:column="43"/></name> <operator pos:line="105" pos:column="44">+<pos:position pos:line="105" pos:column="45"/></operator> <literal type="number" pos:line="105" pos:column="46">1<pos:position pos:line="105" pos:column="47"/></literal><operator pos:line="105" pos:column="47">)<pos:position pos:line="105" pos:column="48"/></operator> <operator pos:line="105" pos:column="49">*<pos:position pos:line="105" pos:column="50"/></operator> <sizeof pos:line="105" pos:column="51">sizeof <argument_list pos:line="105" pos:column="58">(<argument><expr><name pos:line="105" pos:column="59">ip_chain_t<pos:position pos:line="105" pos:column="69"/></name> <operator pos:line="105" pos:column="70">*<pos:position pos:line="105" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="105" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="105" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="74"/></expr_stmt>
    <if pos:line="106" pos:column="5">if <condition pos:line="106" pos:column="8">(<expr><name pos:line="106" pos:column="9">list<pos:position pos:line="106" pos:column="13"/></name> <operator pos:line="106" pos:column="14">==<pos:position pos:line="106" pos:column="16"/></operator> <name pos:line="106" pos:column="17">NULL<pos:position pos:line="106" pos:column="21"/></name></expr>)<pos:position pos:line="106" pos:column="22"/></condition><then pos:line="106" pos:column="22">
    <block pos:line="107" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="108" pos:column="9">char<pos:position pos:line="108" pos:column="13"/></name></type> <name><name pos:line="108" pos:column="14">errbuf<pos:position pos:line="108" pos:column="20"/></name><index pos:line="108" pos:column="20">[<expr><literal type="number" pos:line="108" pos:column="21">1024<pos:position pos:line="108" pos:column="25"/></literal></expr>]<pos:position pos:line="108" pos:column="26"/></index></name></decl>;<pos:position pos:line="108" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="109" pos:column="9">ERROR<pos:position pos:line="109" pos:column="14"/></name> <argument_list pos:line="109" pos:column="15">(<argument><expr><literal type="string" pos:line="109" pos:column="16">"realloc failed: %s"<pos:position pos:line="109" pos:column="36"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="110" pos:column="17">sstrerror<pos:position pos:line="110" pos:column="26"/></name> <argument_list pos:line="110" pos:column="27">(<argument><expr><name pos:line="110" pos:column="28">errno<pos:position pos:line="110" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="35">errbuf<pos:position pos:line="110" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="110" pos:column="43">sizeof <argument_list pos:line="110" pos:column="50">(<argument><expr><name pos:line="110" pos:column="51">errbuf<pos:position pos:line="110" pos:column="57"/></name></expr></argument>)<pos:position pos:line="110" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="110" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="110" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="111" pos:column="9">sfree<pos:position pos:line="111" pos:column="14"/></name> <argument_list pos:line="111" pos:column="15">(<argument><expr><name><name pos:line="111" pos:column="16">temp<pos:position pos:line="111" pos:column="20"/></name><operator pos:line="111" pos:column="20">.<pos:position pos:line="111" pos:column="21"/></operator><name pos:line="111" pos:column="21">rule<pos:position pos:line="111" pos:column="25"/></name><operator pos:line="111" pos:column="25">.<pos:position pos:line="111" pos:column="26"/></operator><name pos:line="111" pos:column="26">comment<pos:position pos:line="111" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="35"/></expr_stmt>
        <return pos:line="112" pos:column="9">return <expr><operator pos:line="112" pos:column="16">(<pos:position pos:line="112" pos:column="17"/></operator><literal type="number" pos:line="112" pos:column="17">1<pos:position pos:line="112" pos:column="18"/></literal><operator pos:line="112" pos:column="18">)<pos:position pos:line="112" pos:column="19"/></operator></expr>;<pos:position pos:line="112" pos:column="20"/></return>
    }<pos:position pos:line="113" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="115" pos:column="5">chain_list<pos:position pos:line="115" pos:column="15"/></name> <operator pos:line="115" pos:column="16">=<pos:position pos:line="115" pos:column="17"/></operator> <name pos:line="115" pos:column="18">list<pos:position pos:line="115" pos:column="22"/></name></expr>;<pos:position pos:line="115" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="116" pos:column="5">final<pos:position pos:line="116" pos:column="10"/></name> <operator pos:line="116" pos:column="11">=<pos:position pos:line="116" pos:column="12"/></operator> <call><name pos:line="116" pos:column="13">malloc<pos:position pos:line="116" pos:column="19"/></name><argument_list pos:line="116" pos:column="19">(<argument><expr><sizeof pos:line="116" pos:column="20">sizeof <argument_list pos:line="116" pos:column="27">(<argument><expr><operator pos:line="116" pos:column="28">*<pos:position pos:line="116" pos:column="29"/></operator><name pos:line="116" pos:column="29">final<pos:position pos:line="116" pos:column="34"/></name></expr></argument>)<pos:position pos:line="116" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="116" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="37"/></expr_stmt>
    <if pos:line="117" pos:column="5">if <condition pos:line="117" pos:column="8">(<expr><name pos:line="117" pos:column="9">final<pos:position pos:line="117" pos:column="14"/></name> <operator pos:line="117" pos:column="15">==<pos:position pos:line="117" pos:column="17"/></operator> <name pos:line="117" pos:column="18">NULL<pos:position pos:line="117" pos:column="22"/></name></expr>)<pos:position pos:line="117" pos:column="23"/></condition><then pos:line="117" pos:column="23">
    <block pos:line="118" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="119" pos:column="9">char<pos:position pos:line="119" pos:column="13"/></name></type> <name><name pos:line="119" pos:column="14">errbuf<pos:position pos:line="119" pos:column="20"/></name><index pos:line="119" pos:column="20">[<expr><literal type="number" pos:line="119" pos:column="21">1024<pos:position pos:line="119" pos:column="25"/></literal></expr>]<pos:position pos:line="119" pos:column="26"/></index></name></decl>;<pos:position pos:line="119" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="120" pos:column="9">ERROR<pos:position pos:line="120" pos:column="14"/></name> <argument_list pos:line="120" pos:column="15">(<argument><expr><literal type="string" pos:line="120" pos:column="16">"malloc failed: %s"<pos:position pos:line="120" pos:column="35"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="121" pos:column="17">sstrerror<pos:position pos:line="121" pos:column="26"/></name> <argument_list pos:line="121" pos:column="27">(<argument><expr><name pos:line="121" pos:column="28">errno<pos:position pos:line="121" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="35">errbuf<pos:position pos:line="121" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="121" pos:column="43">sizeof <argument_list pos:line="121" pos:column="50">(<argument><expr><name pos:line="121" pos:column="51">errbuf<pos:position pos:line="121" pos:column="57"/></name></expr></argument>)<pos:position pos:line="121" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="121" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="122" pos:column="9">sfree<pos:position pos:line="122" pos:column="14"/></name> <argument_list pos:line="122" pos:column="15">(<argument><expr><name><name pos:line="122" pos:column="16">temp<pos:position pos:line="122" pos:column="20"/></name><operator pos:line="122" pos:column="20">.<pos:position pos:line="122" pos:column="21"/></operator><name pos:line="122" pos:column="21">rule<pos:position pos:line="122" pos:column="25"/></name><operator pos:line="122" pos:column="25">.<pos:position pos:line="122" pos:column="26"/></operator><name pos:line="122" pos:column="26">comment<pos:position pos:line="122" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="35"/></expr_stmt>
        <return pos:line="123" pos:column="9">return <expr><operator pos:line="123" pos:column="16">(<pos:position pos:line="123" pos:column="17"/></operator><literal type="number" pos:line="123" pos:column="17">1<pos:position pos:line="123" pos:column="18"/></literal><operator pos:line="123" pos:column="18">)<pos:position pos:line="123" pos:column="19"/></operator></expr>;<pos:position pos:line="123" pos:column="20"/></return>
    }<pos:position pos:line="124" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="125" pos:column="5">memcpy<pos:position pos:line="125" pos:column="11"/></name> <argument_list pos:line="125" pos:column="12">(<argument><expr><name pos:line="125" pos:column="13">final<pos:position pos:line="125" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="20">&amp;<pos:position pos:line="125" pos:column="25"/></operator><name pos:line="125" pos:column="21">temp<pos:position pos:line="125" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="125" pos:column="27">sizeof <argument_list pos:line="125" pos:column="34">(<argument><expr><name pos:line="125" pos:column="35">temp<pos:position pos:line="125" pos:column="39"/></name></expr></argument>)<pos:position pos:line="125" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="125" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="126" pos:column="5">chain_list<pos:position pos:line="126" pos:column="15"/></name><index pos:line="126" pos:column="15">[<expr><name pos:line="126" pos:column="16">chain_num<pos:position pos:line="126" pos:column="25"/></name></expr>]<pos:position pos:line="126" pos:column="26"/></index></name> <operator pos:line="126" pos:column="27">=<pos:position pos:line="126" pos:column="28"/></operator> <name pos:line="126" pos:column="29">final<pos:position pos:line="126" pos:column="34"/></name></expr>;<pos:position pos:line="126" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="127" pos:column="5">chain_num<pos:position pos:line="127" pos:column="14"/></name><operator pos:line="127" pos:column="14">++<pos:position pos:line="127" pos:column="16"/></operator></expr>;<pos:position pos:line="127" pos:column="17"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="129" pos:column="5">DEBUG<pos:position pos:line="129" pos:column="10"/></name> <argument_list pos:line="129" pos:column="11">(<argument><expr><literal type="string" pos:line="129" pos:column="12">"Chain #%i: table = %s; chain = %s;"<pos:position pos:line="129" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="129" pos:column="50">chain_num<pos:position pos:line="129" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="61">final<pos:position pos:line="129" pos:column="66"/></name><operator pos:line="129" pos:column="66">-&gt;<pos:position pos:line="129" pos:column="71"/></operator><name pos:line="129" pos:column="68">table<pos:position pos:line="129" pos:column="73"/></name></name></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="75">final<pos:position pos:line="129" pos:column="80"/></name><operator pos:line="129" pos:column="80">-&gt;<pos:position pos:line="129" pos:column="85"/></operator><name pos:line="129" pos:column="82">chain<pos:position pos:line="129" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="89"/></expr_stmt>

    <return pos:line="131" pos:column="5">return <expr><operator pos:line="131" pos:column="12">(<pos:position pos:line="131" pos:column="13"/></operator><literal type="number" pos:line="131" pos:column="13">0<pos:position pos:line="131" pos:column="14"/></literal><operator pos:line="131" pos:column="14">)<pos:position pos:line="131" pos:column="15"/></operator></expr>;<pos:position pos:line="131" pos:column="16"/></return>
}<pos:position pos:line="132" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2677_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">format_values<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">ret<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="30">size_t<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">ret_len<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="46">/* {{{ */</comment>
                  <parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">data_set_t<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">ds<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">value_list_t<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">vl<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                  <parameter><decl><type><name pos:line="3" pos:column="19">_Bool<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">store_rates<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="37"/></parameter_list> <block pos:line="3" pos:column="38">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">offset<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">gauge_t<pos:position pos:line="6" pos:column="10"/></name> <modifier pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></modifier></type><name pos:line="6" pos:column="12">rates<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">assert<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><literal type="number" pos:line="8" pos:column="10">0<pos:position pos:line="8" pos:column="11"/></literal> <operator pos:line="8" pos:column="12">==<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">strcmp<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name><name pos:line="8" pos:column="22">ds<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">-&gt;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="26">type<pos:position pos:line="8" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="32">vl<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">type<pos:position pos:line="8" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">memset<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><name pos:line="10" pos:column="10">ret<pos:position pos:line="10" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="15">0<pos:position pos:line="10" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="18">ret_len<pos:position pos:line="10" pos:column="25"/></name></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>

<cpp:define pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">define<pos:position pos:line="12" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="12" pos:column="9">BUFFER_ADD<pos:position pos:line="12" pos:column="19"/></name><parameter_list pos:line="12" pos:column="19">(<parameter><type><modifier pos:line="12" pos:column="20">...<pos:position pos:line="12" pos:column="23"/></modifier></type></parameter>)<pos:position pos:line="12" pos:column="24"/></parameter_list></cpp:macro>                                                        \
  <cpp:value pos:line="13" pos:column="3">do {                                                                         \
    status = snprintf(ret + offset, ret_len - offset, __VA_ARGS__);            \
    if (status &lt; 1) {                                                          \
      sfree(rates);                                                            \
      return -1;                                                               \
    } else if (((size_t)status) &gt;= (ret_len - offset)) {                       \
      sfree(rates);                                                            \
      return -1;                                                               \
    } else                                                                     \
      offset += ((size_t)status);                                              \
  } while (0)<pos:position pos:line="23" pos:column="14"/></cpp:value></cpp:define>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">BUFFER_ADD<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><literal type="string" pos:line="25" pos:column="14">"%.3f"<pos:position pos:line="25" pos:column="20"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="22">CDTIME_T_TO_DOUBLE<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name><name pos:line="25" pos:column="41">vl<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">time<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>

  <for pos:line="27" pos:column="3">for <control pos:line="27" pos:column="7">(<init><decl><type><name pos:line="27" pos:column="8">size_t<pos:position pos:line="27" pos:column="14"/></name></type> <name pos:line="27" pos:column="15">i<pos:position pos:line="27" pos:column="16"/></name> <init pos:line="27" pos:column="17">= <expr><literal type="number" pos:line="27" pos:column="19">0<pos:position pos:line="27" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="21"/></init> <condition><expr><name pos:line="27" pos:column="22">i<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">&lt;<pos:position pos:line="27" pos:column="28"/></operator> <name><name pos:line="27" pos:column="26">ds<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">-&gt;<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="30">ds_num<pos:position pos:line="27" pos:column="36"/></name></name></expr>;<pos:position pos:line="27" pos:column="37"/></condition> <incr><expr><name pos:line="27" pos:column="38">i<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">++<pos:position pos:line="27" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="42"/></control> <block pos:line="27" pos:column="43">{
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">ds<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">ds<pos:position pos:line="28" pos:column="15"/></name><index pos:line="28" pos:column="15">[<expr><name pos:line="28" pos:column="16">i<pos:position pos:line="28" pos:column="17"/></name></expr>]<pos:position pos:line="28" pos:column="18"/></index></name><operator pos:line="28" pos:column="18">.<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">type<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">==<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">DS_TYPE_GAUGE<pos:position pos:line="28" pos:column="40"/></name></expr>)<pos:position pos:line="28" pos:column="41"/></condition><then pos:line="28" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="7">BUFFER_ADD<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument><expr><literal type="string" pos:line="29" pos:column="18">":"<pos:position pos:line="29" pos:column="21"/></literal> <name pos:line="29" pos:column="22">GAUGE_FORMAT<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="36">vl<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">-&gt;<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="40">values<pos:position pos:line="29" pos:column="46"/></name><index pos:line="29" pos:column="46">[<expr><name pos:line="29" pos:column="47">i<pos:position pos:line="29" pos:column="48"/></name></expr>]<pos:position pos:line="29" pos:column="49"/></index></name><operator pos:line="29" pos:column="49">.<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="50">gauge<pos:position pos:line="29" pos:column="55"/></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt></block></then>
    <elseif pos:line="30" pos:column="5">else <if pos:line="30" pos:column="10">if <condition pos:line="30" pos:column="13">(<expr><name pos:line="30" pos:column="14">store_rates<pos:position pos:line="30" pos:column="25"/></name></expr>)<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26"> <block pos:line="30" pos:column="27">{
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><name pos:line="31" pos:column="11">rates<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">==<pos:position pos:line="31" pos:column="19"/></operator> <name pos:line="31" pos:column="20">NULL<pos:position pos:line="31" pos:column="24"/></name></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="9">rates<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <call><name pos:line="32" pos:column="17">uc_get_rate<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">ds<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="33">vl<pos:position pos:line="32" pos:column="35"/></name></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt></block></then></if>
      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><name pos:line="33" pos:column="11">rates<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">==<pos:position pos:line="33" pos:column="19"/></operator> <name pos:line="33" pos:column="20">NULL<pos:position pos:line="33" pos:column="24"/></name></expr>)<pos:position pos:line="33" pos:column="25"/></condition><then pos:line="33" pos:column="25"> <block pos:line="33" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">WARNING<pos:position pos:line="34" pos:column="16"/></name><argument_list pos:line="34" pos:column="16">(<argument><expr><literal type="string" pos:line="34" pos:column="17">"format_values: uc_get_rate failed."<pos:position pos:line="34" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="55"/></expr_stmt>
        <return pos:line="35" pos:column="9">return <expr><operator pos:line="35" pos:column="16">-<pos:position pos:line="35" pos:column="17"/></operator><literal type="number" pos:line="35" pos:column="17">1<pos:position pos:line="35" pos:column="18"/></literal></expr>;<pos:position pos:line="35" pos:column="19"/></return>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">BUFFER_ADD<pos:position pos:line="37" pos:column="17"/></name><argument_list pos:line="37" pos:column="17">(<argument><expr><literal type="string" pos:line="37" pos:column="18">":"<pos:position pos:line="37" pos:column="21"/></literal> <name pos:line="37" pos:column="22">GAUGE_FORMAT<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="36">rates<pos:position pos:line="37" pos:column="41"/></name><index pos:line="37" pos:column="41">[<expr><name pos:line="37" pos:column="42">i<pos:position pos:line="37" pos:column="43"/></name></expr>]<pos:position pos:line="37" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if></elseif> <elseif pos:line="38" pos:column="7">else <if pos:line="38" pos:column="12">if <condition pos:line="38" pos:column="15">(<expr><name><name pos:line="38" pos:column="16">ds<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">-&gt;<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="20">ds<pos:position pos:line="38" pos:column="22"/></name><index pos:line="38" pos:column="22">[<expr><name pos:line="38" pos:column="23">i<pos:position pos:line="38" pos:column="24"/></name></expr>]<pos:position pos:line="38" pos:column="25"/></index></name><operator pos:line="38" pos:column="25">.<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">type<pos:position pos:line="38" pos:column="30"/></name> <operator pos:line="38" pos:column="31">==<pos:position pos:line="38" pos:column="33"/></operator> <name pos:line="38" pos:column="34">DS_TYPE_COUNTER<pos:position pos:line="38" pos:column="49"/></name></expr>)<pos:position pos:line="38" pos:column="50"/></condition><then pos:line="38" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="7">BUFFER_ADD<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><literal type="string" pos:line="39" pos:column="18">":%llu"<pos:position pos:line="39" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="27">vl<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">-&gt;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="31">values<pos:position pos:line="39" pos:column="37"/></name><index pos:line="39" pos:column="37">[<expr><name pos:line="39" pos:column="38">i<pos:position pos:line="39" pos:column="39"/></name></expr>]<pos:position pos:line="39" pos:column="40"/></index></name><operator pos:line="39" pos:column="40">.<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="41">counter<pos:position pos:line="39" pos:column="48"/></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="50"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="40" pos:column="5">else <if pos:line="40" pos:column="10">if <condition pos:line="40" pos:column="13">(<expr><name><name pos:line="40" pos:column="14">ds<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">ds<pos:position pos:line="40" pos:column="20"/></name><index pos:line="40" pos:column="20">[<expr><name pos:line="40" pos:column="21">i<pos:position pos:line="40" pos:column="22"/></name></expr>]<pos:position pos:line="40" pos:column="23"/></index></name><operator pos:line="40" pos:column="23">.<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">type<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">==<pos:position pos:line="40" pos:column="31"/></operator> <name pos:line="40" pos:column="32">DS_TYPE_DERIVE<pos:position pos:line="40" pos:column="46"/></name></expr>)<pos:position pos:line="40" pos:column="47"/></condition><then pos:line="40" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="7">BUFFER_ADD<pos:position pos:line="41" pos:column="17"/></name><argument_list pos:line="41" pos:column="17">(<argument><expr><literal type="string" pos:line="41" pos:column="18">":%"<pos:position pos:line="41" pos:column="22"/></literal> <name pos:line="41" pos:column="23">PRIi64<pos:position pos:line="41" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="31">vl<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">-&gt;<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="35">values<pos:position pos:line="41" pos:column="41"/></name><index pos:line="41" pos:column="41">[<expr><name pos:line="41" pos:column="42">i<pos:position pos:line="41" pos:column="43"/></name></expr>]<pos:position pos:line="41" pos:column="44"/></index></name><operator pos:line="41" pos:column="44">.<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="45">derive<pos:position pos:line="41" pos:column="51"/></name></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="42" pos:column="5">else <if pos:line="42" pos:column="10">if <condition pos:line="42" pos:column="13">(<expr><name><name pos:line="42" pos:column="14">ds<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">ds<pos:position pos:line="42" pos:column="20"/></name><index pos:line="42" pos:column="20">[<expr><name pos:line="42" pos:column="21">i<pos:position pos:line="42" pos:column="22"/></name></expr>]<pos:position pos:line="42" pos:column="23"/></index></name><operator pos:line="42" pos:column="23">.<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="24">type<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">==<pos:position pos:line="42" pos:column="31"/></operator> <name pos:line="42" pos:column="32">DS_TYPE_ABSOLUTE<pos:position pos:line="42" pos:column="48"/></name></expr>)<pos:position pos:line="42" pos:column="49"/></condition><then pos:line="42" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="7">BUFFER_ADD<pos:position pos:line="43" pos:column="17"/></name><argument_list pos:line="43" pos:column="17">(<argument><expr><literal type="string" pos:line="43" pos:column="18">":%"<pos:position pos:line="43" pos:column="22"/></literal> <name pos:line="43" pos:column="23">PRIu64<pos:position pos:line="43" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="31">vl<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">-&gt;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="35">values<pos:position pos:line="43" pos:column="41"/></name><index pos:line="43" pos:column="41">[<expr><name pos:line="43" pos:column="42">i<pos:position pos:line="43" pos:column="43"/></name></expr>]<pos:position pos:line="43" pos:column="44"/></index></name><operator pos:line="43" pos:column="44">.<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="45">absolute<pos:position pos:line="43" pos:column="53"/></name></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="55"/></expr_stmt></block></then></if></elseif>
    <else pos:line="44" pos:column="5">else <block pos:line="44" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">ERROR<pos:position pos:line="45" pos:column="12"/></name><argument_list pos:line="45" pos:column="12">(<argument><expr><literal type="string" pos:line="45" pos:column="13">"format_values: Unknown data source type: %i"<pos:position pos:line="45" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="60">ds<pos:position pos:line="45" pos:column="62"/></name><operator pos:line="45" pos:column="62">-&gt;<pos:position pos:line="45" pos:column="67"/></operator><name pos:line="45" pos:column="64">ds<pos:position pos:line="45" pos:column="66"/></name><index pos:line="45" pos:column="66">[<expr><name pos:line="45" pos:column="67">i<pos:position pos:line="45" pos:column="68"/></name></expr>]<pos:position pos:line="45" pos:column="69"/></index></name><operator pos:line="45" pos:column="69">.<pos:position pos:line="45" pos:column="70"/></operator><name pos:line="45" pos:column="70">type<pos:position pos:line="45" pos:column="74"/></name></expr></argument>)<pos:position pos:line="45" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="76"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">sfree<pos:position pos:line="46" pos:column="12"/></name><argument_list pos:line="46" pos:column="12">(<argument><expr><name pos:line="46" pos:column="13">rates<pos:position pos:line="46" pos:column="18"/></name></expr></argument>)<pos:position pos:line="46" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="20"/></expr_stmt>
      <return pos:line="47" pos:column="7">return <expr><operator pos:line="47" pos:column="14">-<pos:position pos:line="47" pos:column="15"/></operator><literal type="number" pos:line="47" pos:column="15">1<pos:position pos:line="47" pos:column="16"/></literal></expr>;<pos:position pos:line="47" pos:column="17"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></else></if>
  }<pos:position pos:line="49" pos:column="4"/></block></for> <comment type="block" pos:line="49" pos:column="5">/* for ds-&gt;ds_num */</comment>

<cpp:undef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">undef<pos:position pos:line="51" pos:column="7"/></cpp:directive> <name pos:line="51" pos:column="8">BUFFER_ADD<pos:position pos:line="51" pos:column="18"/></name></cpp:undef>

  <expr_stmt><expr><call><name pos:line="53" pos:column="3">sfree<pos:position pos:line="53" pos:column="8"/></name><argument_list pos:line="53" pos:column="8">(<argument><expr><name pos:line="53" pos:column="9">rates<pos:position pos:line="53" pos:column="14"/></name></expr></argument>)<pos:position pos:line="53" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="16"/></expr_stmt>
  <return pos:line="54" pos:column="3">return <expr><literal type="number" pos:line="54" pos:column="10">0<pos:position pos:line="54" pos:column="11"/></literal></expr>;<pos:position pos:line="54" pos:column="12"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

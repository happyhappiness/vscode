<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1118_collectd-4.7.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">networt_send_buffer_signed<pos:position pos:line="1" pos:column="39"/></name> <parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">sockent_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">se<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="62">/* {{{ */</comment>
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">in_buffer<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">size_t<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">in_buffer_size<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">part_signature_sha256_t<pos:position pos:line="4" pos:column="26"/></name></type> <name pos:line="4" pos:column="27">ps<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buffer<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><name pos:line="5" pos:column="15">BUFF_SIG_SIZE<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">+<pos:position pos:line="5" pos:column="30"/></operator> <name pos:line="5" pos:column="31">in_buffer_size<pos:position pos:line="5" pos:column="45"/></name></expr>]<pos:position pos:line="5" pos:column="46"/></index></name></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">buffer_offset<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">username_len<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">gcry_md_hd_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">hd<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">gcry_error_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">err<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">unsigned<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">char<pos:position pos:line="11" pos:column="16"/></name> <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">hash<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">hd<pos:position pos:line="13" pos:column="5"/></name> <operator pos:line="13" pos:column="6">=<pos:position pos:line="13" pos:column="7"/></operator> <name pos:line="13" pos:column="8">NULL<pos:position pos:line="13" pos:column="12"/></name></expr>;<pos:position pos:line="13" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">err<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <call><name pos:line="14" pos:column="9">gcry_md_open<pos:position pos:line="14" pos:column="21"/></name> <argument_list pos:line="14" pos:column="22">(<argument><expr><operator pos:line="14" pos:column="23">&amp;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="24">hd<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="28">GCRY_MD_SHA256<pos:position pos:line="14" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="44">GCRY_MD_FLAG_HMAC<pos:position pos:line="14" pos:column="61"/></name></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="63"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">err<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">!=<pos:position pos:line="15" pos:column="13"/></operator> <literal type="number" pos:line="15" pos:column="14">0<pos:position pos:line="15" pos:column="15"/></literal></expr>)<pos:position pos:line="15" pos:column="16"/></condition><then pos:line="15" pos:column="16">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ERROR<pos:position pos:line="17" pos:column="10"/></name> <argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="string" pos:line="17" pos:column="12">"network plugin: Creating HMAC object failed: %s"<pos:position pos:line="17" pos:column="61"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="18" pos:column="9">gcry_strerror<pos:position pos:line="18" pos:column="22"/></name> <argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">err<pos:position pos:line="18" pos:column="27"/></name></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
    <return pos:line="19" pos:column="5">return;<pos:position pos:line="19" pos:column="12"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="22" pos:column="3">err<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <call><name pos:line="22" pos:column="9">gcry_md_setkey<pos:position pos:line="22" pos:column="23"/></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">hd<pos:position pos:line="22" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="29">se<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">data<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">.<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">client<pos:position pos:line="22" pos:column="44"/></name><operator pos:line="22" pos:column="44">.<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="45">password<pos:position pos:line="22" pos:column="53"/></name></name></expr></argument>,
      <argument><expr><call><name pos:line="23" pos:column="7">strlen<pos:position pos:line="23" pos:column="13"/></name> <argument_list pos:line="23" pos:column="14">(<argument><expr><name><name pos:line="23" pos:column="15">se<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">data<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">.<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">client<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">.<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">password<pos:position pos:line="23" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">err<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">!=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>)<pos:position pos:line="24" pos:column="16"/></condition><then pos:line="24" pos:column="16">
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">ERROR<pos:position pos:line="26" pos:column="10"/></name> <argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="string" pos:line="26" pos:column="12">"network plugin: gcry_md_setkey failed: %s"<pos:position pos:line="26" pos:column="55"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="27" pos:column="9">gcry_strerror<pos:position pos:line="27" pos:column="22"/></name> <argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">err<pos:position pos:line="27" pos:column="27"/></name></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">gcry_md_close<pos:position pos:line="28" pos:column="18"/></name> <argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">hd<pos:position pos:line="28" pos:column="22"/></name></expr></argument>)<pos:position pos:line="28" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
    <return pos:line="29" pos:column="5">return;<pos:position pos:line="29" pos:column="12"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="32" pos:column="3">username_len<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <call><name pos:line="32" pos:column="18">strlen<pos:position pos:line="32" pos:column="24"/></name> <argument_list pos:line="32" pos:column="25">(<argument><expr><name><name pos:line="32" pos:column="26">se<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">-&gt;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="30">data<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">.<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="35">client<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">.<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="42">username<pos:position pos:line="32" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name pos:line="33" pos:column="7">username_len<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">&gt;<pos:position pos:line="33" pos:column="24"/></operator> <operator pos:line="33" pos:column="22">(<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="23">BUFF_SIG_SIZE<pos:position pos:line="33" pos:column="36"/></name> <operator pos:line="33" pos:column="37">-<pos:position pos:line="33" pos:column="38"/></operator> <name pos:line="33" pos:column="39">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="33" pos:column="65"/></name><operator pos:line="33" pos:column="65">)<pos:position pos:line="33" pos:column="66"/></operator></expr>)<pos:position pos:line="33" pos:column="67"/></condition><then pos:line="33" pos:column="67">
  <block pos:line="34" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">ERROR<pos:position pos:line="35" pos:column="10"/></name> <argument_list pos:line="35" pos:column="11">(<argument><expr><literal type="string" pos:line="35" pos:column="12">"network plugin: Username too long: %s"<pos:position pos:line="35" pos:column="51"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="36" pos:column="9">se<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">-&gt;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="13">data<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">.<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">client<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">.<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">username<pos:position pos:line="36" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
    <return pos:line="37" pos:column="5">return;<pos:position pos:line="37" pos:column="12"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">memcpy<pos:position pos:line="40" pos:column="9"/></name> <argument_list pos:line="40" pos:column="10">(<argument><expr><name pos:line="40" pos:column="11">buffer<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">+<pos:position pos:line="40" pos:column="19"/></operator> <name pos:line="40" pos:column="20">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="40" pos:column="46"/></name></expr></argument>,
      <argument><expr><name><name pos:line="41" pos:column="7">se<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">-&gt;<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="11">data<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">.<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="16">client<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">.<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="23">username<pos:position pos:line="41" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="33">username_len<pos:position pos:line="41" pos:column="45"/></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">memcpy<pos:position pos:line="42" pos:column="9"/></name> <argument_list pos:line="42" pos:column="10">(<argument><expr><name pos:line="42" pos:column="11">buffer<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">+<pos:position pos:line="42" pos:column="19"/></operator> <name pos:line="42" pos:column="20">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="42" pos:column="46"/></name> <operator pos:line="42" pos:column="47">+<pos:position pos:line="42" pos:column="48"/></operator> <name pos:line="42" pos:column="49">username_len<pos:position pos:line="42" pos:column="61"/></name></expr></argument>,
      <argument><expr><name pos:line="43" pos:column="7">in_buffer<pos:position pos:line="43" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="18">in_buffer_size<pos:position pos:line="43" pos:column="32"/></name></expr></argument>)<pos:position pos:line="43" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>

  <comment type="block" pos:line="45" pos:column="3">/* Initialize the `ps' structure. */</comment>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">memset<pos:position pos:line="46" pos:column="9"/></name> <argument_list pos:line="46" pos:column="10">(<argument><expr><operator pos:line="46" pos:column="11">&amp;<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="12">ps<pos:position pos:line="46" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="19">sizeof <argument_list pos:line="46" pos:column="26">(<argument><expr><name pos:line="46" pos:column="27">ps<pos:position pos:line="46" pos:column="29"/></name></expr></argument>)<pos:position pos:line="46" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="47" pos:column="3">ps<pos:position pos:line="47" pos:column="5"/></name><operator pos:line="47" pos:column="5">.<pos:position pos:line="47" pos:column="6"/></operator><name pos:line="47" pos:column="6">head<pos:position pos:line="47" pos:column="10"/></name><operator pos:line="47" pos:column="10">.<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">type<pos:position pos:line="47" pos:column="15"/></name></name> <operator pos:line="47" pos:column="16">=<pos:position pos:line="47" pos:column="17"/></operator> <call><name pos:line="47" pos:column="18">htons<pos:position pos:line="47" pos:column="23"/></name> <argument_list pos:line="47" pos:column="24">(<argument><expr><name pos:line="47" pos:column="25">TYPE_SIGN_SHA256<pos:position pos:line="47" pos:column="41"/></name></expr></argument>)<pos:position pos:line="47" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="48" pos:column="3">ps<pos:position pos:line="48" pos:column="5"/></name><operator pos:line="48" pos:column="5">.<pos:position pos:line="48" pos:column="6"/></operator><name pos:line="48" pos:column="6">head<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">.<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="11">length<pos:position pos:line="48" pos:column="17"/></name></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <call><name pos:line="48" pos:column="20">htons<pos:position pos:line="48" pos:column="25"/></name> <argument_list pos:line="48" pos:column="26">(<argument><expr><name pos:line="48" pos:column="27">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="48" pos:column="53"/></name> <operator pos:line="48" pos:column="54">+<pos:position pos:line="48" pos:column="55"/></operator> <name pos:line="48" pos:column="56">username_len<pos:position pos:line="48" pos:column="68"/></name></expr></argument>)<pos:position pos:line="48" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="70"/></expr_stmt>

  <comment type="block" pos:line="50" pos:column="3">/* Calculate the hash value. */</comment>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">gcry_md_write<pos:position pos:line="51" pos:column="16"/></name> <argument_list pos:line="51" pos:column="17">(<argument><expr><name pos:line="51" pos:column="18">hd<pos:position pos:line="51" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="22">buffer<pos:position pos:line="51" pos:column="28"/></name> <operator pos:line="51" pos:column="29">+<pos:position pos:line="51" pos:column="30"/></operator> <name pos:line="51" pos:column="31">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="51" pos:column="57"/></name></expr></argument>,
      <argument><expr><name pos:line="52" pos:column="7">username_len<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">+<pos:position pos:line="52" pos:column="21"/></operator> <name pos:line="52" pos:column="22">in_buffer_size<pos:position pos:line="52" pos:column="36"/></name></expr></argument>)<pos:position pos:line="52" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name pos:line="53" pos:column="3">hash<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">=<pos:position pos:line="53" pos:column="9"/></operator> <call><name pos:line="53" pos:column="10">gcry_md_read<pos:position pos:line="53" pos:column="22"/></name> <argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">hd<pos:position pos:line="53" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="28">GCRY_MD_SHA256<pos:position pos:line="53" pos:column="42"/></name></expr></argument>)<pos:position pos:line="53" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><name pos:line="54" pos:column="7">hash<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">==<pos:position pos:line="54" pos:column="14"/></operator> <name pos:line="54" pos:column="15">NULL<pos:position pos:line="54" pos:column="19"/></name></expr>)<pos:position pos:line="54" pos:column="20"/></condition><then pos:line="54" pos:column="20">
  <block pos:line="55" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">ERROR<pos:position pos:line="56" pos:column="10"/></name> <argument_list pos:line="56" pos:column="11">(<argument><expr><literal type="string" pos:line="56" pos:column="12">"network plugin: gcry_md_read failed."<pos:position pos:line="56" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">gcry_md_close<pos:position pos:line="57" pos:column="18"/></name> <argument_list pos:line="57" pos:column="19">(<argument><expr><name pos:line="57" pos:column="20">hd<pos:position pos:line="57" pos:column="22"/></name></expr></argument>)<pos:position pos:line="57" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>
    <return pos:line="58" pos:column="5">return;<pos:position pos:line="58" pos:column="12"/></return>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="60" pos:column="3">memcpy<pos:position pos:line="60" pos:column="9"/></name> <argument_list pos:line="60" pos:column="10">(<argument><expr><name><name pos:line="60" pos:column="11">ps<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">.<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">hash<pos:position pos:line="60" pos:column="18"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="20">hash<pos:position pos:line="60" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="60" pos:column="26">sizeof <argument_list pos:line="60" pos:column="33">(<argument><expr><name><name pos:line="60" pos:column="34">ps<pos:position pos:line="60" pos:column="36"/></name><operator pos:line="60" pos:column="36">.<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="37">hash<pos:position pos:line="60" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="60" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="44"/></expr_stmt>

  <comment type="block" pos:line="62" pos:column="3">/* Add the header */</comment>
  <expr_stmt><expr><name pos:line="63" pos:column="3">buffer_offset<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <literal type="number" pos:line="63" pos:column="19">0<pos:position pos:line="63" pos:column="20"/></literal></expr>;<pos:position pos:line="63" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="65" pos:column="3">BUFFER_ADD<pos:position pos:line="65" pos:column="13"/></name> <argument_list pos:line="65" pos:column="14">(<argument><expr><operator pos:line="65" pos:column="15">&amp;<pos:position pos:line="65" pos:column="20"/></operator><name><name pos:line="65" pos:column="16">ps<pos:position pos:line="65" pos:column="18"/></name><operator pos:line="65" pos:column="18">.<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="19">head<pos:position pos:line="65" pos:column="23"/></name><operator pos:line="65" pos:column="23">.<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="24">type<pos:position pos:line="65" pos:column="28"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="30">sizeof <argument_list pos:line="65" pos:column="37">(<argument><expr><name><name pos:line="65" pos:column="38">ps<pos:position pos:line="65" pos:column="40"/></name><operator pos:line="65" pos:column="40">.<pos:position pos:line="65" pos:column="41"/></operator><name pos:line="65" pos:column="41">head<pos:position pos:line="65" pos:column="45"/></name><operator pos:line="65" pos:column="45">.<pos:position pos:line="65" pos:column="46"/></operator><name pos:line="65" pos:column="46">type<pos:position pos:line="65" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="66" pos:column="3">BUFFER_ADD<pos:position pos:line="66" pos:column="13"/></name> <argument_list pos:line="66" pos:column="14">(<argument><expr><operator pos:line="66" pos:column="15">&amp;<pos:position pos:line="66" pos:column="20"/></operator><name><name pos:line="66" pos:column="16">ps<pos:position pos:line="66" pos:column="18"/></name><operator pos:line="66" pos:column="18">.<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="19">head<pos:position pos:line="66" pos:column="23"/></name><operator pos:line="66" pos:column="23">.<pos:position pos:line="66" pos:column="24"/></operator><name pos:line="66" pos:column="24">length<pos:position pos:line="66" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="32">sizeof <argument_list pos:line="66" pos:column="39">(<argument><expr><name><name pos:line="66" pos:column="40">ps<pos:position pos:line="66" pos:column="42"/></name><operator pos:line="66" pos:column="42">.<pos:position pos:line="66" pos:column="43"/></operator><name pos:line="66" pos:column="43">head<pos:position pos:line="66" pos:column="47"/></name><operator pos:line="66" pos:column="47">.<pos:position pos:line="66" pos:column="48"/></operator><name pos:line="66" pos:column="48">length<pos:position pos:line="66" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="67" pos:column="3">BUFFER_ADD<pos:position pos:line="67" pos:column="13"/></name> <argument_list pos:line="67" pos:column="14">(<argument><expr><name><name pos:line="67" pos:column="15">ps<pos:position pos:line="67" pos:column="17"/></name><operator pos:line="67" pos:column="17">.<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">hash<pos:position pos:line="67" pos:column="22"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="24">sizeof <argument_list pos:line="67" pos:column="31">(<argument><expr><name><name pos:line="67" pos:column="32">ps<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">.<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="35">hash<pos:position pos:line="67" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="67" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="69" pos:column="3">assert<pos:position pos:line="69" pos:column="9"/></name> <argument_list pos:line="69" pos:column="10">(<argument><expr><name pos:line="69" pos:column="11">buffer_offset<pos:position pos:line="69" pos:column="24"/></name> <operator pos:line="69" pos:column="25">==<pos:position pos:line="69" pos:column="27"/></operator> <name pos:line="69" pos:column="28">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="69" pos:column="54"/></name></expr></argument>)<pos:position pos:line="69" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="56"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="71" pos:column="3">gcry_md_close<pos:position pos:line="71" pos:column="16"/></name> <argument_list pos:line="71" pos:column="17">(<argument><expr><name pos:line="71" pos:column="18">hd<pos:position pos:line="71" pos:column="20"/></name></expr></argument>)<pos:position pos:line="71" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="72" pos:column="3">hd<pos:position pos:line="72" pos:column="5"/></name> <operator pos:line="72" pos:column="6">=<pos:position pos:line="72" pos:column="7"/></operator> <name pos:line="72" pos:column="8">NULL<pos:position pos:line="72" pos:column="12"/></name></expr>;<pos:position pos:line="72" pos:column="13"/></expr_stmt>

  <expr_stmt><expr><name pos:line="74" pos:column="3">buffer_offset<pos:position pos:line="74" pos:column="16"/></name> <operator pos:line="74" pos:column="17">=<pos:position pos:line="74" pos:column="18"/></operator> <name pos:line="74" pos:column="19">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="74" pos:column="45"/></name> <operator pos:line="74" pos:column="46">+<pos:position pos:line="74" pos:column="47"/></operator> <name pos:line="74" pos:column="48">username_len<pos:position pos:line="74" pos:column="60"/></name> <operator pos:line="74" pos:column="61">+<pos:position pos:line="74" pos:column="62"/></operator> <name pos:line="74" pos:column="63">in_buffer_size<pos:position pos:line="74" pos:column="77"/></name></expr>;<pos:position pos:line="74" pos:column="78"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="75" pos:column="3">networt_send_buffer_plain<pos:position pos:line="75" pos:column="28"/></name> <argument_list pos:line="75" pos:column="29">(<argument><expr><name pos:line="75" pos:column="30">se<pos:position pos:line="75" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="34">buffer<pos:position pos:line="75" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="42">buffer_offset<pos:position pos:line="75" pos:column="55"/></name></expr></argument>)<pos:position pos:line="75" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="57"/></expr_stmt>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

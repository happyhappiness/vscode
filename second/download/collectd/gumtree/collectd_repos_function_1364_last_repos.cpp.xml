<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1364_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pb_del_socket<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">pinba_socket_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">s<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="45">/* {{{ */</comment>
                         <parameter><decl><type><name pos:line="2" pos:column="26">nfds_t<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">index<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list> <block pos:line="2" pos:column="40">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">index<pos:position pos:line="3" pos:column="12"/></name> <operator pos:line="3" pos:column="13">&gt;=<pos:position pos:line="3" pos:column="18"/></operator> <name><name pos:line="3" pos:column="16">s<pos:position pos:line="3" pos:column="17"/></name><operator pos:line="3" pos:column="17">-&gt;<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="19">fd_num<pos:position pos:line="3" pos:column="25"/></name></name></expr>)<pos:position pos:line="3" pos:column="26"/></condition><then pos:line="3" pos:column="26">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><name pos:line="4" pos:column="12">EINVAL<pos:position pos:line="4" pos:column="18"/></name></expr>;<pos:position pos:line="4" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">close<pos:position pos:line="6" pos:column="8"/></name><argument_list pos:line="6" pos:column="8">(<argument><expr><name><name pos:line="6" pos:column="9">s<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">fd<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><name pos:line="6" pos:column="15">index<pos:position pos:line="6" pos:column="20"/></name></expr>]<pos:position pos:line="6" pos:column="21"/></index></name><operator pos:line="6" pos:column="21">.<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">fd<pos:position pos:line="6" pos:column="24"/></name></expr></argument>)<pos:position pos:line="6" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="7" pos:column="3">s<pos:position pos:line="7" pos:column="4"/></name><operator pos:line="7" pos:column="4">-&gt;<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="6">fd<pos:position pos:line="7" pos:column="8"/></name><index pos:line="7" pos:column="8">[<expr><name pos:line="7" pos:column="9">index<pos:position pos:line="7" pos:column="14"/></name></expr>]<pos:position pos:line="7" pos:column="15"/></index></name><operator pos:line="7" pos:column="15">.<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">fd<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <operator pos:line="7" pos:column="21">-<pos:position pos:line="7" pos:column="22"/></operator><literal type="number" pos:line="7" pos:column="22">1<pos:position pos:line="7" pos:column="23"/></literal></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* When deleting the last element in the list, no memmove is necessary. */</comment>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">index<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">&lt;<pos:position pos:line="10" pos:column="17"/></operator> <operator pos:line="10" pos:column="15">(<pos:position pos:line="10" pos:column="16"/></operator><name><name pos:line="10" pos:column="16">s<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">fd_num<pos:position pos:line="10" pos:column="25"/></name></name> <operator pos:line="10" pos:column="26">-<pos:position pos:line="10" pos:column="27"/></operator> <literal type="number" pos:line="10" pos:column="28">1<pos:position pos:line="10" pos:column="29"/></literal><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31"> <block pos:line="10" pos:column="32">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">memmove<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><operator pos:line="11" pos:column="13">&amp;<pos:position pos:line="11" pos:column="18"/></operator><name><name pos:line="11" pos:column="14">s<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">fd<pos:position pos:line="11" pos:column="19"/></name><index pos:line="11" pos:column="19">[<expr><name pos:line="11" pos:column="20">index<pos:position pos:line="11" pos:column="25"/></name></expr>]<pos:position pos:line="11" pos:column="26"/></index></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="28">&amp;<pos:position pos:line="11" pos:column="33"/></operator><name><name pos:line="11" pos:column="29">s<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">fd<pos:position pos:line="11" pos:column="34"/></name><index pos:line="11" pos:column="34">[<expr><name pos:line="11" pos:column="35">index<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">+<pos:position pos:line="11" pos:column="42"/></operator> <literal type="number" pos:line="11" pos:column="43">1<pos:position pos:line="11" pos:column="44"/></literal></expr>]<pos:position pos:line="11" pos:column="45"/></index></name></expr></argument>,
            <argument><expr><sizeof pos:line="12" pos:column="13">sizeof<argument_list pos:line="12" pos:column="19">(<argument><expr><name><name pos:line="12" pos:column="20">s<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">-&gt;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="23">fd<pos:position pos:line="12" pos:column="25"/></name><index pos:line="12" pos:column="25">[<expr><literal type="number" pos:line="12" pos:column="26">0<pos:position pos:line="12" pos:column="27"/></literal></expr>]<pos:position pos:line="12" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></sizeof> <operator pos:line="12" pos:column="30">*<pos:position pos:line="12" pos:column="31"/></operator> <operator pos:line="12" pos:column="32">(<pos:position pos:line="12" pos:column="33"/></operator><name><name pos:line="12" pos:column="33">s<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">fd_num<pos:position pos:line="12" pos:column="42"/></name></name> <operator pos:line="12" pos:column="43">-<pos:position pos:line="12" pos:column="44"/></operator> <operator pos:line="12" pos:column="45">(<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="46">index<pos:position pos:line="12" pos:column="51"/></name> <operator pos:line="12" pos:column="52">+<pos:position pos:line="12" pos:column="53"/></operator> <literal type="number" pos:line="12" pos:column="54">1<pos:position pos:line="12" pos:column="55"/></literal><operator pos:line="12" pos:column="55">)<pos:position pos:line="12" pos:column="56"/></operator><operator pos:line="12" pos:column="56">)<pos:position pos:line="12" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="15" pos:column="3">s<pos:position pos:line="15" pos:column="4"/></name><operator pos:line="15" pos:column="4">-&gt;<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="6">fd_num<pos:position pos:line="15" pos:column="12"/></name></name><operator pos:line="15" pos:column="12">--<pos:position pos:line="15" pos:column="14"/></operator></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>
  <return pos:line="16" pos:column="3">return <expr><literal type="number" pos:line="16" pos:column="10">0<pos:position pos:line="16" pos:column="11"/></literal></expr>;<pos:position pos:line="16" pos:column="12"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

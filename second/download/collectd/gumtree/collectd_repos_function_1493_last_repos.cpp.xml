<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1493_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensor_list_read_all<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">c_ipmi_instance_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">st<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list> <block pos:line="1" pos:column="56">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">pthread_mutex_lock<pos:position pos:line="2" pos:column="21"/></name><argument_list pos:line="2" pos:column="21">(<argument><expr><operator pos:line="2" pos:column="22">&amp;<pos:position pos:line="2" pos:column="27"/></operator><name><name pos:line="2" pos:column="23">st<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">-&gt;<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="27">sensor_list_lock<pos:position pos:line="2" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="2" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="45"/></expr_stmt>

  <for pos:line="4" pos:column="3">for <control pos:line="4" pos:column="7">(<init><decl><type><name pos:line="4" pos:column="8">c_ipmi_sensor_list_t<pos:position pos:line="4" pos:column="28"/></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">list_item<pos:position pos:line="4" pos:column="39"/></name> <init pos:line="4" pos:column="40">= <expr><name><name pos:line="4" pos:column="42">st<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">-&gt;<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="46">sensor_list<pos:position pos:line="4" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="58"/></init> <condition><expr><name pos:line="4" pos:column="59">list_item<pos:position pos:line="4" pos:column="68"/></name> <operator pos:line="4" pos:column="69">!=<pos:position pos:line="4" pos:column="71"/></operator> <name pos:line="4" pos:column="72">NULL<pos:position pos:line="4" pos:column="76"/></name></expr>;<pos:position pos:line="4" pos:column="77"/></condition>
       <incr><expr><name pos:line="5" pos:column="8">list_item<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">=<pos:position pos:line="5" pos:column="19"/></operator> <name><name pos:line="5" pos:column="20">list_item<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">next<pos:position pos:line="5" pos:column="35"/></name></name></expr></incr>)<pos:position pos:line="5" pos:column="36"/></control> <block pos:line="5" pos:column="37">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">DEBUG<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><literal type="string" pos:line="6" pos:column="11">"ipmi plugin: try read sensor `%s` of `%s`, use: %d"<pos:position pos:line="6" pos:column="63"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="7" pos:column="11">list_item<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">sensor_name<pos:position pos:line="7" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="35">st<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">name<pos:position pos:line="7" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="45">list_item<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">-&gt;<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="56">use<pos:position pos:line="7" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="61"/></expr_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* Reading already initiated */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">list_item<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">use<pos:position pos:line="10" pos:column="23"/></name></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24">
      <block type="pseudo"><continue pos:line="11" pos:column="7">continue;<pos:position pos:line="11" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name><name pos:line="13" pos:column="5">list_item<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">use<pos:position pos:line="13" pos:column="19"/></name></name><operator pos:line="13" pos:column="19">++<pos:position pos:line="13" pos:column="21"/></operator></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ipmi_sensor_id_get_reading<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name><name pos:line="14" pos:column="32">list_item<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="43">sensor_id<pos:position pos:line="14" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="54">sensor_read_handler<pos:position pos:line="14" pos:column="73"/></name></expr></argument>,
                               <comment type="block" pos:line="15" pos:column="32">/* user data = */</comment> <argument><expr><operator pos:line="15" pos:column="50">(<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="51">void<pos:position pos:line="15" pos:column="55"/></name> <operator pos:line="15" pos:column="56">*<pos:position pos:line="15" pos:column="57"/></operator><operator pos:line="15" pos:column="57">)<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="58">list_item<pos:position pos:line="15" pos:column="67"/></name></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="69"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></for> <comment type="block" pos:line="16" pos:column="5">/* for (list_item) */</comment>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">pthread_mutex_unlock<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><operator pos:line="18" pos:column="24">&amp;<pos:position pos:line="18" pos:column="29"/></operator><name><name pos:line="18" pos:column="25">st<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">sensor_list_lock<pos:position pos:line="18" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>

  <return pos:line="20" pos:column="3">return <expr><literal type="number" pos:line="20" pos:column="10">0<pos:position pos:line="20" pos:column="11"/></literal></expr>;<pos:position pos:line="20" pos:column="12"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

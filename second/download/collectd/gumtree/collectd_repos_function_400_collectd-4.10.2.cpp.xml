<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_400_collectd-4.10.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">uc_get_names<pos:position pos:line="1" pos:column="17"/></name> <parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier><modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">ret_names<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">time_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier><modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">ret_times<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">size_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">ret_number<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">c_avl_iterator_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">iter<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">key<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">cache_entry_t<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">value<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier><modifier pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></modifier></type><name pos:line="7" pos:column="10">names<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name pos:line="7" pos:column="18">NULL<pos:position pos:line="7" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">time_t<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">times<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><name pos:line="8" pos:column="19">NULL<pos:position pos:line="8" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">number<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">status<pos:position pos:line="11" pos:column="13"/></name> <init pos:line="11" pos:column="14">= <expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="18"/></decl_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">(<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">ret_names<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">==<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">NULL<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">)<pos:position pos:line="13" pos:column="26"/></operator> <operator pos:line="13" pos:column="27">||<pos:position pos:line="13" pos:column="29"/></operator> <operator pos:line="13" pos:column="30">(<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">ret_number<pos:position pos:line="13" pos:column="41"/></name> <operator pos:line="13" pos:column="42">==<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="45">NULL<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">)<pos:position pos:line="13" pos:column="50"/></operator></expr>)<pos:position pos:line="13" pos:column="51"/></condition><then pos:line="13" pos:column="51">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">pthread_mutex_lock<pos:position pos:line="16" pos:column="21"/></name> <argument_list pos:line="16" pos:column="22">(<argument><expr><operator pos:line="16" pos:column="23">&amp;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="24">cache_lock<pos:position pos:line="16" pos:column="34"/></name></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name pos:line="18" pos:column="3">iter<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">c_avl_get_iterator<pos:position pos:line="18" pos:column="28"/></name> <argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">cache_tree<pos:position pos:line="18" pos:column="40"/></name></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
  <while pos:line="19" pos:column="3">while <condition pos:line="19" pos:column="9">(<expr><call><name pos:line="19" pos:column="10">c_avl_iterator_next<pos:position pos:line="19" pos:column="29"/></name> <argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">iter<pos:position pos:line="19" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="37">(<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="38">void<pos:position pos:line="19" pos:column="42"/></name> <operator pos:line="19" pos:column="43">*<pos:position pos:line="19" pos:column="44"/></operator><operator pos:line="19" pos:column="44">)<pos:position pos:line="19" pos:column="45"/></operator> <operator pos:line="19" pos:column="46">&amp;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="47">key<pos:position pos:line="19" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="52">(<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="53">void<pos:position pos:line="19" pos:column="57"/></name> <operator pos:line="19" pos:column="58">*<pos:position pos:line="19" pos:column="59"/></operator><operator pos:line="19" pos:column="59">)<pos:position pos:line="19" pos:column="60"/></operator> <operator pos:line="19" pos:column="61">&amp;<pos:position pos:line="19" pos:column="66"/></operator><name pos:line="19" pos:column="62">value<pos:position pos:line="19" pos:column="67"/></name></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call> <operator pos:line="19" pos:column="69">==<pos:position pos:line="19" pos:column="71"/></operator> <literal type="number" pos:line="19" pos:column="72">0<pos:position pos:line="19" pos:column="73"/></literal></expr>)<pos:position pos:line="19" pos:column="74"/></condition>
  <block pos:line="20" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name> <modifier pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></modifier><modifier pos:line="21" pos:column="11">*<pos:position pos:line="21" pos:column="12"/></modifier></type><name pos:line="21" pos:column="12">temp<pos:position pos:line="21" pos:column="16"/></name></decl>;<pos:position pos:line="21" pos:column="17"/></decl_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* remove missing values when list values */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">value<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">state<pos:position pos:line="24" pos:column="21"/></name></name> <operator pos:line="24" pos:column="22">==<pos:position pos:line="24" pos:column="24"/></operator> <name pos:line="24" pos:column="25">STATE_MISSING<pos:position pos:line="24" pos:column="38"/></name></expr>)<pos:position pos:line="24" pos:column="39"/></condition><then pos:line="24" pos:column="39">
      <block type="pseudo"><continue pos:line="25" pos:column="7">continue;<pos:position pos:line="25" pos:column="16"/></continue></block></then></if>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">ret_times<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">!=<pos:position pos:line="27" pos:column="21"/></operator> <name pos:line="27" pos:column="22">NULL<pos:position pos:line="27" pos:column="26"/></name></expr>)<pos:position pos:line="27" pos:column="27"/></condition><then pos:line="27" pos:column="27">
    <block pos:line="28" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="29" pos:column="7">time_t<pos:position pos:line="29" pos:column="13"/></name> <modifier pos:line="29" pos:column="14">*<pos:position pos:line="29" pos:column="15"/></modifier></type><name pos:line="29" pos:column="15">tmp_times<pos:position pos:line="29" pos:column="24"/></name></decl>;<pos:position pos:line="29" pos:column="25"/></decl_stmt>

      <expr_stmt><expr><name pos:line="31" pos:column="7">tmp_times<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <operator pos:line="31" pos:column="19">(<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">time_t<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">*<pos:position pos:line="31" pos:column="28"/></operator><operator pos:line="31" pos:column="28">)<pos:position pos:line="31" pos:column="29"/></operator> <call><name pos:line="31" pos:column="30">realloc<pos:position pos:line="31" pos:column="37"/></name> <argument_list pos:line="31" pos:column="38">(<argument><expr><name pos:line="31" pos:column="39">times<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="46">sizeof <argument_list pos:line="31" pos:column="53">(<argument><expr><name pos:line="31" pos:column="54">time_t<pos:position pos:line="31" pos:column="60"/></name></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></sizeof> <operator pos:line="31" pos:column="62">*<pos:position pos:line="31" pos:column="63"/></operator> <operator pos:line="31" pos:column="64">(<pos:position pos:line="31" pos:column="65"/></operator><name pos:line="31" pos:column="65">number<pos:position pos:line="31" pos:column="71"/></name> <operator pos:line="31" pos:column="72">+<pos:position pos:line="31" pos:column="73"/></operator> <literal type="number" pos:line="31" pos:column="74">1<pos:position pos:line="31" pos:column="75"/></literal><operator pos:line="31" pos:column="75">)<pos:position pos:line="31" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="78"/></expr_stmt>
      <if pos:line="32" pos:column="7">if <condition pos:line="32" pos:column="10">(<expr><name pos:line="32" pos:column="11">tmp_times<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">==<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="24">NULL<pos:position pos:line="32" pos:column="28"/></name></expr>)<pos:position pos:line="32" pos:column="29"/></condition><then pos:line="32" pos:column="29">
      <block pos:line="33" pos:column="7">{
	<expr_stmt><expr><name pos:line="34" pos:column="9">status<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <operator pos:line="34" pos:column="18">-<pos:position pos:line="34" pos:column="19"/></operator><literal type="number" pos:line="34" pos:column="19">1<pos:position pos:line="34" pos:column="20"/></literal></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt>
	<break pos:line="35" pos:column="9">break;<pos:position pos:line="35" pos:column="15"/></break>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="37" pos:column="7">times<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <name pos:line="37" pos:column="15">tmp_times<pos:position pos:line="37" pos:column="24"/></name></expr>;<pos:position pos:line="37" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="38" pos:column="7">times<pos:position pos:line="38" pos:column="12"/></name><index pos:line="38" pos:column="12">[<expr><name pos:line="38" pos:column="13">number<pos:position pos:line="38" pos:column="19"/></name></expr>]<pos:position pos:line="38" pos:column="20"/></index></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <name><name pos:line="38" pos:column="23">value<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">-&gt;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="30">last_time<pos:position pos:line="38" pos:column="39"/></name></name></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="41" pos:column="5">temp<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="13">char<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">*<pos:position pos:line="41" pos:column="19"/></operator><operator pos:line="41" pos:column="19">*<pos:position pos:line="41" pos:column="20"/></operator><operator pos:line="41" pos:column="20">)<pos:position pos:line="41" pos:column="21"/></operator> <call><name pos:line="41" pos:column="22">realloc<pos:position pos:line="41" pos:column="29"/></name> <argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">names<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="38">sizeof <argument_list pos:line="41" pos:column="45">(<argument><expr><name pos:line="41" pos:column="46">char<pos:position pos:line="41" pos:column="50"/></name> <operator pos:line="41" pos:column="51">*<pos:position pos:line="41" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></sizeof> <operator pos:line="41" pos:column="54">*<pos:position pos:line="41" pos:column="55"/></operator> <operator pos:line="41" pos:column="56">(<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="57">number<pos:position pos:line="41" pos:column="63"/></name> <operator pos:line="41" pos:column="64">+<pos:position pos:line="41" pos:column="65"/></operator> <literal type="number" pos:line="41" pos:column="66">1<pos:position pos:line="41" pos:column="67"/></literal><operator pos:line="41" pos:column="67">)<pos:position pos:line="41" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="70"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">temp<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">==<pos:position pos:line="42" pos:column="16"/></operator> <name pos:line="42" pos:column="17">NULL<pos:position pos:line="42" pos:column="21"/></name></expr>)<pos:position pos:line="42" pos:column="22"/></condition><then pos:line="42" pos:column="22">
    <block pos:line="43" pos:column="5">{
      <expr_stmt><expr><name pos:line="44" pos:column="7">status<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <operator pos:line="44" pos:column="16">-<pos:position pos:line="44" pos:column="17"/></operator><literal type="number" pos:line="44" pos:column="17">1<pos:position pos:line="44" pos:column="18"/></literal></expr>;<pos:position pos:line="44" pos:column="19"/></expr_stmt>
      <break pos:line="45" pos:column="7">break;<pos:position pos:line="45" pos:column="13"/></break>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="47" pos:column="5">names<pos:position pos:line="47" pos:column="10"/></name> <operator pos:line="47" pos:column="11">=<pos:position pos:line="47" pos:column="12"/></operator> <name pos:line="47" pos:column="13">temp<pos:position pos:line="47" pos:column="17"/></name></expr>;<pos:position pos:line="47" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">names<pos:position pos:line="48" pos:column="10"/></name><index pos:line="48" pos:column="10">[<expr><name pos:line="48" pos:column="11">number<pos:position pos:line="48" pos:column="17"/></name></expr>]<pos:position pos:line="48" pos:column="18"/></index></name> <operator pos:line="48" pos:column="19">=<pos:position pos:line="48" pos:column="20"/></operator> <call><name pos:line="48" pos:column="21">strdup<pos:position pos:line="48" pos:column="27"/></name> <argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">key<pos:position pos:line="48" pos:column="32"/></name></expr></argument>)<pos:position pos:line="48" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name><name pos:line="49" pos:column="9">names<pos:position pos:line="49" pos:column="14"/></name><index pos:line="49" pos:column="14">[<expr><name pos:line="49" pos:column="15">number<pos:position pos:line="49" pos:column="21"/></name></expr>]<pos:position pos:line="49" pos:column="22"/></index></name> <operator pos:line="49" pos:column="23">==<pos:position pos:line="49" pos:column="25"/></operator> <name pos:line="49" pos:column="26">NULL<pos:position pos:line="49" pos:column="30"/></name></expr>)<pos:position pos:line="49" pos:column="31"/></condition><then pos:line="49" pos:column="31">
    <block pos:line="50" pos:column="5">{
      <expr_stmt><expr><name pos:line="51" pos:column="7">status<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <operator pos:line="51" pos:column="16">-<pos:position pos:line="51" pos:column="17"/></operator><literal type="number" pos:line="51" pos:column="17">1<pos:position pos:line="51" pos:column="18"/></literal></expr>;<pos:position pos:line="51" pos:column="19"/></expr_stmt>
      <break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="54" pos:column="5">number<pos:position pos:line="54" pos:column="11"/></name><operator pos:line="54" pos:column="11">++<pos:position pos:line="54" pos:column="13"/></operator></expr>;<pos:position pos:line="54" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="55" pos:column="4"/></block></while> <comment type="block" pos:line="55" pos:column="5">/* while (c_avl_iterator_next) */</comment>

  <expr_stmt><expr><call><name pos:line="57" pos:column="3">c_avl_iterator_destroy<pos:position pos:line="57" pos:column="25"/></name> <argument_list pos:line="57" pos:column="26">(<argument><expr><name pos:line="57" pos:column="27">iter<pos:position pos:line="57" pos:column="31"/></name></expr></argument>)<pos:position pos:line="57" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="58" pos:column="3">pthread_mutex_unlock<pos:position pos:line="58" pos:column="23"/></name> <argument_list pos:line="58" pos:column="24">(<argument><expr><operator pos:line="58" pos:column="25">&amp;<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="26">cache_lock<pos:position pos:line="58" pos:column="36"/></name></expr></argument>)<pos:position pos:line="58" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="38"/></expr_stmt>

  <if pos:line="60" pos:column="3">if <condition pos:line="60" pos:column="6">(<expr><name pos:line="60" pos:column="7">status<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">!=<pos:position pos:line="60" pos:column="16"/></operator> <literal type="number" pos:line="60" pos:column="17">0<pos:position pos:line="60" pos:column="18"/></literal></expr>)<pos:position pos:line="60" pos:column="19"/></condition><then pos:line="60" pos:column="19">
  <block pos:line="61" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="62" pos:column="5">size_t<pos:position pos:line="62" pos:column="11"/></name></type> <name pos:line="62" pos:column="12">i<pos:position pos:line="62" pos:column="13"/></name></decl>;<pos:position pos:line="62" pos:column="14"/></decl_stmt>
    
    <for pos:line="64" pos:column="5">for <control pos:line="64" pos:column="9">(<init><expr><name pos:line="64" pos:column="10">i<pos:position pos:line="64" pos:column="11"/></name> <operator pos:line="64" pos:column="12">=<pos:position pos:line="64" pos:column="13"/></operator> <literal type="number" pos:line="64" pos:column="14">0<pos:position pos:line="64" pos:column="15"/></literal></expr>;<pos:position pos:line="64" pos:column="16"/></init> <condition><expr><name pos:line="64" pos:column="17">i<pos:position pos:line="64" pos:column="18"/></name> <operator pos:line="64" pos:column="19">&lt;<pos:position pos:line="64" pos:column="23"/></operator> <name pos:line="64" pos:column="21">number<pos:position pos:line="64" pos:column="27"/></name></expr>;<pos:position pos:line="64" pos:column="28"/></condition> <incr><expr><name pos:line="64" pos:column="29">i<pos:position pos:line="64" pos:column="30"/></name><operator pos:line="64" pos:column="30">++<pos:position pos:line="64" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="64" pos:column="33"/></control>
    <block pos:line="65" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">sfree<pos:position pos:line="66" pos:column="12"/></name> <argument_list pos:line="66" pos:column="13">(<argument><expr><name><name pos:line="66" pos:column="14">names<pos:position pos:line="66" pos:column="19"/></name><index pos:line="66" pos:column="19">[<expr><name pos:line="66" pos:column="20">i<pos:position pos:line="66" pos:column="21"/></name></expr>]<pos:position pos:line="66" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="66" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">sfree<pos:position pos:line="68" pos:column="10"/></name> <argument_list pos:line="68" pos:column="11">(<argument><expr><name pos:line="68" pos:column="12">names<pos:position pos:line="68" pos:column="17"/></name></expr></argument>)<pos:position pos:line="68" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="19"/></expr_stmt>

    <return pos:line="70" pos:column="5">return <expr><operator pos:line="70" pos:column="12">(<pos:position pos:line="70" pos:column="13"/></operator><operator pos:line="70" pos:column="13">-<pos:position pos:line="70" pos:column="14"/></operator><literal type="number" pos:line="70" pos:column="14">1<pos:position pos:line="70" pos:column="15"/></literal><operator pos:line="70" pos:column="15">)<pos:position pos:line="70" pos:column="16"/></operator></expr>;<pos:position pos:line="70" pos:column="17"/></return>
  }<pos:position pos:line="71" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="73" pos:column="3">*<pos:position pos:line="73" pos:column="4"/></operator><name pos:line="73" pos:column="4">ret_names<pos:position pos:line="73" pos:column="13"/></name> <operator pos:line="73" pos:column="14">=<pos:position pos:line="73" pos:column="15"/></operator> <name pos:line="73" pos:column="16">names<pos:position pos:line="73" pos:column="21"/></name></expr>;<pos:position pos:line="73" pos:column="22"/></expr_stmt>
  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><name pos:line="74" pos:column="7">ret_times<pos:position pos:line="74" pos:column="16"/></name> <operator pos:line="74" pos:column="17">!=<pos:position pos:line="74" pos:column="19"/></operator> <name pos:line="74" pos:column="20">NULL<pos:position pos:line="74" pos:column="24"/></name></expr>)<pos:position pos:line="74" pos:column="25"/></condition><then pos:line="74" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="75" pos:column="5">*<pos:position pos:line="75" pos:column="6"/></operator><name pos:line="75" pos:column="6">ret_times<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <name pos:line="75" pos:column="18">times<pos:position pos:line="75" pos:column="23"/></name></expr>;<pos:position pos:line="75" pos:column="24"/></expr_stmt></block></then></if>
  <expr_stmt><expr><operator pos:line="76" pos:column="3">*<pos:position pos:line="76" pos:column="4"/></operator><name pos:line="76" pos:column="4">ret_number<pos:position pos:line="76" pos:column="14"/></name> <operator pos:line="76" pos:column="15">=<pos:position pos:line="76" pos:column="16"/></operator> <name pos:line="76" pos:column="17">number<pos:position pos:line="76" pos:column="23"/></name></expr>;<pos:position pos:line="76" pos:column="24"/></expr_stmt>

  <return pos:line="78" pos:column="3">return <expr><operator pos:line="78" pos:column="10">(<pos:position pos:line="78" pos:column="11"/></operator><literal type="number" pos:line="78" pos:column="11">0<pos:position pos:line="78" pos:column="12"/></literal><operator pos:line="78" pos:column="12">)<pos:position pos:line="78" pos:column="13"/></operator></expr>;<pos:position pos:line="78" pos:column="14"/></return>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

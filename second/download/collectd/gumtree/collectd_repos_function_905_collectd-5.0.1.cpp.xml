<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_905_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_handle_disk_data<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">hostname<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="56">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">cfg_disk_t<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">cfg_disk<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">na_elem_t<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">data<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">cdtime_t<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">interval<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">cdtime_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">timestamp<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">na_elem_t<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">instances<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">na_elem_t<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">instance<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">na_elem_iter_t<pos:position pos:line="7" pos:column="23"/></name></type> <name pos:line="7" pos:column="24">instance_iter<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">disk_t<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">worst_disk<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><name pos:line="8" pos:column="30">NULL<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">cfg_disk<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">==<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">NULL<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">)<pos:position pos:line="10" pos:column="31"/></operator> <operator pos:line="10" pos:column="32">||<pos:position pos:line="10" pos:column="34"/></operator> <operator pos:line="10" pos:column="35">(<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">data<pos:position pos:line="10" pos:column="40"/></name> <operator pos:line="10" pos:column="41">==<pos:position pos:line="10" pos:column="43"/></operator> <name pos:line="10" pos:column="44">NULL<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">)<pos:position pos:line="10" pos:column="49"/></operator></expr>)<pos:position pos:line="10" pos:column="50"/></condition><then pos:line="10" pos:column="50">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">EINVAL<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">)<pos:position pos:line="11" pos:column="32"/></operator></expr>;<pos:position pos:line="11" pos:column="33"/></return></block></then></if>
	
	<expr_stmt><expr><name pos:line="13" pos:column="9">timestamp<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <call><name pos:line="13" pos:column="21">cna_child_get_cdtime<pos:position pos:line="13" pos:column="41"/></name> <argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">data<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">instances<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">na_elem_child<pos:position pos:line="15" pos:column="34"/></name> <argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">data<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="42">"instances"<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">instances<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">==<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">NULL<pos:position pos:line="16" pos:column="30"/></name></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31">
	<block pos:line="17" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">ERROR<pos:position pos:line="18" pos:column="22"/></name> <argument_list pos:line="18" pos:column="23">(<argument><expr><literal type="string" pos:line="18" pos:column="24">"netapp plugin: cna_handle_disk_data: "<pos:position pos:line="18" pos:column="63"/></literal>
				<literal type="string" pos:line="19" pos:column="33">"na_elem_child (\"instances\") failed "<pos:position pos:line="19" pos:column="72"/></literal>
				<literal type="string" pos:line="20" pos:column="33">"for host %s."<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">hostname<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><operator pos:line="21" pos:column="25">-<pos:position pos:line="21" pos:column="26"/></operator><literal type="number" pos:line="21" pos:column="26">1<pos:position pos:line="21" pos:column="27"/></literal><operator pos:line="21" pos:column="27">)<pos:position pos:line="21" pos:column="28"/></operator></expr>;<pos:position pos:line="21" pos:column="29"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="24" pos:column="9">/* Iterate over all children */</comment>
	<expr_stmt><expr><name pos:line="25" pos:column="9">instance_iter<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <call><name pos:line="25" pos:column="25">na_child_iterator<pos:position pos:line="25" pos:column="42"/></name> <argument_list pos:line="25" pos:column="43">(<argument><expr><name pos:line="25" pos:column="44">instances<pos:position pos:line="25" pos:column="53"/></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt>
	<for pos:line="26" pos:column="9">for <control pos:line="26" pos:column="13">(<init><expr><name pos:line="26" pos:column="14">instance<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <call><name pos:line="26" pos:column="25">na_iterator_next<pos:position pos:line="26" pos:column="41"/></name> <argument_list pos:line="26" pos:column="42">(<argument><expr><operator pos:line="26" pos:column="43">&amp;<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="44">instance_iter<pos:position pos:line="26" pos:column="57"/></name></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="59"/></init>
			<condition><expr><name pos:line="27" pos:column="25">instance<pos:position pos:line="27" pos:column="33"/></name> <operator pos:line="27" pos:column="34">!=<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="37">NULL<pos:position pos:line="27" pos:column="41"/></name></expr>;<pos:position pos:line="27" pos:column="42"/></condition>
			<incr><expr><name pos:line="28" pos:column="25">instance<pos:position pos:line="28" pos:column="33"/></name> <operator pos:line="28" pos:column="34">=<pos:position pos:line="28" pos:column="35"/></operator> <call><name pos:line="28" pos:column="36">na_iterator_next<pos:position pos:line="28" pos:column="52"/></name><argument_list pos:line="28" pos:column="52">(<argument><expr><operator pos:line="28" pos:column="53">&amp;<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="54">instance_iter<pos:position pos:line="28" pos:column="67"/></name></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call></expr></incr>)<pos:position pos:line="28" pos:column="69"/></control>
	<block pos:line="29" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="30" pos:column="17">disk_t<pos:position pos:line="30" pos:column="23"/></name> <modifier pos:line="30" pos:column="24">*<pos:position pos:line="30" pos:column="25"/></modifier></type><name pos:line="30" pos:column="25">old_data<pos:position pos:line="30" pos:column="33"/></name></decl>;<pos:position pos:line="30" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">disk_t<pos:position pos:line="31" pos:column="23"/></name></type>  <name pos:line="31" pos:column="25">new_data<pos:position pos:line="31" pos:column="33"/></name></decl>;<pos:position pos:line="31" pos:column="34"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="33" pos:column="17">na_elem_iter_t<pos:position pos:line="33" pos:column="31"/></name></type> <name pos:line="33" pos:column="32">counter_iterator<pos:position pos:line="33" pos:column="48"/></name></decl>;<pos:position pos:line="33" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="34" pos:column="17">na_elem_t<pos:position pos:line="34" pos:column="26"/></name> <modifier pos:line="34" pos:column="27">*<pos:position pos:line="34" pos:column="28"/></modifier></type><name pos:line="34" pos:column="28">counter<pos:position pos:line="34" pos:column="35"/></name></decl>;<pos:position pos:line="34" pos:column="36"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="36" pos:column="17">memset<pos:position pos:line="36" pos:column="23"/></name> <argument_list pos:line="36" pos:column="24">(<argument><expr><operator pos:line="36" pos:column="25">&amp;<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="26">new_data<pos:position pos:line="36" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="36">0<pos:position pos:line="36" pos:column="37"/></literal></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="39">sizeof <argument_list pos:line="36" pos:column="46">(<argument><expr><name pos:line="36" pos:column="47">new_data<pos:position pos:line="36" pos:column="55"/></name></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="37" pos:column="17">new_data<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">.<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="26">timestamp<pos:position pos:line="37" pos:column="35"/></name></name> <operator pos:line="37" pos:column="36">=<pos:position pos:line="37" pos:column="37"/></operator> <name pos:line="37" pos:column="38">timestamp<pos:position pos:line="37" pos:column="47"/></name></expr>;<pos:position pos:line="37" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="38" pos:column="17">new_data<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">.<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">disk_busy_percent<pos:position pos:line="38" pos:column="43"/></name></name> <operator pos:line="38" pos:column="44">=<pos:position pos:line="38" pos:column="45"/></operator> <name pos:line="38" pos:column="46">NAN<pos:position pos:line="38" pos:column="49"/></name></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>

		<expr_stmt><expr><name pos:line="40" pos:column="17">old_data<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">=<pos:position pos:line="40" pos:column="27"/></operator> <call><name pos:line="40" pos:column="28">get_disk<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><name pos:line="40" pos:column="37">cfg_disk<pos:position pos:line="40" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="47">na_child_get_string<pos:position pos:line="40" pos:column="66"/></name> <argument_list pos:line="40" pos:column="67">(<argument><expr><name pos:line="40" pos:column="68">instance<pos:position pos:line="40" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="78">"name"<pos:position pos:line="40" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="87"/></expr_stmt>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">old_data<pos:position pos:line="41" pos:column="29"/></name> <operator pos:line="41" pos:column="30">==<pos:position pos:line="41" pos:column="32"/></operator> <name pos:line="41" pos:column="33">NULL<pos:position pos:line="41" pos:column="37"/></name></expr>)<pos:position pos:line="41" pos:column="38"/></condition><then pos:line="41" pos:column="38">
			<block type="pseudo"><continue pos:line="42" pos:column="25">continue;<pos:position pos:line="42" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="44" pos:column="17">/* Look for the "disk_busy" and "base_for_disk_busy" counters */</comment>
		<expr_stmt><expr><name pos:line="45" pos:column="17">counter_iterator<pos:position pos:line="45" pos:column="33"/></name> <operator pos:line="45" pos:column="34">=<pos:position pos:line="45" pos:column="35"/></operator> <call><name pos:line="45" pos:column="36">na_child_iterator<pos:position pos:line="45" pos:column="53"/></name><argument_list pos:line="45" pos:column="53">(<argument><expr><call><name pos:line="45" pos:column="54">na_elem_child<pos:position pos:line="45" pos:column="67"/></name><argument_list pos:line="45" pos:column="67">(<argument><expr><name pos:line="45" pos:column="68">instance<pos:position pos:line="45" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="78">"counters"<pos:position pos:line="45" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="91"/></expr_stmt>
		<for pos:line="46" pos:column="17">for <control pos:line="46" pos:column="21">(<init><expr><name pos:line="46" pos:column="22">counter<pos:position pos:line="46" pos:column="29"/></name> <operator pos:line="46" pos:column="30">=<pos:position pos:line="46" pos:column="31"/></operator> <call><name pos:line="46" pos:column="32">na_iterator_next<pos:position pos:line="46" pos:column="48"/></name><argument_list pos:line="46" pos:column="48">(<argument><expr><operator pos:line="46" pos:column="49">&amp;<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="50">counter_iterator<pos:position pos:line="46" pos:column="66"/></name></expr></argument>)<pos:position pos:line="46" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="68"/></init>
				<condition><expr><name pos:line="47" pos:column="33">counter<pos:position pos:line="47" pos:column="40"/></name> <operator pos:line="47" pos:column="41">!=<pos:position pos:line="47" pos:column="43"/></operator> <name pos:line="47" pos:column="44">NULL<pos:position pos:line="47" pos:column="48"/></name></expr>;<pos:position pos:line="47" pos:column="49"/></condition>
				<incr><expr><name pos:line="48" pos:column="33">counter<pos:position pos:line="48" pos:column="40"/></name> <operator pos:line="48" pos:column="41">=<pos:position pos:line="48" pos:column="42"/></operator> <call><name pos:line="48" pos:column="43">na_iterator_next<pos:position pos:line="48" pos:column="59"/></name><argument_list pos:line="48" pos:column="59">(<argument><expr><operator pos:line="48" pos:column="60">&amp;<pos:position pos:line="48" pos:column="65"/></operator><name pos:line="48" pos:column="61">counter_iterator<pos:position pos:line="48" pos:column="77"/></name></expr></argument>)<pos:position pos:line="48" pos:column="78"/></argument_list></call></expr></incr>)<pos:position pos:line="48" pos:column="79"/></control>
		<block pos:line="49" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="50" pos:column="25">const<pos:position pos:line="50" pos:column="30"/></specifier> <name pos:line="50" pos:column="31">char<pos:position pos:line="50" pos:column="35"/></name> <modifier pos:line="50" pos:column="36">*<pos:position pos:line="50" pos:column="37"/></modifier></type><name pos:line="50" pos:column="37">name<pos:position pos:line="50" pos:column="41"/></name></decl>;<pos:position pos:line="50" pos:column="42"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="51" pos:column="25">uint64_t<pos:position pos:line="51" pos:column="33"/></name></type> <name pos:line="51" pos:column="34">value<pos:position pos:line="51" pos:column="39"/></name></decl>;<pos:position pos:line="51" pos:column="40"/></decl_stmt>

			<expr_stmt><expr><name pos:line="53" pos:column="25">name<pos:position pos:line="53" pos:column="29"/></name> <operator pos:line="53" pos:column="30">=<pos:position pos:line="53" pos:column="31"/></operator> <call><name pos:line="53" pos:column="32">na_child_get_string<pos:position pos:line="53" pos:column="51"/></name><argument_list pos:line="53" pos:column="51">(<argument><expr><name pos:line="53" pos:column="52">counter<pos:position pos:line="53" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="61">"name"<pos:position pos:line="53" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="69"/></expr_stmt>
			<if pos:line="54" pos:column="25">if <condition pos:line="54" pos:column="28">(<expr><name pos:line="54" pos:column="29">name<pos:position pos:line="54" pos:column="33"/></name> <operator pos:line="54" pos:column="34">==<pos:position pos:line="54" pos:column="36"/></operator> <name pos:line="54" pos:column="37">NULL<pos:position pos:line="54" pos:column="41"/></name></expr>)<pos:position pos:line="54" pos:column="42"/></condition><then pos:line="54" pos:column="42">
				<block type="pseudo"><continue pos:line="55" pos:column="33">continue;<pos:position pos:line="55" pos:column="42"/></continue></block></then></if>

			<expr_stmt><expr><name pos:line="57" pos:column="25">value<pos:position pos:line="57" pos:column="30"/></name> <operator pos:line="57" pos:column="31">=<pos:position pos:line="57" pos:column="32"/></operator> <call><name pos:line="57" pos:column="33">na_child_get_uint64<pos:position pos:line="57" pos:column="52"/></name><argument_list pos:line="57" pos:column="52">(<argument><expr><name pos:line="57" pos:column="53">counter<pos:position pos:line="57" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="62">"value"<pos:position pos:line="57" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="71">UINT64_MAX<pos:position pos:line="57" pos:column="81"/></name></expr></argument>)<pos:position pos:line="57" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="83"/></expr_stmt>
			<if pos:line="58" pos:column="25">if <condition pos:line="58" pos:column="28">(<expr><name pos:line="58" pos:column="29">value<pos:position pos:line="58" pos:column="34"/></name> <operator pos:line="58" pos:column="35">==<pos:position pos:line="58" pos:column="37"/></operator> <name pos:line="58" pos:column="38">UINT64_MAX<pos:position pos:line="58" pos:column="48"/></name></expr>)<pos:position pos:line="58" pos:column="49"/></condition><then pos:line="58" pos:column="49">
				<block type="pseudo"><continue pos:line="59" pos:column="33">continue;<pos:position pos:line="59" pos:column="42"/></continue></block></then></if>

			<if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><call><name pos:line="61" pos:column="29">strcmp<pos:position pos:line="61" pos:column="35"/></name><argument_list pos:line="61" pos:column="35">(<argument><expr><name pos:line="61" pos:column="36">name<pos:position pos:line="61" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="42">"disk_busy"<pos:position pos:line="61" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></call> <operator pos:line="61" pos:column="55">==<pos:position pos:line="61" pos:column="57"/></operator> <literal type="number" pos:line="61" pos:column="58">0<pos:position pos:line="61" pos:column="59"/></literal></expr>)<pos:position pos:line="61" pos:column="60"/></condition><then pos:line="61" pos:column="60">
			<block pos:line="62" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="63" pos:column="33">new_data<pos:position pos:line="63" pos:column="41"/></name><operator pos:line="63" pos:column="41">.<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="42">disk_busy<pos:position pos:line="63" pos:column="51"/></name></name> <operator pos:line="63" pos:column="52">=<pos:position pos:line="63" pos:column="53"/></operator> <name pos:line="63" pos:column="54">value<pos:position pos:line="63" pos:column="59"/></name></expr>;<pos:position pos:line="63" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="64" pos:column="33">new_data<pos:position pos:line="64" pos:column="41"/></name><operator pos:line="64" pos:column="41">.<pos:position pos:line="64" pos:column="42"/></operator><name pos:line="64" pos:column="42">flags<pos:position pos:line="64" pos:column="47"/></name></name> <operator pos:line="64" pos:column="48">|=<pos:position pos:line="64" pos:column="50"/></operator> <name pos:line="64" pos:column="51">HAVE_DISK_BUSY<pos:position pos:line="64" pos:column="65"/></name></expr>;<pos:position pos:line="64" pos:column="66"/></expr_stmt>
			}<pos:position pos:line="65" pos:column="26"/></block></then>
			<elseif pos:line="66" pos:column="25">else <if pos:line="66" pos:column="30">if <condition pos:line="66" pos:column="33">(<expr><call><name pos:line="66" pos:column="34">strcmp<pos:position pos:line="66" pos:column="40"/></name><argument_list pos:line="66" pos:column="40">(<argument><expr><name pos:line="66" pos:column="41">name<pos:position pos:line="66" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="47">"base_for_disk_busy"<pos:position pos:line="66" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="68"/></argument_list></call> <operator pos:line="66" pos:column="69">==<pos:position pos:line="66" pos:column="71"/></operator> <literal type="number" pos:line="66" pos:column="72">0<pos:position pos:line="66" pos:column="73"/></literal></expr>)<pos:position pos:line="66" pos:column="74"/></condition><then pos:line="66" pos:column="74">
			<block pos:line="67" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="68" pos:column="33">new_data<pos:position pos:line="68" pos:column="41"/></name><operator pos:line="68" pos:column="41">.<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="42">base_for_disk_busy<pos:position pos:line="68" pos:column="60"/></name></name> <operator pos:line="68" pos:column="61">=<pos:position pos:line="68" pos:column="62"/></operator> <name pos:line="68" pos:column="63">value<pos:position pos:line="68" pos:column="68"/></name></expr>;<pos:position pos:line="68" pos:column="69"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="69" pos:column="33">new_data<pos:position pos:line="69" pos:column="41"/></name><operator pos:line="69" pos:column="41">.<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="42">flags<pos:position pos:line="69" pos:column="47"/></name></name> <operator pos:line="69" pos:column="48">|=<pos:position pos:line="69" pos:column="50"/></operator> <name pos:line="69" pos:column="51">HAVE_DISK_BASE<pos:position pos:line="69" pos:column="65"/></name></expr>;<pos:position pos:line="69" pos:column="66"/></expr_stmt>
			}<pos:position pos:line="70" pos:column="26"/></block></then></if></elseif>
			<else pos:line="71" pos:column="25">else
			<block pos:line="72" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="73" pos:column="33">DEBUG<pos:position pos:line="73" pos:column="38"/></name> <argument_list pos:line="73" pos:column="39">(<argument><expr><literal type="string" pos:line="73" pos:column="40">"netapp plugin: cna_handle_disk_data: "<pos:position pos:line="73" pos:column="79"/></literal>
						<literal type="string" pos:line="74" pos:column="49">"Counter not handled: %s = %"<pos:position pos:line="74" pos:column="78"/></literal><name pos:line="74" pos:column="78">PRIu64<pos:position pos:line="74" pos:column="84"/></name></expr></argument>,
						<argument><expr><name pos:line="75" pos:column="49">name<pos:position pos:line="75" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="55">value<pos:position pos:line="75" pos:column="60"/></name></expr></argument>)<pos:position pos:line="75" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="62"/></expr_stmt>
			}<pos:position pos:line="76" pos:column="26"/></block></else></if>
		}<pos:position pos:line="77" pos:column="18"/></block></for>

		<comment type="block" pos:line="79" pos:column="17">/* If all required counters are available and did not just wrap around,
		 * calculate the busy percentage. Otherwise, the value is initialized to
		 * NAN at the top of the for-loop. */</comment>
		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><call><name pos:line="82" pos:column="21">HAS_ALL_FLAGS<pos:position pos:line="82" pos:column="34"/></name> <argument_list pos:line="82" pos:column="35">(<argument><expr><name><name pos:line="82" pos:column="36">old_data<pos:position pos:line="82" pos:column="44"/></name><operator pos:line="82" pos:column="44">-&gt;<pos:position pos:line="82" pos:column="49"/></operator><name pos:line="82" pos:column="46">flags<pos:position pos:line="82" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="53">HAVE_DISK_BUSY<pos:position pos:line="82" pos:column="67"/></name> <operator pos:line="82" pos:column="68">|<pos:position pos:line="82" pos:column="69"/></operator> <name pos:line="82" pos:column="70">HAVE_DISK_BASE<pos:position pos:line="82" pos:column="84"/></name></expr></argument>)<pos:position pos:line="82" pos:column="85"/></argument_list></call>
				<operator pos:line="83" pos:column="33">&amp;&amp;<pos:position pos:line="83" pos:column="43"/></operator> <call><name pos:line="83" pos:column="36">HAS_ALL_FLAGS<pos:position pos:line="83" pos:column="49"/></name> <argument_list pos:line="83" pos:column="50">(<argument><expr><name><name pos:line="83" pos:column="51">new_data<pos:position pos:line="83" pos:column="59"/></name><operator pos:line="83" pos:column="59">.<pos:position pos:line="83" pos:column="60"/></operator><name pos:line="83" pos:column="60">flags<pos:position pos:line="83" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="67">HAVE_DISK_BUSY<pos:position pos:line="83" pos:column="81"/></name> <operator pos:line="83" pos:column="82">|<pos:position pos:line="83" pos:column="83"/></operator> <name pos:line="83" pos:column="84">HAVE_DISK_BASE<pos:position pos:line="83" pos:column="98"/></name></expr></argument>)<pos:position pos:line="83" pos:column="99"/></argument_list></call>
				<operator pos:line="84" pos:column="33">&amp;&amp;<pos:position pos:line="84" pos:column="43"/></operator> <operator pos:line="84" pos:column="36">(<pos:position pos:line="84" pos:column="37"/></operator><name><name pos:line="84" pos:column="37">new_data<pos:position pos:line="84" pos:column="45"/></name><operator pos:line="84" pos:column="45">.<pos:position pos:line="84" pos:column="46"/></operator><name pos:line="84" pos:column="46">disk_busy<pos:position pos:line="84" pos:column="55"/></name></name> <operator pos:line="84" pos:column="56">&gt;=<pos:position pos:line="84" pos:column="61"/></operator> <name><name pos:line="84" pos:column="59">old_data<pos:position pos:line="84" pos:column="67"/></name><operator pos:line="84" pos:column="67">-&gt;<pos:position pos:line="84" pos:column="72"/></operator><name pos:line="84" pos:column="69">disk_busy<pos:position pos:line="84" pos:column="78"/></name></name><operator pos:line="84" pos:column="78">)<pos:position pos:line="84" pos:column="79"/></operator>
				<operator pos:line="85" pos:column="33">&amp;&amp;<pos:position pos:line="85" pos:column="43"/></operator> <operator pos:line="85" pos:column="36">(<pos:position pos:line="85" pos:column="37"/></operator><name><name pos:line="85" pos:column="37">new_data<pos:position pos:line="85" pos:column="45"/></name><operator pos:line="85" pos:column="45">.<pos:position pos:line="85" pos:column="46"/></operator><name pos:line="85" pos:column="46">base_for_disk_busy<pos:position pos:line="85" pos:column="64"/></name></name> <operator pos:line="85" pos:column="65">&gt;<pos:position pos:line="85" pos:column="69"/></operator> <name><name pos:line="85" pos:column="67">old_data<pos:position pos:line="85" pos:column="75"/></name><operator pos:line="85" pos:column="75">-&gt;<pos:position pos:line="85" pos:column="80"/></operator><name pos:line="85" pos:column="77">base_for_disk_busy<pos:position pos:line="85" pos:column="95"/></name></name><operator pos:line="85" pos:column="95">)<pos:position pos:line="85" pos:column="96"/></operator></expr>)<pos:position pos:line="85" pos:column="97"/></condition><then pos:line="85" pos:column="97">
		<block pos:line="86" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="87" pos:column="25">uint64_t<pos:position pos:line="87" pos:column="33"/></name></type> <name pos:line="87" pos:column="34">busy_diff<pos:position pos:line="87" pos:column="43"/></name></decl>;<pos:position pos:line="87" pos:column="44"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="88" pos:column="25">uint64_t<pos:position pos:line="88" pos:column="33"/></name></type> <name pos:line="88" pos:column="34">base_diff<pos:position pos:line="88" pos:column="43"/></name></decl>;<pos:position pos:line="88" pos:column="44"/></decl_stmt>

			<expr_stmt><expr><name pos:line="90" pos:column="25">busy_diff<pos:position pos:line="90" pos:column="34"/></name> <operator pos:line="90" pos:column="35">=<pos:position pos:line="90" pos:column="36"/></operator> <name><name pos:line="90" pos:column="37">new_data<pos:position pos:line="90" pos:column="45"/></name><operator pos:line="90" pos:column="45">.<pos:position pos:line="90" pos:column="46"/></operator><name pos:line="90" pos:column="46">disk_busy<pos:position pos:line="90" pos:column="55"/></name></name> <operator pos:line="90" pos:column="56">-<pos:position pos:line="90" pos:column="57"/></operator> <name><name pos:line="90" pos:column="58">old_data<pos:position pos:line="90" pos:column="66"/></name><operator pos:line="90" pos:column="66">-&gt;<pos:position pos:line="90" pos:column="71"/></operator><name pos:line="90" pos:column="68">disk_busy<pos:position pos:line="90" pos:column="77"/></name></name></expr>;<pos:position pos:line="90" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><name pos:line="91" pos:column="25">base_diff<pos:position pos:line="91" pos:column="34"/></name> <operator pos:line="91" pos:column="35">=<pos:position pos:line="91" pos:column="36"/></operator> <name><name pos:line="91" pos:column="37">new_data<pos:position pos:line="91" pos:column="45"/></name><operator pos:line="91" pos:column="45">.<pos:position pos:line="91" pos:column="46"/></operator><name pos:line="91" pos:column="46">base_for_disk_busy<pos:position pos:line="91" pos:column="64"/></name></name> <operator pos:line="91" pos:column="65">-<pos:position pos:line="91" pos:column="66"/></operator> <name><name pos:line="91" pos:column="67">old_data<pos:position pos:line="91" pos:column="75"/></name><operator pos:line="91" pos:column="75">-&gt;<pos:position pos:line="91" pos:column="80"/></operator><name pos:line="91" pos:column="77">base_for_disk_busy<pos:position pos:line="91" pos:column="95"/></name></name></expr>;<pos:position pos:line="91" pos:column="96"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="93" pos:column="25">new_data<pos:position pos:line="93" pos:column="33"/></name><operator pos:line="93" pos:column="33">.<pos:position pos:line="93" pos:column="34"/></operator><name pos:line="93" pos:column="34">disk_busy_percent<pos:position pos:line="93" pos:column="51"/></name></name> <operator pos:line="93" pos:column="52">=<pos:position pos:line="93" pos:column="53"/></operator> <literal type="number" pos:line="93" pos:column="54">100.0<pos:position pos:line="93" pos:column="59"/></literal>
				<operator pos:line="94" pos:column="33">*<pos:position pos:line="94" pos:column="34"/></operator> <operator pos:line="94" pos:column="35">(<pos:position pos:line="94" pos:column="36"/></operator><operator pos:line="94" pos:column="36">(<pos:position pos:line="94" pos:column="37"/></operator><name pos:line="94" pos:column="37">gauge_t<pos:position pos:line="94" pos:column="44"/></name><operator pos:line="94" pos:column="44">)<pos:position pos:line="94" pos:column="45"/></operator> <name pos:line="94" pos:column="46">busy_diff<pos:position pos:line="94" pos:column="55"/></name><operator pos:line="94" pos:column="55">)<pos:position pos:line="94" pos:column="56"/></operator> <operator pos:line="94" pos:column="57">/<pos:position pos:line="94" pos:column="58"/></operator> <operator pos:line="94" pos:column="59">(<pos:position pos:line="94" pos:column="60"/></operator><operator pos:line="94" pos:column="60">(<pos:position pos:line="94" pos:column="61"/></operator><name pos:line="94" pos:column="61">gauge_t<pos:position pos:line="94" pos:column="68"/></name><operator pos:line="94" pos:column="68">)<pos:position pos:line="94" pos:column="69"/></operator> <name pos:line="94" pos:column="70">base_diff<pos:position pos:line="94" pos:column="79"/></name><operator pos:line="94" pos:column="79">)<pos:position pos:line="94" pos:column="80"/></operator></expr>;<pos:position pos:line="94" pos:column="81"/></expr_stmt>
		}<pos:position pos:line="95" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="97" pos:column="17">/* Clear HAVE_* flags */</comment>
		<expr_stmt><expr><name><name pos:line="98" pos:column="17">old_data<pos:position pos:line="98" pos:column="25"/></name><operator pos:line="98" pos:column="25">-&gt;<pos:position pos:line="98" pos:column="30"/></operator><name pos:line="98" pos:column="27">flags<pos:position pos:line="98" pos:column="32"/></name></name> <operator pos:line="98" pos:column="33">&amp;=<pos:position pos:line="98" pos:column="39"/></operator> <operator pos:line="98" pos:column="36">~<pos:position pos:line="98" pos:column="37"/></operator><name pos:line="98" pos:column="37">HAVE_DISK_ALL<pos:position pos:line="98" pos:column="50"/></name></expr>;<pos:position pos:line="98" pos:column="51"/></expr_stmt>

		<comment type="block" pos:line="100" pos:column="17">/* Copy data */</comment>
		<expr_stmt><expr><name><name pos:line="101" pos:column="17">old_data<pos:position pos:line="101" pos:column="25"/></name><operator pos:line="101" pos:column="25">-&gt;<pos:position pos:line="101" pos:column="30"/></operator><name pos:line="101" pos:column="27">timestamp<pos:position pos:line="101" pos:column="36"/></name></name> <operator pos:line="101" pos:column="37">=<pos:position pos:line="101" pos:column="38"/></operator> <name><name pos:line="101" pos:column="39">new_data<pos:position pos:line="101" pos:column="47"/></name><operator pos:line="101" pos:column="47">.<pos:position pos:line="101" pos:column="48"/></operator><name pos:line="101" pos:column="48">timestamp<pos:position pos:line="101" pos:column="57"/></name></name></expr>;<pos:position pos:line="101" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="102" pos:column="17">old_data<pos:position pos:line="102" pos:column="25"/></name><operator pos:line="102" pos:column="25">-&gt;<pos:position pos:line="102" pos:column="30"/></operator><name pos:line="102" pos:column="27">disk_busy<pos:position pos:line="102" pos:column="36"/></name></name> <operator pos:line="102" pos:column="37">=<pos:position pos:line="102" pos:column="38"/></operator> <name><name pos:line="102" pos:column="39">new_data<pos:position pos:line="102" pos:column="47"/></name><operator pos:line="102" pos:column="47">.<pos:position pos:line="102" pos:column="48"/></operator><name pos:line="102" pos:column="48">disk_busy<pos:position pos:line="102" pos:column="57"/></name></name></expr>;<pos:position pos:line="102" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="103" pos:column="17">old_data<pos:position pos:line="103" pos:column="25"/></name><operator pos:line="103" pos:column="25">-&gt;<pos:position pos:line="103" pos:column="30"/></operator><name pos:line="103" pos:column="27">base_for_disk_busy<pos:position pos:line="103" pos:column="45"/></name></name> <operator pos:line="103" pos:column="46">=<pos:position pos:line="103" pos:column="47"/></operator> <name><name pos:line="103" pos:column="48">new_data<pos:position pos:line="103" pos:column="56"/></name><operator pos:line="103" pos:column="56">.<pos:position pos:line="103" pos:column="57"/></operator><name pos:line="103" pos:column="57">base_for_disk_busy<pos:position pos:line="103" pos:column="75"/></name></name></expr>;<pos:position pos:line="103" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="104" pos:column="17">old_data<pos:position pos:line="104" pos:column="25"/></name><operator pos:line="104" pos:column="25">-&gt;<pos:position pos:line="104" pos:column="30"/></operator><name pos:line="104" pos:column="27">disk_busy_percent<pos:position pos:line="104" pos:column="44"/></name></name> <operator pos:line="104" pos:column="45">=<pos:position pos:line="104" pos:column="46"/></operator> <name><name pos:line="104" pos:column="47">new_data<pos:position pos:line="104" pos:column="55"/></name><operator pos:line="104" pos:column="55">.<pos:position pos:line="104" pos:column="56"/></operator><name pos:line="104" pos:column="56">disk_busy_percent<pos:position pos:line="104" pos:column="73"/></name></name></expr>;<pos:position pos:line="104" pos:column="74"/></expr_stmt>

		<comment type="block" pos:line="106" pos:column="17">/* Copy flags */</comment>
		<expr_stmt><expr><name><name pos:line="107" pos:column="17">old_data<pos:position pos:line="107" pos:column="25"/></name><operator pos:line="107" pos:column="25">-&gt;<pos:position pos:line="107" pos:column="30"/></operator><name pos:line="107" pos:column="27">flags<pos:position pos:line="107" pos:column="32"/></name></name> <operator pos:line="107" pos:column="33">|=<pos:position pos:line="107" pos:column="35"/></operator> <operator pos:line="107" pos:column="36">(<pos:position pos:line="107" pos:column="37"/></operator><name><name pos:line="107" pos:column="37">new_data<pos:position pos:line="107" pos:column="45"/></name><operator pos:line="107" pos:column="45">.<pos:position pos:line="107" pos:column="46"/></operator><name pos:line="107" pos:column="46">flags<pos:position pos:line="107" pos:column="51"/></name></name> <operator pos:line="107" pos:column="52">&amp;<pos:position pos:line="107" pos:column="57"/></operator> <name pos:line="107" pos:column="54">HAVE_DISK_ALL<pos:position pos:line="107" pos:column="67"/></name><operator pos:line="107" pos:column="67">)<pos:position pos:line="107" pos:column="68"/></operator></expr>;<pos:position pos:line="107" pos:column="69"/></expr_stmt>

		<if pos:line="109" pos:column="17">if <condition pos:line="109" pos:column="20">(<expr><operator pos:line="109" pos:column="21">(<pos:position pos:line="109" pos:column="22"/></operator><name pos:line="109" pos:column="22">worst_disk<pos:position pos:line="109" pos:column="32"/></name> <operator pos:line="109" pos:column="33">==<pos:position pos:line="109" pos:column="35"/></operator> <name pos:line="109" pos:column="36">NULL<pos:position pos:line="109" pos:column="40"/></name><operator pos:line="109" pos:column="40">)<pos:position pos:line="109" pos:column="41"/></operator>
				<operator pos:line="110" pos:column="33">||<pos:position pos:line="110" pos:column="35"/></operator> <operator pos:line="110" pos:column="36">(<pos:position pos:line="110" pos:column="37"/></operator><name><name pos:line="110" pos:column="37">worst_disk<pos:position pos:line="110" pos:column="47"/></name><operator pos:line="110" pos:column="47">-&gt;<pos:position pos:line="110" pos:column="52"/></operator><name pos:line="110" pos:column="49">disk_busy_percent<pos:position pos:line="110" pos:column="66"/></name></name> <operator pos:line="110" pos:column="67">&lt;<pos:position pos:line="110" pos:column="71"/></operator> <name><name pos:line="110" pos:column="69">old_data<pos:position pos:line="110" pos:column="77"/></name><operator pos:line="110" pos:column="77">-&gt;<pos:position pos:line="110" pos:column="82"/></operator><name pos:line="110" pos:column="79">disk_busy_percent<pos:position pos:line="110" pos:column="96"/></name></name><operator pos:line="110" pos:column="96">)<pos:position pos:line="110" pos:column="97"/></operator></expr>)<pos:position pos:line="110" pos:column="98"/></condition><then pos:line="110" pos:column="98">
			<block type="pseudo"><expr_stmt><expr><name pos:line="111" pos:column="25">worst_disk<pos:position pos:line="111" pos:column="35"/></name> <operator pos:line="111" pos:column="36">=<pos:position pos:line="111" pos:column="37"/></operator> <name pos:line="111" pos:column="38">old_data<pos:position pos:line="111" pos:column="46"/></name></expr>;<pos:position pos:line="111" pos:column="47"/></expr_stmt></block></then></if>
	}<pos:position pos:line="112" pos:column="10"/></block></for> <comment type="block" pos:line="112" pos:column="11">/* for (all disks) */</comment>

	<if pos:line="114" pos:column="9">if <condition pos:line="114" pos:column="12">(<expr><operator pos:line="114" pos:column="13">(<pos:position pos:line="114" pos:column="14"/></operator><name><name pos:line="114" pos:column="14">cfg_disk<pos:position pos:line="114" pos:column="22"/></name><operator pos:line="114" pos:column="22">-&gt;<pos:position pos:line="114" pos:column="27"/></operator><name pos:line="114" pos:column="24">flags<pos:position pos:line="114" pos:column="29"/></name></name> <operator pos:line="114" pos:column="30">&amp;<pos:position pos:line="114" pos:column="35"/></operator> <name pos:line="114" pos:column="32">CFG_DISK_BUSIEST<pos:position pos:line="114" pos:column="48"/></name><operator pos:line="114" pos:column="48">)<pos:position pos:line="114" pos:column="49"/></operator> <operator pos:line="114" pos:column="50">&amp;&amp;<pos:position pos:line="114" pos:column="60"/></operator> <operator pos:line="114" pos:column="53">(<pos:position pos:line="114" pos:column="54"/></operator><name pos:line="114" pos:column="54">worst_disk<pos:position pos:line="114" pos:column="64"/></name> <operator pos:line="114" pos:column="65">!=<pos:position pos:line="114" pos:column="67"/></operator> <name pos:line="114" pos:column="68">NULL<pos:position pos:line="114" pos:column="72"/></name><operator pos:line="114" pos:column="72">)<pos:position pos:line="114" pos:column="73"/></operator></expr>)<pos:position pos:line="114" pos:column="74"/></condition><then pos:line="114" pos:column="74">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="17">submit_double<pos:position pos:line="115" pos:column="30"/></name> <argument_list pos:line="115" pos:column="31">(<argument><expr><name pos:line="115" pos:column="32">hostname<pos:position pos:line="115" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="42">"system"<pos:position pos:line="115" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="52">"percent"<pos:position pos:line="115" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="63">"disk_busy"<pos:position pos:line="115" pos:column="74"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="116" pos:column="33">worst_disk<pos:position pos:line="116" pos:column="43"/></name><operator pos:line="116" pos:column="43">-&gt;<pos:position pos:line="116" pos:column="48"/></operator><name pos:line="116" pos:column="45">disk_busy_percent<pos:position pos:line="116" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="64">timestamp<pos:position pos:line="116" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="75">interval<pos:position pos:line="116" pos:column="83"/></name></expr></argument>)<pos:position pos:line="116" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="85"/></expr_stmt></block></then></if>

	<return pos:line="118" pos:column="9">return <expr><operator pos:line="118" pos:column="16">(<pos:position pos:line="118" pos:column="17"/></operator><literal type="number" pos:line="118" pos:column="17">0<pos:position pos:line="118" pos:column="18"/></literal><operator pos:line="118" pos:column="18">)<pos:position pos:line="118" pos:column="19"/></operator></expr>;<pos:position pos:line="118" pos:column="20"/></return>
}<pos:position pos:line="119" pos:column="2"/></block></function></unit>

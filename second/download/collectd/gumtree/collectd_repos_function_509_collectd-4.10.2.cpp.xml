<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_509_collectd-4.10.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ps_read_process<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">pid<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">procstat_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ps<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">state<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type>  <name><name pos:line="3" pos:column="15">filename<pos:position pos:line="3" pos:column="23"/></name><index pos:line="3" pos:column="23">[<expr><literal type="number" pos:line="3" pos:column="24">64<pos:position pos:line="3" pos:column="26"/></literal></expr>]<pos:position pos:line="3" pos:column="27"/></index></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type>  <name><name pos:line="4" pos:column="15">buffer<pos:position pos:line="4" pos:column="21"/></name><index pos:line="4" pos:column="21">[<expr><literal type="number" pos:line="4" pos:column="22">1024<pos:position pos:line="4" pos:column="26"/></literal></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name><name pos:line="6" pos:column="15">fields<pos:position pos:line="6" pos:column="21"/></name><index pos:line="6" pos:column="21">[<expr><literal type="number" pos:line="6" pos:column="22">64<pos:position pos:line="6" pos:column="24"/></literal></expr>]<pos:position pos:line="6" pos:column="25"/></index></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type>  <name pos:line="7" pos:column="15">fields_len<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type>   <name pos:line="9" pos:column="15">i<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type>   <name pos:line="11" pos:column="15">ppid<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type>   <name pos:line="12" pos:column="15">name_len<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="14" pos:column="9">long<pos:position pos:line="14" pos:column="13"/></name> <name pos:line="14" pos:column="14">long<pos:position pos:line="14" pos:column="18"/></name> <name pos:line="14" pos:column="19">unsigned<pos:position pos:line="14" pos:column="27"/></name></type> <name pos:line="14" pos:column="28">cpu_user_counter<pos:position pos:line="14" pos:column="44"/></name></decl>;<pos:position pos:line="14" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">long<pos:position pos:line="15" pos:column="13"/></name> <name pos:line="15" pos:column="14">long<pos:position pos:line="15" pos:column="18"/></name> <name pos:line="15" pos:column="19">unsigned<pos:position pos:line="15" pos:column="27"/></name></type> <name pos:line="15" pos:column="28">cpu_system_counter<pos:position pos:line="15" pos:column="46"/></name></decl>;<pos:position pos:line="15" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">long<pos:position pos:line="16" pos:column="13"/></name> <name pos:line="16" pos:column="14">long<pos:position pos:line="16" pos:column="18"/></name> <name pos:line="16" pos:column="19">unsigned<pos:position pos:line="16" pos:column="27"/></name></type> <name pos:line="16" pos:column="28">vmem_size<pos:position pos:line="16" pos:column="37"/></name></decl>;<pos:position pos:line="16" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">long<pos:position pos:line="17" pos:column="13"/></name> <name pos:line="17" pos:column="14">long<pos:position pos:line="17" pos:column="18"/></name> <name pos:line="17" pos:column="19">unsigned<pos:position pos:line="17" pos:column="27"/></name></type> <name pos:line="17" pos:column="28">vmem_rss<pos:position pos:line="17" pos:column="36"/></name></decl>;<pos:position pos:line="17" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">long<pos:position pos:line="18" pos:column="13"/></name> <name pos:line="18" pos:column="14">long<pos:position pos:line="18" pos:column="18"/></name> <name pos:line="18" pos:column="19">unsigned<pos:position pos:line="18" pos:column="27"/></name></type> <name pos:line="18" pos:column="28">stack_size<pos:position pos:line="18" pos:column="38"/></name></decl>;<pos:position pos:line="18" pos:column="39"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">memset<pos:position pos:line="20" pos:column="15"/></name> <argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">ps<pos:position pos:line="20" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="21">0<pos:position pos:line="20" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="24">sizeof <argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">procstat_t<pos:position pos:line="20" pos:column="42"/></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">ssnprintf<pos:position pos:line="22" pos:column="18"/></name> <argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">filename<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="30">sizeof <argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">filename<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="49">"/proc/%i/stat"<pos:position pos:line="22" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="66">pid<pos:position pos:line="22" pos:column="69"/></name></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="71"/></expr_stmt>

	<expr_stmt><expr><name pos:line="24" pos:column="9">i<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <call><name pos:line="24" pos:column="13">read_file_contents<pos:position pos:line="24" pos:column="31"/></name> <argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">filename<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">buffer<pos:position pos:line="24" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="51">sizeof<argument_list pos:line="24" pos:column="57">(<argument><expr><name pos:line="24" pos:column="58">buffer<pos:position pos:line="24" pos:column="64"/></name></expr></argument>)<pos:position pos:line="24" pos:column="65"/></argument_list></sizeof> <operator pos:line="24" pos:column="66">-<pos:position pos:line="24" pos:column="67"/></operator> <literal type="number" pos:line="24" pos:column="68">1<pos:position pos:line="24" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="71"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">i<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">&lt;=<pos:position pos:line="25" pos:column="20"/></operator> <literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr>)<pos:position pos:line="25" pos:column="20"/></condition><then pos:line="25" pos:column="20">
		<block type="pseudo"><return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><operator pos:line="26" pos:column="25">-<pos:position pos:line="26" pos:column="26"/></operator><literal type="number" pos:line="26" pos:column="26">1<pos:position pos:line="26" pos:column="27"/></literal><operator pos:line="26" pos:column="27">)<pos:position pos:line="26" pos:column="28"/></operator></expr>;<pos:position pos:line="26" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">buffer<pos:position pos:line="27" pos:column="15"/></name><index pos:line="27" pos:column="15">[<expr><name pos:line="27" pos:column="16">i<pos:position pos:line="27" pos:column="17"/></name></expr>]<pos:position pos:line="27" pos:column="18"/></index></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <literal type="number" pos:line="27" pos:column="21">0<pos:position pos:line="27" pos:column="22"/></literal></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><name pos:line="29" pos:column="9">fields_len<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <call><name pos:line="29" pos:column="22">strsplit<pos:position pos:line="29" pos:column="30"/></name> <argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">buffer<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="40">fields<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="48">STATIC_ARRAY_SIZE<pos:position pos:line="29" pos:column="65"/></name> <argument_list pos:line="29" pos:column="66">(<argument><expr><name pos:line="29" pos:column="67">fields<pos:position pos:line="29" pos:column="73"/></name></expr></argument>)<pos:position pos:line="29" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="76"/></expr_stmt>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">fields_len<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">&lt;<pos:position pos:line="30" pos:column="28"/></operator> <literal type="number" pos:line="30" pos:column="26">24<pos:position pos:line="30" pos:column="28"/></literal></expr>)<pos:position pos:line="30" pos:column="29"/></condition><then pos:line="30" pos:column="29">
	<block pos:line="31" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">DEBUG<pos:position pos:line="32" pos:column="22"/></name> <argument_list pos:line="32" pos:column="23">(<argument><expr><literal type="string" pos:line="32" pos:column="24">"processes plugin: ps_read_process (pid = %i):"<pos:position pos:line="32" pos:column="71"/></literal>
				<literal type="string" pos:line="33" pos:column="33">" `%s' has only %i fields.."<pos:position pos:line="33" pos:column="61"/></literal></expr></argument>,
				<argument><expr><operator pos:line="34" pos:column="33">(<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="34">int<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">)<pos:position pos:line="34" pos:column="38"/></operator> <name pos:line="34" pos:column="39">pid<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="44">filename<pos:position pos:line="34" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="54">fields_len<pos:position pos:line="34" pos:column="64"/></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="66"/></expr_stmt>
		<return pos:line="35" pos:column="17">return <expr><operator pos:line="35" pos:column="24">(<pos:position pos:line="35" pos:column="25"/></operator><operator pos:line="35" pos:column="25">-<pos:position pos:line="35" pos:column="26"/></operator><literal type="number" pos:line="35" pos:column="26">1<pos:position pos:line="35" pos:column="27"/></literal><operator pos:line="35" pos:column="27">)<pos:position pos:line="35" pos:column="28"/></operator></expr>;<pos:position pos:line="35" pos:column="29"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="38" pos:column="9">/* copy the name, strip brackets in the process */</comment>
	<expr_stmt><expr><name pos:line="39" pos:column="9">name_len<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <call><name pos:line="39" pos:column="20">strlen<pos:position pos:line="39" pos:column="26"/></name> <argument_list pos:line="39" pos:column="27">(<argument><expr><name><name pos:line="39" pos:column="28">fields<pos:position pos:line="39" pos:column="34"/></name><index pos:line="39" pos:column="34">[<expr><literal type="number" pos:line="39" pos:column="35">1<pos:position pos:line="39" pos:column="36"/></literal></expr>]<pos:position pos:line="39" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="39" pos:column="38"/></argument_list></call> <operator pos:line="39" pos:column="39">-<pos:position pos:line="39" pos:column="40"/></operator> <literal type="number" pos:line="39" pos:column="41">2<pos:position pos:line="39" pos:column="42"/></literal></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">(<pos:position pos:line="40" pos:column="14"/></operator><name><name pos:line="40" pos:column="14">fields<pos:position pos:line="40" pos:column="20"/></name><index pos:line="40" pos:column="20">[<expr><literal type="number" pos:line="40" pos:column="21">1<pos:position pos:line="40" pos:column="22"/></literal></expr>]<pos:position pos:line="40" pos:column="23"/></index><index pos:line="40" pos:column="23">[<expr><literal type="number" pos:line="40" pos:column="24">0<pos:position pos:line="40" pos:column="25"/></literal></expr>]<pos:position pos:line="40" pos:column="26"/></index></name> <operator pos:line="40" pos:column="27">!=<pos:position pos:line="40" pos:column="29"/></operator> <literal type="char" pos:line="40" pos:column="30">'('<pos:position pos:line="40" pos:column="33"/></literal><operator pos:line="40" pos:column="33">)<pos:position pos:line="40" pos:column="34"/></operator> <operator pos:line="40" pos:column="35">||<pos:position pos:line="40" pos:column="37"/></operator> <operator pos:line="40" pos:column="38">(<pos:position pos:line="40" pos:column="39"/></operator><name><name pos:line="40" pos:column="39">fields<pos:position pos:line="40" pos:column="45"/></name><index pos:line="40" pos:column="45">[<expr><literal type="number" pos:line="40" pos:column="46">1<pos:position pos:line="40" pos:column="47"/></literal></expr>]<pos:position pos:line="40" pos:column="48"/></index><index pos:line="40" pos:column="48">[<expr><name pos:line="40" pos:column="49">name_len<pos:position pos:line="40" pos:column="57"/></name> <operator pos:line="40" pos:column="58">+<pos:position pos:line="40" pos:column="59"/></operator> <literal type="number" pos:line="40" pos:column="60">1<pos:position pos:line="40" pos:column="61"/></literal></expr>]<pos:position pos:line="40" pos:column="62"/></index></name> <operator pos:line="40" pos:column="63">!=<pos:position pos:line="40" pos:column="65"/></operator> <literal type="char" pos:line="40" pos:column="66">')'<pos:position pos:line="40" pos:column="69"/></literal><operator pos:line="40" pos:column="69">)<pos:position pos:line="40" pos:column="70"/></operator></expr>)<pos:position pos:line="40" pos:column="71"/></condition><then pos:line="40" pos:column="71">
	<block pos:line="41" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">DEBUG<pos:position pos:line="42" pos:column="22"/></name> <argument_list pos:line="42" pos:column="23">(<argument><expr><literal type="string" pos:line="42" pos:column="24">"No brackets found in process name: `%s'"<pos:position pos:line="42" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="67">fields<pos:position pos:line="42" pos:column="73"/></name><index pos:line="42" pos:column="73">[<expr><literal type="number" pos:line="42" pos:column="74">1<pos:position pos:line="42" pos:column="75"/></literal></expr>]<pos:position pos:line="42" pos:column="76"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="78"/></expr_stmt>
		<return pos:line="43" pos:column="17">return <expr><operator pos:line="43" pos:column="24">(<pos:position pos:line="43" pos:column="25"/></operator><operator pos:line="43" pos:column="25">-<pos:position pos:line="43" pos:column="26"/></operator><literal type="number" pos:line="43" pos:column="26">1<pos:position pos:line="43" pos:column="27"/></literal><operator pos:line="43" pos:column="27">)<pos:position pos:line="43" pos:column="28"/></operator></expr>;<pos:position pos:line="43" pos:column="29"/></return>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">fields<pos:position pos:line="45" pos:column="15"/></name><index pos:line="45" pos:column="15">[<expr><literal type="number" pos:line="45" pos:column="16">1<pos:position pos:line="45" pos:column="17"/></literal></expr>]<pos:position pos:line="45" pos:column="18"/></index></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <name><name pos:line="45" pos:column="21">fields<pos:position pos:line="45" pos:column="27"/></name><index pos:line="45" pos:column="27">[<expr><literal type="number" pos:line="45" pos:column="28">1<pos:position pos:line="45" pos:column="29"/></literal></expr>]<pos:position pos:line="45" pos:column="30"/></index></name> <operator pos:line="45" pos:column="31">+<pos:position pos:line="45" pos:column="32"/></operator> <literal type="number" pos:line="45" pos:column="33">1<pos:position pos:line="45" pos:column="34"/></literal></expr>;<pos:position pos:line="45" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">fields<pos:position pos:line="46" pos:column="15"/></name><index pos:line="46" pos:column="15">[<expr><literal type="number" pos:line="46" pos:column="16">1<pos:position pos:line="46" pos:column="17"/></literal></expr>]<pos:position pos:line="46" pos:column="18"/></index><index pos:line="46" pos:column="18">[<expr><name pos:line="46" pos:column="19">name_len<pos:position pos:line="46" pos:column="27"/></name></expr>]<pos:position pos:line="46" pos:column="28"/></index></name> <operator pos:line="46" pos:column="29">=<pos:position pos:line="46" pos:column="30"/></operator> <literal type="char" pos:line="46" pos:column="31">'\0'<pos:position pos:line="46" pos:column="35"/></literal></expr>;<pos:position pos:line="46" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">strncpy<pos:position pos:line="47" pos:column="16"/></name> <argument_list pos:line="47" pos:column="17">(<argument><expr><name><name pos:line="47" pos:column="18">ps<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">name<pos:position pos:line="47" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="28">fields<pos:position pos:line="47" pos:column="34"/></name><index pos:line="47" pos:column="34">[<expr><literal type="number" pos:line="47" pos:column="35">1<pos:position pos:line="47" pos:column="36"/></literal></expr>]<pos:position pos:line="47" pos:column="37"/></index></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="39">PROCSTAT_NAME_LEN<pos:position pos:line="47" pos:column="56"/></name></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="58"/></expr_stmt>

	<expr_stmt><expr><name pos:line="49" pos:column="9">ppid<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <call><name pos:line="49" pos:column="16">atoi<pos:position pos:line="49" pos:column="20"/></name> <argument_list pos:line="49" pos:column="21">(<argument><expr><name><name pos:line="49" pos:column="22">fields<pos:position pos:line="49" pos:column="28"/></name><index pos:line="49" pos:column="28">[<expr><literal type="number" pos:line="49" pos:column="29">3<pos:position pos:line="49" pos:column="30"/></literal></expr>]<pos:position pos:line="49" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="49" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><operator pos:line="51" pos:column="9">*<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">state<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <name><name pos:line="51" pos:column="18">fields<pos:position pos:line="51" pos:column="24"/></name><index pos:line="51" pos:column="24">[<expr><literal type="number" pos:line="51" pos:column="25">2<pos:position pos:line="51" pos:column="26"/></literal></expr>]<pos:position pos:line="51" pos:column="27"/></index><index pos:line="51" pos:column="27">[<expr><literal type="number" pos:line="51" pos:column="28">0<pos:position pos:line="51" pos:column="29"/></literal></expr>]<pos:position pos:line="51" pos:column="30"/></index></name></expr>;<pos:position pos:line="51" pos:column="31"/></expr_stmt>

	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><operator pos:line="53" pos:column="13">*<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">state<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">==<pos:position pos:line="53" pos:column="22"/></operator> <literal type="char" pos:line="53" pos:column="23">'Z'<pos:position pos:line="53" pos:column="26"/></literal></expr>)<pos:position pos:line="53" pos:column="27"/></condition><then pos:line="53" pos:column="27">
	<block pos:line="54" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="55" pos:column="17">ps<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">-&gt;<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="21">num_lwp<pos:position pos:line="55" pos:column="28"/></name></name>  <operator pos:line="55" pos:column="30">=<pos:position pos:line="55" pos:column="31"/></operator> <literal type="number" pos:line="55" pos:column="32">0<pos:position pos:line="55" pos:column="33"/></literal></expr>;<pos:position pos:line="55" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="56" pos:column="17">ps<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">-&gt;<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="21">num_proc<pos:position pos:line="56" pos:column="29"/></name></name> <operator pos:line="56" pos:column="30">=<pos:position pos:line="56" pos:column="31"/></operator> <literal type="number" pos:line="56" pos:column="32">0<pos:position pos:line="56" pos:column="33"/></literal></expr>;<pos:position pos:line="56" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="57" pos:column="10"/></block></then>
	<else pos:line="58" pos:column="9">else
	<block pos:line="59" pos:column="9">{
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">( <expr><operator pos:line="60" pos:column="22">(<pos:position pos:line="60" pos:column="23"/></operator><name><name pos:line="60" pos:column="23">ps<pos:position pos:line="60" pos:column="25"/></name><operator pos:line="60" pos:column="25">-&gt;<pos:position pos:line="60" pos:column="30"/></operator><name pos:line="60" pos:column="27">num_lwp<pos:position pos:line="60" pos:column="34"/></name></name> <operator pos:line="60" pos:column="35">=<pos:position pos:line="60" pos:column="36"/></operator> <call><name pos:line="60" pos:column="37">ps_read_tasks<pos:position pos:line="60" pos:column="50"/></name> <argument_list pos:line="60" pos:column="51">(<argument><expr><name pos:line="60" pos:column="52">pid<pos:position pos:line="60" pos:column="55"/></name></expr></argument>)<pos:position pos:line="60" pos:column="56"/></argument_list></call><operator pos:line="60" pos:column="56">)<pos:position pos:line="60" pos:column="57"/></operator> <operator pos:line="60" pos:column="58">==<pos:position pos:line="60" pos:column="60"/></operator> <operator pos:line="60" pos:column="61">-<pos:position pos:line="60" pos:column="62"/></operator><literal type="number" pos:line="60" pos:column="62">1<pos:position pos:line="60" pos:column="63"/></literal></expr> )<pos:position pos:line="60" pos:column="65"/></condition><then pos:line="60" pos:column="65">
		<block pos:line="61" pos:column="17">{
			<comment type="block" pos:line="62" pos:column="25">/* returns -1 =&gt; kernel 2.4 */</comment>
			<expr_stmt><expr><name><name pos:line="63" pos:column="25">ps<pos:position pos:line="63" pos:column="27"/></name><operator pos:line="63" pos:column="27">-&gt;<pos:position pos:line="63" pos:column="32"/></operator><name pos:line="63" pos:column="29">num_lwp<pos:position pos:line="63" pos:column="36"/></name></name> <operator pos:line="63" pos:column="37">=<pos:position pos:line="63" pos:column="38"/></operator> <literal type="number" pos:line="63" pos:column="39">1<pos:position pos:line="63" pos:column="40"/></literal></expr>;<pos:position pos:line="63" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="65" pos:column="17">ps<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">-&gt;<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="21">num_proc<pos:position pos:line="65" pos:column="29"/></name></name> <operator pos:line="65" pos:column="30">=<pos:position pos:line="65" pos:column="31"/></operator> <literal type="number" pos:line="65" pos:column="32">1<pos:position pos:line="65" pos:column="33"/></literal></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="66" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="68" pos:column="9">/* Leave the rest at zero if this is only a zombi */</comment>
	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name><name pos:line="69" pos:column="13">ps<pos:position pos:line="69" pos:column="15"/></name><operator pos:line="69" pos:column="15">-&gt;<pos:position pos:line="69" pos:column="20"/></operator><name pos:line="69" pos:column="17">num_proc<pos:position pos:line="69" pos:column="25"/></name></name> <operator pos:line="69" pos:column="26">==<pos:position pos:line="69" pos:column="28"/></operator> <literal type="number" pos:line="69" pos:column="29">0<pos:position pos:line="69" pos:column="30"/></literal></expr>)<pos:position pos:line="69" pos:column="31"/></condition><then pos:line="69" pos:column="31">
	<block pos:line="70" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="71" pos:column="17">DEBUG<pos:position pos:line="71" pos:column="22"/></name> <argument_list pos:line="71" pos:column="23">(<argument><expr><literal type="string" pos:line="71" pos:column="24">"processes plugin: This is only a zombi: pid = %i; "<pos:position pos:line="71" pos:column="76"/></literal>
				<literal type="string" pos:line="72" pos:column="33">"name = %s;"<pos:position pos:line="72" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="47">pid<pos:position pos:line="72" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="52">ps<pos:position pos:line="72" pos:column="54"/></name><operator pos:line="72" pos:column="54">-&gt;<pos:position pos:line="72" pos:column="59"/></operator><name pos:line="72" pos:column="56">name<pos:position pos:line="72" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="62"/></expr_stmt>
		<return pos:line="73" pos:column="17">return <expr><operator pos:line="73" pos:column="24">(<pos:position pos:line="73" pos:column="25"/></operator><literal type="number" pos:line="73" pos:column="25">0<pos:position pos:line="73" pos:column="26"/></literal><operator pos:line="73" pos:column="26">)<pos:position pos:line="73" pos:column="27"/></operator></expr>;<pos:position pos:line="73" pos:column="28"/></return>
	}<pos:position pos:line="74" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="76" pos:column="9">cpu_user_counter<pos:position pos:line="76" pos:column="25"/></name>   <operator pos:line="76" pos:column="28">=<pos:position pos:line="76" pos:column="29"/></operator> <call><name pos:line="76" pos:column="30">atoll<pos:position pos:line="76" pos:column="35"/></name> <argument_list pos:line="76" pos:column="36">(<argument><expr><name><name pos:line="76" pos:column="37">fields<pos:position pos:line="76" pos:column="43"/></name><index pos:line="76" pos:column="43">[<expr><literal type="number" pos:line="76" pos:column="44">13<pos:position pos:line="76" pos:column="46"/></literal></expr>]<pos:position pos:line="76" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="76" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name pos:line="77" pos:column="9">cpu_system_counter<pos:position pos:line="77" pos:column="27"/></name> <operator pos:line="77" pos:column="28">=<pos:position pos:line="77" pos:column="29"/></operator> <call><name pos:line="77" pos:column="30">atoll<pos:position pos:line="77" pos:column="35"/></name> <argument_list pos:line="77" pos:column="36">(<argument><expr><name><name pos:line="77" pos:column="37">fields<pos:position pos:line="77" pos:column="43"/></name><index pos:line="77" pos:column="43">[<expr><literal type="number" pos:line="77" pos:column="44">14<pos:position pos:line="77" pos:column="46"/></literal></expr>]<pos:position pos:line="77" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="77" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name pos:line="78" pos:column="9">vmem_size<pos:position pos:line="78" pos:column="18"/></name>          <operator pos:line="78" pos:column="28">=<pos:position pos:line="78" pos:column="29"/></operator> <call><name pos:line="78" pos:column="30">atoll<pos:position pos:line="78" pos:column="35"/></name> <argument_list pos:line="78" pos:column="36">(<argument><expr><name><name pos:line="78" pos:column="37">fields<pos:position pos:line="78" pos:column="43"/></name><index pos:line="78" pos:column="43">[<expr><literal type="number" pos:line="78" pos:column="44">22<pos:position pos:line="78" pos:column="46"/></literal></expr>]<pos:position pos:line="78" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="78" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name pos:line="79" pos:column="9">vmem_rss<pos:position pos:line="79" pos:column="17"/></name>           <operator pos:line="79" pos:column="28">=<pos:position pos:line="79" pos:column="29"/></operator> <call><name pos:line="79" pos:column="30">atoll<pos:position pos:line="79" pos:column="35"/></name> <argument_list pos:line="79" pos:column="36">(<argument><expr><name><name pos:line="79" pos:column="37">fields<pos:position pos:line="79" pos:column="43"/></name><index pos:line="79" pos:column="43">[<expr><literal type="number" pos:line="79" pos:column="44">23<pos:position pos:line="79" pos:column="46"/></literal></expr>]<pos:position pos:line="79" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="79" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="80" pos:column="9">ps<pos:position pos:line="80" pos:column="11"/></name><operator pos:line="80" pos:column="11">-&gt;<pos:position pos:line="80" pos:column="16"/></operator><name pos:line="80" pos:column="13">vmem_minflt_counter<pos:position pos:line="80" pos:column="32"/></name></name> <operator pos:line="80" pos:column="33">=<pos:position pos:line="80" pos:column="34"/></operator> <call><name pos:line="80" pos:column="35">atol<pos:position pos:line="80" pos:column="39"/></name> <argument_list pos:line="80" pos:column="40">(<argument><expr><name><name pos:line="80" pos:column="41">fields<pos:position pos:line="80" pos:column="47"/></name><index pos:line="80" pos:column="47">[<expr><literal type="number" pos:line="80" pos:column="48">9<pos:position pos:line="80" pos:column="49"/></literal></expr>]<pos:position pos:line="80" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="80" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="81" pos:column="9">ps<pos:position pos:line="81" pos:column="11"/></name><operator pos:line="81" pos:column="11">-&gt;<pos:position pos:line="81" pos:column="16"/></operator><name pos:line="81" pos:column="13">vmem_majflt_counter<pos:position pos:line="81" pos:column="32"/></name></name> <operator pos:line="81" pos:column="33">=<pos:position pos:line="81" pos:column="34"/></operator> <call><name pos:line="81" pos:column="35">atol<pos:position pos:line="81" pos:column="39"/></name> <argument_list pos:line="81" pos:column="40">(<argument><expr><name><name pos:line="81" pos:column="41">fields<pos:position pos:line="81" pos:column="47"/></name><index pos:line="81" pos:column="47">[<expr><literal type="number" pos:line="81" pos:column="48">11<pos:position pos:line="81" pos:column="50"/></literal></expr>]<pos:position pos:line="81" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="81" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="53"/></expr_stmt>

	<block pos:line="83" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="84" pos:column="17">unsigned<pos:position pos:line="84" pos:column="25"/></name> <name pos:line="84" pos:column="26">long<pos:position pos:line="84" pos:column="30"/></name> <name pos:line="84" pos:column="31">long<pos:position pos:line="84" pos:column="35"/></name></type> <name pos:line="84" pos:column="36">stack_start<pos:position pos:line="84" pos:column="47"/></name> <init pos:line="84" pos:column="48">= <expr><call><name pos:line="84" pos:column="50">atoll<pos:position pos:line="84" pos:column="55"/></name> <argument_list pos:line="84" pos:column="56">(<argument><expr><name><name pos:line="84" pos:column="57">fields<pos:position pos:line="84" pos:column="63"/></name><index pos:line="84" pos:column="63">[<expr><literal type="number" pos:line="84" pos:column="64">27<pos:position pos:line="84" pos:column="66"/></literal></expr>]<pos:position pos:line="84" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="84" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="84" pos:column="69"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="85" pos:column="17">unsigned<pos:position pos:line="85" pos:column="25"/></name> <name pos:line="85" pos:column="26">long<pos:position pos:line="85" pos:column="30"/></name> <name pos:line="85" pos:column="31">long<pos:position pos:line="85" pos:column="35"/></name></type> <name pos:line="85" pos:column="36">stack_ptr<pos:position pos:line="85" pos:column="45"/></name>   <init pos:line="85" pos:column="48">= <expr><call><name pos:line="85" pos:column="50">atoll<pos:position pos:line="85" pos:column="55"/></name> <argument_list pos:line="85" pos:column="56">(<argument><expr><name><name pos:line="85" pos:column="57">fields<pos:position pos:line="85" pos:column="63"/></name><index pos:line="85" pos:column="63">[<expr><literal type="number" pos:line="85" pos:column="64">28<pos:position pos:line="85" pos:column="66"/></literal></expr>]<pos:position pos:line="85" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="85" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="85" pos:column="69"/></decl_stmt>

		<expr_stmt><expr><name pos:line="87" pos:column="17">stack_size<pos:position pos:line="87" pos:column="27"/></name> <operator pos:line="87" pos:column="28">=<pos:position pos:line="87" pos:column="29"/></operator> <ternary><condition><expr><operator pos:line="87" pos:column="30">(<pos:position pos:line="87" pos:column="31"/></operator><name pos:line="87" pos:column="31">stack_start<pos:position pos:line="87" pos:column="42"/></name> <operator pos:line="87" pos:column="43">&gt;<pos:position pos:line="87" pos:column="47"/></operator> <name pos:line="87" pos:column="45">stack_ptr<pos:position pos:line="87" pos:column="54"/></name><operator pos:line="87" pos:column="54">)<pos:position pos:line="87" pos:column="55"/></operator></expr>
			?<pos:position pos:line="88" pos:column="26"/></condition><then pos:line="88" pos:column="26"> <expr><name pos:line="88" pos:column="27">stack_start<pos:position pos:line="88" pos:column="38"/></name> <operator pos:line="88" pos:column="39">-<pos:position pos:line="88" pos:column="40"/></operator> <name pos:line="88" pos:column="41">stack_ptr<pos:position pos:line="88" pos:column="50"/></name></expr>
			<pos:position pos:line="89" pos:column="4"/></then><else pos:line="89" pos:column="25">: <expr><name pos:line="89" pos:column="27">stack_ptr<pos:position pos:line="89" pos:column="36"/></name> <operator pos:line="89" pos:column="37">-<pos:position pos:line="89" pos:column="38"/></operator> <name pos:line="89" pos:column="39">stack_start<pos:position pos:line="89" pos:column="50"/></name></expr></else></ternary></expr>;<pos:position pos:line="89" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="90" pos:column="10"/></block>

	<comment type="block" pos:line="92" pos:column="9">/* Convert jiffies to useconds */</comment>
	<expr_stmt><expr><name pos:line="93" pos:column="9">cpu_user_counter<pos:position pos:line="93" pos:column="25"/></name>   <operator pos:line="93" pos:column="28">=<pos:position pos:line="93" pos:column="29"/></operator> <name pos:line="93" pos:column="30">cpu_user_counter<pos:position pos:line="93" pos:column="46"/></name>   <operator pos:line="93" pos:column="49">*<pos:position pos:line="93" pos:column="50"/></operator> <literal type="number" pos:line="93" pos:column="51">1000000<pos:position pos:line="93" pos:column="58"/></literal> <operator pos:line="93" pos:column="59">/<pos:position pos:line="93" pos:column="60"/></operator> <name pos:line="93" pos:column="61">CONFIG_HZ<pos:position pos:line="93" pos:column="70"/></name></expr>;<pos:position pos:line="93" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><name pos:line="94" pos:column="9">cpu_system_counter<pos:position pos:line="94" pos:column="27"/></name> <operator pos:line="94" pos:column="28">=<pos:position pos:line="94" pos:column="29"/></operator> <name pos:line="94" pos:column="30">cpu_system_counter<pos:position pos:line="94" pos:column="48"/></name> <operator pos:line="94" pos:column="49">*<pos:position pos:line="94" pos:column="50"/></operator> <literal type="number" pos:line="94" pos:column="51">1000000<pos:position pos:line="94" pos:column="58"/></literal> <operator pos:line="94" pos:column="59">/<pos:position pos:line="94" pos:column="60"/></operator> <name pos:line="94" pos:column="61">CONFIG_HZ<pos:position pos:line="94" pos:column="70"/></name></expr>;<pos:position pos:line="94" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><name pos:line="95" pos:column="9">vmem_rss<pos:position pos:line="95" pos:column="17"/></name> <operator pos:line="95" pos:column="18">=<pos:position pos:line="95" pos:column="19"/></operator> <name pos:line="95" pos:column="20">vmem_rss<pos:position pos:line="95" pos:column="28"/></name> <operator pos:line="95" pos:column="29">*<pos:position pos:line="95" pos:column="30"/></operator> <name pos:line="95" pos:column="31">pagesize_g<pos:position pos:line="95" pos:column="41"/></name></expr>;<pos:position pos:line="95" pos:column="42"/></expr_stmt>

	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">( <expr><operator pos:line="97" pos:column="14">(<pos:position pos:line="97" pos:column="15"/></operator><call><name pos:line="97" pos:column="15">ps_read_vmem<pos:position pos:line="97" pos:column="27"/></name><argument_list pos:line="97" pos:column="27">(<argument><expr><name pos:line="97" pos:column="28">pid<pos:position pos:line="97" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="33">ps<pos:position pos:line="97" pos:column="35"/></name></expr></argument>)<pos:position pos:line="97" pos:column="36"/></argument_list></call><operator pos:line="97" pos:column="36">)<pos:position pos:line="97" pos:column="37"/></operator> <operator pos:line="97" pos:column="38">==<pos:position pos:line="97" pos:column="40"/></operator> <name pos:line="97" pos:column="41">NULL<pos:position pos:line="97" pos:column="45"/></name></expr>)<pos:position pos:line="97" pos:column="46"/></condition><then pos:line="97" pos:column="46">
	<block pos:line="98" pos:column="9">{
		<comment type="block" pos:line="99" pos:column="17">/* No VMem data */</comment>
		<expr_stmt><expr><name><name pos:line="100" pos:column="17">ps<pos:position pos:line="100" pos:column="19"/></name><operator pos:line="100" pos:column="19">-&gt;<pos:position pos:line="100" pos:column="24"/></operator><name pos:line="100" pos:column="21">vmem_data<pos:position pos:line="100" pos:column="30"/></name></name> <operator pos:line="100" pos:column="31">=<pos:position pos:line="100" pos:column="32"/></operator> <operator pos:line="100" pos:column="33">-<pos:position pos:line="100" pos:column="34"/></operator><literal type="number" pos:line="100" pos:column="34">1<pos:position pos:line="100" pos:column="35"/></literal></expr>;<pos:position pos:line="100" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="101" pos:column="17">ps<pos:position pos:line="101" pos:column="19"/></name><operator pos:line="101" pos:column="19">-&gt;<pos:position pos:line="101" pos:column="24"/></operator><name pos:line="101" pos:column="21">vmem_code<pos:position pos:line="101" pos:column="30"/></name></name> <operator pos:line="101" pos:column="31">=<pos:position pos:line="101" pos:column="32"/></operator> <operator pos:line="101" pos:column="33">-<pos:position pos:line="101" pos:column="34"/></operator><literal type="number" pos:line="101" pos:column="34">1<pos:position pos:line="101" pos:column="35"/></literal></expr>;<pos:position pos:line="101" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="102" pos:column="17">DEBUG<pos:position pos:line="102" pos:column="22"/></name><argument_list pos:line="102" pos:column="22">(<argument><expr><literal type="string" pos:line="102" pos:column="23">"ps_read_process: did not get vmem data for pid %i"<pos:position pos:line="102" pos:column="74"/></literal></expr></argument>,<argument><expr><name pos:line="102" pos:column="75">pid<pos:position pos:line="102" pos:column="78"/></name></expr></argument>)<pos:position pos:line="102" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="80"/></expr_stmt>
	}<pos:position pos:line="103" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="105" pos:column="9">ps<pos:position pos:line="105" pos:column="11"/></name><operator pos:line="105" pos:column="11">-&gt;<pos:position pos:line="105" pos:column="16"/></operator><name pos:line="105" pos:column="13">cpu_user_counter<pos:position pos:line="105" pos:column="29"/></name></name> <operator pos:line="105" pos:column="30">=<pos:position pos:line="105" pos:column="31"/></operator> <operator pos:line="105" pos:column="32">(<pos:position pos:line="105" pos:column="33"/></operator><name pos:line="105" pos:column="33">unsigned<pos:position pos:line="105" pos:column="41"/></name> <name pos:line="105" pos:column="42">long<pos:position pos:line="105" pos:column="46"/></name><operator pos:line="105" pos:column="46">)<pos:position pos:line="105" pos:column="47"/></operator> <name pos:line="105" pos:column="48">cpu_user_counter<pos:position pos:line="105" pos:column="64"/></name></expr>;<pos:position pos:line="105" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="106" pos:column="9">ps<pos:position pos:line="106" pos:column="11"/></name><operator pos:line="106" pos:column="11">-&gt;<pos:position pos:line="106" pos:column="16"/></operator><name pos:line="106" pos:column="13">cpu_system_counter<pos:position pos:line="106" pos:column="31"/></name></name> <operator pos:line="106" pos:column="32">=<pos:position pos:line="106" pos:column="33"/></operator> <operator pos:line="106" pos:column="34">(<pos:position pos:line="106" pos:column="35"/></operator><name pos:line="106" pos:column="35">unsigned<pos:position pos:line="106" pos:column="43"/></name> <name pos:line="106" pos:column="44">long<pos:position pos:line="106" pos:column="48"/></name><operator pos:line="106" pos:column="48">)<pos:position pos:line="106" pos:column="49"/></operator> <name pos:line="106" pos:column="50">cpu_system_counter<pos:position pos:line="106" pos:column="68"/></name></expr>;<pos:position pos:line="106" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="107" pos:column="9">ps<pos:position pos:line="107" pos:column="11"/></name><operator pos:line="107" pos:column="11">-&gt;<pos:position pos:line="107" pos:column="16"/></operator><name pos:line="107" pos:column="13">vmem_size<pos:position pos:line="107" pos:column="22"/></name></name> <operator pos:line="107" pos:column="23">=<pos:position pos:line="107" pos:column="24"/></operator> <operator pos:line="107" pos:column="25">(<pos:position pos:line="107" pos:column="26"/></operator><name pos:line="107" pos:column="26">unsigned<pos:position pos:line="107" pos:column="34"/></name> <name pos:line="107" pos:column="35">long<pos:position pos:line="107" pos:column="39"/></name><operator pos:line="107" pos:column="39">)<pos:position pos:line="107" pos:column="40"/></operator> <name pos:line="107" pos:column="41">vmem_size<pos:position pos:line="107" pos:column="50"/></name></expr>;<pos:position pos:line="107" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="108" pos:column="9">ps<pos:position pos:line="108" pos:column="11"/></name><operator pos:line="108" pos:column="11">-&gt;<pos:position pos:line="108" pos:column="16"/></operator><name pos:line="108" pos:column="13">vmem_rss<pos:position pos:line="108" pos:column="21"/></name></name> <operator pos:line="108" pos:column="22">=<pos:position pos:line="108" pos:column="23"/></operator> <operator pos:line="108" pos:column="24">(<pos:position pos:line="108" pos:column="25"/></operator><name pos:line="108" pos:column="25">unsigned<pos:position pos:line="108" pos:column="33"/></name> <name pos:line="108" pos:column="34">long<pos:position pos:line="108" pos:column="38"/></name><operator pos:line="108" pos:column="38">)<pos:position pos:line="108" pos:column="39"/></operator> <name pos:line="108" pos:column="40">vmem_rss<pos:position pos:line="108" pos:column="48"/></name></expr>;<pos:position pos:line="108" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="109" pos:column="9">ps<pos:position pos:line="109" pos:column="11"/></name><operator pos:line="109" pos:column="11">-&gt;<pos:position pos:line="109" pos:column="16"/></operator><name pos:line="109" pos:column="13">stack_size<pos:position pos:line="109" pos:column="23"/></name></name> <operator pos:line="109" pos:column="24">=<pos:position pos:line="109" pos:column="25"/></operator> <operator pos:line="109" pos:column="26">(<pos:position pos:line="109" pos:column="27"/></operator><name pos:line="109" pos:column="27">unsigned<pos:position pos:line="109" pos:column="35"/></name> <name pos:line="109" pos:column="36">long<pos:position pos:line="109" pos:column="40"/></name><operator pos:line="109" pos:column="40">)<pos:position pos:line="109" pos:column="41"/></operator> <name pos:line="109" pos:column="42">stack_size<pos:position pos:line="109" pos:column="52"/></name></expr>;<pos:position pos:line="109" pos:column="53"/></expr_stmt>

	<if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">( <expr><operator pos:line="111" pos:column="14">(<pos:position pos:line="111" pos:column="15"/></operator><call><name pos:line="111" pos:column="15">ps_read_io<pos:position pos:line="111" pos:column="25"/></name> <argument_list pos:line="111" pos:column="26">(<argument><expr><name pos:line="111" pos:column="27">pid<pos:position pos:line="111" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="32">ps<pos:position pos:line="111" pos:column="34"/></name></expr></argument>)<pos:position pos:line="111" pos:column="35"/></argument_list></call><operator pos:line="111" pos:column="35">)<pos:position pos:line="111" pos:column="36"/></operator> <operator pos:line="111" pos:column="37">==<pos:position pos:line="111" pos:column="39"/></operator> <name pos:line="111" pos:column="40">NULL<pos:position pos:line="111" pos:column="44"/></name></expr>)<pos:position pos:line="111" pos:column="45"/></condition><then pos:line="111" pos:column="45">
	<block pos:line="112" pos:column="9">{
		<comment type="block" pos:line="113" pos:column="17">/* no io data */</comment>
		<expr_stmt><expr><name><name pos:line="114" pos:column="17">ps<pos:position pos:line="114" pos:column="19"/></name><operator pos:line="114" pos:column="19">-&gt;<pos:position pos:line="114" pos:column="24"/></operator><name pos:line="114" pos:column="21">io_rchar<pos:position pos:line="114" pos:column="29"/></name></name> <operator pos:line="114" pos:column="30">=<pos:position pos:line="114" pos:column="31"/></operator> <operator pos:line="114" pos:column="32">-<pos:position pos:line="114" pos:column="33"/></operator><literal type="number" pos:line="114" pos:column="33">1<pos:position pos:line="114" pos:column="34"/></literal></expr>;<pos:position pos:line="114" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="115" pos:column="17">ps<pos:position pos:line="115" pos:column="19"/></name><operator pos:line="115" pos:column="19">-&gt;<pos:position pos:line="115" pos:column="24"/></operator><name pos:line="115" pos:column="21">io_wchar<pos:position pos:line="115" pos:column="29"/></name></name> <operator pos:line="115" pos:column="30">=<pos:position pos:line="115" pos:column="31"/></operator> <operator pos:line="115" pos:column="32">-<pos:position pos:line="115" pos:column="33"/></operator><literal type="number" pos:line="115" pos:column="33">1<pos:position pos:line="115" pos:column="34"/></literal></expr>;<pos:position pos:line="115" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="116" pos:column="17">ps<pos:position pos:line="116" pos:column="19"/></name><operator pos:line="116" pos:column="19">-&gt;<pos:position pos:line="116" pos:column="24"/></operator><name pos:line="116" pos:column="21">io_syscr<pos:position pos:line="116" pos:column="29"/></name></name> <operator pos:line="116" pos:column="30">=<pos:position pos:line="116" pos:column="31"/></operator> <operator pos:line="116" pos:column="32">-<pos:position pos:line="116" pos:column="33"/></operator><literal type="number" pos:line="116" pos:column="33">1<pos:position pos:line="116" pos:column="34"/></literal></expr>;<pos:position pos:line="116" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="117" pos:column="17">ps<pos:position pos:line="117" pos:column="19"/></name><operator pos:line="117" pos:column="19">-&gt;<pos:position pos:line="117" pos:column="24"/></operator><name pos:line="117" pos:column="21">io_syscw<pos:position pos:line="117" pos:column="29"/></name></name> <operator pos:line="117" pos:column="30">=<pos:position pos:line="117" pos:column="31"/></operator> <operator pos:line="117" pos:column="32">-<pos:position pos:line="117" pos:column="33"/></operator><literal type="number" pos:line="117" pos:column="33">1<pos:position pos:line="117" pos:column="34"/></literal></expr>;<pos:position pos:line="117" pos:column="35"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="119" pos:column="17">DEBUG<pos:position pos:line="119" pos:column="22"/></name><argument_list pos:line="119" pos:column="22">(<argument><expr><literal type="string" pos:line="119" pos:column="23">"ps_read_process: not get io data for pid %i"<pos:position pos:line="119" pos:column="68"/></literal></expr></argument>,<argument><expr><name pos:line="119" pos:column="69">pid<pos:position pos:line="119" pos:column="72"/></name></expr></argument>)<pos:position pos:line="119" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="120" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="122" pos:column="9">/* success */</comment>
	<return pos:line="123" pos:column="9">return <expr><operator pos:line="123" pos:column="16">(<pos:position pos:line="123" pos:column="17"/></operator><literal type="number" pos:line="123" pos:column="17">0<pos:position pos:line="123" pos:column="18"/></literal><operator pos:line="123" pos:column="18">)<pos:position pos:line="123" pos:column="19"/></operator></expr>;<pos:position pos:line="123" pos:column="20"/></return>
}<pos:position pos:line="124" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1847_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ts_config_add_data_source<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">ts_data_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">data<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="55">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">oconfig_item_t<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">ci<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">new_data_sources_num<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier><modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">temp<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* Check number of arbuments. */</comment>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">ci<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">values_num<pos:position pos:line="9" pos:column="27"/></name></name> <operator pos:line="9" pos:column="28">&lt;<pos:position pos:line="9" pos:column="32"/></operator> <literal type="number" pos:line="9" pos:column="30">1<pos:position pos:line="9" pos:column="31"/></literal></expr>)<pos:position pos:line="9" pos:column="32"/></condition><then pos:line="9" pos:column="32">
	<block pos:line="10" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">ERROR<pos:position pos:line="11" pos:column="22"/></name> <argument_list pos:line="11" pos:column="23">(<argument><expr><literal type="string" pos:line="11" pos:column="24">"`value' match: `%s' needs at least one argument."<pos:position pos:line="11" pos:column="74"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="12" pos:column="33">ci<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">key<pos:position pos:line="12" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
		<return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">(<pos:position pos:line="13" pos:column="25"/></operator><operator pos:line="13" pos:column="25">-<pos:position pos:line="13" pos:column="26"/></operator><literal type="number" pos:line="13" pos:column="26">1<pos:position pos:line="13" pos:column="27"/></literal><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator></expr>;<pos:position pos:line="13" pos:column="29"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="16" pos:column="9">/* Check type of arguments */</comment>
	<for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><expr><name pos:line="17" pos:column="14">i<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal></expr>;<pos:position pos:line="17" pos:column="20"/></init> <condition><expr><name pos:line="17" pos:column="21">i<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">&lt;<pos:position pos:line="17" pos:column="27"/></operator> <name><name pos:line="17" pos:column="25">ci<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">-&gt;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="29">values_num<pos:position pos:line="17" pos:column="39"/></name></name></expr>;<pos:position pos:line="17" pos:column="40"/></condition> <incr><expr><name pos:line="17" pos:column="41">i<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">++<pos:position pos:line="17" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="45"/></control>
	<block pos:line="18" pos:column="9">{
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name><name pos:line="19" pos:column="21">ci<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">-&gt;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="25">values<pos:position pos:line="19" pos:column="31"/></name><index pos:line="19" pos:column="31">[<expr><name pos:line="19" pos:column="32">i<pos:position pos:line="19" pos:column="33"/></name></expr>]<pos:position pos:line="19" pos:column="34"/></index></name><operator pos:line="19" pos:column="34">.<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">type<pos:position pos:line="19" pos:column="39"/></name> <operator pos:line="19" pos:column="40">==<pos:position pos:line="19" pos:column="42"/></operator> <name pos:line="19" pos:column="43">OCONFIG_TYPE_STRING<pos:position pos:line="19" pos:column="62"/></name></expr>)<pos:position pos:line="19" pos:column="63"/></condition><then pos:line="19" pos:column="63">
			<block type="pseudo"><continue pos:line="20" pos:column="25">continue;<pos:position pos:line="20" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="22" pos:column="17">ERROR<pos:position pos:line="22" pos:column="22"/></name> <argument_list pos:line="22" pos:column="23">(<argument><expr><literal type="string" pos:line="22" pos:column="24">"`value' match: `%s' accepts only string arguments "<pos:position pos:line="22" pos:column="76"/></literal>
				<literal type="string" pos:line="23" pos:column="33">"(argument %i is a %s)."<pos:position pos:line="23" pos:column="57"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="24" pos:column="33">ci<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">key<pos:position pos:line="24" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">i<pos:position pos:line="24" pos:column="43"/></name> <operator pos:line="24" pos:column="44">+<pos:position pos:line="24" pos:column="45"/></operator> <literal type="number" pos:line="24" pos:column="46">1<pos:position pos:line="24" pos:column="47"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="25" pos:column="33">(<pos:position pos:line="25" pos:column="34"/></operator><name><name pos:line="25" pos:column="34">ci<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">values<pos:position pos:line="25" pos:column="44"/></name><index pos:line="25" pos:column="44">[<expr><name pos:line="25" pos:column="45">i<pos:position pos:line="25" pos:column="46"/></name></expr>]<pos:position pos:line="25" pos:column="47"/></index></name><operator pos:line="25" pos:column="47">.<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="48">type<pos:position pos:line="25" pos:column="52"/></name> <operator pos:line="25" pos:column="53">==<pos:position pos:line="25" pos:column="55"/></operator> <name pos:line="25" pos:column="56">OCONFIG_TYPE_BOOLEAN<pos:position pos:line="25" pos:column="76"/></name><operator pos:line="25" pos:column="76">)<pos:position pos:line="25" pos:column="77"/></operator></expr>
				?<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34"> <expr><literal type="string" pos:line="26" pos:column="35">"truth value"<pos:position pos:line="26" pos:column="48"/></literal></expr> <pos:position pos:line="26" pos:column="49"/></then><else pos:line="26" pos:column="49">: <expr><literal type="string" pos:line="26" pos:column="51">"number"<pos:position pos:line="26" pos:column="59"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="61"/></expr_stmt>
		<return pos:line="27" pos:column="17">return <expr><operator pos:line="27" pos:column="24">(<pos:position pos:line="27" pos:column="25"/></operator><operator pos:line="27" pos:column="25">-<pos:position pos:line="27" pos:column="26"/></operator><literal type="number" pos:line="27" pos:column="26">1<pos:position pos:line="27" pos:column="27"/></literal><operator pos:line="27" pos:column="27">)<pos:position pos:line="27" pos:column="28"/></operator></expr>;<pos:position pos:line="27" pos:column="29"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></for>

	<comment type="block" pos:line="30" pos:column="9">/* Allocate space for the char pointers */</comment>
	<expr_stmt><expr><name pos:line="31" pos:column="9">new_data_sources_num<pos:position pos:line="31" pos:column="29"/></name> <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <name><name pos:line="31" pos:column="32">data<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">data_sources_num<pos:position pos:line="31" pos:column="54"/></name></name> <operator pos:line="31" pos:column="55">+<pos:position pos:line="31" pos:column="56"/></operator> <operator pos:line="31" pos:column="57">(<pos:position pos:line="31" pos:column="58"/></operator><operator pos:line="31" pos:column="58">(<pos:position pos:line="31" pos:column="59"/></operator><name pos:line="31" pos:column="59">size_t<pos:position pos:line="31" pos:column="65"/></name><operator pos:line="31" pos:column="65">)<pos:position pos:line="31" pos:column="66"/></operator> <name><name pos:line="31" pos:column="67">ci<pos:position pos:line="31" pos:column="69"/></name><operator pos:line="31" pos:column="69">-&gt;<pos:position pos:line="31" pos:column="74"/></operator><name pos:line="31" pos:column="71">values_num<pos:position pos:line="31" pos:column="81"/></name></name><operator pos:line="31" pos:column="81">)<pos:position pos:line="31" pos:column="82"/></operator></expr>;<pos:position pos:line="31" pos:column="83"/></expr_stmt>
	<expr_stmt><expr><name pos:line="32" pos:column="9">temp<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">char<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">*<pos:position pos:line="32" pos:column="23"/></operator><operator pos:line="32" pos:column="23">*<pos:position pos:line="32" pos:column="24"/></operator><operator pos:line="32" pos:column="24">)<pos:position pos:line="32" pos:column="25"/></operator> <call><name pos:line="32" pos:column="26">realloc<pos:position pos:line="32" pos:column="33"/></name> <argument_list pos:line="32" pos:column="34">(<argument><expr><name><name pos:line="32" pos:column="35">data<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">-&gt;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="41">data_sources<pos:position pos:line="32" pos:column="53"/></name></name></expr></argument>,
			<argument><expr><name pos:line="33" pos:column="25">new_data_sources_num<pos:position pos:line="33" pos:column="45"/></name> <operator pos:line="33" pos:column="46">*<pos:position pos:line="33" pos:column="47"/></operator> <sizeof pos:line="33" pos:column="48">sizeof <argument_list pos:line="33" pos:column="55">(<argument><expr><name pos:line="33" pos:column="56">char<pos:position pos:line="33" pos:column="60"/></name> <operator pos:line="33" pos:column="61">*<pos:position pos:line="33" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">temp<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">==<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">NULL<pos:position pos:line="34" pos:column="25"/></name></expr>)<pos:position pos:line="34" pos:column="26"/></condition><then pos:line="34" pos:column="26">
	<block pos:line="35" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">ERROR<pos:position pos:line="36" pos:column="22"/></name> <argument_list pos:line="36" pos:column="23">(<argument><expr><literal type="string" pos:line="36" pos:column="24">"`value' match: realloc failed."<pos:position pos:line="36" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="58"/></expr_stmt>
		<return pos:line="37" pos:column="17">return <expr><operator pos:line="37" pos:column="24">(<pos:position pos:line="37" pos:column="25"/></operator><operator pos:line="37" pos:column="25">-<pos:position pos:line="37" pos:column="26"/></operator><literal type="number" pos:line="37" pos:column="26">1<pos:position pos:line="37" pos:column="27"/></literal><operator pos:line="37" pos:column="27">)<pos:position pos:line="37" pos:column="28"/></operator></expr>;<pos:position pos:line="37" pos:column="29"/></return>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="39" pos:column="9">data<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">data_sources<pos:position pos:line="39" pos:column="27"/></name></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <name pos:line="39" pos:column="30">temp<pos:position pos:line="39" pos:column="34"/></name></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>

	<comment type="block" pos:line="41" pos:column="9">/* Copy the strings, allocating memory as needed.  */</comment>
	<for pos:line="42" pos:column="9">for <control pos:line="42" pos:column="13">(<init><expr><name pos:line="42" pos:column="14">i<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <literal type="number" pos:line="42" pos:column="18">0<pos:position pos:line="42" pos:column="19"/></literal></expr>;<pos:position pos:line="42" pos:column="20"/></init> <condition><expr><name pos:line="42" pos:column="21">i<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">&lt;<pos:position pos:line="42" pos:column="27"/></operator> <name><name pos:line="42" pos:column="25">ci<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">-&gt;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="29">values_num<pos:position pos:line="42" pos:column="39"/></name></name></expr>;<pos:position pos:line="42" pos:column="40"/></condition> <incr><expr><name pos:line="42" pos:column="41">i<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">++<pos:position pos:line="42" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="45"/></control>
	<block pos:line="43" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="44" pos:column="17">size_t<pos:position pos:line="44" pos:column="23"/></name></type> <name pos:line="44" pos:column="24">j<pos:position pos:line="44" pos:column="25"/></name></decl>;<pos:position pos:line="44" pos:column="26"/></decl_stmt>

		<comment type="block" pos:line="46" pos:column="17">/* If we get here, there better be memory for us to write to.  */</comment>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">assert<pos:position pos:line="47" pos:column="23"/></name> <argument_list pos:line="47" pos:column="24">(<argument><expr><name><name pos:line="47" pos:column="25">data<pos:position pos:line="47" pos:column="29"/></name><operator pos:line="47" pos:column="29">-&gt;<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="31">data_sources_num<pos:position pos:line="47" pos:column="47"/></name></name> <operator pos:line="47" pos:column="48">&lt;<pos:position pos:line="47" pos:column="52"/></operator> <name pos:line="47" pos:column="50">new_data_sources_num<pos:position pos:line="47" pos:column="70"/></name></expr></argument>)<pos:position pos:line="47" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="72"/></expr_stmt>

		<expr_stmt><expr><name pos:line="49" pos:column="17">j<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <name><name pos:line="49" pos:column="21">data<pos:position pos:line="49" pos:column="25"/></name><operator pos:line="49" pos:column="25">-&gt;<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="27">data_sources_num<pos:position pos:line="49" pos:column="43"/></name></name></expr>;<pos:position pos:line="49" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="50" pos:column="17">data<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">data_sources<pos:position pos:line="50" pos:column="35"/></name><index pos:line="50" pos:column="35">[<expr><name pos:line="50" pos:column="36">j<pos:position pos:line="50" pos:column="37"/></name></expr>]<pos:position pos:line="50" pos:column="38"/></index></name> <operator pos:line="50" pos:column="39">=<pos:position pos:line="50" pos:column="40"/></operator> <call><name pos:line="50" pos:column="41">sstrdup<pos:position pos:line="50" pos:column="48"/></name> <argument_list pos:line="50" pos:column="49">(<argument><expr><name><name pos:line="50" pos:column="50">ci<pos:position pos:line="50" pos:column="52"/></name><operator pos:line="50" pos:column="52">-&gt;<pos:position pos:line="50" pos:column="57"/></operator><name pos:line="50" pos:column="54">values<pos:position pos:line="50" pos:column="60"/></name><index pos:line="50" pos:column="60">[<expr><name pos:line="50" pos:column="61">i<pos:position pos:line="50" pos:column="62"/></name></expr>]<pos:position pos:line="50" pos:column="63"/></index></name><operator pos:line="50" pos:column="63">.<pos:position pos:line="50" pos:column="64"/></operator><name><name pos:line="50" pos:column="64">value<pos:position pos:line="50" pos:column="69"/></name><operator pos:line="50" pos:column="69">.<pos:position pos:line="50" pos:column="70"/></operator><name pos:line="50" pos:column="70">string<pos:position pos:line="50" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="78"/></expr_stmt>
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name><name pos:line="51" pos:column="21">data<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">-&gt;<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="27">data_sources<pos:position pos:line="51" pos:column="39"/></name><index pos:line="51" pos:column="39">[<expr><name pos:line="51" pos:column="40">j<pos:position pos:line="51" pos:column="41"/></name></expr>]<pos:position pos:line="51" pos:column="42"/></index></name> <operator pos:line="51" pos:column="43">==<pos:position pos:line="51" pos:column="45"/></operator> <name pos:line="51" pos:column="46">NULL<pos:position pos:line="51" pos:column="50"/></name></expr>)<pos:position pos:line="51" pos:column="51"/></condition><then pos:line="51" pos:column="51">
		<block pos:line="52" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">ERROR<pos:position pos:line="53" pos:column="30"/></name> <argument_list pos:line="53" pos:column="31">(<argument><expr><literal type="string" pos:line="53" pos:column="32">"`value' match: sstrdup failed."<pos:position pos:line="53" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="66"/></expr_stmt>
			<continue pos:line="54" pos:column="25">continue;<pos:position pos:line="54" pos:column="34"/></continue>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="56" pos:column="17">data<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">-&gt;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="23">data_sources_num<pos:position pos:line="56" pos:column="39"/></name></name><operator pos:line="56" pos:column="39">++<pos:position pos:line="56" pos:column="41"/></operator></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="57" pos:column="10"/></block></for>

	<return pos:line="59" pos:column="9">return <expr><operator pos:line="59" pos:column="16">(<pos:position pos:line="59" pos:column="17"/></operator><literal type="number" pos:line="59" pos:column="17">0<pos:position pos:line="59" pos:column="18"/></literal><operator pos:line="59" pos:column="18">)<pos:position pos:line="59" pos:column="19"/></operator></expr>;<pos:position pos:line="59" pos:column="20"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

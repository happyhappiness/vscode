<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1203_collectd-4.8.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">network_set_ttl<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">sockent_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">se<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name><name pos:line="1" pos:column="56">struct<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">addrinfo<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">ai<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">DEBUG<pos:position pos:line="3" pos:column="14"/></name> <argument_list pos:line="3" pos:column="15">(<argument><expr><literal type="string" pos:line="3" pos:column="16">"network plugin: network_set_ttl: network_config_ttl = %i;"<pos:position pos:line="3" pos:column="75"/></literal></expr></argument>,
			<argument><expr><name pos:line="4" pos:column="25">network_config_ttl<pos:position pos:line="4" pos:column="43"/></name></expr></argument>)<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="45"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="6" pos:column="9">assert<pos:position pos:line="6" pos:column="15"/></name> <argument_list pos:line="6" pos:column="16">(<argument><expr><name><name pos:line="6" pos:column="17">se<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">type<pos:position pos:line="6" pos:column="25"/></name></name> <operator pos:line="6" pos:column="26">==<pos:position pos:line="6" pos:column="28"/></operator> <name pos:line="6" pos:column="29">SOCKENT_TYPE_CLIENT<pos:position pos:line="6" pos:column="48"/></name></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="50"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">network_config_ttl<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">&lt;<pos:position pos:line="8" pos:column="37"/></operator> <literal type="number" pos:line="8" pos:column="35">1<pos:position pos:line="8" pos:column="36"/></literal><operator pos:line="8" pos:column="36">)<pos:position pos:line="8" pos:column="37"/></operator> <operator pos:line="8" pos:column="38">||<pos:position pos:line="8" pos:column="40"/></operator> <operator pos:line="8" pos:column="41">(<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="42">network_config_ttl<pos:position pos:line="8" pos:column="60"/></name> <operator pos:line="8" pos:column="61">&gt;<pos:position pos:line="8" pos:column="65"/></operator> <literal type="number" pos:line="8" pos:column="63">255<pos:position pos:line="8" pos:column="66"/></literal><operator pos:line="8" pos:column="66">)<pos:position pos:line="8" pos:column="67"/></operator></expr>)<pos:position pos:line="8" pos:column="68"/></condition><then pos:line="8" pos:column="68">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><operator pos:line="9" pos:column="25">-<pos:position pos:line="9" pos:column="26"/></operator><literal type="number" pos:line="9" pos:column="26">1<pos:position pos:line="9" pos:column="27"/></literal><operator pos:line="9" pos:column="27">)<pos:position pos:line="9" pos:column="28"/></operator></expr>;<pos:position pos:line="9" pos:column="29"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">ai<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">ai_family<pos:position pos:line="11" pos:column="26"/></name></name> <operator pos:line="11" pos:column="27">==<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">AF_INET<pos:position pos:line="11" pos:column="37"/></name></expr>)<pos:position pos:line="11" pos:column="38"/></condition><then pos:line="11" pos:column="38">
	<block pos:line="12" pos:column="9">{
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">struct<pos:position pos:line="13" pos:column="23"/></name> <name pos:line="13" pos:column="24">sockaddr_in<pos:position pos:line="13" pos:column="35"/></name></name> <modifier pos:line="13" pos:column="36">*<pos:position pos:line="13" pos:column="37"/></modifier></type><name pos:line="13" pos:column="37">addr<pos:position pos:line="13" pos:column="41"/></name> <init pos:line="13" pos:column="42">= <expr><operator pos:line="13" pos:column="44">(<pos:position pos:line="13" pos:column="45"/></operator>struct <name pos:line="13" pos:column="52">sockaddr_in<pos:position pos:line="13" pos:column="63"/></name> <operator pos:line="13" pos:column="64">*<pos:position pos:line="13" pos:column="65"/></operator><operator pos:line="13" pos:column="65">)<pos:position pos:line="13" pos:column="66"/></operator> <name><name pos:line="13" pos:column="67">ai<pos:position pos:line="13" pos:column="69"/></name><operator pos:line="13" pos:column="69">-&gt;<pos:position pos:line="13" pos:column="74"/></operator><name pos:line="13" pos:column="71">ai_addr<pos:position pos:line="13" pos:column="78"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="79"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name></type> <name pos:line="14" pos:column="21">optname<pos:position pos:line="14" pos:column="28"/></name></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>

		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><call><name pos:line="16" pos:column="21">IN_MULTICAST<pos:position pos:line="16" pos:column="33"/></name> <argument_list pos:line="16" pos:column="34">(<argument><expr><call><name pos:line="16" pos:column="35">ntohl<pos:position pos:line="16" pos:column="40"/></name> <argument_list pos:line="16" pos:column="41">(<argument><expr><name><name pos:line="16" pos:column="42">addr<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">-&gt;<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="48">sin_addr<pos:position pos:line="16" pos:column="56"/></name><operator pos:line="16" pos:column="56">.<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="57">s_addr<pos:position pos:line="16" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="66"/></condition><then pos:line="16" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">optname<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">=<pos:position pos:line="17" pos:column="34"/></operator> <name pos:line="17" pos:column="35">IP_MULTICAST_TTL<pos:position pos:line="17" pos:column="51"/></name></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt></block></then>
		<else pos:line="18" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="25">optname<pos:position pos:line="19" pos:column="32"/></name> <operator pos:line="19" pos:column="33">=<pos:position pos:line="19" pos:column="34"/></operator> <name pos:line="19" pos:column="35">IP_TTL<pos:position pos:line="19" pos:column="41"/></name></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt></block></else></if>

		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><call><name pos:line="21" pos:column="21">setsockopt<pos:position pos:line="21" pos:column="31"/></name> <argument_list pos:line="21" pos:column="32">(<argument><expr><name><name pos:line="21" pos:column="33">se<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">data<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">.<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="42">client<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">.<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="49">fd<pos:position pos:line="21" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">IPPROTO_IP<pos:position pos:line="21" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="65">optname<pos:position pos:line="21" pos:column="72"/></name></expr></argument>,
					<argument><expr><operator pos:line="22" pos:column="41">&amp;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="42">network_config_ttl<pos:position pos:line="22" pos:column="60"/></name></expr></argument>,
					<argument><expr><sizeof pos:line="23" pos:column="41">sizeof <argument_list pos:line="23" pos:column="48">(<argument><expr><name pos:line="23" pos:column="49">network_config_ttl<pos:position pos:line="23" pos:column="67"/></name></expr></argument>)<pos:position pos:line="23" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call> <operator pos:line="23" pos:column="70">==<pos:position pos:line="23" pos:column="72"/></operator> <operator pos:line="23" pos:column="73">-<pos:position pos:line="23" pos:column="74"/></operator><literal type="number" pos:line="23" pos:column="74">1<pos:position pos:line="23" pos:column="75"/></literal></expr>)<pos:position pos:line="23" pos:column="76"/></condition><then pos:line="23" pos:column="76">
		<block pos:line="24" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="25" pos:column="25">char<pos:position pos:line="25" pos:column="29"/></name></type> <name><name pos:line="25" pos:column="30">errbuf<pos:position pos:line="25" pos:column="36"/></name><index pos:line="25" pos:column="36">[<expr><literal type="number" pos:line="25" pos:column="37">1024<pos:position pos:line="25" pos:column="41"/></literal></expr>]<pos:position pos:line="25" pos:column="42"/></index></name></decl>;<pos:position pos:line="25" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">ERROR<pos:position pos:line="26" pos:column="30"/></name> <argument_list pos:line="26" pos:column="31">(<argument><expr><literal type="string" pos:line="26" pos:column="32">"setsockopt: %s"<pos:position pos:line="26" pos:column="48"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="27" pos:column="41">sstrerror<pos:position pos:line="27" pos:column="50"/></name> <argument_list pos:line="27" pos:column="51">(<argument><expr><name pos:line="27" pos:column="52">errno<pos:position pos:line="27" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="59">errbuf<pos:position pos:line="27" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="67">sizeof <argument_list pos:line="27" pos:column="74">(<argument><expr><name pos:line="27" pos:column="75">errbuf<pos:position pos:line="27" pos:column="81"/></name></expr></argument>)<pos:position pos:line="27" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="85"/></expr_stmt>
			<return pos:line="28" pos:column="25">return <expr><operator pos:line="28" pos:column="32">(<pos:position pos:line="28" pos:column="33"/></operator><operator pos:line="28" pos:column="33">-<pos:position pos:line="28" pos:column="34"/></operator><literal type="number" pos:line="28" pos:column="34">1<pos:position pos:line="28" pos:column="35"/></literal><operator pos:line="28" pos:column="35">)<pos:position pos:line="28" pos:column="36"/></operator></expr>;<pos:position pos:line="28" pos:column="37"/></return>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
	}<pos:position pos:line="30" pos:column="10"/></block></then>
	<elseif pos:line="31" pos:column="9">else <if pos:line="31" pos:column="14">if <condition pos:line="31" pos:column="17">(<expr><name><name pos:line="31" pos:column="18">ai<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">ai_family<pos:position pos:line="31" pos:column="31"/></name></name> <operator pos:line="31" pos:column="32">==<pos:position pos:line="31" pos:column="34"/></operator> <name pos:line="31" pos:column="35">AF_INET6<pos:position pos:line="31" pos:column="43"/></name></expr>)<pos:position pos:line="31" pos:column="44"/></condition><then pos:line="31" pos:column="44">
	<block pos:line="32" pos:column="9">{
		<comment type="block" pos:line="33" pos:column="17">/* Useful example: http://gsyc.escet.urjc.es/~eva/IPv6-web/examples/mcast.html */</comment>
		<decl_stmt><decl><type><name><name pos:line="34" pos:column="17">struct<pos:position pos:line="34" pos:column="23"/></name> <name pos:line="34" pos:column="24">sockaddr_in6<pos:position pos:line="34" pos:column="36"/></name></name> <modifier pos:line="34" pos:column="37">*<pos:position pos:line="34" pos:column="38"/></modifier></type><name pos:line="34" pos:column="38">addr<pos:position pos:line="34" pos:column="42"/></name> <init pos:line="34" pos:column="43">= <expr><operator pos:line="34" pos:column="45">(<pos:position pos:line="34" pos:column="46"/></operator>struct <name pos:line="34" pos:column="53">sockaddr_in6<pos:position pos:line="34" pos:column="65"/></name> <operator pos:line="34" pos:column="66">*<pos:position pos:line="34" pos:column="67"/></operator><operator pos:line="34" pos:column="67">)<pos:position pos:line="34" pos:column="68"/></operator> <name><name pos:line="34" pos:column="69">ai<pos:position pos:line="34" pos:column="71"/></name><operator pos:line="34" pos:column="71">-&gt;<pos:position pos:line="34" pos:column="76"/></operator><name pos:line="34" pos:column="73">ai_addr<pos:position pos:line="34" pos:column="80"/></name></name></expr></init></decl>;<pos:position pos:line="34" pos:column="81"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">int<pos:position pos:line="35" pos:column="20"/></name></type> <name pos:line="35" pos:column="21">optname<pos:position pos:line="35" pos:column="28"/></name></decl>;<pos:position pos:line="35" pos:column="29"/></decl_stmt>

		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><call><name pos:line="37" pos:column="21">IN6_IS_ADDR_MULTICAST<pos:position pos:line="37" pos:column="42"/></name> <argument_list pos:line="37" pos:column="43">(<argument><expr><operator pos:line="37" pos:column="44">&amp;<pos:position pos:line="37" pos:column="49"/></operator><name><name pos:line="37" pos:column="45">addr<pos:position pos:line="37" pos:column="49"/></name><operator pos:line="37" pos:column="49">-&gt;<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="51">sin6_addr<pos:position pos:line="37" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="62"/></condition><then pos:line="37" pos:column="62">
			<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="25">optname<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">=<pos:position pos:line="38" pos:column="34"/></operator> <name pos:line="38" pos:column="35">IPV6_MULTICAST_HOPS<pos:position pos:line="38" pos:column="54"/></name></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt></block></then>
		<else pos:line="39" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="25">optname<pos:position pos:line="40" pos:column="32"/></name> <operator pos:line="40" pos:column="33">=<pos:position pos:line="40" pos:column="34"/></operator> <name pos:line="40" pos:column="35">IPV6_UNICAST_HOPS<pos:position pos:line="40" pos:column="52"/></name></expr>;<pos:position pos:line="40" pos:column="53"/></expr_stmt></block></else></if>

		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><call><name pos:line="42" pos:column="21">setsockopt<pos:position pos:line="42" pos:column="31"/></name> <argument_list pos:line="42" pos:column="32">(<argument><expr><name><name pos:line="42" pos:column="33">se<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">-&gt;<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="37">data<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">.<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="42">client<pos:position pos:line="42" pos:column="48"/></name><operator pos:line="42" pos:column="48">.<pos:position pos:line="42" pos:column="49"/></operator><name pos:line="42" pos:column="49">fd<pos:position pos:line="42" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="53">IPPROTO_IPV6<pos:position pos:line="42" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="67">optname<pos:position pos:line="42" pos:column="74"/></name></expr></argument>,
					<argument><expr><operator pos:line="43" pos:column="41">&amp;<pos:position pos:line="43" pos:column="46"/></operator><name pos:line="43" pos:column="42">network_config_ttl<pos:position pos:line="43" pos:column="60"/></name></expr></argument>,
					<argument><expr><sizeof pos:line="44" pos:column="41">sizeof <argument_list pos:line="44" pos:column="48">(<argument><expr><name pos:line="44" pos:column="49">network_config_ttl<pos:position pos:line="44" pos:column="67"/></name></expr></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="69"/></argument_list></call> <operator pos:line="44" pos:column="70">==<pos:position pos:line="44" pos:column="72"/></operator> <operator pos:line="44" pos:column="73">-<pos:position pos:line="44" pos:column="74"/></operator><literal type="number" pos:line="44" pos:column="74">1<pos:position pos:line="44" pos:column="75"/></literal></expr>)<pos:position pos:line="44" pos:column="76"/></condition><then pos:line="44" pos:column="76">
		<block pos:line="45" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="46" pos:column="25">char<pos:position pos:line="46" pos:column="29"/></name></type> <name><name pos:line="46" pos:column="30">errbuf<pos:position pos:line="46" pos:column="36"/></name><index pos:line="46" pos:column="36">[<expr><literal type="number" pos:line="46" pos:column="37">1024<pos:position pos:line="46" pos:column="41"/></literal></expr>]<pos:position pos:line="46" pos:column="42"/></index></name></decl>;<pos:position pos:line="46" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="47" pos:column="25">ERROR<pos:position pos:line="47" pos:column="30"/></name> <argument_list pos:line="47" pos:column="31">(<argument><expr><literal type="string" pos:line="47" pos:column="32">"setsockopt: %s"<pos:position pos:line="47" pos:column="48"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="48" pos:column="41">sstrerror<pos:position pos:line="48" pos:column="50"/></name> <argument_list pos:line="48" pos:column="51">(<argument><expr><name pos:line="48" pos:column="52">errno<pos:position pos:line="48" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="59">errbuf<pos:position pos:line="48" pos:column="65"/></name></expr></argument>,
						<argument><expr><sizeof pos:line="49" pos:column="49">sizeof <argument_list pos:line="49" pos:column="56">(<argument><expr><name pos:line="49" pos:column="57">errbuf<pos:position pos:line="49" pos:column="63"/></name></expr></argument>)<pos:position pos:line="49" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="67"/></expr_stmt>
			<return pos:line="50" pos:column="25">return <expr><operator pos:line="50" pos:column="32">(<pos:position pos:line="50" pos:column="33"/></operator><operator pos:line="50" pos:column="33">-<pos:position pos:line="50" pos:column="34"/></operator><literal type="number" pos:line="50" pos:column="34">1<pos:position pos:line="50" pos:column="35"/></literal><operator pos:line="50" pos:column="35">)<pos:position pos:line="50" pos:column="36"/></operator></expr>;<pos:position pos:line="50" pos:column="37"/></return>
		}<pos:position pos:line="51" pos:column="18"/></block></then></if>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if></elseif></if>

	<return pos:line="54" pos:column="9">return <expr><operator pos:line="54" pos:column="16">(<pos:position pos:line="54" pos:column="17"/></operator><literal type="number" pos:line="54" pos:column="17">0<pos:position pos:line="54" pos:column="18"/></literal><operator pos:line="54" pos:column="18">)<pos:position pos:line="54" pos:column="19"/></operator></expr>;<pos:position pos:line="54" pos:column="20"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

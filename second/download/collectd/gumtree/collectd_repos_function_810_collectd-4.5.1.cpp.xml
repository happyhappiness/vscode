<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_810_collectd-4.5.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">MYSQL<pos:position pos:line="1" pos:column="13"/></name> <modifier pos:line="1" pos:column="14">*<pos:position pos:line="1" pos:column="15"/></modifier></type><name pos:line="1" pos:column="15">getconnection<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">MYSQL<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">con<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">int<pos:position pos:line="4" pos:column="19"/></name></type>    <name pos:line="4" pos:column="23">state<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">int<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">wait_for<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><literal type="number" pos:line="6" pos:column="31">0<pos:position pos:line="6" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><name pos:line="7" pos:column="16">int<pos:position pos:line="7" pos:column="19"/></name></type> <name pos:line="7" pos:column="20">wait_increase<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><literal type="number" pos:line="7" pos:column="36">60<pos:position pos:line="7" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">state<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">!=<pos:position pos:line="9" pos:column="21"/></operator> <literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24">
	<block pos:line="10" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">err<pos:position pos:line="11" pos:column="24"/></name></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">(<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">err<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <call><name pos:line="12" pos:column="28">mysql_ping<pos:position pos:line="12" pos:column="38"/></name> <argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">con<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call><operator pos:line="12" pos:column="44">)<pos:position pos:line="12" pos:column="45"/></operator> <operator pos:line="12" pos:column="46">!=<pos:position pos:line="12" pos:column="48"/></operator> <literal type="number" pos:line="12" pos:column="49">0<pos:position pos:line="12" pos:column="50"/></literal></expr>)<pos:position pos:line="12" pos:column="51"/></condition><then pos:line="12" pos:column="51">
		<block pos:line="13" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">WARNING<pos:position pos:line="14" pos:column="32"/></name> <argument_list pos:line="14" pos:column="33">(<argument><expr><literal type="string" pos:line="14" pos:column="34">"mysql_ping failed: %s"<pos:position pos:line="14" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="59">mysql_error<pos:position pos:line="14" pos:column="70"/></name> <argument_list pos:line="14" pos:column="71">(<argument><expr><name pos:line="14" pos:column="72">con<pos:position pos:line="14" pos:column="75"/></name></expr></argument>)<pos:position pos:line="14" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><name pos:line="15" pos:column="25">state<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">=<pos:position pos:line="15" pos:column="32"/></operator> <literal type="number" pos:line="15" pos:column="33">0<pos:position pos:line="15" pos:column="34"/></literal></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></then>
		<else pos:line="17" pos:column="17">else
		<block pos:line="18" pos:column="17">{
			<expr_stmt><expr><name pos:line="19" pos:column="25">state<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">=<pos:position pos:line="19" pos:column="32"/></operator> <literal type="number" pos:line="19" pos:column="33">1<pos:position pos:line="19" pos:column="34"/></literal></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
			<return pos:line="20" pos:column="25">return <expr><operator pos:line="20" pos:column="32">(<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="33">con<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">)<pos:position pos:line="20" pos:column="37"/></operator></expr>;<pos:position pos:line="20" pos:column="38"/></return>
		}<pos:position pos:line="21" pos:column="18"/></block></else></if>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">wait_for<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">&gt;<pos:position pos:line="24" pos:column="26"/></operator> <literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26">
	<block pos:line="25" pos:column="9">{
		<expr_stmt><expr><name pos:line="26" pos:column="17">wait_for<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">-=<pos:position pos:line="26" pos:column="28"/></operator> <name pos:line="26" pos:column="29">interval_g<pos:position pos:line="26" pos:column="39"/></name></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
		<return pos:line="27" pos:column="17">return <expr><operator pos:line="27" pos:column="24">(<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="25">NULL<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">)<pos:position pos:line="27" pos:column="30"/></operator></expr>;<pos:position pos:line="27" pos:column="31"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="30" pos:column="9">wait_for<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="20">wait_increase<pos:position pos:line="30" pos:column="33"/></name></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="31" pos:column="9">wait_increase<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">*=<pos:position pos:line="31" pos:column="25"/></operator> <literal type="number" pos:line="31" pos:column="26">2<pos:position pos:line="31" pos:column="27"/></literal></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">wait_increase<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">&gt;<pos:position pos:line="32" pos:column="31"/></operator> <literal type="number" pos:line="32" pos:column="29">86400<pos:position pos:line="32" pos:column="34"/></literal></expr>)<pos:position pos:line="32" pos:column="35"/></condition><then pos:line="32" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="17">wait_increase<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">=<pos:position pos:line="33" pos:column="32"/></operator> <literal type="number" pos:line="33" pos:column="33">86400<pos:position pos:line="33" pos:column="38"/></literal></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt></block></then></if>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">(<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">con<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <call><name pos:line="35" pos:column="20">mysql_init<pos:position pos:line="35" pos:column="30"/></name> <argument_list pos:line="35" pos:column="31">(<argument><expr><name pos:line="35" pos:column="32">con<pos:position pos:line="35" pos:column="35"/></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call><operator pos:line="35" pos:column="36">)<pos:position pos:line="35" pos:column="37"/></operator> <operator pos:line="35" pos:column="38">==<pos:position pos:line="35" pos:column="40"/></operator> <name pos:line="35" pos:column="41">NULL<pos:position pos:line="35" pos:column="45"/></name></expr>)<pos:position pos:line="35" pos:column="46"/></condition><then pos:line="35" pos:column="46">
	<block pos:line="36" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">ERROR<pos:position pos:line="37" pos:column="22"/></name> <argument_list pos:line="37" pos:column="23">(<argument><expr><literal type="string" pos:line="37" pos:column="24">"mysql_init failed: %s"<pos:position pos:line="37" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="49">mysql_error<pos:position pos:line="37" pos:column="60"/></name> <argument_list pos:line="37" pos:column="61">(<argument><expr><name pos:line="37" pos:column="62">con<pos:position pos:line="37" pos:column="65"/></name></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">state<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <literal type="number" pos:line="38" pos:column="25">0<pos:position pos:line="38" pos:column="26"/></literal></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
		<return pos:line="39" pos:column="17">return <expr><operator pos:line="39" pos:column="24">(<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="25">NULL<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">)<pos:position pos:line="39" pos:column="30"/></operator></expr>;<pos:position pos:line="39" pos:column="31"/></return>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">mysql_real_connect<pos:position pos:line="42" pos:column="31"/></name> <argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">con<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="38">host<pos:position pos:line="42" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="44">user<pos:position pos:line="42" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="50">pass<pos:position pos:line="42" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="56">db<pos:position pos:line="42" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="60">0<pos:position pos:line="42" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="63">NULL<pos:position pos:line="42" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="69">0<pos:position pos:line="42" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="71"/></argument_list></call> <operator pos:line="42" pos:column="72">==<pos:position pos:line="42" pos:column="74"/></operator> <name pos:line="42" pos:column="75">NULL<pos:position pos:line="42" pos:column="79"/></name></expr>)<pos:position pos:line="42" pos:column="80"/></condition><then pos:line="42" pos:column="80">
	<block pos:line="43" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">ERROR<pos:position pos:line="44" pos:column="22"/></name> <argument_list pos:line="44" pos:column="23">(<argument><expr><literal type="string" pos:line="44" pos:column="24">"mysql_real_connect failed: %s"<pos:position pos:line="44" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="57">mysql_error<pos:position pos:line="44" pos:column="68"/></name> <argument_list pos:line="44" pos:column="69">(<argument><expr><name pos:line="44" pos:column="70">con<pos:position pos:line="44" pos:column="73"/></name></expr></argument>)<pos:position pos:line="44" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><name pos:line="45" pos:column="17">state<pos:position pos:line="45" pos:column="22"/></name> <operator pos:line="45" pos:column="23">=<pos:position pos:line="45" pos:column="24"/></operator> <literal type="number" pos:line="45" pos:column="25">0<pos:position pos:line="45" pos:column="26"/></literal></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
		<return pos:line="46" pos:column="17">return <expr><operator pos:line="46" pos:column="24">(<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="25">NULL<pos:position pos:line="46" pos:column="29"/></name><operator pos:line="46" pos:column="29">)<pos:position pos:line="46" pos:column="30"/></operator></expr>;<pos:position pos:line="46" pos:column="31"/></return>
	}<pos:position pos:line="47" pos:column="10"/></block></then>
	<else pos:line="48" pos:column="9">else
	<block pos:line="49" pos:column="9">{
		<expr_stmt><expr><name pos:line="50" pos:column="17">state<pos:position pos:line="50" pos:column="22"/></name> <operator pos:line="50" pos:column="23">=<pos:position pos:line="50" pos:column="24"/></operator> <literal type="number" pos:line="50" pos:column="25">1<pos:position pos:line="50" pos:column="26"/></literal></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="51" pos:column="17">wait_for<pos:position pos:line="51" pos:column="25"/></name> <operator pos:line="51" pos:column="26">=<pos:position pos:line="51" pos:column="27"/></operator> <literal type="number" pos:line="51" pos:column="28">0<pos:position pos:line="51" pos:column="29"/></literal></expr>;<pos:position pos:line="51" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="52" pos:column="17">wait_increase<pos:position pos:line="52" pos:column="30"/></name> <operator pos:line="52" pos:column="31">=<pos:position pos:line="52" pos:column="32"/></operator> <literal type="number" pos:line="52" pos:column="33">60<pos:position pos:line="52" pos:column="35"/></literal></expr>;<pos:position pos:line="52" pos:column="36"/></expr_stmt>
		<return pos:line="53" pos:column="17">return <expr><operator pos:line="53" pos:column="24">(<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="25">con<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">)<pos:position pos:line="53" pos:column="29"/></operator></expr>;<pos:position pos:line="53" pos:column="30"/></return>
	}<pos:position pos:line="54" pos:column="10"/></block></else></if>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_659_collectd-4.5.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">cu_mount_getoptionvalue<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">line<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">keyword<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">r<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">r<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <call><name pos:line="6" pos:column="13">cu_mount_checkoption<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name pos:line="6" pos:column="34">line<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="40">keyword<pos:position pos:line="6" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="49">0<pos:position pos:line="6" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="52"/></expr_stmt>
	<if pos:line="7" pos:column="9">if<condition pos:line="7" pos:column="11">(<expr><name pos:line="7" pos:column="12">r<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">!=<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">NULL<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22"> <block pos:line="7" pos:column="23">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">char<pos:position pos:line="8" pos:column="21"/></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">p<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">r<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">+=<pos:position pos:line="9" pos:column="21"/></operator> <call><name pos:line="9" pos:column="22">strlen<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">keyword<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">p<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <call><name pos:line="10" pos:column="21">strchr<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">r<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="31">','<pos:position pos:line="10" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
		<if pos:line="11" pos:column="17">if<condition pos:line="11" pos:column="19">(<expr><name pos:line="11" pos:column="20">p<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">==<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">NULL<pos:position pos:line="11" pos:column="29"/></name></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30"> <block pos:line="11" pos:column="31">{
			<if pos:line="12" pos:column="25">if<condition pos:line="12" pos:column="27">(<expr><call><name pos:line="12" pos:column="28">strlen<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">r<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call> <operator pos:line="12" pos:column="38">==<pos:position pos:line="12" pos:column="40"/></operator> <literal type="number" pos:line="12" pos:column="41">0<pos:position pos:line="12" pos:column="42"/></literal></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43"> <block pos:line="12" pos:column="44">{
				<return pos:line="13" pos:column="33">return <expr><name pos:line="13" pos:column="40">NULL<pos:position pos:line="13" pos:column="44"/></name></expr>;<pos:position pos:line="13" pos:column="45"/></return>
			}<pos:position pos:line="14" pos:column="26"/></block></then></if>
			<return pos:line="15" pos:column="25">return <expr><call><name pos:line="15" pos:column="32">sstrdup<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">r<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></return>
		}<pos:position pos:line="16" pos:column="18"/></block></then> <else pos:line="16" pos:column="19">else <block pos:line="16" pos:column="24">{
			<decl_stmt><decl><type><name pos:line="17" pos:column="25">char<pos:position pos:line="17" pos:column="29"/></name> <modifier pos:line="17" pos:column="30">*<pos:position pos:line="17" pos:column="31"/></modifier></type><name pos:line="17" pos:column="31">m<pos:position pos:line="17" pos:column="32"/></name></decl>;<pos:position pos:line="17" pos:column="33"/></decl_stmt>
			<if pos:line="18" pos:column="25">if<condition pos:line="18" pos:column="27">(<expr><operator pos:line="18" pos:column="28">(<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">p<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">r<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">)<pos:position pos:line="18" pos:column="33"/></operator> <operator pos:line="18" pos:column="34">==<pos:position pos:line="18" pos:column="36"/></operator> <literal type="number" pos:line="18" pos:column="37">1<pos:position pos:line="18" pos:column="38"/></literal></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39"> <block pos:line="18" pos:column="40">{
				<return pos:line="19" pos:column="33">return <expr><name pos:line="19" pos:column="40">NULL<pos:position pos:line="19" pos:column="44"/></name></expr>;<pos:position pos:line="19" pos:column="45"/></return>
			}<pos:position pos:line="20" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="21" pos:column="25">m<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <operator pos:line="21" pos:column="29">(<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">char<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">*<pos:position pos:line="21" pos:column="36"/></operator><operator pos:line="21" pos:column="36">)<pos:position pos:line="21" pos:column="37"/></operator><call><name pos:line="21" pos:column="37">smalloc<pos:position pos:line="21" pos:column="44"/></name><argument_list pos:line="21" pos:column="44">(<argument><expr><name pos:line="21" pos:column="45">p<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">-<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="47">r<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">+<pos:position pos:line="21" pos:column="49"/></operator><literal type="number" pos:line="21" pos:column="49">1<pos:position pos:line="21" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">sstrncpy<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">m<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">r<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="40">p<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">-<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="42">r<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">+<pos:position pos:line="22" pos:column="44"/></operator><literal type="number" pos:line="22" pos:column="44">1<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
			<return pos:line="23" pos:column="25">return <expr><name pos:line="23" pos:column="32">m<pos:position pos:line="23" pos:column="33"/></name></expr>;<pos:position pos:line="23" pos:column="34"/></return>
		}<pos:position pos:line="24" pos:column="18"/></block></else></if>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
	<return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">r<pos:position pos:line="26" pos:column="17"/></name></expr>;<pos:position pos:line="26" pos:column="18"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

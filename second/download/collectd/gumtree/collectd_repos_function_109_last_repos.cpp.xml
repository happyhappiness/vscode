<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_109_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">free_domains<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">lv_read_state<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">state<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <block pos:line="1" pos:column="55">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name><name pos:line="2" pos:column="7">state<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">-&gt;<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="14">domains<pos:position pos:line="2" pos:column="21"/></name></name></expr>)<pos:position pos:line="2" pos:column="22"/></condition><then pos:line="2" pos:column="22"> <block pos:line="2" pos:column="23">{
    <for pos:line="3" pos:column="5">for <control pos:line="3" pos:column="9">(<init><decl><type><name pos:line="3" pos:column="10">int<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">i<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><literal type="number" pos:line="3" pos:column="18">0<pos:position pos:line="3" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></init> <condition><expr><name pos:line="3" pos:column="21">i<pos:position pos:line="3" pos:column="22"/></name> <operator pos:line="3" pos:column="23">&lt;<pos:position pos:line="3" pos:column="27"/></operator> <name><name pos:line="3" pos:column="25">state<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">-&gt;<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="32">nr_domains<pos:position pos:line="3" pos:column="42"/></name></name></expr>;<pos:position pos:line="3" pos:column="43"/></condition> <incr><expr><operator pos:line="3" pos:column="44">++<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="46">i<pos:position pos:line="3" pos:column="47"/></name></expr></incr>)<pos:position pos:line="3" pos:column="48"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="7">virDomainFree<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name><name pos:line="4" pos:column="21">state<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">-&gt;<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="28">domains<pos:position pos:line="4" pos:column="35"/></name><index pos:line="4" pos:column="35">[<expr><name pos:line="4" pos:column="36">i<pos:position pos:line="4" pos:column="37"/></name></expr>]<pos:position pos:line="4" pos:column="38"/></index></name><operator pos:line="4" pos:column="38">.<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="39">ptr<pos:position pos:line="4" pos:column="42"/></name></expr></argument>)<pos:position pos:line="4" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="44"/></expr_stmt></block></for>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">sfree<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><name><name pos:line="5" pos:column="11">state<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">-&gt;<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="18">domains<pos:position pos:line="5" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="6" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="7" pos:column="3">state<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">-&gt;<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="10">domains<pos:position pos:line="7" pos:column="17"/></name></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">state<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">-&gt;<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="10">nr_domains<pos:position pos:line="8" pos:column="20"/></name></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

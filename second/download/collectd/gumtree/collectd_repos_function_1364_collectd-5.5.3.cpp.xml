<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1364_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">smart_handle_disk<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">dev<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">SkDisk<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">d<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><name pos:line="3" pos:column="15">NULL<pos:position pos:line="3" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">SkBool<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">awake<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">FALSE<pos:position pos:line="4" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">SkBool<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">available<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">FALSE<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">shortname<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">SkSmartParsedData<pos:position pos:line="7" pos:column="26"/></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">spd<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">uint64_t<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">poweron<pos:position pos:line="8" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="21">powercycles<pos:position pos:line="8" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="34">badsectors<pos:position pos:line="8" pos:column="44"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="46">temperature<pos:position pos:line="8" pos:column="57"/></name></decl>;<pos:position pos:line="8" pos:column="58"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">shortname<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">strrchr<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">dev<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="28">'/'<pos:position pos:line="10" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">shortname<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18"> <block type="pseudo"><return pos:line="11" pos:column="19">return;<pos:position pos:line="11" pos:column="26"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="12" pos:column="3">shortname<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">++<pos:position pos:line="12" pos:column="14"/></operator></expr>;<pos:position pos:line="12" pos:column="15"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><call><name pos:line="13" pos:column="7">ignorelist_match<pos:position pos:line="13" pos:column="23"/></name> <argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">ignorelist<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">shortname<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call> <operator pos:line="13" pos:column="48">!=<pos:position pos:line="13" pos:column="50"/></operator> <literal type="number" pos:line="13" pos:column="51">0<pos:position pos:line="13" pos:column="52"/></literal></expr>)<pos:position pos:line="13" pos:column="53"/></condition><then pos:line="13" pos:column="53"> <block pos:line="13" pos:column="54">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">DEBUG<pos:position pos:line="14" pos:column="10"/></name> <argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="string" pos:line="14" pos:column="12">"smart plugin: ignoring %s."<pos:position pos:line="14" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">dev<pos:position pos:line="14" pos:column="45"/></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
    <return pos:line="15" pos:column="5">return;<pos:position pos:line="15" pos:column="12"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">DEBUG<pos:position pos:line="18" pos:column="8"/></name> <argument_list pos:line="18" pos:column="9">(<argument><expr><literal type="string" pos:line="18" pos:column="10">"smart plugin: checking SMART status of %s."<pos:position pos:line="18" pos:column="54"/></literal></expr></argument>,
         <argument><expr><name pos:line="19" pos:column="10">dev<pos:position pos:line="19" pos:column="13"/></name></expr></argument>)<pos:position pos:line="19" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="15"/></expr_stmt>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><call><name pos:line="21" pos:column="7">sk_disk_open<pos:position pos:line="21" pos:column="19"/></name> <argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">dev<pos:position pos:line="21" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="26">&amp;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="27">d<pos:position pos:line="21" pos:column="28"/></name></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></call> <operator pos:line="21" pos:column="30">&lt;<pos:position pos:line="21" pos:column="34"/></operator> <literal type="number" pos:line="21" pos:column="32">0<pos:position pos:line="21" pos:column="33"/></literal></expr>)<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ERROR<pos:position pos:line="23" pos:column="10"/></name> <argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="string" pos:line="23" pos:column="12">"smart plugin: unable to open %s."<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="48">dev<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt>
    <return pos:line="24" pos:column="5">return;<pos:position pos:line="24" pos:column="12"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><call><name pos:line="26" pos:column="7">sk_disk_identify_is_available<pos:position pos:line="26" pos:column="36"/></name> <argument_list pos:line="26" pos:column="37">(<argument><expr><name pos:line="26" pos:column="38">d<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="41">&amp;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="42">available<pos:position pos:line="26" pos:column="51"/></name></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call> <operator pos:line="26" pos:column="53">&lt;<pos:position pos:line="26" pos:column="57"/></operator> <literal type="number" pos:line="26" pos:column="55">0<pos:position pos:line="26" pos:column="56"/></literal> <operator pos:line="26" pos:column="57">||<pos:position pos:line="26" pos:column="59"/></operator> <operator pos:line="26" pos:column="60">!<pos:position pos:line="26" pos:column="61"/></operator><name pos:line="26" pos:column="61">available<pos:position pos:line="26" pos:column="70"/></name></expr>)<pos:position pos:line="26" pos:column="71"/></condition><then pos:line="26" pos:column="71">
  <block pos:line="27" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">DEBUG<pos:position pos:line="28" pos:column="10"/></name> <argument_list pos:line="28" pos:column="11">(<argument><expr><literal type="string" pos:line="28" pos:column="12">"smart plugin: disk %s cannot be identified."<pos:position pos:line="28" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="59">dev<pos:position pos:line="28" pos:column="62"/></name></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt>
    <goto pos:line="29" pos:column="5">goto <name pos:line="29" pos:column="10">end<pos:position pos:line="29" pos:column="13"/></name>;<pos:position pos:line="29" pos:column="14"/></goto>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><call><name pos:line="31" pos:column="7">sk_disk_smart_is_available<pos:position pos:line="31" pos:column="33"/></name> <argument_list pos:line="31" pos:column="34">(<argument><expr><name pos:line="31" pos:column="35">d<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="38">&amp;<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="39">available<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call> <operator pos:line="31" pos:column="50">&lt;<pos:position pos:line="31" pos:column="54"/></operator> <literal type="number" pos:line="31" pos:column="52">0<pos:position pos:line="31" pos:column="53"/></literal> <operator pos:line="31" pos:column="54">||<pos:position pos:line="31" pos:column="56"/></operator> <operator pos:line="31" pos:column="57">!<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="58">available<pos:position pos:line="31" pos:column="67"/></name></expr>)<pos:position pos:line="31" pos:column="68"/></condition><then pos:line="31" pos:column="68">
  <block pos:line="32" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">DEBUG<pos:position pos:line="33" pos:column="10"/></name> <argument_list pos:line="33" pos:column="11">(<argument><expr><literal type="string" pos:line="33" pos:column="12">"smart plugin: disk %s has no SMART support."<pos:position pos:line="33" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="59">dev<pos:position pos:line="33" pos:column="62"/></name></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="64"/></expr_stmt>
    <goto pos:line="34" pos:column="5">goto <name pos:line="34" pos:column="10">end<pos:position pos:line="34" pos:column="13"/></name>;<pos:position pos:line="34" pos:column="14"/></goto>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><call><name pos:line="36" pos:column="7">sk_disk_check_sleep_mode<pos:position pos:line="36" pos:column="31"/></name> <argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">d<pos:position pos:line="36" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="36">&amp;<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="37">awake<pos:position pos:line="36" pos:column="42"/></name></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call> <operator pos:line="36" pos:column="44">&lt;<pos:position pos:line="36" pos:column="48"/></operator> <literal type="number" pos:line="36" pos:column="46">0<pos:position pos:line="36" pos:column="47"/></literal> <operator pos:line="36" pos:column="48">||<pos:position pos:line="36" pos:column="50"/></operator> <operator pos:line="36" pos:column="51">!<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="52">awake<pos:position pos:line="36" pos:column="57"/></name></expr>)<pos:position pos:line="36" pos:column="58"/></condition><then pos:line="36" pos:column="58">
  <block pos:line="37" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">DEBUG<pos:position pos:line="38" pos:column="10"/></name> <argument_list pos:line="38" pos:column="11">(<argument><expr><literal type="string" pos:line="38" pos:column="12">"smart plugin: disk %s is sleeping."<pos:position pos:line="38" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="50">dev<pos:position pos:line="38" pos:column="53"/></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>
    <goto pos:line="39" pos:column="5">goto <name pos:line="39" pos:column="10">end<pos:position pos:line="39" pos:column="13"/></name>;<pos:position pos:line="39" pos:column="14"/></goto>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><call><name pos:line="41" pos:column="7">sk_disk_smart_read_data<pos:position pos:line="41" pos:column="30"/></name> <argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">d<pos:position pos:line="41" pos:column="33"/></name></expr></argument>)<pos:position pos:line="41" pos:column="34"/></argument_list></call> <operator pos:line="41" pos:column="35">&lt;<pos:position pos:line="41" pos:column="39"/></operator> <literal type="number" pos:line="41" pos:column="37">0<pos:position pos:line="41" pos:column="38"/></literal></expr>)<pos:position pos:line="41" pos:column="39"/></condition><then pos:line="41" pos:column="39">
  <block pos:line="42" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">ERROR<pos:position pos:line="43" pos:column="10"/></name> <argument_list pos:line="43" pos:column="11">(<argument><expr><literal type="string" pos:line="43" pos:column="12">"smart plugin: unable to get SMART data for disk %s."<pos:position pos:line="43" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="67">dev<pos:position pos:line="43" pos:column="70"/></name></expr></argument>)<pos:position pos:line="43" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="72"/></expr_stmt>
    <goto pos:line="44" pos:column="5">goto <name pos:line="44" pos:column="10">end<pos:position pos:line="44" pos:column="13"/></name>;<pos:position pos:line="44" pos:column="14"/></goto>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><call><name pos:line="46" pos:column="7">sk_disk_smart_parse<pos:position pos:line="46" pos:column="26"/></name> <argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">d<pos:position pos:line="46" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="31">&amp;<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="32">spd<pos:position pos:line="46" pos:column="35"/></name></expr></argument>)<pos:position pos:line="46" pos:column="36"/></argument_list></call> <operator pos:line="46" pos:column="37">&lt;<pos:position pos:line="46" pos:column="41"/></operator> <literal type="number" pos:line="46" pos:column="39">0<pos:position pos:line="46" pos:column="40"/></literal></expr>)<pos:position pos:line="46" pos:column="41"/></condition><then pos:line="46" pos:column="41">
  <block pos:line="47" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">ERROR<pos:position pos:line="48" pos:column="10"/></name> <argument_list pos:line="48" pos:column="11">(<argument><expr><literal type="string" pos:line="48" pos:column="12">"smart plugin: unable to parse SMART data for disk %s."<pos:position pos:line="48" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="69">dev<pos:position pos:line="48" pos:column="72"/></name></expr></argument>)<pos:position pos:line="48" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="74"/></expr_stmt>
    <goto pos:line="49" pos:column="5">goto <name pos:line="49" pos:column="10">end<pos:position pos:line="49" pos:column="13"/></name>;<pos:position pos:line="49" pos:column="14"/></goto>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="52" pos:column="3">/* Get some specific values */</comment>
  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><call><name pos:line="53" pos:column="7">sk_disk_smart_get_power_on<pos:position pos:line="53" pos:column="33"/></name> <argument_list pos:line="53" pos:column="34">(<argument><expr><name pos:line="53" pos:column="35">d<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="38">&amp;<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="39">poweron<pos:position pos:line="53" pos:column="46"/></name></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call> <operator pos:line="53" pos:column="48">&lt;<pos:position pos:line="53" pos:column="52"/></operator> <literal type="number" pos:line="53" pos:column="50">0<pos:position pos:line="53" pos:column="51"/></literal></expr>)<pos:position pos:line="53" pos:column="52"/></condition><then pos:line="53" pos:column="52">
  <block pos:line="54" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">WARNING<pos:position pos:line="55" pos:column="12"/></name> <argument_list pos:line="55" pos:column="13">(<argument><expr><literal type="string" pos:line="55" pos:column="14">"smart plugin: unable to get milliseconds since power on for %s."<pos:position pos:line="55" pos:column="79"/></literal></expr></argument>,
             <argument><expr><name pos:line="56" pos:column="14">dev<pos:position pos:line="56" pos:column="17"/></name></expr></argument>)<pos:position pos:line="56" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="57" pos:column="4"/></block></then>
  <else pos:line="58" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="5">smart_submit<pos:position pos:line="59" pos:column="17"/></name> <argument_list pos:line="59" pos:column="18">(<argument><expr><name pos:line="59" pos:column="19">shortname<pos:position pos:line="59" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="30">"smart_poweron"<pos:position pos:line="59" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="47">""<pos:position pos:line="59" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="51">poweron<pos:position pos:line="59" pos:column="58"/></name> <operator pos:line="59" pos:column="59">/<pos:position pos:line="59" pos:column="60"/></operator> <literal type="number" pos:line="59" pos:column="61">1000.<pos:position pos:line="59" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="68"/></expr_stmt></block></else></if>

  <if pos:line="61" pos:column="3">if <condition pos:line="61" pos:column="6">(<expr><call><name pos:line="61" pos:column="7">sk_disk_smart_get_power_cycle<pos:position pos:line="61" pos:column="36"/></name> <argument_list pos:line="61" pos:column="37">(<argument><expr><name pos:line="61" pos:column="38">d<pos:position pos:line="61" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="41">&amp;<pos:position pos:line="61" pos:column="46"/></operator><name pos:line="61" pos:column="42">powercycles<pos:position pos:line="61" pos:column="53"/></name></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></call> <operator pos:line="61" pos:column="55">&lt;<pos:position pos:line="61" pos:column="59"/></operator> <literal type="number" pos:line="61" pos:column="57">0<pos:position pos:line="61" pos:column="58"/></literal></expr>)<pos:position pos:line="61" pos:column="59"/></condition><then pos:line="61" pos:column="59">
  <block pos:line="62" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">WARNING<pos:position pos:line="63" pos:column="12"/></name> <argument_list pos:line="63" pos:column="13">(<argument><expr><literal type="string" pos:line="63" pos:column="14">"smart plugin: unable to get number of power cycles for %s."<pos:position pos:line="63" pos:column="74"/></literal></expr></argument>,
             <argument><expr><name pos:line="64" pos:column="14">dev<pos:position pos:line="64" pos:column="17"/></name></expr></argument>)<pos:position pos:line="64" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="65" pos:column="4"/></block></then>
  <else pos:line="66" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="5">smart_submit<pos:position pos:line="67" pos:column="17"/></name> <argument_list pos:line="67" pos:column="18">(<argument><expr><name pos:line="67" pos:column="19">shortname<pos:position pos:line="67" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="30">"smart_powercycles"<pos:position pos:line="67" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="51">""<pos:position pos:line="67" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="55">powercycles<pos:position pos:line="67" pos:column="66"/></name></expr></argument>)<pos:position pos:line="67" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="68"/></expr_stmt></block></else></if>

  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><call><name pos:line="69" pos:column="7">sk_disk_smart_get_bad<pos:position pos:line="69" pos:column="28"/></name> <argument_list pos:line="69" pos:column="29">(<argument><expr><name pos:line="69" pos:column="30">d<pos:position pos:line="69" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="33">&amp;<pos:position pos:line="69" pos:column="38"/></operator><name pos:line="69" pos:column="34">badsectors<pos:position pos:line="69" pos:column="44"/></name></expr></argument>)<pos:position pos:line="69" pos:column="45"/></argument_list></call> <operator pos:line="69" pos:column="46">&lt;<pos:position pos:line="69" pos:column="50"/></operator> <literal type="number" pos:line="69" pos:column="48">0<pos:position pos:line="69" pos:column="49"/></literal></expr>)<pos:position pos:line="69" pos:column="50"/></condition><then pos:line="69" pos:column="50">
  <block pos:line="70" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">WARNING<pos:position pos:line="71" pos:column="12"/></name> <argument_list pos:line="71" pos:column="13">(<argument><expr><literal type="string" pos:line="71" pos:column="14">"smart plugin: unable to get number of bad sectors for %s."<pos:position pos:line="71" pos:column="73"/></literal></expr></argument>,
             <argument><expr><name pos:line="72" pos:column="14">dev<pos:position pos:line="72" pos:column="17"/></name></expr></argument>)<pos:position pos:line="72" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="73" pos:column="4"/></block></then>
  <else pos:line="74" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="5">smart_submit<pos:position pos:line="75" pos:column="17"/></name> <argument_list pos:line="75" pos:column="18">(<argument><expr><name pos:line="75" pos:column="19">shortname<pos:position pos:line="75" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="30">"smart_badsectors"<pos:position pos:line="75" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="50">""<pos:position pos:line="75" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="54">badsectors<pos:position pos:line="75" pos:column="64"/></name></expr></argument>)<pos:position pos:line="75" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="66"/></expr_stmt></block></else></if>

  <if pos:line="77" pos:column="3">if <condition pos:line="77" pos:column="6">(<expr><call><name pos:line="77" pos:column="7">sk_disk_smart_get_temperature<pos:position pos:line="77" pos:column="36"/></name> <argument_list pos:line="77" pos:column="37">(<argument><expr><name pos:line="77" pos:column="38">d<pos:position pos:line="77" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="41">&amp;<pos:position pos:line="77" pos:column="46"/></operator><name pos:line="77" pos:column="42">temperature<pos:position pos:line="77" pos:column="53"/></name></expr></argument>)<pos:position pos:line="77" pos:column="54"/></argument_list></call> <operator pos:line="77" pos:column="55">&lt;<pos:position pos:line="77" pos:column="59"/></operator> <literal type="number" pos:line="77" pos:column="57">0<pos:position pos:line="77" pos:column="58"/></literal></expr>)<pos:position pos:line="77" pos:column="59"/></condition><then pos:line="77" pos:column="59">
  <block pos:line="78" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">WARNING<pos:position pos:line="79" pos:column="12"/></name> <argument_list pos:line="79" pos:column="13">(<argument><expr><literal type="string" pos:line="79" pos:column="14">"smart plugin: unable to get temperature for %s."<pos:position pos:line="79" pos:column="63"/></literal></expr></argument>,
             <argument><expr><name pos:line="80" pos:column="14">dev<pos:position pos:line="80" pos:column="17"/></name></expr></argument>)<pos:position pos:line="80" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="81" pos:column="4"/></block></then>
  <else pos:line="82" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="5">smart_submit<pos:position pos:line="83" pos:column="17"/></name> <argument_list pos:line="83" pos:column="18">(<argument><expr><name pos:line="83" pos:column="19">shortname<pos:position pos:line="83" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="30">"smart_temperature"<pos:position pos:line="83" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="51">""<pos:position pos:line="83" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="55">temperature<pos:position pos:line="83" pos:column="66"/></name> <operator pos:line="83" pos:column="67">/<pos:position pos:line="83" pos:column="68"/></operator> <literal type="number" pos:line="83" pos:column="69">1000.<pos:position pos:line="83" pos:column="74"/></literal> <operator pos:line="83" pos:column="75">-<pos:position pos:line="83" pos:column="76"/></operator> <literal type="number" pos:line="83" pos:column="77">273.15<pos:position pos:line="83" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="85"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="85" pos:column="3">/* Grab all attributes */</comment>
  <if pos:line="86" pos:column="3">if <condition pos:line="86" pos:column="6">(<expr><call><name pos:line="86" pos:column="7">sk_disk_smart_parse_attributes<pos:position pos:line="86" pos:column="37"/></name><argument_list pos:line="86" pos:column="37">(<argument><expr><name pos:line="86" pos:column="38">d<pos:position pos:line="86" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="41">smart_handle_disk_attribute<pos:position pos:line="86" pos:column="68"/></name></expr></argument>,
                                     <argument><expr><operator pos:line="87" pos:column="38">(<pos:position pos:line="87" pos:column="39"/></operator><name pos:line="87" pos:column="39">char<pos:position pos:line="87" pos:column="43"/></name> <operator pos:line="87" pos:column="44">*<pos:position pos:line="87" pos:column="45"/></operator><operator pos:line="87" pos:column="45">)<pos:position pos:line="87" pos:column="46"/></operator><name pos:line="87" pos:column="46">shortname<pos:position pos:line="87" pos:column="55"/></name></expr></argument>)<pos:position pos:line="87" pos:column="56"/></argument_list></call> <operator pos:line="87" pos:column="57">&lt;<pos:position pos:line="87" pos:column="61"/></operator> <literal type="number" pos:line="87" pos:column="59">0<pos:position pos:line="87" pos:column="60"/></literal></expr>)<pos:position pos:line="87" pos:column="61"/></condition><then pos:line="87" pos:column="61">
  <block pos:line="88" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">ERROR<pos:position pos:line="89" pos:column="10"/></name> <argument_list pos:line="89" pos:column="11">(<argument><expr><literal type="string" pos:line="89" pos:column="12">"smart plugin: unable to handle SMART attributes for %s."<pos:position pos:line="89" pos:column="69"/></literal></expr></argument>,
           <argument><expr><name pos:line="90" pos:column="12">dev<pos:position pos:line="90" pos:column="15"/></name></expr></argument>)<pos:position pos:line="90" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="91" pos:column="4"/></block></then></if>

<label><name pos:line="93" pos:column="1">end<pos:position pos:line="93" pos:column="4"/></name>:<pos:position pos:line="93" pos:column="5"/></label>
  <expr_stmt><expr><call><name pos:line="94" pos:column="3">sk_disk_free<pos:position pos:line="94" pos:column="15"/></name><argument_list pos:line="94" pos:column="15">(<argument><expr><name pos:line="94" pos:column="16">d<pos:position pos:line="94" pos:column="17"/></name></expr></argument>)<pos:position pos:line="94" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="19"/></expr_stmt>
}<pos:position pos:line="95" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1369_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">staging_entry_t<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">staging_entry_get<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">host<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="61">/* {{{ */</comment>
                                          <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">name<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="61">const<pos:position pos:line="2" pos:column="66"/></specifier> <name pos:line="2" pos:column="67">char<pos:position pos:line="2" pos:column="71"/></name> <modifier pos:line="2" pos:column="72">*<pos:position pos:line="2" pos:column="73"/></modifier></type><name pos:line="2" pos:column="73">type<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>,
                                          <parameter><decl><type><specifier pos:line="3" pos:column="43">const<pos:position pos:line="3" pos:column="48"/></specifier> <name pos:line="3" pos:column="49">char<pos:position pos:line="3" pos:column="53"/></name> <modifier pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></modifier></type><name pos:line="3" pos:column="55">type_instance<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="4" pos:column="43">int<pos:position pos:line="4" pos:column="46"/></name></type> <name pos:line="4" pos:column="47">values_len<pos:position pos:line="4" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="58"/></parameter_list> <block pos:line="4" pos:column="59">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">key<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><literal type="number" pos:line="5" pos:column="12">2<pos:position pos:line="5" pos:column="13"/></literal> <operator pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></operator> <name pos:line="5" pos:column="16">DATA_MAX_NAME_LEN<pos:position pos:line="5" pos:column="33"/></name></expr>]<pos:position pos:line="5" pos:column="34"/></index></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">staging_entry_t<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">se<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">staging_tree<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">==<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="23">NULL<pos:position pos:line="9" pos:column="27"/></name></expr>)<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">NULL<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">)<pos:position pos:line="10" pos:column="18"/></operator></expr>;<pos:position pos:line="10" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">ssnprintf<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">key<pos:position pos:line="12" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="18">sizeof<argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">key<pos:position pos:line="12" pos:column="28"/></name></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="31">"%s/%s/%s"<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">host<pos:position pos:line="12" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">type<pos:position pos:line="12" pos:column="53"/></name></expr></argument>,
            <argument><expr><ternary><condition><expr><operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">type_instance<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">!=<pos:position pos:line="13" pos:column="30"/></operator> <name pos:line="13" pos:column="31">NULL<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">)<pos:position pos:line="13" pos:column="36"/></operator></expr> ?<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38"> <expr><name pos:line="13" pos:column="39">type_instance<pos:position pos:line="13" pos:column="52"/></name></expr> <pos:position pos:line="13" pos:column="53"/></then><else pos:line="13" pos:column="53">: <expr><literal type="string" pos:line="13" pos:column="55">""<pos:position pos:line="13" pos:column="57"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">se<pos:position pos:line="15" pos:column="5"/></name> <operator pos:line="15" pos:column="6">=<pos:position pos:line="15" pos:column="7"/></operator> <name pos:line="15" pos:column="8">NULL<pos:position pos:line="15" pos:column="12"/></name></expr>;<pos:position pos:line="15" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">status<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">c_avl_get<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">staging_tree<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">key<pos:position pos:line="16" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="41">(<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="42">void<pos:position pos:line="16" pos:column="46"/></name> <operator pos:line="16" pos:column="47">*<pos:position pos:line="16" pos:column="48"/></operator><operator pos:line="16" pos:column="48">)<pos:position pos:line="16" pos:column="49"/></operator><operator pos:line="16" pos:column="49">&amp;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="50">se<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">status<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">==<pos:position pos:line="17" pos:column="16"/></operator> <literal type="number" pos:line="17" pos:column="17">0<pos:position pos:line="17" pos:column="18"/></literal></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">se<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">)<pos:position pos:line="18" pos:column="16"/></operator></expr>;<pos:position pos:line="18" pos:column="17"/></return></block></then></if>

  <comment type="block" pos:line="20" pos:column="3">/* insert new entry */</comment>
  <expr_stmt><expr><name pos:line="21" pos:column="3">se<pos:position pos:line="21" pos:column="5"/></name> <operator pos:line="21" pos:column="6">=<pos:position pos:line="21" pos:column="7"/></operator> <call><name pos:line="21" pos:column="8">calloc<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><literal type="number" pos:line="21" pos:column="15">1<pos:position pos:line="21" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="18">sizeof<argument_list pos:line="21" pos:column="24">(<argument><expr><operator pos:line="21" pos:column="25">*<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">se<pos:position pos:line="21" pos:column="28"/></name></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">se<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">==<pos:position pos:line="22" pos:column="12"/></operator> <name pos:line="22" pos:column="13">NULL<pos:position pos:line="22" pos:column="17"/></name></expr>)<pos:position pos:line="22" pos:column="18"/></condition><then pos:line="22" pos:column="18">
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">NULL<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">)<pos:position pos:line="23" pos:column="18"/></operator></expr>;<pos:position pos:line="23" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">sstrncpy<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name><name pos:line="25" pos:column="12">se<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">key<pos:position pos:line="25" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="21">key<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="26">sizeof<argument_list pos:line="25" pos:column="32">(<argument><expr><name><name pos:line="25" pos:column="33">se<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">key<pos:position pos:line="25" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">se<pos:position pos:line="26" pos:column="5"/></name><operator pos:line="26" pos:column="5">-&gt;<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="7">flags<pos:position pos:line="26" pos:column="12"/></name></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <literal type="number" pos:line="26" pos:column="15">0<pos:position pos:line="26" pos:column="16"/></literal></expr>;<pos:position pos:line="26" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="28" pos:column="3">se<pos:position pos:line="28" pos:column="5"/></name><operator pos:line="28" pos:column="5">-&gt;<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="7">vl<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">.<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">values<pos:position pos:line="28" pos:column="16"/></name></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <operator pos:line="28" pos:column="19">(<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">value_t<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">*<pos:position pos:line="28" pos:column="29"/></operator><operator pos:line="28" pos:column="29">)<pos:position pos:line="28" pos:column="30"/></operator><call><name pos:line="28" pos:column="30">calloc<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(<argument><expr><name pos:line="28" pos:column="37">values_len<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="49">sizeof<argument_list pos:line="28" pos:column="55">(<argument><expr><operator pos:line="28" pos:column="56">*<pos:position pos:line="28" pos:column="57"/></operator><name><name pos:line="28" pos:column="57">se<pos:position pos:line="28" pos:column="59"/></name><operator pos:line="28" pos:column="59">-&gt;<pos:position pos:line="28" pos:column="64"/></operator><name pos:line="28" pos:column="61">vl<pos:position pos:line="28" pos:column="63"/></name><operator pos:line="28" pos:column="63">.<pos:position pos:line="28" pos:column="64"/></operator><name pos:line="28" pos:column="64">values<pos:position pos:line="28" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="73"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name><name pos:line="29" pos:column="7">se<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">vl<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">.<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">values<pos:position pos:line="29" pos:column="20"/></name></name> <operator pos:line="29" pos:column="21">==<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">NULL<pos:position pos:line="29" pos:column="28"/></name></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29"> <block pos:line="29" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">sfree<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><name pos:line="30" pos:column="11">se<pos:position pos:line="30" pos:column="13"/></name></expr></argument>)<pos:position pos:line="30" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="15"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">NULL<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">)<pos:position pos:line="31" pos:column="18"/></operator></expr>;<pos:position pos:line="31" pos:column="19"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">se<pos:position pos:line="33" pos:column="5"/></name><operator pos:line="33" pos:column="5">-&gt;<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="7">vl<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">.<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">values_len<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">values_len<pos:position pos:line="33" pos:column="33"/></name></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="35" pos:column="3">se<pos:position pos:line="35" pos:column="5"/></name><operator pos:line="35" pos:column="5">-&gt;<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="7">vl<pos:position pos:line="35" pos:column="9"/></name><operator pos:line="35" pos:column="9">.<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">time<pos:position pos:line="35" pos:column="14"/></name></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <literal type="number" pos:line="35" pos:column="17">0<pos:position pos:line="35" pos:column="18"/></literal></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="36" pos:column="3">se<pos:position pos:line="36" pos:column="5"/></name><operator pos:line="36" pos:column="5">-&gt;<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="7">vl<pos:position pos:line="36" pos:column="9"/></name><operator pos:line="36" pos:column="9">.<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">interval<pos:position pos:line="36" pos:column="18"/></name></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <literal type="number" pos:line="36" pos:column="21">0<pos:position pos:line="36" pos:column="22"/></literal></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">sstrncpy<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><name><name pos:line="37" pos:column="12">se<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">vl<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">.<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="19">host<pos:position pos:line="37" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="25">host<pos:position pos:line="37" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="31">sizeof<argument_list pos:line="37" pos:column="37">(<argument><expr><name><name pos:line="37" pos:column="38">se<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">-&gt;<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="42">vl<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">.<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="45">host<pos:position pos:line="37" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">sstrncpy<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><name><name pos:line="38" pos:column="12">se<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">vl<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">.<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">plugin<pos:position pos:line="38" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="27">"gmond"<pos:position pos:line="38" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="36">sizeof<argument_list pos:line="38" pos:column="42">(<argument><expr><name><name pos:line="38" pos:column="43">se<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">-&gt;<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="47">vl<pos:position pos:line="38" pos:column="49"/></name><operator pos:line="38" pos:column="49">.<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="50">plugin<pos:position pos:line="38" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">sstrncpy<pos:position pos:line="39" pos:column="11"/></name><argument_list pos:line="39" pos:column="11">(<argument><expr><name><name pos:line="39" pos:column="12">se<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">-&gt;<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="16">vl<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">.<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="19">type<pos:position pos:line="39" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="25">type<pos:position pos:line="39" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="31">sizeof<argument_list pos:line="39" pos:column="37">(<argument><expr><name><name pos:line="39" pos:column="38">se<pos:position pos:line="39" pos:column="40"/></name><operator pos:line="39" pos:column="40">-&gt;<pos:position pos:line="39" pos:column="45"/></operator><name pos:line="39" pos:column="42">vl<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">.<pos:position pos:line="39" pos:column="45"/></operator><name pos:line="39" pos:column="45">type<pos:position pos:line="39" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="52"/></expr_stmt>
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name pos:line="40" pos:column="7">type_instance<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">!=<pos:position pos:line="40" pos:column="23"/></operator> <name pos:line="40" pos:column="24">NULL<pos:position pos:line="40" pos:column="28"/></name></expr>)<pos:position pos:line="40" pos:column="29"/></condition><then pos:line="40" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="5">sstrncpy<pos:position pos:line="41" pos:column="13"/></name><argument_list pos:line="41" pos:column="13">(<argument><expr><name><name pos:line="41" pos:column="14">se<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">vl<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">.<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">type_instance<pos:position pos:line="41" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="36">type_instance<pos:position pos:line="41" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="51">sizeof<argument_list pos:line="41" pos:column="57">(<argument><expr><name><name pos:line="41" pos:column="58">se<pos:position pos:line="41" pos:column="60"/></name><operator pos:line="41" pos:column="60">-&gt;<pos:position pos:line="41" pos:column="65"/></operator><name pos:line="41" pos:column="62">vl<pos:position pos:line="41" pos:column="64"/></name><operator pos:line="41" pos:column="64">.<pos:position pos:line="41" pos:column="65"/></operator><name pos:line="41" pos:column="65">type_instance<pos:position pos:line="41" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="81"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="43" pos:column="3">status<pos:position pos:line="43" pos:column="9"/></name> <operator pos:line="43" pos:column="10">=<pos:position pos:line="43" pos:column="11"/></operator> <call><name pos:line="43" pos:column="12">c_avl_insert<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name pos:line="43" pos:column="25">staging_tree<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="39">se<pos:position pos:line="43" pos:column="41"/></name><operator pos:line="43" pos:column="41">-&gt;<pos:position pos:line="43" pos:column="46"/></operator><name pos:line="43" pos:column="43">key<pos:position pos:line="43" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="48">se<pos:position pos:line="43" pos:column="50"/></name></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">status<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">!=<pos:position pos:line="44" pos:column="16"/></operator> <literal type="number" pos:line="44" pos:column="17">0<pos:position pos:line="44" pos:column="18"/></literal></expr>)<pos:position pos:line="44" pos:column="19"/></condition><then pos:line="44" pos:column="19"> <block pos:line="44" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">ERROR<pos:position pos:line="45" pos:column="10"/></name><argument_list pos:line="45" pos:column="10">(<argument><expr><literal type="string" pos:line="45" pos:column="11">"gmond plugin: c_avl_insert failed."<pos:position pos:line="45" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">sfree<pos:position pos:line="46" pos:column="10"/></name><argument_list pos:line="46" pos:column="10">(<argument><expr><name><name pos:line="46" pos:column="11">se<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">-&gt;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="15">vl<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">.<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">values<pos:position pos:line="46" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">sfree<pos:position pos:line="47" pos:column="10"/></name><argument_list pos:line="47" pos:column="10">(<argument><expr><name pos:line="47" pos:column="11">se<pos:position pos:line="47" pos:column="13"/></name></expr></argument>)<pos:position pos:line="47" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="15"/></expr_stmt>
    <return pos:line="48" pos:column="5">return <expr><operator pos:line="48" pos:column="12">(<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="13">NULL<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">)<pos:position pos:line="48" pos:column="18"/></operator></expr>;<pos:position pos:line="48" pos:column="19"/></return>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <return pos:line="51" pos:column="3">return <expr><operator pos:line="51" pos:column="10">(<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="11">se<pos:position pos:line="51" pos:column="13"/></name><operator pos:line="51" pos:column="13">)<pos:position pos:line="51" pos:column="14"/></operator></expr>;<pos:position pos:line="51" pos:column="15"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_429_collectd-4.3.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_range<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">string<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">range_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">range<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">min_ptr<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">max_ptr<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">string<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">==<pos:position pos:line="6" pos:column="23"/></operator> <literal type="char" pos:line="6" pos:column="24">'@'<pos:position pos:line="6" pos:column="27"/></literal></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28">
	<block pos:line="7" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="8" pos:column="17">range<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">invert<pos:position pos:line="8" pos:column="30"/></name></name> <operator pos:line="8" pos:column="31">=<pos:position pos:line="8" pos:column="32"/></operator> <literal type="number" pos:line="8" pos:column="33">1<pos:position pos:line="8" pos:column="34"/></literal></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">string<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">++<pos:position pos:line="9" pos:column="25"/></operator></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">max_ptr<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <call><name pos:line="12" pos:column="19">strchr<pos:position pos:line="12" pos:column="25"/></name> <argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">string<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="12" pos:column="35">':'<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">max_ptr<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">==<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29">
	<block pos:line="14" pos:column="9">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">min_ptr<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <name pos:line="15" pos:column="27">NULL<pos:position pos:line="15" pos:column="31"/></name></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">max_ptr<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">string<pos:position pos:line="16" pos:column="33"/></name></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then>
	<else pos:line="18" pos:column="9">else
	<block pos:line="19" pos:column="9">{
		<expr_stmt><expr><name pos:line="20" pos:column="17">min_ptr<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">string<pos:position pos:line="20" pos:column="33"/></name></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="21" pos:column="17">*<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">max_ptr<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <literal type="char" pos:line="21" pos:column="28">'\0'<pos:position pos:line="21" pos:column="32"/></literal></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">max_ptr<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">++<pos:position pos:line="22" pos:column="26"/></operator></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">assert<pos:position pos:line="25" pos:column="15"/></name> <argument_list pos:line="25" pos:column="16">(<argument><expr><name pos:line="25" pos:column="17">max_ptr<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">!=<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="28">NULL<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>

	<comment type="block" pos:line="27" pos:column="9">/* `10' == `0:10' */</comment>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">min_ptr<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">==<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">NULL<pos:position pos:line="28" pos:column="28"/></name></expr>)<pos:position pos:line="28" pos:column="29"/></condition><then pos:line="28" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="17">range<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">min<pos:position pos:line="29" pos:column="27"/></name></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <literal type="number" pos:line="29" pos:column="30">0.0<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt></block></then>
	<comment type="block" pos:line="30" pos:column="9">/* :10 == ~:10 == -inf:10 */</comment>
	<elseif pos:line="31" pos:column="9">else <if pos:line="31" pos:column="14">if <condition pos:line="31" pos:column="17">(<expr><operator pos:line="31" pos:column="18">(<pos:position pos:line="31" pos:column="19"/></operator><operator pos:line="31" pos:column="19">*<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">min_ptr<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">==<pos:position pos:line="31" pos:column="30"/></operator> <literal type="char" pos:line="31" pos:column="31">'\0'<pos:position pos:line="31" pos:column="35"/></literal><operator pos:line="31" pos:column="35">)<pos:position pos:line="31" pos:column="36"/></operator> <operator pos:line="31" pos:column="37">||<pos:position pos:line="31" pos:column="39"/></operator> <operator pos:line="31" pos:column="40">(<pos:position pos:line="31" pos:column="41"/></operator><operator pos:line="31" pos:column="41">*<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="42">min_ptr<pos:position pos:line="31" pos:column="49"/></name> <operator pos:line="31" pos:column="50">==<pos:position pos:line="31" pos:column="52"/></operator> <literal type="char" pos:line="31" pos:column="53">'~'<pos:position pos:line="31" pos:column="56"/></literal><operator pos:line="31" pos:column="56">)<pos:position pos:line="31" pos:column="57"/></operator></expr>)<pos:position pos:line="31" pos:column="58"/></condition><then pos:line="31" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="17">range<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">min<pos:position pos:line="32" pos:column="27"/></name></name> <operator pos:line="32" pos:column="28">=<pos:position pos:line="32" pos:column="29"/></operator> <name pos:line="32" pos:column="30">NAN<pos:position pos:line="32" pos:column="33"/></name></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt></block></then></if></elseif>
	<else pos:line="33" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="17">range<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">min<pos:position pos:line="34" pos:column="27"/></name></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <call><name pos:line="34" pos:column="30">atof<pos:position pos:line="34" pos:column="34"/></name> <argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">min_ptr<pos:position pos:line="34" pos:column="43"/></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt></block></else></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">(<pos:position pos:line="36" pos:column="14"/></operator><operator pos:line="36" pos:column="14">*<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">max_ptr<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">==<pos:position pos:line="36" pos:column="25"/></operator> <literal type="char" pos:line="36" pos:column="26">'\0'<pos:position pos:line="36" pos:column="30"/></literal><operator pos:line="36" pos:column="30">)<pos:position pos:line="36" pos:column="31"/></operator> <operator pos:line="36" pos:column="32">||<pos:position pos:line="36" pos:column="34"/></operator> <operator pos:line="36" pos:column="35">(<pos:position pos:line="36" pos:column="36"/></operator><operator pos:line="36" pos:column="36">*<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="37">max_ptr<pos:position pos:line="36" pos:column="44"/></name> <operator pos:line="36" pos:column="45">==<pos:position pos:line="36" pos:column="47"/></operator> <literal type="char" pos:line="36" pos:column="48">'~'<pos:position pos:line="36" pos:column="51"/></literal><operator pos:line="36" pos:column="51">)<pos:position pos:line="36" pos:column="52"/></operator></expr>)<pos:position pos:line="36" pos:column="53"/></condition><then pos:line="36" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="17">range<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">-&gt;<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="24">max<pos:position pos:line="37" pos:column="27"/></name></name> <operator pos:line="37" pos:column="28">=<pos:position pos:line="37" pos:column="29"/></operator> <name pos:line="37" pos:column="30">NAN<pos:position pos:line="37" pos:column="33"/></name></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt></block></then>
	<else pos:line="38" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="17">range<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">max<pos:position pos:line="39" pos:column="27"/></name></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <call><name pos:line="39" pos:column="30">atof<pos:position pos:line="39" pos:column="34"/></name> <argument_list pos:line="39" pos:column="35">(<argument><expr><name pos:line="39" pos:column="36">max_ptr<pos:position pos:line="39" pos:column="43"/></name></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt></block></else></if>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

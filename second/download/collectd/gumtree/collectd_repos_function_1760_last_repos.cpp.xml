<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1760_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">riemann_event_t<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type>
<name pos:line="2" pos:column="1">wrr_value_to_event<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name><name pos:line="2" pos:column="20">struct<pos:position pos:line="2" pos:column="26"/></name> <name pos:line="2" pos:column="27">riemann_host<pos:position pos:line="2" pos:column="39"/></name></name> <specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">host<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="53">/* {{{ */</comment>
                   <parameter><decl><type><name pos:line="3" pos:column="20">data_set_t<pos:position pos:line="3" pos:column="30"/></name> <specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">ds<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="42">value_list_t<pos:position pos:line="3" pos:column="54"/></name> <specifier pos:line="3" pos:column="55">const<pos:position pos:line="3" pos:column="60"/></specifier> <modifier pos:line="3" pos:column="61">*<pos:position pos:line="3" pos:column="62"/></modifier></type><name pos:line="3" pos:column="62">vl<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="66">size_t<pos:position pos:line="3" pos:column="72"/></name></type> <name pos:line="3" pos:column="73">index<pos:position pos:line="3" pos:column="78"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="4" pos:column="20">gauge_t<pos:position pos:line="4" pos:column="27"/></name> <specifier pos:line="4" pos:column="28">const<pos:position pos:line="4" pos:column="33"/></specifier> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">rates<pos:position pos:line="4" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="42">int<pos:position pos:line="4" pos:column="45"/></name></type> <name pos:line="4" pos:column="46">status<pos:position pos:line="4" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="53"/></parameter_list> <block pos:line="4" pos:column="54">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">riemann_event_t<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">event<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">name_buffer<pos:position pos:line="6" pos:column="19"/></name><index pos:line="6" pos:column="19">[<expr><literal type="number" pos:line="6" pos:column="20">5<pos:position pos:line="6" pos:column="21"/></literal> <operator pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="24">DATA_MAX_NAME_LEN<pos:position pos:line="6" pos:column="41"/></name></expr>]<pos:position pos:line="6" pos:column="42"/></index></name></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">service_buffer<pos:position pos:line="7" pos:column="22"/></name><index pos:line="7" pos:column="22">[<expr><literal type="number" pos:line="7" pos:column="23">6<pos:position pos:line="7" pos:column="24"/></literal> <operator pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">DATA_MAX_NAME_LEN<pos:position pos:line="7" pos:column="44"/></name></expr>]<pos:position pos:line="7" pos:column="45"/></index></name></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">event<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">riemann_event_new<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">()<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">event<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">==<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21"> <block pos:line="11" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"write_riemann plugin: riemann_event_new() failed."<pos:position pos:line="12" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">NULL<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">format_name<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><name pos:line="16" pos:column="15">name_buffer<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="28">sizeof<argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">name_buffer<pos:position pos:line="16" pos:column="46"/></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></sizeof></expr></argument>,
              <comment type="block" pos:line="17" pos:column="15">/* host = */</comment> <argument><expr><literal type="string" pos:line="17" pos:column="28">""<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="32">vl<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">plugin<pos:position pos:line="17" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="44">vl<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">plugin_instance<pos:position pos:line="17" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="65">vl<pos:position pos:line="17" pos:column="67"/></name><operator pos:line="17" pos:column="67">-&gt;<pos:position pos:line="17" pos:column="72"/></operator><name pos:line="17" pos:column="69">type<pos:position pos:line="17" pos:column="73"/></name></name></expr></argument>,
              <argument><expr><name><name pos:line="18" pos:column="15">vl<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">type_instance<pos:position pos:line="18" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name><name pos:line="19" pos:column="7">host<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">always_append_ds<pos:position pos:line="19" pos:column="29"/></name></name> <operator pos:line="19" pos:column="30">||<pos:position pos:line="19" pos:column="32"/></operator> <operator pos:line="19" pos:column="33">(<pos:position pos:line="19" pos:column="34"/></operator><name><name pos:line="19" pos:column="34">ds<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">ds_num<pos:position pos:line="19" pos:column="44"/></name></name> <operator pos:line="19" pos:column="45">&gt;<pos:position pos:line="19" pos:column="49"/></operator> <literal type="number" pos:line="19" pos:column="47">1<pos:position pos:line="19" pos:column="48"/></literal><operator pos:line="19" pos:column="48">)<pos:position pos:line="19" pos:column="49"/></operator></expr>)<pos:position pos:line="19" pos:column="50"/></condition><then pos:line="19" pos:column="50"> <block pos:line="19" pos:column="51">{
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">host<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">event_service_prefix<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">==<pos:position pos:line="20" pos:column="38"/></operator> <name pos:line="20" pos:column="39">NULL<pos:position pos:line="20" pos:column="43"/></name></expr>)<pos:position pos:line="20" pos:column="44"/></condition><then pos:line="20" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="7">snprintf<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">service_buffer<pos:position pos:line="21" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="32">sizeof<argument_list pos:line="21" pos:column="38">(<argument><expr><name pos:line="21" pos:column="39">service_buffer<pos:position pos:line="21" pos:column="53"/></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="56">"%s/%s"<pos:position pos:line="21" pos:column="63"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="65">&amp;<pos:position pos:line="21" pos:column="70"/></operator><name><name pos:line="21" pos:column="66">name_buffer<pos:position pos:line="21" pos:column="77"/></name><index pos:line="21" pos:column="77">[<expr><literal type="number" pos:line="21" pos:column="78">1<pos:position pos:line="21" pos:column="79"/></literal></expr>]<pos:position pos:line="21" pos:column="80"/></index></name></expr></argument>,
               <argument><expr><name><name pos:line="22" pos:column="16">ds<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">ds<pos:position pos:line="22" pos:column="22"/></name><index pos:line="22" pos:column="22">[<expr><name pos:line="22" pos:column="23">index<pos:position pos:line="22" pos:column="28"/></name></expr>]<pos:position pos:line="22" pos:column="29"/></index></name><operator pos:line="22" pos:column="29">.<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">name<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt></block></then>
    <else pos:line="23" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="7">snprintf<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">service_buffer<pos:position pos:line="24" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="32">sizeof<argument_list pos:line="24" pos:column="38">(<argument><expr><name pos:line="24" pos:column="39">service_buffer<pos:position pos:line="24" pos:column="53"/></name></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="56">"%s%s/%s"<pos:position pos:line="24" pos:column="65"/></literal></expr></argument>,
               <argument><expr><name><name pos:line="25" pos:column="16">host<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">event_service_prefix<pos:position pos:line="25" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="44">&amp;<pos:position pos:line="25" pos:column="49"/></operator><name><name pos:line="25" pos:column="45">name_buffer<pos:position pos:line="25" pos:column="56"/></name><index pos:line="25" pos:column="56">[<expr><literal type="number" pos:line="25" pos:column="57">1<pos:position pos:line="25" pos:column="58"/></literal></expr>]<pos:position pos:line="25" pos:column="59"/></index></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="61">ds<pos:position pos:line="25" pos:column="63"/></name><operator pos:line="25" pos:column="63">-&gt;<pos:position pos:line="25" pos:column="68"/></operator><name pos:line="25" pos:column="65">ds<pos:position pos:line="25" pos:column="67"/></name><index pos:line="25" pos:column="67">[<expr><name pos:line="25" pos:column="68">index<pos:position pos:line="25" pos:column="73"/></name></expr>]<pos:position pos:line="25" pos:column="74"/></index></name><operator pos:line="25" pos:column="74">.<pos:position pos:line="25" pos:column="75"/></operator><name pos:line="25" pos:column="75">name<pos:position pos:line="25" pos:column="79"/></name></expr></argument>)<pos:position pos:line="25" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="81"/></expr_stmt></block></else></if>
  }<pos:position pos:line="26" pos:column="4"/></block></then> <else pos:line="26" pos:column="5">else <block pos:line="26" pos:column="10">{
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">host<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">event_service_prefix<pos:position pos:line="27" pos:column="35"/></name></name> <operator pos:line="27" pos:column="36">==<pos:position pos:line="27" pos:column="38"/></operator> <name pos:line="27" pos:column="39">NULL<pos:position pos:line="27" pos:column="43"/></name></expr>)<pos:position pos:line="27" pos:column="44"/></condition><then pos:line="27" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="7">sstrncpy<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">service_buffer<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="32">&amp;<pos:position pos:line="28" pos:column="37"/></operator><name><name pos:line="28" pos:column="33">name_buffer<pos:position pos:line="28" pos:column="44"/></name><index pos:line="28" pos:column="44">[<expr><literal type="number" pos:line="28" pos:column="45">1<pos:position pos:line="28" pos:column="46"/></literal></expr>]<pos:position pos:line="28" pos:column="47"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="49">sizeof<argument_list pos:line="28" pos:column="55">(<argument><expr><name pos:line="28" pos:column="56">service_buffer<pos:position pos:line="28" pos:column="70"/></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="73"/></expr_stmt></block></then>
    <else pos:line="29" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="7">snprintf<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><name pos:line="30" pos:column="16">service_buffer<pos:position pos:line="30" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="32">sizeof<argument_list pos:line="30" pos:column="38">(<argument><expr><name pos:line="30" pos:column="39">service_buffer<pos:position pos:line="30" pos:column="53"/></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="56">"%s%s"<pos:position pos:line="30" pos:column="62"/></literal></expr></argument>,
               <argument><expr><name><name pos:line="31" pos:column="16">host<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">event_service_prefix<pos:position pos:line="31" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="44">&amp;<pos:position pos:line="31" pos:column="49"/></operator><name><name pos:line="31" pos:column="45">name_buffer<pos:position pos:line="31" pos:column="56"/></name><index pos:line="31" pos:column="56">[<expr><literal type="number" pos:line="31" pos:column="57">1<pos:position pos:line="31" pos:column="58"/></literal></expr>]<pos:position pos:line="31" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="61"/></expr_stmt></block></else></if>
  }<pos:position pos:line="32" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">riemann_event_set<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(
      <argument><expr><name pos:line="35" pos:column="7">event<pos:position pos:line="35" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="14">RIEMANN_EVENT_FIELD_HOST<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="40">vl<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">-&gt;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="44">host<pos:position pos:line="35" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">RIEMANN_EVENT_FIELD_TIME<pos:position pos:line="35" pos:column="74"/></name></expr></argument>,
      <argument><expr><operator pos:line="36" pos:column="7">(<pos:position pos:line="36" pos:column="8"/></operator><name pos:line="36" pos:column="8">int64_t<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">)<pos:position pos:line="36" pos:column="16"/></operator><call><name pos:line="36" pos:column="16">CDTIME_T_TO_TIME_T<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name><name pos:line="36" pos:column="35">vl<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">-&gt;<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="39">time<pos:position pos:line="36" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="36" pos:column="46">RIEMANN_EVENT_FIELD_TTL<pos:position pos:line="36" pos:column="69"/></name></expr></argument>,
      <argument><expr><operator pos:line="37" pos:column="7">(<pos:position pos:line="37" pos:column="8"/></operator><name pos:line="37" pos:column="8">float<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">)<pos:position pos:line="37" pos:column="14"/></operator><call><name pos:line="37" pos:column="14">CDTIME_T_TO_DOUBLE<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name><name pos:line="37" pos:column="33">vl<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">-&gt;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="37">interval<pos:position pos:line="37" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call> <operator pos:line="37" pos:column="47">*<pos:position pos:line="37" pos:column="48"/></operator> <name><name pos:line="37" pos:column="49">host<pos:position pos:line="37" pos:column="53"/></name><operator pos:line="37" pos:column="53">-&gt;<pos:position pos:line="37" pos:column="58"/></operator><name pos:line="37" pos:column="55">ttl_factor<pos:position pos:line="37" pos:column="65"/></name></name></expr></argument>,
      <argument><expr><name pos:line="38" pos:column="7">RIEMANN_EVENT_FIELD_STRING_ATTRIBUTES<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="46">"plugin"<pos:position pos:line="38" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="56">vl<pos:position pos:line="38" pos:column="58"/></name><operator pos:line="38" pos:column="58">-&gt;<pos:position pos:line="38" pos:column="63"/></operator><name pos:line="38" pos:column="60">plugin<pos:position pos:line="38" pos:column="66"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="68">"type"<pos:position pos:line="38" pos:column="74"/></literal></expr></argument>,
      <argument><expr><name><name pos:line="39" pos:column="7">vl<pos:position pos:line="39" pos:column="9"/></name><operator pos:line="39" pos:column="9">-&gt;<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="11">type<pos:position pos:line="39" pos:column="15"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="17">"ds_name"<pos:position pos:line="39" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="28">ds<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">ds<pos:position pos:line="39" pos:column="34"/></name><index pos:line="39" pos:column="34">[<expr><name pos:line="39" pos:column="35">index<pos:position pos:line="39" pos:column="40"/></name></expr>]<pos:position pos:line="39" pos:column="41"/></index></name><operator pos:line="39" pos:column="41">.<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="42">name<pos:position pos:line="39" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="48">NULL<pos:position pos:line="39" pos:column="52"/></name></expr></argument>,
      <argument><expr><name pos:line="40" pos:column="7">RIEMANN_EVENT_FIELD_SERVICE<pos:position pos:line="40" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="36">service_buffer<pos:position pos:line="40" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="52">RIEMANN_EVENT_FIELD_NONE<pos:position pos:line="40" pos:column="76"/></name></expr></argument>)<pos:position pos:line="40" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="78"/></expr_stmt>

<cpp:if pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">if<pos:position pos:line="42" pos:column="4"/></cpp:directive> <expr><name pos:line="42" pos:column="5">RCC_VERSION_NUMBER<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">&gt;=<pos:position pos:line="42" pos:column="29"/></operator> <literal type="number" pos:line="42" pos:column="27">0x010A00<pos:position pos:line="42" pos:column="35"/></literal></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">riemann_event_set<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">event<pos:position pos:line="43" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="28">RIEMANN_EVENT_FIELD_TIME_MICROS<pos:position pos:line="43" pos:column="59"/></name></expr></argument>,
                    <argument><expr><operator pos:line="44" pos:column="21">(<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">int64_t<pos:position pos:line="44" pos:column="29"/></name><operator pos:line="44" pos:column="29">)<pos:position pos:line="44" pos:column="30"/></operator><call><name pos:line="44" pos:column="30">CDTIME_T_TO_US<pos:position pos:line="44" pos:column="44"/></name><argument_list pos:line="44" pos:column="44">(<argument><expr><name><name pos:line="44" pos:column="45">vl<pos:position pos:line="44" pos:column="47"/></name><operator pos:line="44" pos:column="47">-&gt;<pos:position pos:line="44" pos:column="52"/></operator><name pos:line="44" pos:column="49">time<pos:position pos:line="44" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name><name pos:line="47" pos:column="7">host<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">-&gt;<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="13">check_thresholds<pos:position pos:line="47" pos:column="29"/></name></name></expr>)<pos:position pos:line="47" pos:column="30"/></condition><then pos:line="47" pos:column="30"> <block pos:line="47" pos:column="31">{
    <decl_stmt><decl><type><specifier pos:line="48" pos:column="5">const<pos:position pos:line="48" pos:column="10"/></specifier> <name pos:line="48" pos:column="11">char<pos:position pos:line="48" pos:column="15"/></name> <modifier pos:line="48" pos:column="16">*<pos:position pos:line="48" pos:column="17"/></modifier></type><name pos:line="48" pos:column="17">state<pos:position pos:line="48" pos:column="22"/></name> <init pos:line="48" pos:column="23">= <expr><name pos:line="48" pos:column="25">NULL<pos:position pos:line="48" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="48" pos:column="30"/></decl_stmt>

    <switch pos:line="50" pos:column="5">switch <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">status<pos:position pos:line="50" pos:column="19"/></name></expr>)<pos:position pos:line="50" pos:column="20"/></condition> <block pos:line="50" pos:column="21">{
    <case pos:line="51" pos:column="5">case <expr><name pos:line="51" pos:column="10">STATE_OKAY<pos:position pos:line="51" pos:column="20"/></name></expr>:<pos:position pos:line="51" pos:column="21"/></case>
      <expr_stmt><expr><name pos:line="52" pos:column="7">state<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">=<pos:position pos:line="52" pos:column="14"/></operator> <literal type="string" pos:line="52" pos:column="15">"ok"<pos:position pos:line="52" pos:column="19"/></literal></expr>;<pos:position pos:line="52" pos:column="20"/></expr_stmt>
      <break pos:line="53" pos:column="7">break;<pos:position pos:line="53" pos:column="13"/></break>
    <case pos:line="54" pos:column="5">case <expr><name pos:line="54" pos:column="10">STATE_ERROR<pos:position pos:line="54" pos:column="21"/></name></expr>:<pos:position pos:line="54" pos:column="22"/></case>
      <expr_stmt><expr><name pos:line="55" pos:column="7">state<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <literal type="string" pos:line="55" pos:column="15">"critical"<pos:position pos:line="55" pos:column="25"/></literal></expr>;<pos:position pos:line="55" pos:column="26"/></expr_stmt>
      <break pos:line="56" pos:column="7">break;<pos:position pos:line="56" pos:column="13"/></break>
    <case pos:line="57" pos:column="5">case <expr><name pos:line="57" pos:column="10">STATE_WARNING<pos:position pos:line="57" pos:column="23"/></name></expr>:<pos:position pos:line="57" pos:column="24"/></case>
      <expr_stmt><expr><name pos:line="58" pos:column="7">state<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <literal type="string" pos:line="58" pos:column="15">"warning"<pos:position pos:line="58" pos:column="24"/></literal></expr>;<pos:position pos:line="58" pos:column="25"/></expr_stmt>
      <break pos:line="59" pos:column="7">break;<pos:position pos:line="59" pos:column="13"/></break>
    <case pos:line="60" pos:column="5">case <expr><name pos:line="60" pos:column="10">STATE_MISSING<pos:position pos:line="60" pos:column="23"/></name></expr>:<pos:position pos:line="60" pos:column="24"/></case>
      <expr_stmt><expr><name pos:line="61" pos:column="7">state<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">=<pos:position pos:line="61" pos:column="14"/></operator> <literal type="string" pos:line="61" pos:column="15">"unknown"<pos:position pos:line="61" pos:column="24"/></literal></expr>;<pos:position pos:line="61" pos:column="25"/></expr_stmt>
      <break pos:line="62" pos:column="7">break;<pos:position pos:line="62" pos:column="13"/></break>
    }<pos:position pos:line="63" pos:column="6"/></block></switch>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name pos:line="64" pos:column="9">state<pos:position pos:line="64" pos:column="14"/></name></expr>)<pos:position pos:line="64" pos:column="15"/></condition><then pos:line="64" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="7">riemann_event_set<pos:position pos:line="65" pos:column="24"/></name><argument_list pos:line="65" pos:column="24">(<argument><expr><name pos:line="65" pos:column="25">event<pos:position pos:line="65" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="32">RIEMANN_EVENT_FIELD_STATE<pos:position pos:line="65" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="59">state<pos:position pos:line="65" pos:column="64"/></name></expr></argument>,
                        <argument><expr><name pos:line="66" pos:column="25">RIEMANN_EVENT_FIELD_NONE<pos:position pos:line="66" pos:column="49"/></name></expr></argument>)<pos:position pos:line="66" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="51"/></expr_stmt></block></then></if>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if>

  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><name><name pos:line="69" pos:column="7">vl<pos:position pos:line="69" pos:column="9"/></name><operator pos:line="69" pos:column="9">-&gt;<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="11">plugin_instance<pos:position pos:line="69" pos:column="26"/></name><index pos:line="69" pos:column="26">[<expr><literal type="number" pos:line="69" pos:column="27">0<pos:position pos:line="69" pos:column="28"/></literal></expr>]<pos:position pos:line="69" pos:column="29"/></index></name> <operator pos:line="69" pos:column="30">!=<pos:position pos:line="69" pos:column="32"/></operator> <literal type="number" pos:line="69" pos:column="33">0<pos:position pos:line="69" pos:column="34"/></literal></expr>)<pos:position pos:line="69" pos:column="35"/></condition><then pos:line="69" pos:column="35">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="5">riemann_event_string_attribute_add<pos:position pos:line="70" pos:column="39"/></name><argument_list pos:line="70" pos:column="39">(<argument><expr><name pos:line="70" pos:column="40">event<pos:position pos:line="70" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="47">"plugin_instance"<pos:position pos:line="70" pos:column="64"/></literal></expr></argument>,
                                       <argument><expr><name><name pos:line="71" pos:column="40">vl<pos:position pos:line="71" pos:column="42"/></name><operator pos:line="71" pos:column="42">-&gt;<pos:position pos:line="71" pos:column="47"/></operator><name pos:line="71" pos:column="44">plugin_instance<pos:position pos:line="71" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="61"/></expr_stmt></block></then></if>
  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><name><name pos:line="72" pos:column="7">vl<pos:position pos:line="72" pos:column="9"/></name><operator pos:line="72" pos:column="9">-&gt;<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="11">type_instance<pos:position pos:line="72" pos:column="24"/></name><index pos:line="72" pos:column="24">[<expr><literal type="number" pos:line="72" pos:column="25">0<pos:position pos:line="72" pos:column="26"/></literal></expr>]<pos:position pos:line="72" pos:column="27"/></index></name> <operator pos:line="72" pos:column="28">!=<pos:position pos:line="72" pos:column="30"/></operator> <literal type="number" pos:line="72" pos:column="31">0<pos:position pos:line="72" pos:column="32"/></literal></expr>)<pos:position pos:line="72" pos:column="33"/></condition><then pos:line="72" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="5">riemann_event_string_attribute_add<pos:position pos:line="73" pos:column="39"/></name><argument_list pos:line="73" pos:column="39">(<argument><expr><name pos:line="73" pos:column="40">event<pos:position pos:line="73" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="47">"type_instance"<pos:position pos:line="73" pos:column="62"/></literal></expr></argument>,
                                       <argument><expr><name><name pos:line="74" pos:column="40">vl<pos:position pos:line="74" pos:column="42"/></name><operator pos:line="74" pos:column="42">-&gt;<pos:position pos:line="74" pos:column="47"/></operator><name pos:line="74" pos:column="44">type_instance<pos:position pos:line="74" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="59"/></expr_stmt></block></then></if>

  <if pos:line="76" pos:column="3">if <condition pos:line="76" pos:column="6">(<expr><operator pos:line="76" pos:column="7">(<pos:position pos:line="76" pos:column="8"/></operator><name><name pos:line="76" pos:column="8">ds<pos:position pos:line="76" pos:column="10"/></name><operator pos:line="76" pos:column="10">-&gt;<pos:position pos:line="76" pos:column="15"/></operator><name pos:line="76" pos:column="12">ds<pos:position pos:line="76" pos:column="14"/></name><index pos:line="76" pos:column="14">[<expr><name pos:line="76" pos:column="15">index<pos:position pos:line="76" pos:column="20"/></name></expr>]<pos:position pos:line="76" pos:column="21"/></index></name><operator pos:line="76" pos:column="21">.<pos:position pos:line="76" pos:column="22"/></operator><name pos:line="76" pos:column="22">type<pos:position pos:line="76" pos:column="26"/></name> <operator pos:line="76" pos:column="27">!=<pos:position pos:line="76" pos:column="29"/></operator> <name pos:line="76" pos:column="30">DS_TYPE_GAUGE<pos:position pos:line="76" pos:column="43"/></name><operator pos:line="76" pos:column="43">)<pos:position pos:line="76" pos:column="44"/></operator> <operator pos:line="76" pos:column="45">&amp;&amp;<pos:position pos:line="76" pos:column="55"/></operator> <operator pos:line="76" pos:column="48">(<pos:position pos:line="76" pos:column="49"/></operator><name pos:line="76" pos:column="49">rates<pos:position pos:line="76" pos:column="54"/></name> <operator pos:line="76" pos:column="55">!=<pos:position pos:line="76" pos:column="57"/></operator> <name pos:line="76" pos:column="58">NULL<pos:position pos:line="76" pos:column="62"/></name><operator pos:line="76" pos:column="62">)<pos:position pos:line="76" pos:column="63"/></operator></expr>)<pos:position pos:line="76" pos:column="64"/></condition><then pos:line="76" pos:column="64"> <block pos:line="76" pos:column="65">{
    <decl_stmt><decl><type><name pos:line="77" pos:column="5">char<pos:position pos:line="77" pos:column="9"/></name></type> <name><name pos:line="77" pos:column="10">ds_type<pos:position pos:line="77" pos:column="17"/></name><index pos:line="77" pos:column="17">[<expr><name pos:line="77" pos:column="18">DATA_MAX_NAME_LEN<pos:position pos:line="77" pos:column="35"/></name></expr>]<pos:position pos:line="77" pos:column="36"/></index></name></decl>;<pos:position pos:line="77" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="79" pos:column="5">snprintf<pos:position pos:line="79" pos:column="13"/></name><argument_list pos:line="79" pos:column="13">(<argument><expr><name pos:line="79" pos:column="14">ds_type<pos:position pos:line="79" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="23">sizeof<argument_list pos:line="79" pos:column="29">(<argument><expr><name pos:line="79" pos:column="30">ds_type<pos:position pos:line="79" pos:column="37"/></name></expr></argument>)<pos:position pos:line="79" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="40">"%s:rate"<pos:position pos:line="79" pos:column="49"/></literal></expr></argument>,
             <argument><expr><call><name pos:line="80" pos:column="14">DS_TYPE_TO_STRING<pos:position pos:line="80" pos:column="31"/></name><argument_list pos:line="80" pos:column="31">(<argument><expr><name><name pos:line="80" pos:column="32">ds<pos:position pos:line="80" pos:column="34"/></name><operator pos:line="80" pos:column="34">-&gt;<pos:position pos:line="80" pos:column="39"/></operator><name pos:line="80" pos:column="36">ds<pos:position pos:line="80" pos:column="38"/></name><index pos:line="80" pos:column="38">[<expr><name pos:line="80" pos:column="39">index<pos:position pos:line="80" pos:column="44"/></name></expr>]<pos:position pos:line="80" pos:column="45"/></index></name><operator pos:line="80" pos:column="45">.<pos:position pos:line="80" pos:column="46"/></operator><name pos:line="80" pos:column="46">type<pos:position pos:line="80" pos:column="50"/></name></expr></argument>)<pos:position pos:line="80" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">riemann_event_string_attribute_add<pos:position pos:line="81" pos:column="39"/></name><argument_list pos:line="81" pos:column="39">(<argument><expr><name pos:line="81" pos:column="40">event<pos:position pos:line="81" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="47">"ds_type"<pos:position pos:line="81" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="58">ds_type<pos:position pos:line="81" pos:column="65"/></name></expr></argument>)<pos:position pos:line="81" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="67"/></expr_stmt>
  }<pos:position pos:line="82" pos:column="4"/></block></then> <else pos:line="82" pos:column="5">else <block pos:line="82" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">riemann_event_string_attribute_add<pos:position pos:line="83" pos:column="39"/></name><argument_list pos:line="83" pos:column="39">(<argument><expr><name pos:line="83" pos:column="40">event<pos:position pos:line="83" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="47">"ds_type"<pos:position pos:line="83" pos:column="56"/></literal></expr></argument>,
                                       <argument><expr><call><name pos:line="84" pos:column="40">DS_TYPE_TO_STRING<pos:position pos:line="84" pos:column="57"/></name><argument_list pos:line="84" pos:column="57">(<argument><expr><name><name pos:line="84" pos:column="58">ds<pos:position pos:line="84" pos:column="60"/></name><operator pos:line="84" pos:column="60">-&gt;<pos:position pos:line="84" pos:column="65"/></operator><name pos:line="84" pos:column="62">ds<pos:position pos:line="84" pos:column="64"/></name><index pos:line="84" pos:column="64">[<expr><name pos:line="84" pos:column="65">index<pos:position pos:line="84" pos:column="70"/></name></expr>]<pos:position pos:line="84" pos:column="71"/></index></name><operator pos:line="84" pos:column="71">.<pos:position pos:line="84" pos:column="72"/></operator><name pos:line="84" pos:column="72">type<pos:position pos:line="84" pos:column="76"/></name></expr></argument>)<pos:position pos:line="84" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="79"/></expr_stmt>
  }<pos:position pos:line="85" pos:column="4"/></block></else></if>

  <block pos:line="87" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="88" pos:column="5">char<pos:position pos:line="88" pos:column="9"/></name></type> <name><name pos:line="88" pos:column="10">ds_index<pos:position pos:line="88" pos:column="18"/></name><index pos:line="88" pos:column="18">[<expr><name pos:line="88" pos:column="19">DATA_MAX_NAME_LEN<pos:position pos:line="88" pos:column="36"/></name></expr>]<pos:position pos:line="88" pos:column="37"/></index></name></decl>;<pos:position pos:line="88" pos:column="38"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="90" pos:column="5">snprintf<pos:position pos:line="90" pos:column="13"/></name><argument_list pos:line="90" pos:column="13">(<argument><expr><name pos:line="90" pos:column="14">ds_index<pos:position pos:line="90" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="90" pos:column="24">sizeof<argument_list pos:line="90" pos:column="30">(<argument><expr><name pos:line="90" pos:column="31">ds_index<pos:position pos:line="90" pos:column="39"/></name></expr></argument>)<pos:position pos:line="90" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="42">"%zu"<pos:position pos:line="90" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="49">index<pos:position pos:line="90" pos:column="54"/></name></expr></argument>)<pos:position pos:line="90" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">riemann_event_string_attribute_add<pos:position pos:line="91" pos:column="39"/></name><argument_list pos:line="91" pos:column="39">(<argument><expr><name pos:line="91" pos:column="40">event<pos:position pos:line="91" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="47">"ds_index"<pos:position pos:line="91" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="59">ds_index<pos:position pos:line="91" pos:column="67"/></name></expr></argument>)<pos:position pos:line="91" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="69"/></expr_stmt>
  }<pos:position pos:line="92" pos:column="4"/></block>

  <for pos:line="94" pos:column="3">for <control pos:line="94" pos:column="7">(<init><expr><name pos:line="94" pos:column="8">i<pos:position pos:line="94" pos:column="9"/></name> <operator pos:line="94" pos:column="10">=<pos:position pos:line="94" pos:column="11"/></operator> <literal type="number" pos:line="94" pos:column="12">0<pos:position pos:line="94" pos:column="13"/></literal></expr>;<pos:position pos:line="94" pos:column="14"/></init> <condition><expr><name pos:line="94" pos:column="15">i<pos:position pos:line="94" pos:column="16"/></name> <operator pos:line="94" pos:column="17">&lt;<pos:position pos:line="94" pos:column="21"/></operator> <name pos:line="94" pos:column="19">riemann_attrs_num<pos:position pos:line="94" pos:column="36"/></name></expr>;<pos:position pos:line="94" pos:column="37"/></condition> <incr><expr><name pos:line="94" pos:column="38">i<pos:position pos:line="94" pos:column="39"/></name> <operator pos:line="94" pos:column="40">+=<pos:position pos:line="94" pos:column="42"/></operator> <literal type="number" pos:line="94" pos:column="43">2<pos:position pos:line="94" pos:column="44"/></literal></expr></incr>)<pos:position pos:line="94" pos:column="45"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="95" pos:column="5">riemann_event_string_attribute_add<pos:position pos:line="95" pos:column="39"/></name><argument_list pos:line="95" pos:column="39">(<argument><expr><name pos:line="95" pos:column="40">event<pos:position pos:line="95" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="47">riemann_attrs<pos:position pos:line="95" pos:column="60"/></name><index pos:line="95" pos:column="60">[<expr><name pos:line="95" pos:column="61">i<pos:position pos:line="95" pos:column="62"/></name></expr>]<pos:position pos:line="95" pos:column="63"/></index></name></expr></argument>,
                                       <argument><expr><name><name pos:line="96" pos:column="40">riemann_attrs<pos:position pos:line="96" pos:column="53"/></name><index pos:line="96" pos:column="53">[<expr><name pos:line="96" pos:column="54">i<pos:position pos:line="96" pos:column="55"/></name> <operator pos:line="96" pos:column="56">+<pos:position pos:line="96" pos:column="57"/></operator> <literal type="number" pos:line="96" pos:column="58">1<pos:position pos:line="96" pos:column="59"/></literal></expr>]<pos:position pos:line="96" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="96" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="62"/></expr_stmt></block></for>

  <for pos:line="98" pos:column="3">for <control pos:line="98" pos:column="7">(<init><expr><name pos:line="98" pos:column="8">i<pos:position pos:line="98" pos:column="9"/></name> <operator pos:line="98" pos:column="10">=<pos:position pos:line="98" pos:column="11"/></operator> <literal type="number" pos:line="98" pos:column="12">0<pos:position pos:line="98" pos:column="13"/></literal></expr>;<pos:position pos:line="98" pos:column="14"/></init> <condition><expr><name pos:line="98" pos:column="15">i<pos:position pos:line="98" pos:column="16"/></name> <operator pos:line="98" pos:column="17">&lt;<pos:position pos:line="98" pos:column="21"/></operator> <name pos:line="98" pos:column="19">riemann_tags_num<pos:position pos:line="98" pos:column="35"/></name></expr>;<pos:position pos:line="98" pos:column="36"/></condition> <incr><expr><name pos:line="98" pos:column="37">i<pos:position pos:line="98" pos:column="38"/></name><operator pos:line="98" pos:column="38">++<pos:position pos:line="98" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="98" pos:column="41"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="5">riemann_event_tag_add<pos:position pos:line="99" pos:column="26"/></name><argument_list pos:line="99" pos:column="26">(<argument><expr><name pos:line="99" pos:column="27">event<pos:position pos:line="99" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="34">riemann_tags<pos:position pos:line="99" pos:column="46"/></name><index pos:line="99" pos:column="46">[<expr><name pos:line="99" pos:column="47">i<pos:position pos:line="99" pos:column="48"/></name></expr>]<pos:position pos:line="99" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="99" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="51"/></expr_stmt></block></for>

  <if pos:line="101" pos:column="3">if <condition pos:line="101" pos:column="6">(<expr><name><name pos:line="101" pos:column="7">ds<pos:position pos:line="101" pos:column="9"/></name><operator pos:line="101" pos:column="9">-&gt;<pos:position pos:line="101" pos:column="14"/></operator><name pos:line="101" pos:column="11">ds<pos:position pos:line="101" pos:column="13"/></name><index pos:line="101" pos:column="13">[<expr><name pos:line="101" pos:column="14">index<pos:position pos:line="101" pos:column="19"/></name></expr>]<pos:position pos:line="101" pos:column="20"/></index></name><operator pos:line="101" pos:column="20">.<pos:position pos:line="101" pos:column="21"/></operator><name pos:line="101" pos:column="21">type<pos:position pos:line="101" pos:column="25"/></name> <operator pos:line="101" pos:column="26">==<pos:position pos:line="101" pos:column="28"/></operator> <name pos:line="101" pos:column="29">DS_TYPE_GAUGE<pos:position pos:line="101" pos:column="42"/></name></expr>)<pos:position pos:line="101" pos:column="43"/></condition><then pos:line="101" pos:column="43"> <block pos:line="101" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="102" pos:column="5">riemann_event_set<pos:position pos:line="102" pos:column="22"/></name><argument_list pos:line="102" pos:column="22">(<argument><expr><name pos:line="102" pos:column="23">event<pos:position pos:line="102" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="30">RIEMANN_EVENT_FIELD_METRIC_D<pos:position pos:line="102" pos:column="58"/></name></expr></argument>,
                      <argument><expr><operator pos:line="103" pos:column="23">(<pos:position pos:line="103" pos:column="24"/></operator><name pos:line="103" pos:column="24">double<pos:position pos:line="103" pos:column="30"/></name><operator pos:line="103" pos:column="30">)<pos:position pos:line="103" pos:column="31"/></operator><name><name pos:line="103" pos:column="31">vl<pos:position pos:line="103" pos:column="33"/></name><operator pos:line="103" pos:column="33">-&gt;<pos:position pos:line="103" pos:column="38"/></operator><name pos:line="103" pos:column="35">values<pos:position pos:line="103" pos:column="41"/></name><index pos:line="103" pos:column="41">[<expr><name pos:line="103" pos:column="42">index<pos:position pos:line="103" pos:column="47"/></name></expr>]<pos:position pos:line="103" pos:column="48"/></index></name><operator pos:line="103" pos:column="48">.<pos:position pos:line="103" pos:column="49"/></operator><name pos:line="103" pos:column="49">gauge<pos:position pos:line="103" pos:column="54"/></name></expr></argument>,
                      <argument><expr><name pos:line="104" pos:column="23">RIEMANN_EVENT_FIELD_NONE<pos:position pos:line="104" pos:column="47"/></name></expr></argument>)<pos:position pos:line="104" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="105" pos:column="4"/></block></then> <elseif pos:line="105" pos:column="5">else <if pos:line="105" pos:column="10">if <condition pos:line="105" pos:column="13">(<expr><name pos:line="105" pos:column="14">rates<pos:position pos:line="105" pos:column="19"/></name> <operator pos:line="105" pos:column="20">!=<pos:position pos:line="105" pos:column="22"/></operator> <name pos:line="105" pos:column="23">NULL<pos:position pos:line="105" pos:column="27"/></name></expr>)<pos:position pos:line="105" pos:column="28"/></condition><then pos:line="105" pos:column="28"> <block pos:line="105" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="106" pos:column="5">riemann_event_set<pos:position pos:line="106" pos:column="22"/></name><argument_list pos:line="106" pos:column="22">(<argument><expr><name pos:line="106" pos:column="23">event<pos:position pos:line="106" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="30">RIEMANN_EVENT_FIELD_METRIC_D<pos:position pos:line="106" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="60">(<pos:position pos:line="106" pos:column="61"/></operator><name pos:line="106" pos:column="61">double<pos:position pos:line="106" pos:column="67"/></name><operator pos:line="106" pos:column="67">)<pos:position pos:line="106" pos:column="68"/></operator><name><name pos:line="106" pos:column="68">rates<pos:position pos:line="106" pos:column="73"/></name><index pos:line="106" pos:column="73">[<expr><name pos:line="106" pos:column="74">index<pos:position pos:line="106" pos:column="79"/></name></expr>]<pos:position pos:line="106" pos:column="80"/></index></name></expr></argument>,
                      <argument><expr><name pos:line="107" pos:column="23">RIEMANN_EVENT_FIELD_NONE<pos:position pos:line="107" pos:column="47"/></name></expr></argument>)<pos:position pos:line="107" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="108" pos:column="4"/></block></then></if></elseif> <else pos:line="108" pos:column="5">else <block pos:line="108" pos:column="10">{
    <decl_stmt><decl><type><name pos:line="109" pos:column="5">int64_t<pos:position pos:line="109" pos:column="12"/></name></type> <name pos:line="109" pos:column="13">metric<pos:position pos:line="109" pos:column="19"/></name></decl>;<pos:position pos:line="109" pos:column="20"/></decl_stmt>

    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><name><name pos:line="111" pos:column="9">ds<pos:position pos:line="111" pos:column="11"/></name><operator pos:line="111" pos:column="11">-&gt;<pos:position pos:line="111" pos:column="16"/></operator><name pos:line="111" pos:column="13">ds<pos:position pos:line="111" pos:column="15"/></name><index pos:line="111" pos:column="15">[<expr><name pos:line="111" pos:column="16">index<pos:position pos:line="111" pos:column="21"/></name></expr>]<pos:position pos:line="111" pos:column="22"/></index></name><operator pos:line="111" pos:column="22">.<pos:position pos:line="111" pos:column="23"/></operator><name pos:line="111" pos:column="23">type<pos:position pos:line="111" pos:column="27"/></name> <operator pos:line="111" pos:column="28">==<pos:position pos:line="111" pos:column="30"/></operator> <name pos:line="111" pos:column="31">DS_TYPE_DERIVE<pos:position pos:line="111" pos:column="45"/></name></expr>)<pos:position pos:line="111" pos:column="46"/></condition><then pos:line="111" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><name pos:line="112" pos:column="7">metric<pos:position pos:line="112" pos:column="13"/></name> <operator pos:line="112" pos:column="14">=<pos:position pos:line="112" pos:column="15"/></operator> <operator pos:line="112" pos:column="16">(<pos:position pos:line="112" pos:column="17"/></operator><name pos:line="112" pos:column="17">int64_t<pos:position pos:line="112" pos:column="24"/></name><operator pos:line="112" pos:column="24">)<pos:position pos:line="112" pos:column="25"/></operator><name><name pos:line="112" pos:column="25">vl<pos:position pos:line="112" pos:column="27"/></name><operator pos:line="112" pos:column="27">-&gt;<pos:position pos:line="112" pos:column="32"/></operator><name pos:line="112" pos:column="29">values<pos:position pos:line="112" pos:column="35"/></name><index pos:line="112" pos:column="35">[<expr><name pos:line="112" pos:column="36">index<pos:position pos:line="112" pos:column="41"/></name></expr>]<pos:position pos:line="112" pos:column="42"/></index></name><operator pos:line="112" pos:column="42">.<pos:position pos:line="112" pos:column="43"/></operator><name pos:line="112" pos:column="43">derive<pos:position pos:line="112" pos:column="49"/></name></expr>;<pos:position pos:line="112" pos:column="50"/></expr_stmt></block></then>
    <elseif pos:line="113" pos:column="5">else <if pos:line="113" pos:column="10">if <condition pos:line="113" pos:column="13">(<expr><name><name pos:line="113" pos:column="14">ds<pos:position pos:line="113" pos:column="16"/></name><operator pos:line="113" pos:column="16">-&gt;<pos:position pos:line="113" pos:column="21"/></operator><name pos:line="113" pos:column="18">ds<pos:position pos:line="113" pos:column="20"/></name><index pos:line="113" pos:column="20">[<expr><name pos:line="113" pos:column="21">index<pos:position pos:line="113" pos:column="26"/></name></expr>]<pos:position pos:line="113" pos:column="27"/></index></name><operator pos:line="113" pos:column="27">.<pos:position pos:line="113" pos:column="28"/></operator><name pos:line="113" pos:column="28">type<pos:position pos:line="113" pos:column="32"/></name> <operator pos:line="113" pos:column="33">==<pos:position pos:line="113" pos:column="35"/></operator> <name pos:line="113" pos:column="36">DS_TYPE_ABSOLUTE<pos:position pos:line="113" pos:column="52"/></name></expr>)<pos:position pos:line="113" pos:column="53"/></condition><then pos:line="113" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="114" pos:column="7">metric<pos:position pos:line="114" pos:column="13"/></name> <operator pos:line="114" pos:column="14">=<pos:position pos:line="114" pos:column="15"/></operator> <operator pos:line="114" pos:column="16">(<pos:position pos:line="114" pos:column="17"/></operator><name pos:line="114" pos:column="17">int64_t<pos:position pos:line="114" pos:column="24"/></name><operator pos:line="114" pos:column="24">)<pos:position pos:line="114" pos:column="25"/></operator><name><name pos:line="114" pos:column="25">vl<pos:position pos:line="114" pos:column="27"/></name><operator pos:line="114" pos:column="27">-&gt;<pos:position pos:line="114" pos:column="32"/></operator><name pos:line="114" pos:column="29">values<pos:position pos:line="114" pos:column="35"/></name><index pos:line="114" pos:column="35">[<expr><name pos:line="114" pos:column="36">index<pos:position pos:line="114" pos:column="41"/></name></expr>]<pos:position pos:line="114" pos:column="42"/></index></name><operator pos:line="114" pos:column="42">.<pos:position pos:line="114" pos:column="43"/></operator><name pos:line="114" pos:column="43">absolute<pos:position pos:line="114" pos:column="51"/></name></expr>;<pos:position pos:line="114" pos:column="52"/></expr_stmt></block></then></if></elseif>
    <else pos:line="115" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="116" pos:column="7">metric<pos:position pos:line="116" pos:column="13"/></name> <operator pos:line="116" pos:column="14">=<pos:position pos:line="116" pos:column="15"/></operator> <operator pos:line="116" pos:column="16">(<pos:position pos:line="116" pos:column="17"/></operator><name pos:line="116" pos:column="17">int64_t<pos:position pos:line="116" pos:column="24"/></name><operator pos:line="116" pos:column="24">)<pos:position pos:line="116" pos:column="25"/></operator><name><name pos:line="116" pos:column="25">vl<pos:position pos:line="116" pos:column="27"/></name><operator pos:line="116" pos:column="27">-&gt;<pos:position pos:line="116" pos:column="32"/></operator><name pos:line="116" pos:column="29">values<pos:position pos:line="116" pos:column="35"/></name><index pos:line="116" pos:column="35">[<expr><name pos:line="116" pos:column="36">index<pos:position pos:line="116" pos:column="41"/></name></expr>]<pos:position pos:line="116" pos:column="42"/></index></name><operator pos:line="116" pos:column="42">.<pos:position pos:line="116" pos:column="43"/></operator><name pos:line="116" pos:column="43">counter<pos:position pos:line="116" pos:column="50"/></name></expr>;<pos:position pos:line="116" pos:column="51"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="118" pos:column="5">riemann_event_set<pos:position pos:line="118" pos:column="22"/></name><argument_list pos:line="118" pos:column="22">(<argument><expr><name pos:line="118" pos:column="23">event<pos:position pos:line="118" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="30">RIEMANN_EVENT_FIELD_METRIC_S64<pos:position pos:line="118" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="118" pos:column="62">(<pos:position pos:line="118" pos:column="63"/></operator><name pos:line="118" pos:column="63">int64_t<pos:position pos:line="118" pos:column="70"/></name><operator pos:line="118" pos:column="70">)<pos:position pos:line="118" pos:column="71"/></operator><name pos:line="118" pos:column="71">metric<pos:position pos:line="118" pos:column="77"/></name></expr></argument>,
                      <argument><expr><name pos:line="119" pos:column="23">RIEMANN_EVENT_FIELD_NONE<pos:position pos:line="119" pos:column="47"/></name></expr></argument>)<pos:position pos:line="119" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="120" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="122" pos:column="3">DEBUG<pos:position pos:line="122" pos:column="8"/></name><argument_list pos:line="122" pos:column="8">(<argument><expr><literal type="string" pos:line="122" pos:column="9">"write_riemann plugin: Successfully created message for metric: "<pos:position pos:line="122" pos:column="74"/></literal>
        <literal type="string" pos:line="123" pos:column="9">"host = \"%s\", service = \"%s\""<pos:position pos:line="123" pos:column="42"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="124" pos:column="9">event<pos:position pos:line="124" pos:column="14"/></name><operator pos:line="124" pos:column="14">-&gt;<pos:position pos:line="124" pos:column="19"/></operator><name pos:line="124" pos:column="16">host<pos:position pos:line="124" pos:column="20"/></name></name></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="22">event<pos:position pos:line="124" pos:column="27"/></name><operator pos:line="124" pos:column="27">-&gt;<pos:position pos:line="124" pos:column="32"/></operator><name pos:line="124" pos:column="29">service<pos:position pos:line="124" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="38"/></expr_stmt>
  <return pos:line="125" pos:column="3">return <expr><name pos:line="125" pos:column="10">event<pos:position pos:line="125" pos:column="15"/></name></expr>;<pos:position pos:line="125" pos:column="16"/></return>
}<pos:position pos:line="126" pos:column="2"/></block></function></unit>

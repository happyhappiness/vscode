<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_207_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">count_chars<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">str<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">chr<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list> <block pos:line="1" pos:column="52">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">count<pos:position pos:line="2" pos:column="12"/></name> <init pos:line="2" pos:column="13">= <expr><literal type="number" pos:line="2" pos:column="15">0<pos:position pos:line="2" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="17"/></decl_stmt>

  <while pos:line="4" pos:column="3">while <condition pos:line="4" pos:column="9">(<expr><operator pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">str<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">!=<pos:position pos:line="4" pos:column="17"/></operator> <literal type="char" pos:line="4" pos:column="18">'\0'<pos:position pos:line="4" pos:column="22"/></literal></expr>)<pos:position pos:line="4" pos:column="23"/></condition> <block pos:line="4" pos:column="24">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">str<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">==<pos:position pos:line="5" pos:column="16"/></operator> <name pos:line="5" pos:column="17">chr<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21"> <block pos:line="5" pos:column="22">{
      <expr_stmt><expr><name pos:line="6" pos:column="7">count<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">++<pos:position pos:line="6" pos:column="14"/></operator></expr>;<pos:position pos:line="6" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="8" pos:column="5">str<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">++<pos:position pos:line="8" pos:column="10"/></operator></expr>;<pos:position pos:line="8" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></while>

  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">count<pos:position pos:line="11" pos:column="15"/></name></expr>;<pos:position pos:line="11" pos:column="16"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

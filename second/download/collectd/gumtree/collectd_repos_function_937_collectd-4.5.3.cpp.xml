<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_937_collectd-4.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">uuid_get_from_hal<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">void<pos:position pos:line="2" pos:column="23"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">LibHalContext<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">ctx<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">DBusError<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">error<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">DBusConnection<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">con<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">dbus_error_init<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><operator pos:line="9" pos:column="21">&amp;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="22">error<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">con<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <call><name pos:line="11" pos:column="17">dbus_bus_get<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">DBUS_BUS_SYSTEM<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="47">&amp;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="48">error<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call><operator pos:line="11" pos:column="54">)<pos:position pos:line="11" pos:column="55"/></operator></expr> )<pos:position pos:line="11" pos:column="57"/></condition><then pos:line="11" pos:column="57"> <block pos:line="11" pos:column="58">{
        <goto pos:line="12" pos:column="9">goto <name pos:line="12" pos:column="14">bailout_nobus<pos:position pos:line="12" pos:column="27"/></name>;<pos:position pos:line="12" pos:column="28"/></goto>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="15" pos:column="5">ctx<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <call><name pos:line="15" pos:column="11">libhal_ctx_new<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">()<pos:position pos:line="15" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">libhal_ctx_set_dbus_connection<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">ctx<pos:position pos:line="16" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="41">con<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><call><name pos:line="18" pos:column="10">libhal_ctx_init<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">ctx<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="31">&amp;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="32">error<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39"> <block pos:line="18" pos:column="40">{
        <goto pos:line="19" pos:column="9">goto <name pos:line="19" pos:column="14">bailout<pos:position pos:line="19" pos:column="21"/></name>;<pos:position pos:line="19" pos:column="22"/></goto>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><call><name pos:line="22" pos:column="10">libhal_device_property_exists<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><name pos:line="22" pos:column="40">ctx<pos:position pos:line="22" pos:column="43"/></name></expr></argument>,
                                       <argument><expr><name pos:line="23" pos:column="40">UUID_PATH<pos:position pos:line="23" pos:column="49"/></name></expr></argument>,
                                       <argument><expr><name pos:line="24" pos:column="40">UUID_PROPERTY<pos:position pos:line="24" pos:column="53"/></name></expr></argument>,
                                       <argument><expr><operator pos:line="25" pos:column="40">&amp;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="41">error<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="48"/></condition><then pos:line="25" pos:column="48"> <block pos:line="25" pos:column="49">{
        <goto pos:line="26" pos:column="9">goto <name pos:line="26" pos:column="14">bailout<pos:position pos:line="26" pos:column="21"/></name>;<pos:position pos:line="26" pos:column="22"/></goto>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="29" pos:column="5">char<pos:position pos:line="29" pos:column="9"/></name> <modifier pos:line="29" pos:column="10">*<pos:position pos:line="29" pos:column="11"/></modifier></type><name pos:line="29" pos:column="11">uuid<pos:position pos:line="29" pos:column="15"/></name>  <init pos:line="29" pos:column="17">= <expr><call><name pos:line="29" pos:column="19">libhal_device_get_property_string<pos:position pos:line="29" pos:column="52"/></name><argument_list pos:line="29" pos:column="52">(<argument><expr><name pos:line="29" pos:column="53">ctx<pos:position pos:line="29" pos:column="56"/></name></expr></argument>,
                                                    <argument><expr><name pos:line="30" pos:column="53">UUID_PATH<pos:position pos:line="30" pos:column="62"/></name></expr></argument>,
                                                    <argument><expr><name pos:line="31" pos:column="53">UUID_PROPERTY<pos:position pos:line="31" pos:column="66"/></name></expr></argument>,
                                                    <argument><expr><operator pos:line="32" pos:column="53">&amp;<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="54">error<pos:position pos:line="32" pos:column="59"/></name></expr></argument>)<pos:position pos:line="32" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="61"/></decl_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name pos:line="33" pos:column="9">looks_like_a_uuid<pos:position pos:line="33" pos:column="26"/></name> <argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">uuid<pos:position pos:line="33" pos:column="32"/></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="34"/></condition><then pos:line="33" pos:column="34"> <block pos:line="33" pos:column="35">{
        <return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">uuid<pos:position pos:line="34" pos:column="20"/></name></expr>;<pos:position pos:line="34" pos:column="21"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

 <label><name pos:line="37" pos:column="2">bailout<pos:position pos:line="37" pos:column="9"/></name>:<pos:position pos:line="37" pos:column="10"/></label>
    <block pos:line="38" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="39" pos:column="9">DBusError<pos:position pos:line="39" pos:column="18"/></name></type> <name pos:line="39" pos:column="19">ctxerror<pos:position pos:line="39" pos:column="27"/></name></decl>;<pos:position pos:line="39" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">dbus_error_init<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><operator pos:line="40" pos:column="25">&amp;<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="26">ctxerror<pos:position pos:line="40" pos:column="34"/></name></expr></argument>)<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><operator pos:line="41" pos:column="14">(<pos:position pos:line="41" pos:column="15"/></operator><call><name pos:line="41" pos:column="15">libhal_ctx_shutdown<pos:position pos:line="41" pos:column="34"/></name><argument_list pos:line="41" pos:column="34">(<argument><expr><name pos:line="41" pos:column="35">ctx<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="40">&amp;<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="41">ctxerror<pos:position pos:line="41" pos:column="49"/></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call><operator pos:line="41" pos:column="50">)<pos:position pos:line="41" pos:column="51"/></operator></expr>)<pos:position pos:line="41" pos:column="52"/></condition><then pos:line="41" pos:column="52"> <block pos:line="41" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">dbus_error_free<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><operator pos:line="42" pos:column="29">&amp;<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="30">ctxerror<pos:position pos:line="42" pos:column="38"/></name></expr></argument>)<pos:position pos:line="42" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
    }<pos:position pos:line="44" pos:column="6"/></block>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">libhal_ctx_free<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">ctx<pos:position pos:line="46" pos:column="24"/></name></expr></argument>)<pos:position pos:line="46" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt>
    <comment type="line" pos:line="47" pos:column="5">//dbus_connection_unref(con);</comment>

 <label><name pos:line="49" pos:column="2">bailout_nobus<pos:position pos:line="49" pos:column="15"/></name>:<pos:position pos:line="49" pos:column="16"/></label>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><call><name pos:line="50" pos:column="9">dbus_error_is_set<pos:position pos:line="50" pos:column="26"/></name><argument_list pos:line="50" pos:column="26">(<argument><expr><operator pos:line="50" pos:column="27">&amp;<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="28">error<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="35"/></condition><then pos:line="50" pos:column="35"> <block pos:line="50" pos:column="36">{
        <comment type="block" pos:line="51" pos:column="9">/*printf("Error %s\n", error.name);*/</comment>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">dbus_error_free<pos:position pos:line="52" pos:column="24"/></name><argument_list pos:line="52" pos:column="24">(<argument><expr><operator pos:line="52" pos:column="25">&amp;<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="26">error<pos:position pos:line="52" pos:column="31"/></name></expr></argument>)<pos:position pos:line="52" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">NULL<pos:position pos:line="54" pos:column="16"/></name></expr>;<pos:position pos:line="54" pos:column="17"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

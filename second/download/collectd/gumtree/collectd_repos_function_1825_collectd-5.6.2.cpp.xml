<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1825_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">process_stat_struct<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">which<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">void<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">ptr<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="61">const<pos:position pos:line="1" pos:column="66"/></specifier> <name pos:line="1" pos:column="67">char<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">dev<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">mac<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <name pos:line="2" pos:column="56">char<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">type_name<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="3" pos:column="33">const<pos:position pos:line="3" pos:column="38"/></specifier> <name pos:line="3" pos:column="39">char<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">misc_name<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="55"/></parameter_list> <block pos:line="3" pos:column="56">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">uint32_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">misc<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><name pos:line="6" pos:column="10">which<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">&gt;=<pos:position pos:line="6" pos:column="21"/></operator> <literal type="number" pos:line="6" pos:column="19">1<pos:position pos:line="6" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><operator pos:line="7" pos:column="10">(<pos:position pos:line="7" pos:column="11"/></operator><operator pos:line="7" pos:column="11">(<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">size_t<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">)<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">which<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">)<pos:position pos:line="7" pos:column="25"/></operator> <operator pos:line="7" pos:column="26">&lt;<pos:position pos:line="7" pos:column="30"/></operator> <call><name pos:line="7" pos:column="28">STATIC_ARRAY_SIZE<pos:position pos:line="7" pos:column="45"/></name><argument_list pos:line="7" pos:column="45">(<argument><expr><name pos:line="7" pos:column="46">bounds<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="55"/></expr_stmt>

  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><decl><type><name pos:line="9" pos:column="8">int<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">i<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name><name pos:line="9" pos:column="16">bounds<pos:position pos:line="9" pos:column="22"/></name><index pos:line="9" pos:column="22">[<expr><name pos:line="9" pos:column="23">which<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">-<pos:position pos:line="9" pos:column="30"/></operator> <literal type="number" pos:line="9" pos:column="31">1<pos:position pos:line="9" pos:column="32"/></literal></expr>]<pos:position pos:line="9" pos:column="33"/></index></name></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></init> <condition><expr><name pos:line="9" pos:column="35">i<pos:position pos:line="9" pos:column="36"/></name> <operator pos:line="9" pos:column="37">&lt;<pos:position pos:line="9" pos:column="41"/></operator> <name><name pos:line="9" pos:column="39">bounds<pos:position pos:line="9" pos:column="45"/></name><index pos:line="9" pos:column="45">[<expr><name pos:line="9" pos:column="46">which<pos:position pos:line="9" pos:column="51"/></name></expr>]<pos:position pos:line="9" pos:column="52"/></index></name></expr>;<pos:position pos:line="9" pos:column="53"/></condition> <incr><expr><name pos:line="9" pos:column="54">i<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">++<pos:position pos:line="9" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="58"/></control> <block pos:line="9" pos:column="59">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">uint32_t<pos:position pos:line="10" pos:column="13"/></name></type> <name pos:line="10" pos:column="14">val<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><operator pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></operator><operator pos:line="10" pos:column="21">(<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">uint32_t<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">*<pos:position pos:line="10" pos:column="32"/></operator><operator pos:line="10" pos:column="32">)<pos:position pos:line="10" pos:column="33"/></operator><operator pos:line="10" pos:column="33">(<pos:position pos:line="10" pos:column="34"/></operator><operator pos:line="10" pos:column="34">(<pos:position pos:line="10" pos:column="35"/></operator><operator pos:line="10" pos:column="35">(<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">char<pos:position pos:line="10" pos:column="40"/></name> <operator pos:line="10" pos:column="41">*<pos:position pos:line="10" pos:column="42"/></operator><operator pos:line="10" pos:column="42">)<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="43">ptr<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">)<pos:position pos:line="10" pos:column="47"/></operator> <operator pos:line="10" pos:column="48">+<pos:position pos:line="10" pos:column="49"/></operator> <name><name pos:line="10" pos:column="50">specs<pos:position pos:line="10" pos:column="55"/></name><index pos:line="10" pos:column="55">[<expr><name pos:line="10" pos:column="56">i<pos:position pos:line="10" pos:column="57"/></name></expr>]<pos:position pos:line="10" pos:column="58"/></index></name><operator pos:line="10" pos:column="58">.<pos:position pos:line="10" pos:column="59"/></operator><name pos:line="10" pos:column="59">offset<pos:position pos:line="10" pos:column="65"/></name><operator pos:line="10" pos:column="65">)<pos:position pos:line="10" pos:column="66"/></operator></expr></init></decl>;<pos:position pos:line="10" pos:column="67"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">item_watched<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">i<pos:position pos:line="12" pos:column="23"/></name></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call> <operator pos:line="12" pos:column="25">&amp;&amp;<pos:position pos:line="12" pos:column="35"/></operator> <operator pos:line="12" pos:column="28">(<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="29">val<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">!=<pos:position pos:line="12" pos:column="35"/></operator> <literal type="number" pos:line="12" pos:column="36">0<pos:position pos:line="12" pos:column="37"/></literal><operator pos:line="12" pos:column="37">)<pos:position pos:line="12" pos:column="38"/></operator></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="7">submit_derive<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">dev<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="26">type_name<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="37">specs<pos:position pos:line="13" pos:column="42"/></name><index pos:line="13" pos:column="42">[<expr><name pos:line="13" pos:column="43">i<pos:position pos:line="13" pos:column="44"/></name></expr>]<pos:position pos:line="13" pos:column="45"/></index></name><operator pos:line="13" pos:column="45">.<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="46">name<pos:position pos:line="13" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="52">mac<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="57">val<pos:position pos:line="13" pos:column="60"/></name></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="62"/></expr_stmt></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">item_summed<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name></expr></argument>)<pos:position pos:line="15" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="24"/></condition><then pos:line="15" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="7">misc<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">+=<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">val<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt></block></then></if>
  }<pos:position pos:line="17" pos:column="4"/></block></for>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">misc<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">!=<pos:position pos:line="19" pos:column="14"/></operator> <literal type="number" pos:line="19" pos:column="15">0<pos:position pos:line="19" pos:column="16"/></literal></expr>)<pos:position pos:line="19" pos:column="17"/></condition><then pos:line="19" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="5">submit_derive<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">dev<pos:position pos:line="20" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="24">type_name<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">misc_name<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="46">mac<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">misc<pos:position pos:line="20" pos:column="55"/></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt></block></then></if>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_559_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ascent_submit_players<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">player_stats_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">ps<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list> <comment type="block" pos:line="1" pos:column="54">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">gauge_t<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">value<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>

  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init><decl><type><name pos:line="5" pos:column="8">size_t<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">i<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></init> <condition><expr><name pos:line="5" pos:column="22">i<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">&lt;<pos:position pos:line="5" pos:column="28"/></operator> <name pos:line="5" pos:column="26">RACES_LIST_LENGTH<pos:position pos:line="5" pos:column="43"/></name></expr>;<pos:position pos:line="5" pos:column="44"/></condition> <incr><expr><name pos:line="5" pos:column="45">i<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">++<pos:position pos:line="5" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="49"/></control>
    <block type="pseudo"><if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">races_list<pos:position pos:line="6" pos:column="19"/></name><index pos:line="6" pos:column="19">[<expr><name pos:line="6" pos:column="20">i<pos:position pos:line="6" pos:column="21"/></name></expr>]<pos:position pos:line="6" pos:column="22"/></index></name> <operator pos:line="6" pos:column="23">!=<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="26">NULL<pos:position pos:line="6" pos:column="30"/></name></expr>)<pos:position pos:line="6" pos:column="31"/></condition><then pos:line="6" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="7">ascent_submit_gauge<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><literal type="string" pos:line="7" pos:column="27">"by-race"<pos:position pos:line="7" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="38">"players"<pos:position pos:line="7" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="49">races_list<pos:position pos:line="7" pos:column="59"/></name><index pos:line="7" pos:column="59">[<expr><name pos:line="7" pos:column="60">i<pos:position pos:line="7" pos:column="61"/></name></expr>]<pos:position pos:line="7" pos:column="62"/></index></name></expr></argument>,
                          <argument><expr><operator pos:line="8" pos:column="27">(<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">gauge_t<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">)<pos:position pos:line="8" pos:column="36"/></operator><name><name pos:line="8" pos:column="36">ps<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">races<pos:position pos:line="8" pos:column="45"/></name><index pos:line="8" pos:column="45">[<expr><name pos:line="8" pos:column="46">i<pos:position pos:line="8" pos:column="47"/></name></expr>]<pos:position pos:line="8" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt></block></then></if></block></for>

  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init><decl><type><name pos:line="10" pos:column="8">size_t<pos:position pos:line="10" pos:column="14"/></name></type> <name pos:line="10" pos:column="15">i<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="21"/></init> <condition><expr><name pos:line="10" pos:column="22">i<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">&lt;<pos:position pos:line="10" pos:column="28"/></operator> <name pos:line="10" pos:column="26">CLASSES_LIST_LENGTH<pos:position pos:line="10" pos:column="45"/></name></expr>;<pos:position pos:line="10" pos:column="46"/></condition> <incr><expr><name pos:line="10" pos:column="47">i<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">++<pos:position pos:line="10" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="51"/></control>
    <block type="pseudo"><if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">classes_list<pos:position pos:line="11" pos:column="21"/></name><index pos:line="11" pos:column="21">[<expr><name pos:line="11" pos:column="22">i<pos:position pos:line="11" pos:column="23"/></name></expr>]<pos:position pos:line="11" pos:column="24"/></index></name> <operator pos:line="11" pos:column="25">!=<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="28">NULL<pos:position pos:line="11" pos:column="32"/></name></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="7">ascent_submit_gauge<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><literal type="string" pos:line="12" pos:column="27">"by-class"<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="39">"players"<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="50">classes_list<pos:position pos:line="12" pos:column="62"/></name><index pos:line="12" pos:column="62">[<expr><name pos:line="12" pos:column="63">i<pos:position pos:line="12" pos:column="64"/></name></expr>]<pos:position pos:line="12" pos:column="65"/></index></name></expr></argument>,
                          <argument><expr><operator pos:line="13" pos:column="27">(<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">gauge_t<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">)<pos:position pos:line="13" pos:column="36"/></operator><name><name pos:line="13" pos:column="36">ps<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">-&gt;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="40">classes<pos:position pos:line="13" pos:column="47"/></name><index pos:line="13" pos:column="47">[<expr><name pos:line="13" pos:column="48">i<pos:position pos:line="13" pos:column="49"/></name></expr>]<pos:position pos:line="13" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt></block></then></if></block></for>

  <for pos:line="15" pos:column="3">for <control pos:line="15" pos:column="7">(<init><decl><type><name pos:line="15" pos:column="8">size_t<pos:position pos:line="15" pos:column="14"/></name></type> <name pos:line="15" pos:column="15">i<pos:position pos:line="15" pos:column="16"/></name> <init pos:line="15" pos:column="17">= <expr><literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="21"/></init> <condition><expr><name pos:line="15" pos:column="22">i<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">&lt;<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="26">GENDERS_LIST_LENGTH<pos:position pos:line="15" pos:column="45"/></name></expr>;<pos:position pos:line="15" pos:column="46"/></condition> <incr><expr><name pos:line="15" pos:column="47">i<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">++<pos:position pos:line="15" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="51"/></control>
    <block type="pseudo"><if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">genders_list<pos:position pos:line="16" pos:column="21"/></name><index pos:line="16" pos:column="21">[<expr><name pos:line="16" pos:column="22">i<pos:position pos:line="16" pos:column="23"/></name></expr>]<pos:position pos:line="16" pos:column="24"/></index></name> <operator pos:line="16" pos:column="25">!=<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="28">NULL<pos:position pos:line="16" pos:column="32"/></name></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="7">ascent_submit_gauge<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><literal type="string" pos:line="17" pos:column="27">"by-gender"<pos:position pos:line="17" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="40">"players"<pos:position pos:line="17" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="51">genders_list<pos:position pos:line="17" pos:column="63"/></name><index pos:line="17" pos:column="63">[<expr><name pos:line="17" pos:column="64">i<pos:position pos:line="17" pos:column="65"/></name></expr>]<pos:position pos:line="17" pos:column="66"/></index></name></expr></argument>,
                          <argument><expr><operator pos:line="18" pos:column="27">(<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">gauge_t<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">)<pos:position pos:line="18" pos:column="36"/></operator><name><name pos:line="18" pos:column="36">ps<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">genders<pos:position pos:line="18" pos:column="47"/></name><index pos:line="18" pos:column="47">[<expr><name pos:line="18" pos:column="48">i<pos:position pos:line="18" pos:column="49"/></name></expr>]<pos:position pos:line="18" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt></block></then></if></block></for>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name><name pos:line="20" pos:column="7">ps<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">level_num<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">&lt;=<pos:position pos:line="20" pos:column="26"/></operator> <literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="5">value<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">NAN<pos:position pos:line="21" pos:column="16"/></name></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt></block></then>
  <else pos:line="22" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="5">value<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">double<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">)<pos:position pos:line="23" pos:column="22"/></operator><name><name pos:line="23" pos:column="22">ps<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">level_sum<pos:position pos:line="23" pos:column="35"/></name></name><operator pos:line="23" pos:column="35">)<pos:position pos:line="23" pos:column="36"/></operator> <operator pos:line="23" pos:column="37">/<pos:position pos:line="23" pos:column="38"/></operator> <operator pos:line="23" pos:column="39">(<pos:position pos:line="23" pos:column="40"/></operator><operator pos:line="23" pos:column="40">(<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="41">double<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">)<pos:position pos:line="23" pos:column="48"/></operator><name><name pos:line="23" pos:column="48">ps<pos:position pos:line="23" pos:column="50"/></name><operator pos:line="23" pos:column="50">-&gt;<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="52">level_num<pos:position pos:line="23" pos:column="61"/></name></name><operator pos:line="23" pos:column="61">)<pos:position pos:line="23" pos:column="62"/></operator></expr>;<pos:position pos:line="23" pos:column="63"/></expr_stmt></block></else></if>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">ascent_submit_gauge<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">NULL<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="29">"gauge"<pos:position pos:line="24" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="38">"avg-level"<pos:position pos:line="24" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">value<pos:position pos:line="24" pos:column="56"/></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt>

  <comment type="block" pos:line="26" pos:column="3">/* Latency is in ms, but we store seconds. */</comment>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name><name pos:line="27" pos:column="7">ps<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">-&gt;<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="11">latency_num<pos:position pos:line="27" pos:column="22"/></name></name> <operator pos:line="27" pos:column="23">&lt;=<pos:position pos:line="27" pos:column="28"/></operator> <literal type="number" pos:line="27" pos:column="26">0<pos:position pos:line="27" pos:column="27"/></literal></expr>)<pos:position pos:line="27" pos:column="28"/></condition><then pos:line="27" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="5">value<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <name pos:line="28" pos:column="13">NAN<pos:position pos:line="28" pos:column="16"/></name></expr>;<pos:position pos:line="28" pos:column="17"/></expr_stmt></block></then>
  <else pos:line="29" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="5">value<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <operator pos:line="30" pos:column="13">(<pos:position pos:line="30" pos:column="14"/></operator><operator pos:line="30" pos:column="14">(<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">double<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">)<pos:position pos:line="30" pos:column="22"/></operator><name><name pos:line="30" pos:column="22">ps<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">latency_sum<pos:position pos:line="30" pos:column="37"/></name></name><operator pos:line="30" pos:column="37">)<pos:position pos:line="30" pos:column="38"/></operator> <operator pos:line="30" pos:column="39">/<pos:position pos:line="30" pos:column="40"/></operator> <operator pos:line="30" pos:column="41">(<pos:position pos:line="30" pos:column="42"/></operator><literal type="number" pos:line="30" pos:column="42">1000.0<pos:position pos:line="30" pos:column="48"/></literal> <operator pos:line="30" pos:column="49">*<pos:position pos:line="30" pos:column="50"/></operator> <operator pos:line="30" pos:column="51">(<pos:position pos:line="30" pos:column="52"/></operator><operator pos:line="30" pos:column="52">(<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="53">double<pos:position pos:line="30" pos:column="59"/></name><operator pos:line="30" pos:column="59">)<pos:position pos:line="30" pos:column="60"/></operator><name><name pos:line="30" pos:column="60">ps<pos:position pos:line="30" pos:column="62"/></name><operator pos:line="30" pos:column="62">-&gt;<pos:position pos:line="30" pos:column="67"/></operator><name pos:line="30" pos:column="64">latency_num<pos:position pos:line="30" pos:column="75"/></name></name><operator pos:line="30" pos:column="75">)<pos:position pos:line="30" pos:column="76"/></operator><operator pos:line="30" pos:column="76">)<pos:position pos:line="30" pos:column="77"/></operator></expr>;<pos:position pos:line="30" pos:column="78"/></expr_stmt></block></else></if>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">ascent_submit_gauge<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">NULL<pos:position pos:line="31" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="29">"latency"<pos:position pos:line="31" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="40">"average"<pos:position pos:line="31" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="51">value<pos:position pos:line="31" pos:column="56"/></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt>

  <return pos:line="33" pos:column="3">return <expr><operator pos:line="33" pos:column="10">(<pos:position pos:line="33" pos:column="11"/></operator><literal type="number" pos:line="33" pos:column="11">0<pos:position pos:line="33" pos:column="12"/></literal><operator pos:line="33" pos:column="12">)<pos:position pos:line="33" pos:column="13"/></operator></expr>;<pos:position pos:line="33" pos:column="14"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_459_collectd-4.7.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">strjoin<pos:position pos:line="1" pos:column="12"/></name> <parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">dst<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="25">size_t<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">dst_len<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier><modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">fields<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">size_t<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">fields_num<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="3" pos:column="17">const<pos:position pos:line="3" pos:column="22"/></specifier> <name pos:line="3" pos:column="23">char<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">sep<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="33"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">field_len<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">sep_len<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">memset<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">dst<pos:position pos:line="9" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="22">'\0'<pos:position pos:line="9" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="28">dst_len<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">fields_num<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">&lt;=<pos:position pos:line="11" pos:column="29"/></operator> <literal type="number" pos:line="11" pos:column="27">0<pos:position pos:line="11" pos:column="28"/></literal></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><operator pos:line="12" pos:column="25">-<pos:position pos:line="12" pos:column="26"/></operator><literal type="number" pos:line="12" pos:column="26">1<pos:position pos:line="12" pos:column="27"/></literal><operator pos:line="12" pos:column="27">)<pos:position pos:line="12" pos:column="28"/></operator></expr>;<pos:position pos:line="12" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">sep_len<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">sep<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">!=<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">NULL<pos:position pos:line="15" pos:column="24"/></name></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="17">sep_len<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <call><name pos:line="16" pos:column="27">strlen<pos:position pos:line="16" pos:column="33"/></name> <argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">sep<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt></block></then></if>

	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <operator pos:line="18" pos:column="25">(<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">int<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">)<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">fields_num<pos:position pos:line="18" pos:column="40"/></name></expr>;<pos:position pos:line="18" pos:column="41"/></condition> <incr><expr><name pos:line="18" pos:column="42">i<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">++<pos:position pos:line="18" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="46"/></control>
	<block pos:line="19" pos:column="9">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">(<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">i<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">&gt;<pos:position pos:line="20" pos:column="28"/></operator> <literal type="number" pos:line="20" pos:column="26">0<pos:position pos:line="20" pos:column="27"/></literal><operator pos:line="20" pos:column="27">)<pos:position pos:line="20" pos:column="28"/></operator> <operator pos:line="20" pos:column="29">&amp;&amp;<pos:position pos:line="20" pos:column="39"/></operator> <operator pos:line="20" pos:column="32">(<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="33">sep_len<pos:position pos:line="20" pos:column="40"/></name> <operator pos:line="20" pos:column="41">&gt;<pos:position pos:line="20" pos:column="45"/></operator> <literal type="number" pos:line="20" pos:column="43">0<pos:position pos:line="20" pos:column="44"/></literal><operator pos:line="20" pos:column="44">)<pos:position pos:line="20" pos:column="45"/></operator></expr>)<pos:position pos:line="20" pos:column="46"/></condition><then pos:line="20" pos:column="46">
		<block pos:line="21" pos:column="17">{
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><name pos:line="22" pos:column="29">dst_len<pos:position pos:line="22" pos:column="36"/></name> <operator pos:line="22" pos:column="37">&lt;=<pos:position pos:line="22" pos:column="42"/></operator> <name pos:line="22" pos:column="40">sep_len<pos:position pos:line="22" pos:column="47"/></name></expr>)<pos:position pos:line="22" pos:column="48"/></condition><then pos:line="22" pos:column="48">
				<block type="pseudo"><return pos:line="23" pos:column="33">return <expr><operator pos:line="23" pos:column="40">(<pos:position pos:line="23" pos:column="41"/></operator><operator pos:line="23" pos:column="41">-<pos:position pos:line="23" pos:column="42"/></operator><literal type="number" pos:line="23" pos:column="42">1<pos:position pos:line="23" pos:column="43"/></literal><operator pos:line="23" pos:column="43">)<pos:position pos:line="23" pos:column="44"/></operator></expr>;<pos:position pos:line="23" pos:column="45"/></return></block></then></if>

			<expr_stmt><expr><call><name pos:line="25" pos:column="25">strncat<pos:position pos:line="25" pos:column="32"/></name> <argument_list pos:line="25" pos:column="33">(<argument><expr><name pos:line="25" pos:column="34">dst<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">sep<pos:position pos:line="25" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">dst_len<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name pos:line="26" pos:column="25">dst_len<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">-=<pos:position pos:line="26" pos:column="35"/></operator> <name pos:line="26" pos:column="36">sep_len<pos:position pos:line="26" pos:column="43"/></name></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="29" pos:column="17">field_len<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <call><name pos:line="29" pos:column="29">strlen<pos:position pos:line="29" pos:column="35"/></name> <argument_list pos:line="29" pos:column="36">(<argument><expr><name><name pos:line="29" pos:column="37">fields<pos:position pos:line="29" pos:column="43"/></name><index pos:line="29" pos:column="43">[<expr><name pos:line="29" pos:column="44">i<pos:position pos:line="29" pos:column="45"/></name></expr>]<pos:position pos:line="29" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">dst_len<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">&lt;=<pos:position pos:line="31" pos:column="34"/></operator> <name pos:line="31" pos:column="32">field_len<pos:position pos:line="31" pos:column="41"/></name></expr>)<pos:position pos:line="31" pos:column="42"/></condition><then pos:line="31" pos:column="42">
			<block type="pseudo"><return pos:line="32" pos:column="25">return <expr><operator pos:line="32" pos:column="32">(<pos:position pos:line="32" pos:column="33"/></operator><operator pos:line="32" pos:column="33">-<pos:position pos:line="32" pos:column="34"/></operator><literal type="number" pos:line="32" pos:column="34">1<pos:position pos:line="32" pos:column="35"/></literal><operator pos:line="32" pos:column="35">)<pos:position pos:line="32" pos:column="36"/></operator></expr>;<pos:position pos:line="32" pos:column="37"/></return></block></then></if>

		<expr_stmt><expr><call><name pos:line="34" pos:column="17">strncat<pos:position pos:line="34" pos:column="24"/></name> <argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">dst<pos:position pos:line="34" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="31">fields<pos:position pos:line="34" pos:column="37"/></name><index pos:line="34" pos:column="37">[<expr><name pos:line="34" pos:column="38">i<pos:position pos:line="34" pos:column="39"/></name></expr>]<pos:position pos:line="34" pos:column="40"/></index></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="42">dst_len<pos:position pos:line="34" pos:column="49"/></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">dst_len<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">-=<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="28">field_len<pos:position pos:line="35" pos:column="37"/></name></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></for>

	<return pos:line="38" pos:column="9">return <expr><operator pos:line="38" pos:column="16">(<pos:position pos:line="38" pos:column="17"/></operator><call><name pos:line="38" pos:column="17">strlen<pos:position pos:line="38" pos:column="23"/></name> <argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">dst<pos:position pos:line="38" pos:column="28"/></name></expr></argument>)<pos:position pos:line="38" pos:column="29"/></argument_list></call><operator pos:line="38" pos:column="29">)<pos:position pos:line="38" pos:column="30"/></operator></expr>;<pos:position pos:line="38" pos:column="31"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

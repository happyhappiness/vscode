<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1520_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">http_handler<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">cls<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">MHD_Connection<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">connection<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">url<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">method<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="3" pos:column="25">const<pos:position pos:line="3" pos:column="30"/></specifier> <name pos:line="3" pos:column="31">char<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">version<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="46">const<pos:position pos:line="3" pos:column="51"/></specifier> <name pos:line="3" pos:column="52">char<pos:position pos:line="3" pos:column="56"/></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="58">upload_data<pos:position pos:line="3" pos:column="69"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="4" pos:column="25">size_t<pos:position pos:line="4" pos:column="31"/></name> <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier></type><name pos:line="4" pos:column="33">upload_data_size<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="51">void<pos:position pos:line="4" pos:column="55"/></name> <modifier pos:line="4" pos:column="56">*<pos:position pos:line="4" pos:column="57"/></modifier><modifier pos:line="4" pos:column="57">*<pos:position pos:line="4" pos:column="58"/></modifier></type><name pos:line="4" pos:column="58">connection_state<pos:position pos:line="4" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="75"/></parameter_list> <block pos:line="4" pos:column="76">{
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">strcmp<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><name pos:line="5" pos:column="14">method<pos:position pos:line="5" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="22">MHD_HTTP_METHOD_GET<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call> <operator pos:line="5" pos:column="43">!=<pos:position pos:line="5" pos:column="45"/></operator> <literal type="number" pos:line="5" pos:column="46">0<pos:position pos:line="5" pos:column="47"/></literal></expr>)<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48"> <block pos:line="5" pos:column="49">{
    <return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">MHD_NO<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></return>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="9" pos:column="3">/* On the first call for each connection, return without anything further.
   * Apparently not everything has been initialized yet or so; the docs are not
   * very specific on the issue. */</comment>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">*<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">connection_state<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">==<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="28">NULL<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33"> <block pos:line="12" pos:column="34">{
    <comment type="block" pos:line="13" pos:column="5">/* set to a random non-NULL pointer. */</comment>
    <expr_stmt><expr><operator pos:line="14" pos:column="5">*<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">connection_state<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <operator pos:line="14" pos:column="25">&amp;<pos:position pos:line="14" pos:column="30"/></operator><operator pos:line="14" pos:column="26">(<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="27">int<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">)<pos:position pos:line="14" pos:column="31"/></operator><block pos:line="14" pos:column="31">{<expr><literal type="number" pos:line="14" pos:column="32">42<pos:position pos:line="14" pos:column="34"/></literal></expr>}<pos:position pos:line="14" pos:column="35"/></block></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">MHD_YES<pos:position pos:line="15" pos:column="19"/></name></expr>;<pos:position pos:line="15" pos:column="20"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="18" pos:column="3">char<pos:position pos:line="18" pos:column="7"/></name> <specifier pos:line="18" pos:column="8">const<pos:position pos:line="18" pos:column="13"/></specifier> <modifier pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></modifier></type><name pos:line="18" pos:column="15">accept<pos:position pos:line="18" pos:column="21"/></name> <init pos:line="18" pos:column="22">= <expr><call><name pos:line="18" pos:column="24">MHD_lookup_connection_value<pos:position pos:line="18" pos:column="51"/></name><argument_list pos:line="18" pos:column="51">(<argument><expr><name pos:line="18" pos:column="52">connection<pos:position pos:line="18" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="64">MHD_HEADER_KIND<pos:position pos:line="18" pos:column="79"/></name></expr></argument>,
                                                   <argument><expr><name pos:line="19" pos:column="52">MHD_HTTP_HEADER_ACCEPT<pos:position pos:line="19" pos:column="74"/></name></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="76"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">_Bool<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">want_proto<pos:position pos:line="20" pos:column="19"/></name> <init pos:line="20" pos:column="20">=
      <expr><operator pos:line="21" pos:column="7">(<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">accept<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">!=<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">NULL<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">)<pos:position pos:line="21" pos:column="23"/></operator> <operator pos:line="21" pos:column="24">&amp;&amp;<pos:position pos:line="21" pos:column="34"/></operator>
      <operator pos:line="22" pos:column="7">(<pos:position pos:line="22" pos:column="8"/></operator><call><name pos:line="22" pos:column="8">strstr<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><name pos:line="22" pos:column="15">accept<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"application/vnd.google.protobuf"<pos:position pos:line="22" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call> <operator pos:line="22" pos:column="58">!=<pos:position pos:line="22" pos:column="60"/></operator> <name pos:line="22" pos:column="61">NULL<pos:position pos:line="22" pos:column="65"/></name><operator pos:line="22" pos:column="65">)<pos:position pos:line="22" pos:column="66"/></operator></expr></init></decl>;<pos:position pos:line="22" pos:column="67"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="24" pos:column="3">uint8_t<pos:position pos:line="24" pos:column="10"/></name></type> <name><name pos:line="24" pos:column="11">scratch<pos:position pos:line="24" pos:column="18"/></name><index pos:line="24" pos:column="18">[<expr><literal type="number" pos:line="24" pos:column="19">4096<pos:position pos:line="24" pos:column="23"/></literal></expr>]<pos:position pos:line="24" pos:column="24"/></index></name> <init pos:line="24" pos:column="25">= <expr><block pos:line="24" pos:column="27">{<expr><literal type="number" pos:line="24" pos:column="28">0<pos:position pos:line="24" pos:column="29"/></literal></expr>}<pos:position pos:line="24" pos:column="30"/></block></expr></init></decl>;<pos:position pos:line="24" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="25" pos:column="3">ProtobufCBufferSimple<pos:position pos:line="25" pos:column="24"/></name></type> <name pos:line="25" pos:column="25">simple<pos:position pos:line="25" pos:column="31"/></name> <init pos:line="25" pos:column="32">= <expr><call><name pos:line="25" pos:column="34">PROTOBUF_C_BUFFER_SIMPLE_INIT<pos:position pos:line="25" pos:column="63"/></name><argument_list pos:line="25" pos:column="63">(<argument><expr><name pos:line="25" pos:column="64">scratch<pos:position pos:line="25" pos:column="71"/></name></expr></argument>)<pos:position pos:line="25" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="73"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="26" pos:column="3">ProtobufCBuffer<pos:position pos:line="26" pos:column="18"/></name> <modifier pos:line="26" pos:column="19">*<pos:position pos:line="26" pos:column="20"/></modifier></type><name pos:line="26" pos:column="20">buffer<pos:position pos:line="26" pos:column="26"/></name> <init pos:line="26" pos:column="27">= <expr><operator pos:line="26" pos:column="29">(<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">ProtobufCBuffer<pos:position pos:line="26" pos:column="45"/></name> <operator pos:line="26" pos:column="46">*<pos:position pos:line="26" pos:column="47"/></operator><operator pos:line="26" pos:column="47">)<pos:position pos:line="26" pos:column="48"/></operator><operator pos:line="26" pos:column="48">&amp;<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="49">simple<pos:position pos:line="26" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="56"/></decl_stmt>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">want_proto<pos:position pos:line="28" pos:column="17"/></name></expr>)<pos:position pos:line="28" pos:column="18"/></condition><then pos:line="28" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">format_protobuf<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">buffer<pos:position pos:line="29" pos:column="27"/></name></expr></argument>)<pos:position pos:line="29" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt></block></then>
  <else pos:line="30" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="5">format_text<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">buffer<pos:position pos:line="31" pos:column="23"/></name></expr></argument>)<pos:position pos:line="31" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt></block></else></if>

<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><call><name pos:line="33" pos:column="5">defined<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><name pos:line="33" pos:column="13">MHD_VERSION<pos:position pos:line="33" pos:column="24"/></name></expr></argument>)<pos:position pos:line="33" pos:column="25"/></argument_list></call> <operator pos:line="33" pos:column="26">&amp;&amp;<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="29">MHD_VERSION<pos:position pos:line="33" pos:column="40"/></name> <operator pos:line="33" pos:column="41">&gt;=<pos:position pos:line="33" pos:column="46"/></operator> <literal type="number" pos:line="33" pos:column="44">0x00090500<pos:position pos:line="33" pos:column="54"/></literal></expr></cpp:if>
  <decl_stmt><decl><type><name><name pos:line="34" pos:column="3">struct<pos:position pos:line="34" pos:column="9"/></name> <name pos:line="34" pos:column="10">MHD_Response<pos:position pos:line="34" pos:column="22"/></name></name> <modifier pos:line="34" pos:column="23">*<pos:position pos:line="34" pos:column="24"/></modifier></type><name pos:line="34" pos:column="24">res<pos:position pos:line="34" pos:column="27"/></name> <init pos:line="34" pos:column="28">= <expr><call><name pos:line="34" pos:column="30">MHD_create_response_from_buffer<pos:position pos:line="34" pos:column="61"/></name><argument_list pos:line="34" pos:column="61">(
      <argument><expr><name><name pos:line="35" pos:column="7">simple<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">.<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">len<pos:position pos:line="35" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="19">simple<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">.<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="26">data<pos:position pos:line="35" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="32">MHD_RESPMEM_MUST_COPY<pos:position pos:line="35" pos:column="53"/></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="55"/></decl_stmt>
<cpp:else pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">else<pos:position pos:line="36" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name><name pos:line="37" pos:column="3">struct<pos:position pos:line="37" pos:column="9"/></name> <name pos:line="37" pos:column="10">MHD_Response<pos:position pos:line="37" pos:column="22"/></name></name> <modifier pos:line="37" pos:column="23">*<pos:position pos:line="37" pos:column="24"/></modifier></type><name pos:line="37" pos:column="24">res<pos:position pos:line="37" pos:column="27"/></name> <init pos:line="37" pos:column="28">= <expr><call><name pos:line="37" pos:column="30">MHD_create_response_from_data<pos:position pos:line="37" pos:column="59"/></name><argument_list pos:line="37" pos:column="59">(
      <argument><expr><name><name pos:line="38" pos:column="7">simple<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">.<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">len<pos:position pos:line="38" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="19">simple<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">.<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">data<pos:position pos:line="38" pos:column="30"/></name></name></expr></argument>, <comment type="block" pos:line="38" pos:column="32">/* must_free = */</comment> <argument><expr><literal type="number" pos:line="38" pos:column="50">0<pos:position pos:line="38" pos:column="51"/></literal></expr></argument>, <comment type="block" pos:line="38" pos:column="53">/* must_copy = */</comment> <argument><expr><literal type="number" pos:line="38" pos:column="71">1<pos:position pos:line="38" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="74"/></decl_stmt>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">MHD_add_response_header<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">res<pos:position pos:line="40" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="32">MHD_HTTP_HEADER_CONTENT_TYPE<pos:position pos:line="40" pos:column="60"/></name></expr></argument>,
                          <argument><expr><ternary><condition><expr><name pos:line="41" pos:column="27">want_proto<pos:position pos:line="41" pos:column="37"/></name></expr> ?<pos:position pos:line="41" pos:column="39"/></condition><then pos:line="41" pos:column="39"> <expr><name pos:line="41" pos:column="40">CONTENT_TYPE_PROTO<pos:position pos:line="41" pos:column="58"/></name></expr> <pos:position pos:line="41" pos:column="59"/></then><else pos:line="41" pos:column="59">: <expr><name pos:line="41" pos:column="61">CONTENT_TYPE_TEXT<pos:position pos:line="41" pos:column="78"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="41" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="80"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="43" pos:column="3">int<pos:position pos:line="43" pos:column="6"/></name></type> <name pos:line="43" pos:column="7">status<pos:position pos:line="43" pos:column="13"/></name> <init pos:line="43" pos:column="14">= <expr><call><name pos:line="43" pos:column="16">MHD_queue_response<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><name pos:line="43" pos:column="35">connection<pos:position pos:line="43" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="47">MHD_HTTP_OK<pos:position pos:line="43" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="60">res<pos:position pos:line="43" pos:column="63"/></name></expr></argument>)<pos:position pos:line="43" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="43" pos:column="65"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="45" pos:column="3">MHD_destroy_response<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><name pos:line="45" pos:column="24">res<pos:position pos:line="45" pos:column="27"/></name></expr></argument>)<pos:position pos:line="45" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">PROTOBUF_C_BUFFER_SIMPLE_CLEAR<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><operator pos:line="46" pos:column="34">&amp;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="35">simple<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
  <return pos:line="47" pos:column="3">return <expr><name pos:line="47" pos:column="10">status<pos:position pos:line="47" pos:column="16"/></name></expr>;<pos:position pos:line="47" pos:column="17"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1518_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cpy_flush_callback<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">int<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">timeout<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">id<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">user_data_t<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">data<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list> <block pos:line="1" pos:column="80">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">cpy_callback_t<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type> <name pos:line="2" pos:column="26">c<pos:position pos:line="2" pos:column="27"/></name> <init pos:line="2" pos:column="28">= <expr><name><name pos:line="2" pos:column="30">data<pos:position pos:line="2" pos:column="34"/></name><operator pos:line="2" pos:column="34">-&gt;<pos:position pos:line="2" pos:column="39"/></operator><name pos:line="2" pos:column="36">data<pos:position pos:line="2" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="2" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">PyObject<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">ret<pos:position pos:line="3" pos:column="22"/></name></decl>, <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="25">text<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">CPY_LOCK_THREADS<pos:position pos:line="5" pos:column="25"/></name></type>
	<name pos:line="6" pos:column="9">text<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><call><name pos:line="6" pos:column="16">cpy_string_to_unicode_or_bytes<pos:position pos:line="6" pos:column="46"/></name><argument_list pos:line="6" pos:column="46">(<argument><expr><name pos:line="6" pos:column="47">id<pos:position pos:line="6" pos:column="49"/></name></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="51"/></decl_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">c<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">data<pos:position pos:line="7" pos:column="20"/></name></name> <operator pos:line="7" pos:column="21">==<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">ret<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <call><name pos:line="8" pos:column="23">PyObject_CallFunction<pos:position pos:line="8" pos:column="44"/></name><argument_list pos:line="8" pos:column="44">(<argument><expr><name><name pos:line="8" pos:column="45">c<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">-&gt;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="48">callback<pos:position pos:line="8" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="58">"iN"<pos:position pos:line="8" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="64">timeout<pos:position pos:line="8" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="73">text<pos:position pos:line="8" pos:column="77"/></name></expr></argument>)<pos:position pos:line="8" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="79"/></expr_stmt></block></then> <comment type="block" pos:line="8" pos:column="80">/* New reference. */</comment>
	<else pos:line="9" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">ret<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <call><name pos:line="10" pos:column="23">PyObject_CallFunction<pos:position pos:line="10" pos:column="44"/></name><argument_list pos:line="10" pos:column="44">(<argument><expr><name><name pos:line="10" pos:column="45">c<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">-&gt;<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="48">callback<pos:position pos:line="10" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="58">"iNO"<pos:position pos:line="10" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="65">timeout<pos:position pos:line="10" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="74">text<pos:position pos:line="10" pos:column="78"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="80">c<pos:position pos:line="10" pos:column="81"/></name><operator pos:line="10" pos:column="81">-&gt;<pos:position pos:line="10" pos:column="86"/></operator><name pos:line="10" pos:column="83">data<pos:position pos:line="10" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="89"/></expr_stmt></block></else></if> <comment type="block" pos:line="10" pos:column="90">/* New reference. */</comment>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">ret<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">==<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">NULL<pos:position pos:line="12" pos:column="24"/></name></expr>)<pos:position pos:line="12" pos:column="25"/></condition><then pos:line="12" pos:column="25"> <block pos:line="12" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">cpy_log_exception<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><literal type="string" pos:line="13" pos:column="35">"flush callback"<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then> <else pos:line="14" pos:column="11">else <block pos:line="14" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">Py_DECREF<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">ret<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">CPY_RELEASE_THREADS<pos:position pos:line="17" pos:column="28"/></name></expr></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_394_collectd-4.4.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">conn_config<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">key<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">value<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">strcasecmp<pos:position pos:line="3" pos:column="17"/></name> <argument_list pos:line="3" pos:column="18">(<argument><expr><name pos:line="3" pos:column="19">key<pos:position pos:line="3" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="24">"ListeningPorts"<pos:position pos:line="3" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call> <operator pos:line="3" pos:column="42">==<pos:position pos:line="3" pos:column="44"/></operator> <literal type="number" pos:line="3" pos:column="45">0<pos:position pos:line="3" pos:column="46"/></literal></expr>)<pos:position pos:line="3" pos:column="47"/></condition><then pos:line="3" pos:column="47">
  <block pos:line="4" pos:column="3">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><call><name pos:line="5" pos:column="10">strcasecmp<pos:position pos:line="5" pos:column="20"/></name> <argument_list pos:line="5" pos:column="21">(<argument><expr><name pos:line="5" pos:column="22">value<pos:position pos:line="5" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="29">"Yes"<pos:position pos:line="5" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call> <operator pos:line="5" pos:column="36">==<pos:position pos:line="5" pos:column="38"/></operator> <literal type="number" pos:line="5" pos:column="39">0<pos:position pos:line="5" pos:column="40"/></literal><operator pos:line="5" pos:column="40">)<pos:position pos:line="5" pos:column="41"/></operator>
	<operator pos:line="6" pos:column="9">||<pos:position pos:line="6" pos:column="11"/></operator> <operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><call><name pos:line="6" pos:column="13">strcasecmp<pos:position pos:line="6" pos:column="23"/></name> <argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">value<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="32">"True"<pos:position pos:line="6" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call> <operator pos:line="6" pos:column="40">==<pos:position pos:line="6" pos:column="42"/></operator> <literal type="number" pos:line="6" pos:column="43">0<pos:position pos:line="6" pos:column="44"/></literal><operator pos:line="6" pos:column="44">)<pos:position pos:line="6" pos:column="45"/></operator>
	<operator pos:line="7" pos:column="9">||<pos:position pos:line="7" pos:column="11"/></operator> <operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><call><name pos:line="7" pos:column="13">strcasecmp<pos:position pos:line="7" pos:column="23"/></name> <argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">value<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="32">"On"<pos:position pos:line="7" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call> <operator pos:line="7" pos:column="38">==<pos:position pos:line="7" pos:column="40"/></operator> <literal type="number" pos:line="7" pos:column="41">0<pos:position pos:line="7" pos:column="42"/></literal><operator pos:line="7" pos:column="42">)<pos:position pos:line="7" pos:column="43"/></operator></expr>)<pos:position pos:line="7" pos:column="44"/></condition><then pos:line="7" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="7">port_collect_listening<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">=<pos:position pos:line="8" pos:column="31"/></operator> <literal type="number" pos:line="8" pos:column="32">1<pos:position pos:line="8" pos:column="33"/></literal></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt></block></then>
    <else pos:line="9" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="7">port_collect_listening<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">=<pos:position pos:line="10" pos:column="31"/></operator> <literal type="number" pos:line="10" pos:column="32">0<pos:position pos:line="10" pos:column="33"/></literal></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt></block></else></if>
  }<pos:position pos:line="11" pos:column="4"/></block></then>
  <elseif pos:line="12" pos:column="3">else <if pos:line="12" pos:column="8">if <condition pos:line="12" pos:column="11">(<expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><call><name pos:line="12" pos:column="13">strcasecmp<pos:position pos:line="12" pos:column="23"/></name> <argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">key<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="30">"LocalPort"<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call> <operator pos:line="12" pos:column="43">==<pos:position pos:line="12" pos:column="45"/></operator> <literal type="number" pos:line="12" pos:column="46">0<pos:position pos:line="12" pos:column="47"/></literal><operator pos:line="12" pos:column="47">)<pos:position pos:line="12" pos:column="48"/></operator>
      <operator pos:line="13" pos:column="7">||<pos:position pos:line="13" pos:column="9"/></operator> <operator pos:line="13" pos:column="10">(<pos:position pos:line="13" pos:column="11"/></operator><call><name pos:line="13" pos:column="11">strcasecmp<pos:position pos:line="13" pos:column="21"/></name> <argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">key<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="28">"RemotePort"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call> <operator pos:line="13" pos:column="42">==<pos:position pos:line="13" pos:column="44"/></operator> <literal type="number" pos:line="13" pos:column="45">0<pos:position pos:line="13" pos:column="46"/></literal><operator pos:line="13" pos:column="46">)<pos:position pos:line="13" pos:column="47"/></operator></expr>)<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48">
  <block pos:line="14" pos:column="3">{
      <decl_stmt><decl><type><name pos:line="15" pos:column="7">port_entry_t<pos:position pos:line="15" pos:column="19"/></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type><name pos:line="15" pos:column="21">pe<pos:position pos:line="15" pos:column="23"/></name></decl>;<pos:position pos:line="15" pos:column="24"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="16" pos:column="7">int<pos:position pos:line="16" pos:column="10"/></name></type> <name pos:line="16" pos:column="11">port<pos:position pos:line="16" pos:column="15"/></name> <init pos:line="16" pos:column="16">= <expr><call><name pos:line="16" pos:column="18">atoi<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">value<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="31"/></decl_stmt>

      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><operator pos:line="18" pos:column="11">(<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">port<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">&lt;<pos:position pos:line="18" pos:column="21"/></operator> <literal type="number" pos:line="18" pos:column="19">1<pos:position pos:line="18" pos:column="20"/></literal><operator pos:line="18" pos:column="20">)<pos:position pos:line="18" pos:column="21"/></operator> <operator pos:line="18" pos:column="22">||<pos:position pos:line="18" pos:column="24"/></operator> <operator pos:line="18" pos:column="25">(<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">port<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">&gt;<pos:position pos:line="18" pos:column="35"/></operator> <literal type="number" pos:line="18" pos:column="33">65535<pos:position pos:line="18" pos:column="38"/></literal><operator pos:line="18" pos:column="38">)<pos:position pos:line="18" pos:column="39"/></operator></expr>)<pos:position pos:line="18" pos:column="40"/></condition><then pos:line="18" pos:column="40">
      <block pos:line="19" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">ERROR<pos:position pos:line="20" pos:column="14"/></name> <argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="string" pos:line="20" pos:column="16">"tcpconns plugin: Invalid port: %i"<pos:position pos:line="20" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="53">port<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>
	<return pos:line="21" pos:column="9">return <expr><operator pos:line="21" pos:column="16">(<pos:position pos:line="21" pos:column="17"/></operator><literal type="number" pos:line="21" pos:column="17">1<pos:position pos:line="21" pos:column="18"/></literal><operator pos:line="21" pos:column="18">)<pos:position pos:line="21" pos:column="19"/></operator></expr>;<pos:position pos:line="21" pos:column="20"/></return>
      }<pos:position pos:line="22" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="24" pos:column="7">pe<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <call><name pos:line="24" pos:column="12">conn_get_port_entry<pos:position pos:line="24" pos:column="31"/></name> <argument_list pos:line="24" pos:column="32">(<argument><expr><operator pos:line="24" pos:column="33">(<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">uint16_t<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">)<pos:position pos:line="24" pos:column="43"/></operator> <name pos:line="24" pos:column="44">port<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="50">1<pos:position pos:line="24" pos:column="51"/></literal></expr></argument> <comment type="block" pos:line="24" pos:column="52">/* create */</comment>)<pos:position pos:line="24" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="66"/></expr_stmt>
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><name pos:line="25" pos:column="11">pe<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">==<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">NULL<pos:position pos:line="25" pos:column="21"/></name></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22">
      <block pos:line="26" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">ERROR<pos:position pos:line="27" pos:column="14"/></name> <argument_list pos:line="27" pos:column="15">(<argument><expr><literal type="string" pos:line="27" pos:column="16">"tcpconns plugin: conn_get_port_entry failed."<pos:position pos:line="27" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="64"/></expr_stmt>
	<return pos:line="28" pos:column="9">return <expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><literal type="number" pos:line="28" pos:column="17">1<pos:position pos:line="28" pos:column="18"/></literal><operator pos:line="28" pos:column="18">)<pos:position pos:line="28" pos:column="19"/></operator></expr>;<pos:position pos:line="28" pos:column="20"/></return>
      }<pos:position pos:line="29" pos:column="8"/></block></then></if>

      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><call><name pos:line="31" pos:column="11">strcasecmp<pos:position pos:line="31" pos:column="21"/></name> <argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">key<pos:position pos:line="31" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="28">"LocalPort"<pos:position pos:line="31" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="40"/></argument_list></call> <operator pos:line="31" pos:column="41">==<pos:position pos:line="31" pos:column="43"/></operator> <literal type="number" pos:line="31" pos:column="44">0<pos:position pos:line="31" pos:column="45"/></literal></expr>)<pos:position pos:line="31" pos:column="46"/></condition><then pos:line="31" pos:column="46">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="9">pe<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">flags<pos:position pos:line="32" pos:column="18"/></name></name> <operator pos:line="32" pos:column="19">|=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">PORT_COLLECT_LOCAL<pos:position pos:line="32" pos:column="40"/></name></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt></block></then>
      <else pos:line="33" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="9">pe<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">flags<pos:position pos:line="34" pos:column="18"/></name></name> <operator pos:line="34" pos:column="19">|=<pos:position pos:line="34" pos:column="21"/></operator> <name pos:line="34" pos:column="22">PORT_COLLECT_REMOTE<pos:position pos:line="34" pos:column="41"/></name></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt></block></else></if>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if></elseif>
  <else pos:line="36" pos:column="3">else
  <block pos:line="37" pos:column="3">{
    <return pos:line="38" pos:column="5">return <expr><operator pos:line="38" pos:column="12">(<pos:position pos:line="38" pos:column="13"/></operator><operator pos:line="38" pos:column="13">-<pos:position pos:line="38" pos:column="14"/></operator><literal type="number" pos:line="38" pos:column="14">1<pos:position pos:line="38" pos:column="15"/></literal><operator pos:line="38" pos:column="15">)<pos:position pos:line="38" pos:column="16"/></operator></expr>;<pos:position pos:line="38" pos:column="17"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></else></if>

  <return pos:line="41" pos:column="3">return <expr><operator pos:line="41" pos:column="10">(<pos:position pos:line="41" pos:column="11"/></operator><literal type="number" pos:line="41" pos:column="11">0<pos:position pos:line="41" pos:column="12"/></literal><operator pos:line="41" pos:column="12">)<pos:position pos:line="41" pos:column="13"/></operator></expr>;<pos:position pos:line="41" pos:column="14"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

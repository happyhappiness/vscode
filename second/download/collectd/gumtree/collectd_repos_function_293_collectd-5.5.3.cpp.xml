<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_293_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">kafka_handle<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">kafka_topic_context<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">ctx<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list> <comment type="block" pos:line="1" pos:column="58">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type>                         <name><name pos:line="3" pos:column="34">errbuf<pos:position pos:line="3" pos:column="40"/></name><index pos:line="3" pos:column="40">[<expr><literal type="number" pos:line="3" pos:column="41">1024<pos:position pos:line="3" pos:column="45"/></literal></expr>]<pos:position pos:line="3" pos:column="46"/></index></name></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">rd_kafka_conf_t<pos:position pos:line="4" pos:column="20"/></name>             <modifier pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></modifier></type><name pos:line="4" pos:column="34">conf<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">rd_kafka_topic_conf_t<pos:position pos:line="5" pos:column="26"/></name>       <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">topic_conf<pos:position pos:line="5" pos:column="44"/></name></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">ctx<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">kafka<pos:position pos:line="7" pos:column="19"/></name></name> <operator pos:line="7" pos:column="20">!=<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">&amp;&amp;<pos:position pos:line="7" pos:column="38"/></operator> <name><name pos:line="7" pos:column="31">ctx<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">topic<pos:position pos:line="7" pos:column="41"/></name></name> <operator pos:line="7" pos:column="42">!=<pos:position pos:line="7" pos:column="44"/></operator> <name pos:line="7" pos:column="45">NULL<pos:position pos:line="7" pos:column="49"/></name></expr>)<pos:position pos:line="7" pos:column="50"/></condition><then pos:line="7" pos:column="50">
        <block type="pseudo"><return pos:line="8" pos:column="9">return<expr><operator pos:line="8" pos:column="15">(<pos:position pos:line="8" pos:column="16"/></operator><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal><operator pos:line="8" pos:column="17">)<pos:position pos:line="8" pos:column="18"/></operator></expr>;<pos:position pos:line="8" pos:column="19"/></return></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">ctx<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">kafka<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">==<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">NULL<pos:position pos:line="10" pos:column="27"/></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28"> <block pos:line="10" pos:column="29">{
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">conf<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <call><name pos:line="11" pos:column="21">rd_kafka_conf_dup<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">(<argument><expr><name><name pos:line="11" pos:column="39">ctx<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">kafka_conf<pos:position pos:line="11" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call><operator pos:line="11" pos:column="55">)<pos:position pos:line="11" pos:column="56"/></operator> <operator pos:line="11" pos:column="57">==<pos:position pos:line="11" pos:column="59"/></operator> <name pos:line="11" pos:column="60">NULL<pos:position pos:line="11" pos:column="64"/></name></expr>)<pos:position pos:line="11" pos:column="65"/></condition><then pos:line="11" pos:column="65"> <block pos:line="11" pos:column="66">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">ERROR<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><literal type="string" pos:line="12" pos:column="19">"write_kafka plugin: cannot duplicate kafka config"<pos:position pos:line="12" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt>
            <return pos:line="13" pos:column="13">return<expr><operator pos:line="13" pos:column="19">(<pos:position pos:line="13" pos:column="20"/></operator><literal type="number" pos:line="13" pos:column="20">1<pos:position pos:line="13" pos:column="21"/></literal><operator pos:line="13" pos:column="21">)<pos:position pos:line="13" pos:column="22"/></operator></expr>;<pos:position pos:line="13" pos:column="23"/></return>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name><name pos:line="16" pos:column="14">ctx<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">kafka<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <call><name pos:line="16" pos:column="27">rd_kafka_new<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">(<argument><expr><name pos:line="16" pos:column="40">RD_KAFKA_PRODUCER<pos:position pos:line="16" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="59">conf<pos:position pos:line="16" pos:column="63"/></name></expr></argument>,
                                    <argument><expr><name pos:line="17" pos:column="37">errbuf<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="45">sizeof<argument_list pos:line="17" pos:column="51">(<argument><expr><name pos:line="17" pos:column="52">errbuf<pos:position pos:line="17" pos:column="58"/></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call><operator pos:line="17" pos:column="60">)<pos:position pos:line="17" pos:column="61"/></operator> <operator pos:line="17" pos:column="62">==<pos:position pos:line="17" pos:column="64"/></operator> <name pos:line="17" pos:column="65">NULL<pos:position pos:line="17" pos:column="69"/></name></expr>)<pos:position pos:line="17" pos:column="70"/></condition><then pos:line="17" pos:column="70"> <block pos:line="17" pos:column="71">{
        	<expr_stmt><expr><call><name pos:line="18" pos:column="17">ERROR<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><literal type="string" pos:line="18" pos:column="23">"write_kafka plugin: cannot create kafka handle."<pos:position pos:line="18" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="74"/></expr_stmt>
        	<return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">1<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>

    	<expr_stmt><expr><call><name pos:line="22" pos:column="9">rd_kafka_conf_destroy<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name><name pos:line="22" pos:column="31">ctx<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">kafka_conf<pos:position pos:line="22" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>
    	<expr_stmt><expr><name><name pos:line="23" pos:column="9">ctx<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">kafka_conf<pos:position pos:line="23" pos:column="24"/></name></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">NULL<pos:position pos:line="23" pos:column="31"/></name></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>

    	<expr_stmt><expr><call><name pos:line="25" pos:column="9">INFO<pos:position pos:line="25" pos:column="13"/></name> <argument_list pos:line="25" pos:column="14">(<argument><expr><literal type="string" pos:line="25" pos:column="15">"write_kafka plugin: created KAFKA handle : %s"<pos:position pos:line="25" pos:column="62"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="64">rd_kafka_name<pos:position pos:line="25" pos:column="77"/></name><argument_list pos:line="25" pos:column="77">(<argument><expr><name><name pos:line="25" pos:column="78">ctx<pos:position pos:line="25" pos:column="81"/></name><operator pos:line="25" pos:column="81">-&gt;<pos:position pos:line="25" pos:column="86"/></operator><name pos:line="25" pos:column="83">kafka<pos:position pos:line="25" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="91"/></expr_stmt>

<cpp:ifdef pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">ifdef<pos:position pos:line="27" pos:column="7"/></cpp:directive> <name pos:line="27" pos:column="8">HAVE_LIBRDKAFKA_LOGGER<pos:position pos:line="27" pos:column="30"/></name></cpp:ifdef>
    	<expr_stmt><expr><call><name pos:line="28" pos:column="9">rd_kafka_set_logger<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name><name pos:line="28" pos:column="29">ctx<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">kafka<pos:position pos:line="28" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="41">kafka_log<pos:position pos:line="28" pos:column="50"/></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">ctx<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">topic<pos:position pos:line="32" pos:column="19"/></name></name> <operator pos:line="32" pos:column="20">==<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="23">NULL<pos:position pos:line="32" pos:column="27"/></name></expr> )<pos:position pos:line="32" pos:column="29"/></condition><then pos:line="32" pos:column="29"> <block pos:line="32" pos:column="30">{
    	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">(<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">topic_conf<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">=<pos:position pos:line="33" pos:column="26"/></operator> <call><name pos:line="33" pos:column="27">rd_kafka_topic_conf_dup<pos:position pos:line="33" pos:column="50"/></name><argument_list pos:line="33" pos:column="50">(<argument><expr><name><name pos:line="33" pos:column="51">ctx<pos:position pos:line="33" pos:column="54"/></name><operator pos:line="33" pos:column="54">-&gt;<pos:position pos:line="33" pos:column="59"/></operator><name pos:line="33" pos:column="56">conf<pos:position pos:line="33" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call><operator pos:line="33" pos:column="61">)<pos:position pos:line="33" pos:column="62"/></operator> <operator pos:line="33" pos:column="63">==<pos:position pos:line="33" pos:column="65"/></operator> <name pos:line="33" pos:column="66">NULL<pos:position pos:line="33" pos:column="70"/></name></expr>)<pos:position pos:line="33" pos:column="71"/></condition><then pos:line="33" pos:column="71"> <block pos:line="33" pos:column="72">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">ERROR<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><literal type="string" pos:line="34" pos:column="19">"write_kafka plugin: cannot duplicate kafka topic config"<pos:position pos:line="34" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="78"/></expr_stmt>
            <return pos:line="35" pos:column="13">return <expr><literal type="number" pos:line="35" pos:column="20">1<pos:position pos:line="35" pos:column="21"/></literal></expr>;<pos:position pos:line="35" pos:column="22"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

    	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">(<pos:position pos:line="38" pos:column="14"/></operator><name><name pos:line="38" pos:column="14">ctx<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">-&gt;<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="19">topic<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <call><name pos:line="38" pos:column="27">rd_kafka_topic_new<pos:position pos:line="38" pos:column="45"/></name><argument_list pos:line="38" pos:column="45">(<argument><expr><name><name pos:line="38" pos:column="46">ctx<pos:position pos:line="38" pos:column="49"/></name><operator pos:line="38" pos:column="49">-&gt;<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="51">kafka<pos:position pos:line="38" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="58">ctx<pos:position pos:line="38" pos:column="61"/></name><operator pos:line="38" pos:column="61">-&gt;<pos:position pos:line="38" pos:column="66"/></operator><name pos:line="38" pos:column="63">topic_name<pos:position pos:line="38" pos:column="73"/></name></name></expr></argument>,
                                       		<argument><expr><name pos:line="39" pos:column="49">topic_conf<pos:position pos:line="39" pos:column="59"/></name></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></call><operator pos:line="39" pos:column="60">)<pos:position pos:line="39" pos:column="61"/></operator> <operator pos:line="39" pos:column="62">==<pos:position pos:line="39" pos:column="64"/></operator> <name pos:line="39" pos:column="65">NULL<pos:position pos:line="39" pos:column="69"/></name></expr>)<pos:position pos:line="39" pos:column="70"/></condition><then pos:line="39" pos:column="70"> <block pos:line="39" pos:column="71">{
        	<expr_stmt><expr><call><name pos:line="40" pos:column="17">ERROR<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><literal type="string" pos:line="40" pos:column="23">"write_kafka plugin: cannot create topic : %s\n"<pos:position pos:line="40" pos:column="71"/></literal></expr></argument>, 
			<argument><expr><call><name pos:line="41" pos:column="25">rd_kafka_err2str<pos:position pos:line="41" pos:column="41"/></name><argument_list pos:line="41" pos:column="41">(<argument><expr><call><name pos:line="41" pos:column="42">rd_kafka_errno2err<pos:position pos:line="41" pos:column="60"/></name><argument_list pos:line="41" pos:column="60">(<argument><expr><name pos:line="41" pos:column="61">errno<pos:position pos:line="41" pos:column="66"/></name></expr></argument>)<pos:position pos:line="41" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="70"/></expr_stmt>
        	<return pos:line="42" pos:column="17">return <expr><name pos:line="42" pos:column="24">errno<pos:position pos:line="42" pos:column="29"/></name></expr>;<pos:position pos:line="42" pos:column="30"/></return>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if>

    	<expr_stmt><expr><call><name pos:line="45" pos:column="9">rd_kafka_topic_conf_destroy<pos:position pos:line="45" pos:column="36"/></name><argument_list pos:line="45" pos:column="36">(<argument><expr><name><name pos:line="45" pos:column="37">ctx<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">-&gt;<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="42">conf<pos:position pos:line="45" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">ctx<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">-&gt;<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="14">conf<pos:position pos:line="46" pos:column="18"/></name></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <name pos:line="46" pos:column="21">NULL<pos:position pos:line="46" pos:column="25"/></name></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt>

    	<expr_stmt><expr><call><name pos:line="48" pos:column="9">INFO<pos:position pos:line="48" pos:column="13"/></name> <argument_list pos:line="48" pos:column="14">(<argument><expr><literal type="string" pos:line="48" pos:column="15">"write_kafka plugin: handle created for topic : %s"<pos:position pos:line="48" pos:column="66"/></literal></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="68">rd_kafka_topic_name<pos:position pos:line="48" pos:column="87"/></name><argument_list pos:line="48" pos:column="87">(<argument><expr><name><name pos:line="48" pos:column="88">ctx<pos:position pos:line="48" pos:column="91"/></name><operator pos:line="48" pos:column="91">-&gt;<pos:position pos:line="48" pos:column="96"/></operator><name pos:line="48" pos:column="93">topic<pos:position pos:line="48" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="101"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <return pos:line="51" pos:column="5">return<expr><operator pos:line="51" pos:column="11">(<pos:position pos:line="51" pos:column="12"/></operator><literal type="number" pos:line="51" pos:column="12">0<pos:position pos:line="51" pos:column="13"/></literal><operator pos:line="51" pos:column="13">)<pos:position pos:line="51" pos:column="14"/></operator></expr>;<pos:position pos:line="51" pos:column="15"/></return>

}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

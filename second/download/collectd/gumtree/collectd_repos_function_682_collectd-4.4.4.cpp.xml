<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_682_collectd-4.4.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_ds<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">data_source_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">dsrc<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">buf<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">size_t<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">buf_len<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">dummy<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">saveptr<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name><name pos:line="5" pos:column="9">fields<pos:position pos:line="5" pos:column="15"/></name><index pos:line="5" pos:column="15">[<expr><literal type="number" pos:line="5" pos:column="16">8<pos:position pos:line="5" pos:column="17"/></literal></expr>]<pos:position pos:line="5" pos:column="18"/></index></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type>   <name pos:line="6" pos:column="9">fields_num<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">buf_len<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">&lt;<pos:position pos:line="8" pos:column="19"/></operator> <literal type="number" pos:line="8" pos:column="17">11<pos:position pos:line="8" pos:column="19"/></literal></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name> <argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="string" pos:line="10" pos:column="12">"parse_ds: (buf_len = %u) &lt; 11"<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="45">buf_len<pos:position pos:line="10" pos:column="52"/></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name><name pos:line="14" pos:column="7">buf<pos:position pos:line="14" pos:column="10"/></name><index pos:line="14" pos:column="10">[<expr><name pos:line="14" pos:column="11">buf_len<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">-<pos:position pos:line="14" pos:column="20"/></operator> <literal type="number" pos:line="14" pos:column="21">1<pos:position pos:line="14" pos:column="22"/></literal></expr>]<pos:position pos:line="14" pos:column="23"/></index></name> <operator pos:line="14" pos:column="24">==<pos:position pos:line="14" pos:column="26"/></operator> <literal type="char" pos:line="14" pos:column="27">','<pos:position pos:line="14" pos:column="30"/></literal></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31">
  <block pos:line="15" pos:column="3">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">buf_len<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">--<pos:position pos:line="16" pos:column="14"/></operator></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">buf<pos:position pos:line="17" pos:column="8"/></name><index pos:line="17" pos:column="8">[<expr><name pos:line="17" pos:column="9">buf_len<pos:position pos:line="17" pos:column="16"/></name></expr>]<pos:position pos:line="17" pos:column="17"/></index></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <literal type="char" pos:line="17" pos:column="20">'\0'<pos:position pos:line="17" pos:column="24"/></literal></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="20" pos:column="3">dummy<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <name pos:line="20" pos:column="11">buf<pos:position pos:line="20" pos:column="14"/></name></expr>;<pos:position pos:line="20" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">saveptr<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">NULL<pos:position pos:line="21" pos:column="17"/></name></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><name pos:line="23" pos:column="3">fields_num<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <literal type="number" pos:line="23" pos:column="16">0<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></expr_stmt>
  <while pos:line="24" pos:column="3">while <condition pos:line="24" pos:column="9">(<expr><name pos:line="24" pos:column="10">fields_num<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">&lt;<pos:position pos:line="24" pos:column="25"/></operator> <literal type="number" pos:line="24" pos:column="23">8<pos:position pos:line="24" pos:column="24"/></literal></expr>)<pos:position pos:line="24" pos:column="25"/></condition>
  <block pos:line="25" pos:column="3">{
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">(<pos:position pos:line="26" pos:column="10"/></operator><name><name pos:line="26" pos:column="10">fields<pos:position pos:line="26" pos:column="16"/></name><index pos:line="26" pos:column="16">[<expr><name pos:line="26" pos:column="17">fields_num<pos:position pos:line="26" pos:column="27"/></name></expr>]<pos:position pos:line="26" pos:column="28"/></index></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <call><name pos:line="26" pos:column="31">strtok_r<pos:position pos:line="26" pos:column="39"/></name> <argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">dummy<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="48">":"<pos:position pos:line="26" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="53">&amp;<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="54">saveptr<pos:position pos:line="26" pos:column="61"/></name></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call><operator pos:line="26" pos:column="62">)<pos:position pos:line="26" pos:column="63"/></operator> <operator pos:line="26" pos:column="64">==<pos:position pos:line="26" pos:column="66"/></operator> <name pos:line="26" pos:column="67">NULL<pos:position pos:line="26" pos:column="71"/></name></expr>)<pos:position pos:line="26" pos:column="72"/></condition><then pos:line="26" pos:column="72">
      <block type="pseudo"><break pos:line="27" pos:column="7">break;<pos:position pos:line="27" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="28" pos:column="5">dummy<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <name pos:line="28" pos:column="13">NULL<pos:position pos:line="28" pos:column="17"/></name></expr>;<pos:position pos:line="28" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">fields_num<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">++<pos:position pos:line="29" pos:column="17"/></operator></expr>;<pos:position pos:line="29" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></while>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">fields_num<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">!=<pos:position pos:line="32" pos:column="20"/></operator> <literal type="number" pos:line="32" pos:column="21">4<pos:position pos:line="32" pos:column="22"/></literal></expr>)<pos:position pos:line="32" pos:column="23"/></condition><then pos:line="32" pos:column="23">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ERROR<pos:position pos:line="34" pos:column="10"/></name> <argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="string" pos:line="34" pos:column="12">"parse_ds: (fields_num = %i) != 4"<pos:position pos:line="34" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="48">fields_num<pos:position pos:line="34" pos:column="58"/></name></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="60"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">(<pos:position pos:line="35" pos:column="13"/></operator><operator pos:line="35" pos:column="13">-<pos:position pos:line="35" pos:column="14"/></operator><literal type="number" pos:line="35" pos:column="14">1<pos:position pos:line="35" pos:column="15"/></literal><operator pos:line="35" pos:column="15">)<pos:position pos:line="35" pos:column="16"/></operator></expr>;<pos:position pos:line="35" pos:column="17"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">strncpy<pos:position pos:line="38" pos:column="10"/></name> <argument_list pos:line="38" pos:column="11">(<argument><expr><name><name pos:line="38" pos:column="12">dsrc<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">-&gt;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="18">name<pos:position pos:line="38" pos:column="22"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="24">fields<pos:position pos:line="38" pos:column="30"/></name><index pos:line="38" pos:column="30">[<expr><literal type="number" pos:line="38" pos:column="31">0<pos:position pos:line="38" pos:column="32"/></literal></expr>]<pos:position pos:line="38" pos:column="33"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="35">sizeof <argument_list pos:line="38" pos:column="42">(<argument><expr><name><name pos:line="38" pos:column="43">dsrc<pos:position pos:line="38" pos:column="47"/></name><operator pos:line="38" pos:column="47">-&gt;<pos:position pos:line="38" pos:column="52"/></operator><name pos:line="38" pos:column="49">name<pos:position pos:line="38" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">dsrc<pos:position pos:line="39" pos:column="7"/></name><operator pos:line="39" pos:column="7">-&gt;<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="9">name<pos:position pos:line="39" pos:column="13"/></name><index pos:line="39" pos:column="13">[<expr><sizeof pos:line="39" pos:column="14">sizeof <argument_list pos:line="39" pos:column="21">(<argument><expr><name><name pos:line="39" pos:column="22">dsrc<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">-&gt;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="28">name<pos:position pos:line="39" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="33"/></argument_list></sizeof> <operator pos:line="39" pos:column="34">-<pos:position pos:line="39" pos:column="35"/></operator> <literal type="number" pos:line="39" pos:column="36">1<pos:position pos:line="39" pos:column="37"/></literal></expr>]<pos:position pos:line="39" pos:column="38"/></index></name> <operator pos:line="39" pos:column="39">=<pos:position pos:line="39" pos:column="40"/></operator> <literal type="char" pos:line="39" pos:column="41">'\0'<pos:position pos:line="39" pos:column="45"/></literal></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt>

  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><call><name pos:line="41" pos:column="7">strcasecmp<pos:position pos:line="41" pos:column="17"/></name> <argument_list pos:line="41" pos:column="18">(<argument><expr><name><name pos:line="41" pos:column="19">fields<pos:position pos:line="41" pos:column="25"/></name><index pos:line="41" pos:column="25">[<expr><literal type="number" pos:line="41" pos:column="26">1<pos:position pos:line="41" pos:column="27"/></literal></expr>]<pos:position pos:line="41" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="30">"GAUGE"<pos:position pos:line="41" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="38"/></argument_list></call> <operator pos:line="41" pos:column="39">==<pos:position pos:line="41" pos:column="41"/></operator> <literal type="number" pos:line="41" pos:column="42">0<pos:position pos:line="41" pos:column="43"/></literal></expr>)<pos:position pos:line="41" pos:column="44"/></condition><then pos:line="41" pos:column="44">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="5">dsrc<pos:position pos:line="42" pos:column="9"/></name><operator pos:line="42" pos:column="9">-&gt;<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="11">type<pos:position pos:line="42" pos:column="15"/></name></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <name pos:line="42" pos:column="18">DS_TYPE_GAUGE<pos:position pos:line="42" pos:column="31"/></name></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt></block></then>
  <elseif pos:line="43" pos:column="3">else <if pos:line="43" pos:column="8">if <condition pos:line="43" pos:column="11">(<expr><call><name pos:line="43" pos:column="12">strcasecmp<pos:position pos:line="43" pos:column="22"/></name> <argument_list pos:line="43" pos:column="23">(<argument><expr><name><name pos:line="43" pos:column="24">fields<pos:position pos:line="43" pos:column="30"/></name><index pos:line="43" pos:column="30">[<expr><literal type="number" pos:line="43" pos:column="31">1<pos:position pos:line="43" pos:column="32"/></literal></expr>]<pos:position pos:line="43" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="35">"COUNTER"<pos:position pos:line="43" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="45"/></argument_list></call> <operator pos:line="43" pos:column="46">==<pos:position pos:line="43" pos:column="48"/></operator> <literal type="number" pos:line="43" pos:column="49">0<pos:position pos:line="43" pos:column="50"/></literal></expr>)<pos:position pos:line="43" pos:column="51"/></condition><then pos:line="43" pos:column="51">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="5">dsrc<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">-&gt;<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="11">type<pos:position pos:line="44" pos:column="15"/></name></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <name pos:line="44" pos:column="18">DS_TYPE_COUNTER<pos:position pos:line="44" pos:column="33"/></name></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt></block></then></if></elseif>
  <else pos:line="45" pos:column="3">else
  <block pos:line="46" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">ERROR<pos:position pos:line="47" pos:column="10"/></name> <argument_list pos:line="47" pos:column="11">(<argument><expr><literal type="string" pos:line="47" pos:column="12">"(fields[1] = %s) != (GAUGE || COUNTER)"<pos:position pos:line="47" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="54">fields<pos:position pos:line="47" pos:column="60"/></name><index pos:line="47" pos:column="60">[<expr><literal type="number" pos:line="47" pos:column="61">1<pos:position pos:line="47" pos:column="62"/></literal></expr>]<pos:position pos:line="47" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="65"/></expr_stmt>
    <return pos:line="48" pos:column="5">return <expr><operator pos:line="48" pos:column="12">(<pos:position pos:line="48" pos:column="13"/></operator><operator pos:line="48" pos:column="13">-<pos:position pos:line="48" pos:column="14"/></operator><literal type="number" pos:line="48" pos:column="14">1<pos:position pos:line="48" pos:column="15"/></literal><operator pos:line="48" pos:column="15">)<pos:position pos:line="48" pos:column="16"/></operator></expr>;<pos:position pos:line="48" pos:column="17"/></return>
  }<pos:position pos:line="49" pos:column="4"/></block></else></if>

  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><call><name pos:line="51" pos:column="7">strcasecmp<pos:position pos:line="51" pos:column="17"/></name> <argument_list pos:line="51" pos:column="18">(<argument><expr><name><name pos:line="51" pos:column="19">fields<pos:position pos:line="51" pos:column="25"/></name><index pos:line="51" pos:column="25">[<expr><literal type="number" pos:line="51" pos:column="26">2<pos:position pos:line="51" pos:column="27"/></literal></expr>]<pos:position pos:line="51" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="30">"U"<pos:position pos:line="51" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="34"/></argument_list></call> <operator pos:line="51" pos:column="35">==<pos:position pos:line="51" pos:column="37"/></operator> <literal type="number" pos:line="51" pos:column="38">0<pos:position pos:line="51" pos:column="39"/></literal></expr>)<pos:position pos:line="51" pos:column="40"/></condition><then pos:line="51" pos:column="40">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="52" pos:column="5">dsrc<pos:position pos:line="52" pos:column="9"/></name><operator pos:line="52" pos:column="9">-&gt;<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="11">min<pos:position pos:line="52" pos:column="14"/></name></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <name pos:line="52" pos:column="17">NAN<pos:position pos:line="52" pos:column="20"/></name></expr>;<pos:position pos:line="52" pos:column="21"/></expr_stmt></block></then>
  <else pos:line="53" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="5">dsrc<pos:position pos:line="54" pos:column="9"/></name><operator pos:line="54" pos:column="9">-&gt;<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="11">min<pos:position pos:line="54" pos:column="14"/></name></name> <operator pos:line="54" pos:column="15">=<pos:position pos:line="54" pos:column="16"/></operator> <call><name pos:line="54" pos:column="17">atof<pos:position pos:line="54" pos:column="21"/></name> <argument_list pos:line="54" pos:column="22">(<argument><expr><name><name pos:line="54" pos:column="23">fields<pos:position pos:line="54" pos:column="29"/></name><index pos:line="54" pos:column="29">[<expr><literal type="number" pos:line="54" pos:column="30">2<pos:position pos:line="54" pos:column="31"/></literal></expr>]<pos:position pos:line="54" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="54" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="34"/></expr_stmt></block></else></if>

  <if pos:line="56" pos:column="3">if <condition pos:line="56" pos:column="6">(<expr><call><name pos:line="56" pos:column="7">strcasecmp<pos:position pos:line="56" pos:column="17"/></name> <argument_list pos:line="56" pos:column="18">(<argument><expr><name><name pos:line="56" pos:column="19">fields<pos:position pos:line="56" pos:column="25"/></name><index pos:line="56" pos:column="25">[<expr><literal type="number" pos:line="56" pos:column="26">3<pos:position pos:line="56" pos:column="27"/></literal></expr>]<pos:position pos:line="56" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="30">"U"<pos:position pos:line="56" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="34"/></argument_list></call> <operator pos:line="56" pos:column="35">==<pos:position pos:line="56" pos:column="37"/></operator> <literal type="number" pos:line="56" pos:column="38">0<pos:position pos:line="56" pos:column="39"/></literal></expr>)<pos:position pos:line="56" pos:column="40"/></condition><then pos:line="56" pos:column="40">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="57" pos:column="5">dsrc<pos:position pos:line="57" pos:column="9"/></name><operator pos:line="57" pos:column="9">-&gt;<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="11">max<pos:position pos:line="57" pos:column="14"/></name></name> <operator pos:line="57" pos:column="15">=<pos:position pos:line="57" pos:column="16"/></operator> <name pos:line="57" pos:column="17">NAN<pos:position pos:line="57" pos:column="20"/></name></expr>;<pos:position pos:line="57" pos:column="21"/></expr_stmt></block></then>
  <else pos:line="58" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="59" pos:column="5">dsrc<pos:position pos:line="59" pos:column="9"/></name><operator pos:line="59" pos:column="9">-&gt;<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="11">max<pos:position pos:line="59" pos:column="14"/></name></name> <operator pos:line="59" pos:column="15">=<pos:position pos:line="59" pos:column="16"/></operator> <call><name pos:line="59" pos:column="17">atof<pos:position pos:line="59" pos:column="21"/></name> <argument_list pos:line="59" pos:column="22">(<argument><expr><name><name pos:line="59" pos:column="23">fields<pos:position pos:line="59" pos:column="29"/></name><index pos:line="59" pos:column="29">[<expr><literal type="number" pos:line="59" pos:column="30">3<pos:position pos:line="59" pos:column="31"/></literal></expr>]<pos:position pos:line="59" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="59" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="34"/></expr_stmt></block></else></if>

  <return pos:line="61" pos:column="3">return <expr><operator pos:line="61" pos:column="10">(<pos:position pos:line="61" pos:column="11"/></operator><literal type="number" pos:line="61" pos:column="11">0<pos:position pos:line="61" pos:column="12"/></literal><operator pos:line="61" pos:column="12">)<pos:position pos:line="61" pos:column="13"/></operator></expr>;<pos:position pos:line="61" pos:column="14"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_511_collectd-4.4.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tss2_config<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">key<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">value<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/*
	 * Interpret configuration values
	 */</comment>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">strcasecmp<pos:position pos:line="6" pos:column="19"/></name> <argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="string" pos:line="6" pos:column="21">"Host"<pos:position pos:line="6" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="29">key<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call> <operator pos:line="6" pos:column="34">==<pos:position pos:line="6" pos:column="36"/></operator> <literal type="number" pos:line="6" pos:column="37">0<pos:position pos:line="6" pos:column="38"/></literal></expr>)<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39">
	<block pos:line="7" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">char<pos:position pos:line="8" pos:column="21"/></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">temp<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name pos:line="10" pos:column="17">temp<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <call><name pos:line="10" pos:column="24">strdup<pos:position pos:line="10" pos:column="30"/></name> <argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">value<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">temp<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">==<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">NULL<pos:position pos:line="11" pos:column="33"/></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34">
		<block pos:line="12" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">ERROR<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><literal type="string" pos:line="13" pos:column="31">"teamspeak2 plugin: strdup failed."<pos:position pos:line="13" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>
			<return pos:line="14" pos:column="25">return <expr><operator pos:line="14" pos:column="32">(<pos:position pos:line="14" pos:column="33"/></operator><literal type="number" pos:line="14" pos:column="33">1<pos:position pos:line="14" pos:column="34"/></literal><operator pos:line="14" pos:column="34">)<pos:position pos:line="14" pos:column="35"/></operator></expr>;<pos:position pos:line="14" pos:column="36"/></return>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">sfree<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">config_host<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">config_host<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">=<pos:position pos:line="17" pos:column="30"/></operator> <name pos:line="17" pos:column="31">temp<pos:position pos:line="17" pos:column="35"/></name></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then>
	<elseif pos:line="19" pos:column="9">else <if pos:line="19" pos:column="14">if <condition pos:line="19" pos:column="17">(<expr><call><name pos:line="19" pos:column="18">strcasecmp<pos:position pos:line="19" pos:column="28"/></name> <argument_list pos:line="19" pos:column="29">(<argument><expr><literal type="string" pos:line="19" pos:column="30">"Port"<pos:position pos:line="19" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">key<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call> <operator pos:line="19" pos:column="43">==<pos:position pos:line="19" pos:column="45"/></operator> <literal type="number" pos:line="19" pos:column="46">0<pos:position pos:line="19" pos:column="47"/></literal></expr>)<pos:position pos:line="19" pos:column="48"/></condition><then pos:line="19" pos:column="48">
	<block pos:line="20" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">char<pos:position pos:line="21" pos:column="21"/></name> <modifier pos:line="21" pos:column="22">*<pos:position pos:line="21" pos:column="23"/></modifier></type><name pos:line="21" pos:column="23">temp<pos:position pos:line="21" pos:column="27"/></name></decl>;<pos:position pos:line="21" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name pos:line="23" pos:column="17">temp<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <call><name pos:line="23" pos:column="24">strdup<pos:position pos:line="23" pos:column="30"/></name> <argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">value<pos:position pos:line="23" pos:column="37"/></name></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">temp<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">==<pos:position pos:line="24" pos:column="28"/></operator> <name pos:line="24" pos:column="29">NULL<pos:position pos:line="24" pos:column="33"/></name></expr>)<pos:position pos:line="24" pos:column="34"/></condition><then pos:line="24" pos:column="34">
		<block pos:line="25" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">ERROR<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><literal type="string" pos:line="26" pos:column="31">"teamspeak2 plugin: strdup failed."<pos:position pos:line="26" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="68"/></expr_stmt>
			<return pos:line="27" pos:column="25">return <expr><operator pos:line="27" pos:column="32">(<pos:position pos:line="27" pos:column="33"/></operator><literal type="number" pos:line="27" pos:column="33">1<pos:position pos:line="27" pos:column="34"/></literal><operator pos:line="27" pos:column="34">)<pos:position pos:line="27" pos:column="35"/></operator></expr>;<pos:position pos:line="27" pos:column="36"/></return>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">sfree<pos:position pos:line="29" pos:column="22"/></name> <argument_list pos:line="29" pos:column="23">(<argument><expr><name pos:line="29" pos:column="24">config_port<pos:position pos:line="29" pos:column="35"/></name></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">config_port<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <name pos:line="30" pos:column="31">temp<pos:position pos:line="30" pos:column="35"/></name></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="32" pos:column="9">else <if pos:line="32" pos:column="14">if <condition pos:line="32" pos:column="17">(<expr><call><name pos:line="32" pos:column="18">strcasecmp<pos:position pos:line="32" pos:column="28"/></name> <argument_list pos:line="32" pos:column="29">(<argument><expr><literal type="string" pos:line="32" pos:column="30">"Server"<pos:position pos:line="32" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="40">key<pos:position pos:line="32" pos:column="43"/></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call> <operator pos:line="32" pos:column="45">==<pos:position pos:line="32" pos:column="47"/></operator> <literal type="number" pos:line="32" pos:column="48">0<pos:position pos:line="32" pos:column="49"/></literal></expr>)<pos:position pos:line="32" pos:column="50"/></condition><then pos:line="32" pos:column="50">
	<block pos:line="33" pos:column="9">{
		<comment type="block" pos:line="34" pos:column="17">/* Server variable found */</comment>
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">int<pos:position pos:line="35" pos:column="20"/></name></type> <name pos:line="35" pos:column="21">status<pos:position pos:line="35" pos:column="27"/></name></decl>;<pos:position pos:line="35" pos:column="28"/></decl_stmt>
		
		<expr_stmt><expr><name pos:line="37" pos:column="17">status<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <call><name pos:line="37" pos:column="26">tss2_add_vserver<pos:position pos:line="37" pos:column="42"/></name> <argument_list pos:line="37" pos:column="43">(<argument><expr><call><name pos:line="37" pos:column="44">atoi<pos:position pos:line="37" pos:column="48"/></name> <argument_list pos:line="37" pos:column="49">(<argument><expr><name pos:line="37" pos:column="50">value<pos:position pos:line="37" pos:column="55"/></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="58"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">status<pos:position pos:line="38" pos:column="27"/></name> <operator pos:line="38" pos:column="28">!=<pos:position pos:line="38" pos:column="30"/></operator> <literal type="number" pos:line="38" pos:column="31">0<pos:position pos:line="38" pos:column="32"/></literal></expr>)<pos:position pos:line="38" pos:column="33"/></condition><then pos:line="38" pos:column="33">
			<block type="pseudo"><return pos:line="39" pos:column="25">return <expr><operator pos:line="39" pos:column="32">(<pos:position pos:line="39" pos:column="33"/></operator><literal type="number" pos:line="39" pos:column="33">1<pos:position pos:line="39" pos:column="34"/></literal><operator pos:line="39" pos:column="34">)<pos:position pos:line="39" pos:column="35"/></operator></expr>;<pos:position pos:line="39" pos:column="36"/></return></block></then></if>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if></elseif>
	<else pos:line="41" pos:column="9">else
	<block pos:line="42" pos:column="9">{
		<comment type="block" pos:line="43" pos:column="17">/* Unknown variable found */</comment>
		<return pos:line="44" pos:column="17">return <expr><operator pos:line="44" pos:column="24">(<pos:position pos:line="44" pos:column="25"/></operator><operator pos:line="44" pos:column="25">-<pos:position pos:line="44" pos:column="26"/></operator><literal type="number" pos:line="44" pos:column="26">1<pos:position pos:line="44" pos:column="27"/></literal><operator pos:line="44" pos:column="27">)<pos:position pos:line="44" pos:column="28"/></operator></expr>;<pos:position pos:line="44" pos:column="29"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></else></if>

	<return pos:line="47" pos:column="9">return <expr><literal type="number" pos:line="47" pos:column="16">0<pos:position pos:line="47" pos:column="17"/></literal></expr>;<pos:position pos:line="47" pos:column="18"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

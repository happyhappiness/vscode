<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2706_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fc_bit_jump_create<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">oconfig_item_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">ci<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="57">/* {{{ */</comment>
                              <parameter><decl><type><name pos:line="2" pos:column="31">void<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier><modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">user_data<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list> <block pos:line="2" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">oconfig_item_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">ci_chain<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name><name pos:line="5" pos:column="7">ci<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">-&gt;<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="11">children_num<pos:position pos:line="5" pos:column="23"/></name></name> <operator pos:line="5" pos:column="24">!=<pos:position pos:line="5" pos:column="26"/></operator> <literal type="number" pos:line="5" pos:column="27">1<pos:position pos:line="5" pos:column="28"/></literal></expr>)<pos:position pos:line="5" pos:column="29"/></condition><then pos:line="5" pos:column="29"> <block pos:line="5" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">ERROR<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><literal type="string" pos:line="6" pos:column="11">"Filter subsystem: The built-in target `jump' needs exactly "<pos:position pos:line="6" pos:column="72"/></literal>
          <literal type="string" pos:line="7" pos:column="11">"one `Chain' argument!"<pos:position pos:line="7" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">-<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">1<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">ci_chain<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name><name pos:line="11" pos:column="14">ci<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">children<pos:position pos:line="11" pos:column="26"/></name></name></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name pos:line="12" pos:column="7">strcasecmp<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><literal type="string" pos:line="12" pos:column="18">"Chain"<pos:position pos:line="12" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="27">ci_chain<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">key<pos:position pos:line="12" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call> <operator pos:line="12" pos:column="42">!=<pos:position pos:line="12" pos:column="44"/></operator> <literal type="number" pos:line="12" pos:column="45">0<pos:position pos:line="12" pos:column="46"/></literal></expr>)<pos:position pos:line="12" pos:column="47"/></condition><then pos:line="12" pos:column="47"> <block pos:line="12" pos:column="48">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><literal type="string" pos:line="13" pos:column="11">"Filter subsystem: The built-in target `jump' does not "<pos:position pos:line="13" pos:column="67"/></literal>
          <literal type="string" pos:line="14" pos:column="11">"support the configuration option `%s'."<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="15" pos:column="11">ci_chain<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">-&gt;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="21">key<pos:position pos:line="15" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">-<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">1<pos:position pos:line="16" pos:column="14"/></literal></expr>;<pos:position pos:line="16" pos:column="15"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">(<pos:position pos:line="19" pos:column="8"/></operator><name><name pos:line="19" pos:column="8">ci_chain<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">values_num<pos:position pos:line="19" pos:column="28"/></name></name> <operator pos:line="19" pos:column="29">!=<pos:position pos:line="19" pos:column="31"/></operator> <literal type="number" pos:line="19" pos:column="32">1<pos:position pos:line="19" pos:column="33"/></literal><operator pos:line="19" pos:column="33">)<pos:position pos:line="19" pos:column="34"/></operator> <operator pos:line="19" pos:column="35">||<pos:position pos:line="19" pos:column="37"/></operator>
      <operator pos:line="20" pos:column="7">(<pos:position pos:line="20" pos:column="8"/></operator><name><name pos:line="20" pos:column="8">ci_chain<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">values<pos:position pos:line="20" pos:column="24"/></name><index pos:line="20" pos:column="24">[<expr><literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal></expr>]<pos:position pos:line="20" pos:column="27"/></index></name><operator pos:line="20" pos:column="27">.<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="28">type<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">!=<pos:position pos:line="20" pos:column="35"/></operator> <name pos:line="20" pos:column="36">OCONFIG_TYPE_STRING<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">)<pos:position pos:line="20" pos:column="56"/></operator></expr>)<pos:position pos:line="20" pos:column="57"/></condition><then pos:line="20" pos:column="57"> <block pos:line="20" pos:column="58">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">ERROR<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><literal type="string" pos:line="21" pos:column="11">"Filter subsystem: Built-in target `jump': The `Chain' option "<pos:position pos:line="21" pos:column="74"/></literal>
          <literal type="string" pos:line="22" pos:column="11">"needs exactly one string argument."<pos:position pos:line="22" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">-<pos:position pos:line="23" pos:column="13"/></operator><literal type="number" pos:line="23" pos:column="13">1<pos:position pos:line="23" pos:column="14"/></literal></expr>;<pos:position pos:line="23" pos:column="15"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="26" pos:column="3">*<pos:position pos:line="26" pos:column="4"/></operator><name pos:line="26" pos:column="4">user_data<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">fc_strdup<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name><name pos:line="26" pos:column="26">ci_chain<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">-&gt;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="36">values<pos:position pos:line="26" pos:column="42"/></name><index pos:line="26" pos:column="42">[<expr><literal type="number" pos:line="26" pos:column="43">0<pos:position pos:line="26" pos:column="44"/></literal></expr>]<pos:position pos:line="26" pos:column="45"/></index></name><operator pos:line="26" pos:column="45">.<pos:position pos:line="26" pos:column="46"/></operator><name><name pos:line="26" pos:column="46">value<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">.<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="52">string<pos:position pos:line="26" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="60"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><operator pos:line="27" pos:column="7">*<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">user_data<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">==<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">NULL<pos:position pos:line="27" pos:column="25"/></name></expr>)<pos:position pos:line="27" pos:column="26"/></condition><then pos:line="27" pos:column="26"> <block pos:line="27" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ERROR<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><literal type="string" pos:line="28" pos:column="11">"fc_bit_jump_create: fc_strdup failed."<pos:position pos:line="28" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">-<pos:position pos:line="29" pos:column="13"/></operator><literal type="number" pos:line="29" pos:column="13">1<pos:position pos:line="29" pos:column="14"/></literal></expr>;<pos:position pos:line="29" pos:column="15"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <return pos:line="32" pos:column="3">return <expr><literal type="number" pos:line="32" pos:column="10">0<pos:position pos:line="32" pos:column="11"/></literal></expr>;<pos:position pos:line="32" pos:column="12"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

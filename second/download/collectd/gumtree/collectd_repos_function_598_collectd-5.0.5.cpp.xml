<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_598_collectd-5.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">service_name_to_port_number<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">service_name<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">addrinfo<pos:position pos:line="3" pos:column="24"/></name></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">ai_list<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">addrinfo<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">ai_ptr<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">addrinfo<pos:position pos:line="5" pos:column="24"/></name></name></type> <name pos:line="5" pos:column="25">ai_hints<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">status<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">service_number<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">service_name<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">==<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="29">NULL<pos:position pos:line="9" pos:column="33"/></name></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">-<pos:position pos:line="10" pos:column="26"/></operator><literal type="number" pos:line="10" pos:column="26">1<pos:position pos:line="10" pos:column="27"/></literal><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator></expr>;<pos:position pos:line="10" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">ai_list<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">NULL<pos:position pos:line="12" pos:column="23"/></name></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">memset<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">(<argument><expr><operator pos:line="13" pos:column="17">&amp;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="18">ai_hints<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="28">0<pos:position pos:line="13" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="31">sizeof <argument_list pos:line="13" pos:column="38">(<argument><expr><name pos:line="13" pos:column="39">ai_hints<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">ai_hints<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">.<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">ai_family<pos:position pos:line="14" pos:column="27"/></name></name> <operator pos:line="14" pos:column="28">=<pos:position pos:line="14" pos:column="29"/></operator> <name pos:line="14" pos:column="30">AF_UNSPEC<pos:position pos:line="14" pos:column="39"/></name></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><name pos:line="16" pos:column="9">status<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">getaddrinfo<pos:position pos:line="16" pos:column="29"/></name> <argument_list pos:line="16" pos:column="30">(<comment type="block" pos:line="16" pos:column="31">/* node = */</comment> <argument><expr><name pos:line="16" pos:column="44">NULL<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="50">service_name<pos:position pos:line="16" pos:column="62"/></name></expr></argument>,
			<argument><expr><operator pos:line="17" pos:column="25">&amp;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="26">ai_hints<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="36">&amp;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="37">ai_list<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">status<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">!=<pos:position pos:line="18" pos:column="22"/></operator> <literal type="number" pos:line="18" pos:column="23">0<pos:position pos:line="18" pos:column="24"/></literal></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25">
	<block pos:line="19" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">ERROR<pos:position pos:line="20" pos:column="22"/></name> <argument_list pos:line="20" pos:column="23">(<argument><expr><literal type="string" pos:line="20" pos:column="24">"service_name_to_port_number: getaddrinfo failed: %s"<pos:position pos:line="20" pos:column="77"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="21" pos:column="33">gai_strerror<pos:position pos:line="21" pos:column="45"/></name> <argument_list pos:line="21" pos:column="46">(<argument><expr><name pos:line="21" pos:column="47">status<pos:position pos:line="21" pos:column="53"/></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
		<return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><operator pos:line="22" pos:column="25">-<pos:position pos:line="22" pos:column="26"/></operator><literal type="number" pos:line="22" pos:column="26">1<pos:position pos:line="22" pos:column="27"/></literal><operator pos:line="22" pos:column="27">)<pos:position pos:line="22" pos:column="28"/></operator></expr>;<pos:position pos:line="22" pos:column="29"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="25" pos:column="9">service_number<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <operator pos:line="25" pos:column="26">-<pos:position pos:line="25" pos:column="27"/></operator><literal type="number" pos:line="25" pos:column="27">1<pos:position pos:line="25" pos:column="28"/></literal></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
	<for pos:line="26" pos:column="9">for <control pos:line="26" pos:column="13">(<init><expr><name pos:line="26" pos:column="14">ai_ptr<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">ai_list<pos:position pos:line="26" pos:column="30"/></name></expr>;<pos:position pos:line="26" pos:column="31"/></init> <condition><expr><name pos:line="26" pos:column="32">ai_ptr<pos:position pos:line="26" pos:column="38"/></name> <operator pos:line="26" pos:column="39">!=<pos:position pos:line="26" pos:column="41"/></operator> <name pos:line="26" pos:column="42">NULL<pos:position pos:line="26" pos:column="46"/></name></expr>;<pos:position pos:line="26" pos:column="47"/></condition> <incr><expr><name pos:line="26" pos:column="48">ai_ptr<pos:position pos:line="26" pos:column="54"/></name> <operator pos:line="26" pos:column="55">=<pos:position pos:line="26" pos:column="56"/></operator> <name><name pos:line="26" pos:column="57">ai_ptr<pos:position pos:line="26" pos:column="63"/></name><operator pos:line="26" pos:column="63">-&gt;<pos:position pos:line="26" pos:column="68"/></operator><name pos:line="26" pos:column="65">ai_next<pos:position pos:line="26" pos:column="72"/></name></name></expr></incr>)<pos:position pos:line="26" pos:column="73"/></control>
	<block pos:line="27" pos:column="9">{
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name><name pos:line="28" pos:column="21">ai_ptr<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">-&gt;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="29">ai_family<pos:position pos:line="28" pos:column="38"/></name></name> <operator pos:line="28" pos:column="39">==<pos:position pos:line="28" pos:column="41"/></operator> <name pos:line="28" pos:column="42">AF_INET<pos:position pos:line="28" pos:column="49"/></name></expr>)<pos:position pos:line="28" pos:column="50"/></condition><then pos:line="28" pos:column="50">
		<block pos:line="29" pos:column="17">{
			<decl_stmt><decl><type><name><name pos:line="30" pos:column="25">struct<pos:position pos:line="30" pos:column="31"/></name> <name pos:line="30" pos:column="32">sockaddr_in<pos:position pos:line="30" pos:column="43"/></name></name> <modifier pos:line="30" pos:column="44">*<pos:position pos:line="30" pos:column="45"/></modifier></type><name pos:line="30" pos:column="45">sa<pos:position pos:line="30" pos:column="47"/></name></decl>;<pos:position pos:line="30" pos:column="48"/></decl_stmt>

			<expr_stmt><expr><name pos:line="32" pos:column="25">sa<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">=<pos:position pos:line="32" pos:column="29"/></operator> <operator pos:line="32" pos:column="30">(<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="31">void<pos:position pos:line="32" pos:column="35"/></name> <operator pos:line="32" pos:column="36">*<pos:position pos:line="32" pos:column="37"/></operator><operator pos:line="32" pos:column="37">)<pos:position pos:line="32" pos:column="38"/></operator> <name><name pos:line="32" pos:column="39">ai_ptr<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">-&gt;<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="47">ai_addr<pos:position pos:line="32" pos:column="54"/></name></name></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name pos:line="33" pos:column="25">service_number<pos:position pos:line="33" pos:column="39"/></name> <operator pos:line="33" pos:column="40">=<pos:position pos:line="33" pos:column="41"/></operator> <operator pos:line="33" pos:column="42">(<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="43">int<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">)<pos:position pos:line="33" pos:column="47"/></operator> <call><name pos:line="33" pos:column="48">ntohs<pos:position pos:line="33" pos:column="53"/></name> <argument_list pos:line="33" pos:column="54">(<argument><expr><name><name pos:line="33" pos:column="55">sa<pos:position pos:line="33" pos:column="57"/></name><operator pos:line="33" pos:column="57">-&gt;<pos:position pos:line="33" pos:column="62"/></operator><name pos:line="33" pos:column="59">sin_port<pos:position pos:line="33" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></then>
		<elseif pos:line="35" pos:column="17">else <if pos:line="35" pos:column="22">if <condition pos:line="35" pos:column="25">(<expr><name><name pos:line="35" pos:column="26">ai_ptr<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">-&gt;<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="34">ai_family<pos:position pos:line="35" pos:column="43"/></name></name> <operator pos:line="35" pos:column="44">==<pos:position pos:line="35" pos:column="46"/></operator> <name pos:line="35" pos:column="47">AF_INET6<pos:position pos:line="35" pos:column="55"/></name></expr>)<pos:position pos:line="35" pos:column="56"/></condition><then pos:line="35" pos:column="56">
		<block pos:line="36" pos:column="17">{
			<decl_stmt><decl><type><name><name pos:line="37" pos:column="25">struct<pos:position pos:line="37" pos:column="31"/></name> <name pos:line="37" pos:column="32">sockaddr_in6<pos:position pos:line="37" pos:column="44"/></name></name> <modifier pos:line="37" pos:column="45">*<pos:position pos:line="37" pos:column="46"/></modifier></type><name pos:line="37" pos:column="46">sa<pos:position pos:line="37" pos:column="48"/></name></decl>;<pos:position pos:line="37" pos:column="49"/></decl_stmt>

			<expr_stmt><expr><name pos:line="39" pos:column="25">sa<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <operator pos:line="39" pos:column="30">(<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="31">void<pos:position pos:line="39" pos:column="35"/></name> <operator pos:line="39" pos:column="36">*<pos:position pos:line="39" pos:column="37"/></operator><operator pos:line="39" pos:column="37">)<pos:position pos:line="39" pos:column="38"/></operator> <name><name pos:line="39" pos:column="39">ai_ptr<pos:position pos:line="39" pos:column="45"/></name><operator pos:line="39" pos:column="45">-&gt;<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="47">ai_addr<pos:position pos:line="39" pos:column="54"/></name></name></expr>;<pos:position pos:line="39" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name pos:line="40" pos:column="25">service_number<pos:position pos:line="40" pos:column="39"/></name> <operator pos:line="40" pos:column="40">=<pos:position pos:line="40" pos:column="41"/></operator> <operator pos:line="40" pos:column="42">(<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="43">int<pos:position pos:line="40" pos:column="46"/></name><operator pos:line="40" pos:column="46">)<pos:position pos:line="40" pos:column="47"/></operator> <call><name pos:line="40" pos:column="48">ntohs<pos:position pos:line="40" pos:column="53"/></name> <argument_list pos:line="40" pos:column="54">(<argument><expr><name><name pos:line="40" pos:column="55">sa<pos:position pos:line="40" pos:column="57"/></name><operator pos:line="40" pos:column="57">-&gt;<pos:position pos:line="40" pos:column="62"/></operator><name pos:line="40" pos:column="59">sin6_port<pos:position pos:line="40" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="70"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if></elseif></if>

		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><operator pos:line="43" pos:column="21">(<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">service_number<pos:position pos:line="43" pos:column="36"/></name> <operator pos:line="43" pos:column="37">&gt;<pos:position pos:line="43" pos:column="41"/></operator> <literal type="number" pos:line="43" pos:column="39">0<pos:position pos:line="43" pos:column="40"/></literal><operator pos:line="43" pos:column="40">)<pos:position pos:line="43" pos:column="41"/></operator> <operator pos:line="43" pos:column="42">&amp;&amp;<pos:position pos:line="43" pos:column="52"/></operator> <operator pos:line="43" pos:column="45">(<pos:position pos:line="43" pos:column="46"/></operator><name pos:line="43" pos:column="46">service_number<pos:position pos:line="43" pos:column="60"/></name> <operator pos:line="43" pos:column="61">&lt;=<pos:position pos:line="43" pos:column="66"/></operator> <literal type="number" pos:line="43" pos:column="64">65535<pos:position pos:line="43" pos:column="69"/></literal><operator pos:line="43" pos:column="69">)<pos:position pos:line="43" pos:column="70"/></operator></expr>)<pos:position pos:line="43" pos:column="71"/></condition><then pos:line="43" pos:column="71">
			<block type="pseudo"><break pos:line="44" pos:column="25">break;<pos:position pos:line="44" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="45" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="47" pos:column="9">freeaddrinfo<pos:position pos:line="47" pos:column="21"/></name> <argument_list pos:line="47" pos:column="22">(<argument><expr><name pos:line="47" pos:column="23">ai_list<pos:position pos:line="47" pos:column="30"/></name></expr></argument>)<pos:position pos:line="47" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt>

	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">(<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">service_number<pos:position pos:line="49" pos:column="28"/></name> <operator pos:line="49" pos:column="29">&gt;<pos:position pos:line="49" pos:column="33"/></operator> <literal type="number" pos:line="49" pos:column="31">0<pos:position pos:line="49" pos:column="32"/></literal><operator pos:line="49" pos:column="32">)<pos:position pos:line="49" pos:column="33"/></operator> <operator pos:line="49" pos:column="34">&amp;&amp;<pos:position pos:line="49" pos:column="44"/></operator> <operator pos:line="49" pos:column="37">(<pos:position pos:line="49" pos:column="38"/></operator><name pos:line="49" pos:column="38">service_number<pos:position pos:line="49" pos:column="52"/></name> <operator pos:line="49" pos:column="53">&lt;=<pos:position pos:line="49" pos:column="58"/></operator> <literal type="number" pos:line="49" pos:column="56">65535<pos:position pos:line="49" pos:column="61"/></literal><operator pos:line="49" pos:column="61">)<pos:position pos:line="49" pos:column="62"/></operator></expr>)<pos:position pos:line="49" pos:column="63"/></condition><then pos:line="49" pos:column="63">
		<block type="pseudo"><return pos:line="50" pos:column="17">return <expr><operator pos:line="50" pos:column="24">(<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="25">service_number<pos:position pos:line="50" pos:column="39"/></name><operator pos:line="50" pos:column="39">)<pos:position pos:line="50" pos:column="40"/></operator></expr>;<pos:position pos:line="50" pos:column="41"/></return></block></then></if>
	<return pos:line="51" pos:column="9">return <expr><operator pos:line="51" pos:column="16">(<pos:position pos:line="51" pos:column="17"/></operator><operator pos:line="51" pos:column="17">-<pos:position pos:line="51" pos:column="18"/></operator><literal type="number" pos:line="51" pos:column="18">1<pos:position pos:line="51" pos:column="19"/></literal><operator pos:line="51" pos:column="19">)<pos:position pos:line="51" pos:column="20"/></operator></expr>;<pos:position pos:line="51" pos:column="21"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_847_collectd-4.10.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">data_volume_usage_t<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">get_volume_usage<pos:position pos:line="1" pos:column="45"/></name> <parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name pos:line="1" pos:column="47">cfg_volume_usage_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">cvu<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="72">/* {{{ */</comment>
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">name<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">data_volume_usage_t<pos:position pos:line="4" pos:column="28"/></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">last<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<expr_stmt><expr><name pos:line="5" pos:column="9">data_volume_usage_t<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></operator><operator pos:line="5" pos:column="30">new<pos:position pos:line="5" pos:column="33"/></operator></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>

	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">ignore_capacity<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><literal type="number" pos:line="7" pos:column="31">0<pos:position pos:line="7" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">ignore_snapshot<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><literal type="number" pos:line="8" pos:column="31">0<pos:position pos:line="8" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">cvu<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">==<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">NULL<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">)<pos:position pos:line="10" pos:column="26"/></operator> <operator pos:line="10" pos:column="27">||<pos:position pos:line="10" pos:column="29"/></operator> <operator pos:line="10" pos:column="30">(<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">name<pos:position pos:line="10" pos:column="35"/></name> <operator pos:line="10" pos:column="36">==<pos:position pos:line="10" pos:column="38"/></operator> <name pos:line="10" pos:column="39">NULL<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">)<pos:position pos:line="10" pos:column="44"/></operator></expr>)<pos:position pos:line="10" pos:column="45"/></condition><then pos:line="10" pos:column="45">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">NULL<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">)<pos:position pos:line="11" pos:column="30"/></operator></expr>;<pos:position pos:line="11" pos:column="31"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="13" pos:column="9">last<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name><name pos:line="13" pos:column="16">cvu<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">volumes<pos:position pos:line="13" pos:column="28"/></name></name></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
	<while pos:line="14" pos:column="9">while <condition pos:line="14" pos:column="15">(<expr><name pos:line="14" pos:column="16">last<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">!=<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">NULL<pos:position pos:line="14" pos:column="28"/></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition>
	<block pos:line="15" pos:column="9">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><call><name pos:line="16" pos:column="21">strcmp<pos:position pos:line="16" pos:column="27"/></name> <argument_list pos:line="16" pos:column="28">(<argument><expr><name><name pos:line="16" pos:column="29">last<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">name<pos:position pos:line="16" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="41">name<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call> <operator pos:line="16" pos:column="47">==<pos:position pos:line="16" pos:column="49"/></operator> <literal type="number" pos:line="16" pos:column="50">0<pos:position pos:line="16" pos:column="51"/></literal></expr>)<pos:position pos:line="16" pos:column="52"/></condition><then pos:line="16" pos:column="52">
			<block type="pseudo"><return pos:line="17" pos:column="25">return <expr><operator pos:line="17" pos:column="32">(<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="33">last<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">)<pos:position pos:line="17" pos:column="38"/></operator></expr>;<pos:position pos:line="17" pos:column="39"/></return></block></then></if>

		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name><name pos:line="19" pos:column="21">last<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">next<pos:position pos:line="19" pos:column="31"/></name></name> <operator pos:line="19" pos:column="32">==<pos:position pos:line="19" pos:column="34"/></operator> <name pos:line="19" pos:column="35">NULL<pos:position pos:line="19" pos:column="39"/></name></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40">
			<block type="pseudo"><break pos:line="20" pos:column="25">break;<pos:position pos:line="20" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><name pos:line="22" pos:column="17">last<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name><name pos:line="22" pos:column="24">last<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">-&gt;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="30">next<pos:position pos:line="22" pos:column="34"/></name></name></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></while>

	<comment type="block" pos:line="25" pos:column="9">/* Check the ignorelists. If *both* tell us to ignore a volume, return NULL. */</comment>
	<expr_stmt><expr><name pos:line="26" pos:column="9">ignore_capacity<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <call><name pos:line="26" pos:column="27">ignorelist_match<pos:position pos:line="26" pos:column="43"/></name> <argument_list pos:line="26" pos:column="44">(<argument><expr><name><name pos:line="26" pos:column="45">cvu<pos:position pos:line="26" pos:column="48"/></name><operator pos:line="26" pos:column="48">-&gt;<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="50">il_capacity<pos:position pos:line="26" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="63">name<pos:position pos:line="26" pos:column="67"/></name></expr></argument>)<pos:position pos:line="26" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><name pos:line="27" pos:column="9">ignore_snapshot<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <call><name pos:line="27" pos:column="27">ignorelist_match<pos:position pos:line="27" pos:column="43"/></name> <argument_list pos:line="27" pos:column="44">(<argument><expr><name><name pos:line="27" pos:column="45">cvu<pos:position pos:line="27" pos:column="48"/></name><operator pos:line="27" pos:column="48">-&gt;<pos:position pos:line="27" pos:column="53"/></operator><name pos:line="27" pos:column="50">il_snapshot<pos:position pos:line="27" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="63">name<pos:position pos:line="27" pos:column="67"/></name></expr></argument>)<pos:position pos:line="27" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="69"/></expr_stmt>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">ignore_capacity<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">!=<pos:position pos:line="28" pos:column="32"/></operator> <literal type="number" pos:line="28" pos:column="33">0<pos:position pos:line="28" pos:column="34"/></literal><operator pos:line="28" pos:column="34">)<pos:position pos:line="28" pos:column="35"/></operator> <operator pos:line="28" pos:column="36">&amp;&amp;<pos:position pos:line="28" pos:column="46"/></operator> <operator pos:line="28" pos:column="39">(<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="40">ignore_snapshot<pos:position pos:line="28" pos:column="55"/></name> <operator pos:line="28" pos:column="56">!=<pos:position pos:line="28" pos:column="58"/></operator> <literal type="number" pos:line="28" pos:column="59">0<pos:position pos:line="28" pos:column="60"/></literal><operator pos:line="28" pos:column="60">)<pos:position pos:line="28" pos:column="61"/></operator></expr>)<pos:position pos:line="28" pos:column="62"/></condition><then pos:line="28" pos:column="62">
		<block type="pseudo"><return pos:line="29" pos:column="17">return <expr><operator pos:line="29" pos:column="24">(<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="25">NULL<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">)<pos:position pos:line="29" pos:column="30"/></operator></expr>;<pos:position pos:line="29" pos:column="31"/></return></block></then></if>

	<comment type="block" pos:line="31" pos:column="9">/* Not found: allocate. */</comment>
	<expr_stmt><expr><operator pos:line="32" pos:column="9">new<pos:position pos:line="32" pos:column="12"/></operator> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <call><name pos:line="32" pos:column="15">malloc<pos:position pos:line="32" pos:column="21"/></name> <argument_list pos:line="32" pos:column="22">(<argument><expr><sizeof pos:line="32" pos:column="23">sizeof <argument_list pos:line="32" pos:column="30">(<argument><expr><operator pos:line="32" pos:column="31">*<pos:position pos:line="32" pos:column="32"/></operator><operator pos:line="32" pos:column="32">new<pos:position pos:line="32" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">new<pos:position pos:line="33" pos:column="16"/></operator> <operator pos:line="33" pos:column="17">==<pos:position pos:line="33" pos:column="19"/></operator> <name pos:line="33" pos:column="20">NULL<pos:position pos:line="33" pos:column="24"/></name></expr>)<pos:position pos:line="33" pos:column="25"/></condition><then pos:line="33" pos:column="25">
		<block type="pseudo"><return pos:line="34" pos:column="17">return <expr><operator pos:line="34" pos:column="24">(<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">NULL<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">)<pos:position pos:line="34" pos:column="30"/></operator></expr>;<pos:position pos:line="34" pos:column="31"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">memset<pos:position pos:line="35" pos:column="15"/></name> <argument_list pos:line="35" pos:column="16">(<argument><expr><operator pos:line="35" pos:column="17">new<pos:position pos:line="35" pos:column="20"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="22">0<pos:position pos:line="35" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="25">sizeof <argument_list pos:line="35" pos:column="32">(<argument><expr><operator pos:line="35" pos:column="33">*<pos:position pos:line="35" pos:column="34"/></operator><operator pos:line="35" pos:column="34">new<pos:position pos:line="35" pos:column="37"/></operator></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="36" pos:column="9">new<pos:position pos:line="36" pos:column="12"/></operator><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">next<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <name pos:line="36" pos:column="21">NULL<pos:position pos:line="36" pos:column="25"/></name></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>

	<expr_stmt><expr><operator pos:line="38" pos:column="9">new<pos:position pos:line="38" pos:column="12"/></operator><operator pos:line="38" pos:column="12">-&gt;<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="14">name<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <call><name pos:line="38" pos:column="21">strdup<pos:position pos:line="38" pos:column="27"/></name> <argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">name<pos:position pos:line="38" pos:column="33"/></name></expr></argument>)<pos:position pos:line="38" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">new<pos:position pos:line="39" pos:column="16"/></operator><operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="18">name<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">==<pos:position pos:line="39" pos:column="25"/></operator> <name pos:line="39" pos:column="26">NULL<pos:position pos:line="39" pos:column="30"/></name></expr>)<pos:position pos:line="39" pos:column="31"/></condition><then pos:line="39" pos:column="31">
	<block pos:line="40" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">sfree<pos:position pos:line="41" pos:column="22"/></name> <argument_list pos:line="41" pos:column="23">(<argument><expr><operator pos:line="41" pos:column="24">new<pos:position pos:line="41" pos:column="27"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="29"/></expr_stmt>
		<return pos:line="42" pos:column="17">return <expr><operator pos:line="42" pos:column="24">(<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="25">NULL<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">)<pos:position pos:line="42" pos:column="30"/></operator></expr>;<pos:position pos:line="42" pos:column="31"/></return>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">ignore_capacity<pos:position pos:line="45" pos:column="28"/></name> <operator pos:line="45" pos:column="29">==<pos:position pos:line="45" pos:column="31"/></operator> <literal type="number" pos:line="45" pos:column="32">0<pos:position pos:line="45" pos:column="33"/></literal></expr>)<pos:position pos:line="45" pos:column="34"/></condition><then pos:line="45" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="46" pos:column="17">new<pos:position pos:line="46" pos:column="20"/></operator><operator pos:line="46" pos:column="20">-&gt;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="22">flags<pos:position pos:line="46" pos:column="27"/></name> <operator pos:line="46" pos:column="28">|=<pos:position pos:line="46" pos:column="30"/></operator> <name pos:line="46" pos:column="31">CFG_VOLUME_USAGE_DF<pos:position pos:line="46" pos:column="50"/></name></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt></block></then></if>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">ignore_snapshot<pos:position pos:line="47" pos:column="28"/></name> <operator pos:line="47" pos:column="29">==<pos:position pos:line="47" pos:column="31"/></operator> <literal type="number" pos:line="47" pos:column="32">0<pos:position pos:line="47" pos:column="33"/></literal></expr>)<pos:position pos:line="47" pos:column="34"/></condition><then pos:line="47" pos:column="34"> <block pos:line="47" pos:column="35">{
		<expr_stmt><expr><operator pos:line="48" pos:column="17">new<pos:position pos:line="48" pos:column="20"/></operator><operator pos:line="48" pos:column="20">-&gt;<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="22">flags<pos:position pos:line="48" pos:column="27"/></name> <operator pos:line="48" pos:column="28">|=<pos:position pos:line="48" pos:column="30"/></operator> <name pos:line="48" pos:column="31">CFG_VOLUME_USAGE_SNAP<pos:position pos:line="48" pos:column="52"/></name></expr>;<pos:position pos:line="48" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="49" pos:column="17">new<pos:position pos:line="49" pos:column="20"/></operator><operator pos:line="49" pos:column="20">-&gt;<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="22">snap_query<pos:position pos:line="49" pos:column="32"/></name> <operator pos:line="49" pos:column="33">=<pos:position pos:line="49" pos:column="34"/></operator> <call><name pos:line="49" pos:column="35">na_elem_new<pos:position pos:line="49" pos:column="46"/></name> <argument_list pos:line="49" pos:column="47">(<argument><expr><literal type="string" pos:line="49" pos:column="48">"snapshot-list-info"<pos:position pos:line="49" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">na_child_add_string<pos:position pos:line="50" pos:column="36"/></name><argument_list pos:line="50" pos:column="36">(<argument><expr><operator pos:line="50" pos:column="37">new<pos:position pos:line="50" pos:column="40"/></operator><operator pos:line="50" pos:column="40">-&gt;<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="42">snap_query<pos:position pos:line="50" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="54">"target-type"<pos:position pos:line="50" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="69">"volume"<pos:position pos:line="50" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">na_child_add_string<pos:position pos:line="51" pos:column="36"/></name><argument_list pos:line="51" pos:column="36">(<argument><expr><operator pos:line="51" pos:column="37">new<pos:position pos:line="51" pos:column="40"/></operator><operator pos:line="51" pos:column="40">-&gt;<pos:position pos:line="51" pos:column="45"/></operator><name pos:line="51" pos:column="42">snap_query<pos:position pos:line="51" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="54">"target-name"<pos:position pos:line="51" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="69">name<pos:position pos:line="51" pos:column="73"/></name></expr></argument>)<pos:position pos:line="51" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></then> <else pos:line="52" pos:column="11">else <block pos:line="52" pos:column="16">{
		<expr_stmt><expr><operator pos:line="53" pos:column="17">new<pos:position pos:line="53" pos:column="20"/></operator><operator pos:line="53" pos:column="20">-&gt;<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="22">snap_query<pos:position pos:line="53" pos:column="32"/></name> <operator pos:line="53" pos:column="33">=<pos:position pos:line="53" pos:column="34"/></operator> <name pos:line="53" pos:column="35">NULL<pos:position pos:line="53" pos:column="39"/></name></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="56" pos:column="9">/* Add to end of list. */</comment>
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">last<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">==<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="21">NULL<pos:position pos:line="57" pos:column="25"/></name></expr>)<pos:position pos:line="57" pos:column="26"/></condition><then pos:line="57" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="17">cvu<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">-&gt;<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="22">volumes<pos:position pos:line="58" pos:column="29"/></name></name> <operator pos:line="58" pos:column="30">=<pos:position pos:line="58" pos:column="31"/></operator> <operator pos:line="58" pos:column="32">new<pos:position pos:line="58" pos:column="35"/></operator></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt></block></then>
	<else pos:line="59" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="60" pos:column="17">last<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">-&gt;<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="23">next<pos:position pos:line="60" pos:column="27"/></name></name> <operator pos:line="60" pos:column="28">=<pos:position pos:line="60" pos:column="29"/></operator> <operator pos:line="60" pos:column="30">new<pos:position pos:line="60" pos:column="33"/></operator></expr>;<pos:position pos:line="60" pos:column="34"/></expr_stmt></block></else></if>

	<return pos:line="62" pos:column="9">return <expr><operator pos:line="62" pos:column="16">(<pos:position pos:line="62" pos:column="17"/></operator><operator pos:line="62" pos:column="17">new<pos:position pos:line="62" pos:column="20"/></operator><operator pos:line="62" pos:column="20">)<pos:position pos:line="62" pos:column="21"/></operator></expr>;<pos:position pos:line="62" pos:column="22"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

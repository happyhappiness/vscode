<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_153_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cdbi_result_get_field<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">dbi_result<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">res<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
                                 <parameter><decl><type><name pos:line="2" pos:column="34">unsigned<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">index<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">char<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">buffer<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="3" pos:column="34">size_t<pos:position pos:line="3" pos:column="40"/></name></type> <name pos:line="3" pos:column="41">buffer_size<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="53"/></parameter_list> <block pos:line="3" pos:column="54">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">short<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">src_type<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">src_type<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">dbi_result_get_field_type_idx<pos:position pos:line="6" pos:column="43"/></name><argument_list pos:line="6" pos:column="43">(<argument><expr><name pos:line="6" pos:column="44">res<pos:position pos:line="6" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="49">index<pos:position pos:line="6" pos:column="54"/></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">src_type<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">==<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">DBI_TYPE_ERROR<pos:position pos:line="7" pos:column="33"/></name></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34"> <block pos:line="7" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"dbi plugin: cdbi_result_get: "<pos:position pos:line="8" pos:column="42"/></literal>
          <literal type="string" pos:line="9" pos:column="11">"dbi_result_get_field_type_idx failed."<pos:position pos:line="9" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><operator pos:line="10" pos:column="13">-<pos:position pos:line="10" pos:column="14"/></operator><literal type="number" pos:line="10" pos:column="14">1<pos:position pos:line="10" pos:column="15"/></literal><operator pos:line="10" pos:column="15">)<pos:position pos:line="10" pos:column="16"/></operator></expr>;<pos:position pos:line="10" pos:column="17"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">src_type<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">DBI_TYPE_INTEGER<pos:position pos:line="13" pos:column="35"/></name></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36"> <block pos:line="13" pos:column="37">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">long<pos:position pos:line="14" pos:column="9"/></name> <name pos:line="14" pos:column="10">long<pos:position pos:line="14" pos:column="14"/></name></type> <name pos:line="14" pos:column="15">value<pos:position pos:line="14" pos:column="20"/></name></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="16" pos:column="5">value<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <call><name pos:line="16" pos:column="13">dbi_result_get_longlong_idx<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><name pos:line="16" pos:column="41">res<pos:position pos:line="16" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="46">index<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ssnprintf<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><name pos:line="17" pos:column="15">buffer<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="23">buffer_size<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="36">"%lli"<pos:position pos:line="17" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">value<pos:position pos:line="17" pos:column="49"/></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then> <elseif pos:line="18" pos:column="5">else <if pos:line="18" pos:column="10">if <condition pos:line="18" pos:column="13">(<expr><name pos:line="18" pos:column="14">src_type<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">==<pos:position pos:line="18" pos:column="25"/></operator> <name pos:line="18" pos:column="26">DBI_TYPE_DECIMAL<pos:position pos:line="18" pos:column="42"/></name></expr>)<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43"> <block pos:line="18" pos:column="44">{
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">double<pos:position pos:line="19" pos:column="11"/></name></type> <name pos:line="19" pos:column="12">value<pos:position pos:line="19" pos:column="17"/></name></decl>;<pos:position pos:line="19" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">value<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <call><name pos:line="21" pos:column="13">dbi_result_get_double_idx<pos:position pos:line="21" pos:column="38"/></name><argument_list pos:line="21" pos:column="38">(<argument><expr><name pos:line="21" pos:column="39">res<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">index<pos:position pos:line="21" pos:column="49"/></name></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">ssnprintf<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><name pos:line="22" pos:column="15">buffer<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="23">buffer_size<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="36">"%63.15g"<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="47">value<pos:position pos:line="22" pos:column="52"/></name></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if></elseif> <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><name pos:line="23" pos:column="14">src_type<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">==<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">DBI_TYPE_STRING<pos:position pos:line="23" pos:column="41"/></name></expr>)<pos:position pos:line="23" pos:column="42"/></condition><then pos:line="23" pos:column="42"> <block pos:line="23" pos:column="43">{
    <decl_stmt><decl><type><specifier pos:line="24" pos:column="5">const<pos:position pos:line="24" pos:column="10"/></specifier> <name pos:line="24" pos:column="11">char<pos:position pos:line="24" pos:column="15"/></name> <modifier pos:line="24" pos:column="16">*<pos:position pos:line="24" pos:column="17"/></modifier></type><name pos:line="24" pos:column="17">value<pos:position pos:line="24" pos:column="22"/></name></decl>;<pos:position pos:line="24" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="26" pos:column="5">value<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <call><name pos:line="26" pos:column="13">dbi_result_get_string_idx<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><name pos:line="26" pos:column="39">res<pos:position pos:line="26" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="44">index<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">value<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">==<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">NULL<pos:position pos:line="27" pos:column="22"/></name></expr>)<pos:position pos:line="27" pos:column="23"/></condition><then pos:line="27" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="7">sstrncpy<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">buffer<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="24">""<pos:position pos:line="28" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="28">buffer_size<pos:position pos:line="28" pos:column="39"/></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt></block></then>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><call><name pos:line="29" pos:column="14">strcmp<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><literal type="string" pos:line="29" pos:column="21">"ERROR"<pos:position pos:line="29" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">value<pos:position pos:line="29" pos:column="35"/></name></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call> <operator pos:line="29" pos:column="37">==<pos:position pos:line="29" pos:column="39"/></operator> <literal type="number" pos:line="29" pos:column="40">0<pos:position pos:line="29" pos:column="41"/></literal></expr>)<pos:position pos:line="29" pos:column="42"/></condition><then pos:line="29" pos:column="42">
      <block type="pseudo"><return pos:line="30" pos:column="7">return <expr><operator pos:line="30" pos:column="14">(<pos:position pos:line="30" pos:column="15"/></operator><operator pos:line="30" pos:column="15">-<pos:position pos:line="30" pos:column="16"/></operator><literal type="number" pos:line="30" pos:column="16">1<pos:position pos:line="30" pos:column="17"/></literal><operator pos:line="30" pos:column="17">)<pos:position pos:line="30" pos:column="18"/></operator></expr>;<pos:position pos:line="30" pos:column="19"/></return></block></then></if></elseif>
    <else pos:line="31" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="7">sstrncpy<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><name pos:line="32" pos:column="16">buffer<pos:position pos:line="32" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="24">value<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">buffer_size<pos:position pos:line="32" pos:column="42"/></name></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt></block></else></if>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if></elseif>
  <comment type="block" pos:line="34" pos:column="3">/* DBI_TYPE_BINARY */</comment>
  <comment type="block" pos:line="35" pos:column="3">/* DBI_TYPE_DATETIME */</comment>
  <else pos:line="36" pos:column="3">else <block pos:line="36" pos:column="8">{
    <decl_stmt><decl><type><specifier pos:line="37" pos:column="5">const<pos:position pos:line="37" pos:column="10"/></specifier> <name pos:line="37" pos:column="11">char<pos:position pos:line="37" pos:column="15"/></name> <modifier pos:line="37" pos:column="16">*<pos:position pos:line="37" pos:column="17"/></modifier></type><name pos:line="37" pos:column="17">field_name<pos:position pos:line="37" pos:column="27"/></name></decl>;<pos:position pos:line="37" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name pos:line="39" pos:column="5">field_name<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">dbi_result_get_field_name<pos:position pos:line="39" pos:column="43"/></name><argument_list pos:line="39" pos:column="43">(<argument><expr><name pos:line="39" pos:column="44">res<pos:position pos:line="39" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="49">index<pos:position pos:line="39" pos:column="54"/></name></expr></argument>)<pos:position pos:line="39" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="56"/></expr_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">field_name<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">==<pos:position pos:line="40" pos:column="22"/></operator> <name pos:line="40" pos:column="23">NULL<pos:position pos:line="40" pos:column="27"/></name></expr>)<pos:position pos:line="40" pos:column="28"/></condition><then pos:line="40" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="7">field_name<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <literal type="string" pos:line="41" pos:column="20">"&lt;unknown&gt;"<pos:position pos:line="41" pos:column="37"/></literal></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">ERROR<pos:position pos:line="43" pos:column="10"/></name><argument_list pos:line="43" pos:column="10">(<argument><expr><literal type="string" pos:line="43" pos:column="11">"dbi plugin: Column `%s': Don't know how to handle "<pos:position pos:line="43" pos:column="63"/></literal>
          <literal type="string" pos:line="44" pos:column="11">"source type %hu."<pos:position pos:line="44" pos:column="29"/></literal></expr></argument>,
          <argument><expr><name pos:line="45" pos:column="11">field_name<pos:position pos:line="45" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="23">src_type<pos:position pos:line="45" pos:column="31"/></name></expr></argument>)<pos:position pos:line="45" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt>
    <return pos:line="46" pos:column="5">return <expr><operator pos:line="46" pos:column="12">(<pos:position pos:line="46" pos:column="13"/></operator><operator pos:line="46" pos:column="13">-<pos:position pos:line="46" pos:column="14"/></operator><literal type="number" pos:line="46" pos:column="14">1<pos:position pos:line="46" pos:column="15"/></literal><operator pos:line="46" pos:column="15">)<pos:position pos:line="46" pos:column="16"/></operator></expr>;<pos:position pos:line="46" pos:column="17"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></else></if>

  <return pos:line="49" pos:column="3">return <expr><operator pos:line="49" pos:column="10">(<pos:position pos:line="49" pos:column="11"/></operator><literal type="number" pos:line="49" pos:column="11">0<pos:position pos:line="49" pos:column="12"/></literal><operator pos:line="49" pos:column="12">)<pos:position pos:line="49" pos:column="13"/></operator></expr>;<pos:position pos:line="49" pos:column="14"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

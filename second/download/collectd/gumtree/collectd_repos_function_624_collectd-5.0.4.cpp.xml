<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_624_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">redis_config_node<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">oconfig_item_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">ci<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">redis_node_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">rn<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">memset<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><operator pos:line="7" pos:column="11">&amp;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="12">rn<pos:position pos:line="7" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="19">sizeof <argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">rn<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">sstrncpy<pos:position pos:line="8" pos:column="11"/></name> <argument_list pos:line="8" pos:column="12">(<argument><expr><name><name pos:line="8" pos:column="13">rn<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">.<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">host<pos:position pos:line="8" pos:column="20"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="22">REDIS_DEF_HOST<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="38">sizeof <argument_list pos:line="8" pos:column="45">(<argument><expr><name><name pos:line="8" pos:column="46">rn<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">.<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="49">host<pos:position pos:line="8" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">rn<pos:position pos:line="9" pos:column="5"/></name><operator pos:line="9" pos:column="5">.<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">port<pos:position pos:line="9" pos:column="10"/></name></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">REDIS_DEF_PORT<pos:position pos:line="9" pos:column="27"/></name></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">rn<pos:position pos:line="10" pos:column="5"/></name><operator pos:line="10" pos:column="5">.<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">timeout<pos:position pos:line="10" pos:column="13"/></name></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">REDIS_DEF_TIMEOUT<pos:position pos:line="10" pos:column="33"/></name></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">status<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <call><name pos:line="12" pos:column="12">cf_util_get_string_buffer<pos:position pos:line="12" pos:column="37"/></name> <argument_list pos:line="12" pos:column="38">(<argument><expr><name pos:line="12" pos:column="39">ci<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="43">rn<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">.<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="46">name<pos:position pos:line="12" pos:column="50"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="52">sizeof <argument_list pos:line="12" pos:column="59">(<argument><expr><name><name pos:line="12" pos:column="60">rn<pos:position pos:line="12" pos:column="62"/></name><operator pos:line="12" pos:column="62">.<pos:position pos:line="12" pos:column="63"/></operator><name pos:line="12" pos:column="63">name<pos:position pos:line="12" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="70"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">status<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">!=<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">status<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">)<pos:position pos:line="14" pos:column="20"/></operator></expr>;<pos:position pos:line="14" pos:column="21"/></return></block></then></if>

  <for pos:line="16" pos:column="3">for <control pos:line="16" pos:column="7">(<init><expr><name pos:line="16" pos:column="8">i<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <literal type="number" pos:line="16" pos:column="12">0<pos:position pos:line="16" pos:column="13"/></literal></expr>;<pos:position pos:line="16" pos:column="14"/></init> <condition><expr><name pos:line="16" pos:column="15">i<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">&lt;<pos:position pos:line="16" pos:column="21"/></operator> <name><name pos:line="16" pos:column="19">ci<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">children_num<pos:position pos:line="16" pos:column="35"/></name></name></expr>;<pos:position pos:line="16" pos:column="36"/></condition> <incr><expr><name pos:line="16" pos:column="37">i<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">++<pos:position pos:line="16" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="41"/></control>
  <block pos:line="17" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">oconfig_item_t<pos:position pos:line="18" pos:column="19"/></name> <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier></type><name pos:line="18" pos:column="21">option<pos:position pos:line="18" pos:column="27"/></name> <init pos:line="18" pos:column="28">= <expr><name><name pos:line="18" pos:column="30">ci<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">children<pos:position pos:line="18" pos:column="42"/></name></name> <operator pos:line="18" pos:column="43">+<pos:position pos:line="18" pos:column="44"/></operator> <name pos:line="18" pos:column="45">i<pos:position pos:line="18" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="47"/></decl_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name pos:line="20" pos:column="9">strcasecmp<pos:position pos:line="20" pos:column="19"/></name> <argument_list pos:line="20" pos:column="20">(<argument><expr><literal type="string" pos:line="20" pos:column="21">"Host"<pos:position pos:line="20" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="29">option<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">key<pos:position pos:line="20" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call> <operator pos:line="20" pos:column="42">==<pos:position pos:line="20" pos:column="44"/></operator> <literal type="number" pos:line="20" pos:column="45">0<pos:position pos:line="20" pos:column="46"/></literal></expr>)<pos:position pos:line="20" pos:column="47"/></condition><then pos:line="20" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="7">status<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">cf_util_get_string_buffer<pos:position pos:line="21" pos:column="41"/></name> <argument_list pos:line="21" pos:column="42">(<argument><expr><name pos:line="21" pos:column="43">option<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="51">rn<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">.<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="54">host<pos:position pos:line="21" pos:column="58"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="60">sizeof <argument_list pos:line="21" pos:column="67">(<argument><expr><name><name pos:line="21" pos:column="68">rn<pos:position pos:line="21" pos:column="70"/></name><operator pos:line="21" pos:column="70">.<pos:position pos:line="21" pos:column="71"/></operator><name pos:line="21" pos:column="71">host<pos:position pos:line="21" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="78"/></expr_stmt></block></then>
    <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><call><name pos:line="22" pos:column="14">strcasecmp<pos:position pos:line="22" pos:column="24"/></name> <argument_list pos:line="22" pos:column="25">(<argument><expr><literal type="string" pos:line="22" pos:column="26">"Port"<pos:position pos:line="22" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="34">option<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">-&gt;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="42">key<pos:position pos:line="22" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call> <operator pos:line="22" pos:column="47">==<pos:position pos:line="22" pos:column="49"/></operator> <literal type="number" pos:line="22" pos:column="50">0<pos:position pos:line="22" pos:column="51"/></literal></expr>)<pos:position pos:line="22" pos:column="52"/></condition><then pos:line="22" pos:column="52">
    <block pos:line="23" pos:column="5">{
      <expr_stmt><expr><name pos:line="24" pos:column="7">status<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">cf_util_get_port_number<pos:position pos:line="24" pos:column="39"/></name> <argument_list pos:line="24" pos:column="40">(<argument><expr><name pos:line="24" pos:column="41">option<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><name pos:line="25" pos:column="11">status<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">&gt;<pos:position pos:line="25" pos:column="22"/></operator> <literal type="number" pos:line="25" pos:column="20">0<pos:position pos:line="25" pos:column="21"/></literal></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22">
      <block pos:line="26" pos:column="7">{
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">rn<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">.<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">port<pos:position pos:line="27" pos:column="16"/></name></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">status<pos:position pos:line="27" pos:column="25"/></name></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">status<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <literal type="number" pos:line="28" pos:column="18">0<pos:position pos:line="28" pos:column="19"/></literal></expr>;<pos:position pos:line="28" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="29" pos:column="8"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><call><name pos:line="31" pos:column="14">strcasecmp<pos:position pos:line="31" pos:column="24"/></name> <argument_list pos:line="31" pos:column="25">(<argument><expr><literal type="string" pos:line="31" pos:column="26">"Timeout"<pos:position pos:line="31" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="37">option<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">-&gt;<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="45">key<pos:position pos:line="31" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call> <operator pos:line="31" pos:column="50">==<pos:position pos:line="31" pos:column="52"/></operator> <literal type="number" pos:line="31" pos:column="53">0<pos:position pos:line="31" pos:column="54"/></literal></expr>)<pos:position pos:line="31" pos:column="55"/></condition><then pos:line="31" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="7">status<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <call><name pos:line="32" pos:column="16">cf_util_get_int<pos:position pos:line="32" pos:column="31"/></name> <argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">option<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="41">&amp;<pos:position pos:line="32" pos:column="46"/></operator><name><name pos:line="32" pos:column="42">rn<pos:position pos:line="32" pos:column="44"/></name><operator pos:line="32" pos:column="44">.<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="45">timeout<pos:position pos:line="32" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <else pos:line="33" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="7">WARNING<pos:position pos:line="34" pos:column="14"/></name> <argument_list pos:line="34" pos:column="15">(<argument><expr><literal type="string" pos:line="34" pos:column="16">"redis plugin: Option `%s' not allowed inside a `Node' "<pos:position pos:line="34" pos:column="72"/></literal>
          <literal type="string" pos:line="35" pos:column="11">"block. I'll ignore this option."<pos:position pos:line="35" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="46">option<pos:position pos:line="35" pos:column="52"/></name><operator pos:line="35" pos:column="52">-&gt;<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="54">key<pos:position pos:line="35" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="59"/></expr_stmt></block></else></if>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">status<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">!=<pos:position pos:line="37" pos:column="18"/></operator> <literal type="number" pos:line="37" pos:column="19">0<pos:position pos:line="37" pos:column="20"/></literal></expr>)<pos:position pos:line="37" pos:column="21"/></condition><then pos:line="37" pos:column="21">
      <block type="pseudo"><break pos:line="38" pos:column="7">break;<pos:position pos:line="38" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="39" pos:column="4"/></block></for>

  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name pos:line="41" pos:column="7">status<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">!=<pos:position pos:line="41" pos:column="16"/></operator> <literal type="number" pos:line="41" pos:column="17">0<pos:position pos:line="41" pos:column="18"/></literal></expr>)<pos:position pos:line="41" pos:column="19"/></condition><then pos:line="41" pos:column="19">
    <block type="pseudo"><return pos:line="42" pos:column="5">return <expr><operator pos:line="42" pos:column="12">(<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">status<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">)<pos:position pos:line="42" pos:column="20"/></operator></expr>;<pos:position pos:line="42" pos:column="21"/></return></block></then></if>

  <return pos:line="44" pos:column="3">return <expr><operator pos:line="44" pos:column="10">(<pos:position pos:line="44" pos:column="11"/></operator><call><name pos:line="44" pos:column="11">redis_node_add<pos:position pos:line="44" pos:column="25"/></name> <argument_list pos:line="44" pos:column="26">(<argument><expr><operator pos:line="44" pos:column="27">&amp;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="28">rn<pos:position pos:line="44" pos:column="30"/></name></expr></argument>)<pos:position pos:line="44" pos:column="31"/></argument_list></call><operator pos:line="44" pos:column="31">)<pos:position pos:line="44" pos:column="32"/></operator></expr>;<pos:position pos:line="44" pos:column="33"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

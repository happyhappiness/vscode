<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2447_collectd-5.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">c_avl_insert<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">c_avl_tree_t<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">t<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">key<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">void<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">value<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list> <block pos:line="1" pos:column="59">{
  <expr_stmt><expr><name pos:line="2" pos:column="3">c_avl_node_t<pos:position pos:line="2" pos:column="15"/></name> <operator pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></operator><operator pos:line="2" pos:column="17">new<pos:position pos:line="2" pos:column="20"/></operator></expr>;<pos:position pos:line="2" pos:column="21"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">c_avl_node_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">nptr<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">cmp<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><operator pos:line="6" pos:column="8">new<pos:position pos:line="6" pos:column="11"/></operator> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">malloc<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><sizeof pos:line="6" pos:column="21">sizeof<argument_list pos:line="6" pos:column="27">(<argument><expr><operator pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></operator><operator pos:line="6" pos:column="29">new<pos:position pos:line="6" pos:column="32"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call><operator pos:line="6" pos:column="34">)<pos:position pos:line="6" pos:column="35"/></operator> <operator pos:line="6" pos:column="36">==<pos:position pos:line="6" pos:column="38"/></operator> <name pos:line="6" pos:column="39">NULL<pos:position pos:line="6" pos:column="43"/></name></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><operator pos:line="7" pos:column="13">-<pos:position pos:line="7" pos:column="14"/></operator><literal type="number" pos:line="7" pos:column="14">1<pos:position pos:line="7" pos:column="15"/></literal><operator pos:line="7" pos:column="15">)<pos:position pos:line="7" pos:column="16"/></operator></expr>;<pos:position pos:line="7" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><operator pos:line="9" pos:column="3">new<pos:position pos:line="9" pos:column="6"/></operator><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">key<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">key<pos:position pos:line="9" pos:column="17"/></name></expr>;<pos:position pos:line="9" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="10" pos:column="3">new<pos:position pos:line="10" pos:column="6"/></operator><operator pos:line="10" pos:column="6">-&gt;<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="8">value<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">value<pos:position pos:line="10" pos:column="21"/></name></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="11" pos:column="3">new<pos:position pos:line="11" pos:column="6"/></operator><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">height<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <literal type="number" pos:line="11" pos:column="17">1<pos:position pos:line="11" pos:column="18"/></literal></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="12" pos:column="3">new<pos:position pos:line="12" pos:column="6"/></operator><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">left<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">NULL<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="13" pos:column="3">new<pos:position pos:line="13" pos:column="6"/></operator><operator pos:line="13" pos:column="6">-&gt;<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="8">right<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">t<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">root<pos:position pos:line="15" pos:column="14"/></name></name> <operator pos:line="15" pos:column="15">==<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">NULL<pos:position pos:line="15" pos:column="22"/></name></expr>)<pos:position pos:line="15" pos:column="23"/></condition><then pos:line="15" pos:column="23"> <block pos:line="15" pos:column="24">{
    <expr_stmt><expr><operator pos:line="16" pos:column="5">new<pos:position pos:line="16" pos:column="8"/></operator><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">parent<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">NULL<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">t<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">root<pos:position pos:line="17" pos:column="12"/></name></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <operator pos:line="17" pos:column="15">new<pos:position pos:line="17" pos:column="18"/></operator></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">t<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">size<pos:position pos:line="18" pos:column="12"/></name></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <literal type="number" pos:line="18" pos:column="15">1<pos:position pos:line="18" pos:column="16"/></literal></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><literal type="number" pos:line="19" pos:column="13">0<pos:position pos:line="19" pos:column="14"/></literal><operator pos:line="19" pos:column="14">)<pos:position pos:line="19" pos:column="15"/></operator></expr>;<pos:position pos:line="19" pos:column="16"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="22" pos:column="3">nptr<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <name><name pos:line="22" pos:column="10">t<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">root<pos:position pos:line="22" pos:column="17"/></name></name></expr>;<pos:position pos:line="22" pos:column="18"/></expr_stmt>
  <while pos:line="23" pos:column="3">while <condition pos:line="23" pos:column="9">(<expr><literal type="number" pos:line="23" pos:column="10">42<pos:position pos:line="23" pos:column="12"/></literal></expr>)<pos:position pos:line="23" pos:column="13"/></condition> <block pos:line="23" pos:column="14">{
    <expr_stmt><expr><name pos:line="24" pos:column="5">cmp<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <call><name><name pos:line="24" pos:column="11">t<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">compare<pos:position pos:line="24" pos:column="21"/></name></name><argument_list pos:line="24" pos:column="21">(<argument><expr><name><name pos:line="24" pos:column="22">nptr<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">key<pos:position pos:line="24" pos:column="31"/></name></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="33">new<pos:position pos:line="24" pos:column="36"/></operator><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">key<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">cmp<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">==<pos:position pos:line="25" pos:column="15"/></operator> <literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>)<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18"> <block pos:line="25" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">free_node<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><operator pos:line="26" pos:column="17">new<pos:position pos:line="26" pos:column="20"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>
      <return pos:line="27" pos:column="7">return <expr><operator pos:line="27" pos:column="14">(<pos:position pos:line="27" pos:column="15"/></operator><literal type="number" pos:line="27" pos:column="15">1<pos:position pos:line="27" pos:column="16"/></literal><operator pos:line="27" pos:column="16">)<pos:position pos:line="27" pos:column="17"/></operator></expr>;<pos:position pos:line="27" pos:column="18"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then> <elseif pos:line="28" pos:column="7">else <if pos:line="28" pos:column="12">if <condition pos:line="28" pos:column="15">(<expr><name pos:line="28" pos:column="16">cmp<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">&lt;<pos:position pos:line="28" pos:column="24"/></operator> <literal type="number" pos:line="28" pos:column="22">0<pos:position pos:line="28" pos:column="23"/></literal></expr>)<pos:position pos:line="28" pos:column="24"/></condition><then pos:line="28" pos:column="24"> <block pos:line="28" pos:column="25">{
      <comment type="block" pos:line="29" pos:column="7">/* nptr &lt; new */</comment>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name><name pos:line="30" pos:column="11">nptr<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">right<pos:position pos:line="30" pos:column="22"/></name></name> <operator pos:line="30" pos:column="23">==<pos:position pos:line="30" pos:column="25"/></operator> <name pos:line="30" pos:column="26">NULL<pos:position pos:line="30" pos:column="30"/></name></expr>)<pos:position pos:line="30" pos:column="31"/></condition><then pos:line="30" pos:column="31"> <block pos:line="30" pos:column="32">{
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">nptr<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">right<pos:position pos:line="31" pos:column="20"/></name></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <operator pos:line="31" pos:column="23">new<pos:position pos:line="31" pos:column="26"/></operator></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="32" pos:column="9">new<pos:position pos:line="32" pos:column="12"/></operator><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">parent<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="23">nptr<pos:position pos:line="32" pos:column="27"/></name></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">rebalance<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><name pos:line="33" pos:column="19">t<pos:position pos:line="33" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="22">nptr<pos:position pos:line="33" pos:column="26"/></name></expr></argument>)<pos:position pos:line="33" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
        <break pos:line="34" pos:column="9">break;<pos:position pos:line="34" pos:column="15"/></break>
      }<pos:position pos:line="35" pos:column="8"/></block></then> <else pos:line="35" pos:column="9">else <block pos:line="35" pos:column="14">{
        <expr_stmt><expr><name pos:line="36" pos:column="9">nptr<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <name><name pos:line="36" pos:column="16">nptr<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">-&gt;<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="22">right<pos:position pos:line="36" pos:column="27"/></name></name></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="37" pos:column="8"/></block></else></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if></elseif> <else pos:line="38" pos:column="7">else <comment type="block" pos:line="38" pos:column="12">/* if (cmp &gt; 0) */</comment>
    <block pos:line="39" pos:column="5">{
      <comment type="block" pos:line="40" pos:column="7">/* nptr &gt; new */</comment>
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><name><name pos:line="41" pos:column="11">nptr<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">left<pos:position pos:line="41" pos:column="21"/></name></name> <operator pos:line="41" pos:column="22">==<pos:position pos:line="41" pos:column="24"/></operator> <name pos:line="41" pos:column="25">NULL<pos:position pos:line="41" pos:column="29"/></name></expr>)<pos:position pos:line="41" pos:column="30"/></condition><then pos:line="41" pos:column="30"> <block pos:line="41" pos:column="31">{
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">nptr<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">-&gt;<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="15">left<pos:position pos:line="42" pos:column="19"/></name></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <operator pos:line="42" pos:column="22">new<pos:position pos:line="42" pos:column="25"/></operator></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="43" pos:column="9">new<pos:position pos:line="43" pos:column="12"/></operator><operator pos:line="43" pos:column="12">-&gt;<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="14">parent<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">=<pos:position pos:line="43" pos:column="22"/></operator> <name pos:line="43" pos:column="23">nptr<pos:position pos:line="43" pos:column="27"/></name></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">rebalance<pos:position pos:line="44" pos:column="18"/></name><argument_list pos:line="44" pos:column="18">(<argument><expr><name pos:line="44" pos:column="19">t<pos:position pos:line="44" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="22">nptr<pos:position pos:line="44" pos:column="26"/></name></expr></argument>)<pos:position pos:line="44" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt>
        <break pos:line="45" pos:column="9">break;<pos:position pos:line="45" pos:column="15"/></break>
      }<pos:position pos:line="46" pos:column="8"/></block></then> <else pos:line="46" pos:column="9">else <block pos:line="46" pos:column="14">{
        <expr_stmt><expr><name pos:line="47" pos:column="9">nptr<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <name><name pos:line="47" pos:column="16">nptr<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">left<pos:position pos:line="47" pos:column="26"/></name></name></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="48" pos:column="8"/></block></else></if>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>
  }<pos:position pos:line="50" pos:column="4"/></block></while> <comment type="block" pos:line="50" pos:column="5">/* while (42) */</comment>

  <expr_stmt><expr><call><name pos:line="52" pos:column="3">verify_tree<pos:position pos:line="52" pos:column="14"/></name><argument_list pos:line="52" pos:column="14">(<argument><expr><name><name pos:line="52" pos:column="15">t<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">-&gt;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="18">root<pos:position pos:line="52" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="53" pos:column="3">++<pos:position pos:line="53" pos:column="5"/></operator><name><name pos:line="53" pos:column="5">t<pos:position pos:line="53" pos:column="6"/></name><operator pos:line="53" pos:column="6">-&gt;<pos:position pos:line="53" pos:column="11"/></operator><name pos:line="53" pos:column="8">size<pos:position pos:line="53" pos:column="12"/></name></name></expr>;<pos:position pos:line="53" pos:column="13"/></expr_stmt>
  <return pos:line="54" pos:column="3">return <expr><operator pos:line="54" pos:column="10">(<pos:position pos:line="54" pos:column="11"/></operator><literal type="number" pos:line="54" pos:column="11">0<pos:position pos:line="54" pos:column="12"/></literal><operator pos:line="54" pos:column="12">)<pos:position pos:line="54" pos:column="13"/></operator></expr>;<pos:position pos:line="54" pos:column="14"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

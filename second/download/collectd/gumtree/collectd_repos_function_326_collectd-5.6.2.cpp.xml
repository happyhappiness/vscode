<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_326_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">qos_filter_cb<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">nlmsghdr<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">nlh<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">void<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">args<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list> <block pos:line="1" pos:column="66">{
  <decl_stmt><decl><type><name><name pos:line="2" pos:column="3">struct<pos:position pos:line="2" pos:column="9"/></name> <name pos:line="2" pos:column="10">tcmsg<pos:position pos:line="2" pos:column="15"/></name></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">tm<pos:position pos:line="2" pos:column="19"/></name> <init pos:line="2" pos:column="20">= <expr><call><name pos:line="2" pos:column="22">mnl_nlmsg_get_payload<pos:position pos:line="2" pos:column="43"/></name><argument_list pos:line="2" pos:column="43">(<argument><expr><name pos:line="2" pos:column="44">nlh<pos:position pos:line="2" pos:column="47"/></name></expr></argument>)<pos:position pos:line="2" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">nlattr<pos:position pos:line="3" pos:column="16"/></name></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">attr<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">wanted_ifindex<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><operator pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></operator><operator pos:line="5" pos:column="25">(<pos:position pos:line="5" pos:column="26"/></operator><operator pos:line="5" pos:column="26">(<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="27">int<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></operator><operator pos:line="5" pos:column="32">)<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">args<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">)<pos:position pos:line="5" pos:column="38"/></operator></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">dev<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">kind<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><name pos:line="8" pos:column="22">NULL<pos:position pos:line="8" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* char *type_instance; */</comment>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">tc_type<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name></type> <name><name pos:line="12" pos:column="8">tc_inst<pos:position pos:line="12" pos:column="15"/></name><index pos:line="12" pos:column="15">[<expr><name pos:line="12" pos:column="16">DATA_MAX_NAME_LEN<pos:position pos:line="12" pos:column="33"/></name></expr>]<pos:position pos:line="12" pos:column="34"/></index></name></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">_Bool<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">stats_submitted<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><literal type="number" pos:line="14" pos:column="27">0<pos:position pos:line="14" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name><name pos:line="16" pos:column="7">nlh<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">nlmsg_type<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">==<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">RTM_NEWQDISC<pos:position pos:line="16" pos:column="38"/></name></expr>)<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="5">tc_type<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <literal type="string" pos:line="17" pos:column="15">"qdisc"<pos:position pos:line="17" pos:column="22"/></literal></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt></block></then>
  <elseif pos:line="18" pos:column="3">else <if pos:line="18" pos:column="8">if <condition pos:line="18" pos:column="11">(<expr><name><name pos:line="18" pos:column="12">nlh<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">nlmsg_type<pos:position pos:line="18" pos:column="27"/></name></name> <operator pos:line="18" pos:column="28">==<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">RTM_NEWTCLASS<pos:position pos:line="18" pos:column="44"/></name></expr>)<pos:position pos:line="18" pos:column="45"/></condition><then pos:line="18" pos:column="45">
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">tc_type<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <literal type="string" pos:line="19" pos:column="15">"class"<pos:position pos:line="19" pos:column="22"/></literal></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="20" pos:column="3">else <if pos:line="20" pos:column="8">if <condition pos:line="20" pos:column="11">(<expr><name><name pos:line="20" pos:column="12">nlh<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">nlmsg_type<pos:position pos:line="20" pos:column="27"/></name></name> <operator pos:line="20" pos:column="28">==<pos:position pos:line="20" pos:column="30"/></operator> <name pos:line="20" pos:column="31">RTM_NEWTFILTER<pos:position pos:line="20" pos:column="45"/></name></expr>)<pos:position pos:line="20" pos:column="46"/></condition><then pos:line="20" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="5">tc_type<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <literal type="string" pos:line="21" pos:column="15">"filter"<pos:position pos:line="21" pos:column="23"/></literal></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt></block></then></if></elseif>
  <else pos:line="22" pos:column="3">else <block pos:line="22" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ERROR<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><literal type="string" pos:line="23" pos:column="11">"netlink plugin: qos_filter_cb: Don't know how to handle type %i."<pos:position pos:line="23" pos:column="77"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="24" pos:column="11">nlh<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">nlmsg_type<pos:position pos:line="24" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">MNL_CB_ERROR<pos:position pos:line="25" pos:column="24"/></name></expr>;<pos:position pos:line="25" pos:column="25"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></else></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name><name pos:line="28" pos:column="7">tm<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">-&gt;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="11">tcm_ifindex<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">!=<pos:position pos:line="28" pos:column="25"/></operator> <name pos:line="28" pos:column="26">wanted_ifindex<pos:position pos:line="28" pos:column="40"/></name></expr>)<pos:position pos:line="28" pos:column="41"/></condition><then pos:line="28" pos:column="41"> <block pos:line="28" pos:column="42">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">DEBUG<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><literal type="string" pos:line="29" pos:column="11">"netlink plugin: qos_filter_cb: Got %s for interface #%i, "<pos:position pos:line="29" pos:column="70"/></literal>
          <literal type="string" pos:line="30" pos:column="11">"but expected #%i."<pos:position pos:line="30" pos:column="30"/></literal></expr></argument>,
          <argument><expr><name pos:line="31" pos:column="11">tc_type<pos:position pos:line="31" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="20">tm<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">-&gt;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="24">tcm_ifindex<pos:position pos:line="31" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="37">wanted_ifindex<pos:position pos:line="31" pos:column="51"/></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">MNL_CB_OK<pos:position pos:line="32" pos:column="21"/></name></expr>;<pos:position pos:line="32" pos:column="22"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><operator pos:line="35" pos:column="7">(<pos:position pos:line="35" pos:column="8"/></operator><name><name pos:line="35" pos:column="8">tm<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">tcm_ifindex<pos:position pos:line="35" pos:column="23"/></name></name> <operator pos:line="35" pos:column="24">&gt;=<pos:position pos:line="35" pos:column="29"/></operator> <literal type="number" pos:line="35" pos:column="27">0<pos:position pos:line="35" pos:column="28"/></literal><operator pos:line="35" pos:column="28">)<pos:position pos:line="35" pos:column="29"/></operator> <operator pos:line="35" pos:column="30">&amp;&amp;<pos:position pos:line="35" pos:column="40"/></operator> <operator pos:line="35" pos:column="33">(<pos:position pos:line="35" pos:column="34"/></operator><operator pos:line="35" pos:column="34">(<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="35">size_t<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">)<pos:position pos:line="35" pos:column="42"/></operator><name><name pos:line="35" pos:column="42">tm<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">-&gt;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="46">tcm_ifindex<pos:position pos:line="35" pos:column="57"/></name></name> <operator pos:line="35" pos:column="58">&gt;=<pos:position pos:line="35" pos:column="63"/></operator> <name pos:line="35" pos:column="61">iflist_len<pos:position pos:line="35" pos:column="71"/></name><operator pos:line="35" pos:column="71">)<pos:position pos:line="35" pos:column="72"/></operator></expr>)<pos:position pos:line="35" pos:column="73"/></condition><then pos:line="35" pos:column="73"> <block pos:line="35" pos:column="74">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">ERROR<pos:position pos:line="36" pos:column="10"/></name><argument_list pos:line="36" pos:column="10">(<argument><expr><literal type="string" pos:line="36" pos:column="11">"netlink plugin: qos_filter_cb: tm-&gt;tcm_ifindex = %i "<pos:position pos:line="36" pos:column="68"/></literal>
          <literal type="string" pos:line="37" pos:column="11">"&gt;= iflist_len = %zu"<pos:position pos:line="37" pos:column="35"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="38" pos:column="11">tm<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">tcm_ifindex<pos:position pos:line="38" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="28">iflist_len<pos:position pos:line="38" pos:column="38"/></name></expr></argument>)<pos:position pos:line="38" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>
    <return pos:line="39" pos:column="5">return <expr><name pos:line="39" pos:column="12">MNL_CB_ERROR<pos:position pos:line="39" pos:column="24"/></name></expr>;<pos:position pos:line="39" pos:column="25"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="42" pos:column="3">dev<pos:position pos:line="42" pos:column="6"/></name> <operator pos:line="42" pos:column="7">=<pos:position pos:line="42" pos:column="8"/></operator> <name><name pos:line="42" pos:column="9">iflist<pos:position pos:line="42" pos:column="15"/></name><index pos:line="42" pos:column="15">[<expr><name><name pos:line="42" pos:column="16">tm<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">-&gt;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="20">tcm_ifindex<pos:position pos:line="42" pos:column="31"/></name></name></expr>]<pos:position pos:line="42" pos:column="32"/></index></name></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>
  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><name pos:line="43" pos:column="7">dev<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">==<pos:position pos:line="43" pos:column="13"/></operator> <name pos:line="43" pos:column="14">NULL<pos:position pos:line="43" pos:column="18"/></name></expr>)<pos:position pos:line="43" pos:column="19"/></condition><then pos:line="43" pos:column="19"> <block pos:line="43" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">ERROR<pos:position pos:line="44" pos:column="10"/></name><argument_list pos:line="44" pos:column="10">(<argument><expr><literal type="string" pos:line="44" pos:column="11">"netlink plugin: qos_filter_cb: iflist[%i] == NULL"<pos:position pos:line="44" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="64">tm<pos:position pos:line="44" pos:column="66"/></name><operator pos:line="44" pos:column="66">-&gt;<pos:position pos:line="44" pos:column="71"/></operator><name pos:line="44" pos:column="68">tcm_ifindex<pos:position pos:line="44" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="81"/></expr_stmt>
    <return pos:line="45" pos:column="5">return <expr><name pos:line="45" pos:column="12">MNL_CB_ERROR<pos:position pos:line="45" pos:column="24"/></name></expr>;<pos:position pos:line="45" pos:column="25"/></return>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <macro><name pos:line="48" pos:column="3">mnl_attr_for_each<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument pos:line="48" pos:column="21">attr<pos:position pos:line="48" pos:column="25"/></argument>, <argument pos:line="48" pos:column="27">nlh<pos:position pos:line="48" pos:column="30"/></argument>, <argument pos:line="48" pos:column="32">sizeof(*tm)<pos:position pos:line="48" pos:column="43"/></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></macro> <block pos:line="48" pos:column="45">{
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><call><name pos:line="49" pos:column="9">mnl_attr_get_type<pos:position pos:line="49" pos:column="26"/></name><argument_list pos:line="49" pos:column="26">(<argument><expr><name pos:line="49" pos:column="27">attr<pos:position pos:line="49" pos:column="31"/></name></expr></argument>)<pos:position pos:line="49" pos:column="32"/></argument_list></call> <operator pos:line="49" pos:column="33">!=<pos:position pos:line="49" pos:column="35"/></operator> <name pos:line="49" pos:column="36">TCA_KIND<pos:position pos:line="49" pos:column="44"/></name></expr>)<pos:position pos:line="49" pos:column="45"/></condition><then pos:line="49" pos:column="45">
      <block type="pseudo"><continue pos:line="50" pos:column="7">continue;<pos:position pos:line="50" pos:column="16"/></continue></block></then></if>

    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><call><name pos:line="52" pos:column="9">mnl_attr_validate<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><name pos:line="52" pos:column="27">attr<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="33">MNL_TYPE_STRING<pos:position pos:line="52" pos:column="48"/></name></expr></argument>)<pos:position pos:line="52" pos:column="49"/></argument_list></call> <operator pos:line="52" pos:column="50">&lt;<pos:position pos:line="52" pos:column="54"/></operator> <literal type="number" pos:line="52" pos:column="52">0<pos:position pos:line="52" pos:column="53"/></literal></expr>)<pos:position pos:line="52" pos:column="54"/></condition><then pos:line="52" pos:column="54"> <block pos:line="52" pos:column="55">{
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">ERROR<pos:position pos:line="53" pos:column="12"/></name><argument_list pos:line="53" pos:column="12">(
          <argument><expr><literal type="string" pos:line="54" pos:column="11">"netlink plugin: qos_filter_cb: TCA_KIND mnl_attr_validate failed."<pos:position pos:line="54" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="80"/></expr_stmt>
      <return pos:line="55" pos:column="7">return <expr><name pos:line="55" pos:column="14">MNL_CB_ERROR<pos:position pos:line="55" pos:column="26"/></name></expr>;<pos:position pos:line="55" pos:column="27"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="58" pos:column="5">kind<pos:position pos:line="58" pos:column="9"/></name> <operator pos:line="58" pos:column="10">=<pos:position pos:line="58" pos:column="11"/></operator> <call><name pos:line="58" pos:column="12">mnl_attr_get_str<pos:position pos:line="58" pos:column="28"/></name><argument_list pos:line="58" pos:column="28">(<argument><expr><name pos:line="58" pos:column="29">attr<pos:position pos:line="58" pos:column="33"/></name></expr></argument>)<pos:position pos:line="58" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="35"/></expr_stmt>
    <break pos:line="59" pos:column="5">break;<pos:position pos:line="59" pos:column="11"/></break>
  }<pos:position pos:line="60" pos:column="4"/></block>

  <if pos:line="62" pos:column="3">if <condition pos:line="62" pos:column="6">(<expr><name pos:line="62" pos:column="7">kind<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">==<pos:position pos:line="62" pos:column="14"/></operator> <name pos:line="62" pos:column="15">NULL<pos:position pos:line="62" pos:column="19"/></name></expr>)<pos:position pos:line="62" pos:column="20"/></condition><then pos:line="62" pos:column="20"> <block pos:line="62" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">ERROR<pos:position pos:line="63" pos:column="10"/></name><argument_list pos:line="63" pos:column="10">(<argument><expr><literal type="string" pos:line="63" pos:column="11">"netlink plugin: qos_filter_cb: kind == NULL"<pos:position pos:line="63" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="58"/></expr_stmt>
    <return pos:line="64" pos:column="5">return <expr><operator pos:line="64" pos:column="12">(<pos:position pos:line="64" pos:column="13"/></operator><operator pos:line="64" pos:column="13">-<pos:position pos:line="64" pos:column="14"/></operator><literal type="number" pos:line="64" pos:column="14">1<pos:position pos:line="64" pos:column="15"/></literal><operator pos:line="64" pos:column="15">)<pos:position pos:line="64" pos:column="16"/></operator></expr>;<pos:position pos:line="64" pos:column="17"/></return>
  }<pos:position pos:line="65" pos:column="4"/></block></then></if>

  <block pos:line="67" pos:column="3">{ <comment type="block" pos:line="67" pos:column="5">/* The ID */</comment>
    <decl_stmt><decl><type><name pos:line="68" pos:column="5">uint32_t<pos:position pos:line="68" pos:column="13"/></name></type> <name pos:line="68" pos:column="14">numberic_id<pos:position pos:line="68" pos:column="25"/></name></decl>;<pos:position pos:line="68" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><name pos:line="70" pos:column="5">numberic_id<pos:position pos:line="70" pos:column="16"/></name> <operator pos:line="70" pos:column="17">=<pos:position pos:line="70" pos:column="18"/></operator> <name><name pos:line="70" pos:column="19">tm<pos:position pos:line="70" pos:column="21"/></name><operator pos:line="70" pos:column="21">-&gt;<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="23">tcm_handle<pos:position pos:line="70" pos:column="33"/></name></name></expr>;<pos:position pos:line="70" pos:column="34"/></expr_stmt>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><call><name pos:line="71" pos:column="9">strcmp<pos:position pos:line="71" pos:column="15"/></name><argument_list pos:line="71" pos:column="15">(<argument><expr><name pos:line="71" pos:column="16">tc_type<pos:position pos:line="71" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="25">"filter"<pos:position pos:line="71" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="34"/></argument_list></call> <operator pos:line="71" pos:column="35">==<pos:position pos:line="71" pos:column="37"/></operator> <literal type="number" pos:line="71" pos:column="38">0<pos:position pos:line="71" pos:column="39"/></literal></expr>)<pos:position pos:line="71" pos:column="40"/></condition><then pos:line="71" pos:column="40">
      <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="7">numberic_id<pos:position pos:line="72" pos:column="18"/></name> <operator pos:line="72" pos:column="19">=<pos:position pos:line="72" pos:column="20"/></operator> <name><name pos:line="72" pos:column="21">tm<pos:position pos:line="72" pos:column="23"/></name><operator pos:line="72" pos:column="23">-&gt;<pos:position pos:line="72" pos:column="28"/></operator><name pos:line="72" pos:column="25">tcm_parent<pos:position pos:line="72" pos:column="35"/></name></name></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="74" pos:column="5">ssnprintf<pos:position pos:line="74" pos:column="14"/></name><argument_list pos:line="74" pos:column="14">(<argument><expr><name pos:line="74" pos:column="15">tc_inst<pos:position pos:line="74" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="74" pos:column="24">sizeof<argument_list pos:line="74" pos:column="30">(<argument><expr><name pos:line="74" pos:column="31">tc_inst<pos:position pos:line="74" pos:column="38"/></name></expr></argument>)<pos:position pos:line="74" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="41">"%s-%x:%x"<pos:position pos:line="74" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="53">kind<pos:position pos:line="74" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="59">numberic_id<pos:position pos:line="74" pos:column="70"/></name> <operator pos:line="74" pos:column="71">&gt;&gt;<pos:position pos:line="74" pos:column="76"/></operator> <literal type="number" pos:line="74" pos:column="74">16<pos:position pos:line="74" pos:column="76"/></literal></expr></argument>,
              <argument><expr><name pos:line="75" pos:column="15">numberic_id<pos:position pos:line="75" pos:column="26"/></name> <operator pos:line="75" pos:column="27">&amp;<pos:position pos:line="75" pos:column="32"/></operator> <literal type="number" pos:line="75" pos:column="29">0x0000FFFF<pos:position pos:line="75" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="76" pos:column="4"/></block>

  <expr_stmt><expr><call><name pos:line="78" pos:column="3">DEBUG<pos:position pos:line="78" pos:column="8"/></name><argument_list pos:line="78" pos:column="8">(<argument><expr><literal type="string" pos:line="78" pos:column="9">"netlink plugin: qos_filter_cb: got %s for %s (%i)."<pos:position pos:line="78" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="63">tc_type<pos:position pos:line="78" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="72">dev<pos:position pos:line="78" pos:column="75"/></name></expr></argument>,
        <argument><expr><name><name pos:line="79" pos:column="9">tm<pos:position pos:line="79" pos:column="11"/></name><operator pos:line="79" pos:column="11">-&gt;<pos:position pos:line="79" pos:column="16"/></operator><name pos:line="79" pos:column="13">tcm_ifindex<pos:position pos:line="79" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="26"/></expr_stmt>

  <if pos:line="81" pos:column="3">if <condition pos:line="81" pos:column="6">(<expr><call><name pos:line="81" pos:column="7">check_ignorelist<pos:position pos:line="81" pos:column="23"/></name><argument_list pos:line="81" pos:column="23">(<argument><expr><name pos:line="81" pos:column="24">dev<pos:position pos:line="81" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="29">tc_type<pos:position pos:line="81" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="38">tc_inst<pos:position pos:line="81" pos:column="45"/></name></expr></argument>)<pos:position pos:line="81" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="47"/></condition><then pos:line="81" pos:column="47">
    <block type="pseudo"><return pos:line="82" pos:column="5">return <expr><name pos:line="82" pos:column="12">MNL_CB_OK<pos:position pos:line="82" pos:column="21"/></name></expr>;<pos:position pos:line="82" pos:column="22"/></return></block></then></if>

<cpp:if pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">if<pos:position pos:line="84" pos:column="4"/></cpp:directive> <expr><name pos:line="84" pos:column="5">HAVE_TCA_STATS2<pos:position pos:line="84" pos:column="20"/></name></expr></cpp:if>
  <macro><name pos:line="85" pos:column="3">mnl_attr_for_each<pos:position pos:line="85" pos:column="20"/></name><argument_list pos:line="85" pos:column="20">(<argument pos:line="85" pos:column="21">attr<pos:position pos:line="85" pos:column="25"/></argument>, <argument pos:line="85" pos:column="27">nlh<pos:position pos:line="85" pos:column="30"/></argument>, <argument pos:line="85" pos:column="32">sizeof(*tm)<pos:position pos:line="85" pos:column="43"/></argument>)<pos:position pos:line="85" pos:column="44"/></argument_list></macro> <block pos:line="85" pos:column="45">{
    <decl_stmt><decl><type><name><name pos:line="86" pos:column="5">struct<pos:position pos:line="86" pos:column="11"/></name> <name pos:line="86" pos:column="12">gnet_stats_basic<pos:position pos:line="86" pos:column="28"/></name></name> <modifier pos:line="86" pos:column="29">*<pos:position pos:line="86" pos:column="30"/></modifier></type><name pos:line="86" pos:column="30">bs<pos:position pos:line="86" pos:column="32"/></name> <init pos:line="86" pos:column="33">= <expr><name pos:line="86" pos:column="35">NULL<pos:position pos:line="86" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="86" pos:column="40"/></decl_stmt>

    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><call><name pos:line="88" pos:column="9">mnl_attr_get_type<pos:position pos:line="88" pos:column="26"/></name><argument_list pos:line="88" pos:column="26">(<argument><expr><name pos:line="88" pos:column="27">attr<pos:position pos:line="88" pos:column="31"/></name></expr></argument>)<pos:position pos:line="88" pos:column="32"/></argument_list></call> <operator pos:line="88" pos:column="33">!=<pos:position pos:line="88" pos:column="35"/></operator> <name pos:line="88" pos:column="36">TCA_STATS2<pos:position pos:line="88" pos:column="46"/></name></expr>)<pos:position pos:line="88" pos:column="47"/></condition><then pos:line="88" pos:column="47">
      <block type="pseudo"><continue pos:line="89" pos:column="7">continue;<pos:position pos:line="89" pos:column="16"/></continue></block></then></if>

    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><call><name pos:line="91" pos:column="9">mnl_attr_validate<pos:position pos:line="91" pos:column="26"/></name><argument_list pos:line="91" pos:column="26">(<argument><expr><name pos:line="91" pos:column="27">attr<pos:position pos:line="91" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="33">MNL_TYPE_NESTED<pos:position pos:line="91" pos:column="48"/></name></expr></argument>)<pos:position pos:line="91" pos:column="49"/></argument_list></call> <operator pos:line="91" pos:column="50">&lt;<pos:position pos:line="91" pos:column="54"/></operator> <literal type="number" pos:line="91" pos:column="52">0<pos:position pos:line="91" pos:column="53"/></literal></expr>)<pos:position pos:line="91" pos:column="54"/></condition><then pos:line="91" pos:column="54"> <block pos:line="91" pos:column="55">{
      <expr_stmt><expr><call><name pos:line="92" pos:column="7">ERROR<pos:position pos:line="92" pos:column="12"/></name><argument_list pos:line="92" pos:column="12">(<argument><expr><literal type="string" pos:line="92" pos:column="13">"netlink plugin: qos_filter_cb: TCA_STATS2 mnl_attr_validate "<pos:position pos:line="92" pos:column="75"/></literal>
            <literal type="string" pos:line="93" pos:column="13">"failed."<pos:position pos:line="93" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="24"/></expr_stmt>
      <return pos:line="94" pos:column="7">return <expr><name pos:line="94" pos:column="14">MNL_CB_ERROR<pos:position pos:line="94" pos:column="26"/></name></expr>;<pos:position pos:line="94" pos:column="27"/></return>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="97" pos:column="5">mnl_attr_parse_nested<pos:position pos:line="97" pos:column="26"/></name><argument_list pos:line="97" pos:column="26">(<argument><expr><name pos:line="97" pos:column="27">attr<pos:position pos:line="97" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="33">qos_attr_cb<pos:position pos:line="97" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="46">&amp;<pos:position pos:line="97" pos:column="51"/></operator><name pos:line="97" pos:column="47">bs<pos:position pos:line="97" pos:column="49"/></name></expr></argument>)<pos:position pos:line="97" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="51"/></expr_stmt>

    <if pos:line="99" pos:column="5">if <condition pos:line="99" pos:column="8">(<expr><name pos:line="99" pos:column="9">bs<pos:position pos:line="99" pos:column="11"/></name> <operator pos:line="99" pos:column="12">!=<pos:position pos:line="99" pos:column="14"/></operator> <name pos:line="99" pos:column="15">NULL<pos:position pos:line="99" pos:column="19"/></name></expr>)<pos:position pos:line="99" pos:column="20"/></condition><then pos:line="99" pos:column="20"> <block pos:line="99" pos:column="21">{
      <decl_stmt><decl><type><name pos:line="100" pos:column="7">char<pos:position pos:line="100" pos:column="11"/></name></type> <name><name pos:line="100" pos:column="12">type_instance<pos:position pos:line="100" pos:column="25"/></name><index pos:line="100" pos:column="25">[<expr><name pos:line="100" pos:column="26">DATA_MAX_NAME_LEN<pos:position pos:line="100" pos:column="43"/></name></expr>]<pos:position pos:line="100" pos:column="44"/></index></name></decl>;<pos:position pos:line="100" pos:column="45"/></decl_stmt>

      <expr_stmt><expr><name pos:line="102" pos:column="7">stats_submitted<pos:position pos:line="102" pos:column="22"/></name> <operator pos:line="102" pos:column="23">=<pos:position pos:line="102" pos:column="24"/></operator> <literal type="number" pos:line="102" pos:column="25">1<pos:position pos:line="102" pos:column="26"/></literal></expr>;<pos:position pos:line="102" pos:column="27"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="104" pos:column="7">ssnprintf<pos:position pos:line="104" pos:column="16"/></name><argument_list pos:line="104" pos:column="16">(<argument><expr><name pos:line="104" pos:column="17">type_instance<pos:position pos:line="104" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="104" pos:column="32">sizeof<argument_list pos:line="104" pos:column="38">(<argument><expr><name pos:line="104" pos:column="39">type_instance<pos:position pos:line="104" pos:column="52"/></name></expr></argument>)<pos:position pos:line="104" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="55">"%s-%s"<pos:position pos:line="104" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="64">tc_type<pos:position pos:line="104" pos:column="71"/></name></expr></argument>,
                <argument><expr><name pos:line="105" pos:column="17">tc_inst<pos:position pos:line="105" pos:column="24"/></name></expr></argument>)<pos:position pos:line="105" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="26"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="107" pos:column="7">submit_one<pos:position pos:line="107" pos:column="17"/></name><argument_list pos:line="107" pos:column="17">(<argument><expr><name pos:line="107" pos:column="18">dev<pos:position pos:line="107" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="23">"ipt_bytes"<pos:position pos:line="107" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="36">type_instance<pos:position pos:line="107" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="51">bs<pos:position pos:line="107" pos:column="53"/></name><operator pos:line="107" pos:column="53">-&gt;<pos:position pos:line="107" pos:column="58"/></operator><name pos:line="107" pos:column="55">bytes<pos:position pos:line="107" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="108" pos:column="7">submit_one<pos:position pos:line="108" pos:column="17"/></name><argument_list pos:line="108" pos:column="17">(<argument><expr><name pos:line="108" pos:column="18">dev<pos:position pos:line="108" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="23">"ipt_packets"<pos:position pos:line="108" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="38">type_instance<pos:position pos:line="108" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="53">bs<pos:position pos:line="108" pos:column="55"/></name><operator pos:line="108" pos:column="55">-&gt;<pos:position pos:line="108" pos:column="60"/></operator><name pos:line="108" pos:column="57">packets<pos:position pos:line="108" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="109" pos:column="6"/></block></then></if>

    <break pos:line="111" pos:column="5">break;<pos:position pos:line="111" pos:column="11"/></break>
  }<pos:position pos:line="112" pos:column="4"/></block>
<cpp:endif pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">endif<pos:position pos:line="113" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="113" pos:column="8">/* TCA_STATS2 */</comment>

<cpp:if pos:line="115" pos:column="1">#<cpp:directive pos:line="115" pos:column="2">if<pos:position pos:line="115" pos:column="4"/></cpp:directive> <expr><name pos:line="115" pos:column="5">HAVE_TCA_STATS<pos:position pos:line="115" pos:column="19"/></name></expr></cpp:if>
  <macro><name pos:line="116" pos:column="3">mnl_attr_for_each<pos:position pos:line="116" pos:column="20"/></name><argument_list pos:line="116" pos:column="20">(<argument pos:line="116" pos:column="21">attr<pos:position pos:line="116" pos:column="25"/></argument>, <argument pos:line="116" pos:column="27">nlh<pos:position pos:line="116" pos:column="30"/></argument>, <argument pos:line="116" pos:column="32">sizeof(*tm)<pos:position pos:line="116" pos:column="43"/></argument>)<pos:position pos:line="116" pos:column="44"/></argument_list></macro> <block pos:line="116" pos:column="45">{
    <decl_stmt><decl><type><name><name pos:line="117" pos:column="5">struct<pos:position pos:line="117" pos:column="11"/></name> <name pos:line="117" pos:column="12">tc_stats<pos:position pos:line="117" pos:column="20"/></name></name> <modifier pos:line="117" pos:column="21">*<pos:position pos:line="117" pos:column="22"/></modifier></type><name pos:line="117" pos:column="22">ts<pos:position pos:line="117" pos:column="24"/></name> <init pos:line="117" pos:column="25">= <expr><name pos:line="117" pos:column="27">NULL<pos:position pos:line="117" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="117" pos:column="32"/></decl_stmt>

    <if pos:line="119" pos:column="5">if <condition pos:line="119" pos:column="8">(<expr><call><name pos:line="119" pos:column="9">mnl_attr_get_type<pos:position pos:line="119" pos:column="26"/></name><argument_list pos:line="119" pos:column="26">(<argument><expr><name pos:line="119" pos:column="27">attr<pos:position pos:line="119" pos:column="31"/></name></expr></argument>)<pos:position pos:line="119" pos:column="32"/></argument_list></call> <operator pos:line="119" pos:column="33">!=<pos:position pos:line="119" pos:column="35"/></operator> <name pos:line="119" pos:column="36">TCA_STATS<pos:position pos:line="119" pos:column="45"/></name></expr>)<pos:position pos:line="119" pos:column="46"/></condition><then pos:line="119" pos:column="46">
      <block type="pseudo"><continue pos:line="120" pos:column="7">continue;<pos:position pos:line="120" pos:column="16"/></continue></block></then></if>

    <if pos:line="122" pos:column="5">if <condition pos:line="122" pos:column="8">(<expr><call><name pos:line="122" pos:column="9">mnl_attr_validate2<pos:position pos:line="122" pos:column="27"/></name><argument_list pos:line="122" pos:column="27">(<argument><expr><name pos:line="122" pos:column="28">attr<pos:position pos:line="122" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="34">MNL_TYPE_UNSPEC<pos:position pos:line="122" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="122" pos:column="51">sizeof<argument_list pos:line="122" pos:column="57">(<argument><expr><operator pos:line="122" pos:column="58">*<pos:position pos:line="122" pos:column="59"/></operator><name pos:line="122" pos:column="59">ts<pos:position pos:line="122" pos:column="61"/></name></expr></argument>)<pos:position pos:line="122" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="122" pos:column="63"/></argument_list></call> <operator pos:line="122" pos:column="64">&lt;<pos:position pos:line="122" pos:column="68"/></operator> <literal type="number" pos:line="122" pos:column="66">0<pos:position pos:line="122" pos:column="67"/></literal></expr>)<pos:position pos:line="122" pos:column="68"/></condition><then pos:line="122" pos:column="68"> <block pos:line="122" pos:column="69">{
      <expr_stmt><expr><call><name pos:line="123" pos:column="7">ERROR<pos:position pos:line="123" pos:column="12"/></name><argument_list pos:line="123" pos:column="12">(<argument><expr><literal type="string" pos:line="123" pos:column="13">"netlink plugin: qos_filter_cb: TCA_STATS mnl_attr_validate2 "<pos:position pos:line="123" pos:column="75"/></literal>
            <literal type="string" pos:line="124" pos:column="13">"failed."<pos:position pos:line="124" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="24"/></expr_stmt>
      <return pos:line="125" pos:column="7">return <expr><name pos:line="125" pos:column="14">MNL_CB_ERROR<pos:position pos:line="125" pos:column="26"/></name></expr>;<pos:position pos:line="125" pos:column="27"/></return>
    }<pos:position pos:line="126" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="127" pos:column="5">ts<pos:position pos:line="127" pos:column="7"/></name> <operator pos:line="127" pos:column="8">=<pos:position pos:line="127" pos:column="9"/></operator> <call><name pos:line="127" pos:column="10">mnl_attr_get_payload<pos:position pos:line="127" pos:column="30"/></name><argument_list pos:line="127" pos:column="30">(<argument><expr><name pos:line="127" pos:column="31">attr<pos:position pos:line="127" pos:column="35"/></name></expr></argument>)<pos:position pos:line="127" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="37"/></expr_stmt>

    <if pos:line="129" pos:column="5">if <condition pos:line="129" pos:column="8">(<expr><operator pos:line="129" pos:column="9">!<pos:position pos:line="129" pos:column="10"/></operator><name pos:line="129" pos:column="10">stats_submitted<pos:position pos:line="129" pos:column="25"/></name> <operator pos:line="129" pos:column="26">&amp;&amp;<pos:position pos:line="129" pos:column="36"/></operator> <name pos:line="129" pos:column="29">ts<pos:position pos:line="129" pos:column="31"/></name> <operator pos:line="129" pos:column="32">!=<pos:position pos:line="129" pos:column="34"/></operator> <name pos:line="129" pos:column="35">NULL<pos:position pos:line="129" pos:column="39"/></name></expr>)<pos:position pos:line="129" pos:column="40"/></condition><then pos:line="129" pos:column="40"> <block pos:line="129" pos:column="41">{
      <decl_stmt><decl><type><name pos:line="130" pos:column="7">char<pos:position pos:line="130" pos:column="11"/></name></type> <name><name pos:line="130" pos:column="12">type_instance<pos:position pos:line="130" pos:column="25"/></name><index pos:line="130" pos:column="25">[<expr><name pos:line="130" pos:column="26">DATA_MAX_NAME_LEN<pos:position pos:line="130" pos:column="43"/></name></expr>]<pos:position pos:line="130" pos:column="44"/></index></name></decl>;<pos:position pos:line="130" pos:column="45"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="132" pos:column="7">ssnprintf<pos:position pos:line="132" pos:column="16"/></name><argument_list pos:line="132" pos:column="16">(<argument><expr><name pos:line="132" pos:column="17">type_instance<pos:position pos:line="132" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="132" pos:column="32">sizeof<argument_list pos:line="132" pos:column="38">(<argument><expr><name pos:line="132" pos:column="39">type_instance<pos:position pos:line="132" pos:column="52"/></name></expr></argument>)<pos:position pos:line="132" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="55">"%s-%s"<pos:position pos:line="132" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="132" pos:column="64">tc_type<pos:position pos:line="132" pos:column="71"/></name></expr></argument>,
                <argument><expr><name pos:line="133" pos:column="17">tc_inst<pos:position pos:line="133" pos:column="24"/></name></expr></argument>)<pos:position pos:line="133" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="26"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="135" pos:column="7">submit_one<pos:position pos:line="135" pos:column="17"/></name><argument_list pos:line="135" pos:column="17">(<argument><expr><name pos:line="135" pos:column="18">dev<pos:position pos:line="135" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="23">"ipt_bytes"<pos:position pos:line="135" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="135" pos:column="36">type_instance<pos:position pos:line="135" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="135" pos:column="51">ts<pos:position pos:line="135" pos:column="53"/></name><operator pos:line="135" pos:column="53">-&gt;<pos:position pos:line="135" pos:column="58"/></operator><name pos:line="135" pos:column="55">bytes<pos:position pos:line="135" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="136" pos:column="7">submit_one<pos:position pos:line="136" pos:column="17"/></name><argument_list pos:line="136" pos:column="17">(<argument><expr><name pos:line="136" pos:column="18">dev<pos:position pos:line="136" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="23">"ipt_packets"<pos:position pos:line="136" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="136" pos:column="38">type_instance<pos:position pos:line="136" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="53">ts<pos:position pos:line="136" pos:column="55"/></name><operator pos:line="136" pos:column="55">-&gt;<pos:position pos:line="136" pos:column="60"/></operator><name pos:line="136" pos:column="57">packets<pos:position pos:line="136" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="137" pos:column="6"/></block></then></if>

    <break pos:line="139" pos:column="5">break;<pos:position pos:line="139" pos:column="11"/></break>
  }<pos:position pos:line="140" pos:column="4"/></block>

<cpp:endif pos:line="142" pos:column="1">#<cpp:directive pos:line="142" pos:column="2">endif<pos:position pos:line="142" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="142" pos:column="8">/* TCA_STATS */</comment>

<cpp:if pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">if<pos:position pos:line="144" pos:column="4"/></cpp:directive> <expr><operator pos:line="144" pos:column="5">!<pos:position pos:line="144" pos:column="6"/></operator><operator pos:line="144" pos:column="6">(<pos:position pos:line="144" pos:column="7"/></operator><name pos:line="144" pos:column="7">HAVE_TCA_STATS<pos:position pos:line="144" pos:column="21"/></name> <operator pos:line="144" pos:column="22">&amp;&amp;<pos:position pos:line="144" pos:column="32"/></operator> <name pos:line="144" pos:column="25">HAVE_TCA_STATS2<pos:position pos:line="144" pos:column="40"/></name><operator pos:line="144" pos:column="40">)<pos:position pos:line="144" pos:column="41"/></operator></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="145" pos:column="3">DEBUG<pos:position pos:line="145" pos:column="8"/></name><argument_list pos:line="145" pos:column="8">(<argument><expr><literal type="string" pos:line="145" pos:column="9">"netlink plugin: qos_filter_cb: Have neither TCA_STATS2 nor "<pos:position pos:line="145" pos:column="70"/></literal>
        <literal type="string" pos:line="146" pos:column="9">"TCA_STATS."<pos:position pos:line="146" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">endif<pos:position pos:line="147" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="149" pos:column="3">return <expr><name pos:line="149" pos:column="10">MNL_CB_OK<pos:position pos:line="149" pos:column="19"/></name></expr>;<pos:position pos:line="149" pos:column="20"/></return>
}<pos:position pos:line="150" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1279_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">grpc<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">Status<pos:position pos:line="1" pos:column="13"/></name></name></type> <name pos:line="1" pos:column="14">DispatchValues<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">grpc<pos:position pos:line="1" pos:column="33"/></name><operator pos:line="1" pos:column="33">::<pos:position pos:line="1" pos:column="35"/></operator><name pos:line="1" pos:column="35">ServerContext<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">ctx<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
								<parameter><decl><type><name><name pos:line="2" pos:column="65">grpc<pos:position pos:line="2" pos:column="69"/></name><operator pos:line="2" pos:column="69">::<pos:position pos:line="2" pos:column="71"/></operator><name><name pos:line="2" pos:column="71">ServerReader<pos:position pos:line="2" pos:column="83"/></name><argument_list type="generic" pos:line="2" pos:column="83">&lt;<argument><expr><name pos:line="2" pos:column="84">DispatchValuesRequest<pos:position pos:line="2" pos:column="105"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="109"/></argument_list></name></name> <modifier pos:line="2" pos:column="107">*<pos:position pos:line="2" pos:column="108"/></modifier></type><name pos:line="2" pos:column="108">reader<pos:position pos:line="2" pos:column="114"/></name></decl></parameter>,
								<parameter><decl><type><name pos:line="3" pos:column="65">DispatchValuesResponse<pos:position pos:line="3" pos:column="87"/></name> <modifier pos:line="3" pos:column="88">*<pos:position pos:line="3" pos:column="89"/></modifier></type><name pos:line="3" pos:column="89">res<pos:position pos:line="3" pos:column="92"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="93"/></parameter_list> <specifier pos:line="3" pos:column="94">override<pos:position pos:line="3" pos:column="102"/></specifier> <block pos:line="3" pos:column="103">{
		<decl_stmt><decl><type><name pos:line="4" pos:column="17">DispatchValuesRequest<pos:position pos:line="4" pos:column="38"/></name></type> <name pos:line="4" pos:column="39">req<pos:position pos:line="4" pos:column="42"/></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>

		<while pos:line="6" pos:column="17">while <condition pos:line="6" pos:column="23">(<expr><call><name><name pos:line="6" pos:column="24">reader<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">Read<pos:position pos:line="6" pos:column="36"/></name></name><argument_list pos:line="6" pos:column="36">(<argument><expr><operator pos:line="6" pos:column="37">&amp;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="38">req<pos:position pos:line="6" pos:column="41"/></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="43"/></condition> <block pos:line="6" pos:column="44">{
			<decl_stmt><decl><type><name pos:line="7" pos:column="25">value_list_t<pos:position pos:line="7" pos:column="37"/></name></type> <name pos:line="7" pos:column="38">vl<pos:position pos:line="7" pos:column="40"/></name> <init pos:line="7" pos:column="41">= <expr><name pos:line="7" pos:column="43">VALUE_LIST_INIT<pos:position pos:line="7" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="59"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="8" pos:column="25">auto<pos:position pos:line="8" pos:column="29"/></name></type> <name pos:line="8" pos:column="30">status<pos:position pos:line="8" pos:column="36"/></name> <init pos:line="8" pos:column="37">= <expr><call><name pos:line="8" pos:column="39">unmarshal_value_list<pos:position pos:line="8" pos:column="59"/></name><argument_list pos:line="8" pos:column="59">(<argument><expr><call><name><name pos:line="8" pos:column="60">req<pos:position pos:line="8" pos:column="63"/></name><operator pos:line="8" pos:column="63">.<pos:position pos:line="8" pos:column="64"/></operator><name pos:line="8" pos:column="64">value_list<pos:position pos:line="8" pos:column="74"/></name></name><argument_list pos:line="8" pos:column="74">()<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="8" pos:column="78">&amp;<pos:position pos:line="8" pos:column="83"/></operator><name pos:line="8" pos:column="79">vl<pos:position pos:line="8" pos:column="81"/></name></expr></argument>)<pos:position pos:line="8" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="83"/></decl_stmt>
			<if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><operator pos:line="9" pos:column="29">!<pos:position pos:line="9" pos:column="30"/></operator><call><name><name pos:line="9" pos:column="30">status<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">.<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">ok<pos:position pos:line="9" pos:column="39"/></name></name><argument_list pos:line="9" pos:column="39">()<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="42"/></condition><then pos:line="9" pos:column="42">
				<block type="pseudo"><return pos:line="10" pos:column="33">return <expr><name pos:line="10" pos:column="40">status<pos:position pos:line="10" pos:column="46"/></name></expr>;<pos:position pos:line="10" pos:column="47"/></return></block></then></if>

			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><call><name pos:line="12" pos:column="29">plugin_dispatch_values<pos:position pos:line="12" pos:column="51"/></name><argument_list pos:line="12" pos:column="51">(<argument><expr><operator pos:line="12" pos:column="52">&amp;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="53">vl<pos:position pos:line="12" pos:column="55"/></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="57"/></condition><then pos:line="12" pos:column="57">
				<block type="pseudo"><return pos:line="13" pos:column="33">return <expr><call><name><name pos:line="13" pos:column="40">grpc<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">::<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="46">Status<pos:position pos:line="13" pos:column="52"/></name></name><argument_list pos:line="13" pos:column="52">(<argument><expr><name><name pos:line="13" pos:column="53">grpc<pos:position pos:line="13" pos:column="57"/></name><operator pos:line="13" pos:column="57">::<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="59">StatusCode<pos:position pos:line="13" pos:column="69"/></name><operator pos:line="13" pos:column="69">::<pos:position pos:line="13" pos:column="71"/></operator><name pos:line="13" pos:column="71">INTERNAL<pos:position pos:line="13" pos:column="79"/></name></name></expr></argument>,
									<argument><expr><call><name><name pos:line="14" pos:column="73">grpc<pos:position pos:line="14" pos:column="77"/></name><operator pos:line="14" pos:column="77">::<pos:position pos:line="14" pos:column="79"/></operator><name pos:line="14" pos:column="79">string<pos:position pos:line="14" pos:column="85"/></name></name><argument_list pos:line="14" pos:column="85">(<argument><expr><literal type="string" pos:line="14" pos:column="86">"failed to enqueue values for writing"<pos:position pos:line="14" pos:column="124"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="125"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="127"/></return></block></then></if>
		}<pos:position pos:line="15" pos:column="18"/></block></while>

		<expr_stmt><expr><call><name><name pos:line="17" pos:column="17">res<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">Clear<pos:position pos:line="17" pos:column="27"/></name></name><argument_list pos:line="17" pos:column="27">()<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><name><name pos:line="18" pos:column="24">grpc<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">::<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">Status<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">::<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="38">OK<pos:position pos:line="18" pos:column="40"/></name></name></expr>;<pos:position pos:line="18" pos:column="41"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></function></unit>

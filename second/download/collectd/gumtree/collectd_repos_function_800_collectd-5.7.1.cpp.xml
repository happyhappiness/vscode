<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_800_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_linux_sll<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">u_char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">pkt<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">len<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <block pos:line="1" pos:column="57">{
  <struct pos:line="2" pos:column="3">struct <name pos:line="2" pos:column="10">sll_header<pos:position pos:line="2" pos:column="20"/></name> <block pos:line="2" pos:column="21">{<public type="default" pos:line="2" pos:column="22">
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">uint16_t<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">pkt_type<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">uint16_t<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">dev_type<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">uint16_t<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">addr_len<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">uint8_t<pos:position pos:line="6" pos:column="12"/></name></type> <name><name pos:line="6" pos:column="13">addr<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><literal type="number" pos:line="6" pos:column="18">8<pos:position pos:line="6" pos:column="19"/></literal></expr>]<pos:position pos:line="6" pos:column="20"/></index></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">uint16_t<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">proto_type<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <pos:position pos:line="8" pos:column="3"/></public>}<pos:position pos:line="8" pos:column="4"/></block> <decl><modifier pos:line="8" pos:column="5">*<pos:position pos:line="8" pos:column="6"/></modifier> <name pos:line="8" pos:column="7">hdr<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></struct>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">uint16_t<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">etype<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">(<pos:position pos:line="11" pos:column="8"/></operator><literal type="number" pos:line="11" pos:column="8">0<pos:position pos:line="11" pos:column="9"/></literal> <operator pos:line="11" pos:column="10">&gt;<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="12">len<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator> <operator pos:line="11" pos:column="17">||<pos:position pos:line="11" pos:column="19"/></operator> <operator pos:line="11" pos:column="20">(<pos:position pos:line="11" pos:column="21"/></operator><operator pos:line="11" pos:column="21">(<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">unsigned<pos:position pos:line="11" pos:column="30"/></name> <name pos:line="11" pos:column="31">int<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">)<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="35">len<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">&lt;<pos:position pos:line="11" pos:column="43"/></operator> <sizeof pos:line="11" pos:column="41">sizeof<argument_list pos:line="11" pos:column="47">(<argument><expr pos:line="11" pos:column="48">struct <name pos:line="11" pos:column="55">sll_header<pos:position pos:line="11" pos:column="65"/></name></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></sizeof><operator pos:line="11" pos:column="66">)<pos:position pos:line="11" pos:column="67"/></operator></expr>)<pos:position pos:line="11" pos:column="68"/></condition><then pos:line="11" pos:column="68">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal><operator pos:line="12" pos:column="14">)<pos:position pos:line="12" pos:column="15"/></operator></expr>;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">hdr<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator>struct <name pos:line="14" pos:column="17">sll_header<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></operator><operator pos:line="14" pos:column="29">)<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">pkt<pos:position pos:line="14" pos:column="33"/></name></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">pkt<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">u_char<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">*<pos:position pos:line="15" pos:column="18"/></operator><operator pos:line="15" pos:column="18">)<pos:position pos:line="15" pos:column="19"/></operator><operator pos:line="15" pos:column="19">(<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">hdr<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">+<pos:position pos:line="15" pos:column="25"/></operator> <literal type="number" pos:line="15" pos:column="26">1<pos:position pos:line="15" pos:column="27"/></literal><operator pos:line="15" pos:column="27">)<pos:position pos:line="15" pos:column="28"/></operator></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">len<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">-=<pos:position pos:line="16" pos:column="9"/></operator> <sizeof pos:line="16" pos:column="10">sizeof<argument_list pos:line="16" pos:column="16">(<argument><expr pos:line="16" pos:column="17">struct <name pos:line="16" pos:column="24">sll_header<pos:position pos:line="16" pos:column="34"/></name></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></sizeof></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name pos:line="18" pos:column="3">etype<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">ntohs<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name><name pos:line="18" pos:column="17">hdr<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">proto_type<pos:position pos:line="18" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><operator pos:line="20" pos:column="7">(<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">ETHERTYPE_IP<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">!=<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="24">etype<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">)<pos:position pos:line="20" pos:column="30"/></operator> <operator pos:line="20" pos:column="31">&amp;&amp;<pos:position pos:line="20" pos:column="41"/></operator> <operator pos:line="20" pos:column="34">(<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="35">ETHERTYPE_IPV6<pos:position pos:line="20" pos:column="49"/></name> <operator pos:line="20" pos:column="50">!=<pos:position pos:line="20" pos:column="52"/></operator> <name pos:line="20" pos:column="53">etype<pos:position pos:line="20" pos:column="58"/></name><operator pos:line="20" pos:column="58">)<pos:position pos:line="20" pos:column="59"/></operator></expr>)<pos:position pos:line="20" pos:column="60"/></condition><then pos:line="20" pos:column="60">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><literal type="number" pos:line="21" pos:column="12">0<pos:position pos:line="21" pos:column="13"/></literal></expr>;<pos:position pos:line="21" pos:column="14"/></return></block></then></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">ETHERTYPE_IPV6<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">==<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">etype<pos:position pos:line="23" pos:column="30"/></name></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31">
    <block type="pseudo"><return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><call><name pos:line="24" pos:column="13">handle_ipv6<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><operator pos:line="24" pos:column="25">(<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="26">void<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">*<pos:position pos:line="24" pos:column="32"/></operator><operator pos:line="24" pos:column="32">)<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">pkt<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="38">len<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call><operator pos:line="24" pos:column="42">)<pos:position pos:line="24" pos:column="43"/></operator></expr>;<pos:position pos:line="24" pos:column="44"/></return></block></then>
  <else pos:line="25" pos:column="3">else
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><call><name pos:line="26" pos:column="12">handle_ip<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><operator pos:line="26" pos:column="22">(<pos:position pos:line="26" pos:column="23"/></operator>struct <name pos:line="26" pos:column="30">ip<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">*<pos:position pos:line="26" pos:column="34"/></operator><operator pos:line="26" pos:column="34">)<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">pkt<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="40">len<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></return></block></else></if>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

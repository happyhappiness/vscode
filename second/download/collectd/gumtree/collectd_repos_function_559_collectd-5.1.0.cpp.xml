<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_559_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ps_read<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">HAVE_THREAD_INFO<pos:position pos:line="3" pos:column="21"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">kern_return_t<pos:position pos:line="4" pos:column="22"/></name></type>            <name pos:line="4" pos:column="34">status<pos:position pos:line="4" pos:column="40"/></name></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type>                      <name pos:line="6" pos:column="34">pset<pos:position pos:line="6" pos:column="38"/></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">processor_set_t<pos:position pos:line="7" pos:column="24"/></name></type>          <name pos:line="7" pos:column="34">port_pset_priv<pos:position pos:line="7" pos:column="48"/></name></decl>;<pos:position pos:line="7" pos:column="49"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type>                      <name pos:line="9" pos:column="34">task<pos:position pos:line="9" pos:column="38"/></name></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">task_array_t<pos:position pos:line="10" pos:column="21"/></name></type>             <name pos:line="10" pos:column="34">task_list<pos:position pos:line="10" pos:column="43"/></name></decl>;<pos:position pos:line="10" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">mach_msg_type_number_t<pos:position pos:line="11" pos:column="31"/></name></type>   <name pos:line="11" pos:column="34">task_list_len<pos:position pos:line="11" pos:column="47"/></name></decl>;<pos:position pos:line="11" pos:column="48"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type>                      <name pos:line="13" pos:column="34">task_pid<pos:position pos:line="13" pos:column="42"/></name></decl>;<pos:position pos:line="13" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name></type>                     <name><name pos:line="14" pos:column="34">task_name<pos:position pos:line="14" pos:column="43"/></name><index pos:line="14" pos:column="43">[<expr><name pos:line="14" pos:column="44">MAXCOMLEN<pos:position pos:line="14" pos:column="53"/></name> <operator pos:line="14" pos:column="54">+<pos:position pos:line="14" pos:column="55"/></operator> <literal type="number" pos:line="14" pos:column="56">1<pos:position pos:line="14" pos:column="57"/></literal></expr>]<pos:position pos:line="14" pos:column="58"/></index></name></decl>;<pos:position pos:line="14" pos:column="59"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type>                      <name pos:line="16" pos:column="34">thread<pos:position pos:line="16" pos:column="40"/></name></decl>;<pos:position pos:line="16" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">thread_act_array_t<pos:position pos:line="17" pos:column="27"/></name></type>       <name pos:line="17" pos:column="34">thread_list<pos:position pos:line="17" pos:column="45"/></name></decl>;<pos:position pos:line="17" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">mach_msg_type_number_t<pos:position pos:line="18" pos:column="31"/></name></type>   <name pos:line="18" pos:column="34">thread_list_len<pos:position pos:line="18" pos:column="49"/></name></decl>;<pos:position pos:line="18" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">thread_basic_info_data_t<pos:position pos:line="19" pos:column="33"/></name></type> <name pos:line="19" pos:column="34">thread_data<pos:position pos:line="19" pos:column="45"/></name></decl>;<pos:position pos:line="19" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">mach_msg_type_number_t<pos:position pos:line="20" pos:column="31"/></name></type>   <name pos:line="20" pos:column="34">thread_data_len<pos:position pos:line="20" pos:column="49"/></name></decl>;<pos:position pos:line="20" pos:column="50"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="22" pos:column="9">int<pos:position pos:line="22" pos:column="12"/></name></type> <name pos:line="22" pos:column="13">running<pos:position pos:line="22" pos:column="20"/></name>  <init pos:line="22" pos:column="22">= <expr><literal type="number" pos:line="22" pos:column="24">0<pos:position pos:line="22" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="23" pos:column="9">int<pos:position pos:line="23" pos:column="12"/></name></type> <name pos:line="23" pos:column="13">sleeping<pos:position pos:line="23" pos:column="21"/></name> <init pos:line="23" pos:column="22">= <expr><literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="24" pos:column="9">int<pos:position pos:line="24" pos:column="12"/></name></type> <name pos:line="24" pos:column="13">zombies<pos:position pos:line="24" pos:column="20"/></name>  <init pos:line="24" pos:column="22">= <expr><literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="25" pos:column="9">int<pos:position pos:line="25" pos:column="12"/></name></type> <name pos:line="25" pos:column="13">stopped<pos:position pos:line="25" pos:column="20"/></name>  <init pos:line="25" pos:column="22">= <expr><literal type="number" pos:line="25" pos:column="24">0<pos:position pos:line="25" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="26" pos:column="9">int<pos:position pos:line="26" pos:column="12"/></name></type> <name pos:line="26" pos:column="13">blocked<pos:position pos:line="26" pos:column="20"/></name>  <init pos:line="26" pos:column="22">= <expr><literal type="number" pos:line="26" pos:column="24">0<pos:position pos:line="26" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="26"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="28" pos:column="9">procstat_t<pos:position pos:line="28" pos:column="19"/></name> <modifier pos:line="28" pos:column="20">*<pos:position pos:line="28" pos:column="21"/></modifier></type><name pos:line="28" pos:column="21">ps<pos:position pos:line="28" pos:column="23"/></name></decl>;<pos:position pos:line="28" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="29" pos:column="9">procstat_entry_t<pos:position pos:line="29" pos:column="25"/></name></type> <name pos:line="29" pos:column="26">pse<pos:position pos:line="29" pos:column="29"/></name></decl>;<pos:position pos:line="29" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">ps_list_reset<pos:position pos:line="31" pos:column="22"/></name> <argument_list pos:line="31" pos:column="23">()<pos:position pos:line="31" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>

	<comment type="block" pos:line="33" pos:column="9">/*
	 * The Mach-concept is a little different from the traditional UNIX
	 * concept: All the work is done in threads. Threads are contained in
	 * `tasks'. Therefore, `task status' doesn't make much sense, since
	 * it's actually a `thread status'.
	 * Tasks are assigned to sets of processors, so that's where you go to
	 * get a list.
	 */</comment>
	<for pos:line="41" pos:column="9">for <control pos:line="41" pos:column="13">(<init><expr><name pos:line="41" pos:column="14">pset<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <literal type="number" pos:line="41" pos:column="21">0<pos:position pos:line="41" pos:column="22"/></literal></expr>;<pos:position pos:line="41" pos:column="23"/></init> <condition><expr><name pos:line="41" pos:column="24">pset<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">&lt;<pos:position pos:line="41" pos:column="33"/></operator> <name pos:line="41" pos:column="31">pset_list_len<pos:position pos:line="41" pos:column="44"/></name></expr>;<pos:position pos:line="41" pos:column="45"/></condition> <incr><expr><name pos:line="41" pos:column="46">pset<pos:position pos:line="41" pos:column="50"/></name><operator pos:line="41" pos:column="50">++<pos:position pos:line="41" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="53"/></control>
	<block pos:line="42" pos:column="9">{
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><operator pos:line="43" pos:column="21">(<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">status<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">=<pos:position pos:line="43" pos:column="30"/></operator> <call><name pos:line="43" pos:column="31">host_processor_set_priv<pos:position pos:line="43" pos:column="54"/></name> <argument_list pos:line="43" pos:column="55">(<argument><expr><name pos:line="43" pos:column="56">port_host_self<pos:position pos:line="43" pos:column="70"/></name></expr></argument>,
						<argument><expr><name><name pos:line="44" pos:column="49">pset_list<pos:position pos:line="44" pos:column="58"/></name><index pos:line="44" pos:column="58">[<expr><name pos:line="44" pos:column="59">pset<pos:position pos:line="44" pos:column="63"/></name></expr>]<pos:position pos:line="44" pos:column="64"/></index></name></expr></argument>,
						<argument><expr><operator pos:line="45" pos:column="49">&amp;<pos:position pos:line="45" pos:column="54"/></operator><name pos:line="45" pos:column="50">port_pset_priv<pos:position pos:line="45" pos:column="64"/></name></expr></argument>)<pos:position pos:line="45" pos:column="65"/></argument_list></call><operator pos:line="45" pos:column="65">)<pos:position pos:line="45" pos:column="66"/></operator> <operator pos:line="45" pos:column="67">!=<pos:position pos:line="45" pos:column="69"/></operator> <name pos:line="45" pos:column="70">KERN_SUCCESS<pos:position pos:line="45" pos:column="82"/></name></expr>)<pos:position pos:line="45" pos:column="83"/></condition><then pos:line="45" pos:column="83">
		<block pos:line="46" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="47" pos:column="25">ERROR<pos:position pos:line="47" pos:column="30"/></name> <argument_list pos:line="47" pos:column="31">(<argument><expr><literal type="string" pos:line="47" pos:column="32">"host_processor_set_priv failed: %s\n"<pos:position pos:line="47" pos:column="70"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="48" pos:column="41">mach_error_string<pos:position pos:line="48" pos:column="58"/></name> <argument_list pos:line="48" pos:column="59">(<argument><expr><name pos:line="48" pos:column="60">status<pos:position pos:line="48" pos:column="66"/></name></expr></argument>)<pos:position pos:line="48" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="69"/></expr_stmt>
			<continue pos:line="49" pos:column="25">continue;<pos:position pos:line="49" pos:column="34"/></continue>
		}<pos:position pos:line="50" pos:column="18"/></block></then></if>

		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><operator pos:line="52" pos:column="21">(<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="22">status<pos:position pos:line="52" pos:column="28"/></name> <operator pos:line="52" pos:column="29">=<pos:position pos:line="52" pos:column="30"/></operator> <call><name pos:line="52" pos:column="31">processor_set_tasks<pos:position pos:line="52" pos:column="50"/></name> <argument_list pos:line="52" pos:column="51">(<argument><expr><name pos:line="52" pos:column="52">port_pset_priv<pos:position pos:line="52" pos:column="66"/></name></expr></argument>,
						<argument><expr><operator pos:line="53" pos:column="49">&amp;<pos:position pos:line="53" pos:column="54"/></operator><name pos:line="53" pos:column="50">task_list<pos:position pos:line="53" pos:column="59"/></name></expr></argument>,
						<argument><expr><operator pos:line="54" pos:column="49">&amp;<pos:position pos:line="54" pos:column="54"/></operator><name pos:line="54" pos:column="50">task_list_len<pos:position pos:line="54" pos:column="63"/></name></expr></argument>)<pos:position pos:line="54" pos:column="64"/></argument_list></call><operator pos:line="54" pos:column="64">)<pos:position pos:line="54" pos:column="65"/></operator> <operator pos:line="54" pos:column="66">!=<pos:position pos:line="54" pos:column="68"/></operator> <name pos:line="54" pos:column="69">KERN_SUCCESS<pos:position pos:line="54" pos:column="81"/></name></expr>)<pos:position pos:line="54" pos:column="82"/></condition><then pos:line="54" pos:column="82">
		<block pos:line="55" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="56" pos:column="25">ERROR<pos:position pos:line="56" pos:column="30"/></name> <argument_list pos:line="56" pos:column="31">(<argument><expr><literal type="string" pos:line="56" pos:column="32">"processor_set_tasks failed: %s\n"<pos:position pos:line="56" pos:column="66"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="57" pos:column="41">mach_error_string<pos:position pos:line="57" pos:column="58"/></name> <argument_list pos:line="57" pos:column="59">(<argument><expr><name pos:line="57" pos:column="60">status<pos:position pos:line="57" pos:column="66"/></name></expr></argument>)<pos:position pos:line="57" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">mach_port_deallocate<pos:position pos:line="58" pos:column="45"/></name> <argument_list pos:line="58" pos:column="46">(<argument><expr><name pos:line="58" pos:column="47">port_task_self<pos:position pos:line="58" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="63">port_pset_priv<pos:position pos:line="58" pos:column="77"/></name></expr></argument>)<pos:position pos:line="58" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="79"/></expr_stmt>
			<continue pos:line="59" pos:column="25">continue;<pos:position pos:line="59" pos:column="34"/></continue>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if>

		<for pos:line="62" pos:column="17">for <control pos:line="62" pos:column="21">(<init><expr><name pos:line="62" pos:column="22">task<pos:position pos:line="62" pos:column="26"/></name> <operator pos:line="62" pos:column="27">=<pos:position pos:line="62" pos:column="28"/></operator> <literal type="number" pos:line="62" pos:column="29">0<pos:position pos:line="62" pos:column="30"/></literal></expr>;<pos:position pos:line="62" pos:column="31"/></init> <condition><expr><name pos:line="62" pos:column="32">task<pos:position pos:line="62" pos:column="36"/></name> <operator pos:line="62" pos:column="37">&lt;<pos:position pos:line="62" pos:column="41"/></operator> <name pos:line="62" pos:column="39">task_list_len<pos:position pos:line="62" pos:column="52"/></name></expr>;<pos:position pos:line="62" pos:column="53"/></condition> <incr><expr><name pos:line="62" pos:column="54">task<pos:position pos:line="62" pos:column="58"/></name><operator pos:line="62" pos:column="58">++<pos:position pos:line="62" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="62" pos:column="61"/></control>
		<block pos:line="63" pos:column="17">{
			<expr_stmt><expr><name pos:line="64" pos:column="25">ps<pos:position pos:line="64" pos:column="27"/></name> <operator pos:line="64" pos:column="28">=<pos:position pos:line="64" pos:column="29"/></operator> <name pos:line="64" pos:column="30">NULL<pos:position pos:line="64" pos:column="34"/></name></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt>
			<if pos:line="65" pos:column="25">if <condition pos:line="65" pos:column="28">(<expr><call><name pos:line="65" pos:column="29">mach_get_task_name<pos:position pos:line="65" pos:column="47"/></name> <argument_list pos:line="65" pos:column="48">(<argument><expr><name><name pos:line="65" pos:column="49">task_list<pos:position pos:line="65" pos:column="58"/></name><index pos:line="65" pos:column="58">[<expr><name pos:line="65" pos:column="59">task<pos:position pos:line="65" pos:column="63"/></name></expr>]<pos:position pos:line="65" pos:column="64"/></index></name></expr></argument>,
						<argument><expr><operator pos:line="66" pos:column="49">&amp;<pos:position pos:line="66" pos:column="54"/></operator><name pos:line="66" pos:column="50">task_pid<pos:position pos:line="66" pos:column="58"/></name></expr></argument>,
						<argument><expr><name pos:line="67" pos:column="49">task_name<pos:position pos:line="67" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="60">PROCSTAT_NAME_LEN<pos:position pos:line="67" pos:column="77"/></name></expr></argument>)<pos:position pos:line="67" pos:column="78"/></argument_list></call> <operator pos:line="67" pos:column="79">==<pos:position pos:line="67" pos:column="81"/></operator> <literal type="number" pos:line="67" pos:column="82">0<pos:position pos:line="67" pos:column="83"/></literal></expr>)<pos:position pos:line="67" pos:column="84"/></condition><then pos:line="67" pos:column="84">
			<block pos:line="68" pos:column="25">{
				<comment type="block" pos:line="69" pos:column="33">/* search for at least one match */</comment>
				<for pos:line="70" pos:column="33">for <control pos:line="70" pos:column="37">(<init><expr><name pos:line="70" pos:column="38">ps<pos:position pos:line="70" pos:column="40"/></name> <operator pos:line="70" pos:column="41">=<pos:position pos:line="70" pos:column="42"/></operator> <name pos:line="70" pos:column="43">list_head_g<pos:position pos:line="70" pos:column="54"/></name></expr>;<pos:position pos:line="70" pos:column="55"/></init> <condition><expr><name pos:line="70" pos:column="56">ps<pos:position pos:line="70" pos:column="58"/></name> <operator pos:line="70" pos:column="59">!=<pos:position pos:line="70" pos:column="61"/></operator> <name pos:line="70" pos:column="62">NULL<pos:position pos:line="70" pos:column="66"/></name></expr>;<pos:position pos:line="70" pos:column="67"/></condition> <incr><expr><name pos:line="70" pos:column="68">ps<pos:position pos:line="70" pos:column="70"/></name> <operator pos:line="70" pos:column="71">=<pos:position pos:line="70" pos:column="72"/></operator> <name><name pos:line="70" pos:column="73">ps<pos:position pos:line="70" pos:column="75"/></name><operator pos:line="70" pos:column="75">-&gt;<pos:position pos:line="70" pos:column="80"/></operator><name pos:line="70" pos:column="77">next<pos:position pos:line="70" pos:column="81"/></name></name></expr></incr>)<pos:position pos:line="70" pos:column="82"/></control>
					<comment type="block" pos:line="71" pos:column="41">/* FIXME: cmdline should be here instead of NULL */</comment>
					<block type="pseudo"><if pos:line="72" pos:column="41">if <condition pos:line="72" pos:column="44">(<expr><call><name pos:line="72" pos:column="45">ps_list_match<pos:position pos:line="72" pos:column="58"/></name> <argument_list pos:line="72" pos:column="59">(<argument><expr><name pos:line="72" pos:column="60">task_name<pos:position pos:line="72" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="71">NULL<pos:position pos:line="72" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="77">ps<pos:position pos:line="72" pos:column="79"/></name></expr></argument>)<pos:position pos:line="72" pos:column="80"/></argument_list></call> <operator pos:line="72" pos:column="81">==<pos:position pos:line="72" pos:column="83"/></operator> <literal type="number" pos:line="72" pos:column="84">1<pos:position pos:line="72" pos:column="85"/></literal></expr>)<pos:position pos:line="72" pos:column="86"/></condition><then pos:line="72" pos:column="86">
						<block type="pseudo"><break pos:line="73" pos:column="49">break;<pos:position pos:line="73" pos:column="55"/></break></block></then></if></block></for>
			}<pos:position pos:line="74" pos:column="26"/></block></then></if>

			<comment type="block" pos:line="76" pos:column="25">/* Collect more detailed statistics for this process */</comment>
			<if pos:line="77" pos:column="25">if <condition pos:line="77" pos:column="28">(<expr><name pos:line="77" pos:column="29">ps<pos:position pos:line="77" pos:column="31"/></name> <operator pos:line="77" pos:column="32">!=<pos:position pos:line="77" pos:column="34"/></operator> <name pos:line="77" pos:column="35">NULL<pos:position pos:line="77" pos:column="39"/></name></expr>)<pos:position pos:line="77" pos:column="40"/></condition><then pos:line="77" pos:column="40">
			<block pos:line="78" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="79" pos:column="33">task_basic_info_data_t<pos:position pos:line="79" pos:column="55"/></name></type>        <name pos:line="79" pos:column="63">task_basic_info<pos:position pos:line="79" pos:column="78"/></name></decl>;<pos:position pos:line="79" pos:column="79"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="80" pos:column="33">mach_msg_type_number_t<pos:position pos:line="80" pos:column="55"/></name></type>        <name pos:line="80" pos:column="63">task_basic_info_len<pos:position pos:line="80" pos:column="82"/></name></decl>;<pos:position pos:line="80" pos:column="83"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="81" pos:column="33">task_events_info_data_t<pos:position pos:line="81" pos:column="56"/></name></type>       <name pos:line="81" pos:column="63">task_events_info<pos:position pos:line="81" pos:column="79"/></name></decl>;<pos:position pos:line="81" pos:column="80"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="82" pos:column="33">mach_msg_type_number_t<pos:position pos:line="82" pos:column="55"/></name></type>        <name pos:line="82" pos:column="63">task_events_info_len<pos:position pos:line="82" pos:column="83"/></name></decl>;<pos:position pos:line="82" pos:column="84"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="83" pos:column="33">task_absolutetime_info_data_t<pos:position pos:line="83" pos:column="62"/></name></type> <name pos:line="83" pos:column="63">task_absolutetime_info<pos:position pos:line="83" pos:column="85"/></name></decl>;<pos:position pos:line="83" pos:column="86"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="84" pos:column="33">mach_msg_type_number_t<pos:position pos:line="84" pos:column="55"/></name></type>        <name pos:line="84" pos:column="63">task_absolutetime_info_len<pos:position pos:line="84" pos:column="89"/></name></decl>;<pos:position pos:line="84" pos:column="90"/></decl_stmt>

				<expr_stmt><expr><call><name pos:line="86" pos:column="33">memset<pos:position pos:line="86" pos:column="39"/></name> <argument_list pos:line="86" pos:column="40">(<argument><expr><operator pos:line="86" pos:column="41">&amp;<pos:position pos:line="86" pos:column="46"/></operator><name pos:line="86" pos:column="42">pse<pos:position pos:line="86" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="86" pos:column="47">'\0'<pos:position pos:line="86" pos:column="51"/></literal></expr></argument>, <argument><expr><sizeof pos:line="86" pos:column="53">sizeof <argument_list pos:line="86" pos:column="60">(<argument><expr><name pos:line="86" pos:column="61">pse<pos:position pos:line="86" pos:column="64"/></name></expr></argument>)<pos:position pos:line="86" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="86" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="67"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="87" pos:column="33">pse<pos:position pos:line="87" pos:column="36"/></name><operator pos:line="87" pos:column="36">.<pos:position pos:line="87" pos:column="37"/></operator><name pos:line="87" pos:column="37">id<pos:position pos:line="87" pos:column="39"/></name></name> <operator pos:line="87" pos:column="40">=<pos:position pos:line="87" pos:column="41"/></operator> <name pos:line="87" pos:column="42">task_pid<pos:position pos:line="87" pos:column="50"/></name></expr>;<pos:position pos:line="87" pos:column="51"/></expr_stmt>

				<expr_stmt><expr><name pos:line="89" pos:column="33">task_basic_info_len<pos:position pos:line="89" pos:column="52"/></name> <operator pos:line="89" pos:column="53">=<pos:position pos:line="89" pos:column="54"/></operator> <name pos:line="89" pos:column="55">TASK_BASIC_INFO_COUNT<pos:position pos:line="89" pos:column="76"/></name></expr>;<pos:position pos:line="89" pos:column="77"/></expr_stmt>
				<expr_stmt><expr><name pos:line="90" pos:column="33">status<pos:position pos:line="90" pos:column="39"/></name> <operator pos:line="90" pos:column="40">=<pos:position pos:line="90" pos:column="41"/></operator> <call><name pos:line="90" pos:column="42">task_info<pos:position pos:line="90" pos:column="51"/></name> <argument_list pos:line="90" pos:column="52">(<argument><expr><name><name pos:line="90" pos:column="53">task_list<pos:position pos:line="90" pos:column="62"/></name><index pos:line="90" pos:column="62">[<expr><name pos:line="90" pos:column="63">task<pos:position pos:line="90" pos:column="67"/></name></expr>]<pos:position pos:line="90" pos:column="68"/></index></name></expr></argument>,
						<argument><expr><name pos:line="91" pos:column="49">TASK_BASIC_INFO<pos:position pos:line="91" pos:column="64"/></name></expr></argument>,
						<argument><expr><operator pos:line="92" pos:column="49">(<pos:position pos:line="92" pos:column="50"/></operator><name pos:line="92" pos:column="50">task_info_t<pos:position pos:line="92" pos:column="61"/></name><operator pos:line="92" pos:column="61">)<pos:position pos:line="92" pos:column="62"/></operator> <operator pos:line="92" pos:column="63">&amp;<pos:position pos:line="92" pos:column="68"/></operator><name pos:line="92" pos:column="64">task_basic_info<pos:position pos:line="92" pos:column="79"/></name></expr></argument>,
						<argument><expr><operator pos:line="93" pos:column="49">&amp;<pos:position pos:line="93" pos:column="54"/></operator><name pos:line="93" pos:column="50">task_basic_info_len<pos:position pos:line="93" pos:column="69"/></name></expr></argument>)<pos:position pos:line="93" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="71"/></expr_stmt>
				<if pos:line="94" pos:column="33">if <condition pos:line="94" pos:column="36">(<expr><name pos:line="94" pos:column="37">status<pos:position pos:line="94" pos:column="43"/></name> <operator pos:line="94" pos:column="44">!=<pos:position pos:line="94" pos:column="46"/></operator> <name pos:line="94" pos:column="47">KERN_SUCCESS<pos:position pos:line="94" pos:column="59"/></name></expr>)<pos:position pos:line="94" pos:column="60"/></condition><then pos:line="94" pos:column="60">
				<block pos:line="95" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="96" pos:column="41">ERROR<pos:position pos:line="96" pos:column="46"/></name> <argument_list pos:line="96" pos:column="47">(<argument><expr><literal type="string" pos:line="96" pos:column="48">"task_info failed: %s"<pos:position pos:line="96" pos:column="70"/></literal></expr></argument>,
							<argument><expr><call><name pos:line="97" pos:column="57">mach_error_string<pos:position pos:line="97" pos:column="74"/></name> <argument_list pos:line="97" pos:column="75">(<argument><expr><name pos:line="97" pos:column="76">status<pos:position pos:line="97" pos:column="82"/></name></expr></argument>)<pos:position pos:line="97" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="85"/></expr_stmt>
					<continue pos:line="98" pos:column="41">continue;<pos:position pos:line="98" pos:column="50"/></continue> <comment type="block" pos:line="98" pos:column="51">/* with next thread_list */</comment>
				}<pos:position pos:line="99" pos:column="34"/></block></then></if>

				<expr_stmt><expr><name pos:line="101" pos:column="33">task_events_info_len<pos:position pos:line="101" pos:column="53"/></name> <operator pos:line="101" pos:column="54">=<pos:position pos:line="101" pos:column="55"/></operator> <name pos:line="101" pos:column="56">TASK_EVENTS_INFO_COUNT<pos:position pos:line="101" pos:column="78"/></name></expr>;<pos:position pos:line="101" pos:column="79"/></expr_stmt>
				<expr_stmt><expr><name pos:line="102" pos:column="33">status<pos:position pos:line="102" pos:column="39"/></name> <operator pos:line="102" pos:column="40">=<pos:position pos:line="102" pos:column="41"/></operator> <call><name pos:line="102" pos:column="42">task_info<pos:position pos:line="102" pos:column="51"/></name> <argument_list pos:line="102" pos:column="52">(<argument><expr><name><name pos:line="102" pos:column="53">task_list<pos:position pos:line="102" pos:column="62"/></name><index pos:line="102" pos:column="62">[<expr><name pos:line="102" pos:column="63">task<pos:position pos:line="102" pos:column="67"/></name></expr>]<pos:position pos:line="102" pos:column="68"/></index></name></expr></argument>,
						<argument><expr><name pos:line="103" pos:column="49">TASK_EVENTS_INFO<pos:position pos:line="103" pos:column="65"/></name></expr></argument>,
						<argument><expr><operator pos:line="104" pos:column="49">(<pos:position pos:line="104" pos:column="50"/></operator><name pos:line="104" pos:column="50">task_info_t<pos:position pos:line="104" pos:column="61"/></name><operator pos:line="104" pos:column="61">)<pos:position pos:line="104" pos:column="62"/></operator> <operator pos:line="104" pos:column="63">&amp;<pos:position pos:line="104" pos:column="68"/></operator><name pos:line="104" pos:column="64">task_events_info<pos:position pos:line="104" pos:column="80"/></name></expr></argument>,
						<argument><expr><operator pos:line="105" pos:column="49">&amp;<pos:position pos:line="105" pos:column="54"/></operator><name pos:line="105" pos:column="50">task_events_info_len<pos:position pos:line="105" pos:column="70"/></name></expr></argument>)<pos:position pos:line="105" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="72"/></expr_stmt>
				<if pos:line="106" pos:column="33">if <condition pos:line="106" pos:column="36">(<expr><name pos:line="106" pos:column="37">status<pos:position pos:line="106" pos:column="43"/></name> <operator pos:line="106" pos:column="44">!=<pos:position pos:line="106" pos:column="46"/></operator> <name pos:line="106" pos:column="47">KERN_SUCCESS<pos:position pos:line="106" pos:column="59"/></name></expr>)<pos:position pos:line="106" pos:column="60"/></condition><then pos:line="106" pos:column="60">
				<block pos:line="107" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="108" pos:column="41">ERROR<pos:position pos:line="108" pos:column="46"/></name> <argument_list pos:line="108" pos:column="47">(<argument><expr><literal type="string" pos:line="108" pos:column="48">"task_info failed: %s"<pos:position pos:line="108" pos:column="70"/></literal></expr></argument>,
							<argument><expr><call><name pos:line="109" pos:column="57">mach_error_string<pos:position pos:line="109" pos:column="74"/></name> <argument_list pos:line="109" pos:column="75">(<argument><expr><name pos:line="109" pos:column="76">status<pos:position pos:line="109" pos:column="82"/></name></expr></argument>)<pos:position pos:line="109" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="109" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="85"/></expr_stmt>
					<continue pos:line="110" pos:column="41">continue;<pos:position pos:line="110" pos:column="50"/></continue> <comment type="block" pos:line="110" pos:column="51">/* with next thread_list */</comment>
				}<pos:position pos:line="111" pos:column="34"/></block></then></if>

				<expr_stmt><expr><name pos:line="113" pos:column="33">task_absolutetime_info_len<pos:position pos:line="113" pos:column="59"/></name> <operator pos:line="113" pos:column="60">=<pos:position pos:line="113" pos:column="61"/></operator> <name pos:line="113" pos:column="62">TASK_ABSOLUTETIME_INFO_COUNT<pos:position pos:line="113" pos:column="90"/></name></expr>;<pos:position pos:line="113" pos:column="91"/></expr_stmt>
				<expr_stmt><expr><name pos:line="114" pos:column="33">status<pos:position pos:line="114" pos:column="39"/></name> <operator pos:line="114" pos:column="40">=<pos:position pos:line="114" pos:column="41"/></operator> <call><name pos:line="114" pos:column="42">task_info<pos:position pos:line="114" pos:column="51"/></name> <argument_list pos:line="114" pos:column="52">(<argument><expr><name><name pos:line="114" pos:column="53">task_list<pos:position pos:line="114" pos:column="62"/></name><index pos:line="114" pos:column="62">[<expr><name pos:line="114" pos:column="63">task<pos:position pos:line="114" pos:column="67"/></name></expr>]<pos:position pos:line="114" pos:column="68"/></index></name></expr></argument>,
						<argument><expr><name pos:line="115" pos:column="49">TASK_ABSOLUTETIME_INFO<pos:position pos:line="115" pos:column="71"/></name></expr></argument>,
						<argument><expr><operator pos:line="116" pos:column="49">(<pos:position pos:line="116" pos:column="50"/></operator><name pos:line="116" pos:column="50">task_info_t<pos:position pos:line="116" pos:column="61"/></name><operator pos:line="116" pos:column="61">)<pos:position pos:line="116" pos:column="62"/></operator> <operator pos:line="116" pos:column="63">&amp;<pos:position pos:line="116" pos:column="68"/></operator><name pos:line="116" pos:column="64">task_absolutetime_info<pos:position pos:line="116" pos:column="86"/></name></expr></argument>,
						<argument><expr><operator pos:line="117" pos:column="49">&amp;<pos:position pos:line="117" pos:column="54"/></operator><name pos:line="117" pos:column="50">task_absolutetime_info_len<pos:position pos:line="117" pos:column="76"/></name></expr></argument>)<pos:position pos:line="117" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="78"/></expr_stmt>
				<if pos:line="118" pos:column="33">if <condition pos:line="118" pos:column="36">(<expr><name pos:line="118" pos:column="37">status<pos:position pos:line="118" pos:column="43"/></name> <operator pos:line="118" pos:column="44">!=<pos:position pos:line="118" pos:column="46"/></operator> <name pos:line="118" pos:column="47">KERN_SUCCESS<pos:position pos:line="118" pos:column="59"/></name></expr>)<pos:position pos:line="118" pos:column="60"/></condition><then pos:line="118" pos:column="60">
				<block pos:line="119" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="120" pos:column="41">ERROR<pos:position pos:line="120" pos:column="46"/></name> <argument_list pos:line="120" pos:column="47">(<argument><expr><literal type="string" pos:line="120" pos:column="48">"task_info failed: %s"<pos:position pos:line="120" pos:column="70"/></literal></expr></argument>,
							<argument><expr><call><name pos:line="121" pos:column="57">mach_error_string<pos:position pos:line="121" pos:column="74"/></name> <argument_list pos:line="121" pos:column="75">(<argument><expr><name pos:line="121" pos:column="76">status<pos:position pos:line="121" pos:column="82"/></name></expr></argument>)<pos:position pos:line="121" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="85"/></expr_stmt>
					<continue pos:line="122" pos:column="41">continue;<pos:position pos:line="122" pos:column="50"/></continue> <comment type="block" pos:line="122" pos:column="51">/* with next thread_list */</comment>
				}<pos:position pos:line="123" pos:column="34"/></block></then></if>

				<expr_stmt><expr><name><name pos:line="125" pos:column="33">pse<pos:position pos:line="125" pos:column="36"/></name><operator pos:line="125" pos:column="36">.<pos:position pos:line="125" pos:column="37"/></operator><name pos:line="125" pos:column="37">num_proc<pos:position pos:line="125" pos:column="45"/></name></name><operator pos:line="125" pos:column="45">++<pos:position pos:line="125" pos:column="47"/></operator></expr>;<pos:position pos:line="125" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="126" pos:column="33">pse<pos:position pos:line="126" pos:column="36"/></name><operator pos:line="126" pos:column="36">.<pos:position pos:line="126" pos:column="37"/></operator><name pos:line="126" pos:column="37">vmem_size<pos:position pos:line="126" pos:column="46"/></name></name> <operator pos:line="126" pos:column="47">=<pos:position pos:line="126" pos:column="48"/></operator> <name><name pos:line="126" pos:column="49">task_basic_info<pos:position pos:line="126" pos:column="64"/></name><operator pos:line="126" pos:column="64">.<pos:position pos:line="126" pos:column="65"/></operator><name pos:line="126" pos:column="65">virtual_size<pos:position pos:line="126" pos:column="77"/></name></name></expr>;<pos:position pos:line="126" pos:column="78"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="127" pos:column="33">pse<pos:position pos:line="127" pos:column="36"/></name><operator pos:line="127" pos:column="36">.<pos:position pos:line="127" pos:column="37"/></operator><name pos:line="127" pos:column="37">vmem_rss<pos:position pos:line="127" pos:column="45"/></name></name> <operator pos:line="127" pos:column="46">=<pos:position pos:line="127" pos:column="47"/></operator> <name><name pos:line="127" pos:column="48">task_basic_info<pos:position pos:line="127" pos:column="63"/></name><operator pos:line="127" pos:column="63">.<pos:position pos:line="127" pos:column="64"/></operator><name pos:line="127" pos:column="64">resident_size<pos:position pos:line="127" pos:column="77"/></name></name></expr>;<pos:position pos:line="127" pos:column="78"/></expr_stmt>
				<comment type="block" pos:line="128" pos:column="33">/* Does not seem to be easily exposed */</comment>
				<expr_stmt><expr><name><name pos:line="129" pos:column="33">pse<pos:position pos:line="129" pos:column="36"/></name><operator pos:line="129" pos:column="36">.<pos:position pos:line="129" pos:column="37"/></operator><name pos:line="129" pos:column="37">vmem_data<pos:position pos:line="129" pos:column="46"/></name></name> <operator pos:line="129" pos:column="47">=<pos:position pos:line="129" pos:column="48"/></operator> <literal type="number" pos:line="129" pos:column="49">0<pos:position pos:line="129" pos:column="50"/></literal></expr>;<pos:position pos:line="129" pos:column="51"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="130" pos:column="33">pse<pos:position pos:line="130" pos:column="36"/></name><operator pos:line="130" pos:column="36">.<pos:position pos:line="130" pos:column="37"/></operator><name pos:line="130" pos:column="37">vmem_code<pos:position pos:line="130" pos:column="46"/></name></name> <operator pos:line="130" pos:column="47">=<pos:position pos:line="130" pos:column="48"/></operator> <literal type="number" pos:line="130" pos:column="49">0<pos:position pos:line="130" pos:column="50"/></literal></expr>;<pos:position pos:line="130" pos:column="51"/></expr_stmt>

				<expr_stmt><expr><name><name pos:line="132" pos:column="33">pse<pos:position pos:line="132" pos:column="36"/></name><operator pos:line="132" pos:column="36">.<pos:position pos:line="132" pos:column="37"/></operator><name pos:line="132" pos:column="37">vmem_minflt_counter<pos:position pos:line="132" pos:column="56"/></name></name> <operator pos:line="132" pos:column="57">=<pos:position pos:line="132" pos:column="58"/></operator> <name><name pos:line="132" pos:column="59">task_events_info<pos:position pos:line="132" pos:column="75"/></name><operator pos:line="132" pos:column="75">.<pos:position pos:line="132" pos:column="76"/></operator><name pos:line="132" pos:column="76">cow_faults<pos:position pos:line="132" pos:column="86"/></name></name></expr>;<pos:position pos:line="132" pos:column="87"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="133" pos:column="33">pse<pos:position pos:line="133" pos:column="36"/></name><operator pos:line="133" pos:column="36">.<pos:position pos:line="133" pos:column="37"/></operator><name pos:line="133" pos:column="37">vmem_majflt_counter<pos:position pos:line="133" pos:column="56"/></name></name> <operator pos:line="133" pos:column="57">=<pos:position pos:line="133" pos:column="58"/></operator> <name><name pos:line="133" pos:column="59">task_events_info<pos:position pos:line="133" pos:column="75"/></name><operator pos:line="133" pos:column="75">.<pos:position pos:line="133" pos:column="76"/></operator><name pos:line="133" pos:column="76">faults<pos:position pos:line="133" pos:column="82"/></name></name></expr>;<pos:position pos:line="133" pos:column="83"/></expr_stmt>

				<expr_stmt><expr><name><name pos:line="135" pos:column="33">pse<pos:position pos:line="135" pos:column="36"/></name><operator pos:line="135" pos:column="36">.<pos:position pos:line="135" pos:column="37"/></operator><name pos:line="135" pos:column="37">cpu_user_counter<pos:position pos:line="135" pos:column="53"/></name></name> <operator pos:line="135" pos:column="54">=<pos:position pos:line="135" pos:column="55"/></operator> <name><name pos:line="135" pos:column="56">task_absolutetime_info<pos:position pos:line="135" pos:column="78"/></name><operator pos:line="135" pos:column="78">.<pos:position pos:line="135" pos:column="79"/></operator><name pos:line="135" pos:column="79">total_user<pos:position pos:line="135" pos:column="89"/></name></name></expr>;<pos:position pos:line="135" pos:column="90"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="136" pos:column="33">pse<pos:position pos:line="136" pos:column="36"/></name><operator pos:line="136" pos:column="36">.<pos:position pos:line="136" pos:column="37"/></operator><name pos:line="136" pos:column="37">cpu_system_counter<pos:position pos:line="136" pos:column="55"/></name></name> <operator pos:line="136" pos:column="56">=<pos:position pos:line="136" pos:column="57"/></operator> <name><name pos:line="136" pos:column="58">task_absolutetime_info<pos:position pos:line="136" pos:column="80"/></name><operator pos:line="136" pos:column="80">.<pos:position pos:line="136" pos:column="81"/></operator><name pos:line="136" pos:column="81">total_system<pos:position pos:line="136" pos:column="93"/></name></name></expr>;<pos:position pos:line="136" pos:column="94"/></expr_stmt>
			}<pos:position pos:line="137" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="139" pos:column="25">status<pos:position pos:line="139" pos:column="31"/></name> <operator pos:line="139" pos:column="32">=<pos:position pos:line="139" pos:column="33"/></operator> <call><name pos:line="139" pos:column="34">task_threads<pos:position pos:line="139" pos:column="46"/></name> <argument_list pos:line="139" pos:column="47">(<argument><expr><name><name pos:line="139" pos:column="48">task_list<pos:position pos:line="139" pos:column="57"/></name><index pos:line="139" pos:column="57">[<expr><name pos:line="139" pos:column="58">task<pos:position pos:line="139" pos:column="62"/></name></expr>]<pos:position pos:line="139" pos:column="63"/></index></name></expr></argument>, <argument><expr><operator pos:line="139" pos:column="65">&amp;<pos:position pos:line="139" pos:column="70"/></operator><name pos:line="139" pos:column="66">thread_list<pos:position pos:line="139" pos:column="77"/></name></expr></argument>,
					<argument><expr><operator pos:line="140" pos:column="41">&amp;<pos:position pos:line="140" pos:column="46"/></operator><name pos:line="140" pos:column="42">thread_list_len<pos:position pos:line="140" pos:column="57"/></name></expr></argument>)<pos:position pos:line="140" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="59"/></expr_stmt>
			<if pos:line="141" pos:column="25">if <condition pos:line="141" pos:column="28">(<expr><name pos:line="141" pos:column="29">status<pos:position pos:line="141" pos:column="35"/></name> <operator pos:line="141" pos:column="36">!=<pos:position pos:line="141" pos:column="38"/></operator> <name pos:line="141" pos:column="39">KERN_SUCCESS<pos:position pos:line="141" pos:column="51"/></name></expr>)<pos:position pos:line="141" pos:column="52"/></condition><then pos:line="141" pos:column="52">
			<block pos:line="142" pos:column="25">{
				<comment type="block" pos:line="143" pos:column="33">/* Apple's `top' treats this case a zombie. It
				 * makes sense to some extend: A `zombie'
				 * thread is nonsense, since the task/process
				 * is dead. */</comment>
				<expr_stmt><expr><name pos:line="147" pos:column="33">zombies<pos:position pos:line="147" pos:column="40"/></name><operator pos:line="147" pos:column="40">++<pos:position pos:line="147" pos:column="42"/></operator></expr>;<pos:position pos:line="147" pos:column="43"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="148" pos:column="33">DEBUG<pos:position pos:line="148" pos:column="38"/></name> <argument_list pos:line="148" pos:column="39">(<argument><expr><literal type="string" pos:line="148" pos:column="40">"task_threads failed: %s"<pos:position pos:line="148" pos:column="65"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="149" pos:column="49">mach_error_string<pos:position pos:line="149" pos:column="66"/></name> <argument_list pos:line="149" pos:column="67">(<argument><expr><name pos:line="149" pos:column="68">status<pos:position pos:line="149" pos:column="74"/></name></expr></argument>)<pos:position pos:line="149" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="149" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="77"/></expr_stmt>
				<if pos:line="150" pos:column="33">if <condition pos:line="150" pos:column="36">(<expr><name><name pos:line="150" pos:column="37">task_list<pos:position pos:line="150" pos:column="46"/></name><index pos:line="150" pos:column="46">[<expr><name pos:line="150" pos:column="47">task<pos:position pos:line="150" pos:column="51"/></name></expr>]<pos:position pos:line="150" pos:column="52"/></index></name> <operator pos:line="150" pos:column="53">!=<pos:position pos:line="150" pos:column="55"/></operator> <name pos:line="150" pos:column="56">port_task_self<pos:position pos:line="150" pos:column="70"/></name></expr>)<pos:position pos:line="150" pos:column="71"/></condition><then pos:line="150" pos:column="71">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="151" pos:column="41">mach_port_deallocate<pos:position pos:line="151" pos:column="61"/></name> <argument_list pos:line="151" pos:column="62">(<argument><expr><name pos:line="151" pos:column="63">port_task_self<pos:position pos:line="151" pos:column="77"/></name></expr></argument>,
							<argument><expr><name><name pos:line="152" pos:column="57">task_list<pos:position pos:line="152" pos:column="66"/></name><index pos:line="152" pos:column="66">[<expr><name pos:line="152" pos:column="67">task<pos:position pos:line="152" pos:column="71"/></name></expr>]<pos:position pos:line="152" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="152" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="74"/></expr_stmt></block></then></if>
				<continue pos:line="153" pos:column="33">continue;<pos:position pos:line="153" pos:column="42"/></continue> <comment type="block" pos:line="153" pos:column="43">/* with next task_list */</comment>
			}<pos:position pos:line="154" pos:column="26"/></block></then></if>

			<for pos:line="156" pos:column="25">for <control pos:line="156" pos:column="29">(<init><expr><name pos:line="156" pos:column="30">thread<pos:position pos:line="156" pos:column="36"/></name> <operator pos:line="156" pos:column="37">=<pos:position pos:line="156" pos:column="38"/></operator> <literal type="number" pos:line="156" pos:column="39">0<pos:position pos:line="156" pos:column="40"/></literal></expr>;<pos:position pos:line="156" pos:column="41"/></init> <condition><expr><name pos:line="156" pos:column="42">thread<pos:position pos:line="156" pos:column="48"/></name> <operator pos:line="156" pos:column="49">&lt;<pos:position pos:line="156" pos:column="53"/></operator> <name pos:line="156" pos:column="51">thread_list_len<pos:position pos:line="156" pos:column="66"/></name></expr>;<pos:position pos:line="156" pos:column="67"/></condition> <incr><expr><name pos:line="156" pos:column="68">thread<pos:position pos:line="156" pos:column="74"/></name><operator pos:line="156" pos:column="74">++<pos:position pos:line="156" pos:column="76"/></operator></expr></incr>)<pos:position pos:line="156" pos:column="77"/></control>
			<block pos:line="157" pos:column="25">{
				<expr_stmt><expr><name pos:line="158" pos:column="33">thread_data_len<pos:position pos:line="158" pos:column="48"/></name> <operator pos:line="158" pos:column="49">=<pos:position pos:line="158" pos:column="50"/></operator> <name pos:line="158" pos:column="51">THREAD_BASIC_INFO_COUNT<pos:position pos:line="158" pos:column="74"/></name></expr>;<pos:position pos:line="158" pos:column="75"/></expr_stmt>
				<expr_stmt><expr><name pos:line="159" pos:column="33">status<pos:position pos:line="159" pos:column="39"/></name> <operator pos:line="159" pos:column="40">=<pos:position pos:line="159" pos:column="41"/></operator> <call><name pos:line="159" pos:column="42">thread_info<pos:position pos:line="159" pos:column="53"/></name> <argument_list pos:line="159" pos:column="54">(<argument><expr><name><name pos:line="159" pos:column="55">thread_list<pos:position pos:line="159" pos:column="66"/></name><index pos:line="159" pos:column="66">[<expr><name pos:line="159" pos:column="67">thread<pos:position pos:line="159" pos:column="73"/></name></expr>]<pos:position pos:line="159" pos:column="74"/></index></name></expr></argument>,
						<argument><expr><name pos:line="160" pos:column="49">THREAD_BASIC_INFO<pos:position pos:line="160" pos:column="66"/></name></expr></argument>,
						<argument><expr><operator pos:line="161" pos:column="49">(<pos:position pos:line="161" pos:column="50"/></operator><name pos:line="161" pos:column="50">thread_info_t<pos:position pos:line="161" pos:column="63"/></name><operator pos:line="161" pos:column="63">)<pos:position pos:line="161" pos:column="64"/></operator> <operator pos:line="161" pos:column="65">&amp;<pos:position pos:line="161" pos:column="70"/></operator><name pos:line="161" pos:column="66">thread_data<pos:position pos:line="161" pos:column="77"/></name></expr></argument>,
						<argument><expr><operator pos:line="162" pos:column="49">&amp;<pos:position pos:line="162" pos:column="54"/></operator><name pos:line="162" pos:column="50">thread_data_len<pos:position pos:line="162" pos:column="65"/></name></expr></argument>)<pos:position pos:line="162" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="67"/></expr_stmt>
				<if pos:line="163" pos:column="33">if <condition pos:line="163" pos:column="36">(<expr><name pos:line="163" pos:column="37">status<pos:position pos:line="163" pos:column="43"/></name> <operator pos:line="163" pos:column="44">!=<pos:position pos:line="163" pos:column="46"/></operator> <name pos:line="163" pos:column="47">KERN_SUCCESS<pos:position pos:line="163" pos:column="59"/></name></expr>)<pos:position pos:line="163" pos:column="60"/></condition><then pos:line="163" pos:column="60">
				<block pos:line="164" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="165" pos:column="41">ERROR<pos:position pos:line="165" pos:column="46"/></name> <argument_list pos:line="165" pos:column="47">(<argument><expr><literal type="string" pos:line="165" pos:column="48">"thread_info failed: %s"<pos:position pos:line="165" pos:column="72"/></literal></expr></argument>,
							<argument><expr><call><name pos:line="166" pos:column="57">mach_error_string<pos:position pos:line="166" pos:column="74"/></name> <argument_list pos:line="166" pos:column="75">(<argument><expr><name pos:line="166" pos:column="76">status<pos:position pos:line="166" pos:column="82"/></name></expr></argument>)<pos:position pos:line="166" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="166" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="85"/></expr_stmt>
					<if pos:line="167" pos:column="41">if <condition pos:line="167" pos:column="44">(<expr><name><name pos:line="167" pos:column="45">task_list<pos:position pos:line="167" pos:column="54"/></name><index pos:line="167" pos:column="54">[<expr><name pos:line="167" pos:column="55">task<pos:position pos:line="167" pos:column="59"/></name></expr>]<pos:position pos:line="167" pos:column="60"/></index></name> <operator pos:line="167" pos:column="61">!=<pos:position pos:line="167" pos:column="63"/></operator> <name pos:line="167" pos:column="64">port_task_self<pos:position pos:line="167" pos:column="78"/></name></expr>)<pos:position pos:line="167" pos:column="79"/></condition><then pos:line="167" pos:column="79">
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="168" pos:column="49">mach_port_deallocate<pos:position pos:line="168" pos:column="69"/></name> <argument_list pos:line="168" pos:column="70">(<argument><expr><name pos:line="168" pos:column="71">port_task_self<pos:position pos:line="168" pos:column="85"/></name></expr></argument>,
								<argument><expr><name><name pos:line="169" pos:column="65">thread_list<pos:position pos:line="169" pos:column="76"/></name><index pos:line="169" pos:column="76">[<expr><name pos:line="169" pos:column="77">thread<pos:position pos:line="169" pos:column="83"/></name></expr>]<pos:position pos:line="169" pos:column="84"/></index></name></expr></argument>)<pos:position pos:line="169" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="86"/></expr_stmt></block></then></if>
					<continue pos:line="170" pos:column="41">continue;<pos:position pos:line="170" pos:column="50"/></continue> <comment type="block" pos:line="170" pos:column="51">/* with next thread_list */</comment>
				}<pos:position pos:line="171" pos:column="34"/></block></then></if>

				<if pos:line="173" pos:column="33">if <condition pos:line="173" pos:column="36">(<expr><name pos:line="173" pos:column="37">ps<pos:position pos:line="173" pos:column="39"/></name> <operator pos:line="173" pos:column="40">!=<pos:position pos:line="173" pos:column="42"/></operator> <name pos:line="173" pos:column="43">NULL<pos:position pos:line="173" pos:column="47"/></name></expr>)<pos:position pos:line="173" pos:column="48"/></condition><then pos:line="173" pos:column="48">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="174" pos:column="41">pse<pos:position pos:line="174" pos:column="44"/></name><operator pos:line="174" pos:column="44">.<pos:position pos:line="174" pos:column="45"/></operator><name pos:line="174" pos:column="45">num_lwp<pos:position pos:line="174" pos:column="52"/></name></name><operator pos:line="174" pos:column="52">++<pos:position pos:line="174" pos:column="54"/></operator></expr>;<pos:position pos:line="174" pos:column="55"/></expr_stmt></block></then></if>

				<switch pos:line="176" pos:column="33">switch <condition pos:line="176" pos:column="40">(<expr><name><name pos:line="176" pos:column="41">thread_data<pos:position pos:line="176" pos:column="52"/></name><operator pos:line="176" pos:column="52">.<pos:position pos:line="176" pos:column="53"/></operator><name pos:line="176" pos:column="53">run_state<pos:position pos:line="176" pos:column="62"/></name></name></expr>)<pos:position pos:line="176" pos:column="63"/></condition>
				<block pos:line="177" pos:column="33">{
					<case pos:line="178" pos:column="41">case <expr><name pos:line="178" pos:column="46">TH_STATE_RUNNING<pos:position pos:line="178" pos:column="62"/></name></expr>:<pos:position pos:line="178" pos:column="63"/></case>
						<expr_stmt><expr><name pos:line="179" pos:column="49">running<pos:position pos:line="179" pos:column="56"/></name><operator pos:line="179" pos:column="56">++<pos:position pos:line="179" pos:column="58"/></operator></expr>;<pos:position pos:line="179" pos:column="59"/></expr_stmt>
						<break pos:line="180" pos:column="49">break;<pos:position pos:line="180" pos:column="55"/></break>
					<case pos:line="181" pos:column="41">case <expr><name pos:line="181" pos:column="46">TH_STATE_STOPPED<pos:position pos:line="181" pos:column="62"/></name></expr>:<pos:position pos:line="181" pos:column="63"/></case>
					<comment type="block" pos:line="182" pos:column="41">/* What exactly is `halted'? */</comment>
					<case pos:line="183" pos:column="41">case <expr><name pos:line="183" pos:column="46">TH_STATE_HALTED<pos:position pos:line="183" pos:column="61"/></name></expr>:<pos:position pos:line="183" pos:column="62"/></case>
						<expr_stmt><expr><name pos:line="184" pos:column="49">stopped<pos:position pos:line="184" pos:column="56"/></name><operator pos:line="184" pos:column="56">++<pos:position pos:line="184" pos:column="58"/></operator></expr>;<pos:position pos:line="184" pos:column="59"/></expr_stmt>
						<break pos:line="185" pos:column="49">break;<pos:position pos:line="185" pos:column="55"/></break>
					<case pos:line="186" pos:column="41">case <expr><name pos:line="186" pos:column="46">TH_STATE_WAITING<pos:position pos:line="186" pos:column="62"/></name></expr>:<pos:position pos:line="186" pos:column="63"/></case>
						<expr_stmt><expr><name pos:line="187" pos:column="49">sleeping<pos:position pos:line="187" pos:column="57"/></name><operator pos:line="187" pos:column="57">++<pos:position pos:line="187" pos:column="59"/></operator></expr>;<pos:position pos:line="187" pos:column="60"/></expr_stmt>
						<break pos:line="188" pos:column="49">break;<pos:position pos:line="188" pos:column="55"/></break>
					<case pos:line="189" pos:column="41">case <expr><name pos:line="189" pos:column="46">TH_STATE_UNINTERRUPTIBLE<pos:position pos:line="189" pos:column="70"/></name></expr>:<pos:position pos:line="189" pos:column="71"/></case>
						<expr_stmt><expr><name pos:line="190" pos:column="49">blocked<pos:position pos:line="190" pos:column="56"/></name><operator pos:line="190" pos:column="56">++<pos:position pos:line="190" pos:column="58"/></operator></expr>;<pos:position pos:line="190" pos:column="59"/></expr_stmt>
						<break pos:line="191" pos:column="49">break;<pos:position pos:line="191" pos:column="55"/></break>
					<comment type="block" pos:line="192" pos:column="41">/* There is no `zombie' case here,
					 * since there are no zombie-threads.
					 * There's only zombie tasks, which are
					 * handled above. */</comment>
					<default pos:line="196" pos:column="41">default:<pos:position pos:line="196" pos:column="49"/></default>
						<expr_stmt><expr><call><name pos:line="197" pos:column="49">WARNING<pos:position pos:line="197" pos:column="56"/></name> <argument_list pos:line="197" pos:column="57">(<argument><expr><literal type="string" pos:line="197" pos:column="58">"Unknown thread status: %i"<pos:position pos:line="197" pos:column="85"/></literal></expr></argument>,
								<argument><expr><name><name pos:line="198" pos:column="65">thread_data<pos:position pos:line="198" pos:column="76"/></name><operator pos:line="198" pos:column="76">.<pos:position pos:line="198" pos:column="77"/></operator><name pos:line="198" pos:column="77">run_state<pos:position pos:line="198" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="198" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="88"/></expr_stmt>
						<break pos:line="199" pos:column="49">break;<pos:position pos:line="199" pos:column="55"/></break>
				}<pos:position pos:line="200" pos:column="34"/></block></switch> <comment type="block" pos:line="200" pos:column="35">/* switch (thread_data.run_state) */</comment>

				<if pos:line="202" pos:column="33">if <condition pos:line="202" pos:column="36">(<expr><name><name pos:line="202" pos:column="37">task_list<pos:position pos:line="202" pos:column="46"/></name><index pos:line="202" pos:column="46">[<expr><name pos:line="202" pos:column="47">task<pos:position pos:line="202" pos:column="51"/></name></expr>]<pos:position pos:line="202" pos:column="52"/></index></name> <operator pos:line="202" pos:column="53">!=<pos:position pos:line="202" pos:column="55"/></operator> <name pos:line="202" pos:column="56">port_task_self<pos:position pos:line="202" pos:column="70"/></name></expr>)<pos:position pos:line="202" pos:column="71"/></condition><then pos:line="202" pos:column="71">
				<block pos:line="203" pos:column="33">{
					<expr_stmt><expr><name pos:line="204" pos:column="41">status<pos:position pos:line="204" pos:column="47"/></name> <operator pos:line="204" pos:column="48">=<pos:position pos:line="204" pos:column="49"/></operator> <call><name pos:line="204" pos:column="50">mach_port_deallocate<pos:position pos:line="204" pos:column="70"/></name> <argument_list pos:line="204" pos:column="71">(<argument><expr><name pos:line="204" pos:column="72">port_task_self<pos:position pos:line="204" pos:column="86"/></name></expr></argument>,
							<argument><expr><name><name pos:line="205" pos:column="57">thread_list<pos:position pos:line="205" pos:column="68"/></name><index pos:line="205" pos:column="68">[<expr><name pos:line="205" pos:column="69">thread<pos:position pos:line="205" pos:column="75"/></name></expr>]<pos:position pos:line="205" pos:column="76"/></index></name></expr></argument>)<pos:position pos:line="205" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="78"/></expr_stmt>
					<if pos:line="206" pos:column="41">if <condition pos:line="206" pos:column="44">(<expr><name pos:line="206" pos:column="45">status<pos:position pos:line="206" pos:column="51"/></name> <operator pos:line="206" pos:column="52">!=<pos:position pos:line="206" pos:column="54"/></operator> <name pos:line="206" pos:column="55">KERN_SUCCESS<pos:position pos:line="206" pos:column="67"/></name></expr>)<pos:position pos:line="206" pos:column="68"/></condition><then pos:line="206" pos:column="68">
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="207" pos:column="49">ERROR<pos:position pos:line="207" pos:column="54"/></name> <argument_list pos:line="207" pos:column="55">(<argument><expr><literal type="string" pos:line="207" pos:column="56">"mach_port_deallocate failed: %s"<pos:position pos:line="207" pos:column="89"/></literal></expr></argument>,
								<argument><expr><call><name pos:line="208" pos:column="65">mach_error_string<pos:position pos:line="208" pos:column="82"/></name> <argument_list pos:line="208" pos:column="83">(<argument><expr><name pos:line="208" pos:column="84">status<pos:position pos:line="208" pos:column="90"/></name></expr></argument>)<pos:position pos:line="208" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="208" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="93"/></expr_stmt></block></then></if>
				}<pos:position pos:line="209" pos:column="34"/></block></then></if>
			}<pos:position pos:line="210" pos:column="26"/></block></for> <comment type="block" pos:line="210" pos:column="27">/* for (thread_list) */</comment>

			<if pos:line="212" pos:column="25">if <condition pos:line="212" pos:column="28">(<expr><operator pos:line="212" pos:column="29">(<pos:position pos:line="212" pos:column="30"/></operator><name pos:line="212" pos:column="30">status<pos:position pos:line="212" pos:column="36"/></name> <operator pos:line="212" pos:column="37">=<pos:position pos:line="212" pos:column="38"/></operator> <call><name pos:line="212" pos:column="39">vm_deallocate<pos:position pos:line="212" pos:column="52"/></name> <argument_list pos:line="212" pos:column="53">(<argument><expr><name pos:line="212" pos:column="54">port_task_self<pos:position pos:line="212" pos:column="68"/></name></expr></argument>,
							<argument><expr><operator pos:line="213" pos:column="57">(<pos:position pos:line="213" pos:column="58"/></operator><name pos:line="213" pos:column="58">vm_address_t<pos:position pos:line="213" pos:column="70"/></name><operator pos:line="213" pos:column="70">)<pos:position pos:line="213" pos:column="71"/></operator> <name pos:line="213" pos:column="72">thread_list<pos:position pos:line="213" pos:column="83"/></name></expr></argument>,
							<argument><expr><name pos:line="214" pos:column="57">thread_list_len<pos:position pos:line="214" pos:column="72"/></name> <operator pos:line="214" pos:column="73">*<pos:position pos:line="214" pos:column="74"/></operator> <sizeof pos:line="214" pos:column="75">sizeof <argument_list pos:line="214" pos:column="82">(<argument><expr><name pos:line="214" pos:column="83">thread_act_t<pos:position pos:line="214" pos:column="95"/></name></expr></argument>)<pos:position pos:line="214" pos:column="96"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="214" pos:column="97"/></argument_list></call><operator pos:line="214" pos:column="97">)<pos:position pos:line="214" pos:column="98"/></operator>
					<operator pos:line="215" pos:column="41">!=<pos:position pos:line="215" pos:column="43"/></operator> <name pos:line="215" pos:column="44">KERN_SUCCESS<pos:position pos:line="215" pos:column="56"/></name></expr>)<pos:position pos:line="215" pos:column="57"/></condition><then pos:line="215" pos:column="57">
			<block pos:line="216" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="217" pos:column="33">ERROR<pos:position pos:line="217" pos:column="38"/></name> <argument_list pos:line="217" pos:column="39">(<argument><expr><literal type="string" pos:line="217" pos:column="40">"vm_deallocate failed: %s"<pos:position pos:line="217" pos:column="66"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="218" pos:column="49">mach_error_string<pos:position pos:line="218" pos:column="66"/></name> <argument_list pos:line="218" pos:column="67">(<argument><expr><name pos:line="218" pos:column="68">status<pos:position pos:line="218" pos:column="74"/></name></expr></argument>)<pos:position pos:line="218" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="218" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="77"/></expr_stmt>
			}<pos:position pos:line="219" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="220" pos:column="25">thread_list<pos:position pos:line="220" pos:column="36"/></name> <operator pos:line="220" pos:column="37">=<pos:position pos:line="220" pos:column="38"/></operator> <name pos:line="220" pos:column="39">NULL<pos:position pos:line="220" pos:column="43"/></name></expr>;<pos:position pos:line="220" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="221" pos:column="25">thread_list_len<pos:position pos:line="221" pos:column="40"/></name> <operator pos:line="221" pos:column="41">=<pos:position pos:line="221" pos:column="42"/></operator> <literal type="number" pos:line="221" pos:column="43">0<pos:position pos:line="221" pos:column="44"/></literal></expr>;<pos:position pos:line="221" pos:column="45"/></expr_stmt>

			<comment type="block" pos:line="223" pos:column="25">/* Only deallocate the task port, if it isn't our own.
			 * Don't know what would happen in that case, but this
			 * is what Apple's top does.. ;) */</comment>
			<if pos:line="226" pos:column="25">if <condition pos:line="226" pos:column="28">(<expr><name><name pos:line="226" pos:column="29">task_list<pos:position pos:line="226" pos:column="38"/></name><index pos:line="226" pos:column="38">[<expr><name pos:line="226" pos:column="39">task<pos:position pos:line="226" pos:column="43"/></name></expr>]<pos:position pos:line="226" pos:column="44"/></index></name> <operator pos:line="226" pos:column="45">!=<pos:position pos:line="226" pos:column="47"/></operator> <name pos:line="226" pos:column="48">port_task_self<pos:position pos:line="226" pos:column="62"/></name></expr>)<pos:position pos:line="226" pos:column="63"/></condition><then pos:line="226" pos:column="63">
			<block pos:line="227" pos:column="25">{
				<expr_stmt><expr><name pos:line="228" pos:column="33">status<pos:position pos:line="228" pos:column="39"/></name> <operator pos:line="228" pos:column="40">=<pos:position pos:line="228" pos:column="41"/></operator> <call><name pos:line="228" pos:column="42">mach_port_deallocate<pos:position pos:line="228" pos:column="62"/></name> <argument_list pos:line="228" pos:column="63">(<argument><expr><name pos:line="228" pos:column="64">port_task_self<pos:position pos:line="228" pos:column="78"/></name></expr></argument>,
						<argument><expr><name><name pos:line="229" pos:column="49">task_list<pos:position pos:line="229" pos:column="58"/></name><index pos:line="229" pos:column="58">[<expr><name pos:line="229" pos:column="59">task<pos:position pos:line="229" pos:column="63"/></name></expr>]<pos:position pos:line="229" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="229" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="66"/></expr_stmt>
				<if pos:line="230" pos:column="33">if <condition pos:line="230" pos:column="36">(<expr><name pos:line="230" pos:column="37">status<pos:position pos:line="230" pos:column="43"/></name> <operator pos:line="230" pos:column="44">!=<pos:position pos:line="230" pos:column="46"/></operator> <name pos:line="230" pos:column="47">KERN_SUCCESS<pos:position pos:line="230" pos:column="59"/></name></expr>)<pos:position pos:line="230" pos:column="60"/></condition><then pos:line="230" pos:column="60">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="231" pos:column="41">ERROR<pos:position pos:line="231" pos:column="46"/></name> <argument_list pos:line="231" pos:column="47">(<argument><expr><literal type="string" pos:line="231" pos:column="48">"mach_port_deallocate failed: %s"<pos:position pos:line="231" pos:column="81"/></literal></expr></argument>,
							<argument><expr><call><name pos:line="232" pos:column="57">mach_error_string<pos:position pos:line="232" pos:column="74"/></name> <argument_list pos:line="232" pos:column="75">(<argument><expr><name pos:line="232" pos:column="76">status<pos:position pos:line="232" pos:column="82"/></name></expr></argument>)<pos:position pos:line="232" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="232" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="85"/></expr_stmt></block></then></if>
			}<pos:position pos:line="233" pos:column="26"/></block></then></if>

			<if pos:line="235" pos:column="25">if <condition pos:line="235" pos:column="28">(<expr><name pos:line="235" pos:column="29">ps<pos:position pos:line="235" pos:column="31"/></name> <operator pos:line="235" pos:column="32">!=<pos:position pos:line="235" pos:column="34"/></operator> <name pos:line="235" pos:column="35">NULL<pos:position pos:line="235" pos:column="39"/></name></expr>)<pos:position pos:line="235" pos:column="40"/></condition><then pos:line="235" pos:column="40">
				<comment type="block" pos:line="236" pos:column="33">/* FIXME: cmdline should be here instead of NULL */</comment>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="237" pos:column="33">ps_list_add<pos:position pos:line="237" pos:column="44"/></name> <argument_list pos:line="237" pos:column="45">(<argument><expr><name pos:line="237" pos:column="46">task_name<pos:position pos:line="237" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="57">NULL<pos:position pos:line="237" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="237" pos:column="63">&amp;<pos:position pos:line="237" pos:column="68"/></operator><name pos:line="237" pos:column="64">pse<pos:position pos:line="237" pos:column="67"/></name></expr></argument>)<pos:position pos:line="237" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="69"/></expr_stmt></block></then></if>
		}<pos:position pos:line="238" pos:column="18"/></block></for> <comment type="block" pos:line="238" pos:column="19">/* for (task_list) */</comment>

		<if pos:line="240" pos:column="17">if <condition pos:line="240" pos:column="20">(<expr><operator pos:line="240" pos:column="21">(<pos:position pos:line="240" pos:column="22"/></operator><name pos:line="240" pos:column="22">status<pos:position pos:line="240" pos:column="28"/></name> <operator pos:line="240" pos:column="29">=<pos:position pos:line="240" pos:column="30"/></operator> <call><name pos:line="240" pos:column="31">vm_deallocate<pos:position pos:line="240" pos:column="44"/></name> <argument_list pos:line="240" pos:column="45">(<argument><expr><name pos:line="240" pos:column="46">port_task_self<pos:position pos:line="240" pos:column="60"/></name></expr></argument>,
				<argument><expr><operator pos:line="241" pos:column="33">(<pos:position pos:line="241" pos:column="34"/></operator><name pos:line="241" pos:column="34">vm_address_t<pos:position pos:line="241" pos:column="46"/></name><operator pos:line="241" pos:column="46">)<pos:position pos:line="241" pos:column="47"/></operator> <name pos:line="241" pos:column="48">task_list<pos:position pos:line="241" pos:column="57"/></name></expr></argument>,
				<argument><expr><name pos:line="242" pos:column="33">task_list_len<pos:position pos:line="242" pos:column="46"/></name> <operator pos:line="242" pos:column="47">*<pos:position pos:line="242" pos:column="48"/></operator> <sizeof pos:line="242" pos:column="49">sizeof <argument_list pos:line="242" pos:column="56">(<argument><expr><name pos:line="242" pos:column="57">task_t<pos:position pos:line="242" pos:column="63"/></name></expr></argument>)<pos:position pos:line="242" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="242" pos:column="65"/></argument_list></call><operator pos:line="242" pos:column="65">)<pos:position pos:line="242" pos:column="66"/></operator> <operator pos:line="242" pos:column="67">!=<pos:position pos:line="242" pos:column="69"/></operator> <name pos:line="242" pos:column="70">KERN_SUCCESS<pos:position pos:line="242" pos:column="82"/></name></expr>)<pos:position pos:line="242" pos:column="83"/></condition><then pos:line="242" pos:column="83">
		<block pos:line="243" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="244" pos:column="25">ERROR<pos:position pos:line="244" pos:column="30"/></name> <argument_list pos:line="244" pos:column="31">(<argument><expr><literal type="string" pos:line="244" pos:column="32">"vm_deallocate failed: %s"<pos:position pos:line="244" pos:column="58"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="245" pos:column="41">mach_error_string<pos:position pos:line="245" pos:column="58"/></name> <argument_list pos:line="245" pos:column="59">(<argument><expr><name pos:line="245" pos:column="60">status<pos:position pos:line="245" pos:column="66"/></name></expr></argument>)<pos:position pos:line="245" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="245" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="246" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="247" pos:column="17">task_list<pos:position pos:line="247" pos:column="26"/></name> <operator pos:line="247" pos:column="27">=<pos:position pos:line="247" pos:column="28"/></operator> <name pos:line="247" pos:column="29">NULL<pos:position pos:line="247" pos:column="33"/></name></expr>;<pos:position pos:line="247" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="248" pos:column="17">task_list_len<pos:position pos:line="248" pos:column="30"/></name> <operator pos:line="248" pos:column="31">=<pos:position pos:line="248" pos:column="32"/></operator> <literal type="number" pos:line="248" pos:column="33">0<pos:position pos:line="248" pos:column="34"/></literal></expr>;<pos:position pos:line="248" pos:column="35"/></expr_stmt>

		<if pos:line="250" pos:column="17">if <condition pos:line="250" pos:column="20">(<expr><operator pos:line="250" pos:column="21">(<pos:position pos:line="250" pos:column="22"/></operator><name pos:line="250" pos:column="22">status<pos:position pos:line="250" pos:column="28"/></name> <operator pos:line="250" pos:column="29">=<pos:position pos:line="250" pos:column="30"/></operator> <call><name pos:line="250" pos:column="31">mach_port_deallocate<pos:position pos:line="250" pos:column="51"/></name> <argument_list pos:line="250" pos:column="52">(<argument><expr><name pos:line="250" pos:column="53">port_task_self<pos:position pos:line="250" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="69">port_pset_priv<pos:position pos:line="250" pos:column="83"/></name></expr></argument>)<pos:position pos:line="250" pos:column="84"/></argument_list></call><operator pos:line="250" pos:column="84">)<pos:position pos:line="250" pos:column="85"/></operator>
				<operator pos:line="251" pos:column="33">!=<pos:position pos:line="251" pos:column="35"/></operator> <name pos:line="251" pos:column="36">KERN_SUCCESS<pos:position pos:line="251" pos:column="48"/></name></expr>)<pos:position pos:line="251" pos:column="49"/></condition><then pos:line="251" pos:column="49">
		<block pos:line="252" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="253" pos:column="25">ERROR<pos:position pos:line="253" pos:column="30"/></name> <argument_list pos:line="253" pos:column="31">(<argument><expr><literal type="string" pos:line="253" pos:column="32">"mach_port_deallocate failed: %s"<pos:position pos:line="253" pos:column="65"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="254" pos:column="41">mach_error_string<pos:position pos:line="254" pos:column="58"/></name> <argument_list pos:line="254" pos:column="59">(<argument><expr><name pos:line="254" pos:column="60">status<pos:position pos:line="254" pos:column="66"/></name></expr></argument>)<pos:position pos:line="254" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="254" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="255" pos:column="18"/></block></then></if>
	}<pos:position pos:line="256" pos:column="10"/></block></for> <comment type="block" pos:line="256" pos:column="11">/* for (pset_list) */</comment>

	<expr_stmt><expr><call><name pos:line="258" pos:column="9">ps_submit_state<pos:position pos:line="258" pos:column="24"/></name> <argument_list pos:line="258" pos:column="25">(<argument><expr><literal type="string" pos:line="258" pos:column="26">"running"<pos:position pos:line="258" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="258" pos:column="37">running<pos:position pos:line="258" pos:column="44"/></name></expr></argument>)<pos:position pos:line="258" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="259" pos:column="9">ps_submit_state<pos:position pos:line="259" pos:column="24"/></name> <argument_list pos:line="259" pos:column="25">(<argument><expr><literal type="string" pos:line="259" pos:column="26">"sleeping"<pos:position pos:line="259" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="259" pos:column="38">sleeping<pos:position pos:line="259" pos:column="46"/></name></expr></argument>)<pos:position pos:line="259" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="260" pos:column="9">ps_submit_state<pos:position pos:line="260" pos:column="24"/></name> <argument_list pos:line="260" pos:column="25">(<argument><expr><literal type="string" pos:line="260" pos:column="26">"zombies"<pos:position pos:line="260" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="260" pos:column="37">zombies<pos:position pos:line="260" pos:column="44"/></name></expr></argument>)<pos:position pos:line="260" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="261" pos:column="9">ps_submit_state<pos:position pos:line="261" pos:column="24"/></name> <argument_list pos:line="261" pos:column="25">(<argument><expr><literal type="string" pos:line="261" pos:column="26">"stopped"<pos:position pos:line="261" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="261" pos:column="37">stopped<pos:position pos:line="261" pos:column="44"/></name></expr></argument>)<pos:position pos:line="261" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="262" pos:column="9">ps_submit_state<pos:position pos:line="262" pos:column="24"/></name> <argument_list pos:line="262" pos:column="25">(<argument><expr><literal type="string" pos:line="262" pos:column="26">"blocked"<pos:position pos:line="262" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="262" pos:column="37">blocked<pos:position pos:line="262" pos:column="44"/></name></expr></argument>)<pos:position pos:line="262" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="46"/></expr_stmt>

	<for pos:line="264" pos:column="9">for <control pos:line="264" pos:column="13">(<init><expr><name pos:line="264" pos:column="14">ps<pos:position pos:line="264" pos:column="16"/></name> <operator pos:line="264" pos:column="17">=<pos:position pos:line="264" pos:column="18"/></operator> <name pos:line="264" pos:column="19">list_head_g<pos:position pos:line="264" pos:column="30"/></name></expr>;<pos:position pos:line="264" pos:column="31"/></init> <condition><expr><name pos:line="264" pos:column="32">ps<pos:position pos:line="264" pos:column="34"/></name> <operator pos:line="264" pos:column="35">!=<pos:position pos:line="264" pos:column="37"/></operator> <name pos:line="264" pos:column="38">NULL<pos:position pos:line="264" pos:column="42"/></name></expr>;<pos:position pos:line="264" pos:column="43"/></condition> <incr><expr><name pos:line="264" pos:column="44">ps<pos:position pos:line="264" pos:column="46"/></name> <operator pos:line="264" pos:column="47">=<pos:position pos:line="264" pos:column="48"/></operator> <name><name pos:line="264" pos:column="49">ps<pos:position pos:line="264" pos:column="51"/></name><operator pos:line="264" pos:column="51">-&gt;<pos:position pos:line="264" pos:column="56"/></operator><name pos:line="264" pos:column="53">next<pos:position pos:line="264" pos:column="57"/></name></name></expr></incr>)<pos:position pos:line="264" pos:column="58"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="265" pos:column="17">ps_submit_proc_list<pos:position pos:line="265" pos:column="36"/></name> <argument_list pos:line="265" pos:column="37">(<argument><expr><name pos:line="265" pos:column="38">ps<pos:position pos:line="265" pos:column="40"/></name></expr></argument>)<pos:position pos:line="265" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="42"/></expr_stmt></block></for>
<comment type="block" pos:line="266" pos:column="1">/* #endif HAVE_THREAD_INFO */</comment>

<cpp:elif pos:line="268" pos:column="1">#<cpp:directive pos:line="268" pos:column="2">elif<pos:position pos:line="268" pos:column="6"/></cpp:directive> <expr><name pos:line="268" pos:column="7">KERNEL_LINUX<pos:position pos:line="268" pos:column="19"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="269" pos:column="9">int<pos:position pos:line="269" pos:column="12"/></name></type> <name pos:line="269" pos:column="13">running<pos:position pos:line="269" pos:column="20"/></name>  <init pos:line="269" pos:column="22">= <expr><literal type="number" pos:line="269" pos:column="24">0<pos:position pos:line="269" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="269" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="270" pos:column="9">int<pos:position pos:line="270" pos:column="12"/></name></type> <name pos:line="270" pos:column="13">sleeping<pos:position pos:line="270" pos:column="21"/></name> <init pos:line="270" pos:column="22">= <expr><literal type="number" pos:line="270" pos:column="24">0<pos:position pos:line="270" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="270" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="271" pos:column="9">int<pos:position pos:line="271" pos:column="12"/></name></type> <name pos:line="271" pos:column="13">zombies<pos:position pos:line="271" pos:column="20"/></name>  <init pos:line="271" pos:column="22">= <expr><literal type="number" pos:line="271" pos:column="24">0<pos:position pos:line="271" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="271" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="272" pos:column="9">int<pos:position pos:line="272" pos:column="12"/></name></type> <name pos:line="272" pos:column="13">stopped<pos:position pos:line="272" pos:column="20"/></name>  <init pos:line="272" pos:column="22">= <expr><literal type="number" pos:line="272" pos:column="24">0<pos:position pos:line="272" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="272" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="273" pos:column="9">int<pos:position pos:line="273" pos:column="12"/></name></type> <name pos:line="273" pos:column="13">paging<pos:position pos:line="273" pos:column="19"/></name>   <init pos:line="273" pos:column="22">= <expr><literal type="number" pos:line="273" pos:column="24">0<pos:position pos:line="273" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="273" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="274" pos:column="9">int<pos:position pos:line="274" pos:column="12"/></name></type> <name pos:line="274" pos:column="13">blocked<pos:position pos:line="274" pos:column="20"/></name>  <init pos:line="274" pos:column="22">= <expr><literal type="number" pos:line="274" pos:column="24">0<pos:position pos:line="274" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="274" pos:column="26"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="276" pos:column="9">struct<pos:position pos:line="276" pos:column="15"/></name> <name pos:line="276" pos:column="16">dirent<pos:position pos:line="276" pos:column="22"/></name></name> <modifier pos:line="276" pos:column="23">*<pos:position pos:line="276" pos:column="24"/></modifier></type><name pos:line="276" pos:column="24">ent<pos:position pos:line="276" pos:column="27"/></name></decl>;<pos:position pos:line="276" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="277" pos:column="9">DIR<pos:position pos:line="277" pos:column="12"/></name>           <modifier pos:line="277" pos:column="23">*<pos:position pos:line="277" pos:column="24"/></modifier></type><name pos:line="277" pos:column="24">proc<pos:position pos:line="277" pos:column="28"/></name></decl>;<pos:position pos:line="277" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="278" pos:column="9">int<pos:position pos:line="278" pos:column="12"/></name></type>            <name pos:line="278" pos:column="24">pid<pos:position pos:line="278" pos:column="27"/></name></decl>;<pos:position pos:line="278" pos:column="28"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="280" pos:column="9">char<pos:position pos:line="280" pos:column="13"/></name></type> <name><name pos:line="280" pos:column="14">cmdline<pos:position pos:line="280" pos:column="21"/></name><index pos:line="280" pos:column="21">[<expr><name pos:line="280" pos:column="22">ARG_MAX<pos:position pos:line="280" pos:column="29"/></name></expr>]<pos:position pos:line="280" pos:column="30"/></index></name></decl>;<pos:position pos:line="280" pos:column="31"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="282" pos:column="9">int<pos:position pos:line="282" pos:column="12"/></name></type>        <name pos:line="282" pos:column="20">status<pos:position pos:line="282" pos:column="26"/></name></decl>;<pos:position pos:line="282" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="283" pos:column="9">procstat_t<pos:position pos:line="283" pos:column="19"/></name></type> <name pos:line="283" pos:column="20">ps<pos:position pos:line="283" pos:column="22"/></name></decl>;<pos:position pos:line="283" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="284" pos:column="9">procstat_entry_t<pos:position pos:line="284" pos:column="25"/></name></type> <name pos:line="284" pos:column="26">pse<pos:position pos:line="284" pos:column="29"/></name></decl>;<pos:position pos:line="284" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="285" pos:column="9">char<pos:position pos:line="285" pos:column="13"/></name></type>       <name pos:line="285" pos:column="20">state<pos:position pos:line="285" pos:column="25"/></name></decl>;<pos:position pos:line="285" pos:column="26"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="287" pos:column="9">unsigned<pos:position pos:line="287" pos:column="17"/></name> <name pos:line="287" pos:column="18">long<pos:position pos:line="287" pos:column="22"/></name></type> <name pos:line="287" pos:column="23">fork_rate<pos:position pos:line="287" pos:column="32"/></name></decl>;<pos:position pos:line="287" pos:column="33"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="289" pos:column="9">procstat_t<pos:position pos:line="289" pos:column="19"/></name> <modifier pos:line="289" pos:column="20">*<pos:position pos:line="289" pos:column="21"/></modifier></type><name pos:line="289" pos:column="21">ps_ptr<pos:position pos:line="289" pos:column="27"/></name></decl>;<pos:position pos:line="289" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><name pos:line="291" pos:column="9">running<pos:position pos:line="291" pos:column="16"/></name> <operator pos:line="291" pos:column="17">=<pos:position pos:line="291" pos:column="18"/></operator> <name pos:line="291" pos:column="19">sleeping<pos:position pos:line="291" pos:column="27"/></name> <operator pos:line="291" pos:column="28">=<pos:position pos:line="291" pos:column="29"/></operator> <name pos:line="291" pos:column="30">zombies<pos:position pos:line="291" pos:column="37"/></name> <operator pos:line="291" pos:column="38">=<pos:position pos:line="291" pos:column="39"/></operator> <name pos:line="291" pos:column="40">stopped<pos:position pos:line="291" pos:column="47"/></name> <operator pos:line="291" pos:column="48">=<pos:position pos:line="291" pos:column="49"/></operator> <name pos:line="291" pos:column="50">paging<pos:position pos:line="291" pos:column="56"/></name> <operator pos:line="291" pos:column="57">=<pos:position pos:line="291" pos:column="58"/></operator> <name pos:line="291" pos:column="59">blocked<pos:position pos:line="291" pos:column="66"/></name> <operator pos:line="291" pos:column="67">=<pos:position pos:line="291" pos:column="68"/></operator> <literal type="number" pos:line="291" pos:column="69">0<pos:position pos:line="291" pos:column="70"/></literal></expr>;<pos:position pos:line="291" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="292" pos:column="9">ps_list_reset<pos:position pos:line="292" pos:column="22"/></name> <argument_list pos:line="292" pos:column="23">()<pos:position pos:line="292" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="26"/></expr_stmt>

	<if pos:line="294" pos:column="9">if <condition pos:line="294" pos:column="12">(<expr><operator pos:line="294" pos:column="13">(<pos:position pos:line="294" pos:column="14"/></operator><name pos:line="294" pos:column="14">proc<pos:position pos:line="294" pos:column="18"/></name> <operator pos:line="294" pos:column="19">=<pos:position pos:line="294" pos:column="20"/></operator> <call><name pos:line="294" pos:column="21">opendir<pos:position pos:line="294" pos:column="28"/></name> <argument_list pos:line="294" pos:column="29">(<argument><expr><literal type="string" pos:line="294" pos:column="30">"/proc"<pos:position pos:line="294" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="294" pos:column="38"/></argument_list></call><operator pos:line="294" pos:column="38">)<pos:position pos:line="294" pos:column="39"/></operator> <operator pos:line="294" pos:column="40">==<pos:position pos:line="294" pos:column="42"/></operator> <name pos:line="294" pos:column="43">NULL<pos:position pos:line="294" pos:column="47"/></name></expr>)<pos:position pos:line="294" pos:column="48"/></condition><then pos:line="294" pos:column="48">
	<block pos:line="295" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="296" pos:column="17">char<pos:position pos:line="296" pos:column="21"/></name></type> <name><name pos:line="296" pos:column="22">errbuf<pos:position pos:line="296" pos:column="28"/></name><index pos:line="296" pos:column="28">[<expr><literal type="number" pos:line="296" pos:column="29">1024<pos:position pos:line="296" pos:column="33"/></literal></expr>]<pos:position pos:line="296" pos:column="34"/></index></name></decl>;<pos:position pos:line="296" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="297" pos:column="17">ERROR<pos:position pos:line="297" pos:column="22"/></name> <argument_list pos:line="297" pos:column="23">(<argument><expr><literal type="string" pos:line="297" pos:column="24">"Cannot open `/proc': %s"<pos:position pos:line="297" pos:column="49"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="298" pos:column="33">sstrerror<pos:position pos:line="298" pos:column="42"/></name> <argument_list pos:line="298" pos:column="43">(<argument><expr><name pos:line="298" pos:column="44">errno<pos:position pos:line="298" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="298" pos:column="51">errbuf<pos:position pos:line="298" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="298" pos:column="59">sizeof <argument_list pos:line="298" pos:column="66">(<argument><expr><name pos:line="298" pos:column="67">errbuf<pos:position pos:line="298" pos:column="73"/></name></expr></argument>)<pos:position pos:line="298" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="298" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="298" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="77"/></expr_stmt>
		<return pos:line="299" pos:column="17">return <expr><operator pos:line="299" pos:column="24">(<pos:position pos:line="299" pos:column="25"/></operator><operator pos:line="299" pos:column="25">-<pos:position pos:line="299" pos:column="26"/></operator><literal type="number" pos:line="299" pos:column="26">1<pos:position pos:line="299" pos:column="27"/></literal><operator pos:line="299" pos:column="27">)<pos:position pos:line="299" pos:column="28"/></operator></expr>;<pos:position pos:line="299" pos:column="29"/></return>
	}<pos:position pos:line="300" pos:column="10"/></block></then></if>

	<while pos:line="302" pos:column="9">while <condition pos:line="302" pos:column="15">(<expr><operator pos:line="302" pos:column="16">(<pos:position pos:line="302" pos:column="17"/></operator><name pos:line="302" pos:column="17">ent<pos:position pos:line="302" pos:column="20"/></name> <operator pos:line="302" pos:column="21">=<pos:position pos:line="302" pos:column="22"/></operator> <call><name pos:line="302" pos:column="23">readdir<pos:position pos:line="302" pos:column="30"/></name> <argument_list pos:line="302" pos:column="31">(<argument><expr><name pos:line="302" pos:column="32">proc<pos:position pos:line="302" pos:column="36"/></name></expr></argument>)<pos:position pos:line="302" pos:column="37"/></argument_list></call><operator pos:line="302" pos:column="37">)<pos:position pos:line="302" pos:column="38"/></operator> <operator pos:line="302" pos:column="39">!=<pos:position pos:line="302" pos:column="41"/></operator> <name pos:line="302" pos:column="42">NULL<pos:position pos:line="302" pos:column="46"/></name></expr>)<pos:position pos:line="302" pos:column="47"/></condition>
	<block pos:line="303" pos:column="9">{
		<if pos:line="304" pos:column="17">if <condition pos:line="304" pos:column="20">(<expr><operator pos:line="304" pos:column="21">!<pos:position pos:line="304" pos:column="22"/></operator><call><name pos:line="304" pos:column="22">isdigit<pos:position pos:line="304" pos:column="29"/></name> <argument_list pos:line="304" pos:column="30">(<argument><expr><name><name pos:line="304" pos:column="31">ent<pos:position pos:line="304" pos:column="34"/></name><operator pos:line="304" pos:column="34">-&gt;<pos:position pos:line="304" pos:column="39"/></operator><name pos:line="304" pos:column="36">d_name<pos:position pos:line="304" pos:column="42"/></name><index pos:line="304" pos:column="42">[<expr><literal type="number" pos:line="304" pos:column="43">0<pos:position pos:line="304" pos:column="44"/></literal></expr>]<pos:position pos:line="304" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="304" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="304" pos:column="47"/></condition><then pos:line="304" pos:column="47">
			<block type="pseudo"><continue pos:line="305" pos:column="25">continue;<pos:position pos:line="305" pos:column="34"/></continue></block></then></if>

		<if pos:line="307" pos:column="17">if <condition pos:line="307" pos:column="20">(<expr><operator pos:line="307" pos:column="21">(<pos:position pos:line="307" pos:column="22"/></operator><name pos:line="307" pos:column="22">pid<pos:position pos:line="307" pos:column="25"/></name> <operator pos:line="307" pos:column="26">=<pos:position pos:line="307" pos:column="27"/></operator> <call><name pos:line="307" pos:column="28">atoi<pos:position pos:line="307" pos:column="32"/></name> <argument_list pos:line="307" pos:column="33">(<argument><expr><name><name pos:line="307" pos:column="34">ent<pos:position pos:line="307" pos:column="37"/></name><operator pos:line="307" pos:column="37">-&gt;<pos:position pos:line="307" pos:column="42"/></operator><name pos:line="307" pos:column="39">d_name<pos:position pos:line="307" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="307" pos:column="46"/></argument_list></call><operator pos:line="307" pos:column="46">)<pos:position pos:line="307" pos:column="47"/></operator> <operator pos:line="307" pos:column="48">&lt;<pos:position pos:line="307" pos:column="52"/></operator> <literal type="number" pos:line="307" pos:column="50">1<pos:position pos:line="307" pos:column="51"/></literal></expr>)<pos:position pos:line="307" pos:column="52"/></condition><then pos:line="307" pos:column="52">
			<block type="pseudo"><continue pos:line="308" pos:column="25">continue;<pos:position pos:line="308" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="310" pos:column="17">status<pos:position pos:line="310" pos:column="23"/></name> <operator pos:line="310" pos:column="24">=<pos:position pos:line="310" pos:column="25"/></operator> <call><name pos:line="310" pos:column="26">ps_read_process<pos:position pos:line="310" pos:column="41"/></name> <argument_list pos:line="310" pos:column="42">(<argument><expr><name pos:line="310" pos:column="43">pid<pos:position pos:line="310" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="310" pos:column="48">&amp;<pos:position pos:line="310" pos:column="53"/></operator><name pos:line="310" pos:column="49">ps<pos:position pos:line="310" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="310" pos:column="53">&amp;<pos:position pos:line="310" pos:column="58"/></operator><name pos:line="310" pos:column="54">state<pos:position pos:line="310" pos:column="59"/></name></expr></argument>)<pos:position pos:line="310" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="61"/></expr_stmt>
		<if pos:line="311" pos:column="17">if <condition pos:line="311" pos:column="20">(<expr><name pos:line="311" pos:column="21">status<pos:position pos:line="311" pos:column="27"/></name> <operator pos:line="311" pos:column="28">!=<pos:position pos:line="311" pos:column="30"/></operator> <literal type="number" pos:line="311" pos:column="31">0<pos:position pos:line="311" pos:column="32"/></literal></expr>)<pos:position pos:line="311" pos:column="33"/></condition><then pos:line="311" pos:column="33">
		<block pos:line="312" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="313" pos:column="25">DEBUG<pos:position pos:line="313" pos:column="30"/></name> <argument_list pos:line="313" pos:column="31">(<argument><expr><literal type="string" pos:line="313" pos:column="32">"ps_read_process failed: %i"<pos:position pos:line="313" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="313" pos:column="62">status<pos:position pos:line="313" pos:column="68"/></name></expr></argument>)<pos:position pos:line="313" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="70"/></expr_stmt>
			<continue pos:line="314" pos:column="25">continue;<pos:position pos:line="314" pos:column="34"/></continue>
		}<pos:position pos:line="315" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="317" pos:column="17">pse<pos:position pos:line="317" pos:column="20"/></name><operator pos:line="317" pos:column="20">.<pos:position pos:line="317" pos:column="21"/></operator><name pos:line="317" pos:column="21">id<pos:position pos:line="317" pos:column="23"/></name></name>       <operator pos:line="317" pos:column="30">=<pos:position pos:line="317" pos:column="31"/></operator> <name pos:line="317" pos:column="32">pid<pos:position pos:line="317" pos:column="35"/></name></expr>;<pos:position pos:line="317" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="318" pos:column="17">pse<pos:position pos:line="318" pos:column="20"/></name><operator pos:line="318" pos:column="20">.<pos:position pos:line="318" pos:column="21"/></operator><name pos:line="318" pos:column="21">age<pos:position pos:line="318" pos:column="24"/></name></name>      <operator pos:line="318" pos:column="30">=<pos:position pos:line="318" pos:column="31"/></operator> <literal type="number" pos:line="318" pos:column="32">0<pos:position pos:line="318" pos:column="33"/></literal></expr>;<pos:position pos:line="318" pos:column="34"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="320" pos:column="17">pse<pos:position pos:line="320" pos:column="20"/></name><operator pos:line="320" pos:column="20">.<pos:position pos:line="320" pos:column="21"/></operator><name pos:line="320" pos:column="21">num_proc<pos:position pos:line="320" pos:column="29"/></name></name>   <operator pos:line="320" pos:column="32">=<pos:position pos:line="320" pos:column="33"/></operator> <name><name pos:line="320" pos:column="34">ps<pos:position pos:line="320" pos:column="36"/></name><operator pos:line="320" pos:column="36">.<pos:position pos:line="320" pos:column="37"/></operator><name pos:line="320" pos:column="37">num_proc<pos:position pos:line="320" pos:column="45"/></name></name></expr>;<pos:position pos:line="320" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="321" pos:column="17">pse<pos:position pos:line="321" pos:column="20"/></name><operator pos:line="321" pos:column="20">.<pos:position pos:line="321" pos:column="21"/></operator><name pos:line="321" pos:column="21">num_lwp<pos:position pos:line="321" pos:column="28"/></name></name>    <operator pos:line="321" pos:column="32">=<pos:position pos:line="321" pos:column="33"/></operator> <name><name pos:line="321" pos:column="34">ps<pos:position pos:line="321" pos:column="36"/></name><operator pos:line="321" pos:column="36">.<pos:position pos:line="321" pos:column="37"/></operator><name pos:line="321" pos:column="37">num_lwp<pos:position pos:line="321" pos:column="44"/></name></name></expr>;<pos:position pos:line="321" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="322" pos:column="17">pse<pos:position pos:line="322" pos:column="20"/></name><operator pos:line="322" pos:column="20">.<pos:position pos:line="322" pos:column="21"/></operator><name pos:line="322" pos:column="21">vmem_size<pos:position pos:line="322" pos:column="30"/></name></name>  <operator pos:line="322" pos:column="32">=<pos:position pos:line="322" pos:column="33"/></operator> <name><name pos:line="322" pos:column="34">ps<pos:position pos:line="322" pos:column="36"/></name><operator pos:line="322" pos:column="36">.<pos:position pos:line="322" pos:column="37"/></operator><name pos:line="322" pos:column="37">vmem_size<pos:position pos:line="322" pos:column="46"/></name></name></expr>;<pos:position pos:line="322" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="323" pos:column="17">pse<pos:position pos:line="323" pos:column="20"/></name><operator pos:line="323" pos:column="20">.<pos:position pos:line="323" pos:column="21"/></operator><name pos:line="323" pos:column="21">vmem_rss<pos:position pos:line="323" pos:column="29"/></name></name>   <operator pos:line="323" pos:column="32">=<pos:position pos:line="323" pos:column="33"/></operator> <name><name pos:line="323" pos:column="34">ps<pos:position pos:line="323" pos:column="36"/></name><operator pos:line="323" pos:column="36">.<pos:position pos:line="323" pos:column="37"/></operator><name pos:line="323" pos:column="37">vmem_rss<pos:position pos:line="323" pos:column="45"/></name></name></expr>;<pos:position pos:line="323" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="324" pos:column="17">pse<pos:position pos:line="324" pos:column="20"/></name><operator pos:line="324" pos:column="20">.<pos:position pos:line="324" pos:column="21"/></operator><name pos:line="324" pos:column="21">vmem_data<pos:position pos:line="324" pos:column="30"/></name></name>  <operator pos:line="324" pos:column="32">=<pos:position pos:line="324" pos:column="33"/></operator> <name><name pos:line="324" pos:column="34">ps<pos:position pos:line="324" pos:column="36"/></name><operator pos:line="324" pos:column="36">.<pos:position pos:line="324" pos:column="37"/></operator><name pos:line="324" pos:column="37">vmem_data<pos:position pos:line="324" pos:column="46"/></name></name></expr>;<pos:position pos:line="324" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="325" pos:column="17">pse<pos:position pos:line="325" pos:column="20"/></name><operator pos:line="325" pos:column="20">.<pos:position pos:line="325" pos:column="21"/></operator><name pos:line="325" pos:column="21">vmem_code<pos:position pos:line="325" pos:column="30"/></name></name>  <operator pos:line="325" pos:column="32">=<pos:position pos:line="325" pos:column="33"/></operator> <name><name pos:line="325" pos:column="34">ps<pos:position pos:line="325" pos:column="36"/></name><operator pos:line="325" pos:column="36">.<pos:position pos:line="325" pos:column="37"/></operator><name pos:line="325" pos:column="37">vmem_code<pos:position pos:line="325" pos:column="46"/></name></name></expr>;<pos:position pos:line="325" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="326" pos:column="17">pse<pos:position pos:line="326" pos:column="20"/></name><operator pos:line="326" pos:column="20">.<pos:position pos:line="326" pos:column="21"/></operator><name pos:line="326" pos:column="21">stack_size<pos:position pos:line="326" pos:column="31"/></name></name> <operator pos:line="326" pos:column="32">=<pos:position pos:line="326" pos:column="33"/></operator> <name><name pos:line="326" pos:column="34">ps<pos:position pos:line="326" pos:column="36"/></name><operator pos:line="326" pos:column="36">.<pos:position pos:line="326" pos:column="37"/></operator><name pos:line="326" pos:column="37">stack_size<pos:position pos:line="326" pos:column="47"/></name></name></expr>;<pos:position pos:line="326" pos:column="48"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="328" pos:column="17">pse<pos:position pos:line="328" pos:column="20"/></name><operator pos:line="328" pos:column="20">.<pos:position pos:line="328" pos:column="21"/></operator><name pos:line="328" pos:column="21">vmem_minflt<pos:position pos:line="328" pos:column="32"/></name></name> <operator pos:line="328" pos:column="33">=<pos:position pos:line="328" pos:column="34"/></operator> <literal type="number" pos:line="328" pos:column="35">0<pos:position pos:line="328" pos:column="36"/></literal></expr>;<pos:position pos:line="328" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="329" pos:column="17">pse<pos:position pos:line="329" pos:column="20"/></name><operator pos:line="329" pos:column="20">.<pos:position pos:line="329" pos:column="21"/></operator><name pos:line="329" pos:column="21">vmem_minflt_counter<pos:position pos:line="329" pos:column="40"/></name></name> <operator pos:line="329" pos:column="41">=<pos:position pos:line="329" pos:column="42"/></operator> <name><name pos:line="329" pos:column="43">ps<pos:position pos:line="329" pos:column="45"/></name><operator pos:line="329" pos:column="45">.<pos:position pos:line="329" pos:column="46"/></operator><name pos:line="329" pos:column="46">vmem_minflt_counter<pos:position pos:line="329" pos:column="65"/></name></name></expr>;<pos:position pos:line="329" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="330" pos:column="17">pse<pos:position pos:line="330" pos:column="20"/></name><operator pos:line="330" pos:column="20">.<pos:position pos:line="330" pos:column="21"/></operator><name pos:line="330" pos:column="21">vmem_majflt<pos:position pos:line="330" pos:column="32"/></name></name> <operator pos:line="330" pos:column="33">=<pos:position pos:line="330" pos:column="34"/></operator> <literal type="number" pos:line="330" pos:column="35">0<pos:position pos:line="330" pos:column="36"/></literal></expr>;<pos:position pos:line="330" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="331" pos:column="17">pse<pos:position pos:line="331" pos:column="20"/></name><operator pos:line="331" pos:column="20">.<pos:position pos:line="331" pos:column="21"/></operator><name pos:line="331" pos:column="21">vmem_majflt_counter<pos:position pos:line="331" pos:column="40"/></name></name> <operator pos:line="331" pos:column="41">=<pos:position pos:line="331" pos:column="42"/></operator> <name><name pos:line="331" pos:column="43">ps<pos:position pos:line="331" pos:column="45"/></name><operator pos:line="331" pos:column="45">.<pos:position pos:line="331" pos:column="46"/></operator><name pos:line="331" pos:column="46">vmem_majflt_counter<pos:position pos:line="331" pos:column="65"/></name></name></expr>;<pos:position pos:line="331" pos:column="66"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="333" pos:column="17">pse<pos:position pos:line="333" pos:column="20"/></name><operator pos:line="333" pos:column="20">.<pos:position pos:line="333" pos:column="21"/></operator><name pos:line="333" pos:column="21">cpu_user<pos:position pos:line="333" pos:column="29"/></name></name> <operator pos:line="333" pos:column="30">=<pos:position pos:line="333" pos:column="31"/></operator> <literal type="number" pos:line="333" pos:column="32">0<pos:position pos:line="333" pos:column="33"/></literal></expr>;<pos:position pos:line="333" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="334" pos:column="17">pse<pos:position pos:line="334" pos:column="20"/></name><operator pos:line="334" pos:column="20">.<pos:position pos:line="334" pos:column="21"/></operator><name pos:line="334" pos:column="21">cpu_user_counter<pos:position pos:line="334" pos:column="37"/></name></name> <operator pos:line="334" pos:column="38">=<pos:position pos:line="334" pos:column="39"/></operator> <name><name pos:line="334" pos:column="40">ps<pos:position pos:line="334" pos:column="42"/></name><operator pos:line="334" pos:column="42">.<pos:position pos:line="334" pos:column="43"/></operator><name pos:line="334" pos:column="43">cpu_user_counter<pos:position pos:line="334" pos:column="59"/></name></name></expr>;<pos:position pos:line="334" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="335" pos:column="17">pse<pos:position pos:line="335" pos:column="20"/></name><operator pos:line="335" pos:column="20">.<pos:position pos:line="335" pos:column="21"/></operator><name pos:line="335" pos:column="21">cpu_system<pos:position pos:line="335" pos:column="31"/></name></name> <operator pos:line="335" pos:column="32">=<pos:position pos:line="335" pos:column="33"/></operator> <literal type="number" pos:line="335" pos:column="34">0<pos:position pos:line="335" pos:column="35"/></literal></expr>;<pos:position pos:line="335" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="336" pos:column="17">pse<pos:position pos:line="336" pos:column="20"/></name><operator pos:line="336" pos:column="20">.<pos:position pos:line="336" pos:column="21"/></operator><name pos:line="336" pos:column="21">cpu_system_counter<pos:position pos:line="336" pos:column="39"/></name></name> <operator pos:line="336" pos:column="40">=<pos:position pos:line="336" pos:column="41"/></operator> <name><name pos:line="336" pos:column="42">ps<pos:position pos:line="336" pos:column="44"/></name><operator pos:line="336" pos:column="44">.<pos:position pos:line="336" pos:column="45"/></operator><name pos:line="336" pos:column="45">cpu_system_counter<pos:position pos:line="336" pos:column="63"/></name></name></expr>;<pos:position pos:line="336" pos:column="64"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="338" pos:column="17">pse<pos:position pos:line="338" pos:column="20"/></name><operator pos:line="338" pos:column="20">.<pos:position pos:line="338" pos:column="21"/></operator><name pos:line="338" pos:column="21">io_rchar<pos:position pos:line="338" pos:column="29"/></name></name> <operator pos:line="338" pos:column="30">=<pos:position pos:line="338" pos:column="31"/></operator> <name><name pos:line="338" pos:column="32">ps<pos:position pos:line="338" pos:column="34"/></name><operator pos:line="338" pos:column="34">.<pos:position pos:line="338" pos:column="35"/></operator><name pos:line="338" pos:column="35">io_rchar<pos:position pos:line="338" pos:column="43"/></name></name></expr>;<pos:position pos:line="338" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="339" pos:column="17">pse<pos:position pos:line="339" pos:column="20"/></name><operator pos:line="339" pos:column="20">.<pos:position pos:line="339" pos:column="21"/></operator><name pos:line="339" pos:column="21">io_wchar<pos:position pos:line="339" pos:column="29"/></name></name> <operator pos:line="339" pos:column="30">=<pos:position pos:line="339" pos:column="31"/></operator> <name><name pos:line="339" pos:column="32">ps<pos:position pos:line="339" pos:column="34"/></name><operator pos:line="339" pos:column="34">.<pos:position pos:line="339" pos:column="35"/></operator><name pos:line="339" pos:column="35">io_wchar<pos:position pos:line="339" pos:column="43"/></name></name></expr>;<pos:position pos:line="339" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="340" pos:column="17">pse<pos:position pos:line="340" pos:column="20"/></name><operator pos:line="340" pos:column="20">.<pos:position pos:line="340" pos:column="21"/></operator><name pos:line="340" pos:column="21">io_syscr<pos:position pos:line="340" pos:column="29"/></name></name> <operator pos:line="340" pos:column="30">=<pos:position pos:line="340" pos:column="31"/></operator> <name><name pos:line="340" pos:column="32">ps<pos:position pos:line="340" pos:column="34"/></name><operator pos:line="340" pos:column="34">.<pos:position pos:line="340" pos:column="35"/></operator><name pos:line="340" pos:column="35">io_syscr<pos:position pos:line="340" pos:column="43"/></name></name></expr>;<pos:position pos:line="340" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="341" pos:column="17">pse<pos:position pos:line="341" pos:column="20"/></name><operator pos:line="341" pos:column="20">.<pos:position pos:line="341" pos:column="21"/></operator><name pos:line="341" pos:column="21">io_syscw<pos:position pos:line="341" pos:column="29"/></name></name> <operator pos:line="341" pos:column="30">=<pos:position pos:line="341" pos:column="31"/></operator> <name><name pos:line="341" pos:column="32">ps<pos:position pos:line="341" pos:column="34"/></name><operator pos:line="341" pos:column="34">.<pos:position pos:line="341" pos:column="35"/></operator><name pos:line="341" pos:column="35">io_syscw<pos:position pos:line="341" pos:column="43"/></name></name></expr>;<pos:position pos:line="341" pos:column="44"/></expr_stmt>

		<switch pos:line="343" pos:column="17">switch <condition pos:line="343" pos:column="24">(<expr><name pos:line="343" pos:column="25">state<pos:position pos:line="343" pos:column="30"/></name></expr>)<pos:position pos:line="343" pos:column="31"/></condition>
		<block pos:line="344" pos:column="17">{
			<case pos:line="345" pos:column="25">case <expr><literal type="char" pos:line="345" pos:column="30">'R'<pos:position pos:line="345" pos:column="33"/></literal></expr>:<pos:position pos:line="345" pos:column="34"/></case> <expr_stmt><expr><name pos:line="345" pos:column="35">running<pos:position pos:line="345" pos:column="42"/></name><operator pos:line="345" pos:column="42">++<pos:position pos:line="345" pos:column="44"/></operator></expr>;<pos:position pos:line="345" pos:column="45"/></expr_stmt>  <break pos:line="345" pos:column="47">break;<pos:position pos:line="345" pos:column="53"/></break>
			<case pos:line="346" pos:column="25">case <expr><literal type="char" pos:line="346" pos:column="30">'S'<pos:position pos:line="346" pos:column="33"/></literal></expr>:<pos:position pos:line="346" pos:column="34"/></case> <expr_stmt><expr><name pos:line="346" pos:column="35">sleeping<pos:position pos:line="346" pos:column="43"/></name><operator pos:line="346" pos:column="43">++<pos:position pos:line="346" pos:column="45"/></operator></expr>;<pos:position pos:line="346" pos:column="46"/></expr_stmt> <break pos:line="346" pos:column="47">break;<pos:position pos:line="346" pos:column="53"/></break>
			<case pos:line="347" pos:column="25">case <expr><literal type="char" pos:line="347" pos:column="30">'D'<pos:position pos:line="347" pos:column="33"/></literal></expr>:<pos:position pos:line="347" pos:column="34"/></case> <expr_stmt><expr><name pos:line="347" pos:column="35">blocked<pos:position pos:line="347" pos:column="42"/></name><operator pos:line="347" pos:column="42">++<pos:position pos:line="347" pos:column="44"/></operator></expr>;<pos:position pos:line="347" pos:column="45"/></expr_stmt>  <break pos:line="347" pos:column="47">break;<pos:position pos:line="347" pos:column="53"/></break>
			<case pos:line="348" pos:column="25">case <expr><literal type="char" pos:line="348" pos:column="30">'Z'<pos:position pos:line="348" pos:column="33"/></literal></expr>:<pos:position pos:line="348" pos:column="34"/></case> <expr_stmt><expr><name pos:line="348" pos:column="35">zombies<pos:position pos:line="348" pos:column="42"/></name><operator pos:line="348" pos:column="42">++<pos:position pos:line="348" pos:column="44"/></operator></expr>;<pos:position pos:line="348" pos:column="45"/></expr_stmt>  <break pos:line="348" pos:column="47">break;<pos:position pos:line="348" pos:column="53"/></break>
			<case pos:line="349" pos:column="25">case <expr><literal type="char" pos:line="349" pos:column="30">'T'<pos:position pos:line="349" pos:column="33"/></literal></expr>:<pos:position pos:line="349" pos:column="34"/></case> <expr_stmt><expr><name pos:line="349" pos:column="35">stopped<pos:position pos:line="349" pos:column="42"/></name><operator pos:line="349" pos:column="42">++<pos:position pos:line="349" pos:column="44"/></operator></expr>;<pos:position pos:line="349" pos:column="45"/></expr_stmt>  <break pos:line="349" pos:column="47">break;<pos:position pos:line="349" pos:column="53"/></break>
			<case pos:line="350" pos:column="25">case <expr><literal type="char" pos:line="350" pos:column="30">'W'<pos:position pos:line="350" pos:column="33"/></literal></expr>:<pos:position pos:line="350" pos:column="34"/></case> <expr_stmt><expr><name pos:line="350" pos:column="35">paging<pos:position pos:line="350" pos:column="41"/></name><operator pos:line="350" pos:column="41">++<pos:position pos:line="350" pos:column="43"/></operator></expr>;<pos:position pos:line="350" pos:column="44"/></expr_stmt>   <break pos:line="350" pos:column="47">break;<pos:position pos:line="350" pos:column="53"/></break>
		}<pos:position pos:line="351" pos:column="18"/></block></switch>

		<expr_stmt><expr><call><name pos:line="353" pos:column="17">ps_list_add<pos:position pos:line="353" pos:column="28"/></name> <argument_list pos:line="353" pos:column="29">(<argument><expr><name><name pos:line="353" pos:column="30">ps<pos:position pos:line="353" pos:column="32"/></name><operator pos:line="353" pos:column="32">.<pos:position pos:line="353" pos:column="33"/></operator><name pos:line="353" pos:column="33">name<pos:position pos:line="353" pos:column="37"/></name></name></expr></argument>,
				<argument><expr><call><name pos:line="354" pos:column="33">ps_get_cmdline<pos:position pos:line="354" pos:column="47"/></name> <argument_list pos:line="354" pos:column="48">(<argument><expr><name pos:line="354" pos:column="49">pid<pos:position pos:line="354" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="354" pos:column="54">ps<pos:position pos:line="354" pos:column="56"/></name><operator pos:line="354" pos:column="56">.<pos:position pos:line="354" pos:column="57"/></operator><name pos:line="354" pos:column="57">name<pos:position pos:line="354" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="354" pos:column="63">cmdline<pos:position pos:line="354" pos:column="70"/></name></expr></argument>, <argument><expr><sizeof pos:line="354" pos:column="72">sizeof <argument_list pos:line="354" pos:column="79">(<argument><expr><name pos:line="354" pos:column="80">cmdline<pos:position pos:line="354" pos:column="87"/></name></expr></argument>)<pos:position pos:line="354" pos:column="88"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="354" pos:column="89"/></argument_list></call></expr></argument>,
				<argument><expr><operator pos:line="355" pos:column="33">&amp;<pos:position pos:line="355" pos:column="38"/></operator><name pos:line="355" pos:column="34">pse<pos:position pos:line="355" pos:column="37"/></name></expr></argument>)<pos:position pos:line="355" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="355" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="356" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="358" pos:column="9">closedir<pos:position pos:line="358" pos:column="17"/></name> <argument_list pos:line="358" pos:column="18">(<argument><expr><name pos:line="358" pos:column="19">proc<pos:position pos:line="358" pos:column="23"/></name></expr></argument>)<pos:position pos:line="358" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="358" pos:column="25"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="360" pos:column="9">ps_submit_state<pos:position pos:line="360" pos:column="24"/></name> <argument_list pos:line="360" pos:column="25">(<argument><expr><literal type="string" pos:line="360" pos:column="26">"running"<pos:position pos:line="360" pos:column="35"/></literal></expr></argument>,  <argument><expr><name pos:line="360" pos:column="38">running<pos:position pos:line="360" pos:column="45"/></name></expr></argument>)<pos:position pos:line="360" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="360" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="361" pos:column="9">ps_submit_state<pos:position pos:line="361" pos:column="24"/></name> <argument_list pos:line="361" pos:column="25">(<argument><expr><literal type="string" pos:line="361" pos:column="26">"sleeping"<pos:position pos:line="361" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="361" pos:column="38">sleeping<pos:position pos:line="361" pos:column="46"/></name></expr></argument>)<pos:position pos:line="361" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="361" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="362" pos:column="9">ps_submit_state<pos:position pos:line="362" pos:column="24"/></name> <argument_list pos:line="362" pos:column="25">(<argument><expr><literal type="string" pos:line="362" pos:column="26">"zombies"<pos:position pos:line="362" pos:column="35"/></literal></expr></argument>,  <argument><expr><name pos:line="362" pos:column="38">zombies<pos:position pos:line="362" pos:column="45"/></name></expr></argument>)<pos:position pos:line="362" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="362" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="363" pos:column="9">ps_submit_state<pos:position pos:line="363" pos:column="24"/></name> <argument_list pos:line="363" pos:column="25">(<argument><expr><literal type="string" pos:line="363" pos:column="26">"stopped"<pos:position pos:line="363" pos:column="35"/></literal></expr></argument>,  <argument><expr><name pos:line="363" pos:column="38">stopped<pos:position pos:line="363" pos:column="45"/></name></expr></argument>)<pos:position pos:line="363" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="363" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="364" pos:column="9">ps_submit_state<pos:position pos:line="364" pos:column="24"/></name> <argument_list pos:line="364" pos:column="25">(<argument><expr><literal type="string" pos:line="364" pos:column="26">"paging"<pos:position pos:line="364" pos:column="34"/></literal></expr></argument>,   <argument><expr><name pos:line="364" pos:column="38">paging<pos:position pos:line="364" pos:column="44"/></name></expr></argument>)<pos:position pos:line="364" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="365" pos:column="9">ps_submit_state<pos:position pos:line="365" pos:column="24"/></name> <argument_list pos:line="365" pos:column="25">(<argument><expr><literal type="string" pos:line="365" pos:column="26">"blocked"<pos:position pos:line="365" pos:column="35"/></literal></expr></argument>,  <argument><expr><name pos:line="365" pos:column="38">blocked<pos:position pos:line="365" pos:column="45"/></name></expr></argument>)<pos:position pos:line="365" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="365" pos:column="47"/></expr_stmt>

	<for pos:line="367" pos:column="9">for <control pos:line="367" pos:column="13">(<init><expr><name pos:line="367" pos:column="14">ps_ptr<pos:position pos:line="367" pos:column="20"/></name> <operator pos:line="367" pos:column="21">=<pos:position pos:line="367" pos:column="22"/></operator> <name pos:line="367" pos:column="23">list_head_g<pos:position pos:line="367" pos:column="34"/></name></expr>;<pos:position pos:line="367" pos:column="35"/></init> <condition><expr><name pos:line="367" pos:column="36">ps_ptr<pos:position pos:line="367" pos:column="42"/></name> <operator pos:line="367" pos:column="43">!=<pos:position pos:line="367" pos:column="45"/></operator> <name pos:line="367" pos:column="46">NULL<pos:position pos:line="367" pos:column="50"/></name></expr>;<pos:position pos:line="367" pos:column="51"/></condition> <incr><expr><name pos:line="367" pos:column="52">ps_ptr<pos:position pos:line="367" pos:column="58"/></name> <operator pos:line="367" pos:column="59">=<pos:position pos:line="367" pos:column="60"/></operator> <name><name pos:line="367" pos:column="61">ps_ptr<pos:position pos:line="367" pos:column="67"/></name><operator pos:line="367" pos:column="67">-&gt;<pos:position pos:line="367" pos:column="72"/></operator><name pos:line="367" pos:column="69">next<pos:position pos:line="367" pos:column="73"/></name></name></expr></incr>)<pos:position pos:line="367" pos:column="74"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="368" pos:column="17">ps_submit_proc_list<pos:position pos:line="368" pos:column="36"/></name> <argument_list pos:line="368" pos:column="37">(<argument><expr><name pos:line="368" pos:column="38">ps_ptr<pos:position pos:line="368" pos:column="44"/></name></expr></argument>)<pos:position pos:line="368" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="368" pos:column="46"/></expr_stmt></block></for>

	<expr_stmt><expr><name pos:line="370" pos:column="9">fork_rate<pos:position pos:line="370" pos:column="18"/></name> <operator pos:line="370" pos:column="19">=<pos:position pos:line="370" pos:column="20"/></operator> <call><name pos:line="370" pos:column="21">read_fork_rate<pos:position pos:line="370" pos:column="35"/></name><argument_list pos:line="370" pos:column="35">()<pos:position pos:line="370" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="370" pos:column="38"/></expr_stmt>
	<if pos:line="371" pos:column="9">if <condition pos:line="371" pos:column="12">(<expr><name pos:line="371" pos:column="13">fork_rate<pos:position pos:line="371" pos:column="22"/></name> <operator pos:line="371" pos:column="23">!=<pos:position pos:line="371" pos:column="25"/></operator> <name pos:line="371" pos:column="26">ULONG_MAX<pos:position pos:line="371" pos:column="35"/></name></expr>)<pos:position pos:line="371" pos:column="36"/></condition><then pos:line="371" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="372" pos:column="17">ps_submit_fork_rate<pos:position pos:line="372" pos:column="36"/></name><argument_list pos:line="372" pos:column="36">(<argument><expr><name pos:line="372" pos:column="37">fork_rate<pos:position pos:line="372" pos:column="46"/></name></expr></argument>)<pos:position pos:line="372" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="48"/></expr_stmt></block></then></if>
<comment type="block" pos:line="373" pos:column="1">/* #endif KERNEL_LINUX */</comment>

<cpp:elif pos:line="375" pos:column="1">#<cpp:directive pos:line="375" pos:column="2">elif<pos:position pos:line="375" pos:column="6"/></cpp:directive> <expr><name pos:line="375" pos:column="7">HAVE_LIBKVM_GETPROCS<pos:position pos:line="375" pos:column="27"/></name> <operator pos:line="375" pos:column="28">&amp;&amp;<pos:position pos:line="375" pos:column="38"/></operator> <name pos:line="375" pos:column="31">HAVE_STRUCT_KINFO_PROC_FREEBSD<pos:position pos:line="375" pos:column="61"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="376" pos:column="9">int<pos:position pos:line="376" pos:column="12"/></name></type> <name pos:line="376" pos:column="13">running<pos:position pos:line="376" pos:column="20"/></name>  <init pos:line="376" pos:column="22">= <expr><literal type="number" pos:line="376" pos:column="24">0<pos:position pos:line="376" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="376" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="377" pos:column="9">int<pos:position pos:line="377" pos:column="12"/></name></type> <name pos:line="377" pos:column="13">sleeping<pos:position pos:line="377" pos:column="21"/></name> <init pos:line="377" pos:column="22">= <expr><literal type="number" pos:line="377" pos:column="24">0<pos:position pos:line="377" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="377" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="378" pos:column="9">int<pos:position pos:line="378" pos:column="12"/></name></type> <name pos:line="378" pos:column="13">zombies<pos:position pos:line="378" pos:column="20"/></name>  <init pos:line="378" pos:column="22">= <expr><literal type="number" pos:line="378" pos:column="24">0<pos:position pos:line="378" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="378" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="379" pos:column="9">int<pos:position pos:line="379" pos:column="12"/></name></type> <name pos:line="379" pos:column="13">stopped<pos:position pos:line="379" pos:column="20"/></name>  <init pos:line="379" pos:column="22">= <expr><literal type="number" pos:line="379" pos:column="24">0<pos:position pos:line="379" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="379" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="380" pos:column="9">int<pos:position pos:line="380" pos:column="12"/></name></type> <name pos:line="380" pos:column="13">blocked<pos:position pos:line="380" pos:column="20"/></name>  <init pos:line="380" pos:column="22">= <expr><literal type="number" pos:line="380" pos:column="24">0<pos:position pos:line="380" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="380" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="381" pos:column="9">int<pos:position pos:line="381" pos:column="12"/></name></type> <name pos:line="381" pos:column="13">idle<pos:position pos:line="381" pos:column="17"/></name>     <init pos:line="381" pos:column="22">= <expr><literal type="number" pos:line="381" pos:column="24">0<pos:position pos:line="381" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="381" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="382" pos:column="9">int<pos:position pos:line="382" pos:column="12"/></name></type> <name pos:line="382" pos:column="13">wait<pos:position pos:line="382" pos:column="17"/></name>     <init pos:line="382" pos:column="22">= <expr><literal type="number" pos:line="382" pos:column="24">0<pos:position pos:line="382" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="382" pos:column="26"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="384" pos:column="9">kvm_t<pos:position pos:line="384" pos:column="14"/></name> <modifier pos:line="384" pos:column="15">*<pos:position pos:line="384" pos:column="16"/></modifier></type><name pos:line="384" pos:column="16">kd<pos:position pos:line="384" pos:column="18"/></name></decl>;<pos:position pos:line="384" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="385" pos:column="9">char<pos:position pos:line="385" pos:column="13"/></name></type> <name><name pos:line="385" pos:column="14">errbuf<pos:position pos:line="385" pos:column="20"/></name><index pos:line="385" pos:column="20">[<expr><literal type="number" pos:line="385" pos:column="21">1024<pos:position pos:line="385" pos:column="25"/></literal></expr>]<pos:position pos:line="385" pos:column="26"/></index></name></decl>;<pos:position pos:line="385" pos:column="27"/></decl_stmt>
  	<decl_stmt><decl><type><name><name pos:line="386" pos:column="9">struct<pos:position pos:line="386" pos:column="15"/></name> <name pos:line="386" pos:column="16">kinfo_proc<pos:position pos:line="386" pos:column="26"/></name></name> <modifier pos:line="386" pos:column="27">*<pos:position pos:line="386" pos:column="28"/></modifier></type><name pos:line="386" pos:column="28">procs<pos:position pos:line="386" pos:column="33"/></name></decl>;<pos:position pos:line="386" pos:column="34"/></decl_stmt>          <comment type="block" pos:line="386" pos:column="44">/* array of processes */</comment>
	<decl_stmt><decl><type><name><name pos:line="387" pos:column="9">struct<pos:position pos:line="387" pos:column="15"/></name> <name pos:line="387" pos:column="16">kinfo_proc<pos:position pos:line="387" pos:column="26"/></name></name> <modifier pos:line="387" pos:column="27">*<pos:position pos:line="387" pos:column="28"/></modifier></type><name pos:line="387" pos:column="28">proc_ptr<pos:position pos:line="387" pos:column="36"/></name> <init pos:line="387" pos:column="37">= <expr><name pos:line="387" pos:column="39">NULL<pos:position pos:line="387" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="387" pos:column="44"/></decl_stmt>
  	<decl_stmt><decl><type><name pos:line="388" pos:column="9">int<pos:position pos:line="388" pos:column="12"/></name></type> <name pos:line="388" pos:column="13">count<pos:position pos:line="388" pos:column="18"/></name></decl>;<pos:position pos:line="388" pos:column="19"/></decl_stmt>                         <comment type="block" pos:line="388" pos:column="44">/* returns number of processes */</comment>
	<decl_stmt><decl><type><name pos:line="389" pos:column="9">int<pos:position pos:line="389" pos:column="12"/></name></type> <name pos:line="389" pos:column="13">i<pos:position pos:line="389" pos:column="14"/></name></decl>;<pos:position pos:line="389" pos:column="15"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="391" pos:column="9">procstat_t<pos:position pos:line="391" pos:column="19"/></name> <modifier pos:line="391" pos:column="20">*<pos:position pos:line="391" pos:column="21"/></modifier></type><name pos:line="391" pos:column="21">ps_ptr<pos:position pos:line="391" pos:column="27"/></name></decl>;<pos:position pos:line="391" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="392" pos:column="9">procstat_entry_t<pos:position pos:line="392" pos:column="25"/></name></type> <name pos:line="392" pos:column="26">pse<pos:position pos:line="392" pos:column="29"/></name></decl>;<pos:position pos:line="392" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="394" pos:column="9">ps_list_reset<pos:position pos:line="394" pos:column="22"/></name> <argument_list pos:line="394" pos:column="23">()<pos:position pos:line="394" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="394" pos:column="26"/></expr_stmt>

	<comment type="block" pos:line="396" pos:column="9">/* Open the kvm interface, get a descriptor */</comment>
	<expr_stmt><expr><name pos:line="397" pos:column="9">kd<pos:position pos:line="397" pos:column="11"/></name> <operator pos:line="397" pos:column="12">=<pos:position pos:line="397" pos:column="13"/></operator> <call><name pos:line="397" pos:column="14">kvm_open<pos:position pos:line="397" pos:column="22"/></name> <argument_list pos:line="397" pos:column="23">(<argument><expr><name pos:line="397" pos:column="24">NULL<pos:position pos:line="397" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="30">NULL<pos:position pos:line="397" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="36">NULL<pos:position pos:line="397" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="397" pos:column="42">0<pos:position pos:line="397" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="397" pos:column="45">errbuf<pos:position pos:line="397" pos:column="51"/></name></expr></argument>)<pos:position pos:line="397" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="53"/></expr_stmt>
	<if pos:line="398" pos:column="9">if <condition pos:line="398" pos:column="12">(<expr><name pos:line="398" pos:column="13">kd<pos:position pos:line="398" pos:column="15"/></name> <operator pos:line="398" pos:column="16">==<pos:position pos:line="398" pos:column="18"/></operator> <name pos:line="398" pos:column="19">NULL<pos:position pos:line="398" pos:column="23"/></name></expr>)<pos:position pos:line="398" pos:column="24"/></condition><then pos:line="398" pos:column="24">
	<block pos:line="399" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="400" pos:column="17">ERROR<pos:position pos:line="400" pos:column="22"/></name> <argument_list pos:line="400" pos:column="23">(<argument><expr><literal type="string" pos:line="400" pos:column="24">"processes plugin: Cannot open kvm interface: %s"<pos:position pos:line="400" pos:column="73"/></literal></expr></argument>,
				<argument><expr><name pos:line="401" pos:column="33">errbuf<pos:position pos:line="401" pos:column="39"/></name></expr></argument>)<pos:position pos:line="401" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="401" pos:column="41"/></expr_stmt>
		<return pos:line="402" pos:column="17">return <expr><operator pos:line="402" pos:column="24">(<pos:position pos:line="402" pos:column="25"/></operator><literal type="number" pos:line="402" pos:column="25">0<pos:position pos:line="402" pos:column="26"/></literal><operator pos:line="402" pos:column="26">)<pos:position pos:line="402" pos:column="27"/></operator></expr>;<pos:position pos:line="402" pos:column="28"/></return>
	}<pos:position pos:line="403" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="405" pos:column="9">/* Get the list of processes. */</comment>
	<expr_stmt><expr><name pos:line="406" pos:column="9">procs<pos:position pos:line="406" pos:column="14"/></name> <operator pos:line="406" pos:column="15">=<pos:position pos:line="406" pos:column="16"/></operator> <call><name pos:line="406" pos:column="17">kvm_getprocs<pos:position pos:line="406" pos:column="29"/></name><argument_list pos:line="406" pos:column="29">(<argument><expr><name pos:line="406" pos:column="30">kd<pos:position pos:line="406" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="406" pos:column="34">KERN_PROC_ALL<pos:position pos:line="406" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="406" pos:column="49">0<pos:position pos:line="406" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="406" pos:column="52">&amp;<pos:position pos:line="406" pos:column="57"/></operator><name pos:line="406" pos:column="53">count<pos:position pos:line="406" pos:column="58"/></name></expr></argument>)<pos:position pos:line="406" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="406" pos:column="60"/></expr_stmt>
	<if pos:line="407" pos:column="9">if <condition pos:line="407" pos:column="12">(<expr><name pos:line="407" pos:column="13">procs<pos:position pos:line="407" pos:column="18"/></name> <operator pos:line="407" pos:column="19">==<pos:position pos:line="407" pos:column="21"/></operator> <name pos:line="407" pos:column="22">NULL<pos:position pos:line="407" pos:column="26"/></name></expr>)<pos:position pos:line="407" pos:column="27"/></condition><then pos:line="407" pos:column="27">
	<block pos:line="408" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="409" pos:column="17">ERROR<pos:position pos:line="409" pos:column="22"/></name> <argument_list pos:line="409" pos:column="23">(<argument><expr><literal type="string" pos:line="409" pos:column="24">"processes plugin: Cannot get kvm processes list: %s"<pos:position pos:line="409" pos:column="77"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="410" pos:column="33">kvm_geterr<pos:position pos:line="410" pos:column="43"/></name><argument_list pos:line="410" pos:column="43">(<argument><expr><name pos:line="410" pos:column="44">kd<pos:position pos:line="410" pos:column="46"/></name></expr></argument>)<pos:position pos:line="410" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="410" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="410" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="411" pos:column="17">kvm_close<pos:position pos:line="411" pos:column="26"/></name> <argument_list pos:line="411" pos:column="27">(<argument><expr><name pos:line="411" pos:column="28">kd<pos:position pos:line="411" pos:column="30"/></name></expr></argument>)<pos:position pos:line="411" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="411" pos:column="32"/></expr_stmt>
		<return pos:line="412" pos:column="17">return <expr><operator pos:line="412" pos:column="24">(<pos:position pos:line="412" pos:column="25"/></operator><literal type="number" pos:line="412" pos:column="25">0<pos:position pos:line="412" pos:column="26"/></literal><operator pos:line="412" pos:column="26">)<pos:position pos:line="412" pos:column="27"/></operator></expr>;<pos:position pos:line="412" pos:column="28"/></return>
	}<pos:position pos:line="413" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="415" pos:column="9">/* Iterate through the processes in kinfo_proc */</comment>
	<for pos:line="416" pos:column="9">for <control pos:line="416" pos:column="13">(<init><expr><name pos:line="416" pos:column="14">i<pos:position pos:line="416" pos:column="15"/></name> <operator pos:line="416" pos:column="16">=<pos:position pos:line="416" pos:column="17"/></operator> <literal type="number" pos:line="416" pos:column="18">0<pos:position pos:line="416" pos:column="19"/></literal></expr>;<pos:position pos:line="416" pos:column="20"/></init> <condition><expr><name pos:line="416" pos:column="21">i<pos:position pos:line="416" pos:column="22"/></name> <operator pos:line="416" pos:column="23">&lt;<pos:position pos:line="416" pos:column="27"/></operator> <name pos:line="416" pos:column="25">count<pos:position pos:line="416" pos:column="30"/></name></expr>;<pos:position pos:line="416" pos:column="31"/></condition> <incr><expr><name pos:line="416" pos:column="32">i<pos:position pos:line="416" pos:column="33"/></name><operator pos:line="416" pos:column="33">++<pos:position pos:line="416" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="416" pos:column="36"/></control>
	<block pos:line="417" pos:column="9">{
		<comment type="block" pos:line="418" pos:column="17">/* Create only one process list entry per _process_, i.e.
		 * filter out threads (duplicate PID entries). */</comment>
		<if pos:line="420" pos:column="17">if <condition pos:line="420" pos:column="20">(<expr><operator pos:line="420" pos:column="21">(<pos:position pos:line="420" pos:column="22"/></operator><name pos:line="420" pos:column="22">proc_ptr<pos:position pos:line="420" pos:column="30"/></name> <operator pos:line="420" pos:column="31">==<pos:position pos:line="420" pos:column="33"/></operator> <name pos:line="420" pos:column="34">NULL<pos:position pos:line="420" pos:column="38"/></name><operator pos:line="420" pos:column="38">)<pos:position pos:line="420" pos:column="39"/></operator> <operator pos:line="420" pos:column="40">||<pos:position pos:line="420" pos:column="42"/></operator> <operator pos:line="420" pos:column="43">(<pos:position pos:line="420" pos:column="44"/></operator><name><name pos:line="420" pos:column="44">proc_ptr<pos:position pos:line="420" pos:column="52"/></name><operator pos:line="420" pos:column="52">-&gt;<pos:position pos:line="420" pos:column="57"/></operator><name pos:line="420" pos:column="54">ki_pid<pos:position pos:line="420" pos:column="60"/></name></name> <operator pos:line="420" pos:column="61">!=<pos:position pos:line="420" pos:column="63"/></operator> <name><name pos:line="420" pos:column="64">procs<pos:position pos:line="420" pos:column="69"/></name><index pos:line="420" pos:column="69">[<expr><name pos:line="420" pos:column="70">i<pos:position pos:line="420" pos:column="71"/></name></expr>]<pos:position pos:line="420" pos:column="72"/></index></name><operator pos:line="420" pos:column="72">.<pos:position pos:line="420" pos:column="73"/></operator><name pos:line="420" pos:column="73">ki_pid<pos:position pos:line="420" pos:column="79"/></name><operator pos:line="420" pos:column="79">)<pos:position pos:line="420" pos:column="80"/></operator></expr>)<pos:position pos:line="420" pos:column="81"/></condition><then pos:line="420" pos:column="81">
		<block pos:line="421" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="422" pos:column="25">char<pos:position pos:line="422" pos:column="29"/></name></type> <name><name pos:line="422" pos:column="30">cmdline<pos:position pos:line="422" pos:column="37"/></name><index pos:line="422" pos:column="37">[<expr><name pos:line="422" pos:column="38">ARG_MAX<pos:position pos:line="422" pos:column="45"/></name></expr>]<pos:position pos:line="422" pos:column="46"/></index></name> <init pos:line="422" pos:column="47">= <expr><literal type="string" pos:line="422" pos:column="49">""<pos:position pos:line="422" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="422" pos:column="52"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="423" pos:column="25">_Bool<pos:position pos:line="423" pos:column="30"/></name></type> <name pos:line="423" pos:column="31">have_cmdline<pos:position pos:line="423" pos:column="43"/></name> <init pos:line="423" pos:column="44">= <expr><literal type="number" pos:line="423" pos:column="46">0<pos:position pos:line="423" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="423" pos:column="48"/></decl_stmt>

			<expr_stmt><expr><name pos:line="425" pos:column="25">proc_ptr<pos:position pos:line="425" pos:column="33"/></name> <operator pos:line="425" pos:column="34">=<pos:position pos:line="425" pos:column="35"/></operator> <operator pos:line="425" pos:column="36">&amp;<pos:position pos:line="425" pos:column="41"/></operator><operator pos:line="425" pos:column="37">(<pos:position pos:line="425" pos:column="38"/></operator><name><name pos:line="425" pos:column="38">procs<pos:position pos:line="425" pos:column="43"/></name><index pos:line="425" pos:column="43">[<expr><name pos:line="425" pos:column="44">i<pos:position pos:line="425" pos:column="45"/></name></expr>]<pos:position pos:line="425" pos:column="46"/></index></name><operator pos:line="425" pos:column="46">)<pos:position pos:line="425" pos:column="47"/></operator></expr>;<pos:position pos:line="425" pos:column="48"/></expr_stmt>
			<comment type="block" pos:line="426" pos:column="25">/* Don't probe system processes and processes without arguments */</comment>
			<if pos:line="427" pos:column="25">if <condition pos:line="427" pos:column="28">(<expr><operator pos:line="427" pos:column="29">(<pos:position pos:line="427" pos:column="30"/></operator><operator pos:line="427" pos:column="30">(<pos:position pos:line="427" pos:column="31"/></operator><name><name pos:line="427" pos:column="31">procs<pos:position pos:line="427" pos:column="36"/></name><index pos:line="427" pos:column="36">[<expr><name pos:line="427" pos:column="37">i<pos:position pos:line="427" pos:column="38"/></name></expr>]<pos:position pos:line="427" pos:column="39"/></index></name><operator pos:line="427" pos:column="39">.<pos:position pos:line="427" pos:column="40"/></operator><name pos:line="427" pos:column="40">ki_flag<pos:position pos:line="427" pos:column="47"/></name> <operator pos:line="427" pos:column="48">&amp;<pos:position pos:line="427" pos:column="53"/></operator> <name pos:line="427" pos:column="50">P_SYSTEM<pos:position pos:line="427" pos:column="58"/></name><operator pos:line="427" pos:column="58">)<pos:position pos:line="427" pos:column="59"/></operator> <operator pos:line="427" pos:column="60">==<pos:position pos:line="427" pos:column="62"/></operator> <literal type="number" pos:line="427" pos:column="63">0<pos:position pos:line="427" pos:column="64"/></literal><operator pos:line="427" pos:column="64">)<pos:position pos:line="427" pos:column="65"/></operator>
					<operator pos:line="428" pos:column="41">&amp;&amp;<pos:position pos:line="428" pos:column="51"/></operator> <operator pos:line="428" pos:column="44">(<pos:position pos:line="428" pos:column="45"/></operator><name><name pos:line="428" pos:column="45">procs<pos:position pos:line="428" pos:column="50"/></name><index pos:line="428" pos:column="50">[<expr><name pos:line="428" pos:column="51">i<pos:position pos:line="428" pos:column="52"/></name></expr>]<pos:position pos:line="428" pos:column="53"/></index></name><operator pos:line="428" pos:column="53">.<pos:position pos:line="428" pos:column="54"/></operator><name pos:line="428" pos:column="54">ki_args<pos:position pos:line="428" pos:column="61"/></name> <operator pos:line="428" pos:column="62">!=<pos:position pos:line="428" pos:column="64"/></operator> <name pos:line="428" pos:column="65">NULL<pos:position pos:line="428" pos:column="69"/></name><operator pos:line="428" pos:column="69">)<pos:position pos:line="428" pos:column="70"/></operator></expr>)<pos:position pos:line="428" pos:column="71"/></condition><then pos:line="428" pos:column="71">
			<block pos:line="429" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="430" pos:column="33">char<pos:position pos:line="430" pos:column="37"/></name> <modifier pos:line="430" pos:column="38">*<pos:position pos:line="430" pos:column="39"/></modifier><modifier pos:line="430" pos:column="39">*<pos:position pos:line="430" pos:column="40"/></modifier></type><name pos:line="430" pos:column="40">argv<pos:position pos:line="430" pos:column="44"/></name></decl>;<pos:position pos:line="430" pos:column="45"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="431" pos:column="33">int<pos:position pos:line="431" pos:column="36"/></name></type> <name pos:line="431" pos:column="37">argc<pos:position pos:line="431" pos:column="41"/></name></decl>;<pos:position pos:line="431" pos:column="42"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="432" pos:column="33">int<pos:position pos:line="432" pos:column="36"/></name></type> <name pos:line="432" pos:column="37">status<pos:position pos:line="432" pos:column="43"/></name></decl>;<pos:position pos:line="432" pos:column="44"/></decl_stmt>

				<comment type="block" pos:line="434" pos:column="33">/* retrieve the arguments */</comment>
				<expr_stmt><expr><name pos:line="435" pos:column="33">argv<pos:position pos:line="435" pos:column="37"/></name> <operator pos:line="435" pos:column="38">=<pos:position pos:line="435" pos:column="39"/></operator> <call><name pos:line="435" pos:column="40">kvm_getargv<pos:position pos:line="435" pos:column="51"/></name> <argument_list pos:line="435" pos:column="52">(<argument><expr><name pos:line="435" pos:column="53">kd<pos:position pos:line="435" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="435" pos:column="57">proc_ptr<pos:position pos:line="435" pos:column="65"/></name></expr></argument>, <comment type="block" pos:line="435" pos:column="67">/* nchr = */</comment> <argument><expr><literal type="number" pos:line="435" pos:column="80">0<pos:position pos:line="435" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="435" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="435" pos:column="83"/></expr_stmt>
				<expr_stmt><expr><name pos:line="436" pos:column="33">argc<pos:position pos:line="436" pos:column="37"/></name> <operator pos:line="436" pos:column="38">=<pos:position pos:line="436" pos:column="39"/></operator> <literal type="number" pos:line="436" pos:column="40">0<pos:position pos:line="436" pos:column="41"/></literal></expr>;<pos:position pos:line="436" pos:column="42"/></expr_stmt>
				<if pos:line="437" pos:column="33">if <condition pos:line="437" pos:column="36">(<expr><operator pos:line="437" pos:column="37">(<pos:position pos:line="437" pos:column="38"/></operator><name pos:line="437" pos:column="38">argv<pos:position pos:line="437" pos:column="42"/></name> <operator pos:line="437" pos:column="43">!=<pos:position pos:line="437" pos:column="45"/></operator> <name pos:line="437" pos:column="46">NULL<pos:position pos:line="437" pos:column="50"/></name><operator pos:line="437" pos:column="50">)<pos:position pos:line="437" pos:column="51"/></operator> <operator pos:line="437" pos:column="52">&amp;&amp;<pos:position pos:line="437" pos:column="62"/></operator> <operator pos:line="437" pos:column="55">(<pos:position pos:line="437" pos:column="56"/></operator><name><name pos:line="437" pos:column="56">argv<pos:position pos:line="437" pos:column="60"/></name><index pos:line="437" pos:column="60">[<expr><literal type="number" pos:line="437" pos:column="61">0<pos:position pos:line="437" pos:column="62"/></literal></expr>]<pos:position pos:line="437" pos:column="63"/></index></name> <operator pos:line="437" pos:column="64">!=<pos:position pos:line="437" pos:column="66"/></operator> <name pos:line="437" pos:column="67">NULL<pos:position pos:line="437" pos:column="71"/></name><operator pos:line="437" pos:column="71">)<pos:position pos:line="437" pos:column="72"/></operator></expr>)<pos:position pos:line="437" pos:column="73"/></condition><then pos:line="437" pos:column="73">
				<block pos:line="438" pos:column="33">{
					<while pos:line="439" pos:column="41">while <condition pos:line="439" pos:column="47">(<expr><name><name pos:line="439" pos:column="48">argv<pos:position pos:line="439" pos:column="52"/></name><index pos:line="439" pos:column="52">[<expr><name pos:line="439" pos:column="53">argc<pos:position pos:line="439" pos:column="57"/></name></expr>]<pos:position pos:line="439" pos:column="58"/></index></name> <operator pos:line="439" pos:column="59">!=<pos:position pos:line="439" pos:column="61"/></operator> <name pos:line="439" pos:column="62">NULL<pos:position pos:line="439" pos:column="66"/></name></expr>)<pos:position pos:line="439" pos:column="67"/></condition>
						<block type="pseudo"><expr_stmt><expr><name pos:line="440" pos:column="49">argc<pos:position pos:line="440" pos:column="53"/></name><operator pos:line="440" pos:column="53">++<pos:position pos:line="440" pos:column="55"/></operator></expr>;<pos:position pos:line="440" pos:column="56"/></expr_stmt></block></while>

					<expr_stmt><expr><name pos:line="442" pos:column="41">status<pos:position pos:line="442" pos:column="47"/></name> <operator pos:line="442" pos:column="48">=<pos:position pos:line="442" pos:column="49"/></operator> <call><name pos:line="442" pos:column="50">strjoin<pos:position pos:line="442" pos:column="57"/></name> <argument_list pos:line="442" pos:column="58">(<argument><expr><name pos:line="442" pos:column="59">cmdline<pos:position pos:line="442" pos:column="66"/></name></expr></argument>, <argument><expr><sizeof pos:line="442" pos:column="68">sizeof <argument_list pos:line="442" pos:column="75">(<argument><expr><name pos:line="442" pos:column="76">cmdline<pos:position pos:line="442" pos:column="83"/></name></expr></argument>)<pos:position pos:line="442" pos:column="84"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="442" pos:column="86">argv<pos:position pos:line="442" pos:column="90"/></name></expr></argument>, <argument><expr><name pos:line="442" pos:column="92">argc<pos:position pos:line="442" pos:column="96"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="442" pos:column="98">" "<pos:position pos:line="442" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="442" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="442" pos:column="103"/></expr_stmt>
					<if pos:line="443" pos:column="41">if <condition pos:line="443" pos:column="44">(<expr><name pos:line="443" pos:column="45">status<pos:position pos:line="443" pos:column="51"/></name> <operator pos:line="443" pos:column="52">&lt;<pos:position pos:line="443" pos:column="56"/></operator> <literal type="number" pos:line="443" pos:column="54">0<pos:position pos:line="443" pos:column="55"/></literal></expr>)<pos:position pos:line="443" pos:column="56"/></condition><then pos:line="443" pos:column="56">
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="444" pos:column="49">WARNING<pos:position pos:line="444" pos:column="56"/></name> <argument_list pos:line="444" pos:column="57">(<argument><expr><literal type="string" pos:line="444" pos:column="58">"processes plugin: Command line did not fit into buffer."<pos:position pos:line="444" pos:column="115"/></literal></expr></argument>)<pos:position pos:line="444" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="444" pos:column="117"/></expr_stmt></block></then>
					<else pos:line="445" pos:column="41">else
						<block type="pseudo"><expr_stmt><expr><name pos:line="446" pos:column="49">have_cmdline<pos:position pos:line="446" pos:column="61"/></name> <operator pos:line="446" pos:column="62">=<pos:position pos:line="446" pos:column="63"/></operator> <literal type="number" pos:line="446" pos:column="64">1<pos:position pos:line="446" pos:column="65"/></literal></expr>;<pos:position pos:line="446" pos:column="66"/></expr_stmt></block></else></if>
				}<pos:position pos:line="447" pos:column="34"/></block></then></if>
			}<pos:position pos:line="448" pos:column="26"/></block></then></if> <comment type="block" pos:line="448" pos:column="27">/* if (process has argument list) */</comment>

			<expr_stmt><expr><name><name pos:line="450" pos:column="25">pse<pos:position pos:line="450" pos:column="28"/></name><operator pos:line="450" pos:column="28">.<pos:position pos:line="450" pos:column="29"/></operator><name pos:line="450" pos:column="29">id<pos:position pos:line="450" pos:column="31"/></name></name>       <operator pos:line="450" pos:column="38">=<pos:position pos:line="450" pos:column="39"/></operator> <name><name pos:line="450" pos:column="40">procs<pos:position pos:line="450" pos:column="45"/></name><index pos:line="450" pos:column="45">[<expr><name pos:line="450" pos:column="46">i<pos:position pos:line="450" pos:column="47"/></name></expr>]<pos:position pos:line="450" pos:column="48"/></index></name><operator pos:line="450" pos:column="48">.<pos:position pos:line="450" pos:column="49"/></operator><name pos:line="450" pos:column="49">ki_pid<pos:position pos:line="450" pos:column="55"/></name></expr>;<pos:position pos:line="450" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="451" pos:column="25">pse<pos:position pos:line="451" pos:column="28"/></name><operator pos:line="451" pos:column="28">.<pos:position pos:line="451" pos:column="29"/></operator><name pos:line="451" pos:column="29">age<pos:position pos:line="451" pos:column="32"/></name></name>      <operator pos:line="451" pos:column="38">=<pos:position pos:line="451" pos:column="39"/></operator> <literal type="number" pos:line="451" pos:column="40">0<pos:position pos:line="451" pos:column="41"/></literal></expr>;<pos:position pos:line="451" pos:column="42"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="453" pos:column="25">pse<pos:position pos:line="453" pos:column="28"/></name><operator pos:line="453" pos:column="28">.<pos:position pos:line="453" pos:column="29"/></operator><name pos:line="453" pos:column="29">num_proc<pos:position pos:line="453" pos:column="37"/></name></name> <operator pos:line="453" pos:column="38">=<pos:position pos:line="453" pos:column="39"/></operator> <literal type="number" pos:line="453" pos:column="40">1<pos:position pos:line="453" pos:column="41"/></literal></expr>;<pos:position pos:line="453" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="454" pos:column="25">pse<pos:position pos:line="454" pos:column="28"/></name><operator pos:line="454" pos:column="28">.<pos:position pos:line="454" pos:column="29"/></operator><name pos:line="454" pos:column="29">num_lwp<pos:position pos:line="454" pos:column="36"/></name></name>  <operator pos:line="454" pos:column="38">=<pos:position pos:line="454" pos:column="39"/></operator> <name><name pos:line="454" pos:column="40">procs<pos:position pos:line="454" pos:column="45"/></name><index pos:line="454" pos:column="45">[<expr><name pos:line="454" pos:column="46">i<pos:position pos:line="454" pos:column="47"/></name></expr>]<pos:position pos:line="454" pos:column="48"/></index></name><operator pos:line="454" pos:column="48">.<pos:position pos:line="454" pos:column="49"/></operator><name pos:line="454" pos:column="49">ki_numthreads<pos:position pos:line="454" pos:column="62"/></name></expr>;<pos:position pos:line="454" pos:column="63"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="456" pos:column="25">pse<pos:position pos:line="456" pos:column="28"/></name><operator pos:line="456" pos:column="28">.<pos:position pos:line="456" pos:column="29"/></operator><name pos:line="456" pos:column="29">vmem_size<pos:position pos:line="456" pos:column="38"/></name></name> <operator pos:line="456" pos:column="39">=<pos:position pos:line="456" pos:column="40"/></operator> <name><name pos:line="456" pos:column="41">procs<pos:position pos:line="456" pos:column="46"/></name><index pos:line="456" pos:column="46">[<expr><name pos:line="456" pos:column="47">i<pos:position pos:line="456" pos:column="48"/></name></expr>]<pos:position pos:line="456" pos:column="49"/></index></name><operator pos:line="456" pos:column="49">.<pos:position pos:line="456" pos:column="50"/></operator><name pos:line="456" pos:column="50">ki_size<pos:position pos:line="456" pos:column="57"/></name></expr>;<pos:position pos:line="456" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="457" pos:column="25">pse<pos:position pos:line="457" pos:column="28"/></name><operator pos:line="457" pos:column="28">.<pos:position pos:line="457" pos:column="29"/></operator><name pos:line="457" pos:column="29">vmem_rss<pos:position pos:line="457" pos:column="37"/></name></name> <operator pos:line="457" pos:column="38">=<pos:position pos:line="457" pos:column="39"/></operator> <name><name pos:line="457" pos:column="40">procs<pos:position pos:line="457" pos:column="45"/></name><index pos:line="457" pos:column="45">[<expr><name pos:line="457" pos:column="46">i<pos:position pos:line="457" pos:column="47"/></name></expr>]<pos:position pos:line="457" pos:column="48"/></index></name><operator pos:line="457" pos:column="48">.<pos:position pos:line="457" pos:column="49"/></operator><name pos:line="457" pos:column="49">ki_rssize<pos:position pos:line="457" pos:column="58"/></name> <operator pos:line="457" pos:column="59">*<pos:position pos:line="457" pos:column="60"/></operator> <name pos:line="457" pos:column="61">pagesize<pos:position pos:line="457" pos:column="69"/></name></expr>;<pos:position pos:line="457" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="458" pos:column="25">pse<pos:position pos:line="458" pos:column="28"/></name><operator pos:line="458" pos:column="28">.<pos:position pos:line="458" pos:column="29"/></operator><name pos:line="458" pos:column="29">vmem_data<pos:position pos:line="458" pos:column="38"/></name></name> <operator pos:line="458" pos:column="39">=<pos:position pos:line="458" pos:column="40"/></operator> <name><name pos:line="458" pos:column="41">procs<pos:position pos:line="458" pos:column="46"/></name><index pos:line="458" pos:column="46">[<expr><name pos:line="458" pos:column="47">i<pos:position pos:line="458" pos:column="48"/></name></expr>]<pos:position pos:line="458" pos:column="49"/></index></name><operator pos:line="458" pos:column="49">.<pos:position pos:line="458" pos:column="50"/></operator><name pos:line="458" pos:column="50">ki_dsize<pos:position pos:line="458" pos:column="58"/></name> <operator pos:line="458" pos:column="59">*<pos:position pos:line="458" pos:column="60"/></operator> <name pos:line="458" pos:column="61">pagesize<pos:position pos:line="458" pos:column="69"/></name></expr>;<pos:position pos:line="458" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="459" pos:column="25">pse<pos:position pos:line="459" pos:column="28"/></name><operator pos:line="459" pos:column="28">.<pos:position pos:line="459" pos:column="29"/></operator><name pos:line="459" pos:column="29">vmem_code<pos:position pos:line="459" pos:column="38"/></name></name> <operator pos:line="459" pos:column="39">=<pos:position pos:line="459" pos:column="40"/></operator> <name><name pos:line="459" pos:column="41">procs<pos:position pos:line="459" pos:column="46"/></name><index pos:line="459" pos:column="46">[<expr><name pos:line="459" pos:column="47">i<pos:position pos:line="459" pos:column="48"/></name></expr>]<pos:position pos:line="459" pos:column="49"/></index></name><operator pos:line="459" pos:column="49">.<pos:position pos:line="459" pos:column="50"/></operator><name pos:line="459" pos:column="50">ki_tsize<pos:position pos:line="459" pos:column="58"/></name> <operator pos:line="459" pos:column="59">*<pos:position pos:line="459" pos:column="60"/></operator> <name pos:line="459" pos:column="61">pagesize<pos:position pos:line="459" pos:column="69"/></name></expr>;<pos:position pos:line="459" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="460" pos:column="25">pse<pos:position pos:line="460" pos:column="28"/></name><operator pos:line="460" pos:column="28">.<pos:position pos:line="460" pos:column="29"/></operator><name pos:line="460" pos:column="29">stack_size<pos:position pos:line="460" pos:column="39"/></name></name> <operator pos:line="460" pos:column="40">=<pos:position pos:line="460" pos:column="41"/></operator> <name><name pos:line="460" pos:column="42">procs<pos:position pos:line="460" pos:column="47"/></name><index pos:line="460" pos:column="47">[<expr><name pos:line="460" pos:column="48">i<pos:position pos:line="460" pos:column="49"/></name></expr>]<pos:position pos:line="460" pos:column="50"/></index></name><operator pos:line="460" pos:column="50">.<pos:position pos:line="460" pos:column="51"/></operator><name pos:line="460" pos:column="51">ki_ssize<pos:position pos:line="460" pos:column="59"/></name> <operator pos:line="460" pos:column="60">*<pos:position pos:line="460" pos:column="61"/></operator> <name pos:line="460" pos:column="62">pagesize<pos:position pos:line="460" pos:column="70"/></name></expr>;<pos:position pos:line="460" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="461" pos:column="25">pse<pos:position pos:line="461" pos:column="28"/></name><operator pos:line="461" pos:column="28">.<pos:position pos:line="461" pos:column="29"/></operator><name pos:line="461" pos:column="29">vmem_minflt<pos:position pos:line="461" pos:column="40"/></name></name> <operator pos:line="461" pos:column="41">=<pos:position pos:line="461" pos:column="42"/></operator> <literal type="number" pos:line="461" pos:column="43">0<pos:position pos:line="461" pos:column="44"/></literal></expr>;<pos:position pos:line="461" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="462" pos:column="25">pse<pos:position pos:line="462" pos:column="28"/></name><operator pos:line="462" pos:column="28">.<pos:position pos:line="462" pos:column="29"/></operator><name pos:line="462" pos:column="29">vmem_minflt_counter<pos:position pos:line="462" pos:column="48"/></name></name> <operator pos:line="462" pos:column="49">=<pos:position pos:line="462" pos:column="50"/></operator> <name><name pos:line="462" pos:column="51">procs<pos:position pos:line="462" pos:column="56"/></name><index pos:line="462" pos:column="56">[<expr><name pos:line="462" pos:column="57">i<pos:position pos:line="462" pos:column="58"/></name></expr>]<pos:position pos:line="462" pos:column="59"/></index></name><operator pos:line="462" pos:column="59">.<pos:position pos:line="462" pos:column="60"/></operator><name><name pos:line="462" pos:column="60">ki_rusage<pos:position pos:line="462" pos:column="69"/></name><operator pos:line="462" pos:column="69">.<pos:position pos:line="462" pos:column="70"/></operator><name pos:line="462" pos:column="70">ru_minflt<pos:position pos:line="462" pos:column="79"/></name></name></expr>;<pos:position pos:line="462" pos:column="80"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="463" pos:column="25">pse<pos:position pos:line="463" pos:column="28"/></name><operator pos:line="463" pos:column="28">.<pos:position pos:line="463" pos:column="29"/></operator><name pos:line="463" pos:column="29">vmem_majflt<pos:position pos:line="463" pos:column="40"/></name></name> <operator pos:line="463" pos:column="41">=<pos:position pos:line="463" pos:column="42"/></operator> <literal type="number" pos:line="463" pos:column="43">0<pos:position pos:line="463" pos:column="44"/></literal></expr>;<pos:position pos:line="463" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="464" pos:column="25">pse<pos:position pos:line="464" pos:column="28"/></name><operator pos:line="464" pos:column="28">.<pos:position pos:line="464" pos:column="29"/></operator><name pos:line="464" pos:column="29">vmem_majflt_counter<pos:position pos:line="464" pos:column="48"/></name></name> <operator pos:line="464" pos:column="49">=<pos:position pos:line="464" pos:column="50"/></operator> <name><name pos:line="464" pos:column="51">procs<pos:position pos:line="464" pos:column="56"/></name><index pos:line="464" pos:column="56">[<expr><name pos:line="464" pos:column="57">i<pos:position pos:line="464" pos:column="58"/></name></expr>]<pos:position pos:line="464" pos:column="59"/></index></name><operator pos:line="464" pos:column="59">.<pos:position pos:line="464" pos:column="60"/></operator><name><name pos:line="464" pos:column="60">ki_rusage<pos:position pos:line="464" pos:column="69"/></name><operator pos:line="464" pos:column="69">.<pos:position pos:line="464" pos:column="70"/></operator><name pos:line="464" pos:column="70">ru_majflt<pos:position pos:line="464" pos:column="79"/></name></name></expr>;<pos:position pos:line="464" pos:column="80"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="466" pos:column="25">pse<pos:position pos:line="466" pos:column="28"/></name><operator pos:line="466" pos:column="28">.<pos:position pos:line="466" pos:column="29"/></operator><name pos:line="466" pos:column="29">cpu_user<pos:position pos:line="466" pos:column="37"/></name></name> <operator pos:line="466" pos:column="38">=<pos:position pos:line="466" pos:column="39"/></operator> <literal type="number" pos:line="466" pos:column="40">0<pos:position pos:line="466" pos:column="41"/></literal></expr>;<pos:position pos:line="466" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="467" pos:column="25">pse<pos:position pos:line="467" pos:column="28"/></name><operator pos:line="467" pos:column="28">.<pos:position pos:line="467" pos:column="29"/></operator><name pos:line="467" pos:column="29">cpu_system<pos:position pos:line="467" pos:column="39"/></name></name> <operator pos:line="467" pos:column="40">=<pos:position pos:line="467" pos:column="41"/></operator> <literal type="number" pos:line="467" pos:column="42">0<pos:position pos:line="467" pos:column="43"/></literal></expr>;<pos:position pos:line="467" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="468" pos:column="25">pse<pos:position pos:line="468" pos:column="28"/></name><operator pos:line="468" pos:column="28">.<pos:position pos:line="468" pos:column="29"/></operator><name pos:line="468" pos:column="29">cpu_user_counter<pos:position pos:line="468" pos:column="45"/></name></name> <operator pos:line="468" pos:column="46">=<pos:position pos:line="468" pos:column="47"/></operator> <literal type="number" pos:line="468" pos:column="48">0<pos:position pos:line="468" pos:column="49"/></literal></expr>;<pos:position pos:line="468" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="469" pos:column="25">pse<pos:position pos:line="469" pos:column="28"/></name><operator pos:line="469" pos:column="28">.<pos:position pos:line="469" pos:column="29"/></operator><name pos:line="469" pos:column="29">cpu_system_counter<pos:position pos:line="469" pos:column="47"/></name></name> <operator pos:line="469" pos:column="48">=<pos:position pos:line="469" pos:column="49"/></operator> <literal type="number" pos:line="469" pos:column="50">0<pos:position pos:line="469" pos:column="51"/></literal></expr>;<pos:position pos:line="469" pos:column="52"/></expr_stmt>
			<comment type="block" pos:line="470" pos:column="25">/*
			 * The u-area might be swapped out, and we can't get
			 * at it because we have a crashdump and no swap.
			 * If it's here fill in these fields, otherwise, just
			 * leave them 0.
			 */</comment>
			<if pos:line="476" pos:column="25">if <condition pos:line="476" pos:column="28">(<expr><name><name pos:line="476" pos:column="29">procs<pos:position pos:line="476" pos:column="34"/></name><index pos:line="476" pos:column="34">[<expr><name pos:line="476" pos:column="35">i<pos:position pos:line="476" pos:column="36"/></name></expr>]<pos:position pos:line="476" pos:column="37"/></index></name><operator pos:line="476" pos:column="37">.<pos:position pos:line="476" pos:column="38"/></operator><name pos:line="476" pos:column="38">ki_flag<pos:position pos:line="476" pos:column="45"/></name> <operator pos:line="476" pos:column="46">&amp;<pos:position pos:line="476" pos:column="51"/></operator> <name pos:line="476" pos:column="48">P_INMEM<pos:position pos:line="476" pos:column="55"/></name></expr>)<pos:position pos:line="476" pos:column="56"/></condition><then pos:line="476" pos:column="56">
			<block pos:line="477" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="478" pos:column="33">pse<pos:position pos:line="478" pos:column="36"/></name><operator pos:line="478" pos:column="36">.<pos:position pos:line="478" pos:column="37"/></operator><name pos:line="478" pos:column="37">cpu_user_counter<pos:position pos:line="478" pos:column="53"/></name></name> <operator pos:line="478" pos:column="54">=<pos:position pos:line="478" pos:column="55"/></operator> <name><name pos:line="478" pos:column="56">procs<pos:position pos:line="478" pos:column="61"/></name><index pos:line="478" pos:column="61">[<expr><name pos:line="478" pos:column="62">i<pos:position pos:line="478" pos:column="63"/></name></expr>]<pos:position pos:line="478" pos:column="64"/></index></name><operator pos:line="478" pos:column="64">.<pos:position pos:line="478" pos:column="65"/></operator><name><name pos:line="478" pos:column="65">ki_rusage<pos:position pos:line="478" pos:column="74"/></name><operator pos:line="478" pos:column="74">.<pos:position pos:line="478" pos:column="75"/></operator><name pos:line="478" pos:column="75">ru_utime<pos:position pos:line="478" pos:column="83"/></name><operator pos:line="478" pos:column="83">.<pos:position pos:line="478" pos:column="84"/></operator><name pos:line="478" pos:column="84">tv_usec<pos:position pos:line="478" pos:column="91"/></name></name>
				       	<operator pos:line="479" pos:column="41">+<pos:position pos:line="479" pos:column="42"/></operator> <operator pos:line="479" pos:column="43">(<pos:position pos:line="479" pos:column="44"/></operator><literal type="number" pos:line="479" pos:column="44">1000000lu<pos:position pos:line="479" pos:column="53"/></literal> <operator pos:line="479" pos:column="54">*<pos:position pos:line="479" pos:column="55"/></operator> <name><name pos:line="479" pos:column="56">procs<pos:position pos:line="479" pos:column="61"/></name><index pos:line="479" pos:column="61">[<expr><name pos:line="479" pos:column="62">i<pos:position pos:line="479" pos:column="63"/></name></expr>]<pos:position pos:line="479" pos:column="64"/></index></name><operator pos:line="479" pos:column="64">.<pos:position pos:line="479" pos:column="65"/></operator><name><name pos:line="479" pos:column="65">ki_rusage<pos:position pos:line="479" pos:column="74"/></name><operator pos:line="479" pos:column="74">.<pos:position pos:line="479" pos:column="75"/></operator><name pos:line="479" pos:column="75">ru_utime<pos:position pos:line="479" pos:column="83"/></name><operator pos:line="479" pos:column="83">.<pos:position pos:line="479" pos:column="84"/></operator><name pos:line="479" pos:column="84">tv_sec<pos:position pos:line="479" pos:column="90"/></name></name><operator pos:line="479" pos:column="90">)<pos:position pos:line="479" pos:column="91"/></operator></expr>;<pos:position pos:line="479" pos:column="92"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="480" pos:column="33">pse<pos:position pos:line="480" pos:column="36"/></name><operator pos:line="480" pos:column="36">.<pos:position pos:line="480" pos:column="37"/></operator><name pos:line="480" pos:column="37">cpu_system_counter<pos:position pos:line="480" pos:column="55"/></name></name> <operator pos:line="480" pos:column="56">=<pos:position pos:line="480" pos:column="57"/></operator> <name><name pos:line="480" pos:column="58">procs<pos:position pos:line="480" pos:column="63"/></name><index pos:line="480" pos:column="63">[<expr><name pos:line="480" pos:column="64">i<pos:position pos:line="480" pos:column="65"/></name></expr>]<pos:position pos:line="480" pos:column="66"/></index></name><operator pos:line="480" pos:column="66">.<pos:position pos:line="480" pos:column="67"/></operator><name><name pos:line="480" pos:column="67">ki_rusage<pos:position pos:line="480" pos:column="76"/></name><operator pos:line="480" pos:column="76">.<pos:position pos:line="480" pos:column="77"/></operator><name pos:line="480" pos:column="77">ru_stime<pos:position pos:line="480" pos:column="85"/></name><operator pos:line="480" pos:column="85">.<pos:position pos:line="480" pos:column="86"/></operator><name pos:line="480" pos:column="86">tv_usec<pos:position pos:line="480" pos:column="93"/></name></name>
					<operator pos:line="481" pos:column="41">+<pos:position pos:line="481" pos:column="42"/></operator> <operator pos:line="481" pos:column="43">(<pos:position pos:line="481" pos:column="44"/></operator><literal type="number" pos:line="481" pos:column="44">1000000lu<pos:position pos:line="481" pos:column="53"/></literal> <operator pos:line="481" pos:column="54">*<pos:position pos:line="481" pos:column="55"/></operator> <name><name pos:line="481" pos:column="56">procs<pos:position pos:line="481" pos:column="61"/></name><index pos:line="481" pos:column="61">[<expr><name pos:line="481" pos:column="62">i<pos:position pos:line="481" pos:column="63"/></name></expr>]<pos:position pos:line="481" pos:column="64"/></index></name><operator pos:line="481" pos:column="64">.<pos:position pos:line="481" pos:column="65"/></operator><name><name pos:line="481" pos:column="65">ki_rusage<pos:position pos:line="481" pos:column="74"/></name><operator pos:line="481" pos:column="74">.<pos:position pos:line="481" pos:column="75"/></operator><name pos:line="481" pos:column="75">ru_stime<pos:position pos:line="481" pos:column="83"/></name><operator pos:line="481" pos:column="83">.<pos:position pos:line="481" pos:column="84"/></operator><name pos:line="481" pos:column="84">tv_sec<pos:position pos:line="481" pos:column="90"/></name></name><operator pos:line="481" pos:column="90">)<pos:position pos:line="481" pos:column="91"/></operator></expr>;<pos:position pos:line="481" pos:column="92"/></expr_stmt>
			}<pos:position pos:line="482" pos:column="26"/></block></then></if>

			<comment type="block" pos:line="484" pos:column="25">/* no I/O data */</comment>
			<expr_stmt><expr><name><name pos:line="485" pos:column="25">pse<pos:position pos:line="485" pos:column="28"/></name><operator pos:line="485" pos:column="28">.<pos:position pos:line="485" pos:column="29"/></operator><name pos:line="485" pos:column="29">io_rchar<pos:position pos:line="485" pos:column="37"/></name></name> <operator pos:line="485" pos:column="38">=<pos:position pos:line="485" pos:column="39"/></operator> <operator pos:line="485" pos:column="40">-<pos:position pos:line="485" pos:column="41"/></operator><literal type="number" pos:line="485" pos:column="41">1<pos:position pos:line="485" pos:column="42"/></literal></expr>;<pos:position pos:line="485" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="486" pos:column="25">pse<pos:position pos:line="486" pos:column="28"/></name><operator pos:line="486" pos:column="28">.<pos:position pos:line="486" pos:column="29"/></operator><name pos:line="486" pos:column="29">io_wchar<pos:position pos:line="486" pos:column="37"/></name></name> <operator pos:line="486" pos:column="38">=<pos:position pos:line="486" pos:column="39"/></operator> <operator pos:line="486" pos:column="40">-<pos:position pos:line="486" pos:column="41"/></operator><literal type="number" pos:line="486" pos:column="41">1<pos:position pos:line="486" pos:column="42"/></literal></expr>;<pos:position pos:line="486" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="487" pos:column="25">pse<pos:position pos:line="487" pos:column="28"/></name><operator pos:line="487" pos:column="28">.<pos:position pos:line="487" pos:column="29"/></operator><name pos:line="487" pos:column="29">io_syscr<pos:position pos:line="487" pos:column="37"/></name></name> <operator pos:line="487" pos:column="38">=<pos:position pos:line="487" pos:column="39"/></operator> <operator pos:line="487" pos:column="40">-<pos:position pos:line="487" pos:column="41"/></operator><literal type="number" pos:line="487" pos:column="41">1<pos:position pos:line="487" pos:column="42"/></literal></expr>;<pos:position pos:line="487" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="488" pos:column="25">pse<pos:position pos:line="488" pos:column="28"/></name><operator pos:line="488" pos:column="28">.<pos:position pos:line="488" pos:column="29"/></operator><name pos:line="488" pos:column="29">io_syscw<pos:position pos:line="488" pos:column="37"/></name></name> <operator pos:line="488" pos:column="38">=<pos:position pos:line="488" pos:column="39"/></operator> <operator pos:line="488" pos:column="40">-<pos:position pos:line="488" pos:column="41"/></operator><literal type="number" pos:line="488" pos:column="41">1<pos:position pos:line="488" pos:column="42"/></literal></expr>;<pos:position pos:line="488" pos:column="43"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="490" pos:column="25">ps_list_add<pos:position pos:line="490" pos:column="36"/></name> <argument_list pos:line="490" pos:column="37">(<argument><expr><name><name pos:line="490" pos:column="38">procs<pos:position pos:line="490" pos:column="43"/></name><index pos:line="490" pos:column="43">[<expr><name pos:line="490" pos:column="44">i<pos:position pos:line="490" pos:column="45"/></name></expr>]<pos:position pos:line="490" pos:column="46"/></index></name><operator pos:line="490" pos:column="46">.<pos:position pos:line="490" pos:column="47"/></operator><name pos:line="490" pos:column="47">ki_comm<pos:position pos:line="490" pos:column="54"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="490" pos:column="56">have_cmdline<pos:position pos:line="490" pos:column="68"/></name></expr> ?<pos:position pos:line="490" pos:column="70"/></condition><then pos:line="490" pos:column="70"> <expr><name pos:line="490" pos:column="71">cmdline<pos:position pos:line="490" pos:column="78"/></name></expr> <pos:position pos:line="490" pos:column="79"/></then><else pos:line="490" pos:column="79">: <expr><name pos:line="490" pos:column="81">NULL<pos:position pos:line="490" pos:column="85"/></name></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="490" pos:column="87">&amp;<pos:position pos:line="490" pos:column="92"/></operator><name pos:line="490" pos:column="88">pse<pos:position pos:line="490" pos:column="91"/></name></expr></argument>)<pos:position pos:line="490" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="490" pos:column="93"/></expr_stmt>
		}<pos:position pos:line="491" pos:column="18"/></block></then></if> <comment type="block" pos:line="491" pos:column="19">/* if ((proc_ptr == NULL) || (proc_ptr-&gt;ki_pid != procs[i].ki_pid)) */</comment>

		<switch pos:line="493" pos:column="17">switch <condition pos:line="493" pos:column="24">(<expr><name><name pos:line="493" pos:column="25">procs<pos:position pos:line="493" pos:column="30"/></name><index pos:line="493" pos:column="30">[<expr><name pos:line="493" pos:column="31">i<pos:position pos:line="493" pos:column="32"/></name></expr>]<pos:position pos:line="493" pos:column="33"/></index></name><operator pos:line="493" pos:column="33">.<pos:position pos:line="493" pos:column="34"/></operator><name pos:line="493" pos:column="34">ki_stat<pos:position pos:line="493" pos:column="41"/></name></expr>)<pos:position pos:line="493" pos:column="42"/></condition>
		<block pos:line="494" pos:column="17">{
			<case pos:line="495" pos:column="25">case <expr><name pos:line="495" pos:column="30">SSTOP<pos:position pos:line="495" pos:column="35"/></name></expr>:<pos:position pos:line="495" pos:column="36"/></case> 	<expr_stmt><expr><name pos:line="495" pos:column="41">stopped<pos:position pos:line="495" pos:column="48"/></name><operator pos:line="495" pos:column="48">++<pos:position pos:line="495" pos:column="50"/></operator></expr>;<pos:position pos:line="495" pos:column="51"/></expr_stmt>	<break pos:line="495" pos:column="57">break;<pos:position pos:line="495" pos:column="63"/></break>
			<case pos:line="496" pos:column="25">case <expr><name pos:line="496" pos:column="30">SSLEEP<pos:position pos:line="496" pos:column="36"/></name></expr>:<pos:position pos:line="496" pos:column="37"/></case>	<expr_stmt><expr><name pos:line="496" pos:column="41">sleeping<pos:position pos:line="496" pos:column="49"/></name><operator pos:line="496" pos:column="49">++<pos:position pos:line="496" pos:column="51"/></operator></expr>;<pos:position pos:line="496" pos:column="52"/></expr_stmt>	<break pos:line="496" pos:column="57">break;<pos:position pos:line="496" pos:column="63"/></break>
			<case pos:line="497" pos:column="25">case <expr><name pos:line="497" pos:column="30">SRUN<pos:position pos:line="497" pos:column="34"/></name></expr>:<pos:position pos:line="497" pos:column="35"/></case>	<expr_stmt><expr><name pos:line="497" pos:column="41">running<pos:position pos:line="497" pos:column="48"/></name><operator pos:line="497" pos:column="48">++<pos:position pos:line="497" pos:column="50"/></operator></expr>;<pos:position pos:line="497" pos:column="51"/></expr_stmt>	<break pos:line="497" pos:column="57">break;<pos:position pos:line="497" pos:column="63"/></break>
			<case pos:line="498" pos:column="25">case <expr><name pos:line="498" pos:column="30">SIDL<pos:position pos:line="498" pos:column="34"/></name></expr>:<pos:position pos:line="498" pos:column="35"/></case>	<expr_stmt><expr><name pos:line="498" pos:column="41">idle<pos:position pos:line="498" pos:column="45"/></name><operator pos:line="498" pos:column="45">++<pos:position pos:line="498" pos:column="47"/></operator></expr>;<pos:position pos:line="498" pos:column="48"/></expr_stmt>		<break pos:line="498" pos:column="57">break;<pos:position pos:line="498" pos:column="63"/></break>
			<case pos:line="499" pos:column="25">case <expr><name pos:line="499" pos:column="30">SWAIT<pos:position pos:line="499" pos:column="35"/></name></expr>:<pos:position pos:line="499" pos:column="36"/></case>	<expr_stmt><expr><name pos:line="499" pos:column="41">wait<pos:position pos:line="499" pos:column="45"/></name><operator pos:line="499" pos:column="45">++<pos:position pos:line="499" pos:column="47"/></operator></expr>;<pos:position pos:line="499" pos:column="48"/></expr_stmt>		<break pos:line="499" pos:column="57">break;<pos:position pos:line="499" pos:column="63"/></break>
			<case pos:line="500" pos:column="25">case <expr><name pos:line="500" pos:column="30">SLOCK<pos:position pos:line="500" pos:column="35"/></name></expr>:<pos:position pos:line="500" pos:column="36"/></case>	<expr_stmt><expr><name pos:line="500" pos:column="41">blocked<pos:position pos:line="500" pos:column="48"/></name><operator pos:line="500" pos:column="48">++<pos:position pos:line="500" pos:column="50"/></operator></expr>;<pos:position pos:line="500" pos:column="51"/></expr_stmt>	<break pos:line="500" pos:column="57">break;<pos:position pos:line="500" pos:column="63"/></break>
			<case pos:line="501" pos:column="25">case <expr><name pos:line="501" pos:column="30">SZOMB<pos:position pos:line="501" pos:column="35"/></name></expr>:<pos:position pos:line="501" pos:column="36"/></case>	<expr_stmt><expr><name pos:line="501" pos:column="41">zombies<pos:position pos:line="501" pos:column="48"/></name><operator pos:line="501" pos:column="48">++<pos:position pos:line="501" pos:column="50"/></operator></expr>;<pos:position pos:line="501" pos:column="51"/></expr_stmt>	<break pos:line="501" pos:column="57">break;<pos:position pos:line="501" pos:column="63"/></break>
		}<pos:position pos:line="502" pos:column="18"/></block></switch>
	}<pos:position pos:line="503" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="505" pos:column="9">kvm_close<pos:position pos:line="505" pos:column="18"/></name><argument_list pos:line="505" pos:column="18">(<argument><expr><name pos:line="505" pos:column="19">kd<pos:position pos:line="505" pos:column="21"/></name></expr></argument>)<pos:position pos:line="505" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="505" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="507" pos:column="9">ps_submit_state<pos:position pos:line="507" pos:column="24"/></name> <argument_list pos:line="507" pos:column="25">(<argument><expr><literal type="string" pos:line="507" pos:column="26">"running"<pos:position pos:line="507" pos:column="35"/></literal></expr></argument>,  <argument><expr><name pos:line="507" pos:column="38">running<pos:position pos:line="507" pos:column="45"/></name></expr></argument>)<pos:position pos:line="507" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="507" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="508" pos:column="9">ps_submit_state<pos:position pos:line="508" pos:column="24"/></name> <argument_list pos:line="508" pos:column="25">(<argument><expr><literal type="string" pos:line="508" pos:column="26">"sleeping"<pos:position pos:line="508" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="508" pos:column="38">sleeping<pos:position pos:line="508" pos:column="46"/></name></expr></argument>)<pos:position pos:line="508" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="508" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="509" pos:column="9">ps_submit_state<pos:position pos:line="509" pos:column="24"/></name> <argument_list pos:line="509" pos:column="25">(<argument><expr><literal type="string" pos:line="509" pos:column="26">"zombies"<pos:position pos:line="509" pos:column="35"/></literal></expr></argument>,  <argument><expr><name pos:line="509" pos:column="38">zombies<pos:position pos:line="509" pos:column="45"/></name></expr></argument>)<pos:position pos:line="509" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="509" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="510" pos:column="9">ps_submit_state<pos:position pos:line="510" pos:column="24"/></name> <argument_list pos:line="510" pos:column="25">(<argument><expr><literal type="string" pos:line="510" pos:column="26">"stopped"<pos:position pos:line="510" pos:column="35"/></literal></expr></argument>,  <argument><expr><name pos:line="510" pos:column="38">stopped<pos:position pos:line="510" pos:column="45"/></name></expr></argument>)<pos:position pos:line="510" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="510" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="511" pos:column="9">ps_submit_state<pos:position pos:line="511" pos:column="24"/></name> <argument_list pos:line="511" pos:column="25">(<argument><expr><literal type="string" pos:line="511" pos:column="26">"blocked"<pos:position pos:line="511" pos:column="35"/></literal></expr></argument>,  <argument><expr><name pos:line="511" pos:column="38">blocked<pos:position pos:line="511" pos:column="45"/></name></expr></argument>)<pos:position pos:line="511" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="511" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="512" pos:column="9">ps_submit_state<pos:position pos:line="512" pos:column="24"/></name> <argument_list pos:line="512" pos:column="25">(<argument><expr><literal type="string" pos:line="512" pos:column="26">"idle"<pos:position pos:line="512" pos:column="32"/></literal></expr></argument>,     <argument><expr><name pos:line="512" pos:column="38">idle<pos:position pos:line="512" pos:column="42"/></name></expr></argument>)<pos:position pos:line="512" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="512" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="513" pos:column="9">ps_submit_state<pos:position pos:line="513" pos:column="24"/></name> <argument_list pos:line="513" pos:column="25">(<argument><expr><literal type="string" pos:line="513" pos:column="26">"wait"<pos:position pos:line="513" pos:column="32"/></literal></expr></argument>,     <argument><expr><name pos:line="513" pos:column="38">wait<pos:position pos:line="513" pos:column="42"/></name></expr></argument>)<pos:position pos:line="513" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="513" pos:column="44"/></expr_stmt>

	<for pos:line="515" pos:column="9">for <control pos:line="515" pos:column="13">(<init><expr><name pos:line="515" pos:column="14">ps_ptr<pos:position pos:line="515" pos:column="20"/></name> <operator pos:line="515" pos:column="21">=<pos:position pos:line="515" pos:column="22"/></operator> <name pos:line="515" pos:column="23">list_head_g<pos:position pos:line="515" pos:column="34"/></name></expr>;<pos:position pos:line="515" pos:column="35"/></init> <condition><expr><name pos:line="515" pos:column="36">ps_ptr<pos:position pos:line="515" pos:column="42"/></name> <operator pos:line="515" pos:column="43">!=<pos:position pos:line="515" pos:column="45"/></operator> <name pos:line="515" pos:column="46">NULL<pos:position pos:line="515" pos:column="50"/></name></expr>;<pos:position pos:line="515" pos:column="51"/></condition> <incr><expr><name pos:line="515" pos:column="52">ps_ptr<pos:position pos:line="515" pos:column="58"/></name> <operator pos:line="515" pos:column="59">=<pos:position pos:line="515" pos:column="60"/></operator> <name><name pos:line="515" pos:column="61">ps_ptr<pos:position pos:line="515" pos:column="67"/></name><operator pos:line="515" pos:column="67">-&gt;<pos:position pos:line="515" pos:column="72"/></operator><name pos:line="515" pos:column="69">next<pos:position pos:line="515" pos:column="73"/></name></name></expr></incr>)<pos:position pos:line="515" pos:column="74"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="516" pos:column="17">ps_submit_proc_list<pos:position pos:line="516" pos:column="36"/></name> <argument_list pos:line="516" pos:column="37">(<argument><expr><name pos:line="516" pos:column="38">ps_ptr<pos:position pos:line="516" pos:column="44"/></name></expr></argument>)<pos:position pos:line="516" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="516" pos:column="46"/></expr_stmt></block></for>
<comment type="block" pos:line="517" pos:column="1">/* #endif HAVE_LIBKVM_GETPROCS &amp;&amp; HAVE_STRUCT_KINFO_PROC_FREEBSD */</comment>

<cpp:elif pos:line="519" pos:column="1">#<cpp:directive pos:line="519" pos:column="2">elif<pos:position pos:line="519" pos:column="6"/></cpp:directive> <expr><name pos:line="519" pos:column="7">HAVE_PROCINFO_H<pos:position pos:line="519" pos:column="22"/></name></expr></cpp:elif>
	<comment type="block" pos:line="520" pos:column="9">/* AIX */</comment>
	<decl_stmt><decl><type><name pos:line="521" pos:column="9">int<pos:position pos:line="521" pos:column="12"/></name></type> <name pos:line="521" pos:column="13">running<pos:position pos:line="521" pos:column="20"/></name>  <init pos:line="521" pos:column="22">= <expr><literal type="number" pos:line="521" pos:column="24">0<pos:position pos:line="521" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="521" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="522" pos:column="9">int<pos:position pos:line="522" pos:column="12"/></name></type> <name pos:line="522" pos:column="13">sleeping<pos:position pos:line="522" pos:column="21"/></name> <init pos:line="522" pos:column="22">= <expr><literal type="number" pos:line="522" pos:column="24">0<pos:position pos:line="522" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="522" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="523" pos:column="9">int<pos:position pos:line="523" pos:column="12"/></name></type> <name pos:line="523" pos:column="13">zombies<pos:position pos:line="523" pos:column="20"/></name>  <init pos:line="523" pos:column="22">= <expr><literal type="number" pos:line="523" pos:column="24">0<pos:position pos:line="523" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="523" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="524" pos:column="9">int<pos:position pos:line="524" pos:column="12"/></name></type> <name pos:line="524" pos:column="13">stopped<pos:position pos:line="524" pos:column="20"/></name>  <init pos:line="524" pos:column="22">= <expr><literal type="number" pos:line="524" pos:column="24">0<pos:position pos:line="524" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="524" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="525" pos:column="9">int<pos:position pos:line="525" pos:column="12"/></name></type> <name pos:line="525" pos:column="13">paging<pos:position pos:line="525" pos:column="19"/></name>   <init pos:line="525" pos:column="22">= <expr><literal type="number" pos:line="525" pos:column="24">0<pos:position pos:line="525" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="525" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="526" pos:column="9">int<pos:position pos:line="526" pos:column="12"/></name></type> <name pos:line="526" pos:column="13">blocked<pos:position pos:line="526" pos:column="20"/></name>  <init pos:line="526" pos:column="22">= <expr><literal type="number" pos:line="526" pos:column="24">0<pos:position pos:line="526" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="526" pos:column="26"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="528" pos:column="9">pid_t<pos:position pos:line="528" pos:column="14"/></name></type> <name pos:line="528" pos:column="15">pindex<pos:position pos:line="528" pos:column="21"/></name> <init pos:line="528" pos:column="22">= <expr><literal type="number" pos:line="528" pos:column="24">0<pos:position pos:line="528" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="528" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="529" pos:column="9">int<pos:position pos:line="529" pos:column="12"/></name></type> <name pos:line="529" pos:column="13">nprocs<pos:position pos:line="529" pos:column="19"/></name></decl>;<pos:position pos:line="529" pos:column="20"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="531" pos:column="9">procstat_t<pos:position pos:line="531" pos:column="19"/></name> <modifier pos:line="531" pos:column="20">*<pos:position pos:line="531" pos:column="21"/></modifier></type><name pos:line="531" pos:column="21">ps<pos:position pos:line="531" pos:column="23"/></name></decl>;<pos:position pos:line="531" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="532" pos:column="9">procstat_entry_t<pos:position pos:line="532" pos:column="25"/></name></type> <name pos:line="532" pos:column="26">pse<pos:position pos:line="532" pos:column="29"/></name></decl>;<pos:position pos:line="532" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="534" pos:column="9">ps_list_reset<pos:position pos:line="534" pos:column="22"/></name> <argument_list pos:line="534" pos:column="23">()<pos:position pos:line="534" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="534" pos:column="26"/></expr_stmt>
	<while pos:line="535" pos:column="9">while <condition pos:line="535" pos:column="15">(<expr><operator pos:line="535" pos:column="16">(<pos:position pos:line="535" pos:column="17"/></operator><name pos:line="535" pos:column="17">nprocs<pos:position pos:line="535" pos:column="23"/></name> <operator pos:line="535" pos:column="24">=<pos:position pos:line="535" pos:column="25"/></operator> <call><name pos:line="535" pos:column="26">getprocs64<pos:position pos:line="535" pos:column="36"/></name> <argument_list pos:line="535" pos:column="37">(<argument><expr><name pos:line="535" pos:column="38">procentry<pos:position pos:line="535" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="535" pos:column="49">sizeof<argument_list pos:line="535" pos:column="55">(<argument><expr pos:line="535" pos:column="56">struct <name pos:line="535" pos:column="63">procentry64<pos:position pos:line="535" pos:column="74"/></name></expr></argument>)<pos:position pos:line="535" pos:column="75"/></argument_list></sizeof></expr></argument>,
					<comment type="block" pos:line="536" pos:column="41">/* fdsinfo = */</comment> <argument><expr><name pos:line="536" pos:column="57">NULL<pos:position pos:line="536" pos:column="61"/></name></expr></argument>, <argument><expr><sizeof pos:line="536" pos:column="63">sizeof<argument_list pos:line="536" pos:column="69">(<argument><expr pos:line="536" pos:column="70">struct <name pos:line="536" pos:column="77">fdsinfo64<pos:position pos:line="536" pos:column="86"/></name></expr></argument>)<pos:position pos:line="536" pos:column="87"/></argument_list></sizeof></expr></argument>,
					<argument><expr><operator pos:line="537" pos:column="41">&amp;<pos:position pos:line="537" pos:column="46"/></operator><name pos:line="537" pos:column="42">pindex<pos:position pos:line="537" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="537" pos:column="50">MAXPROCENTRY<pos:position pos:line="537" pos:column="62"/></name></expr></argument>)<pos:position pos:line="537" pos:column="63"/></argument_list></call><operator pos:line="537" pos:column="63">)<pos:position pos:line="537" pos:column="64"/></operator> <operator pos:line="537" pos:column="65">&gt;<pos:position pos:line="537" pos:column="69"/></operator> <literal type="number" pos:line="537" pos:column="67">0<pos:position pos:line="537" pos:column="68"/></literal></expr>)<pos:position pos:line="537" pos:column="69"/></condition>
	<block pos:line="538" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="539" pos:column="17">int<pos:position pos:line="539" pos:column="20"/></name></type> <name pos:line="539" pos:column="21">i<pos:position pos:line="539" pos:column="22"/></name></decl>;<pos:position pos:line="539" pos:column="23"/></decl_stmt>

		<for pos:line="541" pos:column="17">for <control pos:line="541" pos:column="21">(<init><expr><name pos:line="541" pos:column="22">i<pos:position pos:line="541" pos:column="23"/></name> <operator pos:line="541" pos:column="24">=<pos:position pos:line="541" pos:column="25"/></operator> <literal type="number" pos:line="541" pos:column="26">0<pos:position pos:line="541" pos:column="27"/></literal></expr>;<pos:position pos:line="541" pos:column="28"/></init> <condition><expr><name pos:line="541" pos:column="29">i<pos:position pos:line="541" pos:column="30"/></name> <operator pos:line="541" pos:column="31">&lt;<pos:position pos:line="541" pos:column="35"/></operator> <name pos:line="541" pos:column="33">nprocs<pos:position pos:line="541" pos:column="39"/></name></expr>;<pos:position pos:line="541" pos:column="40"/></condition> <incr><expr><name pos:line="541" pos:column="41">i<pos:position pos:line="541" pos:column="42"/></name><operator pos:line="541" pos:column="42">++<pos:position pos:line="541" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="541" pos:column="45"/></control>
		<block pos:line="542" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="543" pos:column="25">tid64_t<pos:position pos:line="543" pos:column="32"/></name></type> <name pos:line="543" pos:column="33">thindex<pos:position pos:line="543" pos:column="40"/></name></decl>;<pos:position pos:line="543" pos:column="41"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="544" pos:column="25">int<pos:position pos:line="544" pos:column="28"/></name></type> <name pos:line="544" pos:column="29">nthreads<pos:position pos:line="544" pos:column="37"/></name></decl>;<pos:position pos:line="544" pos:column="38"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="545" pos:column="25">char<pos:position pos:line="545" pos:column="29"/></name></type> <name><name pos:line="545" pos:column="30">arglist<pos:position pos:line="545" pos:column="37"/></name><index pos:line="545" pos:column="37">[<expr><name pos:line="545" pos:column="38">MAXARGLN<pos:position pos:line="545" pos:column="46"/></name><operator pos:line="545" pos:column="46">+<pos:position pos:line="545" pos:column="47"/></operator><literal type="number" pos:line="545" pos:column="47">1<pos:position pos:line="545" pos:column="48"/></literal></expr>]<pos:position pos:line="545" pos:column="49"/></index></name></decl>;<pos:position pos:line="545" pos:column="50"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="546" pos:column="25">char<pos:position pos:line="546" pos:column="29"/></name> <modifier pos:line="546" pos:column="30">*<pos:position pos:line="546" pos:column="31"/></modifier></type><name pos:line="546" pos:column="31">cargs<pos:position pos:line="546" pos:column="36"/></name></decl>;<pos:position pos:line="546" pos:column="37"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="547" pos:column="25">char<pos:position pos:line="547" pos:column="29"/></name> <modifier pos:line="547" pos:column="30">*<pos:position pos:line="547" pos:column="31"/></modifier></type><name pos:line="547" pos:column="31">cmdline<pos:position pos:line="547" pos:column="38"/></name></decl>;<pos:position pos:line="547" pos:column="39"/></decl_stmt>

			<if pos:line="549" pos:column="25">if <condition pos:line="549" pos:column="28">(<expr><name><name pos:line="549" pos:column="29">procentry<pos:position pos:line="549" pos:column="38"/></name><index pos:line="549" pos:column="38">[<expr><name pos:line="549" pos:column="39">i<pos:position pos:line="549" pos:column="40"/></name></expr>]<pos:position pos:line="549" pos:column="41"/></index></name><operator pos:line="549" pos:column="41">.<pos:position pos:line="549" pos:column="42"/></operator><name pos:line="549" pos:column="42">pi_state<pos:position pos:line="549" pos:column="50"/></name> <operator pos:line="549" pos:column="51">==<pos:position pos:line="549" pos:column="53"/></operator> <name pos:line="549" pos:column="54">SNONE<pos:position pos:line="549" pos:column="59"/></name></expr>)<pos:position pos:line="549" pos:column="60"/></condition><then pos:line="549" pos:column="60"> <block type="pseudo"><continue pos:line="549" pos:column="61">continue;<pos:position pos:line="549" pos:column="70"/></continue></block></then></if>
			<comment type="block" pos:line="550" pos:column="25">/* if (procentry[i].pi_state == SZOMB)  FIXME */</comment>

			<expr_stmt><expr><name pos:line="552" pos:column="25">cmdline<pos:position pos:line="552" pos:column="32"/></name> <operator pos:line="552" pos:column="33">=<pos:position pos:line="552" pos:column="34"/></operator> <name><name pos:line="552" pos:column="35">procentry<pos:position pos:line="552" pos:column="44"/></name><index pos:line="552" pos:column="44">[<expr><name pos:line="552" pos:column="45">i<pos:position pos:line="552" pos:column="46"/></name></expr>]<pos:position pos:line="552" pos:column="47"/></index></name><operator pos:line="552" pos:column="47">.<pos:position pos:line="552" pos:column="48"/></operator><name pos:line="552" pos:column="48">pi_comm<pos:position pos:line="552" pos:column="55"/></name></expr>;<pos:position pos:line="552" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name pos:line="553" pos:column="25">cargs<pos:position pos:line="553" pos:column="30"/></name> <operator pos:line="553" pos:column="31">=<pos:position pos:line="553" pos:column="32"/></operator> <name><name pos:line="553" pos:column="33">procentry<pos:position pos:line="553" pos:column="42"/></name><index pos:line="553" pos:column="42">[<expr><name pos:line="553" pos:column="43">i<pos:position pos:line="553" pos:column="44"/></name></expr>]<pos:position pos:line="553" pos:column="45"/></index></name><operator pos:line="553" pos:column="45">.<pos:position pos:line="553" pos:column="46"/></operator><name pos:line="553" pos:column="46">pi_comm<pos:position pos:line="553" pos:column="53"/></name></expr>;<pos:position pos:line="553" pos:column="54"/></expr_stmt>
			<if pos:line="554" pos:column="25">if <condition pos:line="554" pos:column="28">( <expr><name><name pos:line="554" pos:column="30">procentry<pos:position pos:line="554" pos:column="39"/></name><index pos:line="554" pos:column="39">[<expr><name pos:line="554" pos:column="40">i<pos:position pos:line="554" pos:column="41"/></name></expr>]<pos:position pos:line="554" pos:column="42"/></index></name><operator pos:line="554" pos:column="42">.<pos:position pos:line="554" pos:column="43"/></operator><name pos:line="554" pos:column="43">pi_flags<pos:position pos:line="554" pos:column="51"/></name> <operator pos:line="554" pos:column="52">&amp;<pos:position pos:line="554" pos:column="57"/></operator> <name pos:line="554" pos:column="54">SKPROC<pos:position pos:line="554" pos:column="60"/></name></expr> )<pos:position pos:line="554" pos:column="62"/></condition><then pos:line="554" pos:column="62">
			<block pos:line="555" pos:column="25">{
				<if pos:line="556" pos:column="33">if <condition pos:line="556" pos:column="36">(<expr><name><name pos:line="556" pos:column="37">procentry<pos:position pos:line="556" pos:column="46"/></name><index pos:line="556" pos:column="46">[<expr><name pos:line="556" pos:column="47">i<pos:position pos:line="556" pos:column="48"/></name></expr>]<pos:position pos:line="556" pos:column="49"/></index></name><operator pos:line="556" pos:column="49">.<pos:position pos:line="556" pos:column="50"/></operator><name pos:line="556" pos:column="50">pi_pid<pos:position pos:line="556" pos:column="56"/></name> <operator pos:line="556" pos:column="57">==<pos:position pos:line="556" pos:column="59"/></operator> <literal type="number" pos:line="556" pos:column="60">0<pos:position pos:line="556" pos:column="61"/></literal></expr>)<pos:position pos:line="556" pos:column="62"/></condition><then pos:line="556" pos:column="62">
					<block type="pseudo"><expr_stmt><expr><name pos:line="557" pos:column="41">cmdline<pos:position pos:line="557" pos:column="48"/></name> <operator pos:line="557" pos:column="49">=<pos:position pos:line="557" pos:column="50"/></operator> <literal type="string" pos:line="557" pos:column="51">"swapper"<pos:position pos:line="557" pos:column="60"/></literal></expr>;<pos:position pos:line="557" pos:column="61"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="558" pos:column="33">cargs<pos:position pos:line="558" pos:column="38"/></name> <operator pos:line="558" pos:column="39">=<pos:position pos:line="558" pos:column="40"/></operator> <name pos:line="558" pos:column="41">cmdline<pos:position pos:line="558" pos:column="48"/></name></expr>;<pos:position pos:line="558" pos:column="49"/></expr_stmt>
 			}<pos:position pos:line="559" pos:column="26"/></block></then>
			<else pos:line="560" pos:column="25">else
			<block pos:line="561" pos:column="25">{
				<if pos:line="562" pos:column="33">if <condition pos:line="562" pos:column="36">(<expr><call><name pos:line="562" pos:column="37">getargs<pos:position pos:line="562" pos:column="44"/></name><argument_list pos:line="562" pos:column="44">(<argument><expr><operator pos:line="562" pos:column="45">&amp;<pos:position pos:line="562" pos:column="50"/></operator><name><name pos:line="562" pos:column="46">procentry<pos:position pos:line="562" pos:column="55"/></name><index pos:line="562" pos:column="55">[<expr><name pos:line="562" pos:column="56">i<pos:position pos:line="562" pos:column="57"/></name></expr>]<pos:position pos:line="562" pos:column="58"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="562" pos:column="60">sizeof<argument_list pos:line="562" pos:column="66">(<argument><expr pos:line="562" pos:column="67">struct <name pos:line="562" pos:column="74">procentry64<pos:position pos:line="562" pos:column="85"/></name></expr></argument>)<pos:position pos:line="562" pos:column="86"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="562" pos:column="88">arglist<pos:position pos:line="562" pos:column="95"/></name></expr></argument>, <argument><expr><name pos:line="562" pos:column="97">MAXARGLN<pos:position pos:line="562" pos:column="105"/></name></expr></argument>)<pos:position pos:line="562" pos:column="106"/></argument_list></call> <operator pos:line="562" pos:column="107">&gt;=<pos:position pos:line="562" pos:column="112"/></operator> <literal type="number" pos:line="562" pos:column="110">0<pos:position pos:line="562" pos:column="111"/></literal></expr>)<pos:position pos:line="562" pos:column="112"/></condition><then pos:line="562" pos:column="112">
				<block pos:line="563" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="564" pos:column="41">int<pos:position pos:line="564" pos:column="44"/></name></type> <name pos:line="564" pos:column="45">n<pos:position pos:line="564" pos:column="46"/></name></decl>;<pos:position pos:line="564" pos:column="47"/></decl_stmt>

					<expr_stmt><expr><name pos:line="566" pos:column="41">n<pos:position pos:line="566" pos:column="42"/></name> <operator pos:line="566" pos:column="43">=<pos:position pos:line="566" pos:column="44"/></operator> <operator pos:line="566" pos:column="45">-<pos:position pos:line="566" pos:column="46"/></operator><literal type="number" pos:line="566" pos:column="46">1<pos:position pos:line="566" pos:column="47"/></literal></expr>;<pos:position pos:line="566" pos:column="48"/></expr_stmt>
					<while pos:line="567" pos:column="41">while <condition pos:line="567" pos:column="47">(<expr><operator pos:line="567" pos:column="48">++<pos:position pos:line="567" pos:column="50"/></operator><name pos:line="567" pos:column="50">n<pos:position pos:line="567" pos:column="51"/></name> <operator pos:line="567" pos:column="52">&lt;<pos:position pos:line="567" pos:column="56"/></operator> <name pos:line="567" pos:column="54">MAXARGLN<pos:position pos:line="567" pos:column="62"/></name></expr>)<pos:position pos:line="567" pos:column="63"/></condition>
					<block pos:line="568" pos:column="41">{
						<if pos:line="569" pos:column="49">if <condition pos:line="569" pos:column="52">(<expr><name><name pos:line="569" pos:column="53">arglist<pos:position pos:line="569" pos:column="60"/></name><index pos:line="569" pos:column="60">[<expr><name pos:line="569" pos:column="61">n<pos:position pos:line="569" pos:column="62"/></name></expr>]<pos:position pos:line="569" pos:column="63"/></index></name> <operator pos:line="569" pos:column="64">==<pos:position pos:line="569" pos:column="66"/></operator> <literal type="char" pos:line="569" pos:column="67">'\0'<pos:position pos:line="569" pos:column="71"/></literal></expr>)<pos:position pos:line="569" pos:column="72"/></condition><then pos:line="569" pos:column="72">
						<block pos:line="570" pos:column="49">{
							<if pos:line="571" pos:column="57">if <condition pos:line="571" pos:column="60">(<expr><name><name pos:line="571" pos:column="61">arglist<pos:position pos:line="571" pos:column="68"/></name><index pos:line="571" pos:column="68">[<expr><name pos:line="571" pos:column="69">n<pos:position pos:line="571" pos:column="70"/></name><operator pos:line="571" pos:column="70">+<pos:position pos:line="571" pos:column="71"/></operator><literal type="number" pos:line="571" pos:column="71">1<pos:position pos:line="571" pos:column="72"/></literal></expr>]<pos:position pos:line="571" pos:column="73"/></index></name> <operator pos:line="571" pos:column="74">==<pos:position pos:line="571" pos:column="76"/></operator> <literal type="char" pos:line="571" pos:column="77">'\0'<pos:position pos:line="571" pos:column="81"/></literal></expr>)<pos:position pos:line="571" pos:column="82"/></condition><then pos:line="571" pos:column="82">
								<block type="pseudo"><break pos:line="572" pos:column="65">break;<pos:position pos:line="572" pos:column="71"/></break></block></then></if>
							<expr_stmt><expr><name><name pos:line="573" pos:column="57">arglist<pos:position pos:line="573" pos:column="64"/></name><index pos:line="573" pos:column="64">[<expr><name pos:line="573" pos:column="65">n<pos:position pos:line="573" pos:column="66"/></name></expr>]<pos:position pos:line="573" pos:column="67"/></index></name> <operator pos:line="573" pos:column="68">=<pos:position pos:line="573" pos:column="69"/></operator> <literal type="char" pos:line="573" pos:column="70">' '<pos:position pos:line="573" pos:column="73"/></literal></expr>;<pos:position pos:line="573" pos:column="74"/></expr_stmt>
						}<pos:position pos:line="574" pos:column="50"/></block></then></if>
					}<pos:position pos:line="575" pos:column="42"/></block></while>
					<expr_stmt><expr><name pos:line="576" pos:column="41">cargs<pos:position pos:line="576" pos:column="46"/></name> <operator pos:line="576" pos:column="47">=<pos:position pos:line="576" pos:column="48"/></operator> <name pos:line="576" pos:column="49">arglist<pos:position pos:line="576" pos:column="56"/></name></expr>;<pos:position pos:line="576" pos:column="57"/></expr_stmt>
				}<pos:position pos:line="577" pos:column="34"/></block></then></if>
			}<pos:position pos:line="578" pos:column="26"/></block></else></if>

			<expr_stmt><expr><name><name pos:line="580" pos:column="25">pse<pos:position pos:line="580" pos:column="28"/></name><operator pos:line="580" pos:column="28">.<pos:position pos:line="580" pos:column="29"/></operator><name pos:line="580" pos:column="29">id<pos:position pos:line="580" pos:column="31"/></name></name>       <operator pos:line="580" pos:column="38">=<pos:position pos:line="580" pos:column="39"/></operator> <name><name pos:line="580" pos:column="40">procentry<pos:position pos:line="580" pos:column="49"/></name><index pos:line="580" pos:column="49">[<expr><name pos:line="580" pos:column="50">i<pos:position pos:line="580" pos:column="51"/></name></expr>]<pos:position pos:line="580" pos:column="52"/></index></name><operator pos:line="580" pos:column="52">.<pos:position pos:line="580" pos:column="53"/></operator><name pos:line="580" pos:column="53">pi_pid<pos:position pos:line="580" pos:column="59"/></name></expr>;<pos:position pos:line="580" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="581" pos:column="25">pse<pos:position pos:line="581" pos:column="28"/></name><operator pos:line="581" pos:column="28">.<pos:position pos:line="581" pos:column="29"/></operator><name pos:line="581" pos:column="29">age<pos:position pos:line="581" pos:column="32"/></name></name>      <operator pos:line="581" pos:column="38">=<pos:position pos:line="581" pos:column="39"/></operator> <literal type="number" pos:line="581" pos:column="40">0<pos:position pos:line="581" pos:column="41"/></literal></expr>;<pos:position pos:line="581" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="582" pos:column="25">pse<pos:position pos:line="582" pos:column="28"/></name><operator pos:line="582" pos:column="28">.<pos:position pos:line="582" pos:column="29"/></operator><name pos:line="582" pos:column="29">num_lwp<pos:position pos:line="582" pos:column="36"/></name></name>  <operator pos:line="582" pos:column="38">=<pos:position pos:line="582" pos:column="39"/></operator> <name><name pos:line="582" pos:column="40">procentry<pos:position pos:line="582" pos:column="49"/></name><index pos:line="582" pos:column="49">[<expr><name pos:line="582" pos:column="50">i<pos:position pos:line="582" pos:column="51"/></name></expr>]<pos:position pos:line="582" pos:column="52"/></index></name><operator pos:line="582" pos:column="52">.<pos:position pos:line="582" pos:column="53"/></operator><name pos:line="582" pos:column="53">pi_thcount<pos:position pos:line="582" pos:column="63"/></name></expr>;<pos:position pos:line="582" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="583" pos:column="25">pse<pos:position pos:line="583" pos:column="28"/></name><operator pos:line="583" pos:column="28">.<pos:position pos:line="583" pos:column="29"/></operator><name pos:line="583" pos:column="29">num_proc<pos:position pos:line="583" pos:column="37"/></name></name> <operator pos:line="583" pos:column="38">=<pos:position pos:line="583" pos:column="39"/></operator> <literal type="number" pos:line="583" pos:column="40">1<pos:position pos:line="583" pos:column="41"/></literal></expr>;<pos:position pos:line="583" pos:column="42"/></expr_stmt>

			<expr_stmt><expr><name pos:line="585" pos:column="25">thindex<pos:position pos:line="585" pos:column="32"/></name><operator pos:line="585" pos:column="32">=<pos:position pos:line="585" pos:column="33"/></operator><literal type="number" pos:line="585" pos:column="33">0<pos:position pos:line="585" pos:column="34"/></literal></expr>;<pos:position pos:line="585" pos:column="35"/></expr_stmt>
			<while pos:line="586" pos:column="25">while <condition pos:line="586" pos:column="31">(<expr><operator pos:line="586" pos:column="32">(<pos:position pos:line="586" pos:column="33"/></operator><name pos:line="586" pos:column="33">nthreads<pos:position pos:line="586" pos:column="41"/></name> <operator pos:line="586" pos:column="42">=<pos:position pos:line="586" pos:column="43"/></operator> <call><name pos:line="586" pos:column="44">getthrds64<pos:position pos:line="586" pos:column="54"/></name><argument_list pos:line="586" pos:column="54">(<argument><expr><name><name pos:line="586" pos:column="55">procentry<pos:position pos:line="586" pos:column="64"/></name><index pos:line="586" pos:column="64">[<expr><name pos:line="586" pos:column="65">i<pos:position pos:line="586" pos:column="66"/></name></expr>]<pos:position pos:line="586" pos:column="67"/></index></name><operator pos:line="586" pos:column="67">.<pos:position pos:line="586" pos:column="68"/></operator><name pos:line="586" pos:column="68">pi_pid<pos:position pos:line="586" pos:column="74"/></name></expr></argument>,
							<argument><expr><name pos:line="587" pos:column="57">thrdentry<pos:position pos:line="587" pos:column="66"/></name></expr></argument>, <argument><expr><sizeof pos:line="587" pos:column="68">sizeof<argument_list pos:line="587" pos:column="74">(<argument><expr pos:line="587" pos:column="75">struct <name pos:line="587" pos:column="82">thrdentry64<pos:position pos:line="587" pos:column="93"/></name></expr></argument>)<pos:position pos:line="587" pos:column="94"/></argument_list></sizeof></expr></argument>,
							<argument><expr><operator pos:line="588" pos:column="57">&amp;<pos:position pos:line="588" pos:column="62"/></operator><name pos:line="588" pos:column="58">thindex<pos:position pos:line="588" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="588" pos:column="67">MAXTHRDENTRY<pos:position pos:line="588" pos:column="79"/></name></expr></argument>)<pos:position pos:line="588" pos:column="80"/></argument_list></call><operator pos:line="588" pos:column="80">)<pos:position pos:line="588" pos:column="81"/></operator> <operator pos:line="588" pos:column="82">&gt;<pos:position pos:line="588" pos:column="86"/></operator> <literal type="number" pos:line="588" pos:column="84">0<pos:position pos:line="588" pos:column="85"/></literal></expr>)<pos:position pos:line="588" pos:column="86"/></condition>
			<block pos:line="589" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="590" pos:column="33">int<pos:position pos:line="590" pos:column="36"/></name></type> <name pos:line="590" pos:column="37">j<pos:position pos:line="590" pos:column="38"/></name></decl>;<pos:position pos:line="590" pos:column="39"/></decl_stmt>

				<for pos:line="592" pos:column="33">for <control pos:line="592" pos:column="37">(<init><expr><name pos:line="592" pos:column="38">j<pos:position pos:line="592" pos:column="39"/></name><operator pos:line="592" pos:column="39">=<pos:position pos:line="592" pos:column="40"/></operator><literal type="number" pos:line="592" pos:column="40">0<pos:position pos:line="592" pos:column="41"/></literal></expr>;<pos:position pos:line="592" pos:column="42"/></init> <condition><expr><name pos:line="592" pos:column="43">j<pos:position pos:line="592" pos:column="44"/></name><operator pos:line="592" pos:column="44">&lt;<pos:position pos:line="592" pos:column="48"/></operator> <name pos:line="592" pos:column="46">nthreads<pos:position pos:line="592" pos:column="54"/></name></expr>;<pos:position pos:line="592" pos:column="55"/></condition> <incr><expr><name pos:line="592" pos:column="56">j<pos:position pos:line="592" pos:column="57"/></name><operator pos:line="592" pos:column="57">++<pos:position pos:line="592" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="592" pos:column="60"/></control>
				<block pos:line="593" pos:column="33">{
					<switch pos:line="594" pos:column="41">switch <condition pos:line="594" pos:column="48">(<expr><name><name pos:line="594" pos:column="49">thrdentry<pos:position pos:line="594" pos:column="58"/></name><index pos:line="594" pos:column="58">[<expr><name pos:line="594" pos:column="59">j<pos:position pos:line="594" pos:column="60"/></name></expr>]<pos:position pos:line="594" pos:column="61"/></index></name><operator pos:line="594" pos:column="61">.<pos:position pos:line="594" pos:column="62"/></operator><name pos:line="594" pos:column="62">ti_state<pos:position pos:line="594" pos:column="70"/></name></expr>)<pos:position pos:line="594" pos:column="71"/></condition>
					<block pos:line="595" pos:column="41">{
						<comment type="block" pos:line="596" pos:column="49">/* case TSNONE: break; */</comment>
						<case pos:line="597" pos:column="49">case <expr><name pos:line="597" pos:column="54">TSIDL<pos:position pos:line="597" pos:column="59"/></name></expr>:<pos:position pos:line="597" pos:column="60"/></case>	<expr_stmt><expr><name pos:line="597" pos:column="65">blocked<pos:position pos:line="597" pos:column="72"/></name><operator pos:line="597" pos:column="72">++<pos:position pos:line="597" pos:column="74"/></operator></expr>;<pos:position pos:line="597" pos:column="75"/></expr_stmt>	<break pos:line="597" pos:column="81">break;<pos:position pos:line="597" pos:column="87"/></break> <comment type="block" pos:line="597" pos:column="88">/* FIXME is really blocked */</comment>
						<case pos:line="598" pos:column="49">case <expr><name pos:line="598" pos:column="54">TSRUN<pos:position pos:line="598" pos:column="59"/></name></expr>:<pos:position pos:line="598" pos:column="60"/></case>	<expr_stmt><expr><name pos:line="598" pos:column="65">running<pos:position pos:line="598" pos:column="72"/></name><operator pos:line="598" pos:column="72">++<pos:position pos:line="598" pos:column="74"/></operator></expr>;<pos:position pos:line="598" pos:column="75"/></expr_stmt>	<break pos:line="598" pos:column="81">break;<pos:position pos:line="598" pos:column="87"/></break>
						<case pos:line="599" pos:column="49">case <expr><name pos:line="599" pos:column="54">TSSLEEP<pos:position pos:line="599" pos:column="61"/></name></expr>:<pos:position pos:line="599" pos:column="62"/></case>	<expr_stmt><expr><name pos:line="599" pos:column="65">sleeping<pos:position pos:line="599" pos:column="73"/></name><operator pos:line="599" pos:column="73">++<pos:position pos:line="599" pos:column="75"/></operator></expr>;<pos:position pos:line="599" pos:column="76"/></expr_stmt>	<break pos:line="599" pos:column="81">break;<pos:position pos:line="599" pos:column="87"/></break>
						<case pos:line="600" pos:column="49">case <expr><name pos:line="600" pos:column="54">TSSWAP<pos:position pos:line="600" pos:column="60"/></name></expr>:<pos:position pos:line="600" pos:column="61"/></case>	<expr_stmt><expr><name pos:line="600" pos:column="65">paging<pos:position pos:line="600" pos:column="71"/></name><operator pos:line="600" pos:column="71">++<pos:position pos:line="600" pos:column="73"/></operator></expr>;<pos:position pos:line="600" pos:column="74"/></expr_stmt>	<break pos:line="600" pos:column="81">break;<pos:position pos:line="600" pos:column="87"/></break>
						<case pos:line="601" pos:column="49">case <expr><name pos:line="601" pos:column="54">TSSTOP<pos:position pos:line="601" pos:column="60"/></name></expr>:<pos:position pos:line="601" pos:column="61"/></case>	<expr_stmt><expr><name pos:line="601" pos:column="65">stopped<pos:position pos:line="601" pos:column="72"/></name><operator pos:line="601" pos:column="72">++<pos:position pos:line="601" pos:column="74"/></operator></expr>;<pos:position pos:line="601" pos:column="75"/></expr_stmt>	<break pos:line="601" pos:column="81">break;<pos:position pos:line="601" pos:column="87"/></break>
						<case pos:line="602" pos:column="49">case <expr><name pos:line="602" pos:column="54">TSZOMB<pos:position pos:line="602" pos:column="60"/></name></expr>:<pos:position pos:line="602" pos:column="61"/></case>	<expr_stmt><expr><name pos:line="602" pos:column="65">zombies<pos:position pos:line="602" pos:column="72"/></name><operator pos:line="602" pos:column="72">++<pos:position pos:line="602" pos:column="74"/></operator></expr>;<pos:position pos:line="602" pos:column="75"/></expr_stmt>	<break pos:line="602" pos:column="81">break;<pos:position pos:line="602" pos:column="87"/></break>
					}<pos:position pos:line="603" pos:column="42"/></block></switch>
				}<pos:position pos:line="604" pos:column="34"/></block></for>
				<if pos:line="605" pos:column="33">if <condition pos:line="605" pos:column="36">(<expr><name pos:line="605" pos:column="37">nthreads<pos:position pos:line="605" pos:column="45"/></name> <operator pos:line="605" pos:column="46">&lt;<pos:position pos:line="605" pos:column="50"/></operator> <name pos:line="605" pos:column="48">MAXTHRDENTRY<pos:position pos:line="605" pos:column="60"/></name></expr>)<pos:position pos:line="605" pos:column="61"/></condition><then pos:line="605" pos:column="61">
					<block type="pseudo"><break pos:line="606" pos:column="41">break;<pos:position pos:line="606" pos:column="47"/></break></block></then></if>
			}<pos:position pos:line="607" pos:column="26"/></block></while>

			<expr_stmt><expr><name><name pos:line="609" pos:column="25">pse<pos:position pos:line="609" pos:column="28"/></name><operator pos:line="609" pos:column="28">.<pos:position pos:line="609" pos:column="29"/></operator><name pos:line="609" pos:column="29">cpu_user<pos:position pos:line="609" pos:column="37"/></name></name> <operator pos:line="609" pos:column="38">=<pos:position pos:line="609" pos:column="39"/></operator> <literal type="number" pos:line="609" pos:column="40">0<pos:position pos:line="609" pos:column="41"/></literal></expr>;<pos:position pos:line="609" pos:column="42"/></expr_stmt>
			<comment type="block" pos:line="610" pos:column="25">/* tv_usec is nanosec ??? */</comment>
			<expr_stmt><expr><name><name pos:line="611" pos:column="25">pse<pos:position pos:line="611" pos:column="28"/></name><operator pos:line="611" pos:column="28">.<pos:position pos:line="611" pos:column="29"/></operator><name pos:line="611" pos:column="29">cpu_user_counter<pos:position pos:line="611" pos:column="45"/></name></name> <operator pos:line="611" pos:column="46">=<pos:position pos:line="611" pos:column="47"/></operator> <name><name pos:line="611" pos:column="48">procentry<pos:position pos:line="611" pos:column="57"/></name><index pos:line="611" pos:column="57">[<expr><name pos:line="611" pos:column="58">i<pos:position pos:line="611" pos:column="59"/></name></expr>]<pos:position pos:line="611" pos:column="60"/></index></name><operator pos:line="611" pos:column="60">.<pos:position pos:line="611" pos:column="61"/></operator><name><name pos:line="611" pos:column="61">pi_ru<pos:position pos:line="611" pos:column="66"/></name><operator pos:line="611" pos:column="66">.<pos:position pos:line="611" pos:column="67"/></operator><name pos:line="611" pos:column="67">ru_utime<pos:position pos:line="611" pos:column="75"/></name><operator pos:line="611" pos:column="75">.<pos:position pos:line="611" pos:column="76"/></operator><name pos:line="611" pos:column="76">tv_sec<pos:position pos:line="611" pos:column="82"/></name></name> <operator pos:line="611" pos:column="83">*<pos:position pos:line="611" pos:column="84"/></operator> <literal type="number" pos:line="611" pos:column="85">1000000<pos:position pos:line="611" pos:column="92"/></literal> <operator pos:line="611" pos:column="93">+<pos:position pos:line="611" pos:column="94"/></operator>
				<name><name pos:line="612" pos:column="33">procentry<pos:position pos:line="612" pos:column="42"/></name><index pos:line="612" pos:column="42">[<expr><name pos:line="612" pos:column="43">i<pos:position pos:line="612" pos:column="44"/></name></expr>]<pos:position pos:line="612" pos:column="45"/></index></name><operator pos:line="612" pos:column="45">.<pos:position pos:line="612" pos:column="46"/></operator><name><name pos:line="612" pos:column="46">pi_ru<pos:position pos:line="612" pos:column="51"/></name><operator pos:line="612" pos:column="51">.<pos:position pos:line="612" pos:column="52"/></operator><name pos:line="612" pos:column="52">ru_utime<pos:position pos:line="612" pos:column="60"/></name><operator pos:line="612" pos:column="60">.<pos:position pos:line="612" pos:column="61"/></operator><name pos:line="612" pos:column="61">tv_usec<pos:position pos:line="612" pos:column="68"/></name></name> <operator pos:line="612" pos:column="69">/<pos:position pos:line="612" pos:column="70"/></operator> <literal type="number" pos:line="612" pos:column="71">1000<pos:position pos:line="612" pos:column="75"/></literal></expr>;<pos:position pos:line="612" pos:column="76"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="614" pos:column="25">pse<pos:position pos:line="614" pos:column="28"/></name><operator pos:line="614" pos:column="28">.<pos:position pos:line="614" pos:column="29"/></operator><name pos:line="614" pos:column="29">cpu_system<pos:position pos:line="614" pos:column="39"/></name></name> <operator pos:line="614" pos:column="40">=<pos:position pos:line="614" pos:column="41"/></operator> <literal type="number" pos:line="614" pos:column="42">0<pos:position pos:line="614" pos:column="43"/></literal></expr>;<pos:position pos:line="614" pos:column="44"/></expr_stmt>
			<comment type="block" pos:line="615" pos:column="25">/* tv_usec is nanosec ??? */</comment>
			<expr_stmt><expr><name><name pos:line="616" pos:column="25">pse<pos:position pos:line="616" pos:column="28"/></name><operator pos:line="616" pos:column="28">.<pos:position pos:line="616" pos:column="29"/></operator><name pos:line="616" pos:column="29">cpu_system_counter<pos:position pos:line="616" pos:column="47"/></name></name> <operator pos:line="616" pos:column="48">=<pos:position pos:line="616" pos:column="49"/></operator> <name><name pos:line="616" pos:column="50">procentry<pos:position pos:line="616" pos:column="59"/></name><index pos:line="616" pos:column="59">[<expr><name pos:line="616" pos:column="60">i<pos:position pos:line="616" pos:column="61"/></name></expr>]<pos:position pos:line="616" pos:column="62"/></index></name><operator pos:line="616" pos:column="62">.<pos:position pos:line="616" pos:column="63"/></operator><name><name pos:line="616" pos:column="63">pi_ru<pos:position pos:line="616" pos:column="68"/></name><operator pos:line="616" pos:column="68">.<pos:position pos:line="616" pos:column="69"/></operator><name pos:line="616" pos:column="69">ru_stime<pos:position pos:line="616" pos:column="77"/></name><operator pos:line="616" pos:column="77">.<pos:position pos:line="616" pos:column="78"/></operator><name pos:line="616" pos:column="78">tv_sec<pos:position pos:line="616" pos:column="84"/></name></name> <operator pos:line="616" pos:column="85">*<pos:position pos:line="616" pos:column="86"/></operator> <literal type="number" pos:line="616" pos:column="87">1000000<pos:position pos:line="616" pos:column="94"/></literal> <operator pos:line="616" pos:column="95">+<pos:position pos:line="616" pos:column="96"/></operator>
				<name><name pos:line="617" pos:column="33">procentry<pos:position pos:line="617" pos:column="42"/></name><index pos:line="617" pos:column="42">[<expr><name pos:line="617" pos:column="43">i<pos:position pos:line="617" pos:column="44"/></name></expr>]<pos:position pos:line="617" pos:column="45"/></index></name><operator pos:line="617" pos:column="45">.<pos:position pos:line="617" pos:column="46"/></operator><name><name pos:line="617" pos:column="46">pi_ru<pos:position pos:line="617" pos:column="51"/></name><operator pos:line="617" pos:column="51">.<pos:position pos:line="617" pos:column="52"/></operator><name pos:line="617" pos:column="52">ru_stime<pos:position pos:line="617" pos:column="60"/></name><operator pos:line="617" pos:column="60">.<pos:position pos:line="617" pos:column="61"/></operator><name pos:line="617" pos:column="61">tv_usec<pos:position pos:line="617" pos:column="68"/></name></name> <operator pos:line="617" pos:column="69">/<pos:position pos:line="617" pos:column="70"/></operator> <literal type="number" pos:line="617" pos:column="71">1000<pos:position pos:line="617" pos:column="75"/></literal></expr>;<pos:position pos:line="617" pos:column="76"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="619" pos:column="25">pse<pos:position pos:line="619" pos:column="28"/></name><operator pos:line="619" pos:column="28">.<pos:position pos:line="619" pos:column="29"/></operator><name pos:line="619" pos:column="29">vmem_minflt<pos:position pos:line="619" pos:column="40"/></name></name> <operator pos:line="619" pos:column="41">=<pos:position pos:line="619" pos:column="42"/></operator> <literal type="number" pos:line="619" pos:column="43">0<pos:position pos:line="619" pos:column="44"/></literal></expr>;<pos:position pos:line="619" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="620" pos:column="25">pse<pos:position pos:line="620" pos:column="28"/></name><operator pos:line="620" pos:column="28">.<pos:position pos:line="620" pos:column="29"/></operator><name pos:line="620" pos:column="29">vmem_minflt_counter<pos:position pos:line="620" pos:column="48"/></name></name> <operator pos:line="620" pos:column="49">=<pos:position pos:line="620" pos:column="50"/></operator> <name><name pos:line="620" pos:column="51">procentry<pos:position pos:line="620" pos:column="60"/></name><index pos:line="620" pos:column="60">[<expr><name pos:line="620" pos:column="61">i<pos:position pos:line="620" pos:column="62"/></name></expr>]<pos:position pos:line="620" pos:column="63"/></index></name><operator pos:line="620" pos:column="63">.<pos:position pos:line="620" pos:column="64"/></operator><name pos:line="620" pos:column="64">pi_minflt<pos:position pos:line="620" pos:column="73"/></name></expr>;<pos:position pos:line="620" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="621" pos:column="25">pse<pos:position pos:line="621" pos:column="28"/></name><operator pos:line="621" pos:column="28">.<pos:position pos:line="621" pos:column="29"/></operator><name pos:line="621" pos:column="29">vmem_majflt<pos:position pos:line="621" pos:column="40"/></name></name> <operator pos:line="621" pos:column="41">=<pos:position pos:line="621" pos:column="42"/></operator> <literal type="number" pos:line="621" pos:column="43">0<pos:position pos:line="621" pos:column="44"/></literal></expr>;<pos:position pos:line="621" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="622" pos:column="25">pse<pos:position pos:line="622" pos:column="28"/></name><operator pos:line="622" pos:column="28">.<pos:position pos:line="622" pos:column="29"/></operator><name pos:line="622" pos:column="29">vmem_majflt_counter<pos:position pos:line="622" pos:column="48"/></name></name> <operator pos:line="622" pos:column="49">=<pos:position pos:line="622" pos:column="50"/></operator> <name><name pos:line="622" pos:column="51">procentry<pos:position pos:line="622" pos:column="60"/></name><index pos:line="622" pos:column="60">[<expr><name pos:line="622" pos:column="61">i<pos:position pos:line="622" pos:column="62"/></name></expr>]<pos:position pos:line="622" pos:column="63"/></index></name><operator pos:line="622" pos:column="63">.<pos:position pos:line="622" pos:column="64"/></operator><name pos:line="622" pos:column="64">pi_majflt<pos:position pos:line="622" pos:column="73"/></name></expr>;<pos:position pos:line="622" pos:column="74"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="624" pos:column="25">pse<pos:position pos:line="624" pos:column="28"/></name><operator pos:line="624" pos:column="28">.<pos:position pos:line="624" pos:column="29"/></operator><name pos:line="624" pos:column="29">vmem_size<pos:position pos:line="624" pos:column="38"/></name></name> <operator pos:line="624" pos:column="39">=<pos:position pos:line="624" pos:column="40"/></operator> <name><name pos:line="624" pos:column="41">procentry<pos:position pos:line="624" pos:column="50"/></name><index pos:line="624" pos:column="50">[<expr><name pos:line="624" pos:column="51">i<pos:position pos:line="624" pos:column="52"/></name></expr>]<pos:position pos:line="624" pos:column="53"/></index></name><operator pos:line="624" pos:column="53">.<pos:position pos:line="624" pos:column="54"/></operator><name pos:line="624" pos:column="54">pi_tsize<pos:position pos:line="624" pos:column="62"/></name> <operator pos:line="624" pos:column="63">+<pos:position pos:line="624" pos:column="64"/></operator> <name><name pos:line="624" pos:column="65">procentry<pos:position pos:line="624" pos:column="74"/></name><index pos:line="624" pos:column="74">[<expr><name pos:line="624" pos:column="75">i<pos:position pos:line="624" pos:column="76"/></name></expr>]<pos:position pos:line="624" pos:column="77"/></index></name><operator pos:line="624" pos:column="77">.<pos:position pos:line="624" pos:column="78"/></operator><name pos:line="624" pos:column="78">pi_dvm<pos:position pos:line="624" pos:column="84"/></name> <operator pos:line="624" pos:column="85">*<pos:position pos:line="624" pos:column="86"/></operator> <name pos:line="624" pos:column="87">pagesize<pos:position pos:line="624" pos:column="95"/></name></expr>;<pos:position pos:line="624" pos:column="96"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="625" pos:column="25">pse<pos:position pos:line="625" pos:column="28"/></name><operator pos:line="625" pos:column="28">.<pos:position pos:line="625" pos:column="29"/></operator><name pos:line="625" pos:column="29">vmem_rss<pos:position pos:line="625" pos:column="37"/></name></name> <operator pos:line="625" pos:column="38">=<pos:position pos:line="625" pos:column="39"/></operator> <operator pos:line="625" pos:column="40">(<pos:position pos:line="625" pos:column="41"/></operator><name><name pos:line="625" pos:column="41">procentry<pos:position pos:line="625" pos:column="50"/></name><index pos:line="625" pos:column="50">[<expr><name pos:line="625" pos:column="51">i<pos:position pos:line="625" pos:column="52"/></name></expr>]<pos:position pos:line="625" pos:column="53"/></index></name><operator pos:line="625" pos:column="53">.<pos:position pos:line="625" pos:column="54"/></operator><name pos:line="625" pos:column="54">pi_drss<pos:position pos:line="625" pos:column="61"/></name> <operator pos:line="625" pos:column="62">+<pos:position pos:line="625" pos:column="63"/></operator> <name><name pos:line="625" pos:column="64">procentry<pos:position pos:line="625" pos:column="73"/></name><index pos:line="625" pos:column="73">[<expr><name pos:line="625" pos:column="74">i<pos:position pos:line="625" pos:column="75"/></name></expr>]<pos:position pos:line="625" pos:column="76"/></index></name><operator pos:line="625" pos:column="76">.<pos:position pos:line="625" pos:column="77"/></operator><name pos:line="625" pos:column="77">pi_trss<pos:position pos:line="625" pos:column="84"/></name><operator pos:line="625" pos:column="84">)<pos:position pos:line="625" pos:column="85"/></operator> <operator pos:line="625" pos:column="86">*<pos:position pos:line="625" pos:column="87"/></operator> <name pos:line="625" pos:column="88">pagesize<pos:position pos:line="625" pos:column="96"/></name></expr>;<pos:position pos:line="625" pos:column="97"/></expr_stmt>
			<comment type="block" pos:line="626" pos:column="25">/* Not supported */</comment>
			<expr_stmt><expr><name><name pos:line="627" pos:column="25">pse<pos:position pos:line="627" pos:column="28"/></name><operator pos:line="627" pos:column="28">.<pos:position pos:line="627" pos:column="29"/></operator><name pos:line="627" pos:column="29">vmem_data<pos:position pos:line="627" pos:column="38"/></name></name> <operator pos:line="627" pos:column="39">=<pos:position pos:line="627" pos:column="40"/></operator> <literal type="number" pos:line="627" pos:column="41">0<pos:position pos:line="627" pos:column="42"/></literal></expr>;<pos:position pos:line="627" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="628" pos:column="25">pse<pos:position pos:line="628" pos:column="28"/></name><operator pos:line="628" pos:column="28">.<pos:position pos:line="628" pos:column="29"/></operator><name pos:line="628" pos:column="29">vmem_code<pos:position pos:line="628" pos:column="38"/></name></name> <operator pos:line="628" pos:column="39">=<pos:position pos:line="628" pos:column="40"/></operator> <literal type="number" pos:line="628" pos:column="41">0<pos:position pos:line="628" pos:column="42"/></literal></expr>;<pos:position pos:line="628" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="629" pos:column="25">pse<pos:position pos:line="629" pos:column="28"/></name><operator pos:line="629" pos:column="28">.<pos:position pos:line="629" pos:column="29"/></operator><name pos:line="629" pos:column="29">stack_size<pos:position pos:line="629" pos:column="39"/></name></name> <operator pos:line="629" pos:column="40">=<pos:position pos:line="629" pos:column="41"/></operator>  <literal type="number" pos:line="629" pos:column="43">0<pos:position pos:line="629" pos:column="44"/></literal></expr>;<pos:position pos:line="629" pos:column="45"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="631" pos:column="25">pse<pos:position pos:line="631" pos:column="28"/></name><operator pos:line="631" pos:column="28">.<pos:position pos:line="631" pos:column="29"/></operator><name pos:line="631" pos:column="29">io_rchar<pos:position pos:line="631" pos:column="37"/></name></name> <operator pos:line="631" pos:column="38">=<pos:position pos:line="631" pos:column="39"/></operator> <operator pos:line="631" pos:column="40">-<pos:position pos:line="631" pos:column="41"/></operator><literal type="number" pos:line="631" pos:column="41">1<pos:position pos:line="631" pos:column="42"/></literal></expr>;<pos:position pos:line="631" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="632" pos:column="25">pse<pos:position pos:line="632" pos:column="28"/></name><operator pos:line="632" pos:column="28">.<pos:position pos:line="632" pos:column="29"/></operator><name pos:line="632" pos:column="29">io_wchar<pos:position pos:line="632" pos:column="37"/></name></name> <operator pos:line="632" pos:column="38">=<pos:position pos:line="632" pos:column="39"/></operator> <operator pos:line="632" pos:column="40">-<pos:position pos:line="632" pos:column="41"/></operator><literal type="number" pos:line="632" pos:column="41">1<pos:position pos:line="632" pos:column="42"/></literal></expr>;<pos:position pos:line="632" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="633" pos:column="25">pse<pos:position pos:line="633" pos:column="28"/></name><operator pos:line="633" pos:column="28">.<pos:position pos:line="633" pos:column="29"/></operator><name pos:line="633" pos:column="29">io_syscr<pos:position pos:line="633" pos:column="37"/></name></name> <operator pos:line="633" pos:column="38">=<pos:position pos:line="633" pos:column="39"/></operator> <operator pos:line="633" pos:column="40">-<pos:position pos:line="633" pos:column="41"/></operator><literal type="number" pos:line="633" pos:column="41">1<pos:position pos:line="633" pos:column="42"/></literal></expr>;<pos:position pos:line="633" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="634" pos:column="25">pse<pos:position pos:line="634" pos:column="28"/></name><operator pos:line="634" pos:column="28">.<pos:position pos:line="634" pos:column="29"/></operator><name pos:line="634" pos:column="29">io_syscw<pos:position pos:line="634" pos:column="37"/></name></name> <operator pos:line="634" pos:column="38">=<pos:position pos:line="634" pos:column="39"/></operator> <operator pos:line="634" pos:column="40">-<pos:position pos:line="634" pos:column="41"/></operator><literal type="number" pos:line="634" pos:column="41">1<pos:position pos:line="634" pos:column="42"/></literal></expr>;<pos:position pos:line="634" pos:column="43"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="636" pos:column="25">ps_list_add<pos:position pos:line="636" pos:column="36"/></name> <argument_list pos:line="636" pos:column="37">(<argument><expr><name pos:line="636" pos:column="38">cmdline<pos:position pos:line="636" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="636" pos:column="47">cargs<pos:position pos:line="636" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="636" pos:column="54">&amp;<pos:position pos:line="636" pos:column="59"/></operator><name pos:line="636" pos:column="55">pse<pos:position pos:line="636" pos:column="58"/></name></expr></argument>)<pos:position pos:line="636" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="636" pos:column="60"/></expr_stmt>
		}<pos:position pos:line="637" pos:column="18"/></block></for> <comment type="block" pos:line="637" pos:column="19">/* for (i = 0 .. nprocs) */</comment>

		<if pos:line="639" pos:column="17">if <condition pos:line="639" pos:column="20">(<expr><name pos:line="639" pos:column="21">nprocs<pos:position pos:line="639" pos:column="27"/></name> <operator pos:line="639" pos:column="28">&lt;<pos:position pos:line="639" pos:column="32"/></operator> <name pos:line="639" pos:column="30">MAXPROCENTRY<pos:position pos:line="639" pos:column="42"/></name></expr>)<pos:position pos:line="639" pos:column="43"/></condition><then pos:line="639" pos:column="43">
			<block type="pseudo"><break pos:line="640" pos:column="25">break;<pos:position pos:line="640" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="641" pos:column="10"/></block></while> <comment type="block" pos:line="641" pos:column="11">/* while (getprocs64() &gt; 0) */</comment>
	<expr_stmt><expr><call><name pos:line="642" pos:column="9">ps_submit_state<pos:position pos:line="642" pos:column="24"/></name> <argument_list pos:line="642" pos:column="25">(<argument><expr><literal type="string" pos:line="642" pos:column="26">"running"<pos:position pos:line="642" pos:column="35"/></literal></expr></argument>,  <argument><expr><name pos:line="642" pos:column="38">running<pos:position pos:line="642" pos:column="45"/></name></expr></argument>)<pos:position pos:line="642" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="642" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="643" pos:column="9">ps_submit_state<pos:position pos:line="643" pos:column="24"/></name> <argument_list pos:line="643" pos:column="25">(<argument><expr><literal type="string" pos:line="643" pos:column="26">"sleeping"<pos:position pos:line="643" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="643" pos:column="38">sleeping<pos:position pos:line="643" pos:column="46"/></name></expr></argument>)<pos:position pos:line="643" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="643" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="644" pos:column="9">ps_submit_state<pos:position pos:line="644" pos:column="24"/></name> <argument_list pos:line="644" pos:column="25">(<argument><expr><literal type="string" pos:line="644" pos:column="26">"zombies"<pos:position pos:line="644" pos:column="35"/></literal></expr></argument>,  <argument><expr><name pos:line="644" pos:column="38">zombies<pos:position pos:line="644" pos:column="45"/></name></expr></argument>)<pos:position pos:line="644" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="644" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="645" pos:column="9">ps_submit_state<pos:position pos:line="645" pos:column="24"/></name> <argument_list pos:line="645" pos:column="25">(<argument><expr><literal type="string" pos:line="645" pos:column="26">"stopped"<pos:position pos:line="645" pos:column="35"/></literal></expr></argument>,  <argument><expr><name pos:line="645" pos:column="38">stopped<pos:position pos:line="645" pos:column="45"/></name></expr></argument>)<pos:position pos:line="645" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="645" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="646" pos:column="9">ps_submit_state<pos:position pos:line="646" pos:column="24"/></name> <argument_list pos:line="646" pos:column="25">(<argument><expr><literal type="string" pos:line="646" pos:column="26">"paging"<pos:position pos:line="646" pos:column="34"/></literal></expr></argument>,   <argument><expr><name pos:line="646" pos:column="38">paging<pos:position pos:line="646" pos:column="44"/></name></expr></argument>)<pos:position pos:line="646" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="646" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="647" pos:column="9">ps_submit_state<pos:position pos:line="647" pos:column="24"/></name> <argument_list pos:line="647" pos:column="25">(<argument><expr><literal type="string" pos:line="647" pos:column="26">"blocked"<pos:position pos:line="647" pos:column="35"/></literal></expr></argument>,  <argument><expr><name pos:line="647" pos:column="38">blocked<pos:position pos:line="647" pos:column="45"/></name></expr></argument>)<pos:position pos:line="647" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="647" pos:column="47"/></expr_stmt>

	<for pos:line="649" pos:column="9">for <control pos:line="649" pos:column="13">(<init><expr><name pos:line="649" pos:column="14">ps<pos:position pos:line="649" pos:column="16"/></name> <operator pos:line="649" pos:column="17">=<pos:position pos:line="649" pos:column="18"/></operator> <name pos:line="649" pos:column="19">list_head_g<pos:position pos:line="649" pos:column="30"/></name></expr>;<pos:position pos:line="649" pos:column="31"/></init> <condition><expr><name pos:line="649" pos:column="32">ps<pos:position pos:line="649" pos:column="34"/></name> <operator pos:line="649" pos:column="35">!=<pos:position pos:line="649" pos:column="37"/></operator> <name pos:line="649" pos:column="38">NULL<pos:position pos:line="649" pos:column="42"/></name></expr>;<pos:position pos:line="649" pos:column="43"/></condition> <incr><expr><name pos:line="649" pos:column="44">ps<pos:position pos:line="649" pos:column="46"/></name> <operator pos:line="649" pos:column="47">=<pos:position pos:line="649" pos:column="48"/></operator> <name><name pos:line="649" pos:column="49">ps<pos:position pos:line="649" pos:column="51"/></name><operator pos:line="649" pos:column="51">-&gt;<pos:position pos:line="649" pos:column="56"/></operator><name pos:line="649" pos:column="53">next<pos:position pos:line="649" pos:column="57"/></name></name></expr></incr>)<pos:position pos:line="649" pos:column="58"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="650" pos:column="17">ps_submit_proc_list<pos:position pos:line="650" pos:column="36"/></name> <argument_list pos:line="650" pos:column="37">(<argument><expr><name pos:line="650" pos:column="38">ps<pos:position pos:line="650" pos:column="40"/></name></expr></argument>)<pos:position pos:line="650" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="650" pos:column="42"/></expr_stmt></block></for>
<cpp:endif pos:line="651" pos:column="1">#<cpp:directive pos:line="651" pos:column="2">endif<pos:position pos:line="651" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="651" pos:column="8">/* HAVE_PROCINFO_H */</comment>

	<return pos:line="653" pos:column="9">return <expr><operator pos:line="653" pos:column="16">(<pos:position pos:line="653" pos:column="17"/></operator><literal type="number" pos:line="653" pos:column="17">0<pos:position pos:line="653" pos:column="18"/></literal><operator pos:line="653" pos:column="18">)<pos:position pos:line="653" pos:column="19"/></operator></expr>;<pos:position pos:line="653" pos:column="20"/></return>
}<pos:position pos:line="654" pos:column="2"/></block></function></unit>

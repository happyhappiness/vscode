<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1568_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">riemann_message_t<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type>
<name pos:line="2" pos:column="1">wrr_value_list_to_message<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name><name pos:line="2" pos:column="27">struct<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">riemann_host<pos:position pos:line="2" pos:column="46"/></name></name> <specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">host<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="60">/* {{{ */</comment>
                          <parameter><decl><type><name pos:line="3" pos:column="27">data_set_t<pos:position pos:line="3" pos:column="37"/></name> <specifier pos:line="3" pos:column="38">const<pos:position pos:line="3" pos:column="43"/></specifier> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">ds<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="49">value_list_t<pos:position pos:line="3" pos:column="61"/></name> <specifier pos:line="3" pos:column="62">const<pos:position pos:line="3" pos:column="67"/></specifier> <modifier pos:line="3" pos:column="68">*<pos:position pos:line="3" pos:column="69"/></modifier></type><name pos:line="3" pos:column="69">vl<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="4" pos:column="27">int<pos:position pos:line="4" pos:column="30"/></name> <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier></type><name pos:line="4" pos:column="32">statuses<pos:position pos:line="4" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="41"/></parameter_list> <block pos:line="4" pos:column="42">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">riemann_message_t<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">msg<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">gauge_t<pos:position pos:line="7" pos:column="10"/></name> <modifier pos:line="7" pos:column="11">*<pos:position pos:line="7" pos:column="12"/></modifier></type><name pos:line="7" pos:column="12">rates<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* Initialize the Msg structure. */</comment>
  <expr_stmt><expr><name pos:line="10" pos:column="3">msg<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">riemann_message_new<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">()<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">msg<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">==<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">NULL<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19"> <block pos:line="11" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"write_riemann plugin: riemann_message_new failed."<pos:position pos:line="12" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">NULL<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">)<pos:position pos:line="13" pos:column="18"/></operator></expr>;<pos:position pos:line="13" pos:column="19"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name><name pos:line="16" pos:column="7">host<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">store_rates<pos:position pos:line="16" pos:column="24"/></name></name></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25"> <block pos:line="16" pos:column="26">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">rates<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">uc_get_rate<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">ds<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="29">vl<pos:position pos:line="17" pos:column="31"/></name></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">rates<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">==<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">NULL<pos:position pos:line="18" pos:column="22"/></name></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23"> <block pos:line="18" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">ERROR<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><literal type="string" pos:line="19" pos:column="13">"write_riemann plugin: uc_get_rate failed."<pos:position pos:line="19" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">riemann_message_free<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">msg<pos:position pos:line="20" pos:column="31"/></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
      <return pos:line="21" pos:column="7">return <expr><operator pos:line="21" pos:column="14">(<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">NULL<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">)<pos:position pos:line="21" pos:column="20"/></operator></expr>;<pos:position pos:line="21" pos:column="21"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <for pos:line="25" pos:column="3">for <control pos:line="25" pos:column="7">(<init><expr><name pos:line="25" pos:column="8">i<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <literal type="number" pos:line="25" pos:column="12">0<pos:position pos:line="25" pos:column="13"/></literal></expr>;<pos:position pos:line="25" pos:column="14"/></init> <condition><expr><name pos:line="25" pos:column="15">i<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">&lt;<pos:position pos:line="25" pos:column="21"/></operator> <name><name pos:line="25" pos:column="19">vl<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">values_len<pos:position pos:line="25" pos:column="33"/></name></name></expr>;<pos:position pos:line="25" pos:column="34"/></condition> <incr><expr><name pos:line="25" pos:column="35">i<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">++<pos:position pos:line="25" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="39"/></control> <block pos:line="25" pos:column="40">{
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">riemann_event_t<pos:position pos:line="26" pos:column="20"/></name> <modifier pos:line="26" pos:column="21">*<pos:position pos:line="26" pos:column="22"/></modifier></type><name pos:line="26" pos:column="22">event<pos:position pos:line="26" pos:column="27"/></name></decl>;<pos:position pos:line="26" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name pos:line="28" pos:column="5">event<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <call><name pos:line="28" pos:column="13">wrr_value_to_event<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">host<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">ds<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">vl<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="46">(<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="47">int<pos:position pos:line="28" pos:column="50"/></name><operator pos:line="28" pos:column="50">)<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="51">i<pos:position pos:line="28" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="54">rates<pos:position pos:line="28" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="61">statuses<pos:position pos:line="28" pos:column="69"/></name><index pos:line="28" pos:column="69">[<expr><name pos:line="28" pos:column="70">i<pos:position pos:line="28" pos:column="71"/></name></expr>]<pos:position pos:line="28" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="74"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">event<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">==<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">NULL<pos:position pos:line="29" pos:column="22"/></name></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23"> <block pos:line="29" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">riemann_message_free<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">msg<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">sfree<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><name pos:line="31" pos:column="13">rates<pos:position pos:line="31" pos:column="18"/></name></expr></argument>)<pos:position pos:line="31" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>
      <return pos:line="32" pos:column="7">return <expr><operator pos:line="32" pos:column="14">(<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">NULL<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">)<pos:position pos:line="32" pos:column="20"/></operator></expr>;<pos:position pos:line="32" pos:column="21"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">riemann_message_append_events<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">msg<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="40">event<pos:position pos:line="34" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="47">NULL<pos:position pos:line="34" pos:column="51"/></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">sfree<pos:position pos:line="37" pos:column="8"/></name><argument_list pos:line="37" pos:column="8">(<argument><expr><name pos:line="37" pos:column="9">rates<pos:position pos:line="37" pos:column="14"/></name></expr></argument>)<pos:position pos:line="37" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="16"/></expr_stmt>
  <return pos:line="38" pos:column="3">return <expr><operator pos:line="38" pos:column="10">(<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="11">msg<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">)<pos:position pos:line="38" pos:column="15"/></operator></expr>;<pos:position pos:line="38" pos:column="16"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1243_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tss2_get_socket<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">FILE<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier><modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">ret_read_fh<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">FILE<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier><modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">ret_write_fh<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list> <block pos:line="1" pos:column="69">{
  <comment type="block" pos:line="2" pos:column="3">/*
   * Returns connected file objects or establishes the connection
   * if it's not already present
   */</comment>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">addrinfo<pos:position pos:line="6" pos:column="18"/></name></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">ai_head<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">sd<pos:position pos:line="7" pos:column="9"/></name> <init pos:line="7" pos:column="10">= <expr><operator pos:line="7" pos:column="12">-<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">status<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Check if we already got opened connections */</comment>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">(<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">global_read_fh<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">!=<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">NULL<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">)<pos:position pos:line="11" pos:column="31"/></operator> <operator pos:line="11" pos:column="32">&amp;&amp;<pos:position pos:line="11" pos:column="42"/></operator> <operator pos:line="11" pos:column="35">(<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="36">global_write_fh<pos:position pos:line="11" pos:column="51"/></name> <operator pos:line="11" pos:column="52">!=<pos:position pos:line="11" pos:column="54"/></operator> <name pos:line="11" pos:column="55">NULL<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">)<pos:position pos:line="11" pos:column="60"/></operator></expr>)<pos:position pos:line="11" pos:column="61"/></condition><then pos:line="11" pos:column="61"> <block pos:line="11" pos:column="62">{
    <comment type="block" pos:line="12" pos:column="5">/* If so, use them */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">ret_read_fh<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">!=<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="7">*<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">ret_read_fh<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">global_read_fh<pos:position pos:line="14" pos:column="36"/></name></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt></block></then></if>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">ret_write_fh<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">!=<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="25">NULL<pos:position pos:line="15" pos:column="29"/></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="16" pos:column="7">*<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">ret_write_fh<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="23">global_write_fh<pos:position pos:line="16" pos:column="38"/></name></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt></block></then></if>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">0<pos:position pos:line="17" pos:column="14"/></literal><operator pos:line="17" pos:column="14">)<pos:position pos:line="17" pos:column="15"/></operator></expr>;<pos:position pos:line="17" pos:column="16"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="20" pos:column="3">/* Get all addrs for this hostname */</comment>
  <decl_stmt><decl><type><name><name pos:line="21" pos:column="3">struct<pos:position pos:line="21" pos:column="9"/></name> <name pos:line="21" pos:column="10">addrinfo<pos:position pos:line="21" pos:column="18"/></name></name></type> <name pos:line="21" pos:column="19">ai_hints<pos:position pos:line="21" pos:column="27"/></name> <init pos:line="21" pos:column="28">= <expr><block pos:line="21" pos:column="30">{<expr><operator pos:line="21" pos:column="31">.<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="32">ai_family<pos:position pos:line="21" pos:column="41"/></name> <operator pos:line="21" pos:column="42">=<pos:position pos:line="21" pos:column="43"/></operator> <name pos:line="21" pos:column="44">AF_UNSPEC<pos:position pos:line="21" pos:column="53"/></name></expr>,
                              <expr><operator pos:line="22" pos:column="31">.<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="32">ai_flags<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">=<pos:position pos:line="22" pos:column="42"/></operator> <name pos:line="22" pos:column="43">AI_ADDRCONFIG<pos:position pos:line="22" pos:column="56"/></name></expr>,
                              <expr><operator pos:line="23" pos:column="31">.<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">ai_socktype<pos:position pos:line="23" pos:column="43"/></name> <operator pos:line="23" pos:column="44">=<pos:position pos:line="23" pos:column="45"/></operator> <name pos:line="23" pos:column="46">SOCK_STREAM<pos:position pos:line="23" pos:column="57"/></name></expr>}<pos:position pos:line="23" pos:column="58"/></block></expr></init></decl>;<pos:position pos:line="23" pos:column="59"/></decl_stmt>

  <expr_stmt><expr><name pos:line="25" pos:column="3">status<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">getaddrinfo<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><ternary><condition><expr><operator pos:line="25" pos:column="24">(<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">config_host<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">!=<pos:position pos:line="25" pos:column="39"/></operator> <name pos:line="25" pos:column="40">NULL<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">)<pos:position pos:line="25" pos:column="45"/></operator></expr> ?<pos:position pos:line="25" pos:column="47"/></condition><then pos:line="25" pos:column="47"> <expr><name pos:line="25" pos:column="48">config_host<pos:position pos:line="25" pos:column="59"/></name></expr> <pos:position pos:line="25" pos:column="60"/></then><else pos:line="25" pos:column="60">: <expr><name pos:line="25" pos:column="62">DEFAULT_HOST<pos:position pos:line="25" pos:column="74"/></name></expr></else></ternary></expr></argument>,
                       <argument><expr><ternary><condition><expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">config_port<pos:position pos:line="26" pos:column="36"/></name> <operator pos:line="26" pos:column="37">!=<pos:position pos:line="26" pos:column="39"/></operator> <name pos:line="26" pos:column="40">NULL<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">)<pos:position pos:line="26" pos:column="45"/></operator></expr> ?<pos:position pos:line="26" pos:column="47"/></condition><then pos:line="26" pos:column="47"> <expr><name pos:line="26" pos:column="48">config_port<pos:position pos:line="26" pos:column="59"/></name></expr> <pos:position pos:line="26" pos:column="60"/></then><else pos:line="26" pos:column="60">: <expr><name pos:line="26" pos:column="62">DEFAULT_PORT<pos:position pos:line="26" pos:column="74"/></name></expr></else></ternary></expr></argument>,
                       <argument><expr><operator pos:line="27" pos:column="24">&amp;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="25">ai_hints<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="35">&amp;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="36">ai_head<pos:position pos:line="27" pos:column="43"/></name></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">status<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">!=<pos:position pos:line="28" pos:column="16"/></operator> <literal type="number" pos:line="28" pos:column="17">0<pos:position pos:line="28" pos:column="18"/></literal></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19"> <block pos:line="28" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">ERROR<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><literal type="string" pos:line="29" pos:column="11">"teamspeak2 plugin: getaddrinfo failed: %s"<pos:position pos:line="29" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="56">gai_strerror<pos:position pos:line="29" pos:column="68"/></name><argument_list pos:line="29" pos:column="68">(<argument><expr><name pos:line="29" pos:column="69">status<pos:position pos:line="29" pos:column="75"/></name></expr></argument>)<pos:position pos:line="29" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="78"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><operator pos:line="30" pos:column="13">-<pos:position pos:line="30" pos:column="14"/></operator><literal type="number" pos:line="30" pos:column="14">1<pos:position pos:line="30" pos:column="15"/></literal><operator pos:line="30" pos:column="15">)<pos:position pos:line="30" pos:column="16"/></operator></expr>;<pos:position pos:line="30" pos:column="17"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="33" pos:column="3">/* Try all given hosts until we can connect to one */</comment>
  <for pos:line="34" pos:column="3">for <control pos:line="34" pos:column="7">(<init><decl><type><name><name pos:line="34" pos:column="8">struct<pos:position pos:line="34" pos:column="14"/></name> <name pos:line="34" pos:column="15">addrinfo<pos:position pos:line="34" pos:column="23"/></name></name> <modifier pos:line="34" pos:column="24">*<pos:position pos:line="34" pos:column="25"/></modifier><name pos:line="34" pos:column="25">ai_ptr<pos:position pos:line="34" pos:column="31"/></name></type> <init pos:line="34" pos:column="32">= <expr><name pos:line="34" pos:column="34">ai_head<pos:position pos:line="34" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="34" pos:column="42"/></init> <condition><expr><name pos:line="34" pos:column="43">ai_ptr<pos:position pos:line="34" pos:column="49"/></name> <operator pos:line="34" pos:column="50">!=<pos:position pos:line="34" pos:column="52"/></operator> <name pos:line="34" pos:column="53">NULL<pos:position pos:line="34" pos:column="57"/></name></expr>;<pos:position pos:line="34" pos:column="58"/></condition>
       <incr><expr><name pos:line="35" pos:column="8">ai_ptr<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <name><name pos:line="35" pos:column="17">ai_ptr<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">ai_next<pos:position pos:line="35" pos:column="32"/></name></name></expr></incr>)<pos:position pos:line="35" pos:column="33"/></control> <block pos:line="35" pos:column="34">{
    <comment type="block" pos:line="36" pos:column="5">/* Create socket */</comment>
    <expr_stmt><expr><name pos:line="37" pos:column="5">sd<pos:position pos:line="37" pos:column="7"/></name> <operator pos:line="37" pos:column="8">=<pos:position pos:line="37" pos:column="9"/></operator> <call><name pos:line="37" pos:column="10">socket<pos:position pos:line="37" pos:column="16"/></name><argument_list pos:line="37" pos:column="16">(<argument><expr><name><name pos:line="37" pos:column="17">ai_ptr<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">-&gt;<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="25">ai_family<pos:position pos:line="37" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="36">ai_ptr<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">-&gt;<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="44">ai_socktype<pos:position pos:line="37" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="57">ai_ptr<pos:position pos:line="37" pos:column="63"/></name><operator pos:line="37" pos:column="63">-&gt;<pos:position pos:line="37" pos:column="68"/></operator><name pos:line="37" pos:column="65">ai_protocol<pos:position pos:line="37" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="78"/></expr_stmt>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">sd<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">&lt;<pos:position pos:line="38" pos:column="16"/></operator> <literal type="number" pos:line="38" pos:column="14">0<pos:position pos:line="38" pos:column="15"/></literal></expr>)<pos:position pos:line="38" pos:column="16"/></condition><then pos:line="38" pos:column="16"> <block pos:line="38" pos:column="17">{
      <decl_stmt><decl><type><name pos:line="39" pos:column="7">char<pos:position pos:line="39" pos:column="11"/></name></type> <name><name pos:line="39" pos:column="12">errbuf<pos:position pos:line="39" pos:column="18"/></name><index pos:line="39" pos:column="18">[<expr><literal type="number" pos:line="39" pos:column="19">1024<pos:position pos:line="39" pos:column="23"/></literal></expr>]<pos:position pos:line="39" pos:column="24"/></index></name></decl>;<pos:position pos:line="39" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">WARNING<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><literal type="string" pos:line="40" pos:column="15">"teamspeak2 plugin: socket failed: %s"<pos:position pos:line="40" pos:column="53"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="41" pos:column="15">sstrerror<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">errno<pos:position pos:line="41" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="32">errbuf<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="40">sizeof<argument_list pos:line="41" pos:column="46">(<argument><expr><name pos:line="41" pos:column="47">errbuf<pos:position pos:line="41" pos:column="53"/></name></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="57"/></expr_stmt>
      <continue pos:line="42" pos:column="7">continue;<pos:position pos:line="42" pos:column="16"/></continue>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="45" pos:column="5">/* Try to connect */</comment>
    <expr_stmt><expr><name pos:line="46" pos:column="5">status<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">connect<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">sd<pos:position pos:line="46" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="26">ai_ptr<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">-&gt;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="34">ai_addr<pos:position pos:line="46" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="43">ai_ptr<pos:position pos:line="46" pos:column="49"/></name><operator pos:line="46" pos:column="49">-&gt;<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="51">ai_addrlen<pos:position pos:line="46" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="63"/></expr_stmt>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">status<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">!=<pos:position pos:line="47" pos:column="18"/></operator> <literal type="number" pos:line="47" pos:column="19">0<pos:position pos:line="47" pos:column="20"/></literal></expr>)<pos:position pos:line="47" pos:column="21"/></condition><then pos:line="47" pos:column="21"> <block pos:line="47" pos:column="22">{
      <decl_stmt><decl><type><name pos:line="48" pos:column="7">char<pos:position pos:line="48" pos:column="11"/></name></type> <name><name pos:line="48" pos:column="12">errbuf<pos:position pos:line="48" pos:column="18"/></name><index pos:line="48" pos:column="18">[<expr><literal type="number" pos:line="48" pos:column="19">1024<pos:position pos:line="48" pos:column="23"/></literal></expr>]<pos:position pos:line="48" pos:column="24"/></index></name></decl>;<pos:position pos:line="48" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">WARNING<pos:position pos:line="49" pos:column="14"/></name><argument_list pos:line="49" pos:column="14">(<argument><expr><literal type="string" pos:line="49" pos:column="15">"teamspeak2 plugin: connect failed: %s"<pos:position pos:line="49" pos:column="54"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="50" pos:column="15">sstrerror<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><name pos:line="50" pos:column="25">errno<pos:position pos:line="50" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="32">errbuf<pos:position pos:line="50" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="40">sizeof<argument_list pos:line="50" pos:column="46">(<argument><expr><name pos:line="50" pos:column="47">errbuf<pos:position pos:line="50" pos:column="53"/></name></expr></argument>)<pos:position pos:line="50" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">close<pos:position pos:line="51" pos:column="12"/></name><argument_list pos:line="51" pos:column="12">(<argument><expr><name pos:line="51" pos:column="13">sd<pos:position pos:line="51" pos:column="15"/></name></expr></argument>)<pos:position pos:line="51" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="52" pos:column="7">sd<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <operator pos:line="52" pos:column="12">-<pos:position pos:line="52" pos:column="13"/></operator><literal type="number" pos:line="52" pos:column="13">1<pos:position pos:line="52" pos:column="14"/></literal></expr>;<pos:position pos:line="52" pos:column="15"/></expr_stmt>
      <continue pos:line="53" pos:column="7">continue;<pos:position pos:line="53" pos:column="16"/></continue>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="56" pos:column="5">/*
     * Success, we can break. Don't need more than one connection
     */</comment>
    <break pos:line="59" pos:column="5">break;<pos:position pos:line="59" pos:column="11"/></break>
  }<pos:position pos:line="60" pos:column="4"/></block></for> <comment type="block" pos:line="60" pos:column="5">/* for (ai_ptr) */</comment>

  <expr_stmt><expr><call><name pos:line="62" pos:column="3">freeaddrinfo<pos:position pos:line="62" pos:column="15"/></name><argument_list pos:line="62" pos:column="15">(<argument><expr><name pos:line="62" pos:column="16">ai_head<pos:position pos:line="62" pos:column="23"/></name></expr></argument>)<pos:position pos:line="62" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="64" pos:column="3">/* Check if we really got connected */</comment>
  <if pos:line="65" pos:column="3">if <condition pos:line="65" pos:column="6">(<expr><name pos:line="65" pos:column="7">sd<pos:position pos:line="65" pos:column="9"/></name> <operator pos:line="65" pos:column="10">&lt;<pos:position pos:line="65" pos:column="14"/></operator> <literal type="number" pos:line="65" pos:column="12">0<pos:position pos:line="65" pos:column="13"/></literal></expr>)<pos:position pos:line="65" pos:column="14"/></condition><then pos:line="65" pos:column="14">
    <block type="pseudo"><return pos:line="66" pos:column="5">return <expr><operator pos:line="66" pos:column="12">(<pos:position pos:line="66" pos:column="13"/></operator><operator pos:line="66" pos:column="13">-<pos:position pos:line="66" pos:column="14"/></operator><literal type="number" pos:line="66" pos:column="14">1<pos:position pos:line="66" pos:column="15"/></literal><operator pos:line="66" pos:column="15">)<pos:position pos:line="66" pos:column="16"/></operator></expr>;<pos:position pos:line="66" pos:column="17"/></return></block></then></if>

  <comment type="block" pos:line="68" pos:column="3">/* Create file objects from sockets */</comment>
  <expr_stmt><expr><name pos:line="69" pos:column="3">global_read_fh<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <call><name pos:line="69" pos:column="20">fdopen<pos:position pos:line="69" pos:column="26"/></name><argument_list pos:line="69" pos:column="26">(<argument><expr><name pos:line="69" pos:column="27">sd<pos:position pos:line="69" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="31">"r"<pos:position pos:line="69" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="36"/></expr_stmt>
  <if pos:line="70" pos:column="3">if <condition pos:line="70" pos:column="6">(<expr><name pos:line="70" pos:column="7">global_read_fh<pos:position pos:line="70" pos:column="21"/></name> <operator pos:line="70" pos:column="22">==<pos:position pos:line="70" pos:column="24"/></operator> <name pos:line="70" pos:column="25">NULL<pos:position pos:line="70" pos:column="29"/></name></expr>)<pos:position pos:line="70" pos:column="30"/></condition><then pos:line="70" pos:column="30"> <block pos:line="70" pos:column="31">{
    <decl_stmt><decl><type><name pos:line="71" pos:column="5">char<pos:position pos:line="71" pos:column="9"/></name></type> <name><name pos:line="71" pos:column="10">errbuf<pos:position pos:line="71" pos:column="16"/></name><index pos:line="71" pos:column="16">[<expr><literal type="number" pos:line="71" pos:column="17">1024<pos:position pos:line="71" pos:column="21"/></literal></expr>]<pos:position pos:line="71" pos:column="22"/></index></name></decl>;<pos:position pos:line="71" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">ERROR<pos:position pos:line="72" pos:column="10"/></name><argument_list pos:line="72" pos:column="10">(<argument><expr><literal type="string" pos:line="72" pos:column="11">"teamspeak2 plugin: fdopen failed: %s"<pos:position pos:line="72" pos:column="49"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="73" pos:column="11">sstrerror<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">(<argument><expr><name pos:line="73" pos:column="21">errno<pos:position pos:line="73" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="28">errbuf<pos:position pos:line="73" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="36">sizeof<argument_list pos:line="73" pos:column="42">(<argument><expr><name pos:line="73" pos:column="43">errbuf<pos:position pos:line="73" pos:column="49"/></name></expr></argument>)<pos:position pos:line="73" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="73" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">close<pos:position pos:line="74" pos:column="10"/></name><argument_list pos:line="74" pos:column="10">(<argument><expr><name pos:line="74" pos:column="11">sd<pos:position pos:line="74" pos:column="13"/></name></expr></argument>)<pos:position pos:line="74" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="15"/></expr_stmt>
    <return pos:line="75" pos:column="5">return <expr><operator pos:line="75" pos:column="12">(<pos:position pos:line="75" pos:column="13"/></operator><operator pos:line="75" pos:column="13">-<pos:position pos:line="75" pos:column="14"/></operator><literal type="number" pos:line="75" pos:column="14">1<pos:position pos:line="75" pos:column="15"/></literal><operator pos:line="75" pos:column="15">)<pos:position pos:line="75" pos:column="16"/></operator></expr>;<pos:position pos:line="75" pos:column="17"/></return>
  }<pos:position pos:line="76" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="78" pos:column="3">global_write_fh<pos:position pos:line="78" pos:column="18"/></name> <operator pos:line="78" pos:column="19">=<pos:position pos:line="78" pos:column="20"/></operator> <call><name pos:line="78" pos:column="21">fdopen<pos:position pos:line="78" pos:column="27"/></name><argument_list pos:line="78" pos:column="27">(<argument><expr><name pos:line="78" pos:column="28">sd<pos:position pos:line="78" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="32">"w"<pos:position pos:line="78" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="37"/></expr_stmt>
  <if pos:line="79" pos:column="3">if <condition pos:line="79" pos:column="6">(<expr><name pos:line="79" pos:column="7">global_write_fh<pos:position pos:line="79" pos:column="22"/></name> <operator pos:line="79" pos:column="23">==<pos:position pos:line="79" pos:column="25"/></operator> <name pos:line="79" pos:column="26">NULL<pos:position pos:line="79" pos:column="30"/></name></expr>)<pos:position pos:line="79" pos:column="31"/></condition><then pos:line="79" pos:column="31"> <block pos:line="79" pos:column="32">{
    <decl_stmt><decl><type><name pos:line="80" pos:column="5">char<pos:position pos:line="80" pos:column="9"/></name></type> <name><name pos:line="80" pos:column="10">errbuf<pos:position pos:line="80" pos:column="16"/></name><index pos:line="80" pos:column="16">[<expr><literal type="number" pos:line="80" pos:column="17">1024<pos:position pos:line="80" pos:column="21"/></literal></expr>]<pos:position pos:line="80" pos:column="22"/></index></name></decl>;<pos:position pos:line="80" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">ERROR<pos:position pos:line="81" pos:column="10"/></name><argument_list pos:line="81" pos:column="10">(<argument><expr><literal type="string" pos:line="81" pos:column="11">"teamspeak2 plugin: fdopen failed: %s"<pos:position pos:line="81" pos:column="49"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="82" pos:column="11">sstrerror<pos:position pos:line="82" pos:column="20"/></name><argument_list pos:line="82" pos:column="20">(<argument><expr><name pos:line="82" pos:column="21">errno<pos:position pos:line="82" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="28">errbuf<pos:position pos:line="82" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="36">sizeof<argument_list pos:line="82" pos:column="42">(<argument><expr><name pos:line="82" pos:column="43">errbuf<pos:position pos:line="82" pos:column="49"/></name></expr></argument>)<pos:position pos:line="82" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="82" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">tss2_close_socket<pos:position pos:line="83" pos:column="22"/></name><argument_list pos:line="83" pos:column="22">()<pos:position pos:line="83" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="25"/></expr_stmt>
    <return pos:line="84" pos:column="5">return <expr><operator pos:line="84" pos:column="12">(<pos:position pos:line="84" pos:column="13"/></operator><operator pos:line="84" pos:column="13">-<pos:position pos:line="84" pos:column="14"/></operator><literal type="number" pos:line="84" pos:column="14">1<pos:position pos:line="84" pos:column="15"/></literal><operator pos:line="84" pos:column="15">)<pos:position pos:line="84" pos:column="16"/></operator></expr>;<pos:position pos:line="84" pos:column="17"/></return>
  }<pos:position pos:line="85" pos:column="4"/></block></then></if>

  <block pos:line="87" pos:column="3">{ <comment type="block" pos:line="87" pos:column="5">/* Check that the server correctly identifies itself. */</comment>
    <decl_stmt><decl><type><name pos:line="88" pos:column="5">char<pos:position pos:line="88" pos:column="9"/></name></type> <name><name pos:line="88" pos:column="10">buffer<pos:position pos:line="88" pos:column="16"/></name><index pos:line="88" pos:column="16">[<expr><literal type="number" pos:line="88" pos:column="17">4096<pos:position pos:line="88" pos:column="21"/></literal></expr>]<pos:position pos:line="88" pos:column="22"/></index></name></decl>;<pos:position pos:line="88" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="89" pos:column="5">char<pos:position pos:line="89" pos:column="9"/></name> <modifier pos:line="89" pos:column="10">*<pos:position pos:line="89" pos:column="11"/></modifier></type><name pos:line="89" pos:column="11">buffer_ptr<pos:position pos:line="89" pos:column="21"/></name></decl>;<pos:position pos:line="89" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><name pos:line="91" pos:column="5">buffer_ptr<pos:position pos:line="91" pos:column="15"/></name> <operator pos:line="91" pos:column="16">=<pos:position pos:line="91" pos:column="17"/></operator> <call><name pos:line="91" pos:column="18">fgets<pos:position pos:line="91" pos:column="23"/></name><argument_list pos:line="91" pos:column="23">(<argument><expr><name pos:line="91" pos:column="24">buffer<pos:position pos:line="91" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="91" pos:column="32">sizeof<argument_list pos:line="91" pos:column="38">(<argument><expr><name pos:line="91" pos:column="39">buffer<pos:position pos:line="91" pos:column="45"/></name></expr></argument>)<pos:position pos:line="91" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="91" pos:column="48">global_read_fh<pos:position pos:line="91" pos:column="62"/></name></expr></argument>)<pos:position pos:line="91" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="64"/></expr_stmt>
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name pos:line="92" pos:column="9">buffer_ptr<pos:position pos:line="92" pos:column="19"/></name> <operator pos:line="92" pos:column="20">==<pos:position pos:line="92" pos:column="22"/></operator> <name pos:line="92" pos:column="23">NULL<pos:position pos:line="92" pos:column="27"/></name></expr>)<pos:position pos:line="92" pos:column="28"/></condition><then pos:line="92" pos:column="28"> <block pos:line="92" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="93" pos:column="7">WARNING<pos:position pos:line="93" pos:column="14"/></name><argument_list pos:line="93" pos:column="14">(<argument><expr><literal type="string" pos:line="93" pos:column="15">"teamspeak2 plugin: Unexpected EOF received "<pos:position pos:line="93" pos:column="60"/></literal>
              <literal type="string" pos:line="94" pos:column="15">"from remote host %s:%s."<pos:position pos:line="94" pos:column="40"/></literal></expr></argument>,
              <argument><expr><ternary><condition><expr><name pos:line="95" pos:column="15">config_host<pos:position pos:line="95" pos:column="26"/></name></expr> ?<pos:position pos:line="95" pos:column="28"/></condition><then pos:line="95" pos:column="28"> <expr><name pos:line="95" pos:column="29">config_host<pos:position pos:line="95" pos:column="40"/></name></expr> <pos:position pos:line="95" pos:column="41"/></then><else pos:line="95" pos:column="41">: <expr><name pos:line="95" pos:column="43">DEFAULT_HOST<pos:position pos:line="95" pos:column="55"/></name></expr></else></ternary></expr></argument>,
              <argument><expr><ternary><condition><expr><name pos:line="96" pos:column="15">config_port<pos:position pos:line="96" pos:column="26"/></name></expr> ?<pos:position pos:line="96" pos:column="28"/></condition><then pos:line="96" pos:column="28"> <expr><name pos:line="96" pos:column="29">config_port<pos:position pos:line="96" pos:column="40"/></name></expr> <pos:position pos:line="96" pos:column="41"/></then><else pos:line="96" pos:column="41">: <expr><name pos:line="96" pos:column="43">DEFAULT_PORT<pos:position pos:line="96" pos:column="55"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="96" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="97" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="98" pos:column="5">buffer<pos:position pos:line="98" pos:column="11"/></name><index pos:line="98" pos:column="11">[<expr><sizeof pos:line="98" pos:column="12">sizeof<argument_list pos:line="98" pos:column="18">(<argument><expr><name pos:line="98" pos:column="19">buffer<pos:position pos:line="98" pos:column="25"/></name></expr></argument>)<pos:position pos:line="98" pos:column="26"/></argument_list></sizeof> <operator pos:line="98" pos:column="27">-<pos:position pos:line="98" pos:column="28"/></operator> <literal type="number" pos:line="98" pos:column="29">1<pos:position pos:line="98" pos:column="30"/></literal></expr>]<pos:position pos:line="98" pos:column="31"/></index></name> <operator pos:line="98" pos:column="32">=<pos:position pos:line="98" pos:column="33"/></operator> <literal type="number" pos:line="98" pos:column="34">0<pos:position pos:line="98" pos:column="35"/></literal></expr>;<pos:position pos:line="98" pos:column="36"/></expr_stmt>

    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><call><name pos:line="100" pos:column="9">memcmp<pos:position pos:line="100" pos:column="15"/></name><argument_list pos:line="100" pos:column="15">(<argument><expr><literal type="string" pos:line="100" pos:column="16">"[TS]\r\n"<pos:position pos:line="100" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="28">buffer<pos:position pos:line="100" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="36">6<pos:position pos:line="100" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="38"/></argument_list></call> <operator pos:line="100" pos:column="39">!=<pos:position pos:line="100" pos:column="41"/></operator> <literal type="number" pos:line="100" pos:column="42">0<pos:position pos:line="100" pos:column="43"/></literal></expr>)<pos:position pos:line="100" pos:column="44"/></condition><then pos:line="100" pos:column="44"> <block pos:line="100" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="101" pos:column="7">ERROR<pos:position pos:line="101" pos:column="12"/></name><argument_list pos:line="101" pos:column="12">(<argument><expr><literal type="string" pos:line="101" pos:column="13">"teamspeak2 plugin: Unexpected response when connecting "<pos:position pos:line="101" pos:column="70"/></literal>
            <literal type="string" pos:line="102" pos:column="13">"to server. Expected ``[TS]'', got ``%s''."<pos:position pos:line="102" pos:column="56"/></literal></expr></argument>,
            <argument><expr><name pos:line="103" pos:column="13">buffer<pos:position pos:line="103" pos:column="19"/></name></expr></argument>)<pos:position pos:line="103" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="104" pos:column="7">tss2_close_socket<pos:position pos:line="104" pos:column="24"/></name><argument_list pos:line="104" pos:column="24">()<pos:position pos:line="104" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="27"/></expr_stmt>
      <return pos:line="105" pos:column="7">return <expr><operator pos:line="105" pos:column="14">(<pos:position pos:line="105" pos:column="15"/></operator><operator pos:line="105" pos:column="15">-<pos:position pos:line="105" pos:column="16"/></operator><literal type="number" pos:line="105" pos:column="16">1<pos:position pos:line="105" pos:column="17"/></literal><operator pos:line="105" pos:column="17">)<pos:position pos:line="105" pos:column="18"/></operator></expr>;<pos:position pos:line="105" pos:column="19"/></return>
    }<pos:position pos:line="106" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="107" pos:column="5">DEBUG<pos:position pos:line="107" pos:column="10"/></name><argument_list pos:line="107" pos:column="10">(<argument><expr><literal type="string" pos:line="107" pos:column="11">"teamspeak2 plugin: Server send correct banner, connected!"<pos:position pos:line="107" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="72"/></expr_stmt>
  }<pos:position pos:line="108" pos:column="4"/></block>

  <comment type="block" pos:line="110" pos:column="3">/* Copy the new filehandles to the given pointers */</comment>
  <if pos:line="111" pos:column="3">if <condition pos:line="111" pos:column="6">(<expr><name pos:line="111" pos:column="7">ret_read_fh<pos:position pos:line="111" pos:column="18"/></name> <operator pos:line="111" pos:column="19">!=<pos:position pos:line="111" pos:column="21"/></operator> <name pos:line="111" pos:column="22">NULL<pos:position pos:line="111" pos:column="26"/></name></expr>)<pos:position pos:line="111" pos:column="27"/></condition><then pos:line="111" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="112" pos:column="5">*<pos:position pos:line="112" pos:column="6"/></operator><name pos:line="112" pos:column="6">ret_read_fh<pos:position pos:line="112" pos:column="17"/></name> <operator pos:line="112" pos:column="18">=<pos:position pos:line="112" pos:column="19"/></operator> <name pos:line="112" pos:column="20">global_read_fh<pos:position pos:line="112" pos:column="34"/></name></expr>;<pos:position pos:line="112" pos:column="35"/></expr_stmt></block></then></if>
  <if pos:line="113" pos:column="3">if <condition pos:line="113" pos:column="6">(<expr><name pos:line="113" pos:column="7">ret_write_fh<pos:position pos:line="113" pos:column="19"/></name> <operator pos:line="113" pos:column="20">!=<pos:position pos:line="113" pos:column="22"/></operator> <name pos:line="113" pos:column="23">NULL<pos:position pos:line="113" pos:column="27"/></name></expr>)<pos:position pos:line="113" pos:column="28"/></condition><then pos:line="113" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="114" pos:column="5">*<pos:position pos:line="114" pos:column="6"/></operator><name pos:line="114" pos:column="6">ret_write_fh<pos:position pos:line="114" pos:column="18"/></name> <operator pos:line="114" pos:column="19">=<pos:position pos:line="114" pos:column="20"/></operator> <name pos:line="114" pos:column="21">global_write_fh<pos:position pos:line="114" pos:column="36"/></name></expr>;<pos:position pos:line="114" pos:column="37"/></expr_stmt></block></then></if>
  <return pos:line="115" pos:column="3">return <expr><operator pos:line="115" pos:column="10">(<pos:position pos:line="115" pos:column="11"/></operator><literal type="number" pos:line="115" pos:column="11">0<pos:position pos:line="115" pos:column="12"/></literal><operator pos:line="115" pos:column="12">)<pos:position pos:line="115" pos:column="13"/></operator></expr>;<pos:position pos:line="115" pos:column="14"/></return>
}<pos:position pos:line="116" pos:column="2"/></block></function></unit>

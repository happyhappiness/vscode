<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_824_collectd-4.3.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ping_get_ident<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">fd<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">int<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">did_seed<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><literal type="number" pos:line="4" pos:column="31">0<pos:position pos:line="4" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">retval<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">did_seed<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">==<pos:position pos:line="8" pos:column="24"/></operator> <literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27">
	<block pos:line="9" pos:column="9">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">(<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">fd<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <call><name pos:line="10" pos:column="27">open<pos:position pos:line="10" pos:column="31"/></name> <argument_list pos:line="10" pos:column="32">(<argument><expr><literal type="string" pos:line="10" pos:column="33">"/dev/urandom"<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">O_RDONLY<pos:position pos:line="10" pos:column="57"/></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call><operator pos:line="10" pos:column="58">)<pos:position pos:line="10" pos:column="59"/></operator> <operator pos:line="10" pos:column="60">!=<pos:position pos:line="10" pos:column="62"/></operator> <operator pos:line="10" pos:column="63">-<pos:position pos:line="10" pos:column="64"/></operator><literal type="number" pos:line="10" pos:column="64">1<pos:position pos:line="10" pos:column="65"/></literal></expr>)<pos:position pos:line="10" pos:column="66"/></condition><then pos:line="10" pos:column="66">
		<block pos:line="11" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="12" pos:column="25">unsigned<pos:position pos:line="12" pos:column="33"/></name> <name pos:line="12" pos:column="34">int<pos:position pos:line="12" pos:column="37"/></name></type> <name pos:line="12" pos:column="38">seed<pos:position pos:line="12" pos:column="42"/></name></decl>;<pos:position pos:line="12" pos:column="43"/></decl_stmt>

			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><call><name pos:line="14" pos:column="29">read<pos:position pos:line="14" pos:column="33"/></name> <argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">fd<pos:position pos:line="14" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="39">&amp;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="40">seed<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="46">sizeof <argument_list pos:line="14" pos:column="53">(<argument><expr><name pos:line="14" pos:column="54">seed<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call> <operator pos:line="14" pos:column="61">!=<pos:position pos:line="14" pos:column="63"/></operator> <operator pos:line="14" pos:column="64">-<pos:position pos:line="14" pos:column="65"/></operator><literal type="number" pos:line="14" pos:column="65">1<pos:position pos:line="14" pos:column="66"/></literal></expr>)<pos:position pos:line="14" pos:column="67"/></condition><then pos:line="14" pos:column="67">
			<block pos:line="15" pos:column="25">{
				<expr_stmt><expr><name pos:line="16" pos:column="33">did_seed<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">=<pos:position pos:line="16" pos:column="43"/></operator> <literal type="number" pos:line="16" pos:column="44">1<pos:position pos:line="16" pos:column="45"/></literal></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="17" pos:column="33">dprintf<pos:position pos:line="17" pos:column="40"/></name> <argument_list pos:line="17" pos:column="41">(<argument><expr><literal type="string" pos:line="17" pos:column="42">"Random seed: %i\n"<pos:position pos:line="17" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="63">seed<pos:position pos:line="17" pos:column="67"/></name></expr></argument>)<pos:position pos:line="17" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="69"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="18" pos:column="33">srandom<pos:position pos:line="18" pos:column="40"/></name> <argument_list pos:line="18" pos:column="41">(<argument><expr><name pos:line="18" pos:column="42">seed<pos:position pos:line="18" pos:column="46"/></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="19" pos:column="26"/></block></then></if>

			<expr_stmt><expr><call><name pos:line="21" pos:column="25">close<pos:position pos:line="21" pos:column="30"/></name> <argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">fd<pos:position pos:line="21" pos:column="34"/></name></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then>
		<else pos:line="23" pos:column="17">else
		<block pos:line="24" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">dprintf<pos:position pos:line="25" pos:column="32"/></name> <argument_list pos:line="25" pos:column="33">(<argument><expr><literal type="string" pos:line="25" pos:column="34">"open (/dev/urandom): %s\n"<pos:position pos:line="25" pos:column="61"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="63">strerror<pos:position pos:line="25" pos:column="71"/></name> <argument_list pos:line="25" pos:column="72">(<argument><expr><name pos:line="25" pos:column="73">errno<pos:position pos:line="25" pos:column="78"/></name></expr></argument>)<pos:position pos:line="25" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="81"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></else></if>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="29" pos:column="9">retval<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <operator pos:line="29" pos:column="18">(<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">int<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">)<pos:position pos:line="29" pos:column="23"/></operator> <call><name pos:line="29" pos:column="24">random<pos:position pos:line="29" pos:column="30"/></name> <argument_list pos:line="29" pos:column="31">()<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">dprintf<pos:position pos:line="31" pos:column="16"/></name> <argument_list pos:line="31" pos:column="17">(<argument><expr><literal type="string" pos:line="31" pos:column="18">"Random number: %i\n"<pos:position pos:line="31" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="41">retval<pos:position pos:line="31" pos:column="47"/></name></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>
	
	<return pos:line="33" pos:column="9">return <expr><operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">retval<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">)<pos:position pos:line="33" pos:column="24"/></operator></expr>;<pos:position pos:line="33" pos:column="25"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

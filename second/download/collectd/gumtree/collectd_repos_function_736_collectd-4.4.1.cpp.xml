<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_736_collectd-4.4.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_part_string<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">ret_buffer<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">ret_buffer_len<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">type<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">str<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">str_len<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">buffer<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">buffer_len<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="7" pos:column="9">uint16_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">pkg_type<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">uint16_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">pkg_length<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">offset<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">buffer_len<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <literal type="number" pos:line="12" pos:column="22">2<pos:position pos:line="12" pos:column="23"/></literal> <operator pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></operator> <sizeof pos:line="12" pos:column="26">sizeof <argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">uint16_t<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></sizeof> <operator pos:line="12" pos:column="44">+<pos:position pos:line="12" pos:column="45"/></operator> <name pos:line="12" pos:column="46">str_len<pos:position pos:line="12" pos:column="53"/></name> <operator pos:line="12" pos:column="54">+<pos:position pos:line="12" pos:column="55"/></operator> <literal type="number" pos:line="12" pos:column="56">1<pos:position pos:line="12" pos:column="57"/></literal></expr>;<pos:position pos:line="12" pos:column="58"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">ret_buffer_len<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">&lt;<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="31">buffer_len<pos:position pos:line="13" pos:column="41"/></name></expr>)<pos:position pos:line="13" pos:column="42"/></condition><then pos:line="13" pos:column="42">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="16" pos:column="9">pkg_type<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <call><name pos:line="16" pos:column="20">htons<pos:position pos:line="16" pos:column="25"/></name> <argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">type<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">pkg_length<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <call><name pos:line="17" pos:column="22">htons<pos:position pos:line="17" pos:column="27"/></name> <argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">buffer_len<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>

	<expr_stmt><expr><name pos:line="19" pos:column="9">buffer<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <operator pos:line="19" pos:column="18">*<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">ret_buffer<pos:position pos:line="19" pos:column="29"/></name></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">offset<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">memcpy<pos:position pos:line="21" pos:column="15"/></name> <argument_list pos:line="21" pos:column="16">(<argument><expr><name pos:line="21" pos:column="17">buffer<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">+<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">offset<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="34">(<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">void<pos:position pos:line="21" pos:column="39"/></name> <operator pos:line="21" pos:column="40">*<pos:position pos:line="21" pos:column="41"/></operator><operator pos:line="21" pos:column="41">)<pos:position pos:line="21" pos:column="42"/></operator> <operator pos:line="21" pos:column="43">&amp;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="44">pkg_type<pos:position pos:line="21" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="54">sizeof <argument_list pos:line="21" pos:column="61">(<argument><expr><name pos:line="21" pos:column="62">pkg_type<pos:position pos:line="21" pos:column="70"/></name></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">offset<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">+=<pos:position pos:line="22" pos:column="18"/></operator> <sizeof pos:line="22" pos:column="19">sizeof <argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">pkg_type<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></sizeof></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">memcpy<pos:position pos:line="23" pos:column="15"/></name> <argument_list pos:line="23" pos:column="16">(<argument><expr><name pos:line="23" pos:column="17">buffer<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">+<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">offset<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="34">(<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="35">void<pos:position pos:line="23" pos:column="39"/></name> <operator pos:line="23" pos:column="40">*<pos:position pos:line="23" pos:column="41"/></operator><operator pos:line="23" pos:column="41">)<pos:position pos:line="23" pos:column="42"/></operator> <operator pos:line="23" pos:column="43">&amp;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="44">pkg_length<pos:position pos:line="23" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="56">sizeof <argument_list pos:line="23" pos:column="63">(<argument><expr><name pos:line="23" pos:column="64">pkg_length<pos:position pos:line="23" pos:column="74"/></name></expr></argument>)<pos:position pos:line="23" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="77"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">offset<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">+=<pos:position pos:line="24" pos:column="18"/></operator> <sizeof pos:line="24" pos:column="19">sizeof <argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">pkg_length<pos:position pos:line="24" pos:column="37"/></name></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></sizeof></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">memcpy<pos:position pos:line="25" pos:column="15"/></name> <argument_list pos:line="25" pos:column="16">(<argument><expr><name pos:line="25" pos:column="17">buffer<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">+<pos:position pos:line="25" pos:column="25"/></operator> <name pos:line="25" pos:column="26">offset<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">str<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">str_len<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">offset<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">+=<pos:position pos:line="26" pos:column="18"/></operator> <name pos:line="26" pos:column="19">str_len<pos:position pos:line="26" pos:column="26"/></name></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">memset<pos:position pos:line="27" pos:column="15"/></name> <argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">buffer<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">+<pos:position pos:line="27" pos:column="25"/></operator> <name pos:line="27" pos:column="26">offset<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="27" pos:column="34">'\0'<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="40">1<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name pos:line="28" pos:column="9">offset<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">+=<pos:position pos:line="28" pos:column="18"/></operator> <literal type="number" pos:line="28" pos:column="19">1<pos:position pos:line="28" pos:column="20"/></literal></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="30" pos:column="9">assert<pos:position pos:line="30" pos:column="15"/></name> <argument_list pos:line="30" pos:column="16">(<argument><expr><name pos:line="30" pos:column="17">offset<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">==<pos:position pos:line="30" pos:column="26"/></operator> <name pos:line="30" pos:column="27">buffer_len<pos:position pos:line="30" pos:column="37"/></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><operator pos:line="32" pos:column="9">*<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">ret_buffer<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="23">buffer<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">+<pos:position pos:line="32" pos:column="31"/></operator> <name pos:line="32" pos:column="32">buffer_len<pos:position pos:line="32" pos:column="42"/></name></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="33" pos:column="9">*<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">ret_buffer_len<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">-=<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="28">buffer_len<pos:position pos:line="33" pos:column="38"/></name></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>

	<return pos:line="35" pos:column="9">return <expr><operator pos:line="35" pos:column="16">(<pos:position pos:line="35" pos:column="17"/></operator><literal type="number" pos:line="35" pos:column="17">0<pos:position pos:line="35" pos:column="18"/></literal><operator pos:line="35" pos:column="18">)<pos:position pos:line="35" pos:column="19"/></operator></expr>;<pos:position pos:line="35" pos:column="20"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_761_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">redis_query_t<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">redis_config_query<pos:position pos:line="1" pos:column="41"/></name> <parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">oconfig_item_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">ci<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <comment type="block" pos:line="1" pos:column="63">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">redis_query_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">rq<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">status<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">rq<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <call><name pos:line="6" pos:column="10">calloc<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><literal type="number" pos:line="6" pos:column="17">1<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="20">sizeof<argument_list pos:line="6" pos:column="26">(<argument><expr><operator pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">rq<pos:position pos:line="6" pos:column="30"/></name></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">rq<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">NULL<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20"> <block pos:line="7" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">ERROR<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><literal type="string" pos:line="8" pos:column="15">"redis plugin: calloc failed adding redis_query."<pos:position pos:line="8" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="66"/></expr_stmt>
        <return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr>;<pos:position pos:line="9" pos:column="21"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="11" pos:column="5">status<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">cf_util_get_string_buffer<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name pos:line="11" pos:column="40">ci<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="44">rq<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">-&gt;<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="48">query<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="55">sizeof<argument_list pos:line="11" pos:column="61">(<argument><expr><name><name pos:line="11" pos:column="62">rq<pos:position pos:line="11" pos:column="64"/></name><operator pos:line="11" pos:column="64">-&gt;<pos:position pos:line="11" pos:column="69"/></operator><name pos:line="11" pos:column="66">query<pos:position pos:line="11" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="74"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">status<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">!=<pos:position pos:line="12" pos:column="18"/></operator> <literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21">
        <block type="pseudo"><goto pos:line="13" pos:column="9">goto <name pos:line="13" pos:column="14">err<pos:position pos:line="13" pos:column="17"/></name>;<pos:position pos:line="13" pos:column="18"/></goto></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/*
     * Default to a gauge type.
     */</comment>
    <expr_stmt><expr><operator pos:line="18" pos:column="5">(<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">void<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">)<pos:position pos:line="18" pos:column="11"/></operator><call><name pos:line="18" pos:column="11">strncpy<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name><name pos:line="18" pos:column="19">rq<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">type<pos:position pos:line="18" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="29">"gauge"<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="38">sizeof<argument_list pos:line="18" pos:column="44">(<argument><expr><name><name pos:line="18" pos:column="45">rq<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">type<pos:position pos:line="18" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="19" pos:column="5">(<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">void<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">)<pos:position pos:line="19" pos:column="11"/></operator><call><name pos:line="19" pos:column="11">sstrncpy<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><name><name pos:line="19" pos:column="20">rq<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">instance<pos:position pos:line="19" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="34">rq<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">query<pos:position pos:line="19" pos:column="43"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="45">sizeof<argument_list pos:line="19" pos:column="51">(<argument><expr><name><name pos:line="19" pos:column="52">rq<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">-&gt;<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="56">instance<pos:position pos:line="19" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">replace_special<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name><name pos:line="20" pos:column="21">rq<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">instance<pos:position pos:line="20" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="35">sizeof<argument_list pos:line="20" pos:column="41">(<argument><expr><name><name pos:line="20" pos:column="42">rq<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">instance<pos:position pos:line="20" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt>

    <for pos:line="22" pos:column="5">for <control pos:line="22" pos:column="9">(<init><decl><type><name pos:line="22" pos:column="10">int<pos:position pos:line="22" pos:column="13"/></name></type> <name pos:line="22" pos:column="14">i<pos:position pos:line="22" pos:column="15"/></name> <init pos:line="22" pos:column="16">= <expr><literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="20"/></init> <condition><expr><name pos:line="22" pos:column="21">i<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">&lt;<pos:position pos:line="22" pos:column="27"/></operator> <name><name pos:line="22" pos:column="25">ci<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">-&gt;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="29">children_num<pos:position pos:line="22" pos:column="41"/></name></name></expr>;<pos:position pos:line="22" pos:column="42"/></condition> <incr><expr><name pos:line="22" pos:column="43">i<pos:position pos:line="22" pos:column="44"/></name><operator pos:line="22" pos:column="44">++<pos:position pos:line="22" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="47"/></control> <block pos:line="22" pos:column="48">{
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">oconfig_item_t<pos:position pos:line="23" pos:column="23"/></name> <modifier pos:line="23" pos:column="24">*<pos:position pos:line="23" pos:column="25"/></modifier></type><name pos:line="23" pos:column="25">option<pos:position pos:line="23" pos:column="31"/></name> <init pos:line="23" pos:column="32">= <expr><name><name pos:line="23" pos:column="34">ci<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">children<pos:position pos:line="23" pos:column="46"/></name></name> <operator pos:line="23" pos:column="47">+<pos:position pos:line="23" pos:column="48"/></operator> <name pos:line="23" pos:column="49">i<pos:position pos:line="23" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="51"/></decl_stmt>

        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">strcasecmp<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><literal type="string" pos:line="25" pos:column="24">"Type"<pos:position pos:line="25" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="32">option<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">key<pos:position pos:line="25" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call> <operator pos:line="25" pos:column="45">==<pos:position pos:line="25" pos:column="47"/></operator> <literal type="number" pos:line="25" pos:column="48">0<pos:position pos:line="25" pos:column="49"/></literal></expr>)<pos:position pos:line="25" pos:column="50"/></condition><then pos:line="25" pos:column="50"> <block pos:line="25" pos:column="51">{
            <expr_stmt><expr><name pos:line="26" pos:column="13">status<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <call><name pos:line="26" pos:column="22">cf_util_get_string_buffer<pos:position pos:line="26" pos:column="47"/></name><argument_list pos:line="26" pos:column="47">(<argument><expr><name pos:line="26" pos:column="48">option<pos:position pos:line="26" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="56">rq<pos:position pos:line="26" pos:column="58"/></name><operator pos:line="26" pos:column="58">-&gt;<pos:position pos:line="26" pos:column="63"/></operator><name pos:line="26" pos:column="60">type<pos:position pos:line="26" pos:column="64"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="66">sizeof<argument_list pos:line="26" pos:column="72">(<argument><expr><name><name pos:line="26" pos:column="73">rq<pos:position pos:line="26" pos:column="75"/></name><operator pos:line="26" pos:column="75">-&gt;<pos:position pos:line="26" pos:column="80"/></operator><name pos:line="26" pos:column="77">type<pos:position pos:line="26" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="84"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then> <elseif pos:line="27" pos:column="11">else <if pos:line="27" pos:column="16">if <condition pos:line="27" pos:column="19">(<expr><call><name pos:line="27" pos:column="20">strcasecmp<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><literal type="string" pos:line="27" pos:column="31">"Instance"<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="43">option<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">-&gt;<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="51">key<pos:position pos:line="27" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call> <operator pos:line="27" pos:column="56">==<pos:position pos:line="27" pos:column="58"/></operator> <literal type="number" pos:line="27" pos:column="59">0<pos:position pos:line="27" pos:column="60"/></literal></expr>)<pos:position pos:line="27" pos:column="61"/></condition><then pos:line="27" pos:column="61"> <block pos:line="27" pos:column="62">{
            <expr_stmt><expr><name pos:line="28" pos:column="13">status<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <call><name pos:line="28" pos:column="22">cf_util_get_string_buffer<pos:position pos:line="28" pos:column="47"/></name><argument_list pos:line="28" pos:column="47">(<argument><expr><name pos:line="28" pos:column="48">option<pos:position pos:line="28" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="56">rq<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">-&gt;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="60">instance<pos:position pos:line="28" pos:column="68"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="70">sizeof<argument_list pos:line="28" pos:column="76">(<argument><expr><name><name pos:line="28" pos:column="77">rq<pos:position pos:line="28" pos:column="79"/></name><operator pos:line="28" pos:column="79">-&gt;<pos:position pos:line="28" pos:column="84"/></operator><name pos:line="28" pos:column="81">instance<pos:position pos:line="28" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="90"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="92"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if></elseif> <else pos:line="29" pos:column="11">else <block pos:line="29" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">WARNING<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><literal type="string" pos:line="30" pos:column="21">"redis plugin: unknown configuration option: %s"<pos:position pos:line="30" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="71">option<pos:position pos:line="30" pos:column="77"/></name><operator pos:line="30" pos:column="77">-&gt;<pos:position pos:line="30" pos:column="82"/></operator><name pos:line="30" pos:column="79">key<pos:position pos:line="30" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="84"/></expr_stmt>
            <expr_stmt><expr><name pos:line="31" pos:column="13">status<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <operator pos:line="31" pos:column="22">-<pos:position pos:line="31" pos:column="23"/></operator><literal type="number" pos:line="31" pos:column="23">1<pos:position pos:line="31" pos:column="24"/></literal></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></else></if>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">status<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">!=<pos:position pos:line="33" pos:column="22"/></operator> <literal type="number" pos:line="33" pos:column="23">0<pos:position pos:line="33" pos:column="24"/></literal></expr>)<pos:position pos:line="33" pos:column="25"/></condition><then pos:line="33" pos:column="25">
            <block type="pseudo"><goto pos:line="34" pos:column="13">goto <name pos:line="34" pos:column="18">err<pos:position pos:line="34" pos:column="21"/></name>;<pos:position pos:line="34" pos:column="22"/></goto></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block></for>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">rq<pos:position pos:line="36" pos:column="14"/></name></expr>;<pos:position pos:line="36" pos:column="15"/></return>
 <label><name pos:line="37" pos:column="2">err<pos:position pos:line="37" pos:column="5"/></name>:<pos:position pos:line="37" pos:column="6"/></label>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">free<pos:position pos:line="38" pos:column="9"/></name><argument_list pos:line="38" pos:column="9">(<argument><expr><name pos:line="38" pos:column="10">rq<pos:position pos:line="38" pos:column="12"/></name></expr></argument>)<pos:position pos:line="38" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="14"/></expr_stmt>
    <return pos:line="39" pos:column="5">return <expr><name pos:line="39" pos:column="12">NULL<pos:position pos:line="39" pos:column="16"/></name></expr>;<pos:position pos:line="39" pos:column="17"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

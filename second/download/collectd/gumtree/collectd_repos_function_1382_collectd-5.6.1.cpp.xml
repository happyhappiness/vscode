<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1382_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">gmond_shutdown<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list> <comment type="block" pos:line="1" pos:column="34">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">mc_receive_thread_stop<pos:position pos:line="3" pos:column="25"/></name> <argument_list pos:line="3" pos:column="26">()<pos:position pos:line="3" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">pthread_mutex_lock<pos:position pos:line="5" pos:column="21"/></name> <argument_list pos:line="5" pos:column="22">(<argument><expr><operator pos:line="5" pos:column="23">&amp;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="24">mc_send_sockets_lock<pos:position pos:line="5" pos:column="44"/></name></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="46"/></expr_stmt>
  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><decl><type><name pos:line="6" pos:column="8">size_t<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">i<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></init> <condition><expr><name pos:line="6" pos:column="22">i<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">&lt;<pos:position pos:line="6" pos:column="28"/></operator> <name pos:line="6" pos:column="26">mc_send_sockets_num<pos:position pos:line="6" pos:column="45"/></name></expr>;<pos:position pos:line="6" pos:column="46"/></condition> <incr><expr><name pos:line="6" pos:column="47">i<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">++<pos:position pos:line="6" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="51"/></control>
  <block pos:line="7" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">close<pos:position pos:line="8" pos:column="10"/></name> <argument_list pos:line="8" pos:column="11">(<argument><expr><name><name pos:line="8" pos:column="12">mc_send_sockets<pos:position pos:line="8" pos:column="27"/></name><index pos:line="8" pos:column="27">[<expr><name pos:line="8" pos:column="28">i<pos:position pos:line="8" pos:column="29"/></name></expr>]<pos:position pos:line="8" pos:column="30"/></index></name><operator pos:line="8" pos:column="30">.<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">fd<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">mc_send_sockets<pos:position pos:line="9" pos:column="20"/></name><index pos:line="9" pos:column="20">[<expr><name pos:line="9" pos:column="21">i<pos:position pos:line="9" pos:column="22"/></name></expr>]<pos:position pos:line="9" pos:column="23"/></index></name><operator pos:line="9" pos:column="23">.<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">fd<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator> <operator pos:line="9" pos:column="29">-<pos:position pos:line="9" pos:column="30"/></operator><literal type="number" pos:line="9" pos:column="30">1<pos:position pos:line="9" pos:column="31"/></literal></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">sfree<pos:position pos:line="11" pos:column="8"/></name> <argument_list pos:line="11" pos:column="9">(<argument><expr><name pos:line="11" pos:column="10">mc_send_sockets<pos:position pos:line="11" pos:column="25"/></name></expr></argument>)<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">mc_send_sockets_num<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">pthread_mutex_unlock<pos:position pos:line="13" pos:column="23"/></name> <argument_list pos:line="13" pos:column="24">(<argument><expr><operator pos:line="13" pos:column="25">&amp;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="26">mc_send_sockets_lock<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>


  <return pos:line="16" pos:column="3">return <expr><operator pos:line="16" pos:column="10">(<pos:position pos:line="16" pos:column="11"/></operator><literal type="number" pos:line="16" pos:column="11">0<pos:position pos:line="16" pos:column="12"/></literal><operator pos:line="16" pos:column="12">)<pos:position pos:line="16" pos:column="13"/></operator></expr>;<pos:position pos:line="16" pos:column="14"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

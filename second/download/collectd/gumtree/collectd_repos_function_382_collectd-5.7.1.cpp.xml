<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_382_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">thermal_init<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list> <block pos:line="1" pos:column="31">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">ret<pos:position pos:line="2" pos:column="10"/></name> <init pos:line="2" pos:column="11">= <expr><operator pos:line="2" pos:column="13">-<pos:position pos:line="2" pos:column="14"/></operator><literal type="number" pos:line="2" pos:column="14">1<pos:position pos:line="2" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">force_procfs<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">&amp;&amp;<pos:position pos:line="4" pos:column="31"/></operator> <call><name pos:line="4" pos:column="24">access<pos:position pos:line="4" pos:column="30"/></name><argument_list pos:line="4" pos:column="30">(<argument><expr><name pos:line="4" pos:column="31">dirname_sysfs<pos:position pos:line="4" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="46">R_OK<pos:position pos:line="4" pos:column="50"/></name> <operator pos:line="4" pos:column="51">|<pos:position pos:line="4" pos:column="52"/></operator> <name pos:line="4" pos:column="53">X_OK<pos:position pos:line="4" pos:column="57"/></name></expr></argument>)<pos:position pos:line="4" pos:column="58"/></argument_list></call> <operator pos:line="4" pos:column="59">==<pos:position pos:line="4" pos:column="61"/></operator> <literal type="number" pos:line="4" pos:column="62">0<pos:position pos:line="4" pos:column="63"/></literal></expr>)<pos:position pos:line="4" pos:column="64"/></condition><then pos:line="4" pos:column="64"> <block pos:line="4" pos:column="65">{
    <expr_stmt><expr><name pos:line="5" pos:column="5">ret<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">=<pos:position pos:line="5" pos:column="10"/></operator> <call><name pos:line="5" pos:column="11">plugin_register_read<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">(<argument><expr><literal type="string" pos:line="5" pos:column="32">"thermal"<pos:position pos:line="5" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="43">thermal_sysfs_read<pos:position pos:line="5" pos:column="61"/></name></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="6" pos:column="4"/></block></then> <elseif pos:line="6" pos:column="5">else <if pos:line="6" pos:column="10">if <condition pos:line="6" pos:column="13">(<expr><call><name pos:line="6" pos:column="14">access<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">dirname_procfs<pos:position pos:line="6" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="37">R_OK<pos:position pos:line="6" pos:column="41"/></name> <operator pos:line="6" pos:column="42">|<pos:position pos:line="6" pos:column="43"/></operator> <name pos:line="6" pos:column="44">X_OK<pos:position pos:line="6" pos:column="48"/></name></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call> <operator pos:line="6" pos:column="50">==<pos:position pos:line="6" pos:column="52"/></operator> <literal type="number" pos:line="6" pos:column="53">0<pos:position pos:line="6" pos:column="54"/></literal></expr>)<pos:position pos:line="6" pos:column="55"/></condition><then pos:line="6" pos:column="55"> <block pos:line="6" pos:column="56">{
    <expr_stmt><expr><name pos:line="7" pos:column="5">ret<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <call><name pos:line="7" pos:column="11">plugin_register_read<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><literal type="string" pos:line="7" pos:column="32">"thermal"<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="43">thermal_procfs_read<pos:position pos:line="7" pos:column="62"/></name></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="10" pos:column="3">return <expr><name pos:line="10" pos:column="10">ret<pos:position pos:line="10" pos:column="13"/></name></expr>;<pos:position pos:line="10" pos:column="14"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

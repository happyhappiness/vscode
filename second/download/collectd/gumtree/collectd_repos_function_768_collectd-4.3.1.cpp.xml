<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_768_collectd-4.3.1.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">yy_symbol_print<pos:position pos:line="2" pos:column="16"/></name> <argument_list pos:line="2" pos:column="17">(<argument><expr><name pos:line="2" pos:column="18">FILE<pos:position pos:line="2" pos:column="22"/></name> <operator pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">yyoutput<pos:position pos:line="2" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">yytype<pos:position pos:line="2" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="46">YYSTYPE<pos:position pos:line="2" pos:column="53"/></name> <specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier> <operator pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></operator> <specifier pos:line="2" pos:column="62">const<pos:position pos:line="2" pos:column="67"/></specifier> <name pos:line="2" pos:column="68">yyvaluep<pos:position pos:line="2" pos:column="76"/></name></expr></argument>)<pos:position pos:line="2" pos:column="77"/></argument_list>
<cpp:else pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">else<pos:position pos:line="3" pos:column="6"/></cpp:directive></cpp:else>
static <name pos:line="4" pos:column="8">void<pos:position pos:line="4" pos:column="12"/></name>
<name pos:line="5" pos:column="1">yy_symbol_print<pos:position pos:line="5" pos:column="16"/></name> <argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">yyoutput<pos:position pos:line="5" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="28">yytype<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="36">yyvaluep<pos:position pos:line="5" pos:column="44"/></name></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list>
    <name pos:line="6" pos:column="5">FILE<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier><name pos:line="6" pos:column="11">yyoutput<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">yytype<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">YYSTYPE<pos:position pos:line="8" pos:column="12"/></name> <specifier pos:line="8" pos:column="13">const<pos:position pos:line="8" pos:column="18"/></specifier> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier> <specifier pos:line="8" pos:column="21">const<pos:position pos:line="8" pos:column="26"/></specifier></type> <name pos:line="8" pos:column="27">yyvaluep<pos:position pos:line="8" pos:column="35"/></name></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
<block pos:line="10" pos:column="1">{
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">yytype<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">&lt;<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="16">YYNTOKENS<pos:position pos:line="11" pos:column="25"/></name></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">YYFPRINTF<pos:position pos:line="12" pos:column="14"/></name> <argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">yyoutput<pos:position pos:line="12" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="26">"token %s ("<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="40">yytname<pos:position pos:line="12" pos:column="47"/></name><index pos:line="12" pos:column="47">[<expr><name pos:line="12" pos:column="48">yytype<pos:position pos:line="12" pos:column="54"/></name></expr>]<pos:position pos:line="12" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt></block></then>
  <else pos:line="13" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="5">YYFPRINTF<pos:position pos:line="14" pos:column="14"/></name> <argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">yyoutput<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="26">"nterm %s ("<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="40">yytname<pos:position pos:line="14" pos:column="47"/></name><index pos:line="14" pos:column="47">[<expr><name pos:line="14" pos:column="48">yytype<pos:position pos:line="14" pos:column="54"/></name></expr>]<pos:position pos:line="14" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">yy_symbol_value_print<pos:position pos:line="16" pos:column="24"/></name> <argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">yyoutput<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">yytype<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">yyvaluep<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">YYFPRINTF<pos:position pos:line="17" pos:column="12"/></name> <argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">yyoutput<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="24">")"<pos:position pos:line="17" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1560_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">smart_read_disk<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">SkDisk<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">d<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">name<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list> <block pos:line="1" pos:column="58">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">SkBool<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">available<pos:position pos:line="2" pos:column="19"/></name> <init pos:line="2" pos:column="20">= <expr><name pos:line="2" pos:column="22">FALSE<pos:position pos:line="2" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="28"/></decl_stmt>
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">sk_disk_identify_is_available<pos:position pos:line="3" pos:column="36"/></name><argument_list pos:line="3" pos:column="36">(<argument><expr><name pos:line="3" pos:column="37">d<pos:position pos:line="3" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="40">&amp;<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="41">available<pos:position pos:line="3" pos:column="50"/></name></expr></argument>)<pos:position pos:line="3" pos:column="51"/></argument_list></call> <operator pos:line="3" pos:column="52">&lt;<pos:position pos:line="3" pos:column="56"/></operator> <literal type="number" pos:line="3" pos:column="54">0<pos:position pos:line="3" pos:column="55"/></literal> <operator pos:line="3" pos:column="56">||<pos:position pos:line="3" pos:column="58"/></operator> <operator pos:line="3" pos:column="59">!<pos:position pos:line="3" pos:column="60"/></operator><name pos:line="3" pos:column="60">available<pos:position pos:line="3" pos:column="69"/></name></expr>)<pos:position pos:line="3" pos:column="70"/></condition><then pos:line="3" pos:column="70"> <block pos:line="3" pos:column="71">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">DEBUG<pos:position pos:line="4" pos:column="10"/></name><argument_list pos:line="4" pos:column="10">(<argument><expr><literal type="string" pos:line="4" pos:column="11">"smart plugin: disk %s cannot be identified."<pos:position pos:line="4" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="58">name<pos:position pos:line="4" pos:column="62"/></name></expr></argument>)<pos:position pos:line="4" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="64"/></expr_stmt>
    <return pos:line="5" pos:column="5">return;<pos:position pos:line="5" pos:column="12"/></return>
  }<pos:position pos:line="6" pos:column="4"/></block></then></if>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">sk_disk_smart_is_available<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">d<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="37">&amp;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="38">available<pos:position pos:line="7" pos:column="47"/></name></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call> <operator pos:line="7" pos:column="49">&lt;<pos:position pos:line="7" pos:column="53"/></operator> <literal type="number" pos:line="7" pos:column="51">0<pos:position pos:line="7" pos:column="52"/></literal> <operator pos:line="7" pos:column="53">||<pos:position pos:line="7" pos:column="55"/></operator> <operator pos:line="7" pos:column="56">!<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="57">available<pos:position pos:line="7" pos:column="66"/></name></expr>)<pos:position pos:line="7" pos:column="67"/></condition><then pos:line="7" pos:column="67"> <block pos:line="7" pos:column="68">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">DEBUG<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"smart plugin: disk %s has no SMART support."<pos:position pos:line="8" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="58">name<pos:position pos:line="8" pos:column="62"/></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="64"/></expr_stmt>
    <return pos:line="9" pos:column="5">return;<pos:position pos:line="9" pos:column="12"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">ignore_sleep_mode<pos:position pos:line="11" pos:column="25"/></name></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26"> <block pos:line="11" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">SkBool<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">awake<pos:position pos:line="12" pos:column="17"/></name> <init pos:line="12" pos:column="18">= <expr><name pos:line="12" pos:column="20">FALSE<pos:position pos:line="12" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">sk_disk_check_sleep_mode<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">d<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="37">&amp;<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="38">awake<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call> <operator pos:line="13" pos:column="45">&lt;<pos:position pos:line="13" pos:column="49"/></operator> <literal type="number" pos:line="13" pos:column="47">0<pos:position pos:line="13" pos:column="48"/></literal> <operator pos:line="13" pos:column="49">||<pos:position pos:line="13" pos:column="51"/></operator> <operator pos:line="13" pos:column="52">!<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="53">awake<pos:position pos:line="13" pos:column="58"/></name></expr>)<pos:position pos:line="13" pos:column="59"/></condition><then pos:line="13" pos:column="59"> <block pos:line="13" pos:column="60">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">DEBUG<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><literal type="string" pos:line="14" pos:column="13">"smart plugin: disk %s is sleeping."<pos:position pos:line="14" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">name<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>
      <return pos:line="15" pos:column="7">return;<pos:position pos:line="15" pos:column="14"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><call><name pos:line="18" pos:column="7">sk_disk_smart_read_data<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">d<pos:position pos:line="18" pos:column="32"/></name></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call> <operator pos:line="18" pos:column="34">&lt;<pos:position pos:line="18" pos:column="38"/></operator> <literal type="number" pos:line="18" pos:column="36">0<pos:position pos:line="18" pos:column="37"/></literal></expr>)<pos:position pos:line="18" pos:column="38"/></condition><then pos:line="18" pos:column="38"> <block pos:line="18" pos:column="39">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ERROR<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><literal type="string" pos:line="19" pos:column="11">"smart plugin: unable to get SMART data for disk %s."<pos:position pos:line="19" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="66">name<pos:position pos:line="19" pos:column="70"/></name></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="72"/></expr_stmt>
    <return pos:line="20" pos:column="5">return;<pos:position pos:line="20" pos:column="12"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><call><name pos:line="23" pos:column="7">sk_disk_smart_parse<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">d<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="30">&amp;<pos:position pos:line="23" pos:column="35"/></operator><operator pos:line="23" pos:column="31">(<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">SkSmartParsedData<pos:position pos:line="23" pos:column="49"/></name> <specifier pos:line="23" pos:column="50">const<pos:position pos:line="23" pos:column="55"/></specifier> <operator pos:line="23" pos:column="56">*<pos:position pos:line="23" pos:column="57"/></operator><operator pos:line="23" pos:column="57">)<pos:position pos:line="23" pos:column="58"/></operator></expr></argument></argument_list></call></expr></condition><then><block pos:line="23" pos:column="58">{<expr_stmt><expr><name pos:line="23" pos:column="59">NULL<pos:position pos:line="23" pos:column="63"/></name></expr></expr_stmt>}<pos:position pos:line="23" pos:column="64"/></block></then></if>)<pos:position pos:line="23" pos:column="65"/></block> &lt; 0<pos:position pos:line="23" pos:column="69"/></function></unit>

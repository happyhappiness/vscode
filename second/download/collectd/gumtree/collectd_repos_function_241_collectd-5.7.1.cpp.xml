<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_241_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dpdk_helper_spawn<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">enum<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">DPDK_HELPER_ACTION<pos:position pos:line="1" pos:column="53"/></name></name></type> <name pos:line="1" pos:column="54">action<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list> <block pos:line="1" pos:column="62">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">errbuf<pos:position pos:line="2" pos:column="14"/></name><index pos:line="2" pos:column="14">[<expr><name pos:line="2" pos:column="15">ERR_BUF_SIZE<pos:position pos:line="2" pos:column="27"/></name></expr>]<pos:position pos:line="2" pos:column="28"/></index></name></decl>;<pos:position pos:line="2" pos:column="29"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="3" pos:column="3">g_configuration<pos:position pos:line="3" pos:column="18"/></name><operator pos:line="3" pos:column="18">-&gt;<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="20">eal_initialized<pos:position pos:line="3" pos:column="35"/></name></name> <operator pos:line="3" pos:column="36">=<pos:position pos:line="3" pos:column="37"/></operator> <literal type="number" pos:line="3" pos:column="38">0<pos:position pos:line="3" pos:column="39"/></literal></expr>;<pos:position pos:line="3" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="4" pos:column="3">g_configuration<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">helper_action<pos:position pos:line="4" pos:column="33"/></name></name> <operator pos:line="4" pos:column="34">=<pos:position pos:line="4" pos:column="35"/></operator> <name pos:line="4" pos:column="36">action<pos:position pos:line="4" pos:column="42"/></name></expr>;<pos:position pos:line="4" pos:column="43"/></expr_stmt>
  <comment type="block" pos:line="5" pos:column="3">/*
   * Create a pipe for helper stdout back to collectd. This is necessary for
   * logging EAL failures, as rte_eal_init() calls rte_panic().
   */</comment>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><call><name pos:line="9" pos:column="7">pipe<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name><name pos:line="9" pos:column="12">g_configuration<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">helper_pipes<pos:position pos:line="9" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call> <operator pos:line="9" pos:column="43">!=<pos:position pos:line="9" pos:column="45"/></operator> <literal type="number" pos:line="9" pos:column="46">0<pos:position pos:line="9" pos:column="47"/></literal></expr>)<pos:position pos:line="9" pos:column="48"/></condition><then pos:line="9" pos:column="48"> <block pos:line="9" pos:column="49">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">DEBUG<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"dpdkstat: Could not create helper pipe: %s"<pos:position pos:line="10" pos:column="55"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="11" pos:column="11">sstrerror<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">errno<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">errbuf<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="36">sizeof<argument_list pos:line="11" pos:column="42">(<argument><expr><name pos:line="11" pos:column="43">errbuf<pos:position pos:line="11" pos:column="49"/></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">pipe0_flags<pos:position pos:line="15" pos:column="18"/></name> <init pos:line="15" pos:column="19">= <expr><call><name pos:line="15" pos:column="21">fcntl<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name><name pos:line="15" pos:column="27">g_configuration<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">-&gt;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="44">helper_pipes<pos:position pos:line="15" pos:column="56"/></name><index pos:line="15" pos:column="56">[<expr><literal type="number" pos:line="15" pos:column="57">0<pos:position pos:line="15" pos:column="58"/></literal></expr>]<pos:position pos:line="15" pos:column="59"/></index></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="61">F_GETFL<pos:position pos:line="15" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="70">0<pos:position pos:line="15" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="73"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">pipe1_flags<pos:position pos:line="16" pos:column="18"/></name> <init pos:line="16" pos:column="19">= <expr><call><name pos:line="16" pos:column="21">fcntl<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name><name pos:line="16" pos:column="27">g_configuration<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">-&gt;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="44">helper_pipes<pos:position pos:line="16" pos:column="56"/></name><index pos:line="16" pos:column="56">[<expr><literal type="number" pos:line="16" pos:column="57">1<pos:position pos:line="16" pos:column="58"/></literal></expr>]<pos:position pos:line="16" pos:column="59"/></index></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="61">F_GETFL<pos:position pos:line="16" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="70">0<pos:position pos:line="16" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="73"/></decl_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">pipe0_flags<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">==<pos:position pos:line="17" pos:column="21"/></operator> <operator pos:line="17" pos:column="22">-<pos:position pos:line="17" pos:column="23"/></operator><literal type="number" pos:line="17" pos:column="23">1<pos:position pos:line="17" pos:column="24"/></literal> <operator pos:line="17" pos:column="25">||<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="28">pipe1_flags<pos:position pos:line="17" pos:column="39"/></name> <operator pos:line="17" pos:column="40">==<pos:position pos:line="17" pos:column="42"/></operator> <operator pos:line="17" pos:column="43">-<pos:position pos:line="17" pos:column="44"/></operator><literal type="number" pos:line="17" pos:column="44">1<pos:position pos:line="17" pos:column="45"/></literal></expr>)<pos:position pos:line="17" pos:column="46"/></condition><then pos:line="17" pos:column="46"> <block pos:line="17" pos:column="47">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">WARNING<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><literal type="string" pos:line="18" pos:column="13">"dpdkstat: Failed setting up pipe flags: %s"<pos:position pos:line="18" pos:column="57"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="19" pos:column="13">sstrerror<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">errno<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">errbuf<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="38">sizeof<argument_list pos:line="19" pos:column="44">(<argument><expr><name pos:line="19" pos:column="45">errbuf<pos:position pos:line="19" pos:column="51"/></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">int<pos:position pos:line="21" pos:column="6"/></name></type> <name pos:line="21" pos:column="7">pipe0_err<pos:position pos:line="21" pos:column="16"/></name> <init pos:line="21" pos:column="17">= <expr><call><name pos:line="21" pos:column="19">fcntl<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name><name pos:line="21" pos:column="25">g_configuration<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">-&gt;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="42">helper_pipes<pos:position pos:line="21" pos:column="54"/></name><index pos:line="21" pos:column="54">[<expr><literal type="number" pos:line="21" pos:column="55">0<pos:position pos:line="21" pos:column="56"/></literal></expr>]<pos:position pos:line="21" pos:column="57"/></index></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="59">F_SETFL<pos:position pos:line="21" pos:column="66"/></name></expr></argument>,
                        <argument><expr><name pos:line="22" pos:column="25">pipe1_flags<pos:position pos:line="22" pos:column="36"/></name> <operator pos:line="22" pos:column="37">|<pos:position pos:line="22" pos:column="38"/></operator> <name pos:line="22" pos:column="39">O_NONBLOCK<pos:position pos:line="22" pos:column="49"/></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="51"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">int<pos:position pos:line="23" pos:column="6"/></name></type> <name pos:line="23" pos:column="7">pipe1_err<pos:position pos:line="23" pos:column="16"/></name> <init pos:line="23" pos:column="17">= <expr><call><name pos:line="23" pos:column="19">fcntl<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name><name pos:line="23" pos:column="25">g_configuration<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">-&gt;<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="42">helper_pipes<pos:position pos:line="23" pos:column="54"/></name><index pos:line="23" pos:column="54">[<expr><literal type="number" pos:line="23" pos:column="55">1<pos:position pos:line="23" pos:column="56"/></literal></expr>]<pos:position pos:line="23" pos:column="57"/></index></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="59">F_SETFL<pos:position pos:line="23" pos:column="66"/></name></expr></argument>,
                        <argument><expr><name pos:line="24" pos:column="25">pipe0_flags<pos:position pos:line="24" pos:column="36"/></name> <operator pos:line="24" pos:column="37">|<pos:position pos:line="24" pos:column="38"/></operator> <name pos:line="24" pos:column="39">O_NONBLOCK<pos:position pos:line="24" pos:column="49"/></name></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="51"/></decl_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">pipe0_err<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">==<pos:position pos:line="25" pos:column="19"/></operator> <operator pos:line="25" pos:column="20">-<pos:position pos:line="25" pos:column="21"/></operator><literal type="number" pos:line="25" pos:column="21">1<pos:position pos:line="25" pos:column="22"/></literal> <operator pos:line="25" pos:column="23">||<pos:position pos:line="25" pos:column="25"/></operator> <name pos:line="25" pos:column="26">pipe1_err<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">==<pos:position pos:line="25" pos:column="38"/></operator> <operator pos:line="25" pos:column="39">-<pos:position pos:line="25" pos:column="40"/></operator><literal type="number" pos:line="25" pos:column="40">1<pos:position pos:line="25" pos:column="41"/></literal></expr>)<pos:position pos:line="25" pos:column="42"/></condition><then pos:line="25" pos:column="42"> <block pos:line="25" pos:column="43">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">WARNING<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><literal type="string" pos:line="26" pos:column="13">"dpdkstat: Failed setting up pipes: %s"<pos:position pos:line="26" pos:column="52"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="27" pos:column="13">sstrerror<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name pos:line="27" pos:column="23">errno<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="30">errbuf<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="38">sizeof<argument_list pos:line="27" pos:column="44">(<argument><expr><name pos:line="27" pos:column="45">errbuf<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="30" pos:column="3">pid_t<pos:position pos:line="30" pos:column="8"/></name></type> <name pos:line="30" pos:column="9">pid<pos:position pos:line="30" pos:column="12"/></name> <init pos:line="30" pos:column="13">= <expr><call><name pos:line="30" pos:column="15">fork<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">()<pos:position pos:line="30" pos:column="21"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="22"/></decl_stmt>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">pid<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">&gt;<pos:position pos:line="31" pos:column="15"/></operator> <literal type="number" pos:line="31" pos:column="13">0<pos:position pos:line="31" pos:column="14"/></literal></expr>)<pos:position pos:line="31" pos:column="15"/></condition><then pos:line="31" pos:column="15"> <block pos:line="31" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">close<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><name><name pos:line="32" pos:column="11">g_configuration<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">-&gt;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="28">helper_pipes<pos:position pos:line="32" pos:column="40"/></name><index pos:line="32" pos:column="40">[<expr><literal type="number" pos:line="32" pos:column="41">1<pos:position pos:line="32" pos:column="42"/></literal></expr>]<pos:position pos:line="32" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">g_configuration<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">-&gt;<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="22">helper_pid<pos:position pos:line="33" pos:column="32"/></name></name> <operator pos:line="33" pos:column="33">=<pos:position pos:line="33" pos:column="34"/></operator> <name pos:line="33" pos:column="35">pid<pos:position pos:line="33" pos:column="38"/></name></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">DEBUG<pos:position pos:line="34" pos:column="10"/></name><argument_list pos:line="34" pos:column="10">(<argument><expr><literal type="string" pos:line="34" pos:column="11">"dpdkstat: helper pid %li"<pos:position pos:line="34" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="39">(<pos:position pos:line="34" pos:column="40"/></operator><name pos:line="34" pos:column="40">long<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">)<pos:position pos:line="34" pos:column="45"/></operator><name><name pos:line="34" pos:column="45">g_configuration<pos:position pos:line="34" pos:column="60"/></name><operator pos:line="34" pos:column="60">-&gt;<pos:position pos:line="34" pos:column="65"/></operator><name pos:line="34" pos:column="62">helper_pid<pos:position pos:line="34" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt>
    <comment type="block" pos:line="35" pos:column="5">/* Kick helper once its alive to have it start processing */</comment>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">sem_post<pos:position pos:line="36" pos:column="13"/></name><argument_list pos:line="36" pos:column="13">(<argument><expr><operator pos:line="36" pos:column="14">&amp;<pos:position pos:line="36" pos:column="19"/></operator><name><name pos:line="36" pos:column="15">g_configuration<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">sema_helper_get_stats<pos:position pos:line="36" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></then> <elseif pos:line="37" pos:column="5">else <if pos:line="37" pos:column="10">if <condition pos:line="37" pos:column="13">(<expr><name pos:line="37" pos:column="14">pid<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">==<pos:position pos:line="37" pos:column="20"/></operator> <literal type="number" pos:line="37" pos:column="21">0<pos:position pos:line="37" pos:column="22"/></literal></expr>)<pos:position pos:line="37" pos:column="23"/></condition><then pos:line="37" pos:column="23"> <block pos:line="37" pos:column="24">{
    <comment type="block" pos:line="38" pos:column="5">/* Replace stdout with a pipe to collectd. */</comment>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">close<pos:position pos:line="39" pos:column="10"/></name><argument_list pos:line="39" pos:column="10">(<argument><expr><name><name pos:line="39" pos:column="11">g_configuration<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">-&gt;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="28">helper_pipes<pos:position pos:line="39" pos:column="40"/></name><index pos:line="39" pos:column="40">[<expr><literal type="number" pos:line="39" pos:column="41">0<pos:position pos:line="39" pos:column="42"/></literal></expr>]<pos:position pos:line="39" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">close<pos:position pos:line="40" pos:column="10"/></name><argument_list pos:line="40" pos:column="10">(<argument><expr><name pos:line="40" pos:column="11">STDOUT_FILENO<pos:position pos:line="40" pos:column="24"/></name></expr></argument>)<pos:position pos:line="40" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">dup2<pos:position pos:line="41" pos:column="9"/></name><argument_list pos:line="41" pos:column="9">(<argument><expr><name><name pos:line="41" pos:column="10">g_configuration<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">-&gt;<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="27">helper_pipes<pos:position pos:line="41" pos:column="39"/></name><index pos:line="41" pos:column="39">[<expr><literal type="number" pos:line="41" pos:column="40">1<pos:position pos:line="41" pos:column="41"/></literal></expr>]<pos:position pos:line="41" pos:column="42"/></index></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">STDOUT_FILENO<pos:position pos:line="41" pos:column="57"/></name></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">dpdk_helper_run<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">()<pos:position pos:line="42" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">exit<pos:position pos:line="43" pos:column="9"/></name><argument_list pos:line="43" pos:column="9">(<argument><expr><literal type="number" pos:line="43" pos:column="10">0<pos:position pos:line="43" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if></elseif> <else pos:line="44" pos:column="5">else <block pos:line="44" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">ERROR<pos:position pos:line="45" pos:column="10"/></name><argument_list pos:line="45" pos:column="10">(<argument><expr><literal type="string" pos:line="45" pos:column="11">"dpdkstat: Failed to fork helper process: %s"<pos:position pos:line="45" pos:column="56"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="46" pos:column="11">sstrerror<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">errno<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="28">errbuf<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="36">sizeof<argument_list pos:line="46" pos:column="42">(<argument><expr><name pos:line="46" pos:column="43">errbuf<pos:position pos:line="46" pos:column="49"/></name></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="53"/></expr_stmt>
    <return pos:line="47" pos:column="5">return <expr><operator pos:line="47" pos:column="12">-<pos:position pos:line="47" pos:column="13"/></operator><literal type="number" pos:line="47" pos:column="13">1<pos:position pos:line="47" pos:column="14"/></literal></expr>;<pos:position pos:line="47" pos:column="15"/></return>
  }<pos:position pos:line="48" pos:column="4"/></block></else></if>
  <return pos:line="49" pos:column="3">return <expr><literal type="number" pos:line="49" pos:column="10">0<pos:position pos:line="49" pos:column="11"/></literal></expr>;<pos:position pos:line="49" pos:column="12"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

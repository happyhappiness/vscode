<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_900_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">init_counter<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">thread_data<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">thread_base<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                         <parameter><decl><type><name><name pos:line="2" pos:column="26">struct<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">core_data<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">core_base<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="55">struct<pos:position pos:line="2" pos:column="61"/></name> <name pos:line="2" pos:column="62">pkg_data<pos:position pos:line="2" pos:column="70"/></name></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">pkg_base<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="3" pos:column="26">unsigned<pos:position pos:line="3" pos:column="34"/></name> <name pos:line="3" pos:column="35">int<pos:position pos:line="3" pos:column="38"/></name></type> <name pos:line="3" pos:column="39">cpu_id<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="46"/></parameter_list> <block pos:line="3" pos:column="47">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">thread_data<pos:position pos:line="4" pos:column="21"/></name></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">t<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">core_data<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">c<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">pkg_data<pos:position pos:line="6" pos:column="18"/></name></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">p<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">cpu_topology<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">cpu<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><operator pos:line="7" pos:column="30">&amp;<pos:position pos:line="7" pos:column="35"/></operator><name><name pos:line="7" pos:column="31">topology<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">.<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">cpus<pos:position pos:line="7" pos:column="44"/></name><index pos:line="7" pos:column="44">[<expr><name pos:line="7" pos:column="45">cpu_id<pos:position pos:line="7" pos:column="51"/></name></expr>]<pos:position pos:line="7" pos:column="52"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="53"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">t<pos:position pos:line="9" pos:column="4"/></name> <operator pos:line="9" pos:column="5">=<pos:position pos:line="9" pos:column="6"/></operator> <call><name pos:line="9" pos:column="7">GET_THREAD<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><name pos:line="9" pos:column="18">thread_base<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="31">!<pos:position pos:line="9" pos:column="32"/></operator><operator pos:line="9" pos:column="32">(<pos:position pos:line="9" pos:column="33"/></operator><name><name pos:line="9" pos:column="33">cpu<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">first_thread_in_core<pos:position pos:line="9" pos:column="58"/></name></name><operator pos:line="9" pos:column="58">)<pos:position pos:line="9" pos:column="59"/></operator></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="61">cpu<pos:position pos:line="9" pos:column="64"/></name><operator pos:line="9" pos:column="64">-&gt;<pos:position pos:line="9" pos:column="69"/></operator><name pos:line="9" pos:column="66">core_id<pos:position pos:line="9" pos:column="73"/></name></name></expr></argument>,
                 <argument><expr><name><name pos:line="10" pos:column="18">cpu<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">package_id<pos:position pos:line="10" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="11" pos:column="3">c<pos:position pos:line="11" pos:column="4"/></name> <operator pos:line="11" pos:column="5">=<pos:position pos:line="11" pos:column="6"/></operator> <call><name pos:line="11" pos:column="7">GET_CORE<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">core_base<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="27">cpu<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">core_id<pos:position pos:line="11" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="41">cpu<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">-&gt;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="46">package_id<pos:position pos:line="11" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">p<pos:position pos:line="12" pos:column="4"/></name> <operator pos:line="12" pos:column="5">=<pos:position pos:line="12" pos:column="6"/></operator> <call><name pos:line="12" pos:column="7">GET_PKG<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">pkg_base<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="25">cpu<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">package_id<pos:position pos:line="12" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="14" pos:column="3">t<pos:position pos:line="14" pos:column="4"/></name><operator pos:line="14" pos:column="4">-&gt;<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="6">cpu_id<pos:position pos:line="14" pos:column="12"/></name></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">cpu_id<pos:position pos:line="14" pos:column="21"/></name></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">cpu<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">first_thread_in_core<pos:position pos:line="15" pos:column="32"/></name></name></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="5">t<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">-&gt;<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="8">flags<pos:position pos:line="16" pos:column="13"/></name></name> <operator pos:line="16" pos:column="14">|=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">CPU_IS_FIRST_THREAD_IN_CORE<pos:position pos:line="16" pos:column="44"/></name></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt></block></then></if>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name><name pos:line="17" pos:column="7">cpu<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">first_core_in_package<pos:position pos:line="17" pos:column="33"/></name></name></expr>)<pos:position pos:line="17" pos:column="34"/></condition><then pos:line="17" pos:column="34">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="5">t<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">flags<pos:position pos:line="18" pos:column="13"/></name></name> <operator pos:line="18" pos:column="14">|=<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">CPU_IS_FIRST_CORE_IN_PACKAGE<pos:position pos:line="18" pos:column="45"/></name></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="20" pos:column="3">c<pos:position pos:line="20" pos:column="4"/></name><operator pos:line="20" pos:column="4">-&gt;<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="6">core_id<pos:position pos:line="20" pos:column="13"/></name></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <name><name pos:line="20" pos:column="16">cpu<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">core_id<pos:position pos:line="20" pos:column="28"/></name></name></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">p<pos:position pos:line="21" pos:column="4"/></name><operator pos:line="21" pos:column="4">-&gt;<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="6">package_id<pos:position pos:line="21" pos:column="16"/></name></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name><name pos:line="21" pos:column="19">cpu<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">package_id<pos:position pos:line="21" pos:column="34"/></name></name></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

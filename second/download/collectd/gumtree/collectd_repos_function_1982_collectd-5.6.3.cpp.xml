<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1982_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">cpy_get_dataset<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">PyObject<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">self<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">PyObject<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">args<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list> <block pos:line="1" pos:column="66">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">name<pos:position pos:line="2" pos:column="13"/></name></decl>;<pos:position pos:line="2" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">data_set_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">ds<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">PyObject<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">list<pos:position pos:line="4" pos:column="17"/></name></decl>, <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="20">tuple<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">PyArg_ParseTuple<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name pos:line="6" pos:column="24">args<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="30">"et"<pos:position pos:line="6" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">NULL<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="42">&amp;<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="43">name<pos:position pos:line="6" pos:column="47"/></name></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call> <operator pos:line="6" pos:column="49">==<pos:position pos:line="6" pos:column="51"/></operator> <literal type="number" pos:line="6" pos:column="52">0<pos:position pos:line="6" pos:column="53"/></literal></expr>)<pos:position pos:line="6" pos:column="54"/></condition><then pos:line="6" pos:column="54">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">NULL<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="8" pos:column="3">ds<pos:position pos:line="8" pos:column="5"/></name> <operator pos:line="8" pos:column="6">=<pos:position pos:line="8" pos:column="7"/></operator> <call><name pos:line="8" pos:column="8">plugin_get_ds<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">name<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">PyMem_Free<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">name<pos:position pos:line="9" pos:column="18"/></name></expr></argument>)<pos:position pos:line="9" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">ds<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">==<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">NULL<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18"> <block pos:line="10" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">PyErr_Format<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">PyExc_TypeError<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="35">"Dataset %s not found"<pos:position pos:line="11" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="59">name<pos:position pos:line="11" pos:column="63"/></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">NULL<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="14" pos:column="3">list<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <call><name pos:line="14" pos:column="10">PyList_New<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name><name pos:line="14" pos:column="21">ds<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">ds_num<pos:position pos:line="14" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt> <comment type="block" pos:line="14" pos:column="34">/* New reference. */</comment>
  <for pos:line="15" pos:column="3">for <control pos:line="15" pos:column="7">(<init><decl><type><name pos:line="15" pos:column="8">size_t<pos:position pos:line="15" pos:column="14"/></name></type> <name pos:line="15" pos:column="15">i<pos:position pos:line="15" pos:column="16"/></name> <init pos:line="15" pos:column="17">= <expr><literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="21"/></init> <condition><expr><name pos:line="15" pos:column="22">i<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">&lt;<pos:position pos:line="15" pos:column="28"/></operator> <name><name pos:line="15" pos:column="26">ds<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">-&gt;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="30">ds_num<pos:position pos:line="15" pos:column="36"/></name></name></expr>;<pos:position pos:line="15" pos:column="37"/></condition> <incr><expr><operator pos:line="15" pos:column="38">++<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="40">i<pos:position pos:line="15" pos:column="41"/></name></expr></incr>)<pos:position pos:line="15" pos:column="42"/></control> <block pos:line="15" pos:column="43">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">tuple<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <call><name pos:line="16" pos:column="13">PyTuple_New<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><literal type="number" pos:line="16" pos:column="25">4<pos:position pos:line="16" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">PyTuple_SET_ITEM<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">tuple<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="29">0<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="32">cpy_string_to_unicode_or_bytes<pos:position pos:line="17" pos:column="62"/></name><argument_list pos:line="17" pos:column="62">(<argument><expr><name><name pos:line="17" pos:column="63">ds<pos:position pos:line="17" pos:column="65"/></name><operator pos:line="17" pos:column="65">-&gt;<pos:position pos:line="17" pos:column="70"/></operator><name pos:line="17" pos:column="67">ds<pos:position pos:line="17" pos:column="69"/></name><index pos:line="17" pos:column="69">[<expr><name pos:line="17" pos:column="70">i<pos:position pos:line="17" pos:column="71"/></name></expr>]<pos:position pos:line="17" pos:column="72"/></index></name><operator pos:line="17" pos:column="72">.<pos:position pos:line="17" pos:column="73"/></operator><name pos:line="17" pos:column="73">name<pos:position pos:line="17" pos:column="77"/></name></expr></argument>)<pos:position pos:line="17" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">PyTuple_SET_ITEM<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">tuple<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="29">1<pos:position pos:line="18" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="32">cpy_string_to_unicode_or_bytes<pos:position pos:line="18" pos:column="62"/></name><argument_list pos:line="18" pos:column="62">(
                                   <argument><expr><call><name pos:line="19" pos:column="36">DS_TYPE_TO_STRING<pos:position pos:line="19" pos:column="53"/></name><argument_list pos:line="19" pos:column="53">(<argument><expr><name><name pos:line="19" pos:column="54">ds<pos:position pos:line="19" pos:column="56"/></name><operator pos:line="19" pos:column="56">-&gt;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="58">ds<pos:position pos:line="19" pos:column="60"/></name><index pos:line="19" pos:column="60">[<expr><name pos:line="19" pos:column="61">i<pos:position pos:line="19" pos:column="62"/></name></expr>]<pos:position pos:line="19" pos:column="63"/></index></name><operator pos:line="19" pos:column="63">.<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="64">type<pos:position pos:line="19" pos:column="68"/></name></expr></argument>)<pos:position pos:line="19" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">PyTuple_SET_ITEM<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">tuple<pos:position pos:line="20" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="29">2<pos:position pos:line="20" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="32">float_or_none<pos:position pos:line="20" pos:column="45"/></name><argument_list pos:line="20" pos:column="45">(<argument><expr><name><name pos:line="20" pos:column="46">ds<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">-&gt;<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="50">ds<pos:position pos:line="20" pos:column="52"/></name><index pos:line="20" pos:column="52">[<expr><name pos:line="20" pos:column="53">i<pos:position pos:line="20" pos:column="54"/></name></expr>]<pos:position pos:line="20" pos:column="55"/></index></name><operator pos:line="20" pos:column="55">.<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="56">min<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">PyTuple_SET_ITEM<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">tuple<pos:position pos:line="21" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="29">3<pos:position pos:line="21" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="32">float_or_none<pos:position pos:line="21" pos:column="45"/></name><argument_list pos:line="21" pos:column="45">(<argument><expr><name><name pos:line="21" pos:column="46">ds<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">-&gt;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="50">ds<pos:position pos:line="21" pos:column="52"/></name><index pos:line="21" pos:column="52">[<expr><name pos:line="21" pos:column="53">i<pos:position pos:line="21" pos:column="54"/></name></expr>]<pos:position pos:line="21" pos:column="55"/></index></name><operator pos:line="21" pos:column="55">.<pos:position pos:line="21" pos:column="56"/></operator><name pos:line="21" pos:column="56">max<pos:position pos:line="21" pos:column="59"/></name></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">PyList_SET_ITEM<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">list<pos:position pos:line="22" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="27">i<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="30">tuple<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></for>
  <return pos:line="24" pos:column="3">return <expr><name pos:line="24" pos:column="10">list<pos:position pos:line="24" pos:column="14"/></name></expr>;<pos:position pos:line="24" pos:column="15"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

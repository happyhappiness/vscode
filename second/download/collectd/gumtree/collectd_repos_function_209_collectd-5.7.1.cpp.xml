<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_209_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_identifier<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">lcc_connection_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">c<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">value<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">lcc_identifier_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">ident<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list> <block pos:line="2" pos:column="54">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">hostname<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><literal type="number" pos:line="3" pos:column="17">1024<pos:position pos:line="3" pos:column="21"/></literal></expr>]<pos:position pos:line="3" pos:column="22"/></index></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">ident_str<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><literal type="number" pos:line="4" pos:column="18">1024<pos:position pos:line="4" pos:column="22"/></literal></expr>]<pos:position pos:line="4" pos:column="23"/></index></name> <init pos:line="4" pos:column="24">= <expr><literal type="string" pos:line="4" pos:column="26">""<pos:position pos:line="4" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">n_slashes<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">n_slashes<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">count_chars<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">value<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="34">'/'<pos:position pos:line="9" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">n_slashes<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <literal type="number" pos:line="10" pos:column="20">1<pos:position pos:line="10" pos:column="21"/></literal></expr>)<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22"> <block pos:line="10" pos:column="23">{
    <comment type="block" pos:line="11" pos:column="5">/* The user has omitted the hostname part of the identifier
     * (there is only one '/' in the identifier)
     * Let's add the local hostname */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">gethostname<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">hostname<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="31">sizeof<argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">hostname<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call> <operator pos:line="14" pos:column="49">!=<pos:position pos:line="14" pos:column="51"/></operator> <literal type="number" pos:line="14" pos:column="52">0<pos:position pos:line="14" pos:column="53"/></literal></expr>)<pos:position pos:line="14" pos:column="54"/></condition><then pos:line="14" pos:column="54"> <block pos:line="14" pos:column="55">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">fprintf<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">stderr<pos:position pos:line="15" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"ERROR: Failed to get local hostname: %s"<pos:position pos:line="15" pos:column="64"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="16" pos:column="15">strerror<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">errno<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
      <return pos:line="17" pos:column="7">return <expr><operator pos:line="17" pos:column="14">(<pos:position pos:line="17" pos:column="15"/></operator><operator pos:line="17" pos:column="15">-<pos:position pos:line="17" pos:column="16"/></operator><literal type="number" pos:line="17" pos:column="16">1<pos:position pos:line="17" pos:column="17"/></literal><operator pos:line="17" pos:column="17">)<pos:position pos:line="17" pos:column="18"/></operator></expr>;<pos:position pos:line="17" pos:column="19"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">hostname<pos:position pos:line="19" pos:column="13"/></name><index pos:line="19" pos:column="13">[<expr><sizeof pos:line="19" pos:column="14">sizeof<argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">hostname<pos:position pos:line="19" pos:column="29"/></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></sizeof> <operator pos:line="19" pos:column="31">-<pos:position pos:line="19" pos:column="32"/></operator> <literal type="number" pos:line="19" pos:column="33">1<pos:position pos:line="19" pos:column="34"/></literal></expr>]<pos:position pos:line="19" pos:column="35"/></index></name> <operator pos:line="19" pos:column="36">=<pos:position pos:line="19" pos:column="37"/></operator> <literal type="char" pos:line="19" pos:column="38">'\0'<pos:position pos:line="19" pos:column="42"/></literal></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">snprintf<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><name pos:line="21" pos:column="14">ident_str<pos:position pos:line="21" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="25">sizeof<argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">ident_str<pos:position pos:line="21" pos:column="41"/></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="44">"%s/%s"<pos:position pos:line="21" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">hostname<pos:position pos:line="21" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="63">value<pos:position pos:line="21" pos:column="68"/></name></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">ident_str<pos:position pos:line="22" pos:column="14"/></name><index pos:line="22" pos:column="14">[<expr><sizeof pos:line="22" pos:column="15">sizeof<argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">ident_str<pos:position pos:line="22" pos:column="31"/></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></sizeof> <operator pos:line="22" pos:column="33">-<pos:position pos:line="22" pos:column="34"/></operator> <literal type="number" pos:line="22" pos:column="35">1<pos:position pos:line="22" pos:column="36"/></literal></expr>]<pos:position pos:line="22" pos:column="37"/></index></name> <operator pos:line="22" pos:column="38">=<pos:position pos:line="22" pos:column="39"/></operator> <literal type="char" pos:line="22" pos:column="40">'\0'<pos:position pos:line="22" pos:column="44"/></literal></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then> <else pos:line="23" pos:column="5">else <block pos:line="23" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">strncpy<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">ident_str<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="24">value<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="31">sizeof<argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">ident_str<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">ident_str<pos:position pos:line="25" pos:column="14"/></name><index pos:line="25" pos:column="14">[<expr><sizeof pos:line="25" pos:column="15">sizeof<argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">ident_str<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></sizeof> <operator pos:line="25" pos:column="33">-<pos:position pos:line="25" pos:column="34"/></operator> <literal type="number" pos:line="25" pos:column="35">1<pos:position pos:line="25" pos:column="36"/></literal></expr>]<pos:position pos:line="25" pos:column="37"/></index></name> <operator pos:line="25" pos:column="38">=<pos:position pos:line="25" pos:column="39"/></operator> <literal type="char" pos:line="25" pos:column="40">'\0'<pos:position pos:line="25" pos:column="44"/></literal></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="28" pos:column="3">status<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <call><name pos:line="28" pos:column="12">lcc_string_to_identifier<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(<argument><expr><name pos:line="28" pos:column="37">c<pos:position pos:line="28" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="40">ident<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">ident_str<pos:position pos:line="28" pos:column="56"/></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">status<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">!=<pos:position pos:line="29" pos:column="16"/></operator> <literal type="number" pos:line="29" pos:column="17">0<pos:position pos:line="29" pos:column="18"/></literal></expr>)<pos:position pos:line="29" pos:column="19"/></condition><then pos:line="29" pos:column="19"> <block pos:line="29" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">fprintf<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><name pos:line="30" pos:column="13">stderr<pos:position pos:line="30" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="21">"ERROR: Failed to parse identifier ``%s'': %s.\n"<pos:position pos:line="30" pos:column="70"/></literal></expr></argument>,
            <argument><expr><name pos:line="31" pos:column="13">ident_str<pos:position pos:line="31" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="24">lcc_strerror<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name pos:line="31" pos:column="37">c<pos:position pos:line="31" pos:column="38"/></name></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><operator pos:line="32" pos:column="13">-<pos:position pos:line="32" pos:column="14"/></operator><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal><operator pos:line="32" pos:column="15">)<pos:position pos:line="32" pos:column="16"/></operator></expr>;<pos:position pos:line="32" pos:column="17"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>
  <return pos:line="34" pos:column="3">return <expr><operator pos:line="34" pos:column="10">(<pos:position pos:line="34" pos:column="11"/></operator><literal type="number" pos:line="34" pos:column="11">0<pos:position pos:line="34" pos:column="12"/></literal><operator pos:line="34" pos:column="12">)<pos:position pos:line="34" pos:column="13"/></operator></expr>;<pos:position pos:line="34" pos:column="14"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2494_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">uc_iterator_destroy<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">uc_iter_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">iter<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list> <block pos:line="1" pos:column="43">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name pos:line="2" pos:column="7">iter<pos:position pos:line="2" pos:column="11"/></name> <operator pos:line="2" pos:column="12">==<pos:position pos:line="2" pos:column="14"/></operator> <name pos:line="2" pos:column="15">NULL<pos:position pos:line="2" pos:column="19"/></name></expr>)<pos:position pos:line="2" pos:column="20"/></condition><then pos:line="2" pos:column="20">
    <block type="pseudo"><return pos:line="3" pos:column="5">return;<pos:position pos:line="3" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">c_avl_iterator_destroy<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name><name pos:line="5" pos:column="26">iter<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="32">iter<pos:position pos:line="5" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">pthread_mutex_unlock<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><operator pos:line="6" pos:column="24">&amp;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="25">cache_lock<pos:position pos:line="6" pos:column="35"/></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">free<pos:position pos:line="8" pos:column="7"/></name><argument_list pos:line="8" pos:column="7">(<argument><expr><name pos:line="8" pos:column="8">iter<pos:position pos:line="8" pos:column="12"/></name></expr></argument>)<pos:position pos:line="8" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="14"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1484_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">notify_email_config<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">key<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">value<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list> <block pos:line="1" pos:column="68">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><call><name pos:line="2" pos:column="7">strcasecmp<pos:position pos:line="2" pos:column="17"/></name><argument_list pos:line="2" pos:column="17">(<argument><expr><name pos:line="2" pos:column="18">key<pos:position pos:line="2" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="2" pos:column="23">"Recipient"<pos:position pos:line="2" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="2" pos:column="35"/></argument_list></call> <operator pos:line="2" pos:column="36">==<pos:position pos:line="2" pos:column="38"/></operator> <literal type="number" pos:line="2" pos:column="39">0<pos:position pos:line="2" pos:column="40"/></literal></expr>)<pos:position pos:line="2" pos:column="41"/></condition><then pos:line="2" pos:column="41"> <block pos:line="2" pos:column="42">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier><modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">tmp<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="5" pos:column="5">tmp<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">=<pos:position pos:line="5" pos:column="10"/></operator> <call><name pos:line="5" pos:column="11">realloc<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">recipients<pos:position pos:line="5" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="31">(<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">recipients_len<pos:position pos:line="5" pos:column="46"/></name> <operator pos:line="5" pos:column="47">+<pos:position pos:line="5" pos:column="48"/></operator> <literal type="number" pos:line="5" pos:column="49">1<pos:position pos:line="5" pos:column="50"/></literal><operator pos:line="5" pos:column="50">)<pos:position pos:line="5" pos:column="51"/></operator> <operator pos:line="5" pos:column="52">*<pos:position pos:line="5" pos:column="53"/></operator> <sizeof pos:line="5" pos:column="54">sizeof<argument_list pos:line="5" pos:column="60">(<argument><expr><name pos:line="5" pos:column="61">char<pos:position pos:line="5" pos:column="65"/></name> <operator pos:line="5" pos:column="66">*<pos:position pos:line="5" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="70"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">tmp<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">==<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition><then pos:line="6" pos:column="21"> <block pos:line="6" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="7" pos:column="7">ERROR<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><literal type="string" pos:line="7" pos:column="13">"notify_email: realloc failed."<pos:position pos:line="7" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></expr_stmt>
      <return pos:line="8" pos:column="7">return <expr><operator pos:line="8" pos:column="14">-<pos:position pos:line="8" pos:column="15"/></operator><literal type="number" pos:line="8" pos:column="15">1<pos:position pos:line="8" pos:column="16"/></literal></expr>;<pos:position pos:line="8" pos:column="17"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="11" pos:column="5">recipients<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">tmp<pos:position pos:line="11" pos:column="21"/></name></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">recipients<pos:position pos:line="12" pos:column="15"/></name><index pos:line="12" pos:column="15">[<expr><name pos:line="12" pos:column="16">recipients_len<pos:position pos:line="12" pos:column="30"/></name></expr>]<pos:position pos:line="12" pos:column="31"/></index></name> <operator pos:line="12" pos:column="32">=<pos:position pos:line="12" pos:column="33"/></operator> <call><name pos:line="12" pos:column="34">strdup<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">value<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">recipients<pos:position pos:line="13" pos:column="19"/></name><index pos:line="13" pos:column="19">[<expr><name pos:line="13" pos:column="20">recipients_len<pos:position pos:line="13" pos:column="34"/></name></expr>]<pos:position pos:line="13" pos:column="35"/></index></name> <operator pos:line="13" pos:column="36">==<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="39">NULL<pos:position pos:line="13" pos:column="43"/></name></expr>)<pos:position pos:line="13" pos:column="44"/></condition><then pos:line="13" pos:column="44"> <block pos:line="13" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">ERROR<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><literal type="string" pos:line="14" pos:column="13">"notify_email: strdup failed."<pos:position pos:line="14" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
      <return pos:line="15" pos:column="7">return <expr><operator pos:line="15" pos:column="14">-<pos:position pos:line="15" pos:column="15"/></operator><literal type="number" pos:line="15" pos:column="15">1<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="17" pos:column="5">recipients_len<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">++<pos:position pos:line="17" pos:column="21"/></operator></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then> <elseif pos:line="18" pos:column="5">else <if pos:line="18" pos:column="10">if <condition pos:line="18" pos:column="13">(<expr><literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal> <operator pos:line="18" pos:column="16">==<pos:position pos:line="18" pos:column="18"/></operator> <call><name pos:line="18" pos:column="19">strcasecmp<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">key<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="35">"SMTPServer"<pos:position pos:line="18" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="49"/></condition><then pos:line="18" pos:column="49"> <block pos:line="18" pos:column="50">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">sfree<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><name pos:line="19" pos:column="11">smtp_host<pos:position pos:line="19" pos:column="20"/></name></expr></argument>)<pos:position pos:line="19" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">smtp_host<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <call><name pos:line="20" pos:column="17">strdup<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">value<pos:position pos:line="20" pos:column="29"/></name></expr></argument>)<pos:position pos:line="20" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if></elseif> <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal> <operator pos:line="21" pos:column="16">==<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">strcasecmp<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">key<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="35">"SMTPPort"<pos:position pos:line="21" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="47"/></condition><then pos:line="21" pos:column="47"> <block pos:line="21" pos:column="48">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">int<pos:position pos:line="22" pos:column="8"/></name></type> <name pos:line="22" pos:column="9">port_tmp<pos:position pos:line="22" pos:column="17"/></name> <init pos:line="22" pos:column="18">= <expr><call><name pos:line="22" pos:column="20">atoi<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">value<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="32"/></decl_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">port_tmp<pos:position pos:line="23" pos:column="17"/></name> <argument_list type="generic" pos:line="23" pos:column="18">&lt; <argument><expr><literal type="number" pos:line="23" pos:column="20">1<pos:position pos:line="23" pos:column="21"/></literal> <operator pos:line="23" pos:column="22">||<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">port_tmp<pos:position pos:line="23" pos:column="33"/></name></expr></argument> &gt;<pos:position pos:line="23" pos:column="38"/></argument_list></name> <literal type="number" pos:line="23" pos:column="36">65535<pos:position pos:line="23" pos:column="41"/></literal></expr>)<pos:position pos:line="23" pos:column="42"/></condition><then pos:line="23" pos:column="42"> <block pos:line="23" pos:column="43">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">WARNING<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><literal type="string" pos:line="24" pos:column="15">"notify_email plugin: Invalid SMTP port: %i"<pos:position pos:line="24" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">port_tmp<pos:position pos:line="24" pos:column="69"/></name></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="71"/></expr_stmt>
      <return pos:line="25" pos:column="7">return <expr><literal type="number" pos:line="25" pos:column="14">1<pos:position pos:line="25" pos:column="15"/></literal></expr>;<pos:position pos:line="25" pos:column="16"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="27" pos:column="5">smtp_port<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">port_tmp<pos:position pos:line="27" pos:column="25"/></name></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if></elseif> <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><literal type="number" pos:line="28" pos:column="14">0<pos:position pos:line="28" pos:column="15"/></literal> <operator pos:line="28" pos:column="16">==<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="19">strcasecmp<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">key<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="35">"SMTPUser"<pos:position pos:line="28" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="47"/></condition><then pos:line="28" pos:column="47"> <block pos:line="28" pos:column="48">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">sfree<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><name pos:line="29" pos:column="11">smtp_user<pos:position pos:line="29" pos:column="20"/></name></expr></argument>)<pos:position pos:line="29" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">smtp_user<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <call><name pos:line="30" pos:column="17">strdup<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">value<pos:position pos:line="30" pos:column="29"/></name></expr></argument>)<pos:position pos:line="30" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if></elseif> <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><literal type="number" pos:line="31" pos:column="14">0<pos:position pos:line="31" pos:column="15"/></literal> <operator pos:line="31" pos:column="16">==<pos:position pos:line="31" pos:column="18"/></operator> <call><name pos:line="31" pos:column="19">strcasecmp<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">key<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="35">"SMTPPassword"<pos:position pos:line="31" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="51"/></condition><then pos:line="31" pos:column="51"> <block pos:line="31" pos:column="52">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">sfree<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><name pos:line="32" pos:column="11">smtp_password<pos:position pos:line="32" pos:column="24"/></name></expr></argument>)<pos:position pos:line="32" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">smtp_password<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <call><name pos:line="33" pos:column="21">strdup<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">value<pos:position pos:line="33" pos:column="33"/></name></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if></elseif> <elseif pos:line="34" pos:column="5">else <if pos:line="34" pos:column="10">if <condition pos:line="34" pos:column="13">(<expr><literal type="number" pos:line="34" pos:column="14">0<pos:position pos:line="34" pos:column="15"/></literal> <operator pos:line="34" pos:column="16">==<pos:position pos:line="34" pos:column="18"/></operator> <call><name pos:line="34" pos:column="19">strcasecmp<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">key<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="35">"From"<pos:position pos:line="34" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="43"/></condition><then pos:line="34" pos:column="43"> <block pos:line="34" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">sfree<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><name pos:line="35" pos:column="11">email_from<pos:position pos:line="35" pos:column="21"/></name></expr></argument>)<pos:position pos:line="35" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">email_from<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <call><name pos:line="36" pos:column="18">strdup<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">value<pos:position pos:line="36" pos:column="30"/></name></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if></elseif> <elseif pos:line="37" pos:column="5">else <if pos:line="37" pos:column="10">if <condition pos:line="37" pos:column="13">(<expr><literal type="number" pos:line="37" pos:column="14">0<pos:position pos:line="37" pos:column="15"/></literal> <operator pos:line="37" pos:column="16">==<pos:position pos:line="37" pos:column="18"/></operator> <call><name pos:line="37" pos:column="19">strcasecmp<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">key<pos:position pos:line="37" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="35">"Subject"<pos:position pos:line="37" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="46"/></condition><then pos:line="37" pos:column="46"> <block pos:line="37" pos:column="47">{
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">sfree<pos:position pos:line="38" pos:column="10"/></name><argument_list pos:line="38" pos:column="10">(<argument><expr><name pos:line="38" pos:column="11">email_subject<pos:position pos:line="38" pos:column="24"/></name></expr></argument>)<pos:position pos:line="38" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">email_subject<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <call><name pos:line="39" pos:column="21">strdup<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">value<pos:position pos:line="39" pos:column="33"/></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if></elseif> <else pos:line="40" pos:column="5">else <block pos:line="40" pos:column="10">{
    <return pos:line="41" pos:column="5">return <expr><operator pos:line="41" pos:column="12">-<pos:position pos:line="41" pos:column="13"/></operator><literal type="number" pos:line="41" pos:column="13">1<pos:position pos:line="41" pos:column="14"/></literal></expr>;<pos:position pos:line="41" pos:column="15"/></return>
  }<pos:position pos:line="42" pos:column="4"/></block></else></if>
  <return pos:line="43" pos:column="3">return <expr><literal type="number" pos:line="43" pos:column="10">0<pos:position pos:line="43" pos:column="11"/></literal></expr>;<pos:position pos:line="43" pos:column="12"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

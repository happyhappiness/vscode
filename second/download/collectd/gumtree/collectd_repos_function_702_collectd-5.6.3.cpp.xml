<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_702_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mic_config<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">key<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">value<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list> <block pos:line="1" pos:column="59">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name pos:line="2" pos:column="7">temp_ignore<pos:position pos:line="2" pos:column="18"/></name> <operator pos:line="2" pos:column="19">==<pos:position pos:line="2" pos:column="21"/></operator> <name pos:line="2" pos:column="22">NULL<pos:position pos:line="2" pos:column="26"/></name></expr>)<pos:position pos:line="2" pos:column="27"/></condition><then pos:line="2" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="3" pos:column="5">temp_ignore<pos:position pos:line="3" pos:column="16"/></name> <operator pos:line="3" pos:column="17">=<pos:position pos:line="3" pos:column="18"/></operator> <call><name pos:line="3" pos:column="19">ignorelist_create<pos:position pos:line="3" pos:column="36"/></name><argument_list pos:line="3" pos:column="36">(<argument><expr><literal type="number" pos:line="3" pos:column="37">1<pos:position pos:line="3" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="40"/></expr_stmt></block></then></if>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">power_ignore<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">==<pos:position pos:line="4" pos:column="22"/></operator> <name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr>)<pos:position pos:line="4" pos:column="28"/></condition><then pos:line="4" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="5">power_ignore<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">=<pos:position pos:line="5" pos:column="19"/></operator> <call><name pos:line="5" pos:column="20">ignorelist_create<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">(<argument><expr><literal type="number" pos:line="5" pos:column="38">1<pos:position pos:line="5" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt></block></then></if>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">temp_ignore<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">==<pos:position pos:line="6" pos:column="21"/></operator> <name pos:line="6" pos:column="22">NULL<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">||<pos:position pos:line="6" pos:column="29"/></operator> <name pos:line="6" pos:column="30">power_ignore<pos:position pos:line="6" pos:column="42"/></name> <operator pos:line="6" pos:column="43">==<pos:position pos:line="6" pos:column="45"/></operator> <name pos:line="6" pos:column="46">NULL<pos:position pos:line="6" pos:column="50"/></name></expr>)<pos:position pos:line="6" pos:column="51"/></condition><then pos:line="6" pos:column="51">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal><operator pos:line="7" pos:column="14">)<pos:position pos:line="7" pos:column="15"/></operator></expr>;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><call><name pos:line="9" pos:column="7">strcasecmp<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><literal type="string" pos:line="9" pos:column="18">"ShowCPU"<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="29">key<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call> <operator pos:line="9" pos:column="34">==<pos:position pos:line="9" pos:column="36"/></operator> <literal type="number" pos:line="9" pos:column="37">0<pos:position pos:line="9" pos:column="38"/></literal></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39"> <block pos:line="9" pos:column="40">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">show_cpu<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">IS_TRUE<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">value<pos:position pos:line="10" pos:column="29"/></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then> <elseif pos:line="11" pos:column="5">else <if pos:line="11" pos:column="10">if <condition pos:line="11" pos:column="13">(<expr><call><name pos:line="11" pos:column="14">strcasecmp<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><literal type="string" pos:line="11" pos:column="25">"ShowCPUCores"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="41">key<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call> <operator pos:line="11" pos:column="46">==<pos:position pos:line="11" pos:column="48"/></operator> <literal type="number" pos:line="11" pos:column="49">0<pos:position pos:line="11" pos:column="50"/></literal></expr>)<pos:position pos:line="11" pos:column="51"/></condition><then pos:line="11" pos:column="51"> <block pos:line="11" pos:column="52">{
    <expr_stmt><expr><name pos:line="12" pos:column="5">show_cpu_cores<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <call><name pos:line="12" pos:column="22">IS_TRUE<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">value<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if></elseif> <elseif pos:line="13" pos:column="5">else <if pos:line="13" pos:column="10">if <condition pos:line="13" pos:column="13">(<expr><call><name pos:line="13" pos:column="14">strcasecmp<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><literal type="string" pos:line="13" pos:column="25">"ShowTemperatures"<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">key<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call> <operator pos:line="13" pos:column="50">==<pos:position pos:line="13" pos:column="52"/></operator> <literal type="number" pos:line="13" pos:column="53">0<pos:position pos:line="13" pos:column="54"/></literal></expr>)<pos:position pos:line="13" pos:column="55"/></condition><then pos:line="13" pos:column="55"> <block pos:line="13" pos:column="56">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">show_temps<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">IS_TRUE<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">value<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if></elseif> <elseif pos:line="15" pos:column="5">else <if pos:line="15" pos:column="10">if <condition pos:line="15" pos:column="13">(<expr><call><name pos:line="15" pos:column="14">strcasecmp<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><literal type="string" pos:line="15" pos:column="25">"ShowMemory"<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">key<pos:position pos:line="15" pos:column="42"/></name></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call> <operator pos:line="15" pos:column="44">==<pos:position pos:line="15" pos:column="46"/></operator> <literal type="number" pos:line="15" pos:column="47">0<pos:position pos:line="15" pos:column="48"/></literal></expr>)<pos:position pos:line="15" pos:column="49"/></condition><then pos:line="15" pos:column="49"> <block pos:line="15" pos:column="50">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">show_memory<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">IS_TRUE<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">value<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if></elseif> <elseif pos:line="17" pos:column="5">else <if pos:line="17" pos:column="10">if <condition pos:line="17" pos:column="13">(<expr><call><name pos:line="17" pos:column="14">strcasecmp<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><literal type="string" pos:line="17" pos:column="25">"ShowPower"<pos:position pos:line="17" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">key<pos:position pos:line="17" pos:column="41"/></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call> <operator pos:line="17" pos:column="43">==<pos:position pos:line="17" pos:column="45"/></operator> <literal type="number" pos:line="17" pos:column="46">0<pos:position pos:line="17" pos:column="47"/></literal></expr>)<pos:position pos:line="17" pos:column="48"/></condition><then pos:line="17" pos:column="48"> <block pos:line="17" pos:column="49">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">show_power<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">IS_TRUE<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">value<pos:position pos:line="18" pos:column="31"/></name></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if></elseif> <elseif pos:line="19" pos:column="5">else <if pos:line="19" pos:column="10">if <condition pos:line="19" pos:column="13">(<expr><call><name pos:line="19" pos:column="14">strcasecmp<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><literal type="string" pos:line="19" pos:column="25">"Temperature"<pos:position pos:line="19" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="40">key<pos:position pos:line="19" pos:column="43"/></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call> <operator pos:line="19" pos:column="45">==<pos:position pos:line="19" pos:column="47"/></operator> <literal type="number" pos:line="19" pos:column="48">0<pos:position pos:line="19" pos:column="49"/></literal></expr>)<pos:position pos:line="19" pos:column="50"/></condition><then pos:line="19" pos:column="50"> <block pos:line="19" pos:column="51">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ignorelist_add<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">temp_ignore<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="33">value<pos:position pos:line="20" pos:column="38"/></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if></elseif> <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><call><name pos:line="21" pos:column="14">strcasecmp<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><literal type="string" pos:line="21" pos:column="25">"IgnoreSelectedTemperature"<pos:position pos:line="21" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="54">key<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call> <operator pos:line="21" pos:column="59">==<pos:position pos:line="21" pos:column="61"/></operator> <literal type="number" pos:line="21" pos:column="62">0<pos:position pos:line="21" pos:column="63"/></literal></expr>)<pos:position pos:line="21" pos:column="64"/></condition><then pos:line="21" pos:column="64"> <block pos:line="21" pos:column="65">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">int<pos:position pos:line="22" pos:column="8"/></name></type> <name pos:line="22" pos:column="9">invert<pos:position pos:line="22" pos:column="15"/></name> <init pos:line="22" pos:column="16">= <expr><literal type="number" pos:line="22" pos:column="18">1<pos:position pos:line="22" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="20"/></decl_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">IS_TRUE<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><name pos:line="23" pos:column="17">value<pos:position pos:line="23" pos:column="22"/></name></expr></argument>)<pos:position pos:line="23" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="24"/></condition><then pos:line="23" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="7">invert<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">ignorelist_set_invert<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">temp_ignore<pos:position pos:line="25" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="40">invert<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if></elseif> <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><call><name pos:line="26" pos:column="14">strcasecmp<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><literal type="string" pos:line="26" pos:column="25">"Power"<pos:position pos:line="26" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">key<pos:position pos:line="26" pos:column="37"/></name></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call> <operator pos:line="26" pos:column="39">==<pos:position pos:line="26" pos:column="41"/></operator> <literal type="number" pos:line="26" pos:column="42">0<pos:position pos:line="26" pos:column="43"/></literal></expr>)<pos:position pos:line="26" pos:column="44"/></condition><then pos:line="26" pos:column="44"> <block pos:line="26" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">ignorelist_add<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">power_ignore<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="34">value<pos:position pos:line="27" pos:column="39"/></name></expr></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if></elseif> <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><call><name pos:line="28" pos:column="14">strcasecmp<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><literal type="string" pos:line="28" pos:column="25">"IgnoreSelectedPower"<pos:position pos:line="28" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="48">key<pos:position pos:line="28" pos:column="51"/></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call> <operator pos:line="28" pos:column="53">==<pos:position pos:line="28" pos:column="55"/></operator> <literal type="number" pos:line="28" pos:column="56">0<pos:position pos:line="28" pos:column="57"/></literal></expr>)<pos:position pos:line="28" pos:column="58"/></condition><then pos:line="28" pos:column="58"> <block pos:line="28" pos:column="59">{
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">int<pos:position pos:line="29" pos:column="8"/></name></type> <name pos:line="29" pos:column="9">invert<pos:position pos:line="29" pos:column="15"/></name> <init pos:line="29" pos:column="16">= <expr><literal type="number" pos:line="29" pos:column="18">1<pos:position pos:line="29" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="20"/></decl_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name pos:line="30" pos:column="9">IS_TRUE<pos:position pos:line="30" pos:column="16"/></name><argument_list pos:line="30" pos:column="16">(<argument><expr><name pos:line="30" pos:column="17">value<pos:position pos:line="30" pos:column="22"/></name></expr></argument>)<pos:position pos:line="30" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="24"/></condition><then pos:line="30" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">invert<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <literal type="number" pos:line="31" pos:column="16">0<pos:position pos:line="31" pos:column="17"/></literal></expr>;<pos:position pos:line="31" pos:column="18"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">ignorelist_set_invert<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">power_ignore<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">invert<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if></elseif> <else pos:line="33" pos:column="5">else <block pos:line="33" pos:column="10">{
    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><operator pos:line="34" pos:column="13">-<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal><operator pos:line="34" pos:column="15">)<pos:position pos:line="34" pos:column="16"/></operator></expr>;<pos:position pos:line="34" pos:column="17"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></else></if>
  <return pos:line="36" pos:column="3">return <expr><operator pos:line="36" pos:column="10">(<pos:position pos:line="36" pos:column="11"/></operator><literal type="number" pos:line="36" pos:column="11">0<pos:position pos:line="36" pos:column="12"/></literal><operator pos:line="36" pos:column="12">)<pos:position pos:line="36" pos:column="13"/></operator></expr>;<pos:position pos:line="36" pos:column="14"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

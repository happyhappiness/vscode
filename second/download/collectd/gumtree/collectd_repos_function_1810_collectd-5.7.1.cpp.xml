<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1810_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wh_flush_nolock<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">cdtime_t<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">timeout<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">wh_callback_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">cb<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list> <comment type="block" pos:line="1" pos:column="65">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">DEBUG<pos:position pos:line="5" pos:column="8"/></name><argument_list pos:line="5" pos:column="8">(<argument><expr><literal type="string" pos:line="5" pos:column="9">"write_http plugin: wh_flush_nolock: timeout = %.3f; "<pos:position pos:line="5" pos:column="63"/></literal>
        <literal type="string" pos:line="6" pos:column="9">"send_buffer_fill = %zu;"<pos:position pos:line="6" pos:column="34"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="7" pos:column="9">CDTIME_T_TO_DOUBLE<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">timeout<pos:position pos:line="7" pos:column="35"/></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="38">cb<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">-&gt;<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="42">send_buffer_fill<pos:position pos:line="7" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="60"/></expr_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* timeout == 0  =&gt; flush unconditionally */</comment>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">timeout<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">&gt;<pos:position pos:line="10" pos:column="19"/></operator> <literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block pos:line="10" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">cdtime_t<pos:position pos:line="11" pos:column="13"/></name></type> <name pos:line="11" pos:column="14">now<pos:position pos:line="11" pos:column="17"/></name></decl>;<pos:position pos:line="11" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">now<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">cdtime<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">()<pos:position pos:line="13" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">cb<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">send_buffer_init_time<pos:position pos:line="14" pos:column="35"/></name></name> <operator pos:line="14" pos:column="36">+<pos:position pos:line="14" pos:column="37"/></operator> <name pos:line="14" pos:column="38">timeout<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">)<pos:position pos:line="14" pos:column="46"/></operator> <operator pos:line="14" pos:column="47">&gt;<pos:position pos:line="14" pos:column="51"/></operator> <name pos:line="14" pos:column="49">now<pos:position pos:line="14" pos:column="52"/></name></expr>)<pos:position pos:line="14" pos:column="53"/></condition><then pos:line="14" pos:column="53">
      <block type="pseudo"><return pos:line="15" pos:column="7">return <expr><operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><literal type="number" pos:line="15" pos:column="15">0<pos:position pos:line="15" pos:column="16"/></literal><operator pos:line="15" pos:column="16">)<pos:position pos:line="15" pos:column="17"/></operator></expr>;<pos:position pos:line="15" pos:column="18"/></return></block></then></if>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name><name pos:line="18" pos:column="7">cb<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">-&gt;<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="11">format<pos:position pos:line="18" pos:column="17"/></name></name> <operator pos:line="18" pos:column="18">==<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">WH_FORMAT_COMMAND<pos:position pos:line="18" pos:column="38"/></name></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39"> <block pos:line="18" pos:column="40">{
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">cb<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">send_buffer_fill<pos:position pos:line="19" pos:column="29"/></name></name> <operator pos:line="19" pos:column="30">==<pos:position pos:line="19" pos:column="32"/></operator> <literal type="number" pos:line="19" pos:column="33">0<pos:position pos:line="19" pos:column="34"/></literal></expr>)<pos:position pos:line="19" pos:column="35"/></condition><then pos:line="19" pos:column="35"> <block pos:line="19" pos:column="36">{
      <expr_stmt><expr><name><name pos:line="20" pos:column="7">cb<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">send_buffer_init_time<pos:position pos:line="20" pos:column="32"/></name></name> <operator pos:line="20" pos:column="33">=<pos:position pos:line="20" pos:column="34"/></operator> <call><name pos:line="20" pos:column="35">cdtime<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">()<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
      <return pos:line="21" pos:column="7">return <expr><operator pos:line="21" pos:column="14">(<pos:position pos:line="21" pos:column="15"/></operator><literal type="number" pos:line="21" pos:column="15">0<pos:position pos:line="21" pos:column="16"/></literal><operator pos:line="21" pos:column="16">)<pos:position pos:line="21" pos:column="17"/></operator></expr>;<pos:position pos:line="21" pos:column="18"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="24" pos:column="5">status<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">wh_post_nolock<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><name pos:line="24" pos:column="29">cb<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="33">cb<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">send_buffer<pos:position pos:line="24" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">wh_reset_buffer<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">cb<pos:position pos:line="25" pos:column="23"/></name></expr></argument>)<pos:position pos:line="25" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then> <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><name><name pos:line="26" pos:column="14">cb<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">format<pos:position pos:line="26" pos:column="24"/></name></name> <operator pos:line="26" pos:column="25">==<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="28">WH_FORMAT_JSON<pos:position pos:line="26" pos:column="42"/></name> <operator pos:line="26" pos:column="43">||<pos:position pos:line="26" pos:column="45"/></operator> <name><name pos:line="26" pos:column="46">cb<pos:position pos:line="26" pos:column="48"/></name><operator pos:line="26" pos:column="48">-&gt;<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="50">format<pos:position pos:line="26" pos:column="56"/></name></name> <operator pos:line="26" pos:column="57">==<pos:position pos:line="26" pos:column="59"/></operator> <name pos:line="26" pos:column="60">WH_FORMAT_KAIROSDB<pos:position pos:line="26" pos:column="78"/></name></expr>)<pos:position pos:line="26" pos:column="79"/></condition><then pos:line="26" pos:column="79"> <block pos:line="26" pos:column="80">{
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">cb<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">send_buffer_fill<pos:position pos:line="27" pos:column="29"/></name></name> <operator pos:line="27" pos:column="30">&lt;=<pos:position pos:line="27" pos:column="35"/></operator> <literal type="number" pos:line="27" pos:column="33">2<pos:position pos:line="27" pos:column="34"/></literal></expr>)<pos:position pos:line="27" pos:column="35"/></condition><then pos:line="27" pos:column="35"> <block pos:line="27" pos:column="36">{
      <expr_stmt><expr><name><name pos:line="28" pos:column="7">cb<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">-&gt;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="11">send_buffer_init_time<pos:position pos:line="28" pos:column="32"/></name></name> <operator pos:line="28" pos:column="33">=<pos:position pos:line="28" pos:column="34"/></operator> <call><name pos:line="28" pos:column="35">cdtime<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">()<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt>
      <return pos:line="29" pos:column="7">return <expr><operator pos:line="29" pos:column="14">(<pos:position pos:line="29" pos:column="15"/></operator><literal type="number" pos:line="29" pos:column="15">0<pos:position pos:line="29" pos:column="16"/></literal><operator pos:line="29" pos:column="16">)<pos:position pos:line="29" pos:column="17"/></operator></expr>;<pos:position pos:line="29" pos:column="18"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="32" pos:column="5">status<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">format_json_finalize<pos:position pos:line="32" pos:column="34"/></name><argument_list pos:line="32" pos:column="34">(<argument><expr><name><name pos:line="32" pos:column="35">cb<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">-&gt;<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="39">send_buffer<pos:position pos:line="32" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="52">&amp;<pos:position pos:line="32" pos:column="57"/></operator><name><name pos:line="32" pos:column="53">cb<pos:position pos:line="32" pos:column="55"/></name><operator pos:line="32" pos:column="55">-&gt;<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="57">send_buffer_fill<pos:position pos:line="32" pos:column="73"/></name></name></expr></argument>,
                                  <argument><expr><operator pos:line="33" pos:column="35">&amp;<pos:position pos:line="33" pos:column="40"/></operator><name><name pos:line="33" pos:column="36">cb<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">-&gt;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="40">send_buffer_free<pos:position pos:line="33" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">status<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">!=<pos:position pos:line="34" pos:column="18"/></operator> <literal type="number" pos:line="34" pos:column="19">0<pos:position pos:line="34" pos:column="20"/></literal></expr>)<pos:position pos:line="34" pos:column="21"/></condition><then pos:line="34" pos:column="21"> <block pos:line="34" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">ERROR<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><literal type="string" pos:line="35" pos:column="13">"write_http: wh_flush_nolock: "<pos:position pos:line="35" pos:column="44"/></literal>
            <literal type="string" pos:line="36" pos:column="13">"format_json_finalize failed."<pos:position pos:line="36" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">wh_reset_buffer<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><name pos:line="37" pos:column="23">cb<pos:position pos:line="37" pos:column="25"/></name></expr></argument>)<pos:position pos:line="37" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>
      <return pos:line="38" pos:column="7">return <expr><operator pos:line="38" pos:column="14">(<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">status<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">)<pos:position pos:line="38" pos:column="22"/></operator></expr>;<pos:position pos:line="38" pos:column="23"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="41" pos:column="5">status<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <call><name pos:line="41" pos:column="14">wh_post_nolock<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">cb<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="33">cb<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">-&gt;<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="37">send_buffer<pos:position pos:line="41" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">wh_reset_buffer<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><name pos:line="42" pos:column="21">cb<pos:position pos:line="42" pos:column="23"/></name></expr></argument>)<pos:position pos:line="42" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if></elseif> <else pos:line="43" pos:column="5">else <block pos:line="43" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">ERROR<pos:position pos:line="44" pos:column="10"/></name><argument_list pos:line="44" pos:column="10">(<argument><expr><literal type="string" pos:line="44" pos:column="11">"write_http: wh_flush_nolock: "<pos:position pos:line="44" pos:column="42"/></literal>
          <literal type="string" pos:line="45" pos:column="11">"Unknown format: %i"<pos:position pos:line="45" pos:column="31"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="46" pos:column="11">cb<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">-&gt;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="15">format<pos:position pos:line="46" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="23"/></expr_stmt>
    <return pos:line="47" pos:column="5">return <expr><operator pos:line="47" pos:column="12">(<pos:position pos:line="47" pos:column="13"/></operator><operator pos:line="47" pos:column="13">-<pos:position pos:line="47" pos:column="14"/></operator><literal type="number" pos:line="47" pos:column="14">1<pos:position pos:line="47" pos:column="15"/></literal><operator pos:line="47" pos:column="15">)<pos:position pos:line="47" pos:column="16"/></operator></expr>;<pos:position pos:line="47" pos:column="17"/></return>
  }<pos:position pos:line="48" pos:column="4"/></block></else></if>

  <return pos:line="50" pos:column="3">return <expr><operator pos:line="50" pos:column="10">(<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="11">status<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">)<pos:position pos:line="50" pos:column="18"/></operator></expr>;<pos:position pos:line="50" pos:column="19"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

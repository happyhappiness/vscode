<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_223_collectd-4.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_read_table<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">host_definition_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">host<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">data_definition_t<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">data<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">snmp_pdu<pos:position pos:line="3" pos:column="18"/></name></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">req<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">snmp_pdu<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">res<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">variable_list<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">vb<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">data_set_t<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">ds<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">oid_t<pos:position pos:line="8" pos:column="8"/></name> <modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">oid_list<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">uint32_t<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">oid_list_len<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">status<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">i<pos:position pos:line="12" pos:column="8"/></name></decl>;<pos:position pos:line="12" pos:column="9"/></decl_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* `value_table' and `value_table_ptr' implement a linked list for each
   * value. `instance_list' and `instance_list_ptr' implement a linked list of
   * instance names. This is used to jump gaps in the table. */</comment>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">csnmp_list_instances_t<pos:position pos:line="17" pos:column="25"/></name> <modifier pos:line="17" pos:column="26">*<pos:position pos:line="17" pos:column="27"/></modifier></type><name pos:line="17" pos:column="27">instance_list<pos:position pos:line="17" pos:column="40"/></name></decl>;<pos:position pos:line="17" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">csnmp_list_instances_t<pos:position pos:line="18" pos:column="25"/></name> <modifier pos:line="18" pos:column="26">*<pos:position pos:line="18" pos:column="27"/></modifier></type><name pos:line="18" pos:column="27">instance_list_ptr<pos:position pos:line="18" pos:column="44"/></name></decl>;<pos:position pos:line="18" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">csnmp_table_values_t<pos:position pos:line="19" pos:column="23"/></name> <modifier pos:line="19" pos:column="24">*<pos:position pos:line="19" pos:column="25"/></modifier><modifier pos:line="19" pos:column="25">*<pos:position pos:line="19" pos:column="26"/></modifier></type><name pos:line="19" pos:column="26">value_table<pos:position pos:line="19" pos:column="37"/></name></decl>;<pos:position pos:line="19" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">csnmp_table_values_t<pos:position pos:line="20" pos:column="23"/></name> <modifier pos:line="20" pos:column="24">*<pos:position pos:line="20" pos:column="25"/></modifier><modifier pos:line="20" pos:column="25">*<pos:position pos:line="20" pos:column="26"/></modifier></type><name pos:line="20" pos:column="26">value_table_ptr<pos:position pos:line="20" pos:column="41"/></name></decl>;<pos:position pos:line="20" pos:column="42"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">DEBUG<pos:position pos:line="22" pos:column="8"/></name> <argument_list pos:line="22" pos:column="9">(<argument><expr><literal type="string" pos:line="22" pos:column="10">"snmp plugin: csnmp_read_table (host = %s, data = %s)"<pos:position pos:line="22" pos:column="64"/></literal></expr></argument>,
      <argument><expr><name><name pos:line="23" pos:column="7">host<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">name<pos:position pos:line="23" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="19">data<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">-&gt;<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="25">name<pos:position pos:line="23" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name pos:line="25" pos:column="3">ds<pos:position pos:line="25" pos:column="5"/></name> <operator pos:line="25" pos:column="6">=<pos:position pos:line="25" pos:column="7"/></operator> <call><name pos:line="25" pos:column="8">plugin_get_ds<pos:position pos:line="25" pos:column="21"/></name> <argument_list pos:line="25" pos:column="22">(<argument><expr><name><name pos:line="25" pos:column="23">data<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">-&gt;<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="29">type<pos:position pos:line="25" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><operator pos:line="26" pos:column="7">!<pos:position pos:line="26" pos:column="8"/></operator><name pos:line="26" pos:column="8">ds<pos:position pos:line="26" pos:column="10"/></name></expr>)<pos:position pos:line="26" pos:column="11"/></condition><then pos:line="26" pos:column="11">
  <block pos:line="27" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ERROR<pos:position pos:line="28" pos:column="10"/></name> <argument_list pos:line="28" pos:column="11">(<argument><expr><literal type="string" pos:line="28" pos:column="12">"snmp plugin: DataSet `%s' not defined."<pos:position pos:line="28" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="54">data<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">-&gt;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="60">type<pos:position pos:line="28" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><operator pos:line="29" pos:column="13">-<pos:position pos:line="29" pos:column="14"/></operator><literal type="number" pos:line="29" pos:column="14">1<pos:position pos:line="29" pos:column="15"/></literal><operator pos:line="29" pos:column="15">)<pos:position pos:line="29" pos:column="16"/></operator></expr>;<pos:position pos:line="29" pos:column="17"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name><name pos:line="32" pos:column="7">ds<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">-&gt;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="11">ds_num<pos:position pos:line="32" pos:column="17"/></name></name> <operator pos:line="32" pos:column="18">!=<pos:position pos:line="32" pos:column="20"/></operator> <name><name pos:line="32" pos:column="21">data<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">values_len<pos:position pos:line="32" pos:column="37"/></name></name></expr>)<pos:position pos:line="32" pos:column="38"/></condition><then pos:line="32" pos:column="38">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ERROR<pos:position pos:line="34" pos:column="10"/></name> <argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="string" pos:line="34" pos:column="12">"snmp plugin: DataSet `%s' requires %i values, but config talks about %i"<pos:position pos:line="34" pos:column="85"/></literal></expr></argument>,
	<argument><expr><name><name pos:line="35" pos:column="9">data<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">type<pos:position pos:line="35" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="21">ds<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">ds_num<pos:position pos:line="35" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="33">data<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">-&gt;<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="39">values_len<pos:position pos:line="35" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><operator pos:line="36" pos:column="13">-<pos:position pos:line="36" pos:column="14"/></operator><literal type="number" pos:line="36" pos:column="14">1<pos:position pos:line="36" pos:column="15"/></literal><operator pos:line="36" pos:column="15">)<pos:position pos:line="36" pos:column="16"/></operator></expr>;<pos:position pos:line="36" pos:column="17"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="39" pos:column="3">/* We need a copy of all the OIDs, because GETNEXT will destroy them. */</comment>
  <expr_stmt><expr><name pos:line="40" pos:column="3">oid_list_len<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <name><name pos:line="40" pos:column="18">data<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">-&gt;<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="24">values_len<pos:position pos:line="40" pos:column="34"/></name></name> <operator pos:line="40" pos:column="35">+<pos:position pos:line="40" pos:column="36"/></operator> <literal type="number" pos:line="40" pos:column="37">1<pos:position pos:line="40" pos:column="38"/></literal></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name pos:line="41" pos:column="3">oid_list<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <operator pos:line="41" pos:column="14">(<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">oid_t<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">*<pos:position pos:line="41" pos:column="22"/></operator><operator pos:line="41" pos:column="22">)<pos:position pos:line="41" pos:column="23"/></operator> <call><name pos:line="41" pos:column="24">malloc<pos:position pos:line="41" pos:column="30"/></name> <argument_list pos:line="41" pos:column="31">(<argument><expr><sizeof pos:line="41" pos:column="32">sizeof <argument_list pos:line="41" pos:column="39">(<argument><expr><name pos:line="41" pos:column="40">oid_t<pos:position pos:line="41" pos:column="45"/></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></sizeof> <operator pos:line="41" pos:column="47">*<pos:position pos:line="41" pos:column="48"/></operator> <operator pos:line="41" pos:column="49">(<pos:position pos:line="41" pos:column="50"/></operator><name pos:line="41" pos:column="50">oid_list_len<pos:position pos:line="41" pos:column="62"/></name><operator pos:line="41" pos:column="62">)<pos:position pos:line="41" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="65"/></expr_stmt>
  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><name pos:line="42" pos:column="7">oid_list<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">==<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">NULL<pos:position pos:line="42" pos:column="23"/></name></expr>)<pos:position pos:line="42" pos:column="24"/></condition><then pos:line="42" pos:column="24">
    <block type="pseudo"><return pos:line="43" pos:column="5">return <expr><operator pos:line="43" pos:column="12">(<pos:position pos:line="43" pos:column="13"/></operator><operator pos:line="43" pos:column="13">-<pos:position pos:line="43" pos:column="14"/></operator><literal type="number" pos:line="43" pos:column="14">1<pos:position pos:line="43" pos:column="15"/></literal><operator pos:line="43" pos:column="15">)<pos:position pos:line="43" pos:column="16"/></operator></expr>;<pos:position pos:line="43" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">memcpy<pos:position pos:line="44" pos:column="9"/></name> <argument_list pos:line="44" pos:column="10">(<argument><expr><name pos:line="44" pos:column="11">oid_list<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="21">&amp;<pos:position pos:line="44" pos:column="26"/></operator><name><name pos:line="44" pos:column="22">data<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">-&gt;<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="28">instance<pos:position pos:line="44" pos:column="36"/></name><operator pos:line="44" pos:column="36">.<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="37">oid<pos:position pos:line="44" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="42">sizeof <argument_list pos:line="44" pos:column="49">(<argument><expr><name pos:line="44" pos:column="50">oid_t<pos:position pos:line="44" pos:column="55"/></name></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="58"/></expr_stmt>
  <for pos:line="45" pos:column="3">for <control pos:line="45" pos:column="7">(<init><expr><name pos:line="45" pos:column="8">i<pos:position pos:line="45" pos:column="9"/></name> <operator pos:line="45" pos:column="10">=<pos:position pos:line="45" pos:column="11"/></operator> <literal type="number" pos:line="45" pos:column="12">0<pos:position pos:line="45" pos:column="13"/></literal></expr>;<pos:position pos:line="45" pos:column="14"/></init> <condition><expr><name pos:line="45" pos:column="15">i<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">&lt;<pos:position pos:line="45" pos:column="21"/></operator> <name><name pos:line="45" pos:column="19">data<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">-&gt;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="25">values_len<pos:position pos:line="45" pos:column="35"/></name></name></expr>;<pos:position pos:line="45" pos:column="36"/></condition> <incr><expr><name pos:line="45" pos:column="37">i<pos:position pos:line="45" pos:column="38"/></name><operator pos:line="45" pos:column="38">++<pos:position pos:line="45" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="45" pos:column="41"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="5">memcpy<pos:position pos:line="46" pos:column="11"/></name> <argument_list pos:line="46" pos:column="12">(<argument><expr><name pos:line="46" pos:column="13">oid_list<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">+<pos:position pos:line="46" pos:column="23"/></operator> <operator pos:line="46" pos:column="24">(<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="25">i<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">+<pos:position pos:line="46" pos:column="28"/></operator> <literal type="number" pos:line="46" pos:column="29">1<pos:position pos:line="46" pos:column="30"/></literal><operator pos:line="46" pos:column="30">)<pos:position pos:line="46" pos:column="31"/></operator></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="33">data<pos:position pos:line="46" pos:column="37"/></name><operator pos:line="46" pos:column="37">-&gt;<pos:position pos:line="46" pos:column="42"/></operator><name pos:line="46" pos:column="39">values<pos:position pos:line="46" pos:column="45"/></name></name> <operator pos:line="46" pos:column="46">+<pos:position pos:line="46" pos:column="47"/></operator> <name pos:line="46" pos:column="48">i<pos:position pos:line="46" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="51">sizeof <argument_list pos:line="46" pos:column="58">(<argument><expr><name pos:line="46" pos:column="59">oid_t<pos:position pos:line="46" pos:column="64"/></name></expr></argument>)<pos:position pos:line="46" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="67"/></expr_stmt></block></for>

  <comment type="block" pos:line="48" pos:column="3">/* Allocate the `value_table' */</comment>
  <expr_stmt><expr><name pos:line="49" pos:column="3">value_table<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">=<pos:position pos:line="49" pos:column="16"/></operator> <operator pos:line="49" pos:column="17">(<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">csnmp_table_values_t<pos:position pos:line="49" pos:column="38"/></name> <operator pos:line="49" pos:column="39">*<pos:position pos:line="49" pos:column="40"/></operator><operator pos:line="49" pos:column="40">*<pos:position pos:line="49" pos:column="41"/></operator><operator pos:line="49" pos:column="41">)<pos:position pos:line="49" pos:column="42"/></operator> <call><name pos:line="49" pos:column="43">malloc<pos:position pos:line="49" pos:column="49"/></name> <argument_list pos:line="49" pos:column="50">(<argument><expr><sizeof pos:line="49" pos:column="51">sizeof <argument_list pos:line="49" pos:column="58">(<argument><expr><name pos:line="49" pos:column="59">csnmp_table_values_t<pos:position pos:line="49" pos:column="79"/></name> <operator pos:line="49" pos:column="80">*<pos:position pos:line="49" pos:column="81"/></operator></expr></argument>)<pos:position pos:line="49" pos:column="82"/></argument_list></sizeof>
      <operator pos:line="50" pos:column="7">*<pos:position pos:line="50" pos:column="8"/></operator> <literal type="number" pos:line="50" pos:column="9">2<pos:position pos:line="50" pos:column="10"/></literal> <operator pos:line="50" pos:column="11">*<pos:position pos:line="50" pos:column="12"/></operator> <name><name pos:line="50" pos:column="13">data<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">-&gt;<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="19">values_len<pos:position pos:line="50" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="31"/></expr_stmt>
  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><name pos:line="51" pos:column="7">value_table<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">==<pos:position pos:line="51" pos:column="21"/></operator> <name pos:line="51" pos:column="22">NULL<pos:position pos:line="51" pos:column="26"/></name></expr>)<pos:position pos:line="51" pos:column="27"/></condition><then pos:line="51" pos:column="27">
  <block pos:line="52" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">sfree<pos:position pos:line="53" pos:column="10"/></name> <argument_list pos:line="53" pos:column="11">(<argument><expr><name pos:line="53" pos:column="12">oid_list<pos:position pos:line="53" pos:column="20"/></name></expr></argument>)<pos:position pos:line="53" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="22"/></expr_stmt>
    <return pos:line="54" pos:column="5">return <expr><operator pos:line="54" pos:column="12">(<pos:position pos:line="54" pos:column="13"/></operator><operator pos:line="54" pos:column="13">-<pos:position pos:line="54" pos:column="14"/></operator><literal type="number" pos:line="54" pos:column="14">1<pos:position pos:line="54" pos:column="15"/></literal><operator pos:line="54" pos:column="15">)<pos:position pos:line="54" pos:column="16"/></operator></expr>;<pos:position pos:line="54" pos:column="17"/></return>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">memset<pos:position pos:line="56" pos:column="9"/></name> <argument_list pos:line="56" pos:column="10">(<argument><expr><name pos:line="56" pos:column="11">value_table<pos:position pos:line="56" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="56" pos:column="24">'\0'<pos:position pos:line="56" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="30">sizeof <argument_list pos:line="56" pos:column="37">(<argument><expr><name pos:line="56" pos:column="38">csnmp_table_values_t<pos:position pos:line="56" pos:column="58"/></name> <operator pos:line="56" pos:column="59">*<pos:position pos:line="56" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="56" pos:column="61"/></argument_list></sizeof> <operator pos:line="56" pos:column="62">*<pos:position pos:line="56" pos:column="63"/></operator> <literal type="number" pos:line="56" pos:column="64">2<pos:position pos:line="56" pos:column="65"/></literal> <operator pos:line="56" pos:column="66">*<pos:position pos:line="56" pos:column="67"/></operator> <name><name pos:line="56" pos:column="68">data<pos:position pos:line="56" pos:column="72"/></name><operator pos:line="56" pos:column="72">-&gt;<pos:position pos:line="56" pos:column="77"/></operator><name pos:line="56" pos:column="74">values_len<pos:position pos:line="56" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="86"/></expr_stmt>
  <expr_stmt><expr><name pos:line="57" pos:column="3">value_table_ptr<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="21">value_table<pos:position pos:line="57" pos:column="32"/></name> <operator pos:line="57" pos:column="33">+<pos:position pos:line="57" pos:column="34"/></operator> <name><name pos:line="57" pos:column="35">data<pos:position pos:line="57" pos:column="39"/></name><operator pos:line="57" pos:column="39">-&gt;<pos:position pos:line="57" pos:column="44"/></operator><name pos:line="57" pos:column="41">values_len<pos:position pos:line="57" pos:column="51"/></name></name></expr>;<pos:position pos:line="57" pos:column="52"/></expr_stmt>
  
  <expr_stmt><expr><name pos:line="59" pos:column="3">instance_list<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <name pos:line="59" pos:column="19">NULL<pos:position pos:line="59" pos:column="23"/></name></expr>;<pos:position pos:line="59" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="60" pos:column="3">instance_list_ptr<pos:position pos:line="60" pos:column="20"/></name> <operator pos:line="60" pos:column="21">=<pos:position pos:line="60" pos:column="22"/></operator> <name pos:line="60" pos:column="23">NULL<pos:position pos:line="60" pos:column="27"/></name></expr>;<pos:position pos:line="60" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name pos:line="62" pos:column="3">status<pos:position pos:line="62" pos:column="9"/></name> <operator pos:line="62" pos:column="10">=<pos:position pos:line="62" pos:column="11"/></operator> <literal type="number" pos:line="62" pos:column="12">0<pos:position pos:line="62" pos:column="13"/></literal></expr>;<pos:position pos:line="62" pos:column="14"/></expr_stmt>
  <while pos:line="63" pos:column="3">while <condition pos:line="63" pos:column="9">(<expr><name pos:line="63" pos:column="10">status<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">==<pos:position pos:line="63" pos:column="19"/></operator> <literal type="number" pos:line="63" pos:column="20">0<pos:position pos:line="63" pos:column="21"/></literal></expr>)<pos:position pos:line="63" pos:column="22"/></condition>
  <block pos:line="64" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="65" pos:column="5">csnmp_list_instances_t<pos:position pos:line="65" pos:column="27"/></name> <modifier pos:line="65" pos:column="28">*<pos:position pos:line="65" pos:column="29"/></modifier></type><name pos:line="65" pos:column="29">il<pos:position pos:line="65" pos:column="31"/></name></decl>;<pos:position pos:line="65" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><name pos:line="67" pos:column="5">req<pos:position pos:line="67" pos:column="8"/></name> <operator pos:line="67" pos:column="9">=<pos:position pos:line="67" pos:column="10"/></operator> <call><name pos:line="67" pos:column="11">snmp_pdu_create<pos:position pos:line="67" pos:column="26"/></name> <argument_list pos:line="67" pos:column="27">(<argument><expr><name pos:line="67" pos:column="28">SNMP_MSG_GETNEXT<pos:position pos:line="67" pos:column="44"/></name></expr></argument>)<pos:position pos:line="67" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name pos:line="68" pos:column="9">req<pos:position pos:line="68" pos:column="12"/></name> <operator pos:line="68" pos:column="13">==<pos:position pos:line="68" pos:column="15"/></operator> <name pos:line="68" pos:column="16">NULL<pos:position pos:line="68" pos:column="20"/></name></expr>)<pos:position pos:line="68" pos:column="21"/></condition><then pos:line="68" pos:column="21">
    <block pos:line="69" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">ERROR<pos:position pos:line="70" pos:column="12"/></name> <argument_list pos:line="70" pos:column="13">(<argument><expr><literal type="string" pos:line="70" pos:column="14">"snmp plugin: snmp_pdu_create failed."<pos:position pos:line="70" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name pos:line="71" pos:column="7">status<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">=<pos:position pos:line="71" pos:column="15"/></operator> <operator pos:line="71" pos:column="16">-<pos:position pos:line="71" pos:column="17"/></operator><literal type="number" pos:line="71" pos:column="17">1<pos:position pos:line="71" pos:column="18"/></literal></expr>;<pos:position pos:line="71" pos:column="19"/></expr_stmt>
      <break pos:line="72" pos:column="7">break;<pos:position pos:line="72" pos:column="13"/></break>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <for pos:line="75" pos:column="5">for <control pos:line="75" pos:column="9">(<init><expr><name pos:line="75" pos:column="10">i<pos:position pos:line="75" pos:column="11"/></name> <operator pos:line="75" pos:column="12">=<pos:position pos:line="75" pos:column="13"/></operator> <literal type="number" pos:line="75" pos:column="14">0<pos:position pos:line="75" pos:column="15"/></literal></expr>;<pos:position pos:line="75" pos:column="16"/></init> <condition><expr><name pos:line="75" pos:column="17">i<pos:position pos:line="75" pos:column="18"/></name> <operator pos:line="75" pos:column="19">&lt;<pos:position pos:line="75" pos:column="23"/></operator> <name pos:line="75" pos:column="21">oid_list_len<pos:position pos:line="75" pos:column="33"/></name></expr>;<pos:position pos:line="75" pos:column="34"/></condition> <incr><expr><name pos:line="75" pos:column="35">i<pos:position pos:line="75" pos:column="36"/></name><operator pos:line="75" pos:column="36">++<pos:position pos:line="75" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="75" pos:column="39"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="7">snmp_add_null_var<pos:position pos:line="76" pos:column="24"/></name> <argument_list pos:line="76" pos:column="25">(<argument><expr><name pos:line="76" pos:column="26">req<pos:position pos:line="76" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="31">oid_list<pos:position pos:line="76" pos:column="39"/></name><index pos:line="76" pos:column="39">[<expr><name pos:line="76" pos:column="40">i<pos:position pos:line="76" pos:column="41"/></name></expr>]<pos:position pos:line="76" pos:column="42"/></index></name><operator pos:line="76" pos:column="42">.<pos:position pos:line="76" pos:column="43"/></operator><name pos:line="76" pos:column="43">oid<pos:position pos:line="76" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="48">oid_list<pos:position pos:line="76" pos:column="56"/></name><index pos:line="76" pos:column="56">[<expr><name pos:line="76" pos:column="57">i<pos:position pos:line="76" pos:column="58"/></name></expr>]<pos:position pos:line="76" pos:column="59"/></index></name><operator pos:line="76" pos:column="59">.<pos:position pos:line="76" pos:column="60"/></operator><name pos:line="76" pos:column="60">oid_len<pos:position pos:line="76" pos:column="67"/></name></expr></argument>)<pos:position pos:line="76" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="69"/></expr_stmt></block></for>

    <expr_stmt><expr><name pos:line="78" pos:column="5">status<pos:position pos:line="78" pos:column="11"/></name> <operator pos:line="78" pos:column="12">=<pos:position pos:line="78" pos:column="13"/></operator> <call><name pos:line="78" pos:column="14">snmp_sess_synch_response<pos:position pos:line="78" pos:column="38"/></name> <argument_list pos:line="78" pos:column="39">(<argument><expr><name><name pos:line="78" pos:column="40">host<pos:position pos:line="78" pos:column="44"/></name><operator pos:line="78" pos:column="44">-&gt;<pos:position pos:line="78" pos:column="49"/></operator><name pos:line="78" pos:column="46">sess_handle<pos:position pos:line="78" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="59">req<pos:position pos:line="78" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="64">&amp;<pos:position pos:line="78" pos:column="69"/></operator><name pos:line="78" pos:column="65">res<pos:position pos:line="78" pos:column="68"/></name></expr></argument>)<pos:position pos:line="78" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="70"/></expr_stmt>

    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><name pos:line="80" pos:column="9">status<pos:position pos:line="80" pos:column="15"/></name> <operator pos:line="80" pos:column="16">!=<pos:position pos:line="80" pos:column="18"/></operator> <name pos:line="80" pos:column="19">STAT_SUCCESS<pos:position pos:line="80" pos:column="31"/></name></expr>)<pos:position pos:line="80" pos:column="32"/></condition><then pos:line="80" pos:column="32">
    <block pos:line="81" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="82" pos:column="7">char<pos:position pos:line="82" pos:column="11"/></name> <modifier pos:line="82" pos:column="12">*<pos:position pos:line="82" pos:column="13"/></modifier></type><name pos:line="82" pos:column="13">errstr<pos:position pos:line="82" pos:column="19"/></name> <init pos:line="82" pos:column="20">= <expr><name pos:line="82" pos:column="22">NULL<pos:position pos:line="82" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="82" pos:column="27"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="84" pos:column="7">snmp_sess_error<pos:position pos:line="84" pos:column="22"/></name> <argument_list pos:line="84" pos:column="23">(<argument><expr><name><name pos:line="84" pos:column="24">host<pos:position pos:line="84" pos:column="28"/></name><operator pos:line="84" pos:column="28">-&gt;<pos:position pos:line="84" pos:column="33"/></operator><name pos:line="84" pos:column="30">sess_handle<pos:position pos:line="84" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="43">NULL<pos:position pos:line="84" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="49">NULL<pos:position pos:line="84" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="55">&amp;<pos:position pos:line="84" pos:column="60"/></operator><name pos:line="84" pos:column="56">errstr<pos:position pos:line="84" pos:column="62"/></name></expr></argument>)<pos:position pos:line="84" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="85" pos:column="7">ERROR<pos:position pos:line="85" pos:column="12"/></name> <argument_list pos:line="85" pos:column="13">(<argument><expr><literal type="string" pos:line="85" pos:column="14">"snmp plugin: snmp_sess_synch_response failed: %s"<pos:position pos:line="85" pos:column="64"/></literal></expr></argument>,
	  <argument><expr><ternary><condition><expr><operator pos:line="86" pos:column="11">(<pos:position pos:line="86" pos:column="12"/></operator><name pos:line="86" pos:column="12">errstr<pos:position pos:line="86" pos:column="18"/></name> <operator pos:line="86" pos:column="19">==<pos:position pos:line="86" pos:column="21"/></operator> <name pos:line="86" pos:column="22">NULL<pos:position pos:line="86" pos:column="26"/></name><operator pos:line="86" pos:column="26">)<pos:position pos:line="86" pos:column="27"/></operator></expr> ?<pos:position pos:line="86" pos:column="29"/></condition><then pos:line="86" pos:column="29"> <expr><literal type="string" pos:line="86" pos:column="30">"Unknown problem"<pos:position pos:line="86" pos:column="47"/></literal></expr> <pos:position pos:line="86" pos:column="48"/></then><else pos:line="86" pos:column="48">: <expr><name pos:line="86" pos:column="50">errstr<pos:position pos:line="86" pos:column="56"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="86" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="87" pos:column="7">csnmp_host_close_session<pos:position pos:line="87" pos:column="31"/></name> <argument_list pos:line="87" pos:column="32">(<argument><expr><name pos:line="87" pos:column="33">host<pos:position pos:line="87" pos:column="37"/></name></expr></argument>)<pos:position pos:line="87" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="39"/></expr_stmt>

      <expr_stmt><expr><name pos:line="89" pos:column="7">status<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">=<pos:position pos:line="89" pos:column="15"/></operator> <operator pos:line="89" pos:column="16">-<pos:position pos:line="89" pos:column="17"/></operator><literal type="number" pos:line="89" pos:column="17">1<pos:position pos:line="89" pos:column="18"/></literal></expr>;<pos:position pos:line="89" pos:column="19"/></expr_stmt>
      <break pos:line="90" pos:column="7">break;<pos:position pos:line="90" pos:column="13"/></break>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="92" pos:column="5">status<pos:position pos:line="92" pos:column="11"/></name> <operator pos:line="92" pos:column="12">=<pos:position pos:line="92" pos:column="13"/></operator> <literal type="number" pos:line="92" pos:column="14">0<pos:position pos:line="92" pos:column="15"/></literal></expr>;<pos:position pos:line="92" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">assert<pos:position pos:line="93" pos:column="11"/></name> <argument_list pos:line="93" pos:column="12">(<argument><expr><name pos:line="93" pos:column="13">res<pos:position pos:line="93" pos:column="16"/></name> <operator pos:line="93" pos:column="17">!=<pos:position pos:line="93" pos:column="19"/></operator> <name pos:line="93" pos:column="20">NULL<pos:position pos:line="93" pos:column="24"/></name></expr></argument>)<pos:position pos:line="93" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name pos:line="95" pos:column="5">vb<pos:position pos:line="95" pos:column="7"/></name> <operator pos:line="95" pos:column="8">=<pos:position pos:line="95" pos:column="9"/></operator> <name><name pos:line="95" pos:column="10">res<pos:position pos:line="95" pos:column="13"/></name><operator pos:line="95" pos:column="13">-&gt;<pos:position pos:line="95" pos:column="18"/></operator><name pos:line="95" pos:column="15">variables<pos:position pos:line="95" pos:column="24"/></name></name></expr>;<pos:position pos:line="95" pos:column="25"/></expr_stmt>
    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><name pos:line="96" pos:column="9">vb<pos:position pos:line="96" pos:column="11"/></name> <operator pos:line="96" pos:column="12">==<pos:position pos:line="96" pos:column="14"/></operator> <name pos:line="96" pos:column="15">NULL<pos:position pos:line="96" pos:column="19"/></name></expr>)<pos:position pos:line="96" pos:column="20"/></condition><then pos:line="96" pos:column="20">
    <block pos:line="97" pos:column="5">{
      <expr_stmt><expr><name pos:line="98" pos:column="7">status<pos:position pos:line="98" pos:column="13"/></name> <operator pos:line="98" pos:column="14">=<pos:position pos:line="98" pos:column="15"/></operator> <operator pos:line="98" pos:column="16">-<pos:position pos:line="98" pos:column="17"/></operator><literal type="number" pos:line="98" pos:column="17">1<pos:position pos:line="98" pos:column="18"/></literal></expr>;<pos:position pos:line="98" pos:column="19"/></expr_stmt>
      <break pos:line="99" pos:column="7">break;<pos:position pos:line="99" pos:column="13"/></break>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="102" pos:column="5">/* Check if we left the subtree */</comment>
    <if pos:line="103" pos:column="5">if <condition pos:line="103" pos:column="8">(<expr><call><name pos:line="103" pos:column="9">snmp_oid_ncompare<pos:position pos:line="103" pos:column="26"/></name> <argument_list pos:line="103" pos:column="27">(<argument><expr><name><name pos:line="103" pos:column="28">data<pos:position pos:line="103" pos:column="32"/></name><operator pos:line="103" pos:column="32">-&gt;<pos:position pos:line="103" pos:column="37"/></operator><name pos:line="103" pos:column="34">instance<pos:position pos:line="103" pos:column="42"/></name><operator pos:line="103" pos:column="42">.<pos:position pos:line="103" pos:column="43"/></operator><name pos:line="103" pos:column="43">oid<pos:position pos:line="103" pos:column="46"/></name><operator pos:line="103" pos:column="46">.<pos:position pos:line="103" pos:column="47"/></operator><name pos:line="103" pos:column="47">oid<pos:position pos:line="103" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="52">data<pos:position pos:line="103" pos:column="56"/></name><operator pos:line="103" pos:column="56">-&gt;<pos:position pos:line="103" pos:column="61"/></operator><name pos:line="103" pos:column="58">instance<pos:position pos:line="103" pos:column="66"/></name><operator pos:line="103" pos:column="66">.<pos:position pos:line="103" pos:column="67"/></operator><name pos:line="103" pos:column="67">oid<pos:position pos:line="103" pos:column="70"/></name><operator pos:line="103" pos:column="70">.<pos:position pos:line="103" pos:column="71"/></operator><name pos:line="103" pos:column="71">oid_len<pos:position pos:line="103" pos:column="78"/></name></name></expr></argument>,
	  <argument><expr><name><name pos:line="104" pos:column="11">vb<pos:position pos:line="104" pos:column="13"/></name><operator pos:line="104" pos:column="13">-&gt;<pos:position pos:line="104" pos:column="18"/></operator><name pos:line="104" pos:column="15">name<pos:position pos:line="104" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="21">vb<pos:position pos:line="104" pos:column="23"/></name><operator pos:line="104" pos:column="23">-&gt;<pos:position pos:line="104" pos:column="28"/></operator><name pos:line="104" pos:column="25">name_length<pos:position pos:line="104" pos:column="36"/></name></name></expr></argument>,
	  <argument><expr><name><name pos:line="105" pos:column="11">data<pos:position pos:line="105" pos:column="15"/></name><operator pos:line="105" pos:column="15">-&gt;<pos:position pos:line="105" pos:column="20"/></operator><name pos:line="105" pos:column="17">instance<pos:position pos:line="105" pos:column="25"/></name><operator pos:line="105" pos:column="25">.<pos:position pos:line="105" pos:column="26"/></operator><name pos:line="105" pos:column="26">oid<pos:position pos:line="105" pos:column="29"/></name><operator pos:line="105" pos:column="29">.<pos:position pos:line="105" pos:column="30"/></operator><name pos:line="105" pos:column="30">oid_len<pos:position pos:line="105" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="38"/></argument_list></call> <operator pos:line="105" pos:column="39">!=<pos:position pos:line="105" pos:column="41"/></operator> <literal type="number" pos:line="105" pos:column="42">0<pos:position pos:line="105" pos:column="43"/></literal></expr>)<pos:position pos:line="105" pos:column="44"/></condition><then pos:line="105" pos:column="44">
      <block type="pseudo"><break pos:line="106" pos:column="7">break;<pos:position pos:line="106" pos:column="13"/></break></block></then></if>

    <comment type="block" pos:line="108" pos:column="5">/* Allocate a new `csnmp_list_instances_t', insert the instance name and
     * add it to the list */</comment>
    <expr_stmt><expr><name pos:line="110" pos:column="5">il<pos:position pos:line="110" pos:column="7"/></name> <operator pos:line="110" pos:column="8">=<pos:position pos:line="110" pos:column="9"/></operator> <operator pos:line="110" pos:column="10">(<pos:position pos:line="110" pos:column="11"/></operator><name pos:line="110" pos:column="11">csnmp_list_instances_t<pos:position pos:line="110" pos:column="33"/></name> <operator pos:line="110" pos:column="34">*<pos:position pos:line="110" pos:column="35"/></operator><operator pos:line="110" pos:column="35">)<pos:position pos:line="110" pos:column="36"/></operator> <call><name pos:line="110" pos:column="37">malloc<pos:position pos:line="110" pos:column="43"/></name> <argument_list pos:line="110" pos:column="44">(<argument><expr><sizeof pos:line="110" pos:column="45">sizeof <argument_list pos:line="110" pos:column="52">(<argument><expr><name pos:line="110" pos:column="53">csnmp_list_instances_t<pos:position pos:line="110" pos:column="75"/></name></expr></argument>)<pos:position pos:line="110" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="110" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="78"/></expr_stmt>
    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><name pos:line="111" pos:column="9">il<pos:position pos:line="111" pos:column="11"/></name> <operator pos:line="111" pos:column="12">==<pos:position pos:line="111" pos:column="14"/></operator> <name pos:line="111" pos:column="15">NULL<pos:position pos:line="111" pos:column="19"/></name></expr>)<pos:position pos:line="111" pos:column="20"/></condition><then pos:line="111" pos:column="20">
    <block pos:line="112" pos:column="5">{
      <expr_stmt><expr><name pos:line="113" pos:column="7">status<pos:position pos:line="113" pos:column="13"/></name> <operator pos:line="113" pos:column="14">=<pos:position pos:line="113" pos:column="15"/></operator> <operator pos:line="113" pos:column="16">-<pos:position pos:line="113" pos:column="17"/></operator><literal type="number" pos:line="113" pos:column="17">1<pos:position pos:line="113" pos:column="18"/></literal></expr>;<pos:position pos:line="113" pos:column="19"/></expr_stmt>
      <break pos:line="114" pos:column="7">break;<pos:position pos:line="114" pos:column="13"/></break>
    }<pos:position pos:line="115" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="116" pos:column="5">il<pos:position pos:line="116" pos:column="7"/></name><operator pos:line="116" pos:column="7">-&gt;<pos:position pos:line="116" pos:column="12"/></operator><name pos:line="116" pos:column="9">subid<pos:position pos:line="116" pos:column="14"/></name></name> <operator pos:line="116" pos:column="15">=<pos:position pos:line="116" pos:column="16"/></operator> <name><name pos:line="116" pos:column="17">vb<pos:position pos:line="116" pos:column="19"/></name><operator pos:line="116" pos:column="19">-&gt;<pos:position pos:line="116" pos:column="24"/></operator><name pos:line="116" pos:column="21">name<pos:position pos:line="116" pos:column="25"/></name><index pos:line="116" pos:column="25">[<expr><name><name pos:line="116" pos:column="26">vb<pos:position pos:line="116" pos:column="28"/></name><operator pos:line="116" pos:column="28">-&gt;<pos:position pos:line="116" pos:column="33"/></operator><name pos:line="116" pos:column="30">name_length<pos:position pos:line="116" pos:column="41"/></name></name> <operator pos:line="116" pos:column="42">-<pos:position pos:line="116" pos:column="43"/></operator> <literal type="number" pos:line="116" pos:column="44">1<pos:position pos:line="116" pos:column="45"/></literal></expr>]<pos:position pos:line="116" pos:column="46"/></index></name></expr>;<pos:position pos:line="116" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="117" pos:column="5">il<pos:position pos:line="117" pos:column="7"/></name><operator pos:line="117" pos:column="7">-&gt;<pos:position pos:line="117" pos:column="12"/></operator><name pos:line="117" pos:column="9">next<pos:position pos:line="117" pos:column="13"/></name></name> <operator pos:line="117" pos:column="14">=<pos:position pos:line="117" pos:column="15"/></operator> <name pos:line="117" pos:column="16">NULL<pos:position pos:line="117" pos:column="20"/></name></expr>;<pos:position pos:line="117" pos:column="21"/></expr_stmt>

    <comment type="block" pos:line="119" pos:column="5">/* Get instance name */</comment>
    <if pos:line="120" pos:column="5">if <condition pos:line="120" pos:column="8">(<expr><operator pos:line="120" pos:column="9">(<pos:position pos:line="120" pos:column="10"/></operator><name><name pos:line="120" pos:column="10">vb<pos:position pos:line="120" pos:column="12"/></name><operator pos:line="120" pos:column="12">-&gt;<pos:position pos:line="120" pos:column="17"/></operator><name pos:line="120" pos:column="14">type<pos:position pos:line="120" pos:column="18"/></name></name> <operator pos:line="120" pos:column="19">==<pos:position pos:line="120" pos:column="21"/></operator> <name pos:line="120" pos:column="22">ASN_OCTET_STR<pos:position pos:line="120" pos:column="35"/></name><operator pos:line="120" pos:column="35">)<pos:position pos:line="120" pos:column="36"/></operator> <operator pos:line="120" pos:column="37">||<pos:position pos:line="120" pos:column="39"/></operator> <operator pos:line="120" pos:column="40">(<pos:position pos:line="120" pos:column="41"/></operator><name><name pos:line="120" pos:column="41">vb<pos:position pos:line="120" pos:column="43"/></name><operator pos:line="120" pos:column="43">-&gt;<pos:position pos:line="120" pos:column="48"/></operator><name pos:line="120" pos:column="45">type<pos:position pos:line="120" pos:column="49"/></name></name> <operator pos:line="120" pos:column="50">==<pos:position pos:line="120" pos:column="52"/></operator> <name pos:line="120" pos:column="53">ASN_BIT_STR<pos:position pos:line="120" pos:column="64"/></name><operator pos:line="120" pos:column="64">)<pos:position pos:line="120" pos:column="65"/></operator></expr>)<pos:position pos:line="120" pos:column="66"/></condition><then pos:line="120" pos:column="66">
    <block pos:line="121" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="122" pos:column="7">char<pos:position pos:line="122" pos:column="11"/></name> <modifier pos:line="122" pos:column="12">*<pos:position pos:line="122" pos:column="13"/></modifier></type><name pos:line="122" pos:column="13">ptr<pos:position pos:line="122" pos:column="16"/></name></decl>;<pos:position pos:line="122" pos:column="17"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="123" pos:column="7">size_t<pos:position pos:line="123" pos:column="13"/></name></type> <name pos:line="123" pos:column="14">instance_len<pos:position pos:line="123" pos:column="26"/></name></decl>;<pos:position pos:line="123" pos:column="27"/></decl_stmt>

      <expr_stmt><expr><name pos:line="125" pos:column="7">instance_len<pos:position pos:line="125" pos:column="19"/></name> <operator pos:line="125" pos:column="20">=<pos:position pos:line="125" pos:column="21"/></operator> <sizeof pos:line="125" pos:column="22">sizeof <argument_list pos:line="125" pos:column="29">(<argument><expr><name><name pos:line="125" pos:column="30">il<pos:position pos:line="125" pos:column="32"/></name><operator pos:line="125" pos:column="32">-&gt;<pos:position pos:line="125" pos:column="37"/></operator><name pos:line="125" pos:column="34">instance<pos:position pos:line="125" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="43"/></argument_list></sizeof> <operator pos:line="125" pos:column="44">-<pos:position pos:line="125" pos:column="45"/></operator> <literal type="number" pos:line="125" pos:column="46">1<pos:position pos:line="125" pos:column="47"/></literal></expr>;<pos:position pos:line="125" pos:column="48"/></expr_stmt>
      <if pos:line="126" pos:column="7">if <condition pos:line="126" pos:column="10">(<expr><name pos:line="126" pos:column="11">instance_len<pos:position pos:line="126" pos:column="23"/></name> <operator pos:line="126" pos:column="24">&gt;<pos:position pos:line="126" pos:column="28"/></operator> <name><name pos:line="126" pos:column="26">vb<pos:position pos:line="126" pos:column="28"/></name><operator pos:line="126" pos:column="28">-&gt;<pos:position pos:line="126" pos:column="33"/></operator><name pos:line="126" pos:column="30">val_len<pos:position pos:line="126" pos:column="37"/></name></name></expr>)<pos:position pos:line="126" pos:column="38"/></condition><then pos:line="126" pos:column="38">
	<block type="pseudo"><expr_stmt><expr><name pos:line="127" pos:column="9">instance_len<pos:position pos:line="127" pos:column="21"/></name> <operator pos:line="127" pos:column="22">=<pos:position pos:line="127" pos:column="23"/></operator> <name><name pos:line="127" pos:column="24">vb<pos:position pos:line="127" pos:column="26"/></name><operator pos:line="127" pos:column="26">-&gt;<pos:position pos:line="127" pos:column="31"/></operator><name pos:line="127" pos:column="28">val_len<pos:position pos:line="127" pos:column="35"/></name></name></expr>;<pos:position pos:line="127" pos:column="36"/></expr_stmt></block></then></if>

      <expr_stmt><expr><call><name pos:line="129" pos:column="7">strncpy<pos:position pos:line="129" pos:column="14"/></name> <argument_list pos:line="129" pos:column="15">(<argument><expr><name><name pos:line="129" pos:column="16">il<pos:position pos:line="129" pos:column="18"/></name><operator pos:line="129" pos:column="18">-&gt;<pos:position pos:line="129" pos:column="23"/></operator><name pos:line="129" pos:column="20">instance<pos:position pos:line="129" pos:column="28"/></name></name></expr></argument>, <argument><expr><operator pos:line="129" pos:column="30">(<pos:position pos:line="129" pos:column="31"/></operator><name pos:line="129" pos:column="31">char<pos:position pos:line="129" pos:column="35"/></name> <operator pos:line="129" pos:column="36">*<pos:position pos:line="129" pos:column="37"/></operator><operator pos:line="129" pos:column="37">)<pos:position pos:line="129" pos:column="38"/></operator> <operator pos:line="129" pos:column="39">(<pos:position pos:line="129" pos:column="40"/></operator><ternary><condition><expr><operator pos:line="129" pos:column="40">(<pos:position pos:line="129" pos:column="41"/></operator><name><name pos:line="129" pos:column="41">vb<pos:position pos:line="129" pos:column="43"/></name><operator pos:line="129" pos:column="43">-&gt;<pos:position pos:line="129" pos:column="48"/></operator><name pos:line="129" pos:column="45">type<pos:position pos:line="129" pos:column="49"/></name></name> <operator pos:line="129" pos:column="50">==<pos:position pos:line="129" pos:column="52"/></operator> <name pos:line="129" pos:column="53">ASN_OCTET_STR<pos:position pos:line="129" pos:column="66"/></name><operator pos:line="129" pos:column="66">)<pos:position pos:line="129" pos:column="67"/></operator></expr>
	    ?<pos:position pos:line="130" pos:column="14"/></condition><then pos:line="130" pos:column="14"> <expr><name><name pos:line="130" pos:column="15">vb<pos:position pos:line="130" pos:column="17"/></name><operator pos:line="130" pos:column="17">-&gt;<pos:position pos:line="130" pos:column="22"/></operator><name pos:line="130" pos:column="19">val<pos:position pos:line="130" pos:column="22"/></name><operator pos:line="130" pos:column="22">.<pos:position pos:line="130" pos:column="23"/></operator><name pos:line="130" pos:column="23">string<pos:position pos:line="130" pos:column="29"/></name></name></expr>
	    <pos:position pos:line="131" pos:column="6"/></then><else pos:line="131" pos:column="13">: <expr><name><name pos:line="131" pos:column="15">vb<pos:position pos:line="131" pos:column="17"/></name><operator pos:line="131" pos:column="17">-&gt;<pos:position pos:line="131" pos:column="22"/></operator><name pos:line="131" pos:column="19">val<pos:position pos:line="131" pos:column="22"/></name><operator pos:line="131" pos:column="22">.<pos:position pos:line="131" pos:column="23"/></operator><name pos:line="131" pos:column="23">bitstring<pos:position pos:line="131" pos:column="32"/></name></name></expr></else></ternary><operator pos:line="131" pos:column="32">)<pos:position pos:line="131" pos:column="33"/></operator></expr></argument>,
	  <argument><expr><name pos:line="132" pos:column="11">instance_len<pos:position pos:line="132" pos:column="23"/></name></expr></argument>)<pos:position pos:line="132" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="133" pos:column="7">il<pos:position pos:line="133" pos:column="9"/></name><operator pos:line="133" pos:column="9">-&gt;<pos:position pos:line="133" pos:column="14"/></operator><name pos:line="133" pos:column="11">instance<pos:position pos:line="133" pos:column="19"/></name><index pos:line="133" pos:column="19">[<expr><name pos:line="133" pos:column="20">instance_len<pos:position pos:line="133" pos:column="32"/></name></expr>]<pos:position pos:line="133" pos:column="33"/></index></name> <operator pos:line="133" pos:column="34">=<pos:position pos:line="133" pos:column="35"/></operator> <literal type="char" pos:line="133" pos:column="36">'\0'<pos:position pos:line="133" pos:column="40"/></literal></expr>;<pos:position pos:line="133" pos:column="41"/></expr_stmt>

      <for pos:line="135" pos:column="7">for <control pos:line="135" pos:column="11">(<init><expr><name pos:line="135" pos:column="12">ptr<pos:position pos:line="135" pos:column="15"/></name> <operator pos:line="135" pos:column="16">=<pos:position pos:line="135" pos:column="17"/></operator> <name><name pos:line="135" pos:column="18">il<pos:position pos:line="135" pos:column="20"/></name><operator pos:line="135" pos:column="20">-&gt;<pos:position pos:line="135" pos:column="25"/></operator><name pos:line="135" pos:column="22">instance<pos:position pos:line="135" pos:column="30"/></name></name></expr>;<pos:position pos:line="135" pos:column="31"/></init> <condition><expr><operator pos:line="135" pos:column="32">*<pos:position pos:line="135" pos:column="33"/></operator><name pos:line="135" pos:column="33">ptr<pos:position pos:line="135" pos:column="36"/></name> <operator pos:line="135" pos:column="37">!=<pos:position pos:line="135" pos:column="39"/></operator> <literal type="char" pos:line="135" pos:column="40">'\0'<pos:position pos:line="135" pos:column="44"/></literal></expr>;<pos:position pos:line="135" pos:column="45"/></condition> <incr><expr><name pos:line="135" pos:column="46">ptr<pos:position pos:line="135" pos:column="49"/></name><operator pos:line="135" pos:column="49">++<pos:position pos:line="135" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="135" pos:column="52"/></control>
      <block pos:line="136" pos:column="7">{
	<if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><operator pos:line="137" pos:column="13">(<pos:position pos:line="137" pos:column="14"/></operator><operator pos:line="137" pos:column="14">*<pos:position pos:line="137" pos:column="15"/></operator><name pos:line="137" pos:column="15">ptr<pos:position pos:line="137" pos:column="18"/></name> <operator pos:line="137" pos:column="19">&gt;<pos:position pos:line="137" pos:column="23"/></operator> <literal type="number" pos:line="137" pos:column="21">0<pos:position pos:line="137" pos:column="22"/></literal><operator pos:line="137" pos:column="22">)<pos:position pos:line="137" pos:column="23"/></operator> <operator pos:line="137" pos:column="24">&amp;&amp;<pos:position pos:line="137" pos:column="34"/></operator> <operator pos:line="137" pos:column="27">(<pos:position pos:line="137" pos:column="28"/></operator><operator pos:line="137" pos:column="28">*<pos:position pos:line="137" pos:column="29"/></operator><name pos:line="137" pos:column="29">ptr<pos:position pos:line="137" pos:column="32"/></name> <operator pos:line="137" pos:column="33">&lt;<pos:position pos:line="137" pos:column="37"/></operator> <literal type="number" pos:line="137" pos:column="35">32<pos:position pos:line="137" pos:column="37"/></literal><operator pos:line="137" pos:column="37">)<pos:position pos:line="137" pos:column="38"/></operator></expr>)<pos:position pos:line="137" pos:column="39"/></condition><then pos:line="137" pos:column="39">
	  <block type="pseudo"><expr_stmt><expr><operator pos:line="138" pos:column="11">*<pos:position pos:line="138" pos:column="12"/></operator><name pos:line="138" pos:column="12">ptr<pos:position pos:line="138" pos:column="15"/></name> <operator pos:line="138" pos:column="16">=<pos:position pos:line="138" pos:column="17"/></operator> <literal type="char" pos:line="138" pos:column="18">' '<pos:position pos:line="138" pos:column="21"/></literal></expr>;<pos:position pos:line="138" pos:column="22"/></expr_stmt></block></then>
	<elseif pos:line="139" pos:column="9">else <if pos:line="139" pos:column="14">if <condition pos:line="139" pos:column="17">(<expr><operator pos:line="139" pos:column="18">*<pos:position pos:line="139" pos:column="19"/></operator><name pos:line="139" pos:column="19">ptr<pos:position pos:line="139" pos:column="22"/></name> <operator pos:line="139" pos:column="23">==<pos:position pos:line="139" pos:column="25"/></operator> <literal type="char" pos:line="139" pos:column="26">'/'<pos:position pos:line="139" pos:column="29"/></literal></expr>)<pos:position pos:line="139" pos:column="30"/></condition><then pos:line="139" pos:column="30">
	  <block type="pseudo"><expr_stmt><expr><operator pos:line="140" pos:column="11">*<pos:position pos:line="140" pos:column="12"/></operator><name pos:line="140" pos:column="12">ptr<pos:position pos:line="140" pos:column="15"/></name> <operator pos:line="140" pos:column="16">=<pos:position pos:line="140" pos:column="17"/></operator> <literal type="char" pos:line="140" pos:column="18">'_'<pos:position pos:line="140" pos:column="21"/></literal></expr>;<pos:position pos:line="140" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      }<pos:position pos:line="141" pos:column="8"/></block></for>
      <expr_stmt><expr><call><name pos:line="142" pos:column="7">DEBUG<pos:position pos:line="142" pos:column="12"/></name> <argument_list pos:line="142" pos:column="13">(<argument><expr><literal type="string" pos:line="142" pos:column="14">"snmp plugin: il-&gt;instance = `%s';"<pos:position pos:line="142" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="51">il<pos:position pos:line="142" pos:column="53"/></name><operator pos:line="142" pos:column="53">-&gt;<pos:position pos:line="142" pos:column="58"/></operator><name pos:line="142" pos:column="55">instance<pos:position pos:line="142" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="143" pos:column="6"/></block></then>
    <else pos:line="144" pos:column="5">else
    <block pos:line="145" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="146" pos:column="7">value_t<pos:position pos:line="146" pos:column="14"/></name></type> <name pos:line="146" pos:column="15">val<pos:position pos:line="146" pos:column="18"/></name> <init pos:line="146" pos:column="19">= <expr><call><name pos:line="146" pos:column="21">csnmp_value_list_to_value<pos:position pos:line="146" pos:column="46"/></name> <argument_list pos:line="146" pos:column="47">(<argument><expr><name pos:line="146" pos:column="48">vb<pos:position pos:line="146" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="52">DS_TYPE_COUNTER<pos:position pos:line="146" pos:column="67"/></name></expr></argument>)<pos:position pos:line="146" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="146" pos:column="69"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="147" pos:column="7">snprintf<pos:position pos:line="147" pos:column="15"/></name> <argument_list pos:line="147" pos:column="16">(<argument><expr><name><name pos:line="147" pos:column="17">il<pos:position pos:line="147" pos:column="19"/></name><operator pos:line="147" pos:column="19">-&gt;<pos:position pos:line="147" pos:column="24"/></operator><name pos:line="147" pos:column="21">instance<pos:position pos:line="147" pos:column="29"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="147" pos:column="31">sizeof <argument_list pos:line="147" pos:column="38">(<argument><expr><name><name pos:line="147" pos:column="39">il<pos:position pos:line="147" pos:column="41"/></name><operator pos:line="147" pos:column="41">-&gt;<pos:position pos:line="147" pos:column="46"/></operator><name pos:line="147" pos:column="43">instance<pos:position pos:line="147" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="52"/></argument_list></sizeof></expr></argument>,
	  <argument><expr><literal type="string" pos:line="148" pos:column="11">"%llu"<pos:position pos:line="148" pos:column="17"/></literal></expr></argument>, <argument><expr><name><name pos:line="148" pos:column="19">val<pos:position pos:line="148" pos:column="22"/></name><operator pos:line="148" pos:column="22">.<pos:position pos:line="148" pos:column="23"/></operator><name pos:line="148" pos:column="23">counter<pos:position pos:line="148" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="149" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name><name pos:line="150" pos:column="5">il<pos:position pos:line="150" pos:column="7"/></name><operator pos:line="150" pos:column="7">-&gt;<pos:position pos:line="150" pos:column="12"/></operator><name pos:line="150" pos:column="9">instance<pos:position pos:line="150" pos:column="17"/></name><index pos:line="150" pos:column="17">[<expr><sizeof pos:line="150" pos:column="18">sizeof <argument_list pos:line="150" pos:column="25">(<argument><expr><name><name pos:line="150" pos:column="26">il<pos:position pos:line="150" pos:column="28"/></name><operator pos:line="150" pos:column="28">-&gt;<pos:position pos:line="150" pos:column="33"/></operator><name pos:line="150" pos:column="30">instance<pos:position pos:line="150" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="150" pos:column="39"/></argument_list></sizeof> <operator pos:line="150" pos:column="40">-<pos:position pos:line="150" pos:column="41"/></operator> <literal type="number" pos:line="150" pos:column="42">1<pos:position pos:line="150" pos:column="43"/></literal></expr>]<pos:position pos:line="150" pos:column="44"/></index></name> <operator pos:line="150" pos:column="45">=<pos:position pos:line="150" pos:column="46"/></operator> <literal type="char" pos:line="150" pos:column="47">'\0'<pos:position pos:line="150" pos:column="51"/></literal></expr>;<pos:position pos:line="150" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="151" pos:column="5">DEBUG<pos:position pos:line="151" pos:column="10"/></name> <argument_list pos:line="151" pos:column="11">(<argument><expr><literal type="string" pos:line="151" pos:column="12">"snmp plugin: data = `%s'; il-&gt;instance = `%s';"<pos:position pos:line="151" pos:column="63"/></literal></expr></argument>,
	<argument><expr><name><name pos:line="152" pos:column="9">data<pos:position pos:line="152" pos:column="13"/></name><operator pos:line="152" pos:column="13">-&gt;<pos:position pos:line="152" pos:column="18"/></operator><name pos:line="152" pos:column="15">name<pos:position pos:line="152" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="152" pos:column="21">il<pos:position pos:line="152" pos:column="23"/></name><operator pos:line="152" pos:column="23">-&gt;<pos:position pos:line="152" pos:column="28"/></operator><name pos:line="152" pos:column="25">instance<pos:position pos:line="152" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="152" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="35"/></expr_stmt>

    <if pos:line="154" pos:column="5">if <condition pos:line="154" pos:column="8">(<expr><name pos:line="154" pos:column="9">instance_list_ptr<pos:position pos:line="154" pos:column="26"/></name> <operator pos:line="154" pos:column="27">==<pos:position pos:line="154" pos:column="29"/></operator> <name pos:line="154" pos:column="30">NULL<pos:position pos:line="154" pos:column="34"/></name></expr>)<pos:position pos:line="154" pos:column="35"/></condition><then pos:line="154" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><name pos:line="155" pos:column="7">instance_list<pos:position pos:line="155" pos:column="20"/></name> <operator pos:line="155" pos:column="21">=<pos:position pos:line="155" pos:column="22"/></operator> <name pos:line="155" pos:column="23">il<pos:position pos:line="155" pos:column="25"/></name></expr>;<pos:position pos:line="155" pos:column="26"/></expr_stmt></block></then>
    <else pos:line="156" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="157" pos:column="7">instance_list_ptr<pos:position pos:line="157" pos:column="24"/></name><operator pos:line="157" pos:column="24">-&gt;<pos:position pos:line="157" pos:column="29"/></operator><name pos:line="157" pos:column="26">next<pos:position pos:line="157" pos:column="30"/></name></name> <operator pos:line="157" pos:column="31">=<pos:position pos:line="157" pos:column="32"/></operator> <name pos:line="157" pos:column="33">il<pos:position pos:line="157" pos:column="35"/></name></expr>;<pos:position pos:line="157" pos:column="36"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name pos:line="158" pos:column="5">instance_list_ptr<pos:position pos:line="158" pos:column="22"/></name> <operator pos:line="158" pos:column="23">=<pos:position pos:line="158" pos:column="24"/></operator> <name pos:line="158" pos:column="25">il<pos:position pos:line="158" pos:column="27"/></name></expr>;<pos:position pos:line="158" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="160" pos:column="5">/* Copy OID to oid_list[0] */</comment>
    <expr_stmt><expr><call><name pos:line="161" pos:column="5">memcpy<pos:position pos:line="161" pos:column="11"/></name> <argument_list pos:line="161" pos:column="12">(<argument><expr><name><name pos:line="161" pos:column="13">oid_list<pos:position pos:line="161" pos:column="21"/></name><index pos:line="161" pos:column="21">[<expr><literal type="number" pos:line="161" pos:column="22">0<pos:position pos:line="161" pos:column="23"/></literal></expr>]<pos:position pos:line="161" pos:column="24"/></index></name><operator pos:line="161" pos:column="24">.<pos:position pos:line="161" pos:column="25"/></operator><name pos:line="161" pos:column="25">oid<pos:position pos:line="161" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="30">vb<pos:position pos:line="161" pos:column="32"/></name><operator pos:line="161" pos:column="32">-&gt;<pos:position pos:line="161" pos:column="37"/></operator><name pos:line="161" pos:column="34">name<pos:position pos:line="161" pos:column="38"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="161" pos:column="40">sizeof <argument_list pos:line="161" pos:column="47">(<argument><expr><name pos:line="161" pos:column="48">oid<pos:position pos:line="161" pos:column="51"/></name></expr></argument>)<pos:position pos:line="161" pos:column="52"/></argument_list></sizeof> <operator pos:line="161" pos:column="53">*<pos:position pos:line="161" pos:column="54"/></operator> <name><name pos:line="161" pos:column="55">vb<pos:position pos:line="161" pos:column="57"/></name><operator pos:line="161" pos:column="57">-&gt;<pos:position pos:line="161" pos:column="62"/></operator><name pos:line="161" pos:column="59">name_length<pos:position pos:line="161" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="161" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="162" pos:column="5">oid_list<pos:position pos:line="162" pos:column="13"/></name><index pos:line="162" pos:column="13">[<expr><literal type="number" pos:line="162" pos:column="14">0<pos:position pos:line="162" pos:column="15"/></literal></expr>]<pos:position pos:line="162" pos:column="16"/></index></name><operator pos:line="162" pos:column="16">.<pos:position pos:line="162" pos:column="17"/></operator><name pos:line="162" pos:column="17">oid_len<pos:position pos:line="162" pos:column="24"/></name> <operator pos:line="162" pos:column="25">=<pos:position pos:line="162" pos:column="26"/></operator> <name><name pos:line="162" pos:column="27">vb<pos:position pos:line="162" pos:column="29"/></name><operator pos:line="162" pos:column="29">-&gt;<pos:position pos:line="162" pos:column="34"/></operator><name pos:line="162" pos:column="31">name_length<pos:position pos:line="162" pos:column="42"/></name></name></expr>;<pos:position pos:line="162" pos:column="43"/></expr_stmt>

    <for pos:line="164" pos:column="5">for <control pos:line="164" pos:column="9">(<init><expr><name pos:line="164" pos:column="10">i<pos:position pos:line="164" pos:column="11"/></name> <operator pos:line="164" pos:column="12">=<pos:position pos:line="164" pos:column="13"/></operator> <literal type="number" pos:line="164" pos:column="14">0<pos:position pos:line="164" pos:column="15"/></literal></expr>;<pos:position pos:line="164" pos:column="16"/></init> <condition><expr><name pos:line="164" pos:column="17">i<pos:position pos:line="164" pos:column="18"/></name> <operator pos:line="164" pos:column="19">&lt;<pos:position pos:line="164" pos:column="23"/></operator> <name><name pos:line="164" pos:column="21">data<pos:position pos:line="164" pos:column="25"/></name><operator pos:line="164" pos:column="25">-&gt;<pos:position pos:line="164" pos:column="30"/></operator><name pos:line="164" pos:column="27">values_len<pos:position pos:line="164" pos:column="37"/></name></name></expr>;<pos:position pos:line="164" pos:column="38"/></condition> <incr><expr><name pos:line="164" pos:column="39">i<pos:position pos:line="164" pos:column="40"/></name><operator pos:line="164" pos:column="40">++<pos:position pos:line="164" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="164" pos:column="43"/></control>
    <block pos:line="165" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="166" pos:column="7">csnmp_table_values_t<pos:position pos:line="166" pos:column="27"/></name> <modifier pos:line="166" pos:column="28">*<pos:position pos:line="166" pos:column="29"/></modifier></type><name pos:line="166" pos:column="29">vt<pos:position pos:line="166" pos:column="31"/></name></decl>;<pos:position pos:line="166" pos:column="32"/></decl_stmt>

      <expr_stmt><expr><name pos:line="168" pos:column="7">vb<pos:position pos:line="168" pos:column="9"/></name> <operator pos:line="168" pos:column="10">=<pos:position pos:line="168" pos:column="11"/></operator> <name><name pos:line="168" pos:column="12">vb<pos:position pos:line="168" pos:column="14"/></name><operator pos:line="168" pos:column="14">-&gt;<pos:position pos:line="168" pos:column="19"/></operator><name pos:line="168" pos:column="16">next_variable<pos:position pos:line="168" pos:column="29"/></name></name></expr>;<pos:position pos:line="168" pos:column="30"/></expr_stmt>
      <if pos:line="169" pos:column="7">if <condition pos:line="169" pos:column="10">(<expr><name pos:line="169" pos:column="11">vb<pos:position pos:line="169" pos:column="13"/></name> <operator pos:line="169" pos:column="14">==<pos:position pos:line="169" pos:column="16"/></operator> <name pos:line="169" pos:column="17">NULL<pos:position pos:line="169" pos:column="21"/></name></expr>)<pos:position pos:line="169" pos:column="22"/></condition><then pos:line="169" pos:column="22">
      <block pos:line="170" pos:column="7">{
	<expr_stmt><expr><name pos:line="171" pos:column="9">status<pos:position pos:line="171" pos:column="15"/></name> <operator pos:line="171" pos:column="16">=<pos:position pos:line="171" pos:column="17"/></operator> <operator pos:line="171" pos:column="18">-<pos:position pos:line="171" pos:column="19"/></operator><literal type="number" pos:line="171" pos:column="19">1<pos:position pos:line="171" pos:column="20"/></literal></expr>;<pos:position pos:line="171" pos:column="21"/></expr_stmt>
	<break pos:line="172" pos:column="9">break;<pos:position pos:line="172" pos:column="15"/></break>
      }<pos:position pos:line="173" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="175" pos:column="7">/* Check if we left the subtree */</comment>
      <if pos:line="176" pos:column="7">if <condition pos:line="176" pos:column="10">(<expr><call><name pos:line="176" pos:column="11">snmp_oid_ncompare<pos:position pos:line="176" pos:column="28"/></name> <argument_list pos:line="176" pos:column="29">(<argument><expr><name><name pos:line="176" pos:column="30">data<pos:position pos:line="176" pos:column="34"/></name><operator pos:line="176" pos:column="34">-&gt;<pos:position pos:line="176" pos:column="39"/></operator><name pos:line="176" pos:column="36">values<pos:position pos:line="176" pos:column="42"/></name><index pos:line="176" pos:column="42">[<expr><name pos:line="176" pos:column="43">i<pos:position pos:line="176" pos:column="44"/></name></expr>]<pos:position pos:line="176" pos:column="45"/></index></name><operator pos:line="176" pos:column="45">.<pos:position pos:line="176" pos:column="46"/></operator><name pos:line="176" pos:column="46">oid<pos:position pos:line="176" pos:column="49"/></name></expr></argument>,
	    <argument><expr><name><name pos:line="177" pos:column="13">data<pos:position pos:line="177" pos:column="17"/></name><operator pos:line="177" pos:column="17">-&gt;<pos:position pos:line="177" pos:column="22"/></operator><name pos:line="177" pos:column="19">values<pos:position pos:line="177" pos:column="25"/></name><index pos:line="177" pos:column="25">[<expr><name pos:line="177" pos:column="26">i<pos:position pos:line="177" pos:column="27"/></name></expr>]<pos:position pos:line="177" pos:column="28"/></index></name><operator pos:line="177" pos:column="28">.<pos:position pos:line="177" pos:column="29"/></operator><name pos:line="177" pos:column="29">oid_len<pos:position pos:line="177" pos:column="36"/></name></expr></argument>,
	    <argument><expr><name><name pos:line="178" pos:column="13">vb<pos:position pos:line="178" pos:column="15"/></name><operator pos:line="178" pos:column="15">-&gt;<pos:position pos:line="178" pos:column="20"/></operator><name pos:line="178" pos:column="17">name<pos:position pos:line="178" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="178" pos:column="23">vb<pos:position pos:line="178" pos:column="25"/></name><operator pos:line="178" pos:column="25">-&gt;<pos:position pos:line="178" pos:column="30"/></operator><name pos:line="178" pos:column="27">name_length<pos:position pos:line="178" pos:column="38"/></name></name></expr></argument>,
	    <argument><expr><name><name pos:line="179" pos:column="13">data<pos:position pos:line="179" pos:column="17"/></name><operator pos:line="179" pos:column="17">-&gt;<pos:position pos:line="179" pos:column="22"/></operator><name pos:line="179" pos:column="19">values<pos:position pos:line="179" pos:column="25"/></name><index pos:line="179" pos:column="25">[<expr><name pos:line="179" pos:column="26">i<pos:position pos:line="179" pos:column="27"/></name></expr>]<pos:position pos:line="179" pos:column="28"/></index></name><operator pos:line="179" pos:column="28">.<pos:position pos:line="179" pos:column="29"/></operator><name pos:line="179" pos:column="29">oid_len<pos:position pos:line="179" pos:column="36"/></name></expr></argument>)<pos:position pos:line="179" pos:column="37"/></argument_list></call> <operator pos:line="179" pos:column="38">!=<pos:position pos:line="179" pos:column="40"/></operator> <literal type="number" pos:line="179" pos:column="41">0<pos:position pos:line="179" pos:column="42"/></literal></expr>)<pos:position pos:line="179" pos:column="43"/></condition><then pos:line="179" pos:column="43">
      <block pos:line="180" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="181" pos:column="9">DEBUG<pos:position pos:line="181" pos:column="14"/></name> <argument_list pos:line="181" pos:column="15">(<argument><expr><literal type="string" pos:line="181" pos:column="16">"snmp plugin: host = %s; data = %s; Value %i left its subtree."<pos:position pos:line="181" pos:column="79"/></literal></expr></argument>,
	    <argument><expr><name><name pos:line="182" pos:column="13">host<pos:position pos:line="182" pos:column="17"/></name><operator pos:line="182" pos:column="17">-&gt;<pos:position pos:line="182" pos:column="22"/></operator><name pos:line="182" pos:column="19">name<pos:position pos:line="182" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="182" pos:column="25">data<pos:position pos:line="182" pos:column="29"/></name><operator pos:line="182" pos:column="29">-&gt;<pos:position pos:line="182" pos:column="34"/></operator><name pos:line="182" pos:column="31">name<pos:position pos:line="182" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="37">i<pos:position pos:line="182" pos:column="38"/></name></expr></argument>)<pos:position pos:line="182" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="40"/></expr_stmt>
	<continue pos:line="183" pos:column="9">continue;<pos:position pos:line="183" pos:column="18"/></continue>
      }<pos:position pos:line="184" pos:column="8"/></block></then></if>

      <if pos:line="186" pos:column="7">if <condition pos:line="186" pos:column="10">(<expr><operator pos:line="186" pos:column="11">(<pos:position pos:line="186" pos:column="12"/></operator><name><name pos:line="186" pos:column="12">value_table_ptr<pos:position pos:line="186" pos:column="27"/></name><index pos:line="186" pos:column="27">[<expr><name pos:line="186" pos:column="28">i<pos:position pos:line="186" pos:column="29"/></name></expr>]<pos:position pos:line="186" pos:column="30"/></index></name> <operator pos:line="186" pos:column="31">!=<pos:position pos:line="186" pos:column="33"/></operator> <name pos:line="186" pos:column="34">NULL<pos:position pos:line="186" pos:column="38"/></name><operator pos:line="186" pos:column="38">)<pos:position pos:line="186" pos:column="39"/></operator>
	  <operator pos:line="187" pos:column="11">&amp;&amp;<pos:position pos:line="187" pos:column="21"/></operator> <operator pos:line="187" pos:column="14">(<pos:position pos:line="187" pos:column="15"/></operator><name><name pos:line="187" pos:column="15">vb<pos:position pos:line="187" pos:column="17"/></name><operator pos:line="187" pos:column="17">-&gt;<pos:position pos:line="187" pos:column="22"/></operator><name pos:line="187" pos:column="19">name<pos:position pos:line="187" pos:column="23"/></name><index pos:line="187" pos:column="23">[<expr><name><name pos:line="187" pos:column="24">vb<pos:position pos:line="187" pos:column="26"/></name><operator pos:line="187" pos:column="26">-&gt;<pos:position pos:line="187" pos:column="31"/></operator><name pos:line="187" pos:column="28">name_length<pos:position pos:line="187" pos:column="39"/></name></name> <operator pos:line="187" pos:column="40">-<pos:position pos:line="187" pos:column="41"/></operator> <literal type="number" pos:line="187" pos:column="42">1<pos:position pos:line="187" pos:column="43"/></literal></expr>]<pos:position pos:line="187" pos:column="44"/></index></name> <operator pos:line="187" pos:column="45">&lt;=<pos:position pos:line="187" pos:column="50"/></operator> <name><name pos:line="187" pos:column="48">value_table_ptr<pos:position pos:line="187" pos:column="63"/></name><index pos:line="187" pos:column="63">[<expr><name pos:line="187" pos:column="64">i<pos:position pos:line="187" pos:column="65"/></name></expr>]<pos:position pos:line="187" pos:column="66"/></index></name><operator pos:line="187" pos:column="66">-&gt;<pos:position pos:line="187" pos:column="71"/></operator><name pos:line="187" pos:column="68">subid<pos:position pos:line="187" pos:column="73"/></name><operator pos:line="187" pos:column="73">)<pos:position pos:line="187" pos:column="74"/></operator></expr>)<pos:position pos:line="187" pos:column="75"/></condition><then pos:line="187" pos:column="75">
      <block pos:line="188" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="189" pos:column="9">DEBUG<pos:position pos:line="189" pos:column="14"/></name> <argument_list pos:line="189" pos:column="15">(<argument><expr><literal type="string" pos:line="189" pos:column="16">"snmp plugin: host = %s; data = %s; i = %i; SUBID is not increasing."<pos:position pos:line="189" pos:column="85"/></literal></expr></argument>,
	    <argument><expr><name><name pos:line="190" pos:column="13">host<pos:position pos:line="190" pos:column="17"/></name><operator pos:line="190" pos:column="17">-&gt;<pos:position pos:line="190" pos:column="22"/></operator><name pos:line="190" pos:column="19">name<pos:position pos:line="190" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="190" pos:column="25">data<pos:position pos:line="190" pos:column="29"/></name><operator pos:line="190" pos:column="29">-&gt;<pos:position pos:line="190" pos:column="34"/></operator><name pos:line="190" pos:column="31">name<pos:position pos:line="190" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="37">i<pos:position pos:line="190" pos:column="38"/></name></expr></argument>)<pos:position pos:line="190" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="40"/></expr_stmt>
	<continue pos:line="191" pos:column="9">continue;<pos:position pos:line="191" pos:column="18"/></continue>
      }<pos:position pos:line="192" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="194" pos:column="7">vt<pos:position pos:line="194" pos:column="9"/></name> <operator pos:line="194" pos:column="10">=<pos:position pos:line="194" pos:column="11"/></operator> <operator pos:line="194" pos:column="12">(<pos:position pos:line="194" pos:column="13"/></operator><name pos:line="194" pos:column="13">csnmp_table_values_t<pos:position pos:line="194" pos:column="33"/></name> <operator pos:line="194" pos:column="34">*<pos:position pos:line="194" pos:column="35"/></operator><operator pos:line="194" pos:column="35">)<pos:position pos:line="194" pos:column="36"/></operator> <call><name pos:line="194" pos:column="37">malloc<pos:position pos:line="194" pos:column="43"/></name> <argument_list pos:line="194" pos:column="44">(<argument><expr><sizeof pos:line="194" pos:column="45">sizeof <argument_list pos:line="194" pos:column="52">(<argument><expr><name pos:line="194" pos:column="53">csnmp_table_values_t<pos:position pos:line="194" pos:column="73"/></name></expr></argument>)<pos:position pos:line="194" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="194" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="76"/></expr_stmt>
      <if pos:line="195" pos:column="7">if <condition pos:line="195" pos:column="10">(<expr><name pos:line="195" pos:column="11">vt<pos:position pos:line="195" pos:column="13"/></name> <operator pos:line="195" pos:column="14">!=<pos:position pos:line="195" pos:column="16"/></operator> <name pos:line="195" pos:column="17">NULL<pos:position pos:line="195" pos:column="21"/></name></expr>)<pos:position pos:line="195" pos:column="22"/></condition><then pos:line="195" pos:column="22">
      <block pos:line="196" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="197" pos:column="9">vt<pos:position pos:line="197" pos:column="11"/></name><operator pos:line="197" pos:column="11">-&gt;<pos:position pos:line="197" pos:column="16"/></operator><name pos:line="197" pos:column="13">subid<pos:position pos:line="197" pos:column="18"/></name></name> <operator pos:line="197" pos:column="19">=<pos:position pos:line="197" pos:column="20"/></operator> <name><name pos:line="197" pos:column="21">vb<pos:position pos:line="197" pos:column="23"/></name><operator pos:line="197" pos:column="23">-&gt;<pos:position pos:line="197" pos:column="28"/></operator><name pos:line="197" pos:column="25">name<pos:position pos:line="197" pos:column="29"/></name><index pos:line="197" pos:column="29">[<expr><name><name pos:line="197" pos:column="30">vb<pos:position pos:line="197" pos:column="32"/></name><operator pos:line="197" pos:column="32">-&gt;<pos:position pos:line="197" pos:column="37"/></operator><name pos:line="197" pos:column="34">name_length<pos:position pos:line="197" pos:column="45"/></name></name> <operator pos:line="197" pos:column="46">-<pos:position pos:line="197" pos:column="47"/></operator> <literal type="number" pos:line="197" pos:column="48">1<pos:position pos:line="197" pos:column="49"/></literal></expr>]<pos:position pos:line="197" pos:column="50"/></index></name></expr>;<pos:position pos:line="197" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="198" pos:column="9">vt<pos:position pos:line="198" pos:column="11"/></name><operator pos:line="198" pos:column="11">-&gt;<pos:position pos:line="198" pos:column="16"/></operator><name pos:line="198" pos:column="13">value<pos:position pos:line="198" pos:column="18"/></name></name> <operator pos:line="198" pos:column="19">=<pos:position pos:line="198" pos:column="20"/></operator> <call><name pos:line="198" pos:column="21">csnmp_value_list_to_value<pos:position pos:line="198" pos:column="46"/></name> <argument_list pos:line="198" pos:column="47">(<argument><expr><name pos:line="198" pos:column="48">vb<pos:position pos:line="198" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="198" pos:column="52">ds<pos:position pos:line="198" pos:column="54"/></name><operator pos:line="198" pos:column="54">-&gt;<pos:position pos:line="198" pos:column="59"/></operator><name pos:line="198" pos:column="56">ds<pos:position pos:line="198" pos:column="58"/></name><index pos:line="198" pos:column="58">[<expr><name pos:line="198" pos:column="59">i<pos:position pos:line="198" pos:column="60"/></name></expr>]<pos:position pos:line="198" pos:column="61"/></index></name><operator pos:line="198" pos:column="61">.<pos:position pos:line="198" pos:column="62"/></operator><name pos:line="198" pos:column="62">type<pos:position pos:line="198" pos:column="66"/></name></expr></argument>)<pos:position pos:line="198" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="199" pos:column="9">vt<pos:position pos:line="199" pos:column="11"/></name><operator pos:line="199" pos:column="11">-&gt;<pos:position pos:line="199" pos:column="16"/></operator><name pos:line="199" pos:column="13">next<pos:position pos:line="199" pos:column="17"/></name></name> <operator pos:line="199" pos:column="18">=<pos:position pos:line="199" pos:column="19"/></operator> <name pos:line="199" pos:column="20">NULL<pos:position pos:line="199" pos:column="24"/></name></expr>;<pos:position pos:line="199" pos:column="25"/></expr_stmt>

	<if pos:line="201" pos:column="9">if <condition pos:line="201" pos:column="12">(<expr><name><name pos:line="201" pos:column="13">value_table_ptr<pos:position pos:line="201" pos:column="28"/></name><index pos:line="201" pos:column="28">[<expr><name pos:line="201" pos:column="29">i<pos:position pos:line="201" pos:column="30"/></name></expr>]<pos:position pos:line="201" pos:column="31"/></index></name> <operator pos:line="201" pos:column="32">==<pos:position pos:line="201" pos:column="34"/></operator> <name pos:line="201" pos:column="35">NULL<pos:position pos:line="201" pos:column="39"/></name></expr>)<pos:position pos:line="201" pos:column="40"/></condition><then pos:line="201" pos:column="40">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="202" pos:column="11">value_table<pos:position pos:line="202" pos:column="22"/></name><index pos:line="202" pos:column="22">[<expr><name pos:line="202" pos:column="23">i<pos:position pos:line="202" pos:column="24"/></name></expr>]<pos:position pos:line="202" pos:column="25"/></index></name> <operator pos:line="202" pos:column="26">=<pos:position pos:line="202" pos:column="27"/></operator> <name pos:line="202" pos:column="28">vt<pos:position pos:line="202" pos:column="30"/></name></expr>;<pos:position pos:line="202" pos:column="31"/></expr_stmt></block></then>
	<else pos:line="203" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="204" pos:column="11">value_table_ptr<pos:position pos:line="204" pos:column="26"/></name><index pos:line="204" pos:column="26">[<expr><name pos:line="204" pos:column="27">i<pos:position pos:line="204" pos:column="28"/></name></expr>]<pos:position pos:line="204" pos:column="29"/></index></name><operator pos:line="204" pos:column="29">-&gt;<pos:position pos:line="204" pos:column="34"/></operator><name pos:line="204" pos:column="31">next<pos:position pos:line="204" pos:column="35"/></name> <operator pos:line="204" pos:column="36">=<pos:position pos:line="204" pos:column="37"/></operator> <name pos:line="204" pos:column="38">vt<pos:position pos:line="204" pos:column="40"/></name></expr>;<pos:position pos:line="204" pos:column="41"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name><name pos:line="205" pos:column="9">value_table_ptr<pos:position pos:line="205" pos:column="24"/></name><index pos:line="205" pos:column="24">[<expr><name pos:line="205" pos:column="25">i<pos:position pos:line="205" pos:column="26"/></name></expr>]<pos:position pos:line="205" pos:column="27"/></index></name> <operator pos:line="205" pos:column="28">=<pos:position pos:line="205" pos:column="29"/></operator> <name pos:line="205" pos:column="30">vt<pos:position pos:line="205" pos:column="32"/></name></expr>;<pos:position pos:line="205" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="206" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="208" pos:column="7">/* Copy OID to oid_list[i + 1] */</comment>
      <expr_stmt><expr><call><name pos:line="209" pos:column="7">memcpy<pos:position pos:line="209" pos:column="13"/></name> <argument_list pos:line="209" pos:column="14">(<argument><expr><name><name pos:line="209" pos:column="15">oid_list<pos:position pos:line="209" pos:column="23"/></name><index pos:line="209" pos:column="23">[<expr><name pos:line="209" pos:column="24">i<pos:position pos:line="209" pos:column="25"/></name> <operator pos:line="209" pos:column="26">+<pos:position pos:line="209" pos:column="27"/></operator> <literal type="number" pos:line="209" pos:column="28">1<pos:position pos:line="209" pos:column="29"/></literal></expr>]<pos:position pos:line="209" pos:column="30"/></index></name><operator pos:line="209" pos:column="30">.<pos:position pos:line="209" pos:column="31"/></operator><name pos:line="209" pos:column="31">oid<pos:position pos:line="209" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="209" pos:column="36">vb<pos:position pos:line="209" pos:column="38"/></name><operator pos:line="209" pos:column="38">-&gt;<pos:position pos:line="209" pos:column="43"/></operator><name pos:line="209" pos:column="40">name<pos:position pos:line="209" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="209" pos:column="46">sizeof <argument_list pos:line="209" pos:column="53">(<argument><expr><name pos:line="209" pos:column="54">oid<pos:position pos:line="209" pos:column="57"/></name></expr></argument>)<pos:position pos:line="209" pos:column="58"/></argument_list></sizeof> <operator pos:line="209" pos:column="59">*<pos:position pos:line="209" pos:column="60"/></operator> <name><name pos:line="209" pos:column="61">vb<pos:position pos:line="209" pos:column="63"/></name><operator pos:line="209" pos:column="63">-&gt;<pos:position pos:line="209" pos:column="68"/></operator><name pos:line="209" pos:column="65">name_length<pos:position pos:line="209" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="209" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="78"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="210" pos:column="7">oid_list<pos:position pos:line="210" pos:column="15"/></name><index pos:line="210" pos:column="15">[<expr><name pos:line="210" pos:column="16">i<pos:position pos:line="210" pos:column="17"/></name> <operator pos:line="210" pos:column="18">+<pos:position pos:line="210" pos:column="19"/></operator> <literal type="number" pos:line="210" pos:column="20">1<pos:position pos:line="210" pos:column="21"/></literal></expr>]<pos:position pos:line="210" pos:column="22"/></index></name><operator pos:line="210" pos:column="22">.<pos:position pos:line="210" pos:column="23"/></operator><name pos:line="210" pos:column="23">oid_len<pos:position pos:line="210" pos:column="30"/></name> <operator pos:line="210" pos:column="31">=<pos:position pos:line="210" pos:column="32"/></operator> <name><name pos:line="210" pos:column="33">vb<pos:position pos:line="210" pos:column="35"/></name><operator pos:line="210" pos:column="35">-&gt;<pos:position pos:line="210" pos:column="40"/></operator><name pos:line="210" pos:column="37">name_length<pos:position pos:line="210" pos:column="48"/></name></name></expr>;<pos:position pos:line="210" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="211" pos:column="6"/></block></for> <comment type="block" pos:line="211" pos:column="7">/* for (i = data-&gt;values_len) */</comment>

    <if pos:line="213" pos:column="5">if <condition pos:line="213" pos:column="8">(<expr><name pos:line="213" pos:column="9">res<pos:position pos:line="213" pos:column="12"/></name> <operator pos:line="213" pos:column="13">!=<pos:position pos:line="213" pos:column="15"/></operator> <name pos:line="213" pos:column="16">NULL<pos:position pos:line="213" pos:column="20"/></name></expr>)<pos:position pos:line="213" pos:column="21"/></condition><then pos:line="213" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="214" pos:column="7">snmp_free_pdu<pos:position pos:line="214" pos:column="20"/></name> <argument_list pos:line="214" pos:column="21">(<argument><expr><name pos:line="214" pos:column="22">res<pos:position pos:line="214" pos:column="25"/></name></expr></argument>)<pos:position pos:line="214" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="27"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="215" pos:column="5">res<pos:position pos:line="215" pos:column="8"/></name> <operator pos:line="215" pos:column="9">=<pos:position pos:line="215" pos:column="10"/></operator> <name pos:line="215" pos:column="11">NULL<pos:position pos:line="215" pos:column="15"/></name></expr>;<pos:position pos:line="215" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="216" pos:column="4"/></block></while> <comment type="block" pos:line="216" pos:column="5">/* while (status == 0) */</comment>

  <if pos:line="218" pos:column="3">if <condition pos:line="218" pos:column="6">(<expr><name pos:line="218" pos:column="7">status<pos:position pos:line="218" pos:column="13"/></name> <operator pos:line="218" pos:column="14">==<pos:position pos:line="218" pos:column="16"/></operator> <literal type="number" pos:line="218" pos:column="17">0<pos:position pos:line="218" pos:column="18"/></literal></expr>)<pos:position pos:line="218" pos:column="19"/></condition><then pos:line="218" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="219" pos:column="5">csnmp_dispatch_table<pos:position pos:line="219" pos:column="25"/></name> <argument_list pos:line="219" pos:column="26">(<argument><expr><name pos:line="219" pos:column="27">host<pos:position pos:line="219" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="33">data<pos:position pos:line="219" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="39">instance_list<pos:position pos:line="219" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="54">value_table<pos:position pos:line="219" pos:column="65"/></name></expr></argument>)<pos:position pos:line="219" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="67"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="221" pos:column="3">/* Free all allocated variables here */</comment>
  <while pos:line="222" pos:column="3">while <condition pos:line="222" pos:column="9">(<expr><name pos:line="222" pos:column="10">instance_list<pos:position pos:line="222" pos:column="23"/></name> <operator pos:line="222" pos:column="24">!=<pos:position pos:line="222" pos:column="26"/></operator> <name pos:line="222" pos:column="27">NULL<pos:position pos:line="222" pos:column="31"/></name></expr>)<pos:position pos:line="222" pos:column="32"/></condition>
  <block pos:line="223" pos:column="3">{
    <expr_stmt><expr><name pos:line="224" pos:column="5">instance_list_ptr<pos:position pos:line="224" pos:column="22"/></name> <operator pos:line="224" pos:column="23">=<pos:position pos:line="224" pos:column="24"/></operator> <name><name pos:line="224" pos:column="25">instance_list<pos:position pos:line="224" pos:column="38"/></name><operator pos:line="224" pos:column="38">-&gt;<pos:position pos:line="224" pos:column="43"/></operator><name pos:line="224" pos:column="40">next<pos:position pos:line="224" pos:column="44"/></name></name></expr>;<pos:position pos:line="224" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="225" pos:column="5">sfree<pos:position pos:line="225" pos:column="10"/></name> <argument_list pos:line="225" pos:column="11">(<argument><expr><name pos:line="225" pos:column="12">instance_list<pos:position pos:line="225" pos:column="25"/></name></expr></argument>)<pos:position pos:line="225" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="226" pos:column="5">instance_list<pos:position pos:line="226" pos:column="18"/></name> <operator pos:line="226" pos:column="19">=<pos:position pos:line="226" pos:column="20"/></operator> <name pos:line="226" pos:column="21">instance_list_ptr<pos:position pos:line="226" pos:column="38"/></name></expr>;<pos:position pos:line="226" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="227" pos:column="4"/></block></while>

  <for pos:line="229" pos:column="3">for <control pos:line="229" pos:column="7">(<init><expr><name pos:line="229" pos:column="8">i<pos:position pos:line="229" pos:column="9"/></name> <operator pos:line="229" pos:column="10">=<pos:position pos:line="229" pos:column="11"/></operator> <literal type="number" pos:line="229" pos:column="12">0<pos:position pos:line="229" pos:column="13"/></literal></expr>;<pos:position pos:line="229" pos:column="14"/></init> <condition><expr><name pos:line="229" pos:column="15">i<pos:position pos:line="229" pos:column="16"/></name> <operator pos:line="229" pos:column="17">&lt;<pos:position pos:line="229" pos:column="21"/></operator> <name><name pos:line="229" pos:column="19">data<pos:position pos:line="229" pos:column="23"/></name><operator pos:line="229" pos:column="23">-&gt;<pos:position pos:line="229" pos:column="28"/></operator><name pos:line="229" pos:column="25">values_len<pos:position pos:line="229" pos:column="35"/></name></name></expr>;<pos:position pos:line="229" pos:column="36"/></condition> <incr><expr><name pos:line="229" pos:column="37">i<pos:position pos:line="229" pos:column="38"/></name><operator pos:line="229" pos:column="38">++<pos:position pos:line="229" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="229" pos:column="41"/></control>
  <block pos:line="230" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="231" pos:column="5">csnmp_table_values_t<pos:position pos:line="231" pos:column="25"/></name> <modifier pos:line="231" pos:column="26">*<pos:position pos:line="231" pos:column="27"/></modifier></type><name pos:line="231" pos:column="27">tmp<pos:position pos:line="231" pos:column="30"/></name></decl>;<pos:position pos:line="231" pos:column="31"/></decl_stmt>
    <while pos:line="232" pos:column="5">while <condition pos:line="232" pos:column="11">(<expr><name><name pos:line="232" pos:column="12">value_table<pos:position pos:line="232" pos:column="23"/></name><index pos:line="232" pos:column="23">[<expr><name pos:line="232" pos:column="24">i<pos:position pos:line="232" pos:column="25"/></name></expr>]<pos:position pos:line="232" pos:column="26"/></index></name> <operator pos:line="232" pos:column="27">!=<pos:position pos:line="232" pos:column="29"/></operator> <name pos:line="232" pos:column="30">NULL<pos:position pos:line="232" pos:column="34"/></name></expr>)<pos:position pos:line="232" pos:column="35"/></condition>
    <block pos:line="233" pos:column="5">{
      <expr_stmt><expr><name pos:line="234" pos:column="7">tmp<pos:position pos:line="234" pos:column="10"/></name> <operator pos:line="234" pos:column="11">=<pos:position pos:line="234" pos:column="12"/></operator> <name><name pos:line="234" pos:column="13">value_table<pos:position pos:line="234" pos:column="24"/></name><index pos:line="234" pos:column="24">[<expr><name pos:line="234" pos:column="25">i<pos:position pos:line="234" pos:column="26"/></name></expr>]<pos:position pos:line="234" pos:column="27"/></index></name><operator pos:line="234" pos:column="27">-&gt;<pos:position pos:line="234" pos:column="32"/></operator><name pos:line="234" pos:column="29">next<pos:position pos:line="234" pos:column="33"/></name></expr>;<pos:position pos:line="234" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="235" pos:column="7">sfree<pos:position pos:line="235" pos:column="12"/></name> <argument_list pos:line="235" pos:column="13">(<argument><expr><name><name pos:line="235" pos:column="14">value_table<pos:position pos:line="235" pos:column="25"/></name><index pos:line="235" pos:column="25">[<expr><name pos:line="235" pos:column="26">i<pos:position pos:line="235" pos:column="27"/></name></expr>]<pos:position pos:line="235" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="235" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="236" pos:column="7">value_table<pos:position pos:line="236" pos:column="18"/></name><index pos:line="236" pos:column="18">[<expr><name pos:line="236" pos:column="19">i<pos:position pos:line="236" pos:column="20"/></name></expr>]<pos:position pos:line="236" pos:column="21"/></index></name> <operator pos:line="236" pos:column="22">=<pos:position pos:line="236" pos:column="23"/></operator> <name pos:line="236" pos:column="24">tmp<pos:position pos:line="236" pos:column="27"/></name></expr>;<pos:position pos:line="236" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="237" pos:column="6"/></block></while>
  }<pos:position pos:line="238" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="240" pos:column="3">sfree<pos:position pos:line="240" pos:column="8"/></name> <argument_list pos:line="240" pos:column="9">(<argument><expr><name pos:line="240" pos:column="10">value_table<pos:position pos:line="240" pos:column="21"/></name></expr></argument>)<pos:position pos:line="240" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="241" pos:column="3">sfree<pos:position pos:line="241" pos:column="8"/></name> <argument_list pos:line="241" pos:column="9">(<argument><expr><name pos:line="241" pos:column="10">oid_list<pos:position pos:line="241" pos:column="18"/></name></expr></argument>)<pos:position pos:line="241" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="20"/></expr_stmt>

  <return pos:line="243" pos:column="3">return <expr><operator pos:line="243" pos:column="10">(<pos:position pos:line="243" pos:column="11"/></operator><literal type="number" pos:line="243" pos:column="11">0<pos:position pos:line="243" pos:column="12"/></literal><operator pos:line="243" pos:column="12">)<pos:position pos:line="243" pos:column="13"/></operator></expr>;<pos:position pos:line="243" pos:column="14"/></return>
}<pos:position pos:line="244" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1493_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">statsd_network_thread<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">void<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">args<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <comment type="block" pos:line="1" pos:column="49">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">pollfd<pos:position pos:line="3" pos:column="16"/></name></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">fds<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><name pos:line="3" pos:column="24">NULL<pos:position pos:line="3" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">fds_num<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">status<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">statsd_network_init<pos:position pos:line="8" pos:column="31"/></name> <argument_list pos:line="8" pos:column="32">(<argument><expr><operator pos:line="8" pos:column="33">&amp;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="34">fds<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="39">&amp;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="40">fds_num<pos:position pos:line="8" pos:column="47"/></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="49"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">status<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">!=<pos:position pos:line="9" pos:column="16"/></operator> <literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ERROR<pos:position pos:line="11" pos:column="10"/></name> <argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="string" pos:line="11" pos:column="12">"statsd plugin: Unable to open listening sockets."<pos:position pos:line="11" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">pthread_exit<pos:position pos:line="12" pos:column="17"/></name> <argument_list pos:line="12" pos:column="18">(<argument><expr><operator pos:line="12" pos:column="19">(<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">void<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">*<pos:position pos:line="12" pos:column="26"/></operator><operator pos:line="12" pos:column="26">)<pos:position pos:line="12" pos:column="27"/></operator> <literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <while pos:line="15" pos:column="3">while <condition pos:line="15" pos:column="9">(<expr><operator pos:line="15" pos:column="10">!<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">network_thread_shutdown<pos:position pos:line="15" pos:column="34"/></name></expr>)<pos:position pos:line="15" pos:column="35"/></condition>
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">status<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">poll<pos:position pos:line="17" pos:column="18"/></name> <argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">fds<pos:position pos:line="17" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="25">(<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">nfds_t<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">)<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">fds_num<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <comment type="block" pos:line="17" pos:column="43">/* timeout = */</comment> <argument><expr><operator pos:line="17" pos:column="59">-<pos:position pos:line="17" pos:column="60"/></operator><literal type="number" pos:line="17" pos:column="60">1<pos:position pos:line="17" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="63"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">status<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">&lt;<pos:position pos:line="18" pos:column="20"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>)<pos:position pos:line="18" pos:column="20"/></condition><then pos:line="18" pos:column="20">
    <block pos:line="19" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">char<pos:position pos:line="20" pos:column="11"/></name></type> <name><name pos:line="20" pos:column="12">errbuf<pos:position pos:line="20" pos:column="18"/></name><index pos:line="20" pos:column="18">[<expr><literal type="number" pos:line="20" pos:column="19">1024<pos:position pos:line="20" pos:column="23"/></literal></expr>]<pos:position pos:line="20" pos:column="24"/></index></name></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>

      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><operator pos:line="22" pos:column="11">(<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">errno<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">==<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">EINTR<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">)<pos:position pos:line="22" pos:column="27"/></operator> <operator pos:line="22" pos:column="28">||<pos:position pos:line="22" pos:column="30"/></operator> <operator pos:line="22" pos:column="31">(<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="32">errno<pos:position pos:line="22" pos:column="37"/></name> <operator pos:line="22" pos:column="38">==<pos:position pos:line="22" pos:column="40"/></operator> <name pos:line="22" pos:column="41">EAGAIN<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">)<pos:position pos:line="22" pos:column="48"/></operator></expr>)<pos:position pos:line="22" pos:column="49"/></condition><then pos:line="22" pos:column="49">
        <block type="pseudo"><continue pos:line="23" pos:column="9">continue;<pos:position pos:line="23" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><call><name pos:line="25" pos:column="7">ERROR<pos:position pos:line="25" pos:column="12"/></name> <argument_list pos:line="25" pos:column="13">(<argument><expr><literal type="string" pos:line="25" pos:column="14">"statsd plugin: poll(2) failed: %s"<pos:position pos:line="25" pos:column="49"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="26" pos:column="11">sstrerror<pos:position pos:line="26" pos:column="20"/></name> <argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">errno<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="29">errbuf<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="37">sizeof <argument_list pos:line="26" pos:column="44">(<argument><expr><name pos:line="26" pos:column="45">errbuf<pos:position pos:line="26" pos:column="51"/></name></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>
      <break pos:line="27" pos:column="7">break;<pos:position pos:line="27" pos:column="13"/></break>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <for pos:line="30" pos:column="5">for <control pos:line="30" pos:column="9">(<init><expr><name pos:line="30" pos:column="10">i<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <literal type="number" pos:line="30" pos:column="14">0<pos:position pos:line="30" pos:column="15"/></literal></expr>;<pos:position pos:line="30" pos:column="16"/></init> <condition><expr><name pos:line="30" pos:column="17">i<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">&lt;<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="21">fds_num<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></condition> <incr><expr><name pos:line="30" pos:column="30">i<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">++<pos:position pos:line="30" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="34"/></control>
    <block pos:line="31" pos:column="5">{
      <if pos:line="32" pos:column="7">if <condition pos:line="32" pos:column="10">(<expr><operator pos:line="32" pos:column="11">(<pos:position pos:line="32" pos:column="12"/></operator><name><name pos:line="32" pos:column="12">fds<pos:position pos:line="32" pos:column="15"/></name><index pos:line="32" pos:column="15">[<expr><name pos:line="32" pos:column="16">i<pos:position pos:line="32" pos:column="17"/></name></expr>]<pos:position pos:line="32" pos:column="18"/></index></name><operator pos:line="32" pos:column="18">.<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="19">revents<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">&amp;<pos:position pos:line="32" pos:column="32"/></operator> <operator pos:line="32" pos:column="29">(<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">POLLIN<pos:position pos:line="32" pos:column="36"/></name> <operator pos:line="32" pos:column="37">|<pos:position pos:line="32" pos:column="38"/></operator> <name pos:line="32" pos:column="39">POLLPRI<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">)<pos:position pos:line="32" pos:column="47"/></operator><operator pos:line="32" pos:column="47">)<pos:position pos:line="32" pos:column="48"/></operator> <operator pos:line="32" pos:column="49">==<pos:position pos:line="32" pos:column="51"/></operator> <literal type="number" pos:line="32" pos:column="52">0<pos:position pos:line="32" pos:column="53"/></literal></expr>)<pos:position pos:line="32" pos:column="54"/></condition><then pos:line="32" pos:column="54">
        <block type="pseudo"><continue pos:line="33" pos:column="9">continue;<pos:position pos:line="33" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><call><name pos:line="35" pos:column="7">statsd_network_read<pos:position pos:line="35" pos:column="26"/></name> <argument_list pos:line="35" pos:column="27">(<argument><expr><name><name pos:line="35" pos:column="28">fds<pos:position pos:line="35" pos:column="31"/></name><index pos:line="35" pos:column="31">[<expr><name pos:line="35" pos:column="32">i<pos:position pos:line="35" pos:column="33"/></name></expr>]<pos:position pos:line="35" pos:column="34"/></index></name><operator pos:line="35" pos:column="34">.<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="35">fd<pos:position pos:line="35" pos:column="37"/></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="36" pos:column="7">fds<pos:position pos:line="36" pos:column="10"/></name><index pos:line="36" pos:column="10">[<expr><name pos:line="36" pos:column="11">i<pos:position pos:line="36" pos:column="12"/></name></expr>]<pos:position pos:line="36" pos:column="13"/></index></name><operator pos:line="36" pos:column="13">.<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">revents<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <literal type="number" pos:line="36" pos:column="24">0<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></for>
  }<pos:position pos:line="38" pos:column="4"/></block></while> <comment type="block" pos:line="38" pos:column="5">/* while (!network_thread_shutdown) */</comment>

  <comment type="block" pos:line="40" pos:column="3">/* Clean up */</comment>
  <for pos:line="41" pos:column="3">for <control pos:line="41" pos:column="7">(<init><expr><name pos:line="41" pos:column="8">i<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <literal type="number" pos:line="41" pos:column="12">0<pos:position pos:line="41" pos:column="13"/></literal></expr>;<pos:position pos:line="41" pos:column="14"/></init> <condition><expr><name pos:line="41" pos:column="15">i<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">&lt;<pos:position pos:line="41" pos:column="21"/></operator> <name pos:line="41" pos:column="19">fds_num<pos:position pos:line="41" pos:column="26"/></name></expr>;<pos:position pos:line="41" pos:column="27"/></condition> <incr><expr><name pos:line="41" pos:column="28">i<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">++<pos:position pos:line="41" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="32"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="5">close<pos:position pos:line="42" pos:column="10"/></name> <argument_list pos:line="42" pos:column="11">(<argument><expr><name><name pos:line="42" pos:column="12">fds<pos:position pos:line="42" pos:column="15"/></name><index pos:line="42" pos:column="15">[<expr><name pos:line="42" pos:column="16">i<pos:position pos:line="42" pos:column="17"/></name></expr>]<pos:position pos:line="42" pos:column="18"/></index></name><operator pos:line="42" pos:column="18">.<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="19">fd<pos:position pos:line="42" pos:column="21"/></name></expr></argument>)<pos:position pos:line="42" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="23"/></expr_stmt></block></for>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">sfree<pos:position pos:line="43" pos:column="8"/></name> <argument_list pos:line="43" pos:column="9">(<argument><expr><name pos:line="43" pos:column="10">fds<pos:position pos:line="43" pos:column="13"/></name></expr></argument>)<pos:position pos:line="43" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="15"/></expr_stmt>

  <return pos:line="45" pos:column="3">return <expr><operator pos:line="45" pos:column="10">(<pos:position pos:line="45" pos:column="11"/></operator><operator pos:line="45" pos:column="11">(<pos:position pos:line="45" pos:column="12"/></operator><name pos:line="45" pos:column="12">void<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">*<pos:position pos:line="45" pos:column="18"/></operator><operator pos:line="45" pos:column="18">)<pos:position pos:line="45" pos:column="19"/></operator> <literal type="number" pos:line="45" pos:column="20">0<pos:position pos:line="45" pos:column="21"/></literal><operator pos:line="45" pos:column="21">)<pos:position pos:line="45" pos:column="22"/></operator></expr>;<pos:position pos:line="45" pos:column="23"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

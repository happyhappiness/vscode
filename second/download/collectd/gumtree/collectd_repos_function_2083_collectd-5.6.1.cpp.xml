<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2083_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">uuid_get_from_file<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">path<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">FILE<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">file<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">uuid<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><name pos:line="5" pos:column="15">UUID_PRINTABLE_NORMAL_LENGTH<pos:position pos:line="5" pos:column="43"/></name> <operator pos:line="5" pos:column="44">+<pos:position pos:line="5" pos:column="45"/></operator> <literal type="number" pos:line="5" pos:column="46">1<pos:position pos:line="5" pos:column="47"/></literal></expr>]<pos:position pos:line="5" pos:column="48"/></index></name> <init pos:line="5" pos:column="49">= <expr><literal type="string" pos:line="5" pos:column="51">""<pos:position pos:line="5" pos:column="53"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="54"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">file<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <call><name pos:line="7" pos:column="12">fopen<pos:position pos:line="7" pos:column="17"/></name> <argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">path<pos:position pos:line="7" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="25">"r"<pos:position pos:line="7" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">file<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">==<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">NULL<pos:position pos:line="8" pos:column="21"/></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><operator pos:line="9" pos:column="16">(<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">NULL<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">)<pos:position pos:line="9" pos:column="22"/></operator></expr>;<pos:position pos:line="9" pos:column="23"/></return></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name pos:line="11" pos:column="10">fgets<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">uuid<pos:position pos:line="11" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="22">sizeof<argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">uuid<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="11" pos:column="36">file<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="42"/></condition><then pos:line="11" pos:column="42"> <block pos:line="11" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">fclose<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">file<pos:position pos:line="12" pos:column="20"/></name></expr></argument>)<pos:position pos:line="12" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">NULL<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">)<pos:position pos:line="13" pos:column="22"/></operator></expr>;<pos:position pos:line="13" pos:column="23"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">fclose<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">file<pos:position pos:line="15" pos:column="16"/></name></expr></argument>)<pos:position pos:line="15" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">strstripnewline<pos:position pos:line="16" pos:column="20"/></name> <argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">uuid<pos:position pos:line="16" pos:column="26"/></name></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>

    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><call><name pos:line="18" pos:column="13">strdup<pos:position pos:line="18" pos:column="19"/></name> <argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">uuid<pos:position pos:line="18" pos:column="25"/></name></expr></argument>)<pos:position pos:line="18" pos:column="26"/></argument_list></call><operator pos:line="18" pos:column="26">)<pos:position pos:line="18" pos:column="27"/></operator></expr>;<pos:position pos:line="18" pos:column="28"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_320_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mr_match_regexen<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">mr_regex_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">re_head<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">string<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">mr_regex_t<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">re<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">re_head<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">==<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr>)<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">FC_MATCH_MATCHES<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">)<pos:position pos:line="7" pos:column="42"/></operator></expr>;<pos:position pos:line="7" pos:column="43"/></return></block></then></if>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">re<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">re_head<pos:position pos:line="9" pos:column="26"/></name></expr>;<pos:position pos:line="9" pos:column="27"/></init> <condition><expr><name pos:line="9" pos:column="28">re<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">!=<pos:position pos:line="9" pos:column="33"/></operator> <name pos:line="9" pos:column="34">NULL<pos:position pos:line="9" pos:column="38"/></name></expr>;<pos:position pos:line="9" pos:column="39"/></condition> <incr><expr><name pos:line="9" pos:column="40">re<pos:position pos:line="9" pos:column="42"/></name> <operator pos:line="9" pos:column="43">=<pos:position pos:line="9" pos:column="44"/></operator> <name><name pos:line="9" pos:column="45">re<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">-&gt;<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="49">next<pos:position pos:line="9" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="9" pos:column="54"/></control>
	<block pos:line="10" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">status<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name pos:line="13" pos:column="17">status<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <call><name pos:line="13" pos:column="26">regexec<pos:position pos:line="13" pos:column="33"/></name> <argument_list pos:line="13" pos:column="34">(<argument><expr><operator pos:line="13" pos:column="35">&amp;<pos:position pos:line="13" pos:column="40"/></operator><name><name pos:line="13" pos:column="36">re<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">-&gt;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="40">re<pos:position pos:line="13" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">string<pos:position pos:line="13" pos:column="50"/></name></expr></argument>,
				<comment type="block" pos:line="14" pos:column="33">/* nmatch = */</comment> <argument><expr><literal type="number" pos:line="14" pos:column="48">0<pos:position pos:line="14" pos:column="49"/></literal></expr></argument>, <comment type="block" pos:line="14" pos:column="51">/* pmatch = */</comment> <argument><expr><name pos:line="14" pos:column="66">NULL<pos:position pos:line="14" pos:column="70"/></name></expr></argument>,
				<comment type="block" pos:line="15" pos:column="33">/* eflags = */</comment> <argument><expr><literal type="number" pos:line="15" pos:column="48">0<pos:position pos:line="15" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">status<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">==<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="31">0<pos:position pos:line="16" pos:column="32"/></literal></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33">
		<block pos:line="17" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">DEBUG<pos:position pos:line="18" pos:column="30"/></name> <argument_list pos:line="18" pos:column="31">(<argument><expr><literal type="string" pos:line="18" pos:column="32">"regex match: Regular expression `%s' matches `%s'."<pos:position pos:line="18" pos:column="84"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="19" pos:column="41">re<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">-&gt;<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="45">re_str<pos:position pos:line="19" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="53">string<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></then>
		<else pos:line="21" pos:column="17">else
		<block pos:line="22" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">DEBUG<pos:position pos:line="23" pos:column="30"/></name> <argument_list pos:line="23" pos:column="31">(<argument><expr><literal type="string" pos:line="23" pos:column="32">"regex match: Regular expression `%s' does not match `%s'."<pos:position pos:line="23" pos:column="91"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="24" pos:column="41">re<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">-&gt;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="45">re_str<pos:position pos:line="24" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">string<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>
			<return pos:line="25" pos:column="25">return <expr><operator pos:line="25" pos:column="32">(<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="33">FC_MATCH_NO_MATCH<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">)<pos:position pos:line="25" pos:column="51"/></operator></expr>;<pos:position pos:line="25" pos:column="52"/></return>
		}<pos:position pos:line="26" pos:column="18"/></block></else></if>

	}<pos:position pos:line="28" pos:column="10"/></block></for>

	<return pos:line="30" pos:column="9">return <expr><operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">FC_MATCH_MATCHES<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">)<pos:position pos:line="30" pos:column="34"/></operator></expr>;<pos:position pos:line="30" pos:column="35"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

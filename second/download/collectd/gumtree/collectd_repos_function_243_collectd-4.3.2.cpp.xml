<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_243_collectd-4.3.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">interface_config<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">key<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">value<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">temp<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">strcasecmp<pos:position pos:line="5" pos:column="23"/></name> <argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">key<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="30">"Interface"<pos:position pos:line="5" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call> <operator pos:line="5" pos:column="43">==<pos:position pos:line="5" pos:column="45"/></operator> <literal type="number" pos:line="5" pos:column="46">0<pos:position pos:line="5" pos:column="47"/></literal></expr>)<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48">
	<block pos:line="6" pos:column="9">{
		<expr_stmt><expr><name pos:line="7" pos:column="17">temp<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">=<pos:position pos:line="7" pos:column="23"/></operator> <operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">char<pos:position pos:line="7" pos:column="29"/></name> <operator pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></operator><operator pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></operator><operator pos:line="7" pos:column="32">)<pos:position pos:line="7" pos:column="33"/></operator> <call><name pos:line="7" pos:column="34">realloc<pos:position pos:line="7" pos:column="41"/></name> <argument_list pos:line="7" pos:column="42">(<argument><expr><name pos:line="7" pos:column="43">if_list<pos:position pos:line="7" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="52">(<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="53">if_list_num<pos:position pos:line="7" pos:column="64"/></name> <operator pos:line="7" pos:column="65">+<pos:position pos:line="7" pos:column="66"/></operator> <literal type="number" pos:line="7" pos:column="67">1<pos:position pos:line="7" pos:column="68"/></literal><operator pos:line="7" pos:column="68">)<pos:position pos:line="7" pos:column="69"/></operator> <operator pos:line="7" pos:column="70">*<pos:position pos:line="7" pos:column="71"/></operator> <sizeof pos:line="7" pos:column="72">sizeof <argument_list pos:line="7" pos:column="79">(<argument><expr><name pos:line="7" pos:column="80">char<pos:position pos:line="7" pos:column="84"/></name> <operator pos:line="7" pos:column="85">*<pos:position pos:line="7" pos:column="86"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="87"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="89"/></expr_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">temp<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">==<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="29">NULL<pos:position pos:line="8" pos:column="33"/></name></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34">
		<block pos:line="9" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="10" pos:column="25">ERROR<pos:position pos:line="10" pos:column="30"/></name> <argument_list pos:line="10" pos:column="31">(<argument><expr><literal type="string" pos:line="10" pos:column="32">"Cannot allocate more memory."<pos:position pos:line="10" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt>
			<return pos:line="11" pos:column="25">return <expr><operator pos:line="11" pos:column="32">(<pos:position pos:line="11" pos:column="33"/></operator><literal type="number" pos:line="11" pos:column="33">1<pos:position pos:line="11" pos:column="34"/></literal><operator pos:line="11" pos:column="34">)<pos:position pos:line="11" pos:column="35"/></operator></expr>;<pos:position pos:line="11" pos:column="36"/></return>
		}<pos:position pos:line="12" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="13" pos:column="17">if_list<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">temp<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">(<pos:position pos:line="15" pos:column="22"/></operator><name><name pos:line="15" pos:column="22">if_list<pos:position pos:line="15" pos:column="29"/></name><index pos:line="15" pos:column="29">[<expr><name pos:line="15" pos:column="30">if_list_num<pos:position pos:line="15" pos:column="41"/></name></expr>]<pos:position pos:line="15" pos:column="42"/></index></name> <operator pos:line="15" pos:column="43">=<pos:position pos:line="15" pos:column="44"/></operator> <call><name pos:line="15" pos:column="45">strdup<pos:position pos:line="15" pos:column="51"/></name> <argument_list pos:line="15" pos:column="52">(<argument><expr><name pos:line="15" pos:column="53">value<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call><operator pos:line="15" pos:column="59">)<pos:position pos:line="15" pos:column="60"/></operator> <operator pos:line="15" pos:column="61">==<pos:position pos:line="15" pos:column="63"/></operator> <name pos:line="15" pos:column="64">NULL<pos:position pos:line="15" pos:column="68"/></name></expr>)<pos:position pos:line="15" pos:column="69"/></condition><then pos:line="15" pos:column="69">
		<block pos:line="16" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">ERROR<pos:position pos:line="17" pos:column="30"/></name> <argument_list pos:line="17" pos:column="31">(<argument><expr><literal type="string" pos:line="17" pos:column="32">"Cannot allocate memory."<pos:position pos:line="17" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt>
			<return pos:line="18" pos:column="25">return <expr><operator pos:line="18" pos:column="32">(<pos:position pos:line="18" pos:column="33"/></operator><literal type="number" pos:line="18" pos:column="33">1<pos:position pos:line="18" pos:column="34"/></literal><operator pos:line="18" pos:column="34">)<pos:position pos:line="18" pos:column="35"/></operator></expr>;<pos:position pos:line="18" pos:column="36"/></return>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="20" pos:column="17">if_list_num<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">++<pos:position pos:line="20" pos:column="30"/></operator></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then>
	<elseif pos:line="22" pos:column="9">else <if pos:line="22" pos:column="14">if <condition pos:line="22" pos:column="17">(<expr><call><name pos:line="22" pos:column="18">strcasecmp<pos:position pos:line="22" pos:column="28"/></name> <argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">key<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="35">"IgnoreSelected"<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call> <operator pos:line="22" pos:column="53">==<pos:position pos:line="22" pos:column="55"/></operator> <literal type="number" pos:line="22" pos:column="56">0<pos:position pos:line="22" pos:column="57"/></literal></expr>)<pos:position pos:line="22" pos:column="58"/></condition><then pos:line="22" pos:column="58">
	<block pos:line="23" pos:column="9">{
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">(<pos:position pos:line="24" pos:column="22"/></operator><call><name pos:line="24" pos:column="22">strcasecmp<pos:position pos:line="24" pos:column="32"/></name> <argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">value<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="41">"True"<pos:position pos:line="24" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call> <operator pos:line="24" pos:column="49">==<pos:position pos:line="24" pos:column="51"/></operator> <literal type="number" pos:line="24" pos:column="52">0<pos:position pos:line="24" pos:column="53"/></literal><operator pos:line="24" pos:column="53">)<pos:position pos:line="24" pos:column="54"/></operator>
				<operator pos:line="25" pos:column="33">||<pos:position pos:line="25" pos:column="35"/></operator> <operator pos:line="25" pos:column="36">(<pos:position pos:line="25" pos:column="37"/></operator><call><name pos:line="25" pos:column="37">strcasecmp<pos:position pos:line="25" pos:column="47"/></name> <argument_list pos:line="25" pos:column="48">(<argument><expr><name pos:line="25" pos:column="49">value<pos:position pos:line="25" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="56">"Yes"<pos:position pos:line="25" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call> <operator pos:line="25" pos:column="63">==<pos:position pos:line="25" pos:column="65"/></operator> <literal type="number" pos:line="25" pos:column="66">0<pos:position pos:line="25" pos:column="67"/></literal><operator pos:line="25" pos:column="67">)<pos:position pos:line="25" pos:column="68"/></operator>
				<operator pos:line="26" pos:column="33">||<pos:position pos:line="26" pos:column="35"/></operator> <operator pos:line="26" pos:column="36">(<pos:position pos:line="26" pos:column="37"/></operator><call><name pos:line="26" pos:column="37">strcasecmp<pos:position pos:line="26" pos:column="47"/></name> <argument_list pos:line="26" pos:column="48">(<argument><expr><name pos:line="26" pos:column="49">value<pos:position pos:line="26" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="56">"On"<pos:position pos:line="26" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call> <operator pos:line="26" pos:column="62">==<pos:position pos:line="26" pos:column="64"/></operator> <literal type="number" pos:line="26" pos:column="65">0<pos:position pos:line="26" pos:column="66"/></literal><operator pos:line="26" pos:column="66">)<pos:position pos:line="26" pos:column="67"/></operator></expr>)<pos:position pos:line="26" pos:column="68"/></condition><then pos:line="26" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="25">if_list_action<pos:position pos:line="27" pos:column="39"/></name> <operator pos:line="27" pos:column="40">=<pos:position pos:line="27" pos:column="41"/></operator> <literal type="number" pos:line="27" pos:column="42">1<pos:position pos:line="27" pos:column="43"/></literal></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt></block></then>
		<else pos:line="28" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="25">if_list_action<pos:position pos:line="29" pos:column="39"/></name> <operator pos:line="29" pos:column="40">=<pos:position pos:line="29" pos:column="41"/></operator> <literal type="number" pos:line="29" pos:column="42">0<pos:position pos:line="29" pos:column="43"/></literal></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt></block></else></if>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if></elseif>
	<else pos:line="31" pos:column="9">else
	<block pos:line="32" pos:column="9">{
		<return pos:line="33" pos:column="17">return <expr><operator pos:line="33" pos:column="24">(<pos:position pos:line="33" pos:column="25"/></operator><operator pos:line="33" pos:column="25">-<pos:position pos:line="33" pos:column="26"/></operator><literal type="number" pos:line="33" pos:column="26">1<pos:position pos:line="33" pos:column="27"/></literal><operator pos:line="33" pos:column="27">)<pos:position pos:line="33" pos:column="28"/></operator></expr>;<pos:position pos:line="33" pos:column="29"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></else></if>

	<return pos:line="36" pos:column="9">return <expr><operator pos:line="36" pos:column="16">(<pos:position pos:line="36" pos:column="17"/></operator><literal type="number" pos:line="36" pos:column="17">0<pos:position pos:line="36" pos:column="18"/></literal><operator pos:line="36" pos:column="18">)<pos:position pos:line="36" pos:column="19"/></operator></expr>;<pos:position pos:line="36" pos:column="20"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

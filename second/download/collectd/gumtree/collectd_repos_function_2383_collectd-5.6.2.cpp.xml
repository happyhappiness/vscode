<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2383_collectd-5.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">strstripnewline<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">buffer<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list> <block pos:line="1" pos:column="38">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">size_t<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">buffer_len<pos:position pos:line="2" pos:column="20"/></name> <init pos:line="2" pos:column="21">= <expr><call><name pos:line="2" pos:column="23">strlen<pos:position pos:line="2" pos:column="29"/></name><argument_list pos:line="2" pos:column="29">(<argument><expr><name pos:line="2" pos:column="30">buffer<pos:position pos:line="2" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="38"/></decl_stmt>

  <while pos:line="4" pos:column="3">while <condition pos:line="4" pos:column="9">(<expr><name pos:line="4" pos:column="10">buffer_len<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">&gt;<pos:position pos:line="4" pos:column="25"/></operator> <literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr>)<pos:position pos:line="4" pos:column="25"/></condition> <block pos:line="4" pos:column="26">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><name><name pos:line="5" pos:column="10">buffer<pos:position pos:line="5" pos:column="16"/></name><index pos:line="5" pos:column="16">[<expr><name pos:line="5" pos:column="17">buffer_len<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">-<pos:position pos:line="5" pos:column="29"/></operator> <literal type="number" pos:line="5" pos:column="30">1<pos:position pos:line="5" pos:column="31"/></literal></expr>]<pos:position pos:line="5" pos:column="32"/></index></name> <operator pos:line="5" pos:column="33">!=<pos:position pos:line="5" pos:column="35"/></operator> <literal type="char" pos:line="5" pos:column="36">'\n'<pos:position pos:line="5" pos:column="40"/></literal><operator pos:line="5" pos:column="40">)<pos:position pos:line="5" pos:column="41"/></operator> <operator pos:line="5" pos:column="42">&amp;&amp;<pos:position pos:line="5" pos:column="52"/></operator> <operator pos:line="5" pos:column="45">(<pos:position pos:line="5" pos:column="46"/></operator><name><name pos:line="5" pos:column="46">buffer<pos:position pos:line="5" pos:column="52"/></name><index pos:line="5" pos:column="52">[<expr><name pos:line="5" pos:column="53">buffer_len<pos:position pos:line="5" pos:column="63"/></name> <operator pos:line="5" pos:column="64">-<pos:position pos:line="5" pos:column="65"/></operator> <literal type="number" pos:line="5" pos:column="66">1<pos:position pos:line="5" pos:column="67"/></literal></expr>]<pos:position pos:line="5" pos:column="68"/></index></name> <operator pos:line="5" pos:column="69">!=<pos:position pos:line="5" pos:column="71"/></operator> <literal type="char" pos:line="5" pos:column="72">'\r'<pos:position pos:line="5" pos:column="76"/></literal><operator pos:line="5" pos:column="76">)<pos:position pos:line="5" pos:column="77"/></operator></expr>)<pos:position pos:line="5" pos:column="78"/></condition><then pos:line="5" pos:column="78">
      <block type="pseudo"><break pos:line="6" pos:column="7">break;<pos:position pos:line="6" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="7" pos:column="5">buffer_len<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">--<pos:position pos:line="7" pos:column="17"/></operator></expr>;<pos:position pos:line="7" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">buffer<pos:position pos:line="8" pos:column="11"/></name><index pos:line="8" pos:column="11">[<expr><name pos:line="8" pos:column="12">buffer_len<pos:position pos:line="8" pos:column="22"/></name></expr>]<pos:position pos:line="8" pos:column="23"/></index></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></while>

  <return pos:line="11" pos:column="3">return <expr><operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">buffer_len<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">)<pos:position pos:line="11" pos:column="22"/></operator></expr>;<pos:position pos:line="11" pos:column="23"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_308_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">aggregate<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">gauge_t<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">sum_by_state<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <comment type="block" pos:line="1" pos:column="46">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <for pos:line="3" pos:column="3">for <control pos:line="3" pos:column="7">(<init><decl><type><name pos:line="3" pos:column="8">size_t<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">state<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><literal type="number" pos:line="3" pos:column="23">0<pos:position pos:line="3" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></init> <condition><expr><name pos:line="3" pos:column="26">state<pos:position pos:line="3" pos:column="31"/></name> <operator pos:line="3" pos:column="32">&lt;<pos:position pos:line="3" pos:column="36"/></operator> <name pos:line="3" pos:column="34">COLLECTD_CPU_STATE_MAX<pos:position pos:line="3" pos:column="56"/></name></expr>;<pos:position pos:line="3" pos:column="57"/></condition> <incr><expr><name pos:line="3" pos:column="58">state<pos:position pos:line="3" pos:column="63"/></name><operator pos:line="3" pos:column="63">++<pos:position pos:line="3" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="3" pos:column="66"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="4" pos:column="5">sum_by_state<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><name pos:line="4" pos:column="18">state<pos:position pos:line="4" pos:column="23"/></name></expr>]<pos:position pos:line="4" pos:column="24"/></index></name> <operator pos:line="4" pos:column="25">=<pos:position pos:line="4" pos:column="26"/></operator> <name pos:line="4" pos:column="27">NAN<pos:position pos:line="4" pos:column="30"/></name></expr>;<pos:position pos:line="4" pos:column="31"/></expr_stmt></block></for>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><decl><type><name pos:line="6" pos:column="8">size_t<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">cpu_num<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></init> <condition><expr><name pos:line="6" pos:column="28">cpu_num<pos:position pos:line="6" pos:column="35"/></name> <operator pos:line="6" pos:column="36">&lt;<pos:position pos:line="6" pos:column="40"/></operator> <name pos:line="6" pos:column="38">global_cpu_num<pos:position pos:line="6" pos:column="52"/></name></expr>;<pos:position pos:line="6" pos:column="53"/></condition> <incr><expr><name pos:line="6" pos:column="54">cpu_num<pos:position pos:line="6" pos:column="61"/></name><operator pos:line="6" pos:column="61">++<pos:position pos:line="6" pos:column="63"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="64"/></control> <block pos:line="6" pos:column="65">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">cpu_state_t<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">this_cpu_states<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><call><name pos:line="7" pos:column="36">get_cpu_state<pos:position pos:line="7" pos:column="49"/></name><argument_list pos:line="7" pos:column="49">(<argument><expr><name pos:line="7" pos:column="50">cpu_num<pos:position pos:line="7" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="59">0<pos:position pos:line="7" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="62"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">this_cpu_states<pos:position pos:line="9" pos:column="20"/></name><index pos:line="9" pos:column="20">[<expr><name pos:line="9" pos:column="21">COLLECTD_CPU_STATE_ACTIVE<pos:position pos:line="9" pos:column="46"/></name></expr>]<pos:position pos:line="9" pos:column="47"/></index></name><operator pos:line="9" pos:column="47">.<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="48">rate<pos:position pos:line="9" pos:column="52"/></name> <operator pos:line="9" pos:column="53">=<pos:position pos:line="9" pos:column="54"/></operator> <name pos:line="9" pos:column="55">NAN<pos:position pos:line="9" pos:column="58"/></name></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt>

    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><decl><type><name pos:line="11" pos:column="10">size_t<pos:position pos:line="11" pos:column="16"/></name></type> <name pos:line="11" pos:column="17">state<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><literal type="number" pos:line="11" pos:column="25">0<pos:position pos:line="11" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="27"/></init> <condition><expr><name pos:line="11" pos:column="28">state<pos:position pos:line="11" pos:column="33"/></name> <operator pos:line="11" pos:column="34">&lt;<pos:position pos:line="11" pos:column="38"/></operator> <name pos:line="11" pos:column="36">COLLECTD_CPU_STATE_ACTIVE<pos:position pos:line="11" pos:column="61"/></name></expr>;<pos:position pos:line="11" pos:column="62"/></condition> <incr><expr><name pos:line="11" pos:column="63">state<pos:position pos:line="11" pos:column="68"/></name><operator pos:line="11" pos:column="68">++<pos:position pos:line="11" pos:column="70"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="71"/></control> <block pos:line="11" pos:column="72">{
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><operator pos:line="12" pos:column="11">!<pos:position pos:line="12" pos:column="12"/></operator><name><name pos:line="12" pos:column="12">this_cpu_states<pos:position pos:line="12" pos:column="27"/></name><index pos:line="12" pos:column="27">[<expr><name pos:line="12" pos:column="28">state<pos:position pos:line="12" pos:column="33"/></name></expr>]<pos:position pos:line="12" pos:column="34"/></index></name><operator pos:line="12" pos:column="34">.<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">has_value<pos:position pos:line="12" pos:column="44"/></name></expr>)<pos:position pos:line="12" pos:column="45"/></condition><then pos:line="12" pos:column="45">
        <block type="pseudo"><continue pos:line="13" pos:column="9">continue;<pos:position pos:line="13" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><call><name pos:line="15" pos:column="7">RATE_ADD<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name><name pos:line="15" pos:column="16">sum_by_state<pos:position pos:line="15" pos:column="28"/></name><index pos:line="15" pos:column="28">[<expr><name pos:line="15" pos:column="29">state<pos:position pos:line="15" pos:column="34"/></name></expr>]<pos:position pos:line="15" pos:column="35"/></index></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="37">this_cpu_states<pos:position pos:line="15" pos:column="52"/></name><index pos:line="15" pos:column="52">[<expr><name pos:line="15" pos:column="53">state<pos:position pos:line="15" pos:column="58"/></name></expr>]<pos:position pos:line="15" pos:column="59"/></index></name><operator pos:line="15" pos:column="59">.<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="60">rate<pos:position pos:line="15" pos:column="64"/></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>
      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><name pos:line="16" pos:column="11">state<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">!=<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">COLLECTD_CPU_STATE_IDLE<pos:position pos:line="16" pos:column="43"/></name></expr>)<pos:position pos:line="16" pos:column="44"/></condition><then pos:line="16" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="9">RATE_ADD<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><name><name pos:line="17" pos:column="18">this_cpu_states<pos:position pos:line="17" pos:column="33"/></name><index pos:line="17" pos:column="33">[<expr><name pos:line="17" pos:column="34">COLLECTD_CPU_STATE_ACTIVE<pos:position pos:line="17" pos:column="59"/></name></expr>]<pos:position pos:line="17" pos:column="60"/></index></name><operator pos:line="17" pos:column="60">.<pos:position pos:line="17" pos:column="61"/></operator><name pos:line="17" pos:column="61">rate<pos:position pos:line="17" pos:column="65"/></name></expr></argument>,
                 <argument><expr><name><name pos:line="18" pos:column="18">this_cpu_states<pos:position pos:line="18" pos:column="33"/></name><index pos:line="18" pos:column="33">[<expr><name pos:line="18" pos:column="34">state<pos:position pos:line="18" pos:column="39"/></name></expr>]<pos:position pos:line="18" pos:column="40"/></index></name><operator pos:line="18" pos:column="40">.<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="41">rate<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt></block></then></if>
    }<pos:position pos:line="19" pos:column="6"/></block></for>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><call><name pos:line="21" pos:column="10">isnan<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name><name pos:line="21" pos:column="16">this_cpu_states<pos:position pos:line="21" pos:column="31"/></name><index pos:line="21" pos:column="31">[<expr><name pos:line="21" pos:column="32">COLLECTD_CPU_STATE_ACTIVE<pos:position pos:line="21" pos:column="57"/></name></expr>]<pos:position pos:line="21" pos:column="58"/></index></name><operator pos:line="21" pos:column="58">.<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="59">rate<pos:position pos:line="21" pos:column="63"/></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="65"/></condition><then pos:line="21" pos:column="65">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="7">this_cpu_states<pos:position pos:line="22" pos:column="22"/></name><index pos:line="22" pos:column="22">[<expr><name pos:line="22" pos:column="23">COLLECTD_CPU_STATE_ACTIVE<pos:position pos:line="22" pos:column="48"/></name></expr>]<pos:position pos:line="22" pos:column="49"/></index></name><operator pos:line="22" pos:column="49">.<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="50">has_value<pos:position pos:line="22" pos:column="59"/></name> <operator pos:line="22" pos:column="60">=<pos:position pos:line="22" pos:column="61"/></operator> <literal type="number" pos:line="22" pos:column="62">1<pos:position pos:line="22" pos:column="63"/></literal></expr>;<pos:position pos:line="22" pos:column="64"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">RATE_ADD<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name><name pos:line="24" pos:column="14">sum_by_state<pos:position pos:line="24" pos:column="26"/></name><index pos:line="24" pos:column="26">[<expr><name pos:line="24" pos:column="27">COLLECTD_CPU_STATE_ACTIVE<pos:position pos:line="24" pos:column="52"/></name></expr>]<pos:position pos:line="24" pos:column="53"/></index></name></expr></argument>,
             <argument><expr><name><name pos:line="25" pos:column="14">this_cpu_states<pos:position pos:line="25" pos:column="29"/></name><index pos:line="25" pos:column="29">[<expr><name pos:line="25" pos:column="30">COLLECTD_CPU_STATE_ACTIVE<pos:position pos:line="25" pos:column="55"/></name></expr>]<pos:position pos:line="25" pos:column="56"/></index></name><operator pos:line="25" pos:column="56">.<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="57">rate<pos:position pos:line="25" pos:column="61"/></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></for>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_323_collectd-4.2.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">read_line<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">conn_t<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">src<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><literal type="number" pos:line="3" pos:column="17">0<pos:position pos:line="3" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">assert<pos:position pos:line="5" pos:column="15"/></name> <argument_list pos:line="5" pos:column="16">(<argument><expr><operator pos:line="5" pos:column="17">(<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">BUFSIZE<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">&gt;=<pos:position pos:line="5" pos:column="31"/></operator> <name><name pos:line="5" pos:column="29">src<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">idx<pos:position pos:line="5" pos:column="37"/></name></name><operator pos:line="5" pos:column="37">)<pos:position pos:line="5" pos:column="38"/></operator> <operator pos:line="5" pos:column="39">&amp;&amp;<pos:position pos:line="5" pos:column="49"/></operator> <operator pos:line="5" pos:column="42">(<pos:position pos:line="5" pos:column="43"/></operator><name><name pos:line="5" pos:column="43">src<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">-&gt;<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="48">idx<pos:position pos:line="5" pos:column="51"/></name></name> <operator pos:line="5" pos:column="52">&gt;=<pos:position pos:line="5" pos:column="57"/></operator> <literal type="number" pos:line="5" pos:column="55">0<pos:position pos:line="5" pos:column="56"/></literal><operator pos:line="5" pos:column="56">)<pos:position pos:line="5" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">assert<pos:position pos:line="6" pos:column="15"/></name> <argument_list pos:line="6" pos:column="16">(<argument><expr><operator pos:line="6" pos:column="17">(<pos:position pos:line="6" pos:column="18"/></operator><name><name pos:line="6" pos:column="18">src<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">idx<pos:position pos:line="6" pos:column="26"/></name></name> <operator pos:line="6" pos:column="27">&gt;<pos:position pos:line="6" pos:column="31"/></operator> <name><name pos:line="6" pos:column="29">src<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">length<pos:position pos:line="6" pos:column="40"/></name></name><operator pos:line="6" pos:column="40">)<pos:position pos:line="6" pos:column="41"/></operator> <operator pos:line="6" pos:column="42">||<pos:position pos:line="6" pos:column="44"/></operator> <operator pos:line="6" pos:column="45">(<pos:position pos:line="6" pos:column="46"/></operator><name><name pos:line="6" pos:column="46">src<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">-&gt;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="51">length<pos:position pos:line="6" pos:column="57"/></name></name> <operator pos:line="6" pos:column="58">==<pos:position pos:line="6" pos:column="60"/></operator> <literal type="number" pos:line="6" pos:column="61">0<pos:position pos:line="6" pos:column="62"/></literal><operator pos:line="6" pos:column="62">)<pos:position pos:line="6" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="65"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">src<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">length<pos:position pos:line="8" pos:column="24"/></name></name> <operator pos:line="8" pos:column="25">&gt;<pos:position pos:line="8" pos:column="29"/></operator> <literal type="number" pos:line="8" pos:column="27">0<pos:position pos:line="8" pos:column="28"/></literal></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <block pos:line="8" pos:column="30">{ <comment type="block" pos:line="8" pos:column="32">/* remove old line */</comment>
		<expr_stmt><expr><name><name pos:line="9" pos:column="17">src<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">idx<pos:position pos:line="9" pos:column="25"/></name></name> <operator pos:line="9" pos:column="26">-=<pos:position pos:line="9" pos:column="28"/></operator> <operator pos:line="9" pos:column="29">(<pos:position pos:line="9" pos:column="30"/></operator><name><name pos:line="9" pos:column="30">src<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">length<pos:position pos:line="9" pos:column="41"/></name></name> <operator pos:line="9" pos:column="42">+<pos:position pos:line="9" pos:column="43"/></operator> <literal type="number" pos:line="9" pos:column="44">1<pos:position pos:line="9" pos:column="45"/></literal><operator pos:line="9" pos:column="45">)<pos:position pos:line="9" pos:column="46"/></operator></expr>;<pos:position pos:line="9" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">memmove<pos:position pos:line="10" pos:column="24"/></name> <argument_list pos:line="10" pos:column="25">(<argument><expr><name><name pos:line="10" pos:column="26">src<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">buffer<pos:position pos:line="10" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="39">src<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">buffer<pos:position pos:line="10" pos:column="50"/></name></name> <operator pos:line="10" pos:column="51">+<pos:position pos:line="10" pos:column="52"/></operator> <name><name pos:line="10" pos:column="53">src<pos:position pos:line="10" pos:column="56"/></name><operator pos:line="10" pos:column="56">-&gt;<pos:position pos:line="10" pos:column="61"/></operator><name pos:line="10" pos:column="58">length<pos:position pos:line="10" pos:column="64"/></name></name> <operator pos:line="10" pos:column="65">+<pos:position pos:line="10" pos:column="66"/></operator> <literal type="number" pos:line="10" pos:column="67">1<pos:position pos:line="10" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="70">src<pos:position pos:line="10" pos:column="73"/></name><operator pos:line="10" pos:column="73">-&gt;<pos:position pos:line="10" pos:column="78"/></operator><name pos:line="10" pos:column="75">idx<pos:position pos:line="10" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="11" pos:column="17">src<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">length<pos:position pos:line="11" pos:column="28"/></name></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">i<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>;<pos:position pos:line="14" pos:column="20"/></init> <condition><expr><name pos:line="14" pos:column="21">i<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&lt;<pos:position pos:line="14" pos:column="27"/></operator> <name><name pos:line="14" pos:column="25">src<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">idx<pos:position pos:line="14" pos:column="33"/></name></name></expr>;<pos:position pos:line="14" pos:column="34"/></condition> <incr><expr><operator pos:line="14" pos:column="35">++<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">i<pos:position pos:line="14" pos:column="38"/></name></expr></incr>)<pos:position pos:line="14" pos:column="39"/></control> <block pos:line="14" pos:column="40">{
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><literal type="char" pos:line="15" pos:column="21">'\n'<pos:position pos:line="15" pos:column="25"/></literal> <operator pos:line="15" pos:column="26">==<pos:position pos:line="15" pos:column="28"/></operator> <name><name pos:line="15" pos:column="29">src<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">buffer<pos:position pos:line="15" pos:column="40"/></name><index pos:line="15" pos:column="40">[<expr><name pos:line="15" pos:column="41">i<pos:position pos:line="15" pos:column="42"/></name></expr>]<pos:position pos:line="15" pos:column="43"/></index></name></expr>)<pos:position pos:line="15" pos:column="44"/></condition><then pos:line="15" pos:column="44">
			<block type="pseudo"><break pos:line="16" pos:column="25">break;<pos:position pos:line="16" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="17" pos:column="10"/></block></for>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">i<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">==<pos:position pos:line="19" pos:column="17"/></operator> <name><name pos:line="19" pos:column="18">src<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">idx<pos:position pos:line="19" pos:column="26"/></name></name></expr>)<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27"> <block pos:line="19" pos:column="28">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">fd_set<pos:position pos:line="20" pos:column="23"/></name></type> <name pos:line="20" pos:column="24">fdset<pos:position pos:line="20" pos:column="29"/></name></decl>;<pos:position pos:line="20" pos:column="30"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="22" pos:column="17">ssize_t<pos:position pos:line="22" pos:column="24"/></name></type> <name pos:line="22" pos:column="25">len<pos:position pos:line="22" pos:column="28"/></name> <init pos:line="22" pos:column="29">= <expr><literal type="number" pos:line="22" pos:column="31">0<pos:position pos:line="22" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="33"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="24" pos:column="17">FD_ZERO<pos:position pos:line="24" pos:column="24"/></name> <argument_list pos:line="24" pos:column="25">(<argument><expr><operator pos:line="24" pos:column="26">&amp;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="27">fdset<pos:position pos:line="24" pos:column="32"/></name></expr></argument>)<pos:position pos:line="24" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">FD_SET<pos:position pos:line="25" pos:column="23"/></name> <argument_list pos:line="25" pos:column="24">(<argument><expr><name><name pos:line="25" pos:column="25">src<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">socket<pos:position pos:line="25" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="38">&amp;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="39">fdset<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>

		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">-<pos:position pos:line="27" pos:column="22"/></operator><literal type="number" pos:line="27" pos:column="22">1<pos:position pos:line="27" pos:column="23"/></literal> <operator pos:line="27" pos:column="24">==<pos:position pos:line="27" pos:column="26"/></operator> <call><name pos:line="27" pos:column="27">select<pos:position pos:line="27" pos:column="33"/></name> <argument_list pos:line="27" pos:column="34">(<argument><expr><name><name pos:line="27" pos:column="35">src<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">-&gt;<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="40">socket<pos:position pos:line="27" pos:column="46"/></name></name> <operator pos:line="27" pos:column="47">+<pos:position pos:line="27" pos:column="48"/></operator> <literal type="number" pos:line="27" pos:column="49">1<pos:position pos:line="27" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="52">&amp;<pos:position pos:line="27" pos:column="57"/></operator><name pos:line="27" pos:column="53">fdset<pos:position pos:line="27" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="60">NULL<pos:position pos:line="27" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="66">NULL<pos:position pos:line="27" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="72">NULL<pos:position pos:line="27" pos:column="76"/></name></expr></argument>)<pos:position pos:line="27" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="78"/></condition><then pos:line="27" pos:column="78"> <block pos:line="27" pos:column="79">{
			<decl_stmt><decl><type><name pos:line="28" pos:column="25">char<pos:position pos:line="28" pos:column="29"/></name></type> <name><name pos:line="28" pos:column="30">errbuf<pos:position pos:line="28" pos:column="36"/></name><index pos:line="28" pos:column="36">[<expr><literal type="number" pos:line="28" pos:column="37">1024<pos:position pos:line="28" pos:column="41"/></literal></expr>]<pos:position pos:line="28" pos:column="42"/></index></name></decl>;<pos:position pos:line="28" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">log_err<pos:position pos:line="29" pos:column="32"/></name> <argument_list pos:line="29" pos:column="33">(<argument><expr><literal type="string" pos:line="29" pos:column="34">"select() failed: %s"<pos:position pos:line="29" pos:column="55"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="30" pos:column="41">sstrerror<pos:position pos:line="30" pos:column="50"/></name> <argument_list pos:line="30" pos:column="51">(<argument><expr><name pos:line="30" pos:column="52">errno<pos:position pos:line="30" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="59">errbuf<pos:position pos:line="30" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="67">sizeof <argument_list pos:line="30" pos:column="74">(<argument><expr><name pos:line="30" pos:column="75">errbuf<pos:position pos:line="30" pos:column="81"/></name></expr></argument>)<pos:position pos:line="30" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="85"/></expr_stmt>
			<return pos:line="31" pos:column="25">return <expr><name pos:line="31" pos:column="32">NULL<pos:position pos:line="31" pos:column="36"/></name></expr>;<pos:position pos:line="31" pos:column="37"/></return>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="34" pos:column="17">assert<pos:position pos:line="34" pos:column="23"/></name> <argument_list pos:line="34" pos:column="24">(<argument><expr><call><name pos:line="34" pos:column="25">FD_ISSET<pos:position pos:line="34" pos:column="33"/></name> <argument_list pos:line="34" pos:column="34">(<argument><expr><name><name pos:line="34" pos:column="35">src<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">-&gt;<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="40">socket<pos:position pos:line="34" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="48">&amp;<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="49">fdset<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>

		<do pos:line="36" pos:column="17">do <block pos:line="36" pos:column="20">{
			<expr_stmt><expr><name pos:line="37" pos:column="25">errno<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">=<pos:position pos:line="37" pos:column="32"/></operator> <literal type="number" pos:line="37" pos:column="33">0<pos:position pos:line="37" pos:column="34"/></literal></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>
			<if pos:line="38" pos:column="25">if <condition pos:line="38" pos:column="28">(<expr><literal type="number" pos:line="38" pos:column="29">0<pos:position pos:line="38" pos:column="30"/></literal> <operator pos:line="38" pos:column="31">&gt;<pos:position pos:line="38" pos:column="35"/></operator> <operator pos:line="38" pos:column="33">(<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="34">len<pos:position pos:line="38" pos:column="37"/></name> <operator pos:line="38" pos:column="38">=<pos:position pos:line="38" pos:column="39"/></operator> <call><name pos:line="38" pos:column="40">read<pos:position pos:line="38" pos:column="44"/></name> <argument_list pos:line="38" pos:column="45">(<argument><expr><name><name pos:line="38" pos:column="46">src<pos:position pos:line="38" pos:column="49"/></name><operator pos:line="38" pos:column="49">-&gt;<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="51">socket<pos:position pos:line="38" pos:column="57"/></name></name></expr></argument>,
							<argument><expr><operator pos:line="39" pos:column="57">(<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="58">void<pos:position pos:line="39" pos:column="62"/></name> <operator pos:line="39" pos:column="63">*<pos:position pos:line="39" pos:column="64"/></operator><operator pos:line="39" pos:column="64">)<pos:position pos:line="39" pos:column="65"/></operator><operator pos:line="39" pos:column="65">(<pos:position pos:line="39" pos:column="66"/></operator><name><name pos:line="39" pos:column="66">src<pos:position pos:line="39" pos:column="69"/></name><operator pos:line="39" pos:column="69">-&gt;<pos:position pos:line="39" pos:column="74"/></operator><name pos:line="39" pos:column="71">buffer<pos:position pos:line="39" pos:column="77"/></name></name> <operator pos:line="39" pos:column="78">+<pos:position pos:line="39" pos:column="79"/></operator> <name><name pos:line="39" pos:column="80">src<pos:position pos:line="39" pos:column="83"/></name><operator pos:line="39" pos:column="83">-&gt;<pos:position pos:line="39" pos:column="88"/></operator><name pos:line="39" pos:column="85">idx<pos:position pos:line="39" pos:column="88"/></name></name><operator pos:line="39" pos:column="88">)<pos:position pos:line="39" pos:column="89"/></operator></expr></argument>,
							<argument><expr><name pos:line="40" pos:column="57">BUFSIZE<pos:position pos:line="40" pos:column="64"/></name> <operator pos:line="40" pos:column="65">-<pos:position pos:line="40" pos:column="66"/></operator> <name><name pos:line="40" pos:column="67">src<pos:position pos:line="40" pos:column="70"/></name><operator pos:line="40" pos:column="70">-&gt;<pos:position pos:line="40" pos:column="75"/></operator><name pos:line="40" pos:column="72">idx<pos:position pos:line="40" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="76"/></argument_list></call><operator pos:line="40" pos:column="76">)<pos:position pos:line="40" pos:column="77"/></operator></expr>)<pos:position pos:line="40" pos:column="78"/></condition><then pos:line="40" pos:column="78"> <block pos:line="40" pos:column="79">{
				<if pos:line="41" pos:column="33">if <condition pos:line="41" pos:column="36">(<expr><name pos:line="41" pos:column="37">EINTR<pos:position pos:line="41" pos:column="42"/></name> <operator pos:line="41" pos:column="43">!=<pos:position pos:line="41" pos:column="45"/></operator> <name pos:line="41" pos:column="46">errno<pos:position pos:line="41" pos:column="51"/></name></expr>)<pos:position pos:line="41" pos:column="52"/></condition><then pos:line="41" pos:column="52"> <block pos:line="41" pos:column="53">{
					<decl_stmt><decl><type><name pos:line="42" pos:column="41">char<pos:position pos:line="42" pos:column="45"/></name></type> <name><name pos:line="42" pos:column="46">errbuf<pos:position pos:line="42" pos:column="52"/></name><index pos:line="42" pos:column="52">[<expr><literal type="number" pos:line="42" pos:column="53">1024<pos:position pos:line="42" pos:column="57"/></literal></expr>]<pos:position pos:line="42" pos:column="58"/></index></name></decl>;<pos:position pos:line="42" pos:column="59"/></decl_stmt>
					<expr_stmt><expr><call><name pos:line="43" pos:column="41">log_err<pos:position pos:line="43" pos:column="48"/></name> <argument_list pos:line="43" pos:column="49">(<argument><expr><literal type="string" pos:line="43" pos:column="50">"read() failed: %s"<pos:position pos:line="43" pos:column="69"/></literal></expr></argument>,
							<argument><expr><call><name pos:line="44" pos:column="57">sstrerror<pos:position pos:line="44" pos:column="66"/></name> <argument_list pos:line="44" pos:column="67">(<argument><expr><name pos:line="44" pos:column="68">errno<pos:position pos:line="44" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="75">errbuf<pos:position pos:line="44" pos:column="81"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="83">sizeof <argument_list pos:line="44" pos:column="90">(<argument><expr><name pos:line="44" pos:column="91">errbuf<pos:position pos:line="44" pos:column="97"/></name></expr></argument>)<pos:position pos:line="44" pos:column="98"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="101"/></expr_stmt>
					<return pos:line="45" pos:column="41">return <expr><name pos:line="45" pos:column="48">NULL<pos:position pos:line="45" pos:column="52"/></name></expr>;<pos:position pos:line="45" pos:column="53"/></return>
				}<pos:position pos:line="46" pos:column="34"/></block></then></if>
			}<pos:position pos:line="47" pos:column="26"/></block></then></if>

			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><literal type="number" pos:line="49" pos:column="29">0<pos:position pos:line="49" pos:column="30"/></literal> <operator pos:line="49" pos:column="31">==<pos:position pos:line="49" pos:column="33"/></operator> <name pos:line="49" pos:column="34">len<pos:position pos:line="49" pos:column="37"/></name></expr>)<pos:position pos:line="49" pos:column="38"/></condition><then pos:line="49" pos:column="38">
				<block type="pseudo"><return pos:line="50" pos:column="33">return <expr><name pos:line="50" pos:column="40">NULL<pos:position pos:line="50" pos:column="44"/></name></expr>;<pos:position pos:line="50" pos:column="45"/></return></block></then></if>
		}<pos:position pos:line="51" pos:column="18"/></block> while <condition pos:line="51" pos:column="25">(<expr><name pos:line="51" pos:column="26">EINTR<pos:position pos:line="51" pos:column="31"/></name> <operator pos:line="51" pos:column="32">==<pos:position pos:line="51" pos:column="34"/></operator> <name pos:line="51" pos:column="35">errno<pos:position pos:line="51" pos:column="40"/></name></expr>)<pos:position pos:line="51" pos:column="41"/></condition>;<pos:position pos:line="51" pos:column="42"/></do>

		<expr_stmt><expr><name><name pos:line="53" pos:column="17">src<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">-&gt;<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="22">idx<pos:position pos:line="53" pos:column="25"/></name></name> <operator pos:line="53" pos:column="26">+=<pos:position pos:line="53" pos:column="28"/></operator> <name pos:line="53" pos:column="29">len<pos:position pos:line="53" pos:column="32"/></name></expr>;<pos:position pos:line="53" pos:column="33"/></expr_stmt>

		<for pos:line="55" pos:column="17">for <control pos:line="55" pos:column="21">(<init><expr><name pos:line="55" pos:column="22">i<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <name><name pos:line="55" pos:column="26">src<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">-&gt;<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="31">idx<pos:position pos:line="55" pos:column="34"/></name></name> <operator pos:line="55" pos:column="35">-<pos:position pos:line="55" pos:column="36"/></operator> <name pos:line="55" pos:column="37">len<pos:position pos:line="55" pos:column="40"/></name></expr>;<pos:position pos:line="55" pos:column="41"/></init> <condition><expr><name pos:line="55" pos:column="42">i<pos:position pos:line="55" pos:column="43"/></name> <operator pos:line="55" pos:column="44">&lt;<pos:position pos:line="55" pos:column="48"/></operator> <name><name pos:line="55" pos:column="46">src<pos:position pos:line="55" pos:column="49"/></name><operator pos:line="55" pos:column="49">-&gt;<pos:position pos:line="55" pos:column="54"/></operator><name pos:line="55" pos:column="51">idx<pos:position pos:line="55" pos:column="54"/></name></name></expr>;<pos:position pos:line="55" pos:column="55"/></condition> <incr><expr><operator pos:line="55" pos:column="56">++<pos:position pos:line="55" pos:column="58"/></operator><name pos:line="55" pos:column="58">i<pos:position pos:line="55" pos:column="59"/></name></expr></incr>)<pos:position pos:line="55" pos:column="60"/></control> <block pos:line="55" pos:column="61">{
			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><literal type="char" pos:line="56" pos:column="29">'\n'<pos:position pos:line="56" pos:column="33"/></literal> <operator pos:line="56" pos:column="34">==<pos:position pos:line="56" pos:column="36"/></operator> <name><name pos:line="56" pos:column="37">src<pos:position pos:line="56" pos:column="40"/></name><operator pos:line="56" pos:column="40">-&gt;<pos:position pos:line="56" pos:column="45"/></operator><name pos:line="56" pos:column="42">buffer<pos:position pos:line="56" pos:column="48"/></name><index pos:line="56" pos:column="48">[<expr><name pos:line="56" pos:column="49">i<pos:position pos:line="56" pos:column="50"/></name></expr>]<pos:position pos:line="56" pos:column="51"/></index></name></expr>)<pos:position pos:line="56" pos:column="52"/></condition><then pos:line="56" pos:column="52">
				<block type="pseudo"><break pos:line="57" pos:column="33">break;<pos:position pos:line="57" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="58" pos:column="18"/></block></for>

		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name pos:line="60" pos:column="21">i<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">==<pos:position pos:line="60" pos:column="25"/></operator> <name><name pos:line="60" pos:column="26">src<pos:position pos:line="60" pos:column="29"/></name><operator pos:line="60" pos:column="29">-&gt;<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="31">idx<pos:position pos:line="60" pos:column="34"/></name></name></expr>)<pos:position pos:line="60" pos:column="35"/></condition><then pos:line="60" pos:column="35"> <block pos:line="60" pos:column="36">{
			<expr_stmt><expr><name><name pos:line="61" pos:column="25">src<pos:position pos:line="61" pos:column="28"/></name><operator pos:line="61" pos:column="28">-&gt;<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="30">length<pos:position pos:line="61" pos:column="36"/></name></name> <operator pos:line="61" pos:column="37">=<pos:position pos:line="61" pos:column="38"/></operator> <literal type="number" pos:line="61" pos:column="39">0<pos:position pos:line="61" pos:column="40"/></literal></expr>;<pos:position pos:line="61" pos:column="41"/></expr_stmt>

			<if pos:line="63" pos:column="25">if <condition pos:line="63" pos:column="28">(<expr><name pos:line="63" pos:column="29">BUFSIZE<pos:position pos:line="63" pos:column="36"/></name> <operator pos:line="63" pos:column="37">==<pos:position pos:line="63" pos:column="39"/></operator> <name><name pos:line="63" pos:column="40">src<pos:position pos:line="63" pos:column="43"/></name><operator pos:line="63" pos:column="43">-&gt;<pos:position pos:line="63" pos:column="48"/></operator><name pos:line="63" pos:column="45">idx<pos:position pos:line="63" pos:column="48"/></name></name></expr>)<pos:position pos:line="63" pos:column="49"/></condition><then pos:line="63" pos:column="49"> <block pos:line="63" pos:column="50">{ <comment type="block" pos:line="63" pos:column="52">/* no space left in buffer */</comment>
				<while pos:line="64" pos:column="33">while <condition pos:line="64" pos:column="39">(<expr><literal type="char" pos:line="64" pos:column="40">'\n'<pos:position pos:line="64" pos:column="44"/></literal> <operator pos:line="64" pos:column="45">!=<pos:position pos:line="64" pos:column="47"/></operator> <call><name pos:line="64" pos:column="48">read_char<pos:position pos:line="64" pos:column="57"/></name> <argument_list pos:line="64" pos:column="58">(<argument><expr><name pos:line="64" pos:column="59">src<pos:position pos:line="64" pos:column="62"/></name></expr></argument>)<pos:position pos:line="64" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="64"/></condition>
					<comment type="block" pos:line="65" pos:column="41">/* ignore complete line */</comment><block type="pseudo"><empty_stmt pos:line="65" pos:column="67">;<pos:position pos:line="65" pos:column="68"/></empty_stmt></block></while>

				<expr_stmt><expr><name><name pos:line="67" pos:column="33">src<pos:position pos:line="67" pos:column="36"/></name><operator pos:line="67" pos:column="36">-&gt;<pos:position pos:line="67" pos:column="41"/></operator><name pos:line="67" pos:column="38">idx<pos:position pos:line="67" pos:column="41"/></name></name> <operator pos:line="67" pos:column="42">=<pos:position pos:line="67" pos:column="43"/></operator> <literal type="number" pos:line="67" pos:column="44">0<pos:position pos:line="67" pos:column="45"/></literal></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="68" pos:column="26"/></block></then></if>
			<return pos:line="69" pos:column="25">return <expr><call><name pos:line="69" pos:column="32">read_line<pos:position pos:line="69" pos:column="41"/></name> <argument_list pos:line="69" pos:column="42">(<argument><expr><name pos:line="69" pos:column="43">src<pos:position pos:line="69" pos:column="46"/></name></expr></argument>)<pos:position pos:line="69" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="48"/></return>
		}<pos:position pos:line="70" pos:column="18"/></block></then></if>
	}<pos:position pos:line="71" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="73" pos:column="9">src<pos:position pos:line="73" pos:column="12"/></name><operator pos:line="73" pos:column="12">-&gt;<pos:position pos:line="73" pos:column="17"/></operator><name pos:line="73" pos:column="14">buffer<pos:position pos:line="73" pos:column="20"/></name><index pos:line="73" pos:column="20">[<expr><name pos:line="73" pos:column="21">i<pos:position pos:line="73" pos:column="22"/></name></expr>]<pos:position pos:line="73" pos:column="23"/></index></name> <operator pos:line="73" pos:column="24">=<pos:position pos:line="73" pos:column="25"/></operator> <literal type="char" pos:line="73" pos:column="26">'\0'<pos:position pos:line="73" pos:column="30"/></literal></expr>;<pos:position pos:line="73" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="74" pos:column="9">src<pos:position pos:line="74" pos:column="12"/></name><operator pos:line="74" pos:column="12">-&gt;<pos:position pos:line="74" pos:column="17"/></operator><name pos:line="74" pos:column="14">length<pos:position pos:line="74" pos:column="20"/></name></name>    <operator pos:line="74" pos:column="24">=<pos:position pos:line="74" pos:column="25"/></operator> <name pos:line="74" pos:column="26">i<pos:position pos:line="74" pos:column="27"/></name></expr>;<pos:position pos:line="74" pos:column="28"/></expr_stmt>

	<return pos:line="76" pos:column="9">return <expr><name><name pos:line="76" pos:column="16">src<pos:position pos:line="76" pos:column="19"/></name><operator pos:line="76" pos:column="19">-&gt;<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="21">buffer<pos:position pos:line="76" pos:column="27"/></name></name></expr>;<pos:position pos:line="76" pos:column="28"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

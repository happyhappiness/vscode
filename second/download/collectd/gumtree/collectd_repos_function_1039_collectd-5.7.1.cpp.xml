<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1039_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">_plugin_unregister_generic<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">pTHX<pos:position pos:line="1" pos:column="44"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">perl_unregister_function_t<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">unreg<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
                                       <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">desc<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list> <block pos:line="2" pos:column="58">{
  <expr_stmt><expr><name pos:line="3" pos:column="3">dXSARGS<pos:position pos:line="3" pos:column="10"/></name></expr>;<pos:position pos:line="3" pos:column="11"/></expr_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><literal type="number" pos:line="5" pos:column="7">1<pos:position pos:line="5" pos:column="8"/></literal> <operator pos:line="5" pos:column="9">!=<pos:position pos:line="5" pos:column="11"/></operator> <name pos:line="5" pos:column="12">items<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18"> <block pos:line="5" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">log_err<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><literal type="string" pos:line="6" pos:column="13">"Usage: Collectd::plugin_unregister_%s(pluginname)"<pos:position pos:line="6" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="66">desc<pos:position pos:line="6" pos:column="70"/></name></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">XSRETURN_EMPTY<pos:position pos:line="7" pos:column="19"/></name></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><call><name pos:line="10" pos:column="8">SvOK<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><call><name pos:line="10" pos:column="13">ST<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="18"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="20"/></condition><then pos:line="10" pos:column="20"> <block pos:line="10" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">log_err<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><literal type="string" pos:line="11" pos:column="13">"Collectd::plugin_unregister_%s(pluginname): "<pos:position pos:line="11" pos:column="59"/></literal>
            <literal type="string" pos:line="12" pos:column="13">"Invalid pluginname"<pos:position pos:line="12" pos:column="33"/></literal></expr></argument>,
            <argument><expr><name pos:line="13" pos:column="13">desc<pos:position pos:line="13" pos:column="17"/></name></expr></argument>)<pos:position pos:line="13" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">XSRETURN_EMPTY<pos:position pos:line="14" pos:column="19"/></name></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">log_debug<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><literal type="string" pos:line="17" pos:column="13">"Collectd::plugin_unregister_%s: plugin = \"%s\""<pos:position pos:line="17" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="64">desc<pos:position pos:line="17" pos:column="68"/></name></expr></argument>,
            <argument><expr><call><name pos:line="18" pos:column="13">SvPV_nolen<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><call><name pos:line="18" pos:column="24">ST<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><literal type="number" pos:line="18" pos:column="27">0<pos:position pos:line="18" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">unreg<pos:position pos:line="20" pos:column="8"/></name><argument_list pos:line="20" pos:column="8">(<argument><expr><call><name pos:line="20" pos:column="9">SvPV_nolen<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><call><name pos:line="20" pos:column="20">ST<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><literal type="number" pos:line="20" pos:column="23">0<pos:position pos:line="20" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="25"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name pos:line="22" pos:column="3">XSRETURN_EMPTY<pos:position pos:line="22" pos:column="17"/></name></expr>;<pos:position pos:line="22" pos:column="18"/></expr_stmt>

  <return pos:line="24" pos:column="3">return;<pos:position pos:line="24" pos:column="10"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

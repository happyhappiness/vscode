<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1783_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dpdk_helper_eal_init<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">dpdk_helper_ctx_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">phc<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <block pos:line="1" pos:column="57">{
  <expr_stmt><expr><name><name pos:line="2" pos:column="3">phc<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">-&gt;<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="8">status<pos:position pos:line="2" pos:column="14"/></name></name> <operator pos:line="2" pos:column="15">=<pos:position pos:line="2" pos:column="16"/></operator> <name pos:line="2" pos:column="17">DPDK_HELPER_INITIALIZING_EAL<pos:position pos:line="2" pos:column="45"/></name></expr>;<pos:position pos:line="2" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">DPDK_CHILD_LOG<pos:position pos:line="3" pos:column="17"/></name><argument_list pos:line="3" pos:column="17">(<argument><expr><literal type="string" pos:line="3" pos:column="18">"%s:%s:%d DPDK_HELPER_INITIALIZING_EAL (start)\n"<pos:position pos:line="3" pos:column="67"/></literal></expr></argument>,
                 <argument><expr><name><name pos:line="4" pos:column="18">phc<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">-&gt;<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="23">shm_name<pos:position pos:line="4" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="33">__FUNCTION__<pos:position pos:line="4" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="47">__LINE__<pos:position pos:line="4" pos:column="55"/></name></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="57"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name><name pos:line="6" pos:column="9">argp<pos:position pos:line="6" pos:column="13"/></name><index pos:line="6" pos:column="13">[<expr><name pos:line="6" pos:column="14">DPDK_EAL_ARGC<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></operator> <literal type="number" pos:line="6" pos:column="30">2<pos:position pos:line="6" pos:column="31"/></literal> <operator pos:line="6" pos:column="32">+<pos:position pos:line="6" pos:column="33"/></operator> <literal type="number" pos:line="6" pos:column="34">1<pos:position pos:line="6" pos:column="35"/></literal></expr>]<pos:position pos:line="6" pos:column="36"/></index></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">argc<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* EAL config must be initialized */</comment>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">assert<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><name><name pos:line="10" pos:column="10">phc<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">eal_config<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">.<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">coremask<pos:position pos:line="10" pos:column="34"/></name><index pos:line="10" pos:column="34">[<expr><literal type="number" pos:line="10" pos:column="35">0<pos:position pos:line="10" pos:column="36"/></literal></expr>]<pos:position pos:line="10" pos:column="37"/></index></name> <operator pos:line="10" pos:column="38">!=<pos:position pos:line="10" pos:column="40"/></operator> <literal type="number" pos:line="10" pos:column="41">0<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">assert<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><name><name pos:line="11" pos:column="10">phc<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">eal_config<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">.<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">memory_channels<pos:position pos:line="11" pos:column="41"/></name><index pos:line="11" pos:column="41">[<expr><literal type="number" pos:line="11" pos:column="42">0<pos:position pos:line="11" pos:column="43"/></literal></expr>]<pos:position pos:line="11" pos:column="44"/></index></name> <operator pos:line="11" pos:column="45">!=<pos:position pos:line="11" pos:column="47"/></operator> <literal type="number" pos:line="11" pos:column="48">0<pos:position pos:line="11" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">assert<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><name><name pos:line="12" pos:column="10">phc<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">eal_config<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">.<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">file_prefix<pos:position pos:line="12" pos:column="37"/></name><index pos:line="12" pos:column="37">[<expr><literal type="number" pos:line="12" pos:column="38">0<pos:position pos:line="12" pos:column="39"/></literal></expr>]<pos:position pos:line="12" pos:column="40"/></index></name> <operator pos:line="12" pos:column="41">!=<pos:position pos:line="12" pos:column="43"/></operator> <literal type="number" pos:line="12" pos:column="44">0<pos:position pos:line="12" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="14" pos:column="3">argp<pos:position pos:line="14" pos:column="7"/></name><index pos:line="14" pos:column="7">[<expr><name pos:line="14" pos:column="8">argc<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">++<pos:position pos:line="14" pos:column="14"/></operator></expr>]<pos:position pos:line="14" pos:column="15"/></index></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="string" pos:line="14" pos:column="18">"collectd-dpdk"<pos:position pos:line="14" pos:column="33"/></literal></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="16" pos:column="3">argp<pos:position pos:line="16" pos:column="7"/></name><index pos:line="16" pos:column="7">[<expr><name pos:line="16" pos:column="8">argc<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">++<pos:position pos:line="16" pos:column="14"/></operator></expr>]<pos:position pos:line="16" pos:column="15"/></index></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <literal type="string" pos:line="16" pos:column="18">"-c"<pos:position pos:line="16" pos:column="22"/></literal></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">argp<pos:position pos:line="17" pos:column="7"/></name><index pos:line="17" pos:column="7">[<expr><name pos:line="17" pos:column="8">argc<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">++<pos:position pos:line="17" pos:column="14"/></operator></expr>]<pos:position pos:line="17" pos:column="15"/></index></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name><name pos:line="17" pos:column="18">phc<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">eal_config<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">.<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="34">coremask<pos:position pos:line="17" pos:column="42"/></name></name></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="19" pos:column="3">argp<pos:position pos:line="19" pos:column="7"/></name><index pos:line="19" pos:column="7">[<expr><name pos:line="19" pos:column="8">argc<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">++<pos:position pos:line="19" pos:column="14"/></operator></expr>]<pos:position pos:line="19" pos:column="15"/></index></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="string" pos:line="19" pos:column="18">"-n"<pos:position pos:line="19" pos:column="22"/></literal></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">argp<pos:position pos:line="20" pos:column="7"/></name><index pos:line="20" pos:column="7">[<expr><name pos:line="20" pos:column="8">argc<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">++<pos:position pos:line="20" pos:column="14"/></operator></expr>]<pos:position pos:line="20" pos:column="15"/></index></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name><name pos:line="20" pos:column="18">phc<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">eal_config<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">.<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">memory_channels<pos:position pos:line="20" pos:column="49"/></name></name></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><call><name pos:line="22" pos:column="7">strcasecmp<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">(<argument><expr><name><name pos:line="22" pos:column="18">phc<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">eal_config<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">.<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">socket_memory<pos:position pos:line="22" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="49">""<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call> <operator pos:line="22" pos:column="53">!=<pos:position pos:line="22" pos:column="55"/></operator> <literal type="number" pos:line="22" pos:column="56">0<pos:position pos:line="22" pos:column="57"/></literal></expr>)<pos:position pos:line="22" pos:column="58"/></condition><then pos:line="22" pos:column="58"> <block pos:line="22" pos:column="59">{
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">argp<pos:position pos:line="23" pos:column="9"/></name><index pos:line="23" pos:column="9">[<expr><name pos:line="23" pos:column="10">argc<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">++<pos:position pos:line="23" pos:column="16"/></operator></expr>]<pos:position pos:line="23" pos:column="17"/></index></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <literal type="string" pos:line="23" pos:column="20">"--socket-mem"<pos:position pos:line="23" pos:column="34"/></literal></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">argp<pos:position pos:line="24" pos:column="9"/></name><index pos:line="24" pos:column="9">[<expr><name pos:line="24" pos:column="10">argc<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">++<pos:position pos:line="24" pos:column="16"/></operator></expr>]<pos:position pos:line="24" pos:column="17"/></index></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <name><name pos:line="24" pos:column="20">phc<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">-&gt;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="25">eal_config<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">.<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="36">socket_memory<pos:position pos:line="24" pos:column="49"/></name></name></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><call><name pos:line="27" pos:column="7">strcasecmp<pos:position pos:line="27" pos:column="17"/></name><argument_list pos:line="27" pos:column="17">(<argument><expr><name><name pos:line="27" pos:column="18">phc<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">eal_config<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">.<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="34">file_prefix<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">DPDK_DEFAULT_RTE_CONFIG<pos:position pos:line="27" pos:column="70"/></name></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call> <operator pos:line="27" pos:column="72">!=<pos:position pos:line="27" pos:column="74"/></operator> <literal type="number" pos:line="27" pos:column="75">0<pos:position pos:line="27" pos:column="76"/></literal></expr>)<pos:position pos:line="27" pos:column="77"/></condition><then pos:line="27" pos:column="77"> <block pos:line="27" pos:column="78">{
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">argp<pos:position pos:line="28" pos:column="9"/></name><index pos:line="28" pos:column="9">[<expr><name pos:line="28" pos:column="10">argc<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">++<pos:position pos:line="28" pos:column="16"/></operator></expr>]<pos:position pos:line="28" pos:column="17"/></index></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <literal type="string" pos:line="28" pos:column="20">"--file-prefix"<pos:position pos:line="28" pos:column="35"/></literal></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">argp<pos:position pos:line="29" pos:column="9"/></name><index pos:line="29" pos:column="9">[<expr><name pos:line="29" pos:column="10">argc<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">++<pos:position pos:line="29" pos:column="16"/></operator></expr>]<pos:position pos:line="29" pos:column="17"/></index></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <name><name pos:line="29" pos:column="20">phc<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">-&gt;<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="25">eal_config<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">.<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="36">file_prefix<pos:position pos:line="29" pos:column="47"/></name></name></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="32" pos:column="3">argp<pos:position pos:line="32" pos:column="7"/></name><index pos:line="32" pos:column="7">[<expr><name pos:line="32" pos:column="8">argc<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">++<pos:position pos:line="32" pos:column="14"/></operator></expr>]<pos:position pos:line="32" pos:column="15"/></index></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <literal type="string" pos:line="32" pos:column="18">"--proc-type"<pos:position pos:line="32" pos:column="31"/></literal></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">argp<pos:position pos:line="33" pos:column="7"/></name><index pos:line="33" pos:column="7">[<expr><name pos:line="33" pos:column="8">argc<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">++<pos:position pos:line="33" pos:column="14"/></operator></expr>]<pos:position pos:line="33" pos:column="15"/></index></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <literal type="string" pos:line="33" pos:column="18">"secondary"<pos:position pos:line="33" pos:column="29"/></literal></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><call><name pos:line="35" pos:column="7">strcasecmp<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><name><name pos:line="35" pos:column="18">phc<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">-&gt;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="23">eal_config<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">.<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">log_level<pos:position pos:line="35" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="45">""<pos:position pos:line="35" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call> <operator pos:line="35" pos:column="49">!=<pos:position pos:line="35" pos:column="51"/></operator> <literal type="number" pos:line="35" pos:column="52">0<pos:position pos:line="35" pos:column="53"/></literal></expr>)<pos:position pos:line="35" pos:column="54"/></condition><then pos:line="35" pos:column="54"> <block pos:line="35" pos:column="55">{
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">argp<pos:position pos:line="36" pos:column="9"/></name><index pos:line="36" pos:column="9">[<expr><name pos:line="36" pos:column="10">argc<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">++<pos:position pos:line="36" pos:column="16"/></operator></expr>]<pos:position pos:line="36" pos:column="17"/></index></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <literal type="string" pos:line="36" pos:column="20">"--log-level"<pos:position pos:line="36" pos:column="33"/></literal></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">argp<pos:position pos:line="37" pos:column="9"/></name><index pos:line="37" pos:column="9">[<expr><name pos:line="37" pos:column="10">argc<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">++<pos:position pos:line="37" pos:column="16"/></operator></expr>]<pos:position pos:line="37" pos:column="17"/></index></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <name><name pos:line="37" pos:column="20">phc<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">-&gt;<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="25">eal_config<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">.<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="36">log_level<pos:position pos:line="37" pos:column="45"/></name></name></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><call><name pos:line="39" pos:column="7">strcasecmp<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name><name pos:line="39" pos:column="18">phc<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">-&gt;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="23">eal_config<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">.<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="34">rte_driver_lib_path<pos:position pos:line="39" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="55">""<pos:position pos:line="39" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></call> <operator pos:line="39" pos:column="59">!=<pos:position pos:line="39" pos:column="61"/></operator> <literal type="number" pos:line="39" pos:column="62">0<pos:position pos:line="39" pos:column="63"/></literal></expr>)<pos:position pos:line="39" pos:column="64"/></condition><then pos:line="39" pos:column="64"> <block pos:line="39" pos:column="65">{
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">argp<pos:position pos:line="40" pos:column="9"/></name><index pos:line="40" pos:column="9">[<expr><name pos:line="40" pos:column="10">argc<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">++<pos:position pos:line="40" pos:column="16"/></operator></expr>]<pos:position pos:line="40" pos:column="17"/></index></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <literal type="string" pos:line="40" pos:column="20">"-d"<pos:position pos:line="40" pos:column="24"/></literal></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">argp<pos:position pos:line="41" pos:column="9"/></name><index pos:line="41" pos:column="9">[<expr><name pos:line="41" pos:column="10">argc<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">++<pos:position pos:line="41" pos:column="16"/></operator></expr>]<pos:position pos:line="41" pos:column="17"/></index></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <name><name pos:line="41" pos:column="20">phc<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">-&gt;<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="25">eal_config<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">.<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="36">rte_driver_lib_path<pos:position pos:line="41" pos:column="55"/></name></name></expr>;<pos:position pos:line="41" pos:column="56"/></expr_stmt>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="44" pos:column="3">assert<pos:position pos:line="44" pos:column="9"/></name><argument_list pos:line="44" pos:column="9">(<argument><expr><name pos:line="44" pos:column="10">argc<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">&lt;=<pos:position pos:line="44" pos:column="20"/></operator> <operator pos:line="44" pos:column="18">(<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="19">DPDK_EAL_ARGC<pos:position pos:line="44" pos:column="32"/></name> <operator pos:line="44" pos:column="33">*<pos:position pos:line="44" pos:column="34"/></operator> <literal type="number" pos:line="44" pos:column="35">2<pos:position pos:line="44" pos:column="36"/></literal> <operator pos:line="44" pos:column="37">+<pos:position pos:line="44" pos:column="38"/></operator> <literal type="number" pos:line="44" pos:column="39">1<pos:position pos:line="44" pos:column="40"/></literal><operator pos:line="44" pos:column="40">)<pos:position pos:line="44" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="44" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="46" pos:column="3">int<pos:position pos:line="46" pos:column="6"/></name></type> <name pos:line="46" pos:column="7">ret<pos:position pos:line="46" pos:column="10"/></name> <init pos:line="46" pos:column="11">= <expr><call><name pos:line="46" pos:column="13">rte_eal_init<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">argc<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="32">argp<pos:position pos:line="46" pos:column="36"/></name></expr></argument>)<pos:position pos:line="46" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="38"/></decl_stmt>

  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name pos:line="48" pos:column="7">ret<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">&lt;<pos:position pos:line="48" pos:column="15"/></operator> <literal type="number" pos:line="48" pos:column="13">0<pos:position pos:line="48" pos:column="14"/></literal></expr>)<pos:position pos:line="48" pos:column="15"/></condition><then pos:line="48" pos:column="15"> <block pos:line="48" pos:column="16">{

    <expr_stmt><expr><name><name pos:line="50" pos:column="5">phc<pos:position pos:line="50" pos:column="8"/></name><operator pos:line="50" pos:column="8">-&gt;<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="10">eal_initialized<pos:position pos:line="50" pos:column="25"/></name></name> <operator pos:line="50" pos:column="26">=<pos:position pos:line="50" pos:column="27"/></operator> <literal type="number" pos:line="50" pos:column="28">0<pos:position pos:line="50" pos:column="29"/></literal></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="52" pos:column="5">DPDK_CHILD_LOG<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><literal type="string" pos:line="52" pos:column="20">"dpdk_helper_eal_init: ERROR initializing EAL ret=%d\n"<pos:position pos:line="52" pos:column="75"/></literal></expr></argument>,
                   <argument><expr><name pos:line="53" pos:column="20">ret<pos:position pos:line="53" pos:column="23"/></name></expr></argument>)<pos:position pos:line="53" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="55" pos:column="5">printf<pos:position pos:line="55" pos:column="11"/></name><argument_list pos:line="55" pos:column="11">(<argument><expr><literal type="string" pos:line="55" pos:column="12">"dpdk_helper_eal_init: EAL arguments: "<pos:position pos:line="55" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="53"/></expr_stmt>
    <for pos:line="56" pos:column="5">for <control pos:line="56" pos:column="9">(<init><decl><type><name pos:line="56" pos:column="10">int<pos:position pos:line="56" pos:column="13"/></name></type> <name pos:line="56" pos:column="14">i<pos:position pos:line="56" pos:column="15"/></name> <init pos:line="56" pos:column="16">= <expr><literal type="number" pos:line="56" pos:column="18">0<pos:position pos:line="56" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="56" pos:column="20"/></init> <condition><expr><name pos:line="56" pos:column="21">i<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">&lt;<pos:position pos:line="56" pos:column="27"/></operator> <name pos:line="56" pos:column="25">argc<pos:position pos:line="56" pos:column="29"/></name></expr>;<pos:position pos:line="56" pos:column="30"/></condition> <incr><expr><name pos:line="56" pos:column="31">i<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">++<pos:position pos:line="56" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="35"/></control> <block pos:line="56" pos:column="36">{
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">printf<pos:position pos:line="57" pos:column="13"/></name><argument_list pos:line="57" pos:column="13">(<argument><expr><literal type="string" pos:line="57" pos:column="14">"%s "<pos:position pos:line="57" pos:column="19"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="21">argp<pos:position pos:line="57" pos:column="25"/></name><index pos:line="57" pos:column="25">[<expr><name pos:line="57" pos:column="26">i<pos:position pos:line="57" pos:column="27"/></name></expr>]<pos:position pos:line="57" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="57" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">printf<pos:position pos:line="59" pos:column="11"/></name><argument_list pos:line="59" pos:column="11">(<argument><expr><literal type="string" pos:line="59" pos:column="12">"\n"<pos:position pos:line="59" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="18"/></expr_stmt>

    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">ret<pos:position pos:line="61" pos:column="15"/></name></expr>;<pos:position pos:line="61" pos:column="16"/></return>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="64" pos:column="3">phc<pos:position pos:line="64" pos:column="6"/></name><operator pos:line="64" pos:column="6">-&gt;<pos:position pos:line="64" pos:column="11"/></operator><name pos:line="64" pos:column="8">eal_initialized<pos:position pos:line="64" pos:column="23"/></name></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <literal type="number" pos:line="64" pos:column="26">1<pos:position pos:line="64" pos:column="27"/></literal></expr>;<pos:position pos:line="64" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="66" pos:column="3">DPDK_CHILD_LOG<pos:position pos:line="66" pos:column="17"/></name><argument_list pos:line="66" pos:column="17">(<argument><expr><literal type="string" pos:line="66" pos:column="18">"%s:%s:%d DPDK_HELPER_INITIALIZING_EAL (done)\n"<pos:position pos:line="66" pos:column="66"/></literal></expr></argument>,
                 <argument><expr><name><name pos:line="67" pos:column="18">phc<pos:position pos:line="67" pos:column="21"/></name><operator pos:line="67" pos:column="21">-&gt;<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="23">shm_name<pos:position pos:line="67" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="33">__FUNCTION__<pos:position pos:line="67" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="47">__LINE__<pos:position pos:line="67" pos:column="55"/></name></expr></argument>)<pos:position pos:line="67" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="57"/></expr_stmt>

  <return pos:line="69" pos:column="3">return <expr><literal type="number" pos:line="69" pos:column="10">0<pos:position pos:line="69" pos:column="11"/></literal></expr>;<pos:position pos:line="69" pos:column="12"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

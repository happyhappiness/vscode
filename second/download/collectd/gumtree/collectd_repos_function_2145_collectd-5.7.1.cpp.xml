<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2145_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cu_tail_readline<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">cu_tail_t<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">obj<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">buf<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">buflen<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list> <block pos:line="1" pos:column="61">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">status<pos:position pos:line="2" pos:column="13"/></name></decl>;<pos:position pos:line="2" pos:column="14"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">buflen<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">&lt;<pos:position pos:line="4" pos:column="18"/></operator> <literal type="number" pos:line="4" pos:column="16">1<pos:position pos:line="4" pos:column="17"/></literal></expr>)<pos:position pos:line="4" pos:column="18"/></condition><then pos:line="4" pos:column="18"> <block pos:line="4" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">ERROR<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><literal type="string" pos:line="5" pos:column="11">"utils_tail: cu_tail_readline: buflen too small: %i bytes."<pos:position pos:line="5" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="72">buflen<pos:position pos:line="5" pos:column="78"/></name></expr></argument>)<pos:position pos:line="5" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="80"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><operator pos:line="6" pos:column="13">-<pos:position pos:line="6" pos:column="14"/></operator><literal type="number" pos:line="6" pos:column="14">1<pos:position pos:line="6" pos:column="15"/></literal><operator pos:line="6" pos:column="15">)<pos:position pos:line="6" pos:column="16"/></operator></expr>;<pos:position pos:line="6" pos:column="17"/></return>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name><name pos:line="9" pos:column="7">obj<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">fh<pos:position pos:line="9" pos:column="14"/></name></name> <operator pos:line="9" pos:column="15">==<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">NULL<pos:position pos:line="9" pos:column="22"/></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">status<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">cu_tail_reopen<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">obj<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">status<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">&lt;<pos:position pos:line="11" pos:column="20"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20">
      <block type="pseudo"><return pos:line="12" pos:column="7">return <expr><operator pos:line="12" pos:column="14">(<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">status<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">)<pos:position pos:line="12" pos:column="22"/></operator></expr>;<pos:position pos:line="12" pos:column="23"/></return></block></then></if>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">assert<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">(<argument><expr><name><name pos:line="14" pos:column="10">obj<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">fh<pos:position pos:line="14" pos:column="17"/></name></name> <operator pos:line="14" pos:column="18">!=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">NULL<pos:position pos:line="14" pos:column="25"/></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>

  <comment type="block" pos:line="16" pos:column="3">/* Try to read from the filehandle. If that succeeds, everything appears to
   * be fine and we can return. */</comment>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">clearerr<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name><name pos:line="18" pos:column="12">obj<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">fh<pos:position pos:line="18" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><call><name pos:line="19" pos:column="7">fgets<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">buf<pos:position pos:line="19" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="18">buflen<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="26">obj<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">fh<pos:position pos:line="19" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call> <operator pos:line="19" pos:column="35">!=<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="38">NULL<pos:position pos:line="19" pos:column="42"/></name></expr>)<pos:position pos:line="19" pos:column="43"/></condition><then pos:line="19" pos:column="43"> <block pos:line="19" pos:column="44">{
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">buf<pos:position pos:line="20" pos:column="8"/></name><index pos:line="20" pos:column="8">[<expr><name pos:line="20" pos:column="9">buflen<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">-<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">1<pos:position pos:line="20" pos:column="19"/></literal></expr>]<pos:position pos:line="20" pos:column="20"/></index></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <literal type="number" pos:line="20" pos:column="23">0<pos:position pos:line="20" pos:column="24"/></literal></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><literal type="number" pos:line="21" pos:column="13">0<pos:position pos:line="21" pos:column="14"/></literal><operator pos:line="21" pos:column="14">)<pos:position pos:line="21" pos:column="15"/></operator></expr>;<pos:position pos:line="21" pos:column="16"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* Check if we encountered an error */</comment>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><call><name pos:line="25" pos:column="7">ferror<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name><name pos:line="25" pos:column="14">obj<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">fh<pos:position pos:line="25" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="22"/></argument_list></call> <operator pos:line="25" pos:column="23">!=<pos:position pos:line="25" pos:column="25"/></operator> <literal type="number" pos:line="25" pos:column="26">0<pos:position pos:line="25" pos:column="27"/></literal></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28"> <block pos:line="25" pos:column="29">{
    <comment type="block" pos:line="26" pos:column="5">/* Jupp, error. Force `cu_tail_reopen' to reopen the file.. */</comment>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">fclose<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name><name pos:line="27" pos:column="12">obj<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">fh<pos:position pos:line="27" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">obj<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">-&gt;<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="10">fh<pos:position pos:line="28" pos:column="12"/></name></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <name pos:line="28" pos:column="15">NULL<pos:position pos:line="28" pos:column="19"/></name></expr>;<pos:position pos:line="28" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="30" pos:column="3">/* else: eof -&gt; check if the file was moved away and reopen the new file if
   * so.. */</comment>

  <expr_stmt><expr><name pos:line="33" pos:column="3">status<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <call><name pos:line="33" pos:column="12">cu_tail_reopen<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name pos:line="33" pos:column="27">obj<pos:position pos:line="33" pos:column="30"/></name></expr></argument>)<pos:position pos:line="33" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
  <comment type="block" pos:line="34" pos:column="3">/* error -&gt; return with error */</comment>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">status<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">&lt;<pos:position pos:line="35" pos:column="18"/></operator> <literal type="number" pos:line="35" pos:column="16">0<pos:position pos:line="35" pos:column="17"/></literal></expr>)<pos:position pos:line="35" pos:column="18"/></condition><then pos:line="35" pos:column="18">
    <block type="pseudo"><return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="13">status<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">)<pos:position pos:line="36" pos:column="20"/></operator></expr>;<pos:position pos:line="36" pos:column="21"/></return></block></then>
  <comment type="block" pos:line="37" pos:column="3">/* file end reached and file not reopened -&gt; nothing more to read */</comment>
  <elseif pos:line="38" pos:column="3">else <if pos:line="38" pos:column="8">if <condition pos:line="38" pos:column="11">(<expr><name pos:line="38" pos:column="12">status<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">&gt;<pos:position pos:line="38" pos:column="23"/></operator> <literal type="number" pos:line="38" pos:column="21">0<pos:position pos:line="38" pos:column="22"/></literal></expr>)<pos:position pos:line="38" pos:column="23"/></condition><then pos:line="38" pos:column="23"> <block pos:line="38" pos:column="24">{
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">buf<pos:position pos:line="39" pos:column="8"/></name><index pos:line="39" pos:column="8">[<expr><literal type="number" pos:line="39" pos:column="9">0<pos:position pos:line="39" pos:column="10"/></literal></expr>]<pos:position pos:line="39" pos:column="11"/></index></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <literal type="number" pos:line="39" pos:column="14">0<pos:position pos:line="39" pos:column="15"/></literal></expr>;<pos:position pos:line="39" pos:column="16"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><operator pos:line="40" pos:column="12">(<pos:position pos:line="40" pos:column="13"/></operator><literal type="number" pos:line="40" pos:column="13">0<pos:position pos:line="40" pos:column="14"/></literal><operator pos:line="40" pos:column="14">)<pos:position pos:line="40" pos:column="15"/></operator></expr>;<pos:position pos:line="40" pos:column="16"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if></elseif></if>

  <comment type="block" pos:line="43" pos:column="3">/* If we get here: file was re-opened and there may be more to read.. Let's
   * try again. */</comment>
  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><call><name pos:line="45" pos:column="7">fgets<pos:position pos:line="45" pos:column="12"/></name><argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">buf<pos:position pos:line="45" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="18">buflen<pos:position pos:line="45" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="26">obj<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">-&gt;<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="31">fh<pos:position pos:line="45" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="34"/></argument_list></call> <operator pos:line="45" pos:column="35">!=<pos:position pos:line="45" pos:column="37"/></operator> <name pos:line="45" pos:column="38">NULL<pos:position pos:line="45" pos:column="42"/></name></expr>)<pos:position pos:line="45" pos:column="43"/></condition><then pos:line="45" pos:column="43"> <block pos:line="45" pos:column="44">{
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">buf<pos:position pos:line="46" pos:column="8"/></name><index pos:line="46" pos:column="8">[<expr><name pos:line="46" pos:column="9">buflen<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">-<pos:position pos:line="46" pos:column="17"/></operator> <literal type="number" pos:line="46" pos:column="18">1<pos:position pos:line="46" pos:column="19"/></literal></expr>]<pos:position pos:line="46" pos:column="20"/></index></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <literal type="number" pos:line="46" pos:column="23">0<pos:position pos:line="46" pos:column="24"/></literal></expr>;<pos:position pos:line="46" pos:column="25"/></expr_stmt>
    <return pos:line="47" pos:column="5">return <expr><operator pos:line="47" pos:column="12">(<pos:position pos:line="47" pos:column="13"/></operator><literal type="number" pos:line="47" pos:column="13">0<pos:position pos:line="47" pos:column="14"/></literal><operator pos:line="47" pos:column="14">)<pos:position pos:line="47" pos:column="15"/></operator></expr>;<pos:position pos:line="47" pos:column="16"/></return>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><call><name pos:line="50" pos:column="7">ferror<pos:position pos:line="50" pos:column="13"/></name><argument_list pos:line="50" pos:column="13">(<argument><expr><name><name pos:line="50" pos:column="14">obj<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">-&gt;<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="19">fh<pos:position pos:line="50" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="22"/></argument_list></call> <operator pos:line="50" pos:column="23">!=<pos:position pos:line="50" pos:column="25"/></operator> <literal type="number" pos:line="50" pos:column="26">0<pos:position pos:line="50" pos:column="27"/></literal></expr>)<pos:position pos:line="50" pos:column="28"/></condition><then pos:line="50" pos:column="28"> <block pos:line="50" pos:column="29">{
    <decl_stmt><decl><type><name pos:line="51" pos:column="5">char<pos:position pos:line="51" pos:column="9"/></name></type> <name><name pos:line="51" pos:column="10">errbuf<pos:position pos:line="51" pos:column="16"/></name><index pos:line="51" pos:column="16">[<expr><literal type="number" pos:line="51" pos:column="17">1024<pos:position pos:line="51" pos:column="21"/></literal></expr>]<pos:position pos:line="51" pos:column="22"/></index></name></decl>;<pos:position pos:line="51" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">WARNING<pos:position pos:line="52" pos:column="12"/></name><argument_list pos:line="52" pos:column="12">(<argument><expr><literal type="string" pos:line="52" pos:column="13">"utils_tail: fgets (%s) returned an error: %s"<pos:position pos:line="52" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="61">obj<pos:position pos:line="52" pos:column="64"/></name><operator pos:line="52" pos:column="64">-&gt;<pos:position pos:line="52" pos:column="69"/></operator><name pos:line="52" pos:column="66">file<pos:position pos:line="52" pos:column="70"/></name></name></expr></argument>,
            <argument><expr><call><name pos:line="53" pos:column="13">sstrerror<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">errno<pos:position pos:line="53" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="30">errbuf<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="38">sizeof<argument_list pos:line="53" pos:column="44">(<argument><expr><name pos:line="53" pos:column="45">errbuf<pos:position pos:line="53" pos:column="51"/></name></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">fclose<pos:position pos:line="54" pos:column="11"/></name><argument_list pos:line="54" pos:column="11">(<argument><expr><name><name pos:line="54" pos:column="12">obj<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">-&gt;<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="17">fh<pos:position pos:line="54" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">obj<pos:position pos:line="55" pos:column="8"/></name><operator pos:line="55" pos:column="8">-&gt;<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="10">fh<pos:position pos:line="55" pos:column="12"/></name></name> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <name pos:line="55" pos:column="15">NULL<pos:position pos:line="55" pos:column="19"/></name></expr>;<pos:position pos:line="55" pos:column="20"/></expr_stmt>
    <return pos:line="56" pos:column="5">return <expr><operator pos:line="56" pos:column="12">(<pos:position pos:line="56" pos:column="13"/></operator><operator pos:line="56" pos:column="13">-<pos:position pos:line="56" pos:column="14"/></operator><literal type="number" pos:line="56" pos:column="14">1<pos:position pos:line="56" pos:column="15"/></literal><operator pos:line="56" pos:column="15">)<pos:position pos:line="56" pos:column="16"/></operator></expr>;<pos:position pos:line="56" pos:column="17"/></return>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="59" pos:column="3">/* EOf, well, apparently the new file is empty.. */</comment>
  <expr_stmt><expr><name><name pos:line="60" pos:column="3">buf<pos:position pos:line="60" pos:column="6"/></name><index pos:line="60" pos:column="6">[<expr><literal type="number" pos:line="60" pos:column="7">0<pos:position pos:line="60" pos:column="8"/></literal></expr>]<pos:position pos:line="60" pos:column="9"/></index></name> <operator pos:line="60" pos:column="10">=<pos:position pos:line="60" pos:column="11"/></operator> <literal type="number" pos:line="60" pos:column="12">0<pos:position pos:line="60" pos:column="13"/></literal></expr>;<pos:position pos:line="60" pos:column="14"/></expr_stmt>
  <return pos:line="61" pos:column="3">return <expr><operator pos:line="61" pos:column="10">(<pos:position pos:line="61" pos:column="11"/></operator><literal type="number" pos:line="61" pos:column="11">0<pos:position pos:line="61" pos:column="12"/></literal><operator pos:line="61" pos:column="12">)<pos:position pos:line="61" pos:column="13"/></operator></expr>;<pos:position pos:line="61" pos:column="14"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

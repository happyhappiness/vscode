<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1151_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_handle_quota_data<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">host_config_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">host<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="61">/* {{{ */</comment>
                                 <parameter><decl><type><name pos:line="2" pos:column="34">cfg_quota_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">cfg_quota<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">na_elem_t<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">data<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list> <block pos:line="2" pos:column="75">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">na_elem_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">elem_quotas<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">na_elem_iter_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">iter_quota<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">elem_quotas<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <call><name pos:line="6" pos:column="17">na_elem_child<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">data<pos:position pos:line="6" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="37">"quotas"<pos:position pos:line="6" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="47"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">elem_quotas<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">==<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27"> <block pos:line="7" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"netapp plugin: cna_handle_quota_data: "<pos:position pos:line="8" pos:column="51"/></literal>
          <literal type="string" pos:line="9" pos:column="11">"na_elem_child (\"quotas\") failed "<pos:position pos:line="9" pos:column="47"/></literal>
          <literal type="string" pos:line="10" pos:column="11">"for host %s."<pos:position pos:line="10" pos:column="25"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="11" pos:column="11">host<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">name<pos:position pos:line="11" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">iter_quota<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">na_child_iterator<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">elem_quotas<pos:position pos:line="15" pos:column="45"/></name></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="47"/></expr_stmt>
  <for pos:line="16" pos:column="3">for <control pos:line="16" pos:column="7">(<init><decl><type><name pos:line="16" pos:column="8">na_elem_t<pos:position pos:line="16" pos:column="17"/></name> <modifier pos:line="16" pos:column="18">*<pos:position pos:line="16" pos:column="19"/></modifier></type><name pos:line="16" pos:column="19">elem_quota<pos:position pos:line="16" pos:column="29"/></name> <init pos:line="16" pos:column="30">= <expr><call><name pos:line="16" pos:column="32">na_iterator_next<pos:position pos:line="16" pos:column="48"/></name><argument_list pos:line="16" pos:column="48">(<argument><expr><operator pos:line="16" pos:column="49">&amp;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="50">iter_quota<pos:position pos:line="16" pos:column="60"/></name></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="62"/></init>
       <condition><expr><name pos:line="17" pos:column="8">elem_quota<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">!=<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">NULL<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></condition> <incr><expr><name pos:line="17" pos:column="28">elem_quota<pos:position pos:line="17" pos:column="38"/></name> <operator pos:line="17" pos:column="39">=<pos:position pos:line="17" pos:column="40"/></operator> <call><name pos:line="17" pos:column="41">na_iterator_next<pos:position pos:line="17" pos:column="57"/></name><argument_list pos:line="17" pos:column="57">(<argument><expr><operator pos:line="17" pos:column="58">&amp;<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="59">iter_quota<pos:position pos:line="17" pos:column="69"/></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr></incr>)<pos:position pos:line="17" pos:column="71"/></control> <block pos:line="17" pos:column="72">{
    <decl_stmt><decl><type><specifier pos:line="18" pos:column="5">const<pos:position pos:line="18" pos:column="10"/></specifier> <name pos:line="18" pos:column="11">char<pos:position pos:line="18" pos:column="15"/></name> <modifier pos:line="18" pos:column="16">*<pos:position pos:line="18" pos:column="17"/></modifier></type><name pos:line="18" pos:column="17">quota_type<pos:position pos:line="18" pos:column="27"/></name></decl>, <modifier pos:line="18" pos:column="29">*<pos:position pos:line="18" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="18" pos:column="30">volume_name<pos:position pos:line="18" pos:column="41"/></name></decl>, <modifier pos:line="18" pos:column="43">*<pos:position pos:line="18" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="18" pos:column="44">tree_name<pos:position pos:line="18" pos:column="53"/></name></decl>;<pos:position pos:line="18" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">uint64_t<pos:position pos:line="19" pos:column="13"/></name></type> <name pos:line="19" pos:column="14">value<pos:position pos:line="19" pos:column="19"/></name></decl>;<pos:position pos:line="19" pos:column="20"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name></type> <name><name pos:line="21" pos:column="10">plugin_instance<pos:position pos:line="21" pos:column="25"/></name><index pos:line="21" pos:column="25">[<expr><name pos:line="21" pos:column="26">DATA_MAX_NAME_LEN<pos:position pos:line="21" pos:column="43"/></name></expr>]<pos:position pos:line="21" pos:column="44"/></index></name></decl>;<pos:position pos:line="21" pos:column="45"/></decl_stmt>

    <expr_stmt><expr><name pos:line="23" pos:column="5">quota_type<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <call><name pos:line="23" pos:column="18">na_child_get_string<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><name pos:line="23" pos:column="38">elem_quota<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="50">"quota-type"<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">quota_type<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">==<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">NULL<pos:position pos:line="24" pos:column="27"/></name></expr>)<pos:position pos:line="24" pos:column="28"/></condition><then pos:line="24" pos:column="28">
      <block type="pseudo"><continue pos:line="25" pos:column="7">continue;<pos:position pos:line="25" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="27" pos:column="5">/* possible TODO: support other types as well */</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">strcmp<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">quota_type<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="28">"tree"<pos:position pos:line="28" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call> <operator pos:line="28" pos:column="36">!=<pos:position pos:line="28" pos:column="38"/></operator> <literal type="number" pos:line="28" pos:column="39">0<pos:position pos:line="28" pos:column="40"/></literal></expr>)<pos:position pos:line="28" pos:column="41"/></condition><then pos:line="28" pos:column="41">
      <block type="pseudo"><continue pos:line="29" pos:column="7">continue;<pos:position pos:line="29" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="31" pos:column="5">tree_name<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <call><name pos:line="31" pos:column="17">na_child_get_string<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name pos:line="31" pos:column="37">elem_quota<pos:position pos:line="31" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="49">"tree"<pos:position pos:line="31" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">(<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">tree_name<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">==<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="23">NULL<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">)<pos:position pos:line="32" pos:column="28"/></operator> <operator pos:line="32" pos:column="29">||<pos:position pos:line="32" pos:column="31"/></operator> <operator pos:line="32" pos:column="32">(<pos:position pos:line="32" pos:column="33"/></operator><operator pos:line="32" pos:column="33">*<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="34">tree_name<pos:position pos:line="32" pos:column="43"/></name> <operator pos:line="32" pos:column="44">==<pos:position pos:line="32" pos:column="46"/></operator> <literal type="char" pos:line="32" pos:column="47">'\0'<pos:position pos:line="32" pos:column="51"/></literal><operator pos:line="32" pos:column="51">)<pos:position pos:line="32" pos:column="52"/></operator></expr>)<pos:position pos:line="32" pos:column="53"/></condition><then pos:line="32" pos:column="53">
      <block type="pseudo"><continue pos:line="33" pos:column="7">continue;<pos:position pos:line="33" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="35" pos:column="5">volume_name<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <call><name pos:line="35" pos:column="19">na_child_get_string<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name pos:line="35" pos:column="39">elem_quota<pos:position pos:line="35" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="51">"volume"<pos:position pos:line="35" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="61"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">volume_name<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">==<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="24">NULL<pos:position pos:line="36" pos:column="28"/></name></expr>)<pos:position pos:line="36" pos:column="29"/></condition><then pos:line="36" pos:column="29">
      <block type="pseudo"><continue pos:line="37" pos:column="7">continue;<pos:position pos:line="37" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">snprintf<pos:position pos:line="39" pos:column="13"/></name><argument_list pos:line="39" pos:column="13">(<argument><expr><name pos:line="39" pos:column="14">plugin_instance<pos:position pos:line="39" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="31">sizeof<argument_list pos:line="39" pos:column="37">(<argument><expr><name pos:line="39" pos:column="38">plugin_instance<pos:position pos:line="39" pos:column="53"/></name></expr></argument>)<pos:position pos:line="39" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="56">"quota-%s-%s"<pos:position pos:line="39" pos:column="69"/></literal></expr></argument>,
             <argument><expr><name pos:line="40" pos:column="14">volume_name<pos:position pos:line="40" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="27">tree_name<pos:position pos:line="40" pos:column="36"/></name></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name pos:line="42" pos:column="5">value<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">=<pos:position pos:line="42" pos:column="12"/></operator> <call><name pos:line="42" pos:column="13">na_child_get_uint64<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">elem_quota<pos:position pos:line="42" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="45">"disk-used"<pos:position pos:line="42" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="58">UINT64_MAX<pos:position pos:line="42" pos:column="68"/></name></expr></argument>)<pos:position pos:line="42" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="70"/></expr_stmt>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">value<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">!=<pos:position pos:line="43" pos:column="17"/></operator> <name pos:line="43" pos:column="18">UINT64_MAX<pos:position pos:line="43" pos:column="28"/></name></expr>)<pos:position pos:line="43" pos:column="29"/></condition><then pos:line="43" pos:column="29"> <block pos:line="43" pos:column="30">{
      <expr_stmt><expr><name pos:line="44" pos:column="7">value<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">*=<pos:position pos:line="44" pos:column="15"/></operator> <literal type="number" pos:line="44" pos:column="16">1024<pos:position pos:line="44" pos:column="20"/></literal></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt> <comment type="block" pos:line="44" pos:column="22">/* disk-used reports kilobytes */</comment>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">submit_double<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><name><name pos:line="45" pos:column="21">host<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">-&gt;<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="27">name<pos:position pos:line="45" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="33">plugin_instance<pos:position pos:line="45" pos:column="48"/></name></expr></argument>,
                    <comment type="block" pos:line="46" pos:column="21">/* type = */</comment> <argument><expr><literal type="string" pos:line="46" pos:column="34">"df_complex"<pos:position pos:line="46" pos:column="46"/></literal></expr></argument>, <comment type="block" pos:line="46" pos:column="48">/* type instance = */</comment> <argument><expr><name pos:line="46" pos:column="70">NULL<pos:position pos:line="46" pos:column="74"/></name></expr></argument>,
                    <argument><expr><operator pos:line="47" pos:column="21">(<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="22">double<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">)<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="29">value<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <comment type="block" pos:line="47" pos:column="36">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="47" pos:column="54">0<pos:position pos:line="47" pos:column="55"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="48" pos:column="21">host<pos:position pos:line="48" pos:column="25"/></name><operator pos:line="48" pos:column="25">-&gt;<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="27">cfg_quota<pos:position pos:line="48" pos:column="36"/></name><operator pos:line="48" pos:column="36">-&gt;<pos:position pos:line="48" pos:column="41"/></operator><name pos:line="48" pos:column="38">interval<pos:position pos:line="48" pos:column="46"/></name><operator pos:line="48" pos:column="46">.<pos:position pos:line="48" pos:column="47"/></operator><name pos:line="48" pos:column="47">interval<pos:position pos:line="48" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="51" pos:column="5">value<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <call><name pos:line="51" pos:column="13">na_child_get_uint64<pos:position pos:line="51" pos:column="32"/></name><argument_list pos:line="51" pos:column="32">(<argument><expr><name pos:line="51" pos:column="33">elem_quota<pos:position pos:line="51" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="45">"files-used"<pos:position pos:line="51" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="59">UINT64_MAX<pos:position pos:line="51" pos:column="69"/></name></expr></argument>)<pos:position pos:line="51" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="71"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">value<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">!=<pos:position pos:line="52" pos:column="17"/></operator> <name pos:line="52" pos:column="18">UINT64_MAX<pos:position pos:line="52" pos:column="28"/></name></expr>)<pos:position pos:line="52" pos:column="29"/></condition><then pos:line="52" pos:column="29"> <block pos:line="52" pos:column="30">{
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">submit_double<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><name><name pos:line="53" pos:column="21">host<pos:position pos:line="53" pos:column="25"/></name><operator pos:line="53" pos:column="25">-&gt;<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="27">name<pos:position pos:line="53" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="33">plugin_instance<pos:position pos:line="53" pos:column="48"/></name></expr></argument>,
                    <comment type="block" pos:line="54" pos:column="21">/* type = */</comment> <argument><expr><literal type="string" pos:line="54" pos:column="34">"files"<pos:position pos:line="54" pos:column="41"/></literal></expr></argument>, <comment type="block" pos:line="54" pos:column="43">/* type instance = */</comment> <argument><expr><name pos:line="54" pos:column="65">NULL<pos:position pos:line="54" pos:column="69"/></name></expr></argument>,
                    <argument><expr><operator pos:line="55" pos:column="21">(<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="22">double<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">)<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="29">value<pos:position pos:line="55" pos:column="34"/></name></expr></argument>, <comment type="block" pos:line="55" pos:column="36">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="55" pos:column="54">0<pos:position pos:line="55" pos:column="55"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="56" pos:column="21">host<pos:position pos:line="56" pos:column="25"/></name><operator pos:line="56" pos:column="25">-&gt;<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="27">cfg_quota<pos:position pos:line="56" pos:column="36"/></name><operator pos:line="56" pos:column="36">-&gt;<pos:position pos:line="56" pos:column="41"/></operator><name pos:line="56" pos:column="38">interval<pos:position pos:line="56" pos:column="46"/></name><operator pos:line="56" pos:column="46">.<pos:position pos:line="56" pos:column="47"/></operator><name pos:line="56" pos:column="47">interval<pos:position pos:line="56" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
  }<pos:position pos:line="58" pos:column="4"/></block></for> <comment type="block" pos:line="58" pos:column="5">/* for (elem_quota) */</comment>

  <return pos:line="60" pos:column="3">return <expr><literal type="number" pos:line="60" pos:column="10">0<pos:position pos:line="60" pos:column="11"/></literal></expr>;<pos:position pos:line="60" pos:column="12"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

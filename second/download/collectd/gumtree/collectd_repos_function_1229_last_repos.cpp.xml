<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1229_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tss2_config<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">key<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">value<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list> <block pos:line="1" pos:column="60">{
  <comment type="block" pos:line="2" pos:column="3">/*
   * Interpret configuration values
   */</comment>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">strcasecmp<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><literal type="string" pos:line="5" pos:column="18">"Host"<pos:position pos:line="5" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="26">key<pos:position pos:line="5" pos:column="29"/></name></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call> <operator pos:line="5" pos:column="31">==<pos:position pos:line="5" pos:column="33"/></operator> <literal type="number" pos:line="5" pos:column="34">0<pos:position pos:line="5" pos:column="35"/></literal></expr>)<pos:position pos:line="5" pos:column="36"/></condition><then pos:line="5" pos:column="36"> <block pos:line="5" pos:column="37">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">temp<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">temp<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">strdup<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">value<pos:position pos:line="8" pos:column="24"/></name></expr></argument>)<pos:position pos:line="8" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">temp<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">==<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">NULL<pos:position pos:line="9" pos:column="21"/></name></expr>)<pos:position pos:line="9" pos:column="22"/></condition><then pos:line="9" pos:column="22"> <block pos:line="9" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">ERROR<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><literal type="string" pos:line="10" pos:column="13">"teamspeak2 plugin: strdup failed."<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
      <return pos:line="11" pos:column="7">return <expr><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal></expr>;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">sfree<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">config_host<pos:position pos:line="13" pos:column="22"/></name></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">config_host<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">temp<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then> <elseif pos:line="15" pos:column="5">else <if pos:line="15" pos:column="10">if <condition pos:line="15" pos:column="13">(<expr><call><name pos:line="15" pos:column="14">strcasecmp<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><literal type="string" pos:line="15" pos:column="25">"Port"<pos:position pos:line="15" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="33">key<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call> <operator pos:line="15" pos:column="38">==<pos:position pos:line="15" pos:column="40"/></operator> <literal type="number" pos:line="15" pos:column="41">0<pos:position pos:line="15" pos:column="42"/></literal></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43"> <block pos:line="15" pos:column="44">{
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier></type><name pos:line="16" pos:column="11">temp<pos:position pos:line="16" pos:column="15"/></name></decl>;<pos:position pos:line="16" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">temp<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <call><name pos:line="18" pos:column="12">strdup<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">value<pos:position pos:line="18" pos:column="24"/></name></expr></argument>)<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">temp<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">==<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">NULL<pos:position pos:line="19" pos:column="21"/></name></expr>)<pos:position pos:line="19" pos:column="22"/></condition><then pos:line="19" pos:column="22"> <block pos:line="19" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">ERROR<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><literal type="string" pos:line="20" pos:column="13">"teamspeak2 plugin: strdup failed."<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>
      <return pos:line="21" pos:column="7">return <expr><literal type="number" pos:line="21" pos:column="14">1<pos:position pos:line="21" pos:column="15"/></literal></expr>;<pos:position pos:line="21" pos:column="16"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">sfree<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><name pos:line="23" pos:column="11">config_port<pos:position pos:line="23" pos:column="22"/></name></expr></argument>)<pos:position pos:line="23" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">config_port<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">temp<pos:position pos:line="24" pos:column="23"/></name></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if></elseif> <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><call><name pos:line="25" pos:column="14">strcasecmp<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><literal type="string" pos:line="25" pos:column="25">"Server"<pos:position pos:line="25" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">key<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call> <operator pos:line="25" pos:column="40">==<pos:position pos:line="25" pos:column="42"/></operator> <literal type="number" pos:line="25" pos:column="43">0<pos:position pos:line="25" pos:column="44"/></literal></expr>)<pos:position pos:line="25" pos:column="45"/></condition><then pos:line="25" pos:column="45"> <block pos:line="25" pos:column="46">{
    <comment type="block" pos:line="26" pos:column="5">/* Server variable found */</comment>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">status<pos:position pos:line="27" pos:column="15"/></name></decl>;<pos:position pos:line="27" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="29" pos:column="5">status<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">tss2_add_vserver<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><call><name pos:line="29" pos:column="31">atoi<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">value<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">status<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">!=<pos:position pos:line="30" pos:column="18"/></operator> <literal type="number" pos:line="30" pos:column="19">0<pos:position pos:line="30" pos:column="20"/></literal></expr>)<pos:position pos:line="30" pos:column="21"/></condition><then pos:line="30" pos:column="21">
      <block type="pseudo"><return pos:line="31" pos:column="7">return <expr><literal type="number" pos:line="31" pos:column="14">1<pos:position pos:line="31" pos:column="15"/></literal></expr>;<pos:position pos:line="31" pos:column="16"/></return></block></then></if>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if></elseif> <else pos:line="32" pos:column="5">else <block pos:line="32" pos:column="10">{
    <comment type="block" pos:line="33" pos:column="5">/* Unknown variable found */</comment>
    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">-<pos:position pos:line="34" pos:column="13"/></operator><literal type="number" pos:line="34" pos:column="13">1<pos:position pos:line="34" pos:column="14"/></literal></expr>;<pos:position pos:line="34" pos:column="15"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></else></if>

  <return pos:line="37" pos:column="3">return <expr><literal type="number" pos:line="37" pos:column="10">0<pos:position pos:line="37" pos:column="11"/></literal></expr>;<pos:position pos:line="37" pos:column="12"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1761_collectd-4.9.1.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">TC_GET_TARGET<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">STRUCT_ENTRY<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">ce<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="2" pos:column="27">TC_HANDLE_T<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">handle<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">STRUCT_ENTRY<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">e<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><operator pos:line="4" pos:column="27">(<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">STRUCT_ENTRY<pos:position pos:line="4" pos:column="40"/></name> <operator pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></operator><operator pos:line="4" pos:column="42">)<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="43">ce<pos:position pos:line="4" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">rule_head<pos:position pos:line="5" pos:column="25"/></name></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">r<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><call><name pos:line="5" pos:column="31">container_of<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">(<argument><expr><name pos:line="5" pos:column="44">e<pos:position pos:line="5" pos:column="45"/></name></expr></argument>, <argument><expr pos:line="5" pos:column="47">struct <name pos:line="5" pos:column="54">rule_head<pos:position pos:line="5" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="65">entry<pos:position pos:line="5" pos:column="70"/></name><index pos:line="5" pos:column="70">[<expr><literal type="number" pos:line="5" pos:column="71">0<pos:position pos:line="5" pos:column="72"/></literal></expr>]<pos:position pos:line="5" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="5" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="75"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">iptc_fn<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">TC_GET_TARGET<pos:position pos:line="7" pos:column="32"/></name></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>

	<switch pos:line="9" pos:column="9">switch<condition pos:line="9" pos:column="15">(<expr><name><name pos:line="9" pos:column="16">r<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">type<pos:position pos:line="9" pos:column="23"/></name></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition> <block pos:line="9" pos:column="25">{
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">int<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">spos<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
		<case pos:line="11" pos:column="17">case <expr><name pos:line="11" pos:column="22">IPTCC_R_FALLTHROUGH<pos:position pos:line="11" pos:column="41"/></name></expr>:<pos:position pos:line="11" pos:column="42"/></case>
			<return pos:line="12" pos:column="25">return <expr><literal type="string" pos:line="12" pos:column="32">""<pos:position pos:line="12" pos:column="34"/></literal></expr>;<pos:position pos:line="12" pos:column="35"/></return>
			<break pos:line="13" pos:column="25">break;<pos:position pos:line="13" pos:column="31"/></break>
		<case pos:line="14" pos:column="17">case <expr><name pos:line="14" pos:column="22">IPTCC_R_JUMP<pos:position pos:line="14" pos:column="34"/></name></expr>:<pos:position pos:line="14" pos:column="35"/></case>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">DEBUGP<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><literal type="string" pos:line="15" pos:column="32">"r=%p, jump=%p, name=`%s'\n"<pos:position pos:line="15" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="62">r<pos:position pos:line="15" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="65">r<pos:position pos:line="15" pos:column="66"/></name><operator pos:line="15" pos:column="66">-&gt;<pos:position pos:line="15" pos:column="71"/></operator><name pos:line="15" pos:column="68">jump<pos:position pos:line="15" pos:column="72"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="74">r<pos:position pos:line="15" pos:column="75"/></name><operator pos:line="15" pos:column="75">-&gt;<pos:position pos:line="15" pos:column="80"/></operator><name pos:line="15" pos:column="77">jump<pos:position pos:line="15" pos:column="81"/></name><operator pos:line="15" pos:column="81">-&gt;<pos:position pos:line="15" pos:column="86"/></operator><name pos:line="15" pos:column="83">name<pos:position pos:line="15" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="89"/></expr_stmt>
			<return pos:line="16" pos:column="25">return <expr><name><name pos:line="16" pos:column="32">r<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">jump<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">name<pos:position pos:line="16" pos:column="45"/></name></name></expr>;<pos:position pos:line="16" pos:column="46"/></return>
			<break pos:line="17" pos:column="25">break;<pos:position pos:line="17" pos:column="31"/></break>
		<case pos:line="18" pos:column="17">case <expr><name pos:line="18" pos:column="22">IPTCC_R_STANDARD<pos:position pos:line="18" pos:column="38"/></name></expr>:<pos:position pos:line="18" pos:column="39"/></case>
			<expr_stmt><expr><name pos:line="19" pos:column="25">spos<pos:position pos:line="19" pos:column="29"/></name> <operator pos:line="19" pos:column="30">=<pos:position pos:line="19" pos:column="31"/></operator> <operator pos:line="19" pos:column="32">*<pos:position pos:line="19" pos:column="33"/></operator><operator pos:line="19" pos:column="33">(<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">int<pos:position pos:line="19" pos:column="37"/></name> <operator pos:line="19" pos:column="38">*<pos:position pos:line="19" pos:column="39"/></operator><operator pos:line="19" pos:column="39">)<pos:position pos:line="19" pos:column="40"/></operator><call><name pos:line="19" pos:column="40">GET_TARGET<pos:position pos:line="19" pos:column="50"/></name><argument_list pos:line="19" pos:column="50">(<argument><expr><name pos:line="19" pos:column="51">e<pos:position pos:line="19" pos:column="52"/></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call><operator pos:line="19" pos:column="53">-&gt;<pos:position pos:line="19" pos:column="58"/></operator><name pos:line="19" pos:column="55">data<pos:position pos:line="19" pos:column="59"/></name></expr>;<pos:position pos:line="19" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">DEBUGP<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><literal type="string" pos:line="20" pos:column="32">"r=%p, spos=%d'\n"<pos:position pos:line="20" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="52">r<pos:position pos:line="20" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">spos<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>
			<return pos:line="21" pos:column="25">return <expr><call><name pos:line="21" pos:column="32">standard_target_map<pos:position pos:line="21" pos:column="51"/></name><argument_list pos:line="21" pos:column="51">(<argument><expr><name pos:line="21" pos:column="52">spos<pos:position pos:line="21" pos:column="56"/></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></return>
			<break pos:line="22" pos:column="25">break;<pos:position pos:line="22" pos:column="31"/></break>
		<case pos:line="23" pos:column="17">case <expr><name pos:line="23" pos:column="22">IPTCC_R_MODULE<pos:position pos:line="23" pos:column="36"/></name></expr>:<pos:position pos:line="23" pos:column="37"/></case>
			<return pos:line="24" pos:column="25">return <expr><call><name pos:line="24" pos:column="32">GET_TARGET<pos:position pos:line="24" pos:column="42"/></name><argument_list pos:line="24" pos:column="42">(<argument><expr><name pos:line="24" pos:column="43">e<pos:position pos:line="24" pos:column="44"/></name></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name><name pos:line="24" pos:column="47">u<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">.<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="49">user<pos:position pos:line="24" pos:column="53"/></name><operator pos:line="24" pos:column="53">.<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="54">name<pos:position pos:line="24" pos:column="58"/></name></name></expr>;<pos:position pos:line="24" pos:column="59"/></return>
			<break pos:line="25" pos:column="25">break;<pos:position pos:line="25" pos:column="31"/></break>
	}<pos:position pos:line="26" pos:column="10"/></block></switch>
	<return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

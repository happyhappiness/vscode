<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1373_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mc_handle_metric<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">buffer<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">size_t<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">buffer_size<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <comment type="block" pos:line="1" pos:column="63">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">XDR<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">xdr<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">Ganglia_msg_formats<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">format<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">xdrmem_create<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><operator pos:line="6" pos:column="17">&amp;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="18">xdr<pos:position pos:line="6" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">buffer<pos:position pos:line="6" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="31">buffer_size<pos:position pos:line="6" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="44">XDR_DECODE<pos:position pos:line="6" pos:column="54"/></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">xdr_Ganglia_msg_formats<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><operator pos:line="8" pos:column="27">&amp;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="28">xdr<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="33">&amp;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="34">format<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">xdr_setpos<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><operator pos:line="9" pos:column="14">&amp;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="15">xdr<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>

  <switch pos:line="11" pos:column="3">switch <condition pos:line="11" pos:column="10">(<expr><name pos:line="11" pos:column="11">format<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition> <block pos:line="11" pos:column="19">{
  <case pos:line="12" pos:column="3">case <expr><name pos:line="12" pos:column="8">gmetric_ushort<pos:position pos:line="12" pos:column="22"/></name></expr>:<pos:position pos:line="12" pos:column="23"/></case>
  <case pos:line="13" pos:column="3">case <expr><name pos:line="13" pos:column="8">gmetric_short<pos:position pos:line="13" pos:column="21"/></name></expr>:<pos:position pos:line="13" pos:column="22"/></case>
  <case pos:line="14" pos:column="3">case <expr><name pos:line="14" pos:column="8">gmetric_int<pos:position pos:line="14" pos:column="19"/></name></expr>:<pos:position pos:line="14" pos:column="20"/></case>
  <case pos:line="15" pos:column="3">case <expr><name pos:line="15" pos:column="8">gmetric_uint<pos:position pos:line="15" pos:column="20"/></name></expr>:<pos:position pos:line="15" pos:column="21"/></case>
  <case pos:line="16" pos:column="3">case <expr><name pos:line="16" pos:column="8">gmetric_string<pos:position pos:line="16" pos:column="22"/></name></expr>:<pos:position pos:line="16" pos:column="23"/></case>
  <case pos:line="17" pos:column="3">case <expr><name pos:line="17" pos:column="8">gmetric_float<pos:position pos:line="17" pos:column="21"/></name></expr>:<pos:position pos:line="17" pos:column="22"/></case>
  <case pos:line="18" pos:column="3">case <expr><name pos:line="18" pos:column="8">gmetric_double<pos:position pos:line="18" pos:column="22"/></name></expr>:<pos:position pos:line="18" pos:column="23"/></case> <block pos:line="18" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">Ganglia_value_msg<pos:position pos:line="19" pos:column="22"/></name></type> <name pos:line="19" pos:column="23">msg<pos:position pos:line="19" pos:column="26"/></name> <init pos:line="19" pos:column="27">= <expr><block pos:line="19" pos:column="29">{<expr><literal type="number" pos:line="19" pos:column="30">0<pos:position pos:line="19" pos:column="31"/></literal></expr>}<pos:position pos:line="19" pos:column="32"/></block></expr></init></decl>;<pos:position pos:line="19" pos:column="33"/></decl_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name pos:line="21" pos:column="9">xdr_Ganglia_value_msg<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><operator pos:line="21" pos:column="31">&amp;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="32">xdr<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="37">&amp;<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="38">msg<pos:position pos:line="21" pos:column="41"/></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="43"/></condition><then pos:line="21" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="7">mc_handle_value_msg<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><operator pos:line="22" pos:column="27">&amp;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="28">msg<pos:position pos:line="22" pos:column="31"/></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt></block></then></if>
    <break pos:line="23" pos:column="5">break;<pos:position pos:line="23" pos:column="11"/></break>
  }<pos:position pos:line="24" pos:column="4"/></block>

  <case pos:line="26" pos:column="3">case <expr><name pos:line="26" pos:column="8">gmetadata_full<pos:position pos:line="26" pos:column="22"/></name></expr>:<pos:position pos:line="26" pos:column="23"/></case>
  <case pos:line="27" pos:column="3">case <expr><name pos:line="27" pos:column="8">gmetadata_request<pos:position pos:line="27" pos:column="25"/></name></expr>:<pos:position pos:line="27" pos:column="26"/></case> <block pos:line="27" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">Ganglia_metadata_msg<pos:position pos:line="28" pos:column="25"/></name></type> <name pos:line="28" pos:column="26">msg<pos:position pos:line="28" pos:column="29"/></name> <init pos:line="28" pos:column="30">= <expr><block pos:line="28" pos:column="32">{<expr><literal type="number" pos:line="28" pos:column="33">0<pos:position pos:line="28" pos:column="34"/></literal></expr>}<pos:position pos:line="28" pos:column="35"/></block></expr></init></decl>;<pos:position pos:line="28" pos:column="36"/></decl_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><call><name pos:line="29" pos:column="9">xdr_Ganglia_metadata_msg<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><operator pos:line="29" pos:column="34">&amp;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="35">xdr<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="40">&amp;<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="41">msg<pos:position pos:line="29" pos:column="44"/></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="46"/></condition><then pos:line="29" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="7">mc_handle_metadata_msg<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><operator pos:line="30" pos:column="30">&amp;<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="31">msg<pos:position pos:line="30" pos:column="34"/></name></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt></block></then></if>
    <break pos:line="31" pos:column="5">break;<pos:position pos:line="31" pos:column="11"/></break>
  }<pos:position pos:line="32" pos:column="4"/></block>

  <default pos:line="34" pos:column="3">default:<pos:position pos:line="34" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">DEBUG<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><literal type="string" pos:line="35" pos:column="11">"gmond plugin: Unknown format: %i"<pos:position pos:line="35" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="47">format<pos:position pos:line="35" pos:column="53"/></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><operator pos:line="36" pos:column="13">-<pos:position pos:line="36" pos:column="14"/></operator><literal type="number" pos:line="36" pos:column="14">1<pos:position pos:line="36" pos:column="15"/></literal><operator pos:line="36" pos:column="15">)<pos:position pos:line="36" pos:column="16"/></operator></expr>;<pos:position pos:line="36" pos:column="17"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></switch> <comment type="block" pos:line="37" pos:column="5">/* switch (format) */</comment>

  <return pos:line="39" pos:column="3">return <expr><operator pos:line="39" pos:column="10">(<pos:position pos:line="39" pos:column="11"/></operator><literal type="number" pos:line="39" pos:column="11">0<pos:position pos:line="39" pos:column="12"/></literal><operator pos:line="39" pos:column="12">)<pos:position pos:line="39" pos:column="13"/></operator></expr>;<pos:position pos:line="39" pos:column="14"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

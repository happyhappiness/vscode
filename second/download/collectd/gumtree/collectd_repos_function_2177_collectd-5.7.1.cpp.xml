<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2177_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wg_config_node<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">oconfig_item_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ci<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <block pos:line="1" pos:column="47">{
  <decl_stmt><decl><type><name><name pos:line="2" pos:column="3">struct<pos:position pos:line="2" pos:column="9"/></name> <name pos:line="2" pos:column="10">wg_callback<pos:position pos:line="2" pos:column="21"/></name></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">cb<pos:position pos:line="2" pos:column="25"/></name></decl>;<pos:position pos:line="2" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">callback_name<pos:position pos:line="3" pos:column="21"/></name><index pos:line="3" pos:column="21">[<expr><name pos:line="3" pos:column="22">DATA_MAX_NAME_LEN<pos:position pos:line="3" pos:column="39"/></name></expr>]<pos:position pos:line="3" pos:column="40"/></index></name></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">cb<pos:position pos:line="6" pos:column="5"/></name> <operator pos:line="6" pos:column="6">=<pos:position pos:line="6" pos:column="7"/></operator> <call><name pos:line="6" pos:column="8">calloc<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">(<argument><expr><literal type="number" pos:line="6" pos:column="15">1<pos:position pos:line="6" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="18">sizeof<argument_list pos:line="6" pos:column="24">(<argument><expr><operator pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">cb<pos:position pos:line="6" pos:column="28"/></name></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">cb<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">==<pos:position pos:line="7" pos:column="12"/></operator> <name pos:line="7" pos:column="13">NULL<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18"> <block pos:line="7" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"write_graphite plugin: calloc failed."<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">-<pos:position pos:line="9" pos:column="14"/></operator><literal type="number" pos:line="9" pos:column="14">1<pos:position pos:line="9" pos:column="15"/></literal><operator pos:line="9" pos:column="15">)<pos:position pos:line="9" pos:column="16"/></operator></expr>;<pos:position pos:line="9" pos:column="17"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">cb<pos:position pos:line="11" pos:column="5"/></name><operator pos:line="11" pos:column="5">-&gt;<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="7">sock_fd<pos:position pos:line="11" pos:column="14"/></name></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <operator pos:line="11" pos:column="17">-<pos:position pos:line="11" pos:column="18"/></operator><literal type="number" pos:line="11" pos:column="18">1<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">cb<pos:position pos:line="12" pos:column="5"/></name><operator pos:line="12" pos:column="5">-&gt;<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="7">name<pos:position pos:line="12" pos:column="11"/></name></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <name pos:line="12" pos:column="14">NULL<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">cb<pos:position pos:line="13" pos:column="5"/></name><operator pos:line="13" pos:column="5">-&gt;<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="7">node<pos:position pos:line="13" pos:column="11"/></name></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">strdup<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">WG_DEFAULT_NODE<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">cb<pos:position pos:line="14" pos:column="5"/></name><operator pos:line="14" pos:column="5">-&gt;<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="7">service<pos:position pos:line="14" pos:column="14"/></name></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <call><name pos:line="14" pos:column="17">strdup<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">WG_DEFAULT_SERVICE<pos:position pos:line="14" pos:column="42"/></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">cb<pos:position pos:line="15" pos:column="5"/></name><operator pos:line="15" pos:column="5">-&gt;<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="7">protocol<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">strdup<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">WG_DEFAULT_PROTOCOL<pos:position pos:line="15" pos:column="44"/></name></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">cb<pos:position pos:line="16" pos:column="5"/></name><operator pos:line="16" pos:column="5">-&gt;<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="7">last_reconnect_time<pos:position pos:line="16" pos:column="26"/></name></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <call><name pos:line="16" pos:column="29">cdtime<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">()<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">cb<pos:position pos:line="17" pos:column="5"/></name><operator pos:line="17" pos:column="5">-&gt;<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="7">reconnect_interval<pos:position pos:line="17" pos:column="25"/></name></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <literal type="number" pos:line="17" pos:column="28">0<pos:position pos:line="17" pos:column="29"/></literal></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">cb<pos:position pos:line="18" pos:column="5"/></name><operator pos:line="18" pos:column="5">-&gt;<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="7">reconnect_interval_reached<pos:position pos:line="18" pos:column="33"/></name></name> <operator pos:line="18" pos:column="34">=<pos:position pos:line="18" pos:column="35"/></operator> <literal type="number" pos:line="18" pos:column="36">0<pos:position pos:line="18" pos:column="37"/></literal></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">cb<pos:position pos:line="19" pos:column="5"/></name><operator pos:line="19" pos:column="5">-&gt;<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="7">log_send_errors<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">WG_DEFAULT_LOG_SEND_ERRORS<pos:position pos:line="19" pos:column="51"/></name></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">cb<pos:position pos:line="20" pos:column="5"/></name><operator pos:line="20" pos:column="5">-&gt;<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="7">prefix<pos:position pos:line="20" pos:column="13"/></name></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <name pos:line="20" pos:column="16">NULL<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">cb<pos:position pos:line="21" pos:column="5"/></name><operator pos:line="21" pos:column="5">-&gt;<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="7">postfix<pos:position pos:line="21" pos:column="14"/></name></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">NULL<pos:position pos:line="21" pos:column="21"/></name></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">cb<pos:position pos:line="22" pos:column="5"/></name><operator pos:line="22" pos:column="5">-&gt;<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="7">escape_char<pos:position pos:line="22" pos:column="18"/></name></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">WG_DEFAULT_ESCAPE<pos:position pos:line="22" pos:column="38"/></name></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">cb<pos:position pos:line="23" pos:column="5"/></name><operator pos:line="23" pos:column="5">-&gt;<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="7">format_flags<pos:position pos:line="23" pos:column="19"/></name></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">GRAPHITE_STORE_RATES<pos:position pos:line="23" pos:column="42"/></name></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* FIXME: Legacy configuration syntax. */</comment>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><call><name pos:line="26" pos:column="7">strcasecmp<pos:position pos:line="26" pos:column="17"/></name><argument_list pos:line="26" pos:column="17">(<argument><expr><literal type="string" pos:line="26" pos:column="18">"Carbon"<pos:position pos:line="26" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="28">ci<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">key<pos:position pos:line="26" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call> <operator pos:line="26" pos:column="37">!=<pos:position pos:line="26" pos:column="39"/></operator> <literal type="number" pos:line="26" pos:column="40">0<pos:position pos:line="26" pos:column="41"/></literal></expr>)<pos:position pos:line="26" pos:column="42"/></condition><then pos:line="26" pos:column="42"> <block pos:line="26" pos:column="43">{
    <expr_stmt><expr><name pos:line="27" pos:column="5">status<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">cf_util_get_string<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">ci<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="37">&amp;<pos:position pos:line="27" pos:column="42"/></operator><name><name pos:line="27" pos:column="38">cb<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">-&gt;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="42">name<pos:position pos:line="27" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">status<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">!=<pos:position pos:line="28" pos:column="18"/></operator> <literal type="number" pos:line="28" pos:column="19">0<pos:position pos:line="28" pos:column="20"/></literal></expr>)<pos:position pos:line="28" pos:column="21"/></condition><then pos:line="28" pos:column="21"> <block pos:line="28" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">wg_callback_free<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name pos:line="29" pos:column="24">cb<pos:position pos:line="29" pos:column="26"/></name></expr></argument>)<pos:position pos:line="29" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
      <return pos:line="30" pos:column="7">return <expr><operator pos:line="30" pos:column="14">(<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">status<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">)<pos:position pos:line="30" pos:column="22"/></operator></expr>;<pos:position pos:line="30" pos:column="23"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">pthread_mutex_init<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><operator pos:line="34" pos:column="22">&amp;<pos:position pos:line="34" pos:column="27"/></operator><name><name pos:line="34" pos:column="23">cb<pos:position pos:line="34" pos:column="25"/></name><operator pos:line="34" pos:column="25">-&gt;<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="27">send_lock<pos:position pos:line="34" pos:column="36"/></name></name></expr></argument>, <comment type="block" pos:line="34" pos:column="38">/* attr = */</comment> <argument><expr><name pos:line="34" pos:column="51">NULL<pos:position pos:line="34" pos:column="55"/></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">C_COMPLAIN_INIT<pos:position pos:line="35" pos:column="18"/></name><argument_list pos:line="35" pos:column="18">(<argument><expr><operator pos:line="35" pos:column="19">&amp;<pos:position pos:line="35" pos:column="24"/></operator><name><name pos:line="35" pos:column="20">cb<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">-&gt;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="24">init_complaint<pos:position pos:line="35" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>

  <for pos:line="37" pos:column="3">for <control pos:line="37" pos:column="7">(<init><decl><type><name pos:line="37" pos:column="8">int<pos:position pos:line="37" pos:column="11"/></name></type> <name pos:line="37" pos:column="12">i<pos:position pos:line="37" pos:column="13"/></name> <init pos:line="37" pos:column="14">= <expr><literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="37" pos:column="18"/></init> <condition><expr><name pos:line="37" pos:column="19">i<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">&lt;<pos:position pos:line="37" pos:column="25"/></operator> <name><name pos:line="37" pos:column="23">ci<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">-&gt;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="27">children_num<pos:position pos:line="37" pos:column="39"/></name></name></expr>;<pos:position pos:line="37" pos:column="40"/></condition> <incr><expr><name pos:line="37" pos:column="41">i<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">++<pos:position pos:line="37" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="37" pos:column="45"/></control> <block pos:line="37" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">oconfig_item_t<pos:position pos:line="38" pos:column="19"/></name> <modifier pos:line="38" pos:column="20">*<pos:position pos:line="38" pos:column="21"/></modifier></type><name pos:line="38" pos:column="21">child<pos:position pos:line="38" pos:column="26"/></name> <init pos:line="38" pos:column="27">= <expr><name><name pos:line="38" pos:column="29">ci<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">-&gt;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="33">children<pos:position pos:line="38" pos:column="41"/></name></name> <operator pos:line="38" pos:column="42">+<pos:position pos:line="38" pos:column="43"/></operator> <name pos:line="38" pos:column="44">i<pos:position pos:line="38" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="38" pos:column="46"/></decl_stmt>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><call><name pos:line="40" pos:column="9">strcasecmp<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><literal type="string" pos:line="40" pos:column="20">"Host"<pos:position pos:line="40" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="28">child<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">key<pos:position pos:line="40" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call> <operator pos:line="40" pos:column="40">==<pos:position pos:line="40" pos:column="42"/></operator> <literal type="number" pos:line="40" pos:column="43">0<pos:position pos:line="40" pos:column="44"/></literal></expr>)<pos:position pos:line="40" pos:column="45"/></condition><then pos:line="40" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="7">cf_util_get_string<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">child<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="33">&amp;<pos:position pos:line="41" pos:column="38"/></operator><name><name pos:line="41" pos:column="34">cb<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">-&gt;<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="38">node<pos:position pos:line="41" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt></block></then>
    <elseif pos:line="42" pos:column="5">else <if pos:line="42" pos:column="10">if <condition pos:line="42" pos:column="13">(<expr><call><name pos:line="42" pos:column="14">strcasecmp<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><literal type="string" pos:line="42" pos:column="25">"Port"<pos:position pos:line="42" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="33">child<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">-&gt;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="40">key<pos:position pos:line="42" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call> <operator pos:line="42" pos:column="45">==<pos:position pos:line="42" pos:column="47"/></operator> <literal type="number" pos:line="42" pos:column="48">0<pos:position pos:line="42" pos:column="49"/></literal></expr>)<pos:position pos:line="42" pos:column="50"/></condition><then pos:line="42" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="7">cf_util_get_service<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">child<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="34">&amp;<pos:position pos:line="43" pos:column="39"/></operator><name><name pos:line="43" pos:column="35">cb<pos:position pos:line="43" pos:column="37"/></name><operator pos:line="43" pos:column="37">-&gt;<pos:position pos:line="43" pos:column="42"/></operator><name pos:line="43" pos:column="39">service<pos:position pos:line="43" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="48"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="44" pos:column="5">else <if pos:line="44" pos:column="10">if <condition pos:line="44" pos:column="13">(<expr><call><name pos:line="44" pos:column="14">strcasecmp<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><literal type="string" pos:line="44" pos:column="25">"Protocol"<pos:position pos:line="44" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="37">child<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">-&gt;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="44">key<pos:position pos:line="44" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="48"/></argument_list></call> <operator pos:line="44" pos:column="49">==<pos:position pos:line="44" pos:column="51"/></operator> <literal type="number" pos:line="44" pos:column="52">0<pos:position pos:line="44" pos:column="53"/></literal></expr>)<pos:position pos:line="44" pos:column="54"/></condition><then pos:line="44" pos:column="54"> <block pos:line="44" pos:column="55">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">cf_util_get_string<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">child<pos:position pos:line="45" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="33">&amp;<pos:position pos:line="45" pos:column="38"/></operator><name><name pos:line="45" pos:column="34">cb<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">-&gt;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="38">protocol<pos:position pos:line="45" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="48"/></expr_stmt>

      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><call><name pos:line="47" pos:column="11">strcasecmp<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><literal type="string" pos:line="47" pos:column="22">"UDP"<pos:position pos:line="47" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="29">cb<pos:position pos:line="47" pos:column="31"/></name><operator pos:line="47" pos:column="31">-&gt;<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="33">protocol<pos:position pos:line="47" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="42"/></argument_list></call> <operator pos:line="47" pos:column="43">!=<pos:position pos:line="47" pos:column="45"/></operator> <literal type="number" pos:line="47" pos:column="46">0<pos:position pos:line="47" pos:column="47"/></literal> <operator pos:line="47" pos:column="48">&amp;&amp;<pos:position pos:line="47" pos:column="58"/></operator>
          <call><name pos:line="48" pos:column="11">strcasecmp<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><literal type="string" pos:line="48" pos:column="22">"TCP"<pos:position pos:line="48" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="29">cb<pos:position pos:line="48" pos:column="31"/></name><operator pos:line="48" pos:column="31">-&gt;<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="33">protocol<pos:position pos:line="48" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="42"/></argument_list></call> <operator pos:line="48" pos:column="43">!=<pos:position pos:line="48" pos:column="45"/></operator> <literal type="number" pos:line="48" pos:column="46">0<pos:position pos:line="48" pos:column="47"/></literal></expr>)<pos:position pos:line="48" pos:column="48"/></condition><then pos:line="48" pos:column="48"> <block pos:line="48" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">ERROR<pos:position pos:line="49" pos:column="14"/></name><argument_list pos:line="49" pos:column="14">(<argument><expr><literal type="string" pos:line="49" pos:column="15">"write_graphite plugin: Unknown protocol (%s)"<pos:position pos:line="49" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="63">cb<pos:position pos:line="49" pos:column="65"/></name><operator pos:line="49" pos:column="65">-&gt;<pos:position pos:line="49" pos:column="70"/></operator><name pos:line="49" pos:column="67">protocol<pos:position pos:line="49" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><name pos:line="50" pos:column="9">status<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <operator pos:line="50" pos:column="18">-<pos:position pos:line="50" pos:column="19"/></operator><literal type="number" pos:line="50" pos:column="19">1<pos:position pos:line="50" pos:column="20"/></literal></expr>;<pos:position pos:line="50" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="51" pos:column="8"/></block></then></if>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if></elseif> <elseif pos:line="52" pos:column="7">else <if pos:line="52" pos:column="12">if <condition pos:line="52" pos:column="15">(<expr><call><name pos:line="52" pos:column="16">strcasecmp<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><literal type="string" pos:line="52" pos:column="27">"ReconnectInterval"<pos:position pos:line="52" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="48">child<pos:position pos:line="52" pos:column="53"/></name><operator pos:line="52" pos:column="53">-&gt;<pos:position pos:line="52" pos:column="58"/></operator><name pos:line="52" pos:column="55">key<pos:position pos:line="52" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="59"/></argument_list></call> <operator pos:line="52" pos:column="60">==<pos:position pos:line="52" pos:column="62"/></operator> <literal type="number" pos:line="52" pos:column="63">0<pos:position pos:line="52" pos:column="64"/></literal></expr>)<pos:position pos:line="52" pos:column="65"/></condition><then pos:line="52" pos:column="65">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="7">cf_util_get_cdtime<pos:position pos:line="53" pos:column="25"/></name><argument_list pos:line="53" pos:column="25">(<argument><expr><name pos:line="53" pos:column="26">child<pos:position pos:line="53" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="33">&amp;<pos:position pos:line="53" pos:column="38"/></operator><name><name pos:line="53" pos:column="34">cb<pos:position pos:line="53" pos:column="36"/></name><operator pos:line="53" pos:column="36">-&gt;<pos:position pos:line="53" pos:column="41"/></operator><name pos:line="53" pos:column="38">reconnect_interval<pos:position pos:line="53" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="58"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="54" pos:column="5">else <if pos:line="54" pos:column="10">if <condition pos:line="54" pos:column="13">(<expr><call><name pos:line="54" pos:column="14">strcasecmp<pos:position pos:line="54" pos:column="24"/></name><argument_list pos:line="54" pos:column="24">(<argument><expr><literal type="string" pos:line="54" pos:column="25">"LogSendErrors"<pos:position pos:line="54" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="42">child<pos:position pos:line="54" pos:column="47"/></name><operator pos:line="54" pos:column="47">-&gt;<pos:position pos:line="54" pos:column="52"/></operator><name pos:line="54" pos:column="49">key<pos:position pos:line="54" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="53"/></argument_list></call> <operator pos:line="54" pos:column="54">==<pos:position pos:line="54" pos:column="56"/></operator> <literal type="number" pos:line="54" pos:column="57">0<pos:position pos:line="54" pos:column="58"/></literal></expr>)<pos:position pos:line="54" pos:column="59"/></condition><then pos:line="54" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="7">cf_util_get_boolean<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><name pos:line="55" pos:column="27">child<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="34">&amp;<pos:position pos:line="55" pos:column="39"/></operator><name><name pos:line="55" pos:column="35">cb<pos:position pos:line="55" pos:column="37"/></name><operator pos:line="55" pos:column="37">-&gt;<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="39">log_send_errors<pos:position pos:line="55" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="56"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="56" pos:column="5">else <if pos:line="56" pos:column="10">if <condition pos:line="56" pos:column="13">(<expr><call><name pos:line="56" pos:column="14">strcasecmp<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><literal type="string" pos:line="56" pos:column="25">"Prefix"<pos:position pos:line="56" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="35">child<pos:position pos:line="56" pos:column="40"/></name><operator pos:line="56" pos:column="40">-&gt;<pos:position pos:line="56" pos:column="45"/></operator><name pos:line="56" pos:column="42">key<pos:position pos:line="56" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="46"/></argument_list></call> <operator pos:line="56" pos:column="47">==<pos:position pos:line="56" pos:column="49"/></operator> <literal type="number" pos:line="56" pos:column="50">0<pos:position pos:line="56" pos:column="51"/></literal></expr>)<pos:position pos:line="56" pos:column="52"/></condition><then pos:line="56" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="7">cf_util_get_string<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name pos:line="57" pos:column="26">child<pos:position pos:line="57" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="33">&amp;<pos:position pos:line="57" pos:column="38"/></operator><name><name pos:line="57" pos:column="34">cb<pos:position pos:line="57" pos:column="36"/></name><operator pos:line="57" pos:column="36">-&gt;<pos:position pos:line="57" pos:column="41"/></operator><name pos:line="57" pos:column="38">prefix<pos:position pos:line="57" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="46"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="58" pos:column="5">else <if pos:line="58" pos:column="10">if <condition pos:line="58" pos:column="13">(<expr><call><name pos:line="58" pos:column="14">strcasecmp<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><literal type="string" pos:line="58" pos:column="25">"Postfix"<pos:position pos:line="58" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="36">child<pos:position pos:line="58" pos:column="41"/></name><operator pos:line="58" pos:column="41">-&gt;<pos:position pos:line="58" pos:column="46"/></operator><name pos:line="58" pos:column="43">key<pos:position pos:line="58" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call> <operator pos:line="58" pos:column="48">==<pos:position pos:line="58" pos:column="50"/></operator> <literal type="number" pos:line="58" pos:column="51">0<pos:position pos:line="58" pos:column="52"/></literal></expr>)<pos:position pos:line="58" pos:column="53"/></condition><then pos:line="58" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="7">cf_util_get_string<pos:position pos:line="59" pos:column="25"/></name><argument_list pos:line="59" pos:column="25">(<argument><expr><name pos:line="59" pos:column="26">child<pos:position pos:line="59" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="33">&amp;<pos:position pos:line="59" pos:column="38"/></operator><name><name pos:line="59" pos:column="34">cb<pos:position pos:line="59" pos:column="36"/></name><operator pos:line="59" pos:column="36">-&gt;<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="38">postfix<pos:position pos:line="59" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="47"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="60" pos:column="5">else <if pos:line="60" pos:column="10">if <condition pos:line="60" pos:column="13">(<expr><call><name pos:line="60" pos:column="14">strcasecmp<pos:position pos:line="60" pos:column="24"/></name><argument_list pos:line="60" pos:column="24">(<argument><expr><literal type="string" pos:line="60" pos:column="25">"StoreRates"<pos:position pos:line="60" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="39">child<pos:position pos:line="60" pos:column="44"/></name><operator pos:line="60" pos:column="44">-&gt;<pos:position pos:line="60" pos:column="49"/></operator><name pos:line="60" pos:column="46">key<pos:position pos:line="60" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="50"/></argument_list></call> <operator pos:line="60" pos:column="51">==<pos:position pos:line="60" pos:column="53"/></operator> <literal type="number" pos:line="60" pos:column="54">0<pos:position pos:line="60" pos:column="55"/></literal></expr>)<pos:position pos:line="60" pos:column="56"/></condition><then pos:line="60" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="7">cf_util_get_flag<pos:position pos:line="61" pos:column="23"/></name><argument_list pos:line="61" pos:column="23">(<argument><expr><name pos:line="61" pos:column="24">child<pos:position pos:line="61" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="31">&amp;<pos:position pos:line="61" pos:column="36"/></operator><name><name pos:line="61" pos:column="32">cb<pos:position pos:line="61" pos:column="34"/></name><operator pos:line="61" pos:column="34">-&gt;<pos:position pos:line="61" pos:column="39"/></operator><name pos:line="61" pos:column="36">format_flags<pos:position pos:line="61" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="50">GRAPHITE_STORE_RATES<pos:position pos:line="61" pos:column="70"/></name></expr></argument>)<pos:position pos:line="61" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="72"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="62" pos:column="5">else <if pos:line="62" pos:column="10">if <condition pos:line="62" pos:column="13">(<expr><call><name pos:line="62" pos:column="14">strcasecmp<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><literal type="string" pos:line="62" pos:column="25">"SeparateInstances"<pos:position pos:line="62" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="46">child<pos:position pos:line="62" pos:column="51"/></name><operator pos:line="62" pos:column="51">-&gt;<pos:position pos:line="62" pos:column="56"/></operator><name pos:line="62" pos:column="53">key<pos:position pos:line="62" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="57"/></argument_list></call> <operator pos:line="62" pos:column="58">==<pos:position pos:line="62" pos:column="60"/></operator> <literal type="number" pos:line="62" pos:column="61">0<pos:position pos:line="62" pos:column="62"/></literal></expr>)<pos:position pos:line="62" pos:column="63"/></condition><then pos:line="62" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="7">cf_util_get_flag<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><name pos:line="63" pos:column="24">child<pos:position pos:line="63" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="31">&amp;<pos:position pos:line="63" pos:column="36"/></operator><name><name pos:line="63" pos:column="32">cb<pos:position pos:line="63" pos:column="34"/></name><operator pos:line="63" pos:column="34">-&gt;<pos:position pos:line="63" pos:column="39"/></operator><name pos:line="63" pos:column="36">format_flags<pos:position pos:line="63" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="50">GRAPHITE_SEPARATE_INSTANCES<pos:position pos:line="63" pos:column="77"/></name></expr></argument>)<pos:position pos:line="63" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="79"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="64" pos:column="5">else <if pos:line="64" pos:column="10">if <condition pos:line="64" pos:column="13">(<expr><call><name pos:line="64" pos:column="14">strcasecmp<pos:position pos:line="64" pos:column="24"/></name><argument_list pos:line="64" pos:column="24">(<argument><expr><literal type="string" pos:line="64" pos:column="25">"AlwaysAppendDS"<pos:position pos:line="64" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="43">child<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">-&gt;<pos:position pos:line="64" pos:column="53"/></operator><name pos:line="64" pos:column="50">key<pos:position pos:line="64" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call> <operator pos:line="64" pos:column="55">==<pos:position pos:line="64" pos:column="57"/></operator> <literal type="number" pos:line="64" pos:column="58">0<pos:position pos:line="64" pos:column="59"/></literal></expr>)<pos:position pos:line="64" pos:column="60"/></condition><then pos:line="64" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="7">cf_util_get_flag<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><name pos:line="65" pos:column="24">child<pos:position pos:line="65" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="31">&amp;<pos:position pos:line="65" pos:column="36"/></operator><name><name pos:line="65" pos:column="32">cb<pos:position pos:line="65" pos:column="34"/></name><operator pos:line="65" pos:column="34">-&gt;<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="36">format_flags<pos:position pos:line="65" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="50">GRAPHITE_ALWAYS_APPEND_DS<pos:position pos:line="65" pos:column="75"/></name></expr></argument>)<pos:position pos:line="65" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="77"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="66" pos:column="5">else <if pos:line="66" pos:column="10">if <condition pos:line="66" pos:column="13">(<expr><call><name pos:line="66" pos:column="14">strcasecmp<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">(<argument><expr><literal type="string" pos:line="66" pos:column="25">"PreserveSeparator"<pos:position pos:line="66" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="46">child<pos:position pos:line="66" pos:column="51"/></name><operator pos:line="66" pos:column="51">-&gt;<pos:position pos:line="66" pos:column="56"/></operator><name pos:line="66" pos:column="53">key<pos:position pos:line="66" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="57"/></argument_list></call> <operator pos:line="66" pos:column="58">==<pos:position pos:line="66" pos:column="60"/></operator> <literal type="number" pos:line="66" pos:column="61">0<pos:position pos:line="66" pos:column="62"/></literal></expr>)<pos:position pos:line="66" pos:column="63"/></condition><then pos:line="66" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="7">cf_util_get_flag<pos:position pos:line="67" pos:column="23"/></name><argument_list pos:line="67" pos:column="23">(<argument><expr><name pos:line="67" pos:column="24">child<pos:position pos:line="67" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="31">&amp;<pos:position pos:line="67" pos:column="36"/></operator><name><name pos:line="67" pos:column="32">cb<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">-&gt;<pos:position pos:line="67" pos:column="39"/></operator><name pos:line="67" pos:column="36">format_flags<pos:position pos:line="67" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="50">GRAPHITE_PRESERVE_SEPARATOR<pos:position pos:line="67" pos:column="77"/></name></expr></argument>)<pos:position pos:line="67" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="79"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="68" pos:column="5">else <if pos:line="68" pos:column="10">if <condition pos:line="68" pos:column="13">(<expr><call><name pos:line="68" pos:column="14">strcasecmp<pos:position pos:line="68" pos:column="24"/></name><argument_list pos:line="68" pos:column="24">(<argument><expr><literal type="string" pos:line="68" pos:column="25">"DropDuplicateFields"<pos:position pos:line="68" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="48">child<pos:position pos:line="68" pos:column="53"/></name><operator pos:line="68" pos:column="53">-&gt;<pos:position pos:line="68" pos:column="58"/></operator><name pos:line="68" pos:column="55">key<pos:position pos:line="68" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="59"/></argument_list></call> <operator pos:line="68" pos:column="60">==<pos:position pos:line="68" pos:column="62"/></operator> <literal type="number" pos:line="68" pos:column="63">0<pos:position pos:line="68" pos:column="64"/></literal></expr>)<pos:position pos:line="68" pos:column="65"/></condition><then pos:line="68" pos:column="65">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="7">cf_util_get_flag<pos:position pos:line="69" pos:column="23"/></name><argument_list pos:line="69" pos:column="23">(<argument><expr><name pos:line="69" pos:column="24">child<pos:position pos:line="69" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="31">&amp;<pos:position pos:line="69" pos:column="36"/></operator><name><name pos:line="69" pos:column="32">cb<pos:position pos:line="69" pos:column="34"/></name><operator pos:line="69" pos:column="34">-&gt;<pos:position pos:line="69" pos:column="39"/></operator><name pos:line="69" pos:column="36">format_flags<pos:position pos:line="69" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="50">GRAPHITE_DROP_DUPE_FIELDS<pos:position pos:line="69" pos:column="75"/></name></expr></argument>)<pos:position pos:line="69" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="77"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="70" pos:column="5">else <if pos:line="70" pos:column="10">if <condition pos:line="70" pos:column="13">(<expr><call><name pos:line="70" pos:column="14">strcasecmp<pos:position pos:line="70" pos:column="24"/></name><argument_list pos:line="70" pos:column="24">(<argument><expr><literal type="string" pos:line="70" pos:column="25">"EscapeCharacter"<pos:position pos:line="70" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="44">child<pos:position pos:line="70" pos:column="49"/></name><operator pos:line="70" pos:column="49">-&gt;<pos:position pos:line="70" pos:column="54"/></operator><name pos:line="70" pos:column="51">key<pos:position pos:line="70" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="55"/></argument_list></call> <operator pos:line="70" pos:column="56">==<pos:position pos:line="70" pos:column="58"/></operator> <literal type="number" pos:line="70" pos:column="59">0<pos:position pos:line="70" pos:column="60"/></literal></expr>)<pos:position pos:line="70" pos:column="61"/></condition><then pos:line="70" pos:column="61">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="7">config_set_char<pos:position pos:line="71" pos:column="22"/></name><argument_list pos:line="71" pos:column="22">(<argument><expr><operator pos:line="71" pos:column="23">&amp;<pos:position pos:line="71" pos:column="28"/></operator><name><name pos:line="71" pos:column="24">cb<pos:position pos:line="71" pos:column="26"/></name><operator pos:line="71" pos:column="26">-&gt;<pos:position pos:line="71" pos:column="31"/></operator><name pos:line="71" pos:column="28">escape_char<pos:position pos:line="71" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="41">child<pos:position pos:line="71" pos:column="46"/></name></expr></argument>)<pos:position pos:line="71" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="48"/></expr_stmt></block></then></if></elseif>
    <else pos:line="72" pos:column="5">else <block pos:line="72" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">ERROR<pos:position pos:line="73" pos:column="12"/></name><argument_list pos:line="73" pos:column="12">(<argument><expr><literal type="string" pos:line="73" pos:column="13">"write_graphite plugin: Invalid configuration "<pos:position pos:line="73" pos:column="60"/></literal>
            <literal type="string" pos:line="74" pos:column="13">"option: %s."<pos:position pos:line="74" pos:column="26"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="75" pos:column="13">child<pos:position pos:line="75" pos:column="18"/></name><operator pos:line="75" pos:column="18">-&gt;<pos:position pos:line="75" pos:column="23"/></operator><name pos:line="75" pos:column="20">key<pos:position pos:line="75" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="76" pos:column="7">status<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">=<pos:position pos:line="76" pos:column="15"/></operator> <operator pos:line="76" pos:column="16">-<pos:position pos:line="76" pos:column="17"/></operator><literal type="number" pos:line="76" pos:column="17">1<pos:position pos:line="76" pos:column="18"/></literal></expr>;<pos:position pos:line="76" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></else></if>

    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><name pos:line="79" pos:column="9">status<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">!=<pos:position pos:line="79" pos:column="18"/></operator> <literal type="number" pos:line="79" pos:column="19">0<pos:position pos:line="79" pos:column="20"/></literal></expr>)<pos:position pos:line="79" pos:column="21"/></condition><then pos:line="79" pos:column="21">
      <block type="pseudo"><break pos:line="80" pos:column="7">break;<pos:position pos:line="80" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="81" pos:column="4"/></block></for>

  <if pos:line="83" pos:column="3">if <condition pos:line="83" pos:column="6">(<expr><name pos:line="83" pos:column="7">status<pos:position pos:line="83" pos:column="13"/></name> <operator pos:line="83" pos:column="14">!=<pos:position pos:line="83" pos:column="16"/></operator> <literal type="number" pos:line="83" pos:column="17">0<pos:position pos:line="83" pos:column="18"/></literal></expr>)<pos:position pos:line="83" pos:column="19"/></condition><then pos:line="83" pos:column="19"> <block pos:line="83" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">wg_callback_free<pos:position pos:line="84" pos:column="21"/></name><argument_list pos:line="84" pos:column="21">(<argument><expr><name pos:line="84" pos:column="22">cb<pos:position pos:line="84" pos:column="24"/></name></expr></argument>)<pos:position pos:line="84" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="26"/></expr_stmt>
    <return pos:line="85" pos:column="5">return <expr><operator pos:line="85" pos:column="12">(<pos:position pos:line="85" pos:column="13"/></operator><name pos:line="85" pos:column="13">status<pos:position pos:line="85" pos:column="19"/></name><operator pos:line="85" pos:column="19">)<pos:position pos:line="85" pos:column="20"/></operator></expr>;<pos:position pos:line="85" pos:column="21"/></return>
  }<pos:position pos:line="86" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="88" pos:column="3">/* FIXME: Legacy configuration syntax. */</comment>
  <if pos:line="89" pos:column="3">if <condition pos:line="89" pos:column="6">(<expr><name><name pos:line="89" pos:column="7">cb<pos:position pos:line="89" pos:column="9"/></name><operator pos:line="89" pos:column="9">-&gt;<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="11">name<pos:position pos:line="89" pos:column="15"/></name></name> <operator pos:line="89" pos:column="16">==<pos:position pos:line="89" pos:column="18"/></operator> <name pos:line="89" pos:column="19">NULL<pos:position pos:line="89" pos:column="23"/></name></expr>)<pos:position pos:line="89" pos:column="24"/></condition><then pos:line="89" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="5">ssnprintf<pos:position pos:line="90" pos:column="14"/></name><argument_list pos:line="90" pos:column="14">(<argument><expr><name pos:line="90" pos:column="15">callback_name<pos:position pos:line="90" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="90" pos:column="30">sizeof<argument_list pos:line="90" pos:column="36">(<argument><expr><name pos:line="90" pos:column="37">callback_name<pos:position pos:line="90" pos:column="50"/></name></expr></argument>)<pos:position pos:line="90" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="53">"write_graphite/%s/%s/%s"<pos:position pos:line="90" pos:column="78"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="91" pos:column="15">cb<pos:position pos:line="91" pos:column="17"/></name><operator pos:line="91" pos:column="17">-&gt;<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="19">node<pos:position pos:line="91" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="25">cb<pos:position pos:line="91" pos:column="27"/></name><operator pos:line="91" pos:column="27">-&gt;<pos:position pos:line="91" pos:column="32"/></operator><name pos:line="91" pos:column="29">service<pos:position pos:line="91" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="38">cb<pos:position pos:line="91" pos:column="40"/></name><operator pos:line="91" pos:column="40">-&gt;<pos:position pos:line="91" pos:column="45"/></operator><name pos:line="91" pos:column="42">protocol<pos:position pos:line="91" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="52"/></expr_stmt></block></then>
  <else pos:line="92" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="5">ssnprintf<pos:position pos:line="93" pos:column="14"/></name><argument_list pos:line="93" pos:column="14">(<argument><expr><name pos:line="93" pos:column="15">callback_name<pos:position pos:line="93" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="93" pos:column="30">sizeof<argument_list pos:line="93" pos:column="36">(<argument><expr><name pos:line="93" pos:column="37">callback_name<pos:position pos:line="93" pos:column="50"/></name></expr></argument>)<pos:position pos:line="93" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="53">"write_graphite/%s"<pos:position pos:line="93" pos:column="72"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="94" pos:column="15">cb<pos:position pos:line="94" pos:column="17"/></name><operator pos:line="94" pos:column="17">-&gt;<pos:position pos:line="94" pos:column="22"/></operator><name pos:line="94" pos:column="19">name<pos:position pos:line="94" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="25"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="96" pos:column="3">plugin_register_write<pos:position pos:line="96" pos:column="24"/></name><argument_list pos:line="96" pos:column="24">(<argument><expr><name pos:line="96" pos:column="25">callback_name<pos:position pos:line="96" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="40">wg_write<pos:position pos:line="96" pos:column="48"/></name></expr></argument>,
                        <argument><expr><operator pos:line="97" pos:column="25">&amp;<pos:position pos:line="97" pos:column="30"/></operator><operator pos:line="97" pos:column="26">(<pos:position pos:line="97" pos:column="27"/></operator><name pos:line="97" pos:column="27">user_data_t<pos:position pos:line="97" pos:column="38"/></name><operator pos:line="97" pos:column="38">)<pos:position pos:line="97" pos:column="39"/></operator><block pos:line="97" pos:column="39">{
                            <expr><operator pos:line="98" pos:column="29">.<pos:position pos:line="98" pos:column="30"/></operator><name pos:line="98" pos:column="30">data<pos:position pos:line="98" pos:column="34"/></name> <operator pos:line="98" pos:column="35">=<pos:position pos:line="98" pos:column="36"/></operator> <name pos:line="98" pos:column="37">cb<pos:position pos:line="98" pos:column="39"/></name></expr>, <expr><operator pos:line="98" pos:column="41">.<pos:position pos:line="98" pos:column="42"/></operator><name pos:line="98" pos:column="42">free_func<pos:position pos:line="98" pos:column="51"/></name> <operator pos:line="98" pos:column="52">=<pos:position pos:line="98" pos:column="53"/></operator> <name pos:line="98" pos:column="54">wg_callback_free<pos:position pos:line="98" pos:column="70"/></name></expr>,
                        }<pos:position pos:line="99" pos:column="26"/></block></expr></argument>)<pos:position pos:line="99" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="101" pos:column="3">plugin_register_flush<pos:position pos:line="101" pos:column="24"/></name><argument_list pos:line="101" pos:column="24">(<argument><expr><name pos:line="101" pos:column="25">callback_name<pos:position pos:line="101" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="40">wg_flush<pos:position pos:line="101" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="101" pos:column="50">&amp;<pos:position pos:line="101" pos:column="55"/></operator><operator pos:line="101" pos:column="51">(<pos:position pos:line="101" pos:column="52"/></operator><name pos:line="101" pos:column="52">user_data_t<pos:position pos:line="101" pos:column="63"/></name><operator pos:line="101" pos:column="63">)<pos:position pos:line="101" pos:column="64"/></operator><block pos:line="101" pos:column="64">{<expr><operator pos:line="101" pos:column="65">.<pos:position pos:line="101" pos:column="66"/></operator><name pos:line="101" pos:column="66">data<pos:position pos:line="101" pos:column="70"/></name> <operator pos:line="101" pos:column="71">=<pos:position pos:line="101" pos:column="72"/></operator> <name pos:line="101" pos:column="73">cb<pos:position pos:line="101" pos:column="75"/></name></expr>}<pos:position pos:line="101" pos:column="76"/></block></expr></argument>)<pos:position pos:line="101" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="78"/></expr_stmt>

  <return pos:line="103" pos:column="3">return <expr><operator pos:line="103" pos:column="10">(<pos:position pos:line="103" pos:column="11"/></operator><literal type="number" pos:line="103" pos:column="11">0<pos:position pos:line="103" pos:column="12"/></literal><operator pos:line="103" pos:column="12">)<pos:position pos:line="103" pos:column="13"/></operator></expr>;<pos:position pos:line="103" pos:column="14"/></return>
}<pos:position pos:line="104" pos:column="2"/></block></function></unit>

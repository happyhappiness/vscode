<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2490_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">oconfig_item_t<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">cf_read_file<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">file<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">pattern<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">int<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">depth<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">oconfig_item_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">root<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">status<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">assert<pos:position pos:line="7" pos:column="15"/></name> <argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">depth<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="25">CF_MAX_DEPTH<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">pattern<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">!=<pos:position pos:line="9" pos:column="23"/></operator> <name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29"> <block pos:line="9" pos:column="30">{
<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">HAVE_FNMATCH_H<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">&amp;&amp;<pos:position pos:line="10" pos:column="30"/></operator> <name pos:line="10" pos:column="23">HAVE_LIBGEN_H<pos:position pos:line="10" pos:column="36"/></name></expr></cpp:if>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">char<pos:position pos:line="11" pos:column="21"/></name> <modifier pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></modifier></type><name pos:line="11" pos:column="23">tmp<pos:position pos:line="11" pos:column="26"/></name> <init pos:line="11" pos:column="27">= <expr><call><name pos:line="11" pos:column="29">sstrdup<pos:position pos:line="11" pos:column="36"/></name> <argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">file<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="44"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">char<pos:position pos:line="12" pos:column="21"/></name> <modifier pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></modifier></type><name pos:line="12" pos:column="23">filename<pos:position pos:line="12" pos:column="31"/></name> <init pos:line="12" pos:column="32">= <expr><call><name pos:line="12" pos:column="34">basename<pos:position pos:line="12" pos:column="42"/></name> <argument_list pos:line="12" pos:column="43">(<argument><expr><name pos:line="12" pos:column="44">tmp<pos:position pos:line="12" pos:column="47"/></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="49"/></decl_stmt>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">(<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">filename<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">!=<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="34">NULL<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">)<pos:position pos:line="14" pos:column="39"/></operator> <operator pos:line="14" pos:column="40">&amp;&amp;<pos:position pos:line="14" pos:column="50"/></operator> <operator pos:line="14" pos:column="43">(<pos:position pos:line="14" pos:column="44"/></operator><call><name pos:line="14" pos:column="44">fnmatch<pos:position pos:line="14" pos:column="51"/></name> <argument_list pos:line="14" pos:column="52">(<argument><expr><name pos:line="14" pos:column="53">pattern<pos:position pos:line="14" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="62">filename<pos:position pos:line="14" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="72">0<pos:position pos:line="14" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="74"/></argument_list></call> <operator pos:line="14" pos:column="75">!=<pos:position pos:line="14" pos:column="77"/></operator> <literal type="number" pos:line="14" pos:column="78">0<pos:position pos:line="14" pos:column="79"/></literal><operator pos:line="14" pos:column="79">)<pos:position pos:line="14" pos:column="80"/></operator></expr>)<pos:position pos:line="14" pos:column="81"/></condition><then pos:line="14" pos:column="81"> <block pos:line="14" pos:column="82">{
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">DEBUG<pos:position pos:line="15" pos:column="30"/></name> <argument_list pos:line="15" pos:column="31">(<argument><expr><literal type="string" pos:line="15" pos:column="32">"configfile: Not including `%s' because it "<pos:position pos:line="15" pos:column="76"/></literal>
					<literal type="string" pos:line="16" pos:column="41">"does not match pattern `%s'."<pos:position pos:line="16" pos:column="71"/></literal></expr></argument>,
					<argument><expr><name pos:line="17" pos:column="41">filename<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">pattern<pos:position pos:line="17" pos:column="58"/></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">free<pos:position pos:line="18" pos:column="29"/></name> <argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">tmp<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
			<return pos:line="19" pos:column="25">return <expr><operator pos:line="19" pos:column="32">(<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="33">NULL<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">)<pos:position pos:line="19" pos:column="38"/></operator></expr>;<pos:position pos:line="19" pos:column="39"/></return>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="22" pos:column="17">free<pos:position pos:line="22" pos:column="21"/></name> <argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">tmp<pos:position pos:line="22" pos:column="26"/></name></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
<cpp:else pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">else<pos:position pos:line="23" pos:column="6"/></cpp:directive></cpp:else>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">ERROR<pos:position pos:line="24" pos:column="22"/></name> <argument_list pos:line="24" pos:column="23">(<argument><expr><literal type="string" pos:line="24" pos:column="24">"configfile: Cannot apply pattern filter '%s' "<pos:position pos:line="24" pos:column="71"/></literal>
				<literal type="string" pos:line="25" pos:column="33">"to file '%s': functions basename() and / or "<pos:position pos:line="25" pos:column="79"/></literal>
				<literal type="string" pos:line="26" pos:column="33">"fnmatch() not available."<pos:position pos:line="26" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="61">pattern<pos:position pos:line="26" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="70">file<pos:position pos:line="26" pos:column="74"/></name></expr></argument>)<pos:position pos:line="26" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="76"/></expr_stmt>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="27" pos:column="8">/* HAVE_FNMATCH_H &amp;&amp; HAVE_LIBGEN_H */</comment>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="30" pos:column="9">root<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">oconfig_parse_file<pos:position pos:line="30" pos:column="34"/></name> <argument_list pos:line="30" pos:column="35">(<argument><expr><name pos:line="30" pos:column="36">file<pos:position pos:line="30" pos:column="40"/></name></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">root<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">==<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="21">NULL<pos:position pos:line="31" pos:column="25"/></name></expr>)<pos:position pos:line="31" pos:column="26"/></condition><then pos:line="31" pos:column="26">
	<block pos:line="32" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">ERROR<pos:position pos:line="33" pos:column="22"/></name> <argument_list pos:line="33" pos:column="23">(<argument><expr><literal type="string" pos:line="33" pos:column="24">"configfile: Cannot read file `%s'."<pos:position pos:line="33" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="62">file<pos:position pos:line="33" pos:column="66"/></name></expr></argument>)<pos:position pos:line="33" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="68"/></expr_stmt>
		<return pos:line="34" pos:column="17">return <expr><operator pos:line="34" pos:column="24">(<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">NULL<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">)<pos:position pos:line="34" pos:column="30"/></operator></expr>;<pos:position pos:line="34" pos:column="31"/></return>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="37" pos:column="9">status<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">cf_include_all<pos:position pos:line="37" pos:column="32"/></name> <argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">root<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="40">depth<pos:position pos:line="37" pos:column="45"/></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">status<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">!=<pos:position pos:line="38" pos:column="22"/></operator> <literal type="number" pos:line="38" pos:column="23">0<pos:position pos:line="38" pos:column="24"/></literal></expr>)<pos:position pos:line="38" pos:column="25"/></condition><then pos:line="38" pos:column="25">
	<block pos:line="39" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">oconfig_free<pos:position pos:line="40" pos:column="29"/></name> <argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">root<pos:position pos:line="40" pos:column="35"/></name></expr></argument>)<pos:position pos:line="40" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="37"/></expr_stmt>
		<return pos:line="41" pos:column="17">return <expr><operator pos:line="41" pos:column="24">(<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">NULL<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">)<pos:position pos:line="41" pos:column="30"/></operator></expr>;<pos:position pos:line="41" pos:column="31"/></return>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<return pos:line="44" pos:column="9">return <expr><operator pos:line="44" pos:column="16">(<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="17">root<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">)<pos:position pos:line="44" pos:column="22"/></operator></expr>;<pos:position pos:line="44" pos:column="23"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

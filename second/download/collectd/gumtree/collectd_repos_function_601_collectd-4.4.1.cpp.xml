<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_601_collectd-4.4.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">hddtemp_get_major_minor<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">drive<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">hddname_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">list<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">ret<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">list<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">first_hddname<pos:position pos:line="6" pos:column="34"/></name></expr>;<pos:position pos:line="6" pos:column="35"/></init> <condition><expr><name pos:line="6" pos:column="36">list<pos:position pos:line="6" pos:column="40"/></name> <operator pos:line="6" pos:column="41">!=<pos:position pos:line="6" pos:column="43"/></operator> <name pos:line="6" pos:column="44">NULL<pos:position pos:line="6" pos:column="48"/></name></expr>;<pos:position pos:line="6" pos:column="49"/></condition> <incr><expr><name pos:line="6" pos:column="50">list<pos:position pos:line="6" pos:column="54"/></name> <operator pos:line="6" pos:column="55">=<pos:position pos:line="6" pos:column="56"/></operator> <name><name pos:line="6" pos:column="57">list<pos:position pos:line="6" pos:column="61"/></name><operator pos:line="6" pos:column="61">-&gt;<pos:position pos:line="6" pos:column="66"/></operator><name pos:line="6" pos:column="63">next<pos:position pos:line="6" pos:column="67"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="68"/></control>
		<block type="pseudo"><if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><call><name pos:line="7" pos:column="21">strcmp<pos:position pos:line="7" pos:column="27"/></name> <argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">drive<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="36">list<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">-&gt;<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="42">name<pos:position pos:line="7" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call> <operator pos:line="7" pos:column="48">==<pos:position pos:line="7" pos:column="50"/></operator> <literal type="number" pos:line="7" pos:column="51">0<pos:position pos:line="7" pos:column="52"/></literal></expr>)<pos:position pos:line="7" pos:column="53"/></condition><then pos:line="7" pos:column="53">
			<block type="pseudo"><break pos:line="8" pos:column="25">break;<pos:position pos:line="8" pos:column="31"/></break></block></then></if></block></for>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">list<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">==<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">NULL<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26">
	<block pos:line="11" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">DEBUG<pos:position pos:line="12" pos:column="22"/></name> <argument_list pos:line="12" pos:column="23">(<argument><expr><literal type="string" pos:line="12" pos:column="24">"hddtemp plugin: Don't know %s, keeping name as-is."<pos:position pos:line="12" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="78">drive<pos:position pos:line="12" pos:column="83"/></name></expr></argument>)<pos:position pos:line="12" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="85"/></expr_stmt>
		<return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">(<pos:position pos:line="13" pos:column="25"/></operator><call><name pos:line="13" pos:column="25">strdup<pos:position pos:line="13" pos:column="31"/></name> <argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">drive<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call><operator pos:line="13" pos:column="39">)<pos:position pos:line="13" pos:column="40"/></operator></expr>;<pos:position pos:line="13" pos:column="41"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">ret<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <operator pos:line="16" pos:column="20">(<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">char<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">*<pos:position pos:line="16" pos:column="27"/></operator><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator> <call><name pos:line="16" pos:column="29">malloc<pos:position pos:line="16" pos:column="35"/></name> <argument_list pos:line="16" pos:column="36">(<argument><expr><literal type="number" pos:line="16" pos:column="37">128<pos:position pos:line="16" pos:column="40"/></literal> <operator pos:line="16" pos:column="41">*<pos:position pos:line="16" pos:column="42"/></operator> <sizeof pos:line="16" pos:column="43">sizeof <argument_list pos:line="16" pos:column="50">(<argument><expr><name pos:line="16" pos:column="51">char<pos:position pos:line="16" pos:column="55"/></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call><operator pos:line="16" pos:column="57">)<pos:position pos:line="16" pos:column="58"/></operator> <operator pos:line="16" pos:column="59">==<pos:position pos:line="16" pos:column="61"/></operator> <name pos:line="16" pos:column="62">NULL<pos:position pos:line="16" pos:column="66"/></name></expr>)<pos:position pos:line="16" pos:column="67"/></condition><then pos:line="16" pos:column="67">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">NULL<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">)<pos:position pos:line="17" pos:column="30"/></operator></expr>;<pos:position pos:line="17" pos:column="31"/></return></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">snprintf<pos:position pos:line="19" pos:column="21"/></name> <argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">ret<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="28">128<pos:position pos:line="19" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="33">"%i-%i"<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="42">list<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">-&gt;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="48">major<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="55">list<pos:position pos:line="19" pos:column="59"/></name><operator pos:line="19" pos:column="59">-&gt;<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="61">minor<pos:position pos:line="19" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call> <operator pos:line="19" pos:column="68">&gt;=<pos:position pos:line="19" pos:column="73"/></operator> <literal type="number" pos:line="19" pos:column="71">128<pos:position pos:line="19" pos:column="74"/></literal></expr>)<pos:position pos:line="19" pos:column="75"/></condition><then pos:line="19" pos:column="75">
	<block pos:line="20" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">free<pos:position pos:line="21" pos:column="21"/></name> <argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">ret<pos:position pos:line="21" pos:column="26"/></name></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
		<return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">NULL<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">)<pos:position pos:line="22" pos:column="30"/></operator></expr>;<pos:position pos:line="22" pos:column="31"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<return pos:line="25" pos:column="9">return <expr><operator pos:line="25" pos:column="16">(<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">ret<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">)<pos:position pos:line="25" pos:column="21"/></operator></expr>;<pos:position pos:line="25" pos:column="22"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

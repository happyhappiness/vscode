<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1011_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">perl_flush<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">cdtime_t<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">timeout<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">identifier<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="2" pos:column="23">user_data_t<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">user_data<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list> <block pos:line="2" pos:column="47">{
  <expr_stmt><expr><name pos:line="3" pos:column="3">dTHX<pos:position pos:line="3" pos:column="7"/></name></expr>;<pos:position pos:line="3" pos:column="8"/></expr_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">NULL<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">==<pos:position pos:line="5" pos:column="14"/></operator> <name pos:line="5" pos:column="15">perl_threads<pos:position pos:line="5" pos:column="27"/></name></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><literal type="number" pos:line="6" pos:column="12">0<pos:position pos:line="6" pos:column="13"/></literal></expr>;<pos:position pos:line="6" pos:column="14"/></return></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">NULL<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">==<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">aTHX<pos:position pos:line="8" pos:column="19"/></name></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20"> <block pos:line="8" pos:column="21">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">c_ithread_t<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">t<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><name pos:line="9" pos:column="22">NULL<pos:position pos:line="9" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">pthread_mutex_lock<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><operator pos:line="11" pos:column="24">&amp;<pos:position pos:line="11" pos:column="29"/></operator><name><name pos:line="11" pos:column="25">perl_threads<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">mutex<pos:position pos:line="11" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">t<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <call><name pos:line="12" pos:column="9">c_ithread_create<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name><name pos:line="12" pos:column="26">perl_threads<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">head<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">-&gt;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="46">interp<pos:position pos:line="12" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">pthread_mutex_unlock<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><operator pos:line="13" pos:column="26">&amp;<pos:position pos:line="13" pos:column="31"/></operator><name><name pos:line="13" pos:column="27">perl_threads<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">mutex<pos:position pos:line="13" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">aTHX<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <name><name pos:line="15" pos:column="12">t<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">interp<pos:position pos:line="15" pos:column="21"/></name></name></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="18" pos:column="3">/* For collectd-5.6 only, #1731 */</comment>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">user_data<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">==<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">NULL<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">||<pos:position pos:line="19" pos:column="27"/></operator> <name><name pos:line="19" pos:column="28">user_data<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">data<pos:position pos:line="19" pos:column="43"/></name></name> <operator pos:line="19" pos:column="44">==<pos:position pos:line="19" pos:column="46"/></operator> <name pos:line="19" pos:column="47">NULL<pos:position pos:line="19" pos:column="51"/></name></expr>)<pos:position pos:line="19" pos:column="52"/></condition><then pos:line="19" pos:column="52">
    <block type="pseudo"><return pos:line="20" pos:column="5">return <macro><name pos:line="20" pos:column="12">pplugin_call<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument pos:line="20" pos:column="25">aTHX_ PLUGIN_FLUSH_ALL<pos:position pos:line="20" pos:column="47"/></argument>, <argument pos:line="20" pos:column="49">timeout<pos:position pos:line="20" pos:column="56"/></argument>, <argument pos:line="20" pos:column="58">identifier<pos:position pos:line="20" pos:column="68"/></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></macro>;<pos:position pos:line="20" pos:column="70"/></return></block></then></if>

  <return pos:line="22" pos:column="3">return <macro><name pos:line="22" pos:column="10">pplugin_call<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument pos:line="22" pos:column="23">aTHX_ PLUGIN_FLUSH<pos:position pos:line="22" pos:column="41"/></argument>, <argument pos:line="22" pos:column="43">user_data-&gt;data<pos:position pos:line="22" pos:column="58"/></argument>, <argument pos:line="22" pos:column="60">timeout<pos:position pos:line="22" pos:column="67"/></argument>, <argument pos:line="22" pos:column="69">identifier<pos:position pos:line="22" pos:column="79"/></argument>)<pos:position pos:line="22" pos:column="80"/></argument_list></macro>;<pos:position pos:line="22" pos:column="81"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

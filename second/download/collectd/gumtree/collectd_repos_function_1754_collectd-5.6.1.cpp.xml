<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1754_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">create_putval<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">ret<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">size_t<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">ret_len<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="47">/* {{{ */</comment>
	<parameter><decl><type><specifier pos:line="2" pos:column="9">const<pos:position pos:line="2" pos:column="14"/></specifier> <name pos:line="2" pos:column="15">data_set_t<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">ds<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">value_list_t<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">vl<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buffer_ident<pos:position pos:line="4" pos:column="26"/></name><index pos:line="4" pos:column="26">[<expr><literal type="number" pos:line="4" pos:column="27">6<pos:position pos:line="4" pos:column="28"/></literal> <operator pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></operator> <name pos:line="4" pos:column="31">DATA_MAX_NAME_LEN<pos:position pos:line="4" pos:column="48"/></name></expr>]<pos:position pos:line="4" pos:column="49"/></index></name></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">buffer_values<pos:position pos:line="5" pos:column="27"/></name><index pos:line="5" pos:column="27">[<expr><literal type="number" pos:line="5" pos:column="28">1024<pos:position pos:line="5" pos:column="32"/></literal></expr>]<pos:position pos:line="5" pos:column="33"/></index></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">status<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">status<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">FORMAT_VL<pos:position pos:line="8" pos:column="27"/></name> <argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">buffer_ident<pos:position pos:line="8" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="43">sizeof <argument_list pos:line="8" pos:column="50">(<argument><expr><name pos:line="8" pos:column="51">buffer_ident<pos:position pos:line="8" pos:column="63"/></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="8" pos:column="66">vl<pos:position pos:line="8" pos:column="68"/></name></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">status<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">!=<pos:position pos:line="9" pos:column="22"/></operator> <literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">status<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">)<pos:position pos:line="10" pos:column="32"/></operator></expr>;<pos:position pos:line="10" pos:column="33"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">escape_string<pos:position pos:line="11" pos:column="22"/></name> <argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">buffer_ident<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="38">sizeof <argument_list pos:line="11" pos:column="45">(<argument><expr><name pos:line="11" pos:column="46">buffer_ident<pos:position pos:line="11" pos:column="58"/></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="61"/></expr_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">status<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">format_values<pos:position pos:line="13" pos:column="31"/></name> <argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">buffer_values<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="48">sizeof <argument_list pos:line="13" pos:column="55">(<argument><expr><name pos:line="13" pos:column="56">buffer_values<pos:position pos:line="13" pos:column="69"/></name></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></sizeof></expr></argument>,
			<argument><expr><name pos:line="14" pos:column="25">ds<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="29">vl<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <comment type="block" pos:line="14" pos:column="33">/* store rates = */</comment> <argument><expr><literal type="number" pos:line="14" pos:column="53">0<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">status<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">!=<pos:position pos:line="15" pos:column="22"/></operator> <literal type="number" pos:line="15" pos:column="23">0<pos:position pos:line="15" pos:column="24"/></literal></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">status<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">)<pos:position pos:line="16" pos:column="32"/></operator></expr>;<pos:position pos:line="16" pos:column="33"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">escape_string<pos:position pos:line="17" pos:column="22"/></name> <argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">buffer_values<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="39">sizeof <argument_list pos:line="17" pos:column="46">(<argument><expr><name pos:line="17" pos:column="47">buffer_values<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="63"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">ssnprintf<pos:position pos:line="19" pos:column="18"/></name> <argument_list pos:line="19" pos:column="19">(<argument><expr><name pos:line="19" pos:column="20">ret<pos:position pos:line="19" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="25">ret_len<pos:position pos:line="19" pos:column="32"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="20" pos:column="25">"PUTVAL %s interval=%.3f %s"<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>,
			<argument><expr><name pos:line="21" pos:column="25">buffer_ident<pos:position pos:line="21" pos:column="37"/></name></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="22" pos:column="25">(<pos:position pos:line="22" pos:column="26"/></operator><name><name pos:line="22" pos:column="26">vl<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">-&gt;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="30">interval<pos:position pos:line="22" pos:column="38"/></name></name> <operator pos:line="22" pos:column="39">&gt;<pos:position pos:line="22" pos:column="43"/></operator> <literal type="number" pos:line="22" pos:column="41">0<pos:position pos:line="22" pos:column="42"/></literal><operator pos:line="22" pos:column="42">)<pos:position pos:line="22" pos:column="43"/></operator></expr>
			?<pos:position pos:line="23" pos:column="26"/></condition><then pos:line="23" pos:column="26"> <expr><call><name pos:line="23" pos:column="27">CDTIME_T_TO_DOUBLE<pos:position pos:line="23" pos:column="45"/></name> <argument_list pos:line="23" pos:column="46">(<argument><expr><name><name pos:line="23" pos:column="47">vl<pos:position pos:line="23" pos:column="49"/></name><operator pos:line="23" pos:column="49">-&gt;<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="51">interval<pos:position pos:line="23" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>
			<pos:position pos:line="24" pos:column="4"/></then><else pos:line="24" pos:column="25">: <expr><call><name pos:line="24" pos:column="27">CDTIME_T_TO_DOUBLE<pos:position pos:line="24" pos:column="45"/></name> <argument_list pos:line="24" pos:column="46">(<argument><expr><call><name pos:line="24" pos:column="47">plugin_get_interval<pos:position pos:line="24" pos:column="66"/></name> <argument_list pos:line="24" pos:column="67">()<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr></else></ternary></expr></argument>,
			<argument><expr><name pos:line="25" pos:column="25">buffer_values<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>

	<return pos:line="27" pos:column="9">return <expr><operator pos:line="27" pos:column="16">(<pos:position pos:line="27" pos:column="17"/></operator><literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal><operator pos:line="27" pos:column="18">)<pos:position pos:line="27" pos:column="19"/></operator></expr>;<pos:position pos:line="27" pos:column="20"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

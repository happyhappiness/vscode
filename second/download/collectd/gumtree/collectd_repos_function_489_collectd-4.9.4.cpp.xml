<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_489_collectd-4.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cjni_match_target_invoke<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">data_set_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">ds<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="60">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">value_list_t<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">vl<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="23">notification_meta_t<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier><modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">meta<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">void<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier><modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">user_data<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">JNIEnv<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">jvm_env<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">cjni_callback_info_t<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">cbi<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">jobject<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">o_vl<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">jobject<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">o_ds<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">ret_status<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">status<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">jvm<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">==<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">NULL<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name> <argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="string" pos:line="13" pos:column="12">"java plugin: cjni_match_target_invoke: jvm == NULL"<pos:position pos:line="13" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">jvm_env<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">cjni_thread_attach<pos:position pos:line="17" pos:column="31"/></name> <argument_list pos:line="17" pos:column="32">()<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">jvm_env<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">==<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">NULL<pos:position pos:line="18" pos:column="22"/></name></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="21" pos:column="3">cbi<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">cjni_callback_info_t<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">*<pos:position pos:line="21" pos:column="32"/></operator><operator pos:line="21" pos:column="32">)<pos:position pos:line="21" pos:column="33"/></operator> <operator pos:line="21" pos:column="34">*<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">user_data<pos:position pos:line="21" pos:column="44"/></name></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><name pos:line="23" pos:column="3">o_vl<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <call><name pos:line="23" pos:column="10">ctoj_value_list<pos:position pos:line="23" pos:column="25"/></name> <argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">jvm_env<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="36">ds<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">vl<pos:position pos:line="23" pos:column="42"/></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">o_vl<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">==<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">NULL<pos:position pos:line="24" pos:column="19"/></name></expr>)<pos:position pos:line="24" pos:column="20"/></condition><then pos:line="24" pos:column="20">
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">ERROR<pos:position pos:line="26" pos:column="10"/></name> <argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="string" pos:line="26" pos:column="12">"java plugin: cjni_match_target_invoke: ctoj_value_list failed."<pos:position pos:line="26" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">cjni_thread_detach<pos:position pos:line="27" pos:column="23"/></name> <argument_list pos:line="27" pos:column="24">()<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><operator pos:line="28" pos:column="13">-<pos:position pos:line="28" pos:column="14"/></operator><literal type="number" pos:line="28" pos:column="14">1<pos:position pos:line="28" pos:column="15"/></literal><operator pos:line="28" pos:column="15">)<pos:position pos:line="28" pos:column="16"/></operator></expr>;<pos:position pos:line="28" pos:column="17"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="31" pos:column="3">o_ds<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <call><name pos:line="31" pos:column="10">ctoj_data_set<pos:position pos:line="31" pos:column="23"/></name> <argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">jvm_env<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">ds<pos:position pos:line="31" pos:column="36"/></name></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">o_ds<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">==<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">NULL<pos:position pos:line="32" pos:column="19"/></name></expr>)<pos:position pos:line="32" pos:column="20"/></condition><then pos:line="32" pos:column="20">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ERROR<pos:position pos:line="34" pos:column="10"/></name> <argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="string" pos:line="34" pos:column="12">"java plugin: cjni_match_target_invoke: ctoj_value_list failed."<pos:position pos:line="34" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">cjni_thread_detach<pos:position pos:line="35" pos:column="23"/></name> <argument_list pos:line="35" pos:column="24">()<pos:position pos:line="35" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><operator pos:line="36" pos:column="13">-<pos:position pos:line="36" pos:column="14"/></operator><literal type="number" pos:line="36" pos:column="14">1<pos:position pos:line="36" pos:column="15"/></literal><operator pos:line="36" pos:column="15">)<pos:position pos:line="36" pos:column="16"/></operator></expr>;<pos:position pos:line="36" pos:column="17"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="39" pos:column="3">ret_status<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name><operator pos:line="39" pos:column="16">(<pos:position pos:line="39" pos:column="17"/></operator><operator pos:line="39" pos:column="17">*<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">jvm_env<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">)<pos:position pos:line="39" pos:column="26"/></operator><operator pos:line="39" pos:column="26">-&gt;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="28">CallIntMethod<pos:position pos:line="39" pos:column="41"/></name></name> <argument_list pos:line="39" pos:column="42">(<argument><expr><name pos:line="39" pos:column="43">jvm_env<pos:position pos:line="39" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="52">cbi<pos:position pos:line="39" pos:column="55"/></name><operator pos:line="39" pos:column="55">-&gt;<pos:position pos:line="39" pos:column="60"/></operator><name pos:line="39" pos:column="57">object<pos:position pos:line="39" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="65">cbi<pos:position pos:line="39" pos:column="68"/></name><operator pos:line="39" pos:column="68">-&gt;<pos:position pos:line="39" pos:column="73"/></operator><name pos:line="39" pos:column="70">method<pos:position pos:line="39" pos:column="76"/></name></name></expr></argument>,
      <argument><expr><name pos:line="40" pos:column="7">o_ds<pos:position pos:line="40" pos:column="11"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="13">o_vl<pos:position pos:line="40" pos:column="17"/></name></expr></argument>)<pos:position pos:line="40" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="42" pos:column="3">DEBUG<pos:position pos:line="42" pos:column="8"/></name> <argument_list pos:line="42" pos:column="9">(<argument><expr><literal type="string" pos:line="42" pos:column="10">"java plugin: cjni_match_target_invoke: Method returned %i."<pos:position pos:line="42" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="72">ret_status<pos:position pos:line="42" pos:column="82"/></name></expr></argument>)<pos:position pos:line="42" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="84"/></expr_stmt>

  <comment type="block" pos:line="44" pos:column="3">/* If we're executing a target, copy the `ValueList' back to our
   * `value_list_t'. */</comment>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name><name pos:line="46" pos:column="7">cbi<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">-&gt;<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="12">type<pos:position pos:line="46" pos:column="16"/></name></name> <operator pos:line="46" pos:column="17">==<pos:position pos:line="46" pos:column="19"/></operator> <name pos:line="46" pos:column="20">CB_TYPE_TARGET<pos:position pos:line="46" pos:column="34"/></name></expr>)<pos:position pos:line="46" pos:column="35"/></condition><then pos:line="46" pos:column="35">
  <block pos:line="47" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="48" pos:column="5">value_list_t<pos:position pos:line="48" pos:column="17"/></name></type> <name pos:line="48" pos:column="18">new_vl<pos:position pos:line="48" pos:column="24"/></name></decl>;<pos:position pos:line="48" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="50" pos:column="5">memset<pos:position pos:line="50" pos:column="11"/></name> <argument_list pos:line="50" pos:column="12">(<argument><expr><operator pos:line="50" pos:column="13">&amp;<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="14">new_vl<pos:position pos:line="50" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="22">0<pos:position pos:line="50" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="25">sizeof <argument_list pos:line="50" pos:column="32">(<argument><expr><name pos:line="50" pos:column="33">new_vl<pos:position pos:line="50" pos:column="39"/></name></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="51" pos:column="5">status<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <call><name pos:line="51" pos:column="14">jtoc_value_list<pos:position pos:line="51" pos:column="29"/></name> <argument_list pos:line="51" pos:column="30">(<argument><expr><name pos:line="51" pos:column="31">jvm_env<pos:position pos:line="51" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="40">&amp;<pos:position pos:line="51" pos:column="45"/></operator><name pos:line="51" pos:column="41">new_vl<pos:position pos:line="51" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="49">o_vl<pos:position pos:line="51" pos:column="53"/></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">status<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">!=<pos:position pos:line="52" pos:column="18"/></operator> <literal type="number" pos:line="52" pos:column="19">0<pos:position pos:line="52" pos:column="20"/></literal></expr>)<pos:position pos:line="52" pos:column="21"/></condition><then pos:line="52" pos:column="21">
    <block pos:line="53" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">ERROR<pos:position pos:line="54" pos:column="12"/></name> <argument_list pos:line="54" pos:column="13">(<argument><expr><literal type="string" pos:line="54" pos:column="14">"java plugin: cjni_match_target_invoke: "<pos:position pos:line="54" pos:column="55"/></literal>
          <literal type="string" pos:line="55" pos:column="11">"jtoc_value_list failed."<pos:position pos:line="55" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then>
    <else pos:line="57" pos:column="5">else <comment type="block" pos:line="57" pos:column="10">/* if (status == 0) */</comment>
    <block pos:line="58" pos:column="5">{
      <comment type="block" pos:line="59" pos:column="7">/* plugin_dispatch_values assures that this is dynamically allocated
       * memory. */</comment>
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">sfree<pos:position pos:line="61" pos:column="12"/></name> <argument_list pos:line="61" pos:column="13">(<argument><expr><name><name pos:line="61" pos:column="14">vl<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">-&gt;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="18">values<pos:position pos:line="61" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="26"/></expr_stmt>

      <comment type="block" pos:line="63" pos:column="7">/* This will replace the vl-&gt;values pointer to a new, dynamically
       * allocated piece of memory. */</comment>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">memcpy<pos:position pos:line="65" pos:column="13"/></name> <argument_list pos:line="65" pos:column="14">(<argument><expr><name pos:line="65" pos:column="15">vl<pos:position pos:line="65" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="19">&amp;<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="20">new_vl<pos:position pos:line="65" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="28">sizeof <argument_list pos:line="65" pos:column="35">(<argument><expr><operator pos:line="65" pos:column="36">*<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="37">vl<pos:position pos:line="65" pos:column="39"/></name></expr></argument>)<pos:position pos:line="65" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></else></if>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if> <comment type="block" pos:line="67" pos:column="5">/* if (cbi-&gt;type == CB_TYPE_TARGET) */</comment>

  <expr_stmt><expr><name pos:line="69" pos:column="3">status<pos:position pos:line="69" pos:column="9"/></name> <operator pos:line="69" pos:column="10">=<pos:position pos:line="69" pos:column="11"/></operator> <call><name pos:line="69" pos:column="12">cjni_thread_detach<pos:position pos:line="69" pos:column="30"/></name> <argument_list pos:line="69" pos:column="31">()<pos:position pos:line="69" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="34"/></expr_stmt>
  <if pos:line="70" pos:column="3">if <condition pos:line="70" pos:column="6">(<expr><name pos:line="70" pos:column="7">status<pos:position pos:line="70" pos:column="13"/></name> <operator pos:line="70" pos:column="14">!=<pos:position pos:line="70" pos:column="16"/></operator> <literal type="number" pos:line="70" pos:column="17">0<pos:position pos:line="70" pos:column="18"/></literal></expr>)<pos:position pos:line="70" pos:column="19"/></condition><then pos:line="70" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="5">ERROR<pos:position pos:line="71" pos:column="10"/></name> <argument_list pos:line="71" pos:column="11">(<argument><expr><literal type="string" pos:line="71" pos:column="12">"java plugin: cjni_read: cjni_thread_detach failed."<pos:position pos:line="71" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="66"/></expr_stmt></block></then></if>

  <return pos:line="73" pos:column="3">return <expr><operator pos:line="73" pos:column="10">(<pos:position pos:line="73" pos:column="11"/></operator><name pos:line="73" pos:column="11">ret_status<pos:position pos:line="73" pos:column="21"/></name><operator pos:line="73" pos:column="21">)<pos:position pos:line="73" pos:column="22"/></operator></expr>;<pos:position pos:line="73" pos:column="23"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

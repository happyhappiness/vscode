<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1862_collectd-5.1.0.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">yy_stack_print<pos:position pos:line="2" pos:column="15"/></name> <argument_list pos:line="2" pos:column="16">(<argument><expr><name pos:line="2" pos:column="17">yytype_int16<pos:position pos:line="2" pos:column="29"/></name> <operator pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">yybottom<pos:position pos:line="2" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="41">yytype_int16<pos:position pos:line="2" pos:column="53"/></name> <operator pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></operator><name pos:line="2" pos:column="55">yytop<pos:position pos:line="2" pos:column="60"/></name></expr></argument>)<pos:position pos:line="2" pos:column="61"/></argument_list>
<cpp:else pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">else<pos:position pos:line="3" pos:column="6"/></cpp:directive></cpp:else>
static <name pos:line="4" pos:column="8">void<pos:position pos:line="4" pos:column="12"/></name>
<name pos:line="5" pos:column="1">yy_stack_print<pos:position pos:line="5" pos:column="15"/></name> <argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">yybottom<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="27">yytop<pos:position pos:line="5" pos:column="32"/></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list>
    <name pos:line="6" pos:column="5">yytype_int16<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier><name pos:line="6" pos:column="19">yybottom<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">yytype_int16<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">yytop<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
<block pos:line="9" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">YYFPRINTF<pos:position pos:line="10" pos:column="12"/></name> <argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">stderr<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="22">"Stack now"<pos:position pos:line="10" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init pos:line="11" pos:column="8">;<pos:position pos:line="11" pos:column="9"/></init> <condition><expr><name pos:line="11" pos:column="10">yybottom<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&lt;=<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="22">yytop<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></condition> <incr><expr><name pos:line="11" pos:column="29">yybottom<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">++<pos:position pos:line="11" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="40"/></control>
    <block pos:line="12" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="13" pos:column="7">int<pos:position pos:line="13" pos:column="10"/></name></type> <name pos:line="13" pos:column="11">yybot<pos:position pos:line="13" pos:column="16"/></name> <init pos:line="13" pos:column="17">= <expr><operator pos:line="13" pos:column="19">*<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">yybottom<pos:position pos:line="13" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">YYFPRINTF<pos:position pos:line="14" pos:column="16"/></name> <argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">stderr<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="26">" %d"<pos:position pos:line="14" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">yybot<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></for>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">YYFPRINTF<pos:position pos:line="16" pos:column="12"/></name> <argument_list pos:line="16" pos:column="13">(<argument><expr><name pos:line="16" pos:column="14">stderr<pos:position pos:line="16" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="22">"\n"<pos:position pos:line="16" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_674_collectd-4.3.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">receive_thread<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">arg<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<return pos:line="3" pos:column="9">return <expr><operator pos:line="3" pos:column="16">(<pos:position pos:line="3" pos:column="17"/></operator><ternary><condition><expr><call><name pos:line="3" pos:column="17">network_receive<pos:position pos:line="3" pos:column="32"/></name> <argument_list pos:line="3" pos:column="33">()<pos:position pos:line="3" pos:column="35"/></argument_list></call></expr> ?<pos:position pos:line="3" pos:column="37"/></condition><then pos:line="3" pos:column="37"> <expr><operator pos:line="3" pos:column="38">(<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="39">void<pos:position pos:line="3" pos:column="43"/></name> <operator pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></operator><operator pos:line="3" pos:column="45">)<pos:position pos:line="3" pos:column="46"/></operator> <literal type="number" pos:line="3" pos:column="47">1<pos:position pos:line="3" pos:column="48"/></literal></expr> <pos:position pos:line="3" pos:column="49"/></then><else pos:line="3" pos:column="49">: <expr><operator pos:line="3" pos:column="51">(<pos:position pos:line="3" pos:column="52"/></operator><name pos:line="3" pos:column="52">void<pos:position pos:line="3" pos:column="56"/></name> <operator pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></operator><operator pos:line="3" pos:column="58">)<pos:position pos:line="3" pos:column="59"/></operator> <literal type="number" pos:line="3" pos:column="60">0<pos:position pos:line="3" pos:column="61"/></literal></expr></else></ternary><operator pos:line="3" pos:column="61">)<pos:position pos:line="3" pos:column="62"/></operator></expr>;<pos:position pos:line="3" pos:column="63"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

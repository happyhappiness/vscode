<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1052_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">submit_volume_perf_data<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">hostname<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="59">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">data_volume_perf_t<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">old_data<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="3" pos:column="17">const<pos:position pos:line="3" pos:column="22"/></specifier> <name pos:line="3" pos:column="23">data_volume_perf_t<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">new_data<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="53">int<pos:position pos:line="3" pos:column="56"/></name></type> <name pos:line="3" pos:column="57">interval<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="66"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">plugin_instance<pos:position pos:line="5" pos:column="29"/></name><index pos:line="5" pos:column="29">[<expr><name pos:line="5" pos:column="30">DATA_MAX_NAME_LEN<pos:position pos:line="5" pos:column="47"/></name></expr>]<pos:position pos:line="5" pos:column="48"/></index></name></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">hostname<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">==<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">)<pos:position pos:line="7" pos:column="31"/></operator> <operator pos:line="7" pos:column="32">||<pos:position pos:line="7" pos:column="34"/></operator> <operator pos:line="7" pos:column="35">(<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="36">old_data<pos:position pos:line="7" pos:column="44"/></name> <operator pos:line="7" pos:column="45">==<pos:position pos:line="7" pos:column="47"/></operator> <name pos:line="7" pos:column="48">NULL<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">)<pos:position pos:line="7" pos:column="53"/></operator> <operator pos:line="7" pos:column="54">||<pos:position pos:line="7" pos:column="56"/></operator> <operator pos:line="7" pos:column="57">(<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="58">new_data<pos:position pos:line="7" pos:column="66"/></name> <operator pos:line="7" pos:column="67">==<pos:position pos:line="7" pos:column="69"/></operator> <name pos:line="7" pos:column="70">NULL<pos:position pos:line="7" pos:column="74"/></name><operator pos:line="7" pos:column="74">)<pos:position pos:line="7" pos:column="75"/></operator></expr>)<pos:position pos:line="7" pos:column="76"/></condition><then pos:line="7" pos:column="76">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><operator pos:line="8" pos:column="25">-<pos:position pos:line="8" pos:column="26"/></operator><literal type="number" pos:line="8" pos:column="26">1<pos:position pos:line="8" pos:column="27"/></literal><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator></expr>;<pos:position pos:line="8" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">ssnprintf<pos:position pos:line="10" pos:column="18"/></name> <argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">plugin_instance<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="37">sizeof <argument_list pos:line="10" pos:column="44">(<argument><expr><name pos:line="10" pos:column="45">plugin_instance<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></sizeof></expr></argument>,
			<argument><expr><literal type="string" pos:line="11" pos:column="25">"volume-%s"<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="38">old_data<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">-&gt;<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="48">name<pos:position pos:line="11" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt>

	<comment type="block" pos:line="13" pos:column="9">/* Check for and submit disk-octet values */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">HAS_ALL_FLAGS<pos:position pos:line="14" pos:column="26"/></name> <argument_list pos:line="14" pos:column="27">(<argument><expr><name><name pos:line="14" pos:column="28">old_data<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">-&gt;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="38">flags<pos:position pos:line="14" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">CFG_VOLUME_PERF_IO<pos:position pos:line="14" pos:column="63"/></name></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call>
			<operator pos:line="15" pos:column="25">&amp;&amp;<pos:position pos:line="15" pos:column="35"/></operator> <call><name pos:line="15" pos:column="28">HAS_ALL_FLAGS<pos:position pos:line="15" pos:column="41"/></name> <argument_list pos:line="15" pos:column="42">(<argument><expr><name><name pos:line="15" pos:column="43">new_data<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">flags<pos:position pos:line="15" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="60">HAVE_VOLUME_PERF_BYTES_READ<pos:position pos:line="15" pos:column="87"/></name> <operator pos:line="15" pos:column="88">|<pos:position pos:line="15" pos:column="89"/></operator> <name pos:line="15" pos:column="90">HAVE_VOLUME_PERF_BYTES_WRITE<pos:position pos:line="15" pos:column="118"/></name></expr></argument>)<pos:position pos:line="15" pos:column="119"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="120"/></condition><then pos:line="15" pos:column="120">
	<block pos:line="16" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">submit_two_derive<pos:position pos:line="17" pos:column="34"/></name> <argument_list pos:line="17" pos:column="35">(<argument><expr><name pos:line="17" pos:column="36">hostname<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">plugin_instance<pos:position pos:line="17" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="63">"disk_octets"<pos:position pos:line="17" pos:column="76"/></literal></expr></argument>, <comment type="block" pos:line="17" pos:column="78">/* type instance = */</comment> <argument><expr><name pos:line="17" pos:column="100">NULL<pos:position pos:line="17" pos:column="104"/></name></expr></argument>,
				<argument><expr><operator pos:line="18" pos:column="33">(<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="34">derive_t<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">)<pos:position pos:line="18" pos:column="43"/></operator> <name><name pos:line="18" pos:column="44">new_data<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">-&gt;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="54">read_bytes<pos:position pos:line="18" pos:column="64"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="66">(<pos:position pos:line="18" pos:column="67"/></operator><name pos:line="18" pos:column="67">derive_t<pos:position pos:line="18" pos:column="75"/></name><operator pos:line="18" pos:column="75">)<pos:position pos:line="18" pos:column="76"/></operator> <name><name pos:line="18" pos:column="77">new_data<pos:position pos:line="18" pos:column="85"/></name><operator pos:line="18" pos:column="85">-&gt;<pos:position pos:line="18" pos:column="90"/></operator><name pos:line="18" pos:column="87">write_bytes<pos:position pos:line="18" pos:column="98"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="100">new_data<pos:position pos:line="18" pos:column="108"/></name><operator pos:line="18" pos:column="108">-&gt;<pos:position pos:line="18" pos:column="113"/></operator><name pos:line="18" pos:column="110">timestamp<pos:position pos:line="18" pos:column="119"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="121">interval<pos:position pos:line="18" pos:column="129"/></name></expr></argument>)<pos:position pos:line="18" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="131"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="21" pos:column="9">/* Check for and submit disk-operations values */</comment>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">HAS_ALL_FLAGS<pos:position pos:line="22" pos:column="26"/></name> <argument_list pos:line="22" pos:column="27">(<argument><expr><name><name pos:line="22" pos:column="28">old_data<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">flags<pos:position pos:line="22" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">CFG_VOLUME_PERF_OPS<pos:position pos:line="22" pos:column="64"/></name></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call>
			<operator pos:line="23" pos:column="25">&amp;&amp;<pos:position pos:line="23" pos:column="35"/></operator> <call><name pos:line="23" pos:column="28">HAS_ALL_FLAGS<pos:position pos:line="23" pos:column="41"/></name> <argument_list pos:line="23" pos:column="42">(<argument><expr><name><name pos:line="23" pos:column="43">new_data<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">-&gt;<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="53">flags<pos:position pos:line="23" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="60">HAVE_VOLUME_PERF_OPS_READ<pos:position pos:line="23" pos:column="85"/></name> <operator pos:line="23" pos:column="86">|<pos:position pos:line="23" pos:column="87"/></operator> <name pos:line="23" pos:column="88">HAVE_VOLUME_PERF_OPS_WRITE<pos:position pos:line="23" pos:column="114"/></name></expr></argument>)<pos:position pos:line="23" pos:column="115"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="116"/></condition><then pos:line="23" pos:column="116">
	<block pos:line="24" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">submit_two_derive<pos:position pos:line="25" pos:column="34"/></name> <argument_list pos:line="25" pos:column="35">(<argument><expr><name pos:line="25" pos:column="36">hostname<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="46">plugin_instance<pos:position pos:line="25" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="63">"disk_ops"<pos:position pos:line="25" pos:column="73"/></literal></expr></argument>, <comment type="block" pos:line="25" pos:column="75">/* type instance = */</comment> <argument><expr><name pos:line="25" pos:column="97">NULL<pos:position pos:line="25" pos:column="101"/></name></expr></argument>,
				<argument><expr><operator pos:line="26" pos:column="33">(<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="34">derive_t<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">)<pos:position pos:line="26" pos:column="43"/></operator> <name><name pos:line="26" pos:column="44">new_data<pos:position pos:line="26" pos:column="52"/></name><operator pos:line="26" pos:column="52">-&gt;<pos:position pos:line="26" pos:column="57"/></operator><name pos:line="26" pos:column="54">read_ops<pos:position pos:line="26" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="64">(<pos:position pos:line="26" pos:column="65"/></operator><name pos:line="26" pos:column="65">derive_t<pos:position pos:line="26" pos:column="73"/></name><operator pos:line="26" pos:column="73">)<pos:position pos:line="26" pos:column="74"/></operator> <name><name pos:line="26" pos:column="75">new_data<pos:position pos:line="26" pos:column="83"/></name><operator pos:line="26" pos:column="83">-&gt;<pos:position pos:line="26" pos:column="88"/></operator><name pos:line="26" pos:column="85">write_ops<pos:position pos:line="26" pos:column="94"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="96">new_data<pos:position pos:line="26" pos:column="104"/></name><operator pos:line="26" pos:column="104">-&gt;<pos:position pos:line="26" pos:column="109"/></operator><name pos:line="26" pos:column="106">timestamp<pos:position pos:line="26" pos:column="115"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="117">interval<pos:position pos:line="26" pos:column="125"/></name></expr></argument>)<pos:position pos:line="26" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="127"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="29" pos:column="9">/* Check for, calculate and submit disk-latency values */</comment>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">HAS_ALL_FLAGS<pos:position pos:line="30" pos:column="26"/></name> <argument_list pos:line="30" pos:column="27">(<argument><expr><name><name pos:line="30" pos:column="28">old_data<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">flags<pos:position pos:line="30" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">CFG_VOLUME_PERF_LATENCY<pos:position pos:line="30" pos:column="68"/></name>
				<operator pos:line="31" pos:column="33">|<pos:position pos:line="31" pos:column="34"/></operator> <name pos:line="31" pos:column="35">HAVE_VOLUME_PERF_OPS_READ<pos:position pos:line="31" pos:column="60"/></name> <operator pos:line="31" pos:column="61">|<pos:position pos:line="31" pos:column="62"/></operator> <name pos:line="31" pos:column="63">HAVE_VOLUME_PERF_OPS_WRITE<pos:position pos:line="31" pos:column="89"/></name>
				<operator pos:line="32" pos:column="33">|<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="35">HAVE_VOLUME_PERF_LATENCY_READ<pos:position pos:line="32" pos:column="64"/></name> <operator pos:line="32" pos:column="65">|<pos:position pos:line="32" pos:column="66"/></operator> <name pos:line="32" pos:column="67">HAVE_VOLUME_PERF_LATENCY_WRITE<pos:position pos:line="32" pos:column="97"/></name></expr></argument>)<pos:position pos:line="32" pos:column="98"/></argument_list></call>
			<operator pos:line="33" pos:column="25">&amp;&amp;<pos:position pos:line="33" pos:column="35"/></operator> <call><name pos:line="33" pos:column="28">HAS_ALL_FLAGS<pos:position pos:line="33" pos:column="41"/></name> <argument_list pos:line="33" pos:column="42">(<argument><expr><name><name pos:line="33" pos:column="43">new_data<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">-&gt;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="53">flags<pos:position pos:line="33" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="60">HAVE_VOLUME_PERF_OPS_READ<pos:position pos:line="33" pos:column="85"/></name> <operator pos:line="33" pos:column="86">|<pos:position pos:line="33" pos:column="87"/></operator> <name pos:line="33" pos:column="88">HAVE_VOLUME_PERF_OPS_WRITE<pos:position pos:line="33" pos:column="114"/></name>
				<operator pos:line="34" pos:column="33">|<pos:position pos:line="34" pos:column="34"/></operator> <name pos:line="34" pos:column="35">HAVE_VOLUME_PERF_LATENCY_READ<pos:position pos:line="34" pos:column="64"/></name> <operator pos:line="34" pos:column="65">|<pos:position pos:line="34" pos:column="66"/></operator> <name pos:line="34" pos:column="67">HAVE_VOLUME_PERF_LATENCY_WRITE<pos:position pos:line="34" pos:column="97"/></name></expr></argument>)<pos:position pos:line="34" pos:column="98"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="99"/></condition><then pos:line="34" pos:column="99">
	<block pos:line="35" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="36" pos:column="17">gauge_t<pos:position pos:line="36" pos:column="24"/></name></type> <name pos:line="36" pos:column="25">latency_per_op_read<pos:position pos:line="36" pos:column="44"/></name></decl>;<pos:position pos:line="36" pos:column="45"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="37" pos:column="17">gauge_t<pos:position pos:line="37" pos:column="24"/></name></type> <name pos:line="37" pos:column="25">latency_per_op_write<pos:position pos:line="37" pos:column="45"/></name></decl>;<pos:position pos:line="37" pos:column="46"/></decl_stmt>

		<expr_stmt><expr><name pos:line="39" pos:column="17">latency_per_op_read<pos:position pos:line="39" pos:column="36"/></name> <operator pos:line="39" pos:column="37">=<pos:position pos:line="39" pos:column="38"/></operator> <name pos:line="39" pos:column="39">NAN<pos:position pos:line="39" pos:column="42"/></name></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="40" pos:column="17">latency_per_op_write<pos:position pos:line="40" pos:column="37"/></name> <operator pos:line="40" pos:column="38">=<pos:position pos:line="40" pos:column="39"/></operator> <name pos:line="40" pos:column="40">NAN<pos:position pos:line="40" pos:column="43"/></name></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>

		<comment type="block" pos:line="42" pos:column="17">/* Check if a counter wrapped around. */</comment>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><operator pos:line="43" pos:column="21">(<pos:position pos:line="43" pos:column="22"/></operator><name><name pos:line="43" pos:column="22">new_data<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">-&gt;<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="32">read_ops<pos:position pos:line="43" pos:column="40"/></name></name> <operator pos:line="43" pos:column="41">&gt;<pos:position pos:line="43" pos:column="45"/></operator> <name><name pos:line="43" pos:column="43">old_data<pos:position pos:line="43" pos:column="51"/></name><operator pos:line="43" pos:column="51">-&gt;<pos:position pos:line="43" pos:column="56"/></operator><name pos:line="43" pos:column="53">read_ops<pos:position pos:line="43" pos:column="61"/></name></name><operator pos:line="43" pos:column="61">)<pos:position pos:line="43" pos:column="62"/></operator>
				<operator pos:line="44" pos:column="33">&amp;&amp;<pos:position pos:line="44" pos:column="43"/></operator> <operator pos:line="44" pos:column="36">(<pos:position pos:line="44" pos:column="37"/></operator><name><name pos:line="44" pos:column="37">new_data<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">-&gt;<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="47">read_latency<pos:position pos:line="44" pos:column="59"/></name></name> <operator pos:line="44" pos:column="60">&gt;<pos:position pos:line="44" pos:column="64"/></operator> <name><name pos:line="44" pos:column="62">old_data<pos:position pos:line="44" pos:column="70"/></name><operator pos:line="44" pos:column="70">-&gt;<pos:position pos:line="44" pos:column="75"/></operator><name pos:line="44" pos:column="72">read_latency<pos:position pos:line="44" pos:column="84"/></name></name><operator pos:line="44" pos:column="84">)<pos:position pos:line="44" pos:column="85"/></operator></expr>)<pos:position pos:line="44" pos:column="86"/></condition><then pos:line="44" pos:column="86">
		<block pos:line="45" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="46" pos:column="25">uint64_t<pos:position pos:line="46" pos:column="33"/></name></type> <name pos:line="46" pos:column="34">diff_ops_read<pos:position pos:line="46" pos:column="47"/></name></decl>;<pos:position pos:line="46" pos:column="48"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="47" pos:column="25">uint64_t<pos:position pos:line="47" pos:column="33"/></name></type> <name pos:line="47" pos:column="34">diff_latency_read<pos:position pos:line="47" pos:column="51"/></name></decl>;<pos:position pos:line="47" pos:column="52"/></decl_stmt>

			<expr_stmt><expr><name pos:line="49" pos:column="25">diff_ops_read<pos:position pos:line="49" pos:column="38"/></name> <operator pos:line="49" pos:column="39">=<pos:position pos:line="49" pos:column="40"/></operator> <name><name pos:line="49" pos:column="41">new_data<pos:position pos:line="49" pos:column="49"/></name><operator pos:line="49" pos:column="49">-&gt;<pos:position pos:line="49" pos:column="54"/></operator><name pos:line="49" pos:column="51">read_ops<pos:position pos:line="49" pos:column="59"/></name></name> <operator pos:line="49" pos:column="60">-<pos:position pos:line="49" pos:column="61"/></operator> <name><name pos:line="49" pos:column="62">old_data<pos:position pos:line="49" pos:column="70"/></name><operator pos:line="49" pos:column="70">-&gt;<pos:position pos:line="49" pos:column="75"/></operator><name pos:line="49" pos:column="72">read_ops<pos:position pos:line="49" pos:column="80"/></name></name></expr>;<pos:position pos:line="49" pos:column="81"/></expr_stmt>
			<expr_stmt><expr><name pos:line="50" pos:column="25">diff_latency_read<pos:position pos:line="50" pos:column="42"/></name> <operator pos:line="50" pos:column="43">=<pos:position pos:line="50" pos:column="44"/></operator> <name><name pos:line="50" pos:column="45">new_data<pos:position pos:line="50" pos:column="53"/></name><operator pos:line="50" pos:column="53">-&gt;<pos:position pos:line="50" pos:column="58"/></operator><name pos:line="50" pos:column="55">read_latency<pos:position pos:line="50" pos:column="67"/></name></name> <operator pos:line="50" pos:column="68">-<pos:position pos:line="50" pos:column="69"/></operator> <name><name pos:line="50" pos:column="70">old_data<pos:position pos:line="50" pos:column="78"/></name><operator pos:line="50" pos:column="78">-&gt;<pos:position pos:line="50" pos:column="83"/></operator><name pos:line="50" pos:column="80">read_latency<pos:position pos:line="50" pos:column="92"/></name></name></expr>;<pos:position pos:line="50" pos:column="93"/></expr_stmt>

			<if pos:line="52" pos:column="25">if <condition pos:line="52" pos:column="28">(<expr><name pos:line="52" pos:column="29">diff_ops_read<pos:position pos:line="52" pos:column="42"/></name> <operator pos:line="52" pos:column="43">&gt;<pos:position pos:line="52" pos:column="47"/></operator> <literal type="number" pos:line="52" pos:column="45">0<pos:position pos:line="52" pos:column="46"/></literal></expr>)<pos:position pos:line="52" pos:column="47"/></condition><then pos:line="52" pos:column="47">
				<block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="33">latency_per_op_read<pos:position pos:line="53" pos:column="52"/></name> <operator pos:line="53" pos:column="53">=<pos:position pos:line="53" pos:column="54"/></operator> <operator pos:line="53" pos:column="55">(<pos:position pos:line="53" pos:column="56"/></operator><operator pos:line="53" pos:column="56">(<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="57">gauge_t<pos:position pos:line="53" pos:column="64"/></name><operator pos:line="53" pos:column="64">)<pos:position pos:line="53" pos:column="65"/></operator> <name pos:line="53" pos:column="66">diff_latency_read<pos:position pos:line="53" pos:column="83"/></name><operator pos:line="53" pos:column="83">)<pos:position pos:line="53" pos:column="84"/></operator> <operator pos:line="53" pos:column="85">/<pos:position pos:line="53" pos:column="86"/></operator> <operator pos:line="53" pos:column="87">(<pos:position pos:line="53" pos:column="88"/></operator><operator pos:line="53" pos:column="88">(<pos:position pos:line="53" pos:column="89"/></operator><name pos:line="53" pos:column="89">gauge_t<pos:position pos:line="53" pos:column="96"/></name><operator pos:line="53" pos:column="96">)<pos:position pos:line="53" pos:column="97"/></operator> <name pos:line="53" pos:column="98">diff_ops_read<pos:position pos:line="53" pos:column="111"/></name><operator pos:line="53" pos:column="111">)<pos:position pos:line="53" pos:column="112"/></operator></expr>;<pos:position pos:line="53" pos:column="113"/></expr_stmt></block></then></if>
		}<pos:position pos:line="54" pos:column="18"/></block></then></if>

		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><operator pos:line="56" pos:column="21">(<pos:position pos:line="56" pos:column="22"/></operator><name><name pos:line="56" pos:column="22">new_data<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">-&gt;<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="32">write_ops<pos:position pos:line="56" pos:column="41"/></name></name> <operator pos:line="56" pos:column="42">&gt;<pos:position pos:line="56" pos:column="46"/></operator> <name><name pos:line="56" pos:column="44">old_data<pos:position pos:line="56" pos:column="52"/></name><operator pos:line="56" pos:column="52">-&gt;<pos:position pos:line="56" pos:column="57"/></operator><name pos:line="56" pos:column="54">write_ops<pos:position pos:line="56" pos:column="63"/></name></name><operator pos:line="56" pos:column="63">)<pos:position pos:line="56" pos:column="64"/></operator>
				<operator pos:line="57" pos:column="33">&amp;&amp;<pos:position pos:line="57" pos:column="43"/></operator> <operator pos:line="57" pos:column="36">(<pos:position pos:line="57" pos:column="37"/></operator><name><name pos:line="57" pos:column="37">new_data<pos:position pos:line="57" pos:column="45"/></name><operator pos:line="57" pos:column="45">-&gt;<pos:position pos:line="57" pos:column="50"/></operator><name pos:line="57" pos:column="47">write_latency<pos:position pos:line="57" pos:column="60"/></name></name> <operator pos:line="57" pos:column="61">&gt;<pos:position pos:line="57" pos:column="65"/></operator> <name><name pos:line="57" pos:column="63">old_data<pos:position pos:line="57" pos:column="71"/></name><operator pos:line="57" pos:column="71">-&gt;<pos:position pos:line="57" pos:column="76"/></operator><name pos:line="57" pos:column="73">write_latency<pos:position pos:line="57" pos:column="86"/></name></name><operator pos:line="57" pos:column="86">)<pos:position pos:line="57" pos:column="87"/></operator></expr>)<pos:position pos:line="57" pos:column="88"/></condition><then pos:line="57" pos:column="88">
		<block pos:line="58" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="59" pos:column="25">uint64_t<pos:position pos:line="59" pos:column="33"/></name></type> <name pos:line="59" pos:column="34">diff_ops_write<pos:position pos:line="59" pos:column="48"/></name></decl>;<pos:position pos:line="59" pos:column="49"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="60" pos:column="25">uint64_t<pos:position pos:line="60" pos:column="33"/></name></type> <name pos:line="60" pos:column="34">diff_latency_write<pos:position pos:line="60" pos:column="52"/></name></decl>;<pos:position pos:line="60" pos:column="53"/></decl_stmt>

			<expr_stmt><expr><name pos:line="62" pos:column="25">diff_ops_write<pos:position pos:line="62" pos:column="39"/></name> <operator pos:line="62" pos:column="40">=<pos:position pos:line="62" pos:column="41"/></operator> <name><name pos:line="62" pos:column="42">new_data<pos:position pos:line="62" pos:column="50"/></name><operator pos:line="62" pos:column="50">-&gt;<pos:position pos:line="62" pos:column="55"/></operator><name pos:line="62" pos:column="52">write_ops<pos:position pos:line="62" pos:column="61"/></name></name> <operator pos:line="62" pos:column="62">-<pos:position pos:line="62" pos:column="63"/></operator> <name><name pos:line="62" pos:column="64">old_data<pos:position pos:line="62" pos:column="72"/></name><operator pos:line="62" pos:column="72">-&gt;<pos:position pos:line="62" pos:column="77"/></operator><name pos:line="62" pos:column="74">write_ops<pos:position pos:line="62" pos:column="83"/></name></name></expr>;<pos:position pos:line="62" pos:column="84"/></expr_stmt>
			<expr_stmt><expr><name pos:line="63" pos:column="25">diff_latency_write<pos:position pos:line="63" pos:column="43"/></name> <operator pos:line="63" pos:column="44">=<pos:position pos:line="63" pos:column="45"/></operator> <name><name pos:line="63" pos:column="46">new_data<pos:position pos:line="63" pos:column="54"/></name><operator pos:line="63" pos:column="54">-&gt;<pos:position pos:line="63" pos:column="59"/></operator><name pos:line="63" pos:column="56">write_latency<pos:position pos:line="63" pos:column="69"/></name></name> <operator pos:line="63" pos:column="70">-<pos:position pos:line="63" pos:column="71"/></operator> <name><name pos:line="63" pos:column="72">old_data<pos:position pos:line="63" pos:column="80"/></name><operator pos:line="63" pos:column="80">-&gt;<pos:position pos:line="63" pos:column="85"/></operator><name pos:line="63" pos:column="82">write_latency<pos:position pos:line="63" pos:column="95"/></name></name></expr>;<pos:position pos:line="63" pos:column="96"/></expr_stmt>

			<if pos:line="65" pos:column="25">if <condition pos:line="65" pos:column="28">(<expr><name pos:line="65" pos:column="29">diff_ops_write<pos:position pos:line="65" pos:column="43"/></name> <operator pos:line="65" pos:column="44">&gt;<pos:position pos:line="65" pos:column="48"/></operator> <literal type="number" pos:line="65" pos:column="46">0<pos:position pos:line="65" pos:column="47"/></literal></expr>)<pos:position pos:line="65" pos:column="48"/></condition><then pos:line="65" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="33">latency_per_op_write<pos:position pos:line="66" pos:column="53"/></name> <operator pos:line="66" pos:column="54">=<pos:position pos:line="66" pos:column="55"/></operator> <operator pos:line="66" pos:column="56">(<pos:position pos:line="66" pos:column="57"/></operator><operator pos:line="66" pos:column="57">(<pos:position pos:line="66" pos:column="58"/></operator><name pos:line="66" pos:column="58">gauge_t<pos:position pos:line="66" pos:column="65"/></name><operator pos:line="66" pos:column="65">)<pos:position pos:line="66" pos:column="66"/></operator> <name pos:line="66" pos:column="67">diff_latency_write<pos:position pos:line="66" pos:column="85"/></name><operator pos:line="66" pos:column="85">)<pos:position pos:line="66" pos:column="86"/></operator> <operator pos:line="66" pos:column="87">/<pos:position pos:line="66" pos:column="88"/></operator> <operator pos:line="66" pos:column="89">(<pos:position pos:line="66" pos:column="90"/></operator><operator pos:line="66" pos:column="90">(<pos:position pos:line="66" pos:column="91"/></operator><name pos:line="66" pos:column="91">gauge_t<pos:position pos:line="66" pos:column="98"/></name><operator pos:line="66" pos:column="98">)<pos:position pos:line="66" pos:column="99"/></operator> <name pos:line="66" pos:column="100">diff_ops_write<pos:position pos:line="66" pos:column="114"/></name><operator pos:line="66" pos:column="114">)<pos:position pos:line="66" pos:column="115"/></operator></expr>;<pos:position pos:line="66" pos:column="116"/></expr_stmt></block></then></if>
		}<pos:position pos:line="67" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="69" pos:column="17">submit_two_gauge<pos:position pos:line="69" pos:column="33"/></name> <argument_list pos:line="69" pos:column="34">(<argument><expr><name pos:line="69" pos:column="35">hostname<pos:position pos:line="69" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="45">plugin_instance<pos:position pos:line="69" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="62">"disk_latency"<pos:position pos:line="69" pos:column="76"/></literal></expr></argument>, <comment type="block" pos:line="69" pos:column="78">/* type instance = */</comment> <argument><expr><name pos:line="69" pos:column="100">NULL<pos:position pos:line="69" pos:column="104"/></name></expr></argument>,
				<argument><expr><name pos:line="70" pos:column="33">latency_per_op_read<pos:position pos:line="70" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="54">latency_per_op_write<pos:position pos:line="70" pos:column="74"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="76">new_data<pos:position pos:line="70" pos:column="84"/></name><operator pos:line="70" pos:column="84">-&gt;<pos:position pos:line="70" pos:column="89"/></operator><name pos:line="70" pos:column="86">timestamp<pos:position pos:line="70" pos:column="95"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="97">interval<pos:position pos:line="70" pos:column="105"/></name></expr></argument>)<pos:position pos:line="70" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="107"/></expr_stmt>
	}<pos:position pos:line="71" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="73" pos:column="9">/* Clear all HAVE_* flags. */</comment>
	<expr_stmt><expr><name><name pos:line="74" pos:column="9">old_data<pos:position pos:line="74" pos:column="17"/></name><operator pos:line="74" pos:column="17">-&gt;<pos:position pos:line="74" pos:column="22"/></operator><name pos:line="74" pos:column="19">flags<pos:position pos:line="74" pos:column="24"/></name></name> <operator pos:line="74" pos:column="25">&amp;=<pos:position pos:line="74" pos:column="31"/></operator> <operator pos:line="74" pos:column="28">~<pos:position pos:line="74" pos:column="29"/></operator><name pos:line="74" pos:column="29">HAVE_VOLUME_PERF_ALL<pos:position pos:line="74" pos:column="49"/></name></expr>;<pos:position pos:line="74" pos:column="50"/></expr_stmt>

	<comment type="block" pos:line="76" pos:column="9">/* Copy all counters */</comment>
	<expr_stmt><expr><name><name pos:line="77" pos:column="9">old_data<pos:position pos:line="77" pos:column="17"/></name><operator pos:line="77" pos:column="17">-&gt;<pos:position pos:line="77" pos:column="22"/></operator><name pos:line="77" pos:column="19">timestamp<pos:position pos:line="77" pos:column="28"/></name></name> <operator pos:line="77" pos:column="29">=<pos:position pos:line="77" pos:column="30"/></operator> <name><name pos:line="77" pos:column="31">new_data<pos:position pos:line="77" pos:column="39"/></name><operator pos:line="77" pos:column="39">-&gt;<pos:position pos:line="77" pos:column="44"/></operator><name pos:line="77" pos:column="41">timestamp<pos:position pos:line="77" pos:column="50"/></name></name></expr>;<pos:position pos:line="77" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="78" pos:column="9">old_data<pos:position pos:line="78" pos:column="17"/></name><operator pos:line="78" pos:column="17">-&gt;<pos:position pos:line="78" pos:column="22"/></operator><name pos:line="78" pos:column="19">read_bytes<pos:position pos:line="78" pos:column="29"/></name></name> <operator pos:line="78" pos:column="30">=<pos:position pos:line="78" pos:column="31"/></operator> <name><name pos:line="78" pos:column="32">new_data<pos:position pos:line="78" pos:column="40"/></name><operator pos:line="78" pos:column="40">-&gt;<pos:position pos:line="78" pos:column="45"/></operator><name pos:line="78" pos:column="42">read_bytes<pos:position pos:line="78" pos:column="52"/></name></name></expr>;<pos:position pos:line="78" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="79" pos:column="9">old_data<pos:position pos:line="79" pos:column="17"/></name><operator pos:line="79" pos:column="17">-&gt;<pos:position pos:line="79" pos:column="22"/></operator><name pos:line="79" pos:column="19">write_bytes<pos:position pos:line="79" pos:column="30"/></name></name> <operator pos:line="79" pos:column="31">=<pos:position pos:line="79" pos:column="32"/></operator> <name><name pos:line="79" pos:column="33">new_data<pos:position pos:line="79" pos:column="41"/></name><operator pos:line="79" pos:column="41">-&gt;<pos:position pos:line="79" pos:column="46"/></operator><name pos:line="79" pos:column="43">write_bytes<pos:position pos:line="79" pos:column="54"/></name></name></expr>;<pos:position pos:line="79" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="80" pos:column="9">old_data<pos:position pos:line="80" pos:column="17"/></name><operator pos:line="80" pos:column="17">-&gt;<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="19">read_ops<pos:position pos:line="80" pos:column="27"/></name></name> <operator pos:line="80" pos:column="28">=<pos:position pos:line="80" pos:column="29"/></operator> <name><name pos:line="80" pos:column="30">new_data<pos:position pos:line="80" pos:column="38"/></name><operator pos:line="80" pos:column="38">-&gt;<pos:position pos:line="80" pos:column="43"/></operator><name pos:line="80" pos:column="40">read_ops<pos:position pos:line="80" pos:column="48"/></name></name></expr>;<pos:position pos:line="80" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="81" pos:column="9">old_data<pos:position pos:line="81" pos:column="17"/></name><operator pos:line="81" pos:column="17">-&gt;<pos:position pos:line="81" pos:column="22"/></operator><name pos:line="81" pos:column="19">write_ops<pos:position pos:line="81" pos:column="28"/></name></name> <operator pos:line="81" pos:column="29">=<pos:position pos:line="81" pos:column="30"/></operator> <name><name pos:line="81" pos:column="31">new_data<pos:position pos:line="81" pos:column="39"/></name><operator pos:line="81" pos:column="39">-&gt;<pos:position pos:line="81" pos:column="44"/></operator><name pos:line="81" pos:column="41">write_ops<pos:position pos:line="81" pos:column="50"/></name></name></expr>;<pos:position pos:line="81" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="82" pos:column="9">old_data<pos:position pos:line="82" pos:column="17"/></name><operator pos:line="82" pos:column="17">-&gt;<pos:position pos:line="82" pos:column="22"/></operator><name pos:line="82" pos:column="19">read_latency<pos:position pos:line="82" pos:column="31"/></name></name> <operator pos:line="82" pos:column="32">=<pos:position pos:line="82" pos:column="33"/></operator> <name><name pos:line="82" pos:column="34">new_data<pos:position pos:line="82" pos:column="42"/></name><operator pos:line="82" pos:column="42">-&gt;<pos:position pos:line="82" pos:column="47"/></operator><name pos:line="82" pos:column="44">read_latency<pos:position pos:line="82" pos:column="56"/></name></name></expr>;<pos:position pos:line="82" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="83" pos:column="9">old_data<pos:position pos:line="83" pos:column="17"/></name><operator pos:line="83" pos:column="17">-&gt;<pos:position pos:line="83" pos:column="22"/></operator><name pos:line="83" pos:column="19">write_latency<pos:position pos:line="83" pos:column="32"/></name></name> <operator pos:line="83" pos:column="33">=<pos:position pos:line="83" pos:column="34"/></operator> <name><name pos:line="83" pos:column="35">new_data<pos:position pos:line="83" pos:column="43"/></name><operator pos:line="83" pos:column="43">-&gt;<pos:position pos:line="83" pos:column="48"/></operator><name pos:line="83" pos:column="45">write_latency<pos:position pos:line="83" pos:column="58"/></name></name></expr>;<pos:position pos:line="83" pos:column="59"/></expr_stmt>

	<comment type="block" pos:line="85" pos:column="9">/* Copy the HAVE_* flags */</comment>
	<expr_stmt><expr><name><name pos:line="86" pos:column="9">old_data<pos:position pos:line="86" pos:column="17"/></name><operator pos:line="86" pos:column="17">-&gt;<pos:position pos:line="86" pos:column="22"/></operator><name pos:line="86" pos:column="19">flags<pos:position pos:line="86" pos:column="24"/></name></name> <operator pos:line="86" pos:column="25">|=<pos:position pos:line="86" pos:column="27"/></operator> <operator pos:line="86" pos:column="28">(<pos:position pos:line="86" pos:column="29"/></operator><name><name pos:line="86" pos:column="29">new_data<pos:position pos:line="86" pos:column="37"/></name><operator pos:line="86" pos:column="37">-&gt;<pos:position pos:line="86" pos:column="42"/></operator><name pos:line="86" pos:column="39">flags<pos:position pos:line="86" pos:column="44"/></name></name> <operator pos:line="86" pos:column="45">&amp;<pos:position pos:line="86" pos:column="50"/></operator> <name pos:line="86" pos:column="47">HAVE_VOLUME_PERF_ALL<pos:position pos:line="86" pos:column="67"/></name><operator pos:line="86" pos:column="67">)<pos:position pos:line="86" pos:column="68"/></operator></expr>;<pos:position pos:line="86" pos:column="69"/></expr_stmt>

	<return pos:line="88" pos:column="9">return <expr><operator pos:line="88" pos:column="16">(<pos:position pos:line="88" pos:column="17"/></operator><literal type="number" pos:line="88" pos:column="17">0<pos:position pos:line="88" pos:column="18"/></literal><operator pos:line="88" pos:column="18">)<pos:position pos:line="88" pos:column="19"/></operator></expr>;<pos:position pos:line="88" pos:column="20"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

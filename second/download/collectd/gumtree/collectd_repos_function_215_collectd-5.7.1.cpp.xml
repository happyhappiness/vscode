<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_215_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">init_value_list<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">value_list_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">vl<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">virDomainPtr<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">dom<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list> <block pos:line="1" pos:column="65">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">n<pos:position pos:line="2" pos:column="8"/></name></decl>;<pos:position pos:line="2" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">name<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">uuid<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><name pos:line="4" pos:column="13">VIR_UUID_STRING_BUFLEN<pos:position pos:line="4" pos:column="35"/></name></expr>]<pos:position pos:line="4" pos:column="36"/></index></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">sstrncpy<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name><name pos:line="6" pos:column="12">vl<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">plugin<pos:position pos:line="6" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="24">PLUGIN_NAME<pos:position pos:line="6" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="37">sizeof<argument_list pos:line="6" pos:column="43">(<argument><expr><name><name pos:line="6" pos:column="44">vl<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">-&gt;<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="48">plugin<pos:position pos:line="6" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="57"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="8" pos:column="3">vl<pos:position pos:line="8" pos:column="5"/></name><operator pos:line="8" pos:column="5">-&gt;<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="7">host<pos:position pos:line="8" pos:column="11"/></name><index pos:line="8" pos:column="11">[<expr><literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr>]<pos:position pos:line="8" pos:column="14"/></index></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <literal type="char" pos:line="8" pos:column="17">'\0'<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Construct the hostname field according to HostnameFormat. */</comment>
  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><decl><type><name pos:line="11" pos:column="8">int<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">i<pos:position pos:line="11" pos:column="13"/></name> <init pos:line="11" pos:column="14">= <expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="18"/></init> <condition><expr><name pos:line="11" pos:column="19">i<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&lt;<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="23">HF_MAX_FIELDS<pos:position pos:line="11" pos:column="36"/></name></expr>;<pos:position pos:line="11" pos:column="37"/></condition> <incr><expr><operator pos:line="11" pos:column="38">++<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="40">i<pos:position pos:line="11" pos:column="41"/></name></expr></incr>)<pos:position pos:line="11" pos:column="42"/></control> <block pos:line="11" pos:column="43">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">hostname_format<pos:position pos:line="12" pos:column="24"/></name><index pos:line="12" pos:column="24">[<expr><name pos:line="12" pos:column="25">i<pos:position pos:line="12" pos:column="26"/></name></expr>]<pos:position pos:line="12" pos:column="27"/></index></name> <operator pos:line="12" pos:column="28">==<pos:position pos:line="12" pos:column="30"/></operator> <name pos:line="12" pos:column="31">hf_none<pos:position pos:line="12" pos:column="38"/></name></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39">
      <block type="pseudo"><continue pos:line="13" pos:column="7">continue;<pos:position pos:line="13" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="15" pos:column="5">n<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <name pos:line="15" pos:column="9">DATA_MAX_NAME_LEN<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">-<pos:position pos:line="15" pos:column="28"/></operator> <call><name pos:line="15" pos:column="29">strlen<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name><name pos:line="15" pos:column="36">vl<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">host<pos:position pos:line="15" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call> <operator pos:line="15" pos:column="46">-<pos:position pos:line="15" pos:column="47"/></operator> <literal type="number" pos:line="15" pos:column="48">2<pos:position pos:line="15" pos:column="49"/></literal></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">i<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">&gt;<pos:position pos:line="17" pos:column="15"/></operator> <literal type="number" pos:line="17" pos:column="13">0<pos:position pos:line="17" pos:column="14"/></literal> <operator pos:line="17" pos:column="15">&amp;&amp;<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="18">n<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">&gt;=<pos:position pos:line="17" pos:column="25"/></operator> <literal type="number" pos:line="17" pos:column="23">1<pos:position pos:line="17" pos:column="24"/></literal></expr>)<pos:position pos:line="17" pos:column="25"/></condition><then pos:line="17" pos:column="25"> <block pos:line="17" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">strncat<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><name><name pos:line="18" pos:column="15">vl<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">host<pos:position pos:line="18" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="25">":"<pos:position pos:line="18" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="30">1<pos:position pos:line="18" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name pos:line="19" pos:column="7">n<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">--<pos:position pos:line="19" pos:column="10"/></operator></expr>;<pos:position pos:line="19" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <switch pos:line="22" pos:column="5">switch <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">hostname_format<pos:position pos:line="22" pos:column="28"/></name><index pos:line="22" pos:column="28">[<expr><name pos:line="22" pos:column="29">i<pos:position pos:line="22" pos:column="30"/></name></expr>]<pos:position pos:line="22" pos:column="31"/></index></name></expr>)<pos:position pos:line="22" pos:column="32"/></condition> <block pos:line="22" pos:column="33">{
    <case pos:line="23" pos:column="5">case <expr><name pos:line="23" pos:column="10">hf_none<pos:position pos:line="23" pos:column="17"/></name></expr>:<pos:position pos:line="23" pos:column="18"/></case>
      <break pos:line="24" pos:column="7">break;<pos:position pos:line="24" pos:column="13"/></break>
    <case pos:line="25" pos:column="5">case <expr><name pos:line="25" pos:column="10">hf_hostname<pos:position pos:line="25" pos:column="21"/></name></expr>:<pos:position pos:line="25" pos:column="22"/></case>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">strncat<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><name><name pos:line="26" pos:column="15">vl<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">host<pos:position pos:line="26" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="25">hostname_g<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="37">n<pos:position pos:line="26" pos:column="38"/></name></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
      <break pos:line="27" pos:column="7">break;<pos:position pos:line="27" pos:column="13"/></break>
    <case pos:line="28" pos:column="5">case <expr><name pos:line="28" pos:column="10">hf_name<pos:position pos:line="28" pos:column="17"/></name></expr>:<pos:position pos:line="28" pos:column="18"/></case>
      <expr_stmt><expr><name pos:line="29" pos:column="7">name<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">virDomainGetName<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">dom<pos:position pos:line="29" pos:column="34"/></name></expr></argument>)<pos:position pos:line="29" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name pos:line="30" pos:column="11">name<pos:position pos:line="30" pos:column="15"/></name></expr>)<pos:position pos:line="30" pos:column="16"/></condition><then pos:line="30" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="9">strncat<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name><name pos:line="31" pos:column="17">vl<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">-&gt;<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="21">host<pos:position pos:line="31" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="27">name<pos:position pos:line="31" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="33">n<pos:position pos:line="31" pos:column="34"/></name></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt></block></then></if>
      <break pos:line="32" pos:column="7">break;<pos:position pos:line="32" pos:column="13"/></break>
    <case pos:line="33" pos:column="5">case <expr><name pos:line="33" pos:column="10">hf_uuid<pos:position pos:line="33" pos:column="17"/></name></expr>:<pos:position pos:line="33" pos:column="18"/></case>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><call><name pos:line="34" pos:column="11">virDomainGetUUIDString<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><name pos:line="34" pos:column="34">dom<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">uuid<pos:position pos:line="34" pos:column="43"/></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call> <operator pos:line="34" pos:column="45">==<pos:position pos:line="34" pos:column="47"/></operator> <literal type="number" pos:line="34" pos:column="48">0<pos:position pos:line="34" pos:column="49"/></literal></expr>)<pos:position pos:line="34" pos:column="50"/></condition><then pos:line="34" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="9">strncat<pos:position pos:line="35" pos:column="16"/></name><argument_list pos:line="35" pos:column="16">(<argument><expr><name><name pos:line="35" pos:column="17">vl<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">host<pos:position pos:line="35" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="27">uuid<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="33">n<pos:position pos:line="35" pos:column="34"/></name></expr></argument>)<pos:position pos:line="35" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt></block></then></if>
      <break pos:line="36" pos:column="7">break;<pos:position pos:line="36" pos:column="13"/></break>
    }<pos:position pos:line="37" pos:column="6"/></block></switch>
  }<pos:position pos:line="38" pos:column="4"/></block></for>

  <expr_stmt><expr><name><name pos:line="40" pos:column="3">vl<pos:position pos:line="40" pos:column="5"/></name><operator pos:line="40" pos:column="5">-&gt;<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="7">host<pos:position pos:line="40" pos:column="11"/></name><index pos:line="40" pos:column="11">[<expr><sizeof pos:line="40" pos:column="12">sizeof<argument_list pos:line="40" pos:column="18">(<argument><expr><name><name pos:line="40" pos:column="19">vl<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">-&gt;<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="23">host<pos:position pos:line="40" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></sizeof> <operator pos:line="40" pos:column="29">-<pos:position pos:line="40" pos:column="30"/></operator> <literal type="number" pos:line="40" pos:column="31">1<pos:position pos:line="40" pos:column="32"/></literal></expr>]<pos:position pos:line="40" pos:column="33"/></index></name> <operator pos:line="40" pos:column="34">=<pos:position pos:line="40" pos:column="35"/></operator> <literal type="char" pos:line="40" pos:column="36">'\0'<pos:position pos:line="40" pos:column="40"/></literal></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="42" pos:column="3">/* Construct the plugin instance field according to PluginInstanceFormat. */</comment>
  <for pos:line="43" pos:column="3">for <control pos:line="43" pos:column="7">(<init><decl><type><name pos:line="43" pos:column="8">int<pos:position pos:line="43" pos:column="11"/></name></type> <name pos:line="43" pos:column="12">i<pos:position pos:line="43" pos:column="13"/></name> <init pos:line="43" pos:column="14">= <expr><literal type="number" pos:line="43" pos:column="16">0<pos:position pos:line="43" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="43" pos:column="18"/></init> <condition><expr><name pos:line="43" pos:column="19">i<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">&lt;<pos:position pos:line="43" pos:column="25"/></operator> <name pos:line="43" pos:column="23">PLGINST_MAX_FIELDS<pos:position pos:line="43" pos:column="41"/></name></expr>;<pos:position pos:line="43" pos:column="42"/></condition> <incr><expr><operator pos:line="43" pos:column="43">++<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="45">i<pos:position pos:line="43" pos:column="46"/></name></expr></incr>)<pos:position pos:line="43" pos:column="47"/></control> <block pos:line="43" pos:column="48">{
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name><name pos:line="44" pos:column="9">plugin_instance_format<pos:position pos:line="44" pos:column="31"/></name><index pos:line="44" pos:column="31">[<expr><name pos:line="44" pos:column="32">i<pos:position pos:line="44" pos:column="33"/></name></expr>]<pos:position pos:line="44" pos:column="34"/></index></name> <operator pos:line="44" pos:column="35">==<pos:position pos:line="44" pos:column="37"/></operator> <name pos:line="44" pos:column="38">plginst_none<pos:position pos:line="44" pos:column="50"/></name></expr>)<pos:position pos:line="44" pos:column="51"/></condition><then pos:line="44" pos:column="51">
      <block type="pseudo"><continue pos:line="45" pos:column="7">continue;<pos:position pos:line="45" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="47" pos:column="5">n<pos:position pos:line="47" pos:column="6"/></name> <operator pos:line="47" pos:column="7">=<pos:position pos:line="47" pos:column="8"/></operator> <sizeof pos:line="47" pos:column="9">sizeof<argument_list pos:line="47" pos:column="15">(<argument><expr><name><name pos:line="47" pos:column="16">vl<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">-&gt;<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="20">plugin_instance<pos:position pos:line="47" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></sizeof> <operator pos:line="47" pos:column="37">-<pos:position pos:line="47" pos:column="38"/></operator> <call><name pos:line="47" pos:column="39">strlen<pos:position pos:line="47" pos:column="45"/></name><argument_list pos:line="47" pos:column="45">(<argument><expr><name><name pos:line="47" pos:column="46">vl<pos:position pos:line="47" pos:column="48"/></name><operator pos:line="47" pos:column="48">-&gt;<pos:position pos:line="47" pos:column="53"/></operator><name pos:line="47" pos:column="50">plugin_instance<pos:position pos:line="47" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="66"/></argument_list></call> <operator pos:line="47" pos:column="67">-<pos:position pos:line="47" pos:column="68"/></operator> <literal type="number" pos:line="47" pos:column="69">2<pos:position pos:line="47" pos:column="70"/></literal></expr>;<pos:position pos:line="47" pos:column="71"/></expr_stmt>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">i<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">&gt;<pos:position pos:line="49" pos:column="15"/></operator> <literal type="number" pos:line="49" pos:column="13">0<pos:position pos:line="49" pos:column="14"/></literal> <operator pos:line="49" pos:column="15">&amp;&amp;<pos:position pos:line="49" pos:column="25"/></operator> <name pos:line="49" pos:column="18">n<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">&gt;=<pos:position pos:line="49" pos:column="25"/></operator> <literal type="number" pos:line="49" pos:column="23">1<pos:position pos:line="49" pos:column="24"/></literal></expr>)<pos:position pos:line="49" pos:column="25"/></condition><then pos:line="49" pos:column="25"> <block pos:line="49" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">strncat<pos:position pos:line="50" pos:column="14"/></name><argument_list pos:line="50" pos:column="14">(<argument><expr><name><name pos:line="50" pos:column="15">vl<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">-&gt;<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="19">plugin_instance<pos:position pos:line="50" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="36">":"<pos:position pos:line="50" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="41">1<pos:position pos:line="50" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name pos:line="51" pos:column="7">n<pos:position pos:line="51" pos:column="8"/></name><operator pos:line="51" pos:column="8">--<pos:position pos:line="51" pos:column="10"/></operator></expr>;<pos:position pos:line="51" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <switch pos:line="54" pos:column="5">switch <condition pos:line="54" pos:column="12">(<expr><name><name pos:line="54" pos:column="13">plugin_instance_format<pos:position pos:line="54" pos:column="35"/></name><index pos:line="54" pos:column="35">[<expr><name pos:line="54" pos:column="36">i<pos:position pos:line="54" pos:column="37"/></name></expr>]<pos:position pos:line="54" pos:column="38"/></index></name></expr>)<pos:position pos:line="54" pos:column="39"/></condition> <block pos:line="54" pos:column="40">{
    <case pos:line="55" pos:column="5">case <expr><name pos:line="55" pos:column="10">plginst_none<pos:position pos:line="55" pos:column="22"/></name></expr>:<pos:position pos:line="55" pos:column="23"/></case>
      <break pos:line="56" pos:column="7">break;<pos:position pos:line="56" pos:column="13"/></break>
    <case pos:line="57" pos:column="5">case <expr><name pos:line="57" pos:column="10">plginst_name<pos:position pos:line="57" pos:column="22"/></name></expr>:<pos:position pos:line="57" pos:column="23"/></case>
      <expr_stmt><expr><name pos:line="58" pos:column="7">name<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">=<pos:position pos:line="58" pos:column="13"/></operator> <call><name pos:line="58" pos:column="14">virDomainGetName<pos:position pos:line="58" pos:column="30"/></name><argument_list pos:line="58" pos:column="30">(<argument><expr><name pos:line="58" pos:column="31">dom<pos:position pos:line="58" pos:column="34"/></name></expr></argument>)<pos:position pos:line="58" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt>
      <if pos:line="59" pos:column="7">if <condition pos:line="59" pos:column="10">(<expr><name pos:line="59" pos:column="11">name<pos:position pos:line="59" pos:column="15"/></name></expr>)<pos:position pos:line="59" pos:column="16"/></condition><then pos:line="59" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="9">strncat<pos:position pos:line="60" pos:column="16"/></name><argument_list pos:line="60" pos:column="16">(<argument><expr><name><name pos:line="60" pos:column="17">vl<pos:position pos:line="60" pos:column="19"/></name><operator pos:line="60" pos:column="19">-&gt;<pos:position pos:line="60" pos:column="24"/></operator><name pos:line="60" pos:column="21">plugin_instance<pos:position pos:line="60" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="38">name<pos:position pos:line="60" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="44">n<pos:position pos:line="60" pos:column="45"/></name></expr></argument>)<pos:position pos:line="60" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="47"/></expr_stmt></block></then></if>
      <break pos:line="61" pos:column="7">break;<pos:position pos:line="61" pos:column="13"/></break>
    <case pos:line="62" pos:column="5">case <expr><name pos:line="62" pos:column="10">plginst_uuid<pos:position pos:line="62" pos:column="22"/></name></expr>:<pos:position pos:line="62" pos:column="23"/></case>
      <if pos:line="63" pos:column="7">if <condition pos:line="63" pos:column="10">(<expr><call><name pos:line="63" pos:column="11">virDomainGetUUIDString<pos:position pos:line="63" pos:column="33"/></name><argument_list pos:line="63" pos:column="33">(<argument><expr><name pos:line="63" pos:column="34">dom<pos:position pos:line="63" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="39">uuid<pos:position pos:line="63" pos:column="43"/></name></expr></argument>)<pos:position pos:line="63" pos:column="44"/></argument_list></call> <operator pos:line="63" pos:column="45">==<pos:position pos:line="63" pos:column="47"/></operator> <literal type="number" pos:line="63" pos:column="48">0<pos:position pos:line="63" pos:column="49"/></literal></expr>)<pos:position pos:line="63" pos:column="50"/></condition><then pos:line="63" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="9">strncat<pos:position pos:line="64" pos:column="16"/></name><argument_list pos:line="64" pos:column="16">(<argument><expr><name><name pos:line="64" pos:column="17">vl<pos:position pos:line="64" pos:column="19"/></name><operator pos:line="64" pos:column="19">-&gt;<pos:position pos:line="64" pos:column="24"/></operator><name pos:line="64" pos:column="21">plugin_instance<pos:position pos:line="64" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="38">uuid<pos:position pos:line="64" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="44">n<pos:position pos:line="64" pos:column="45"/></name></expr></argument>)<pos:position pos:line="64" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="47"/></expr_stmt></block></then></if>
      <break pos:line="65" pos:column="7">break;<pos:position pos:line="65" pos:column="13"/></break>
    }<pos:position pos:line="66" pos:column="6"/></block></switch>
  }<pos:position pos:line="67" pos:column="4"/></block></for>

  <expr_stmt><expr><name><name pos:line="69" pos:column="3">vl<pos:position pos:line="69" pos:column="5"/></name><operator pos:line="69" pos:column="5">-&gt;<pos:position pos:line="69" pos:column="10"/></operator><name pos:line="69" pos:column="7">plugin_instance<pos:position pos:line="69" pos:column="22"/></name><index pos:line="69" pos:column="22">[<expr><sizeof pos:line="69" pos:column="23">sizeof<argument_list pos:line="69" pos:column="29">(<argument><expr><name><name pos:line="69" pos:column="30">vl<pos:position pos:line="69" pos:column="32"/></name><operator pos:line="69" pos:column="32">-&gt;<pos:position pos:line="69" pos:column="37"/></operator><name pos:line="69" pos:column="34">plugin_instance<pos:position pos:line="69" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="50"/></argument_list></sizeof> <operator pos:line="69" pos:column="51">-<pos:position pos:line="69" pos:column="52"/></operator> <literal type="number" pos:line="69" pos:column="53">1<pos:position pos:line="69" pos:column="54"/></literal></expr>]<pos:position pos:line="69" pos:column="55"/></index></name> <operator pos:line="69" pos:column="56">=<pos:position pos:line="69" pos:column="57"/></operator> <literal type="char" pos:line="69" pos:column="58">'\0'<pos:position pos:line="69" pos:column="62"/></literal></expr>;<pos:position pos:line="69" pos:column="63"/></expr_stmt>

}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

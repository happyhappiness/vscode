<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_840_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">version_detect<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">filename<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">fh<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buffer<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">1024<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">version<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* Sanity checking. We're called from the config handling routine, so
	 * better play it save. */</comment>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">(<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">filename<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">==<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">NULL<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">)<pos:position pos:line="9" pos:column="31"/></operator> <operator pos:line="9" pos:column="32">||<pos:position pos:line="9" pos:column="34"/></operator> <operator pos:line="9" pos:column="35">(<pos:position pos:line="9" pos:column="36"/></operator><operator pos:line="9" pos:column="36">*<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">filename<pos:position pos:line="9" pos:column="45"/></name> <operator pos:line="9" pos:column="46">==<pos:position pos:line="9" pos:column="48"/></operator> <literal type="number" pos:line="9" pos:column="49">0<pos:position pos:line="9" pos:column="50"/></literal><operator pos:line="9" pos:column="50">)<pos:position pos:line="9" pos:column="51"/></operator></expr>)<pos:position pos:line="9" pos:column="52"/></condition><then pos:line="9" pos:column="52">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">0<pos:position pos:line="10" pos:column="26"/></literal><operator pos:line="10" pos:column="26">)<pos:position pos:line="10" pos:column="27"/></operator></expr>;<pos:position pos:line="10" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">fh<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">fopen<pos:position pos:line="12" pos:column="19"/></name> <argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">filename<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="31">"r"<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">fh<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">NULL<pos:position pos:line="13" pos:column="23"/></name></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24">
	<block pos:line="14" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">char<pos:position pos:line="15" pos:column="21"/></name></type> <name><name pos:line="15" pos:column="22">errbuf<pos:position pos:line="15" pos:column="28"/></name><index pos:line="15" pos:column="28">[<expr><literal type="number" pos:line="15" pos:column="29">1024<pos:position pos:line="15" pos:column="33"/></literal></expr>]<pos:position pos:line="15" pos:column="34"/></index></name></decl>;<pos:position pos:line="15" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">WARNING<pos:position pos:line="16" pos:column="24"/></name> <argument_list pos:line="16" pos:column="25">(<argument><expr><literal type="string" pos:line="16" pos:column="26">"openvpn plugin: Unable to read \"%s\": %s"<pos:position pos:line="16" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="71">filename<pos:position pos:line="16" pos:column="79"/></name></expr></argument>,
				<argument><expr><call><name pos:line="17" pos:column="33">sstrerror<pos:position pos:line="17" pos:column="42"/></name> <argument_list pos:line="17" pos:column="43">(<argument><expr><name pos:line="17" pos:column="44">errno<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">errbuf<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="59">sizeof <argument_list pos:line="17" pos:column="66">(<argument><expr><name pos:line="17" pos:column="67">errbuf<pos:position pos:line="17" pos:column="73"/></name></expr></argument>)<pos:position pos:line="17" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="77"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><operator pos:line="18" pos:column="24">(<pos:position pos:line="18" pos:column="25"/></operator><literal type="number" pos:line="18" pos:column="25">0<pos:position pos:line="18" pos:column="26"/></literal><operator pos:line="18" pos:column="26">)<pos:position pos:line="18" pos:column="27"/></operator></expr>;<pos:position pos:line="18" pos:column="28"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="21" pos:column="9">/* now search for the specific multimode data format */</comment>
	<while pos:line="22" pos:column="9">while <condition pos:line="22" pos:column="15">(<expr><operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><call><name pos:line="22" pos:column="17">fgets<pos:position pos:line="22" pos:column="22"/></name> <argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">buffer<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="32">sizeof <argument_list pos:line="22" pos:column="39">(<argument><expr><name pos:line="22" pos:column="40">buffer<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="22" pos:column="49">fh<pos:position pos:line="22" pos:column="51"/></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call><operator pos:line="22" pos:column="52">)<pos:position pos:line="22" pos:column="53"/></operator> <operator pos:line="22" pos:column="54">!=<pos:position pos:line="22" pos:column="56"/></operator> <name pos:line="22" pos:column="57">NULL<pos:position pos:line="22" pos:column="61"/></name></expr>)<pos:position pos:line="22" pos:column="62"/></condition>
	<block pos:line="23" pos:column="9">{
		<comment type="block" pos:line="24" pos:column="17">/* we look at the first line searching for SINGLE mode configuration */</comment>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">strcmp<pos:position pos:line="25" pos:column="27"/></name> <argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">buffer<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="37">VSSTRING<pos:position pos:line="25" pos:column="45"/></name></expr></argument>)<pos:position pos:line="25" pos:column="46"/></argument_list></call> <operator pos:line="25" pos:column="47">==<pos:position pos:line="25" pos:column="49"/></operator> <literal type="number" pos:line="25" pos:column="50">0<pos:position pos:line="25" pos:column="51"/></literal></expr>)<pos:position pos:line="25" pos:column="52"/></condition><then pos:line="25" pos:column="52">
		<block pos:line="26" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">DEBUG<pos:position pos:line="27" pos:column="30"/></name> <argument_list pos:line="27" pos:column="31">(<argument><expr><literal type="string" pos:line="27" pos:column="32">"openvpn plugin: found status file version SINGLE"<pos:position pos:line="27" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="84"/></expr_stmt>
			<expr_stmt><expr><name pos:line="28" pos:column="25">version<pos:position pos:line="28" pos:column="32"/></name> <operator pos:line="28" pos:column="33">=<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="35">SINGLE<pos:position pos:line="28" pos:column="41"/></name></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
			<break pos:line="29" pos:column="25">break;<pos:position pos:line="29" pos:column="31"/></break>
		}<pos:position pos:line="30" pos:column="18"/></block></then>
		<comment type="block" pos:line="31" pos:column="17">/* searching for multi version 1 */</comment>
		<elseif pos:line="32" pos:column="17">else <if pos:line="32" pos:column="22">if <condition pos:line="32" pos:column="25">(<expr><call><name pos:line="32" pos:column="26">strcmp<pos:position pos:line="32" pos:column="32"/></name> <argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">buffer<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">V1STRING<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call> <operator pos:line="32" pos:column="52">==<pos:position pos:line="32" pos:column="54"/></operator> <literal type="number" pos:line="32" pos:column="55">0<pos:position pos:line="32" pos:column="56"/></literal></expr>)<pos:position pos:line="32" pos:column="57"/></condition><then pos:line="32" pos:column="57">
		<block pos:line="33" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">DEBUG<pos:position pos:line="34" pos:column="30"/></name> <argument_list pos:line="34" pos:column="31">(<argument><expr><literal type="string" pos:line="34" pos:column="32">"openvpn plugin: found status file version MULTI1"<pos:position pos:line="34" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="84"/></expr_stmt>
			<expr_stmt><expr><name pos:line="35" pos:column="25">version<pos:position pos:line="35" pos:column="32"/></name> <operator pos:line="35" pos:column="33">=<pos:position pos:line="35" pos:column="34"/></operator> <name pos:line="35" pos:column="35">MULTI1<pos:position pos:line="35" pos:column="41"/></name></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
			<break pos:line="36" pos:column="25">break;<pos:position pos:line="36" pos:column="31"/></break>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if></elseif>
		<comment type="block" pos:line="38" pos:column="17">/* searching for multi version 2 */</comment>
		<elseif pos:line="39" pos:column="17">else <if pos:line="39" pos:column="22">if <condition pos:line="39" pos:column="25">(<expr><call><name pos:line="39" pos:column="26">strcmp<pos:position pos:line="39" pos:column="32"/></name> <argument_list pos:line="39" pos:column="33">(<argument><expr><name pos:line="39" pos:column="34">buffer<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="42">V2STRING<pos:position pos:line="39" pos:column="50"/></name></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></call> <operator pos:line="39" pos:column="52">==<pos:position pos:line="39" pos:column="54"/></operator> <literal type="number" pos:line="39" pos:column="55">0<pos:position pos:line="39" pos:column="56"/></literal></expr>)<pos:position pos:line="39" pos:column="57"/></condition><then pos:line="39" pos:column="57">
		<block pos:line="40" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">DEBUG<pos:position pos:line="41" pos:column="30"/></name> <argument_list pos:line="41" pos:column="31">(<argument><expr><literal type="string" pos:line="41" pos:column="32">"openvpn plugin: found status file version MULTI2"<pos:position pos:line="41" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="84"/></expr_stmt>
			<expr_stmt><expr><name pos:line="42" pos:column="25">version<pos:position pos:line="42" pos:column="32"/></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <name pos:line="42" pos:column="35">MULTI2<pos:position pos:line="42" pos:column="41"/></name></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>
			<break pos:line="43" pos:column="25">break;<pos:position pos:line="43" pos:column="31"/></break>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if></elseif>
		<comment type="block" pos:line="45" pos:column="17">/* searching for multi version 3 */</comment>
		<elseif pos:line="46" pos:column="17">else <if pos:line="46" pos:column="22">if <condition pos:line="46" pos:column="25">(<expr><call><name pos:line="46" pos:column="26">strcmp<pos:position pos:line="46" pos:column="32"/></name> <argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">buffer<pos:position pos:line="46" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="42">V3STRING<pos:position pos:line="46" pos:column="50"/></name></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call> <operator pos:line="46" pos:column="52">==<pos:position pos:line="46" pos:column="54"/></operator> <literal type="number" pos:line="46" pos:column="55">0<pos:position pos:line="46" pos:column="56"/></literal></expr>)<pos:position pos:line="46" pos:column="57"/></condition><then pos:line="46" pos:column="57">
		<block pos:line="47" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">DEBUG<pos:position pos:line="48" pos:column="30"/></name> <argument_list pos:line="48" pos:column="31">(<argument><expr><literal type="string" pos:line="48" pos:column="32">"openvpn plugin: found status file version MULTI3"<pos:position pos:line="48" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="84"/></expr_stmt>
			<expr_stmt><expr><name pos:line="49" pos:column="25">version<pos:position pos:line="49" pos:column="32"/></name> <operator pos:line="49" pos:column="33">=<pos:position pos:line="49" pos:column="34"/></operator> <name pos:line="49" pos:column="35">MULTI3<pos:position pos:line="49" pos:column="41"/></name></expr>;<pos:position pos:line="49" pos:column="42"/></expr_stmt>
			<break pos:line="50" pos:column="25">break;<pos:position pos:line="50" pos:column="31"/></break>
		}<pos:position pos:line="51" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="52" pos:column="10"/></block></while>

	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">version<pos:position pos:line="54" pos:column="20"/></name> <operator pos:line="54" pos:column="21">==<pos:position pos:line="54" pos:column="23"/></operator> <literal type="number" pos:line="54" pos:column="24">0<pos:position pos:line="54" pos:column="25"/></literal></expr>)<pos:position pos:line="54" pos:column="26"/></condition><then pos:line="54" pos:column="26">
	<block pos:line="55" pos:column="9">{
		<comment type="block" pos:line="56" pos:column="17">/* This is only reached during configuration, so complaining to
		 * the user is in order. */</comment>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">NOTICE<pos:position pos:line="58" pos:column="23"/></name> <argument_list pos:line="58" pos:column="24">(<argument><expr><literal type="string" pos:line="58" pos:column="25">"openvpn plugin: %s: Unknown file format, please "<pos:position pos:line="58" pos:column="75"/></literal>
				<literal type="string" pos:line="59" pos:column="33">"report this as bug. Make sure to include "<pos:position pos:line="59" pos:column="76"/></literal>
				<literal type="string" pos:line="60" pos:column="33">"your status file, so the plugin can "<pos:position pos:line="60" pos:column="71"/></literal>
				<literal type="string" pos:line="61" pos:column="33">"be adapted."<pos:position pos:line="61" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="48">filename<pos:position pos:line="61" pos:column="56"/></name></expr></argument>)<pos:position pos:line="61" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="64" pos:column="9">fclose<pos:position pos:line="64" pos:column="15"/></name> <argument_list pos:line="64" pos:column="16">(<argument><expr><name pos:line="64" pos:column="17">fh<pos:position pos:line="64" pos:column="19"/></name></expr></argument>)<pos:position pos:line="64" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt>

	<return pos:line="66" pos:column="9">return <expr><name pos:line="66" pos:column="16">version<pos:position pos:line="66" pos:column="23"/></name></expr>;<pos:position pos:line="66" pos:column="24"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

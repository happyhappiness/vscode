<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_120_collectd-4.3.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">exec_config_exec<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">oconfig_item_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">ci<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">program_list_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">pl<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buffer<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><literal type="number" pos:line="4" pos:column="15">128<pos:position pos:line="4" pos:column="18"/></literal></expr>]<pos:position pos:line="4" pos:column="19"/></index></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">ci<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">-&gt;<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="11">children_num<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">!=<pos:position pos:line="7" pos:column="26"/></operator> <literal type="number" pos:line="7" pos:column="27">0<pos:position pos:line="7" pos:column="28"/></literal></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
  <block pos:line="8" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">WARNING<pos:position pos:line="9" pos:column="12"/></name> <argument_list pos:line="9" pos:column="13">(<argument><expr><literal type="string" pos:line="9" pos:column="14">"exec plugin: The config option `%s' may not be a block."<pos:position pos:line="9" pos:column="71"/></literal></expr></argument>,
	<argument><expr><name><name pos:line="10" pos:column="9">ci<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">key<pos:position pos:line="10" pos:column="16"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name><name pos:line="13" pos:column="7">ci<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">values_num<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">&lt;<pos:position pos:line="13" pos:column="26"/></operator> <literal type="number" pos:line="13" pos:column="24">2<pos:position pos:line="13" pos:column="25"/></literal></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26">
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">WARNING<pos:position pos:line="15" pos:column="12"/></name> <argument_list pos:line="15" pos:column="13">(<argument><expr><literal type="string" pos:line="15" pos:column="14">"exec plugin: The config option `%s' needs at least two "<pos:position pos:line="15" pos:column="71"/></literal>
	<literal type="string" pos:line="16" pos:column="9">"arguments."<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="23">ci<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">key<pos:position pos:line="16" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">-<pos:position pos:line="17" pos:column="14"/></operator><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal><operator pos:line="17" pos:column="15">)<pos:position pos:line="17" pos:column="16"/></operator></expr>;<pos:position pos:line="17" pos:column="17"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">(<pos:position pos:line="19" pos:column="8"/></operator><name><name pos:line="19" pos:column="8">ci<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">values<pos:position pos:line="19" pos:column="18"/></name><index pos:line="19" pos:column="18">[<expr><literal type="number" pos:line="19" pos:column="19">0<pos:position pos:line="19" pos:column="20"/></literal></expr>]<pos:position pos:line="19" pos:column="21"/></index></name><operator pos:line="19" pos:column="21">.<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">type<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">!=<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="30">OCONFIG_TYPE_STRING<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">)<pos:position pos:line="19" pos:column="50"/></operator>
      <operator pos:line="20" pos:column="7">||<pos:position pos:line="20" pos:column="9"/></operator> <operator pos:line="20" pos:column="10">(<pos:position pos:line="20" pos:column="11"/></operator><name><name pos:line="20" pos:column="11">ci<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">values<pos:position pos:line="20" pos:column="21"/></name><index pos:line="20" pos:column="21">[<expr><literal type="number" pos:line="20" pos:column="22">1<pos:position pos:line="20" pos:column="23"/></literal></expr>]<pos:position pos:line="20" pos:column="24"/></index></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">type<pos:position pos:line="20" pos:column="29"/></name> <operator pos:line="20" pos:column="30">!=<pos:position pos:line="20" pos:column="32"/></operator> <name pos:line="20" pos:column="33">OCONFIG_TYPE_STRING<pos:position pos:line="20" pos:column="52"/></name><operator pos:line="20" pos:column="52">)<pos:position pos:line="20" pos:column="53"/></operator></expr>)<pos:position pos:line="20" pos:column="54"/></condition><then pos:line="20" pos:column="54">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">WARNING<pos:position pos:line="22" pos:column="12"/></name> <argument_list pos:line="22" pos:column="13">(<argument><expr><literal type="string" pos:line="22" pos:column="14">"exec plugin: The first two arguments to the `%s' option must "<pos:position pos:line="22" pos:column="77"/></literal>
	<literal type="string" pos:line="23" pos:column="9">"be string arguments."<pos:position pos:line="23" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="33">ci<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">-&gt;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="37">key<pos:position pos:line="23" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><operator pos:line="24" pos:column="13">-<pos:position pos:line="24" pos:column="14"/></operator><literal type="number" pos:line="24" pos:column="14">1<pos:position pos:line="24" pos:column="15"/></literal><operator pos:line="24" pos:column="15">)<pos:position pos:line="24" pos:column="16"/></operator></expr>;<pos:position pos:line="24" pos:column="17"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="27" pos:column="3">pl<pos:position pos:line="27" pos:column="5"/></name> <operator pos:line="27" pos:column="6">=<pos:position pos:line="27" pos:column="7"/></operator> <operator pos:line="27" pos:column="8">(<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">program_list_t<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">*<pos:position pos:line="27" pos:column="25"/></operator><operator pos:line="27" pos:column="25">)<pos:position pos:line="27" pos:column="26"/></operator> <call><name pos:line="27" pos:column="27">malloc<pos:position pos:line="27" pos:column="33"/></name> <argument_list pos:line="27" pos:column="34">(<argument><expr><sizeof pos:line="27" pos:column="35">sizeof <argument_list pos:line="27" pos:column="42">(<argument><expr><name pos:line="27" pos:column="43">program_list_t<pos:position pos:line="27" pos:column="57"/></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">pl<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">==<pos:position pos:line="28" pos:column="12"/></operator> <name pos:line="28" pos:column="13">NULL<pos:position pos:line="28" pos:column="17"/></name></expr>)<pos:position pos:line="28" pos:column="18"/></condition><then pos:line="28" pos:column="18">
  <block pos:line="29" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">ERROR<pos:position pos:line="30" pos:column="10"/></name> <argument_list pos:line="30" pos:column="11">(<argument><expr><literal type="string" pos:line="30" pos:column="12">"exec plugin: malloc failed."<pos:position pos:line="30" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><operator pos:line="31" pos:column="13">-<pos:position pos:line="31" pos:column="14"/></operator><literal type="number" pos:line="31" pos:column="14">1<pos:position pos:line="31" pos:column="15"/></literal><operator pos:line="31" pos:column="15">)<pos:position pos:line="31" pos:column="16"/></operator></expr>;<pos:position pos:line="31" pos:column="17"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">memset<pos:position pos:line="33" pos:column="9"/></name> <argument_list pos:line="33" pos:column="10">(<argument><expr><name pos:line="33" pos:column="11">pl<pos:position pos:line="33" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="33" pos:column="15">'\0'<pos:position pos:line="33" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="21">sizeof <argument_list pos:line="33" pos:column="28">(<argument><expr><name pos:line="33" pos:column="29">program_list_t<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="46"/></expr_stmt>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><call><name pos:line="35" pos:column="7">strcasecmp<pos:position pos:line="35" pos:column="17"/></name> <argument_list pos:line="35" pos:column="18">(<argument><expr><literal type="string" pos:line="35" pos:column="19">"NotificationExec"<pos:position pos:line="35" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="39">ci<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">-&gt;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="43">key<pos:position pos:line="35" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></call> <operator pos:line="35" pos:column="48">==<pos:position pos:line="35" pos:column="50"/></operator> <literal type="number" pos:line="35" pos:column="51">0<pos:position pos:line="35" pos:column="52"/></literal></expr>)<pos:position pos:line="35" pos:column="53"/></condition><then pos:line="35" pos:column="53">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="5">pl<pos:position pos:line="36" pos:column="7"/></name><operator pos:line="36" pos:column="7">-&gt;<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="9">flags<pos:position pos:line="36" pos:column="14"/></name></name> <operator pos:line="36" pos:column="15">|=<pos:position pos:line="36" pos:column="17"/></operator> <name pos:line="36" pos:column="18">PL_NOTIF_ACTION<pos:position pos:line="36" pos:column="33"/></name></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt></block></then>
  <else pos:line="37" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="5">pl<pos:position pos:line="38" pos:column="7"/></name><operator pos:line="38" pos:column="7">-&gt;<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="9">flags<pos:position pos:line="38" pos:column="14"/></name></name> <operator pos:line="38" pos:column="15">|=<pos:position pos:line="38" pos:column="17"/></operator> <name pos:line="38" pos:column="18">PL_NORMAL<pos:position pos:line="38" pos:column="27"/></name></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name><name pos:line="40" pos:column="3">pl<pos:position pos:line="40" pos:column="5"/></name><operator pos:line="40" pos:column="5">-&gt;<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="7">user<pos:position pos:line="40" pos:column="11"/></name></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <call><name pos:line="40" pos:column="14">strdup<pos:position pos:line="40" pos:column="20"/></name> <argument_list pos:line="40" pos:column="21">(<argument><expr><name><name pos:line="40" pos:column="22">ci<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">values<pos:position pos:line="40" pos:column="32"/></name><index pos:line="40" pos:column="32">[<expr><literal type="number" pos:line="40" pos:column="33">0<pos:position pos:line="40" pos:column="34"/></literal></expr>]<pos:position pos:line="40" pos:column="35"/></index></name><operator pos:line="40" pos:column="35">.<pos:position pos:line="40" pos:column="36"/></operator><name><name pos:line="40" pos:column="36">value<pos:position pos:line="40" pos:column="41"/></name><operator pos:line="40" pos:column="41">.<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="42">string<pos:position pos:line="40" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="50"/></expr_stmt>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name><name pos:line="41" pos:column="7">pl<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">-&gt;<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="11">user<pos:position pos:line="41" pos:column="15"/></name></name> <operator pos:line="41" pos:column="16">==<pos:position pos:line="41" pos:column="18"/></operator> <name pos:line="41" pos:column="19">NULL<pos:position pos:line="41" pos:column="23"/></name></expr>)<pos:position pos:line="41" pos:column="24"/></condition><then pos:line="41" pos:column="24">
  <block pos:line="42" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">ERROR<pos:position pos:line="43" pos:column="10"/></name> <argument_list pos:line="43" pos:column="11">(<argument><expr><literal type="string" pos:line="43" pos:column="12">"exec plugin: strdup failed."<pos:position pos:line="43" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">sfree<pos:position pos:line="44" pos:column="10"/></name> <argument_list pos:line="44" pos:column="11">(<argument><expr><name pos:line="44" pos:column="12">pl<pos:position pos:line="44" pos:column="14"/></name></expr></argument>)<pos:position pos:line="44" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="16"/></expr_stmt>
    <return pos:line="45" pos:column="5">return <expr><operator pos:line="45" pos:column="12">(<pos:position pos:line="45" pos:column="13"/></operator><operator pos:line="45" pos:column="13">-<pos:position pos:line="45" pos:column="14"/></operator><literal type="number" pos:line="45" pos:column="14">1<pos:position pos:line="45" pos:column="15"/></literal><operator pos:line="45" pos:column="15">)<pos:position pos:line="45" pos:column="16"/></operator></expr>;<pos:position pos:line="45" pos:column="17"/></return>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="48" pos:column="3">pl<pos:position pos:line="48" pos:column="5"/></name><operator pos:line="48" pos:column="5">-&gt;<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="7">group<pos:position pos:line="48" pos:column="12"/></name></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <call><name pos:line="48" pos:column="15">strchr<pos:position pos:line="48" pos:column="21"/></name> <argument_list pos:line="48" pos:column="22">(<argument><expr><name><name pos:line="48" pos:column="23">pl<pos:position pos:line="48" pos:column="25"/></name><operator pos:line="48" pos:column="25">-&gt;<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="27">user<pos:position pos:line="48" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="48" pos:column="33">':'<pos:position pos:line="48" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name><name pos:line="49" pos:column="7">pl<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">-&gt;<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="11">group<pos:position pos:line="49" pos:column="16"/></name></name> <operator pos:line="49" pos:column="17">!=<pos:position pos:line="49" pos:column="19"/></operator> <name pos:line="49" pos:column="20">NULL<pos:position pos:line="49" pos:column="24"/></name></expr>)<pos:position pos:line="49" pos:column="25"/></condition><then pos:line="49" pos:column="25">
  <block pos:line="50" pos:column="3">{
    <expr_stmt><expr><operator pos:line="51" pos:column="5">*<pos:position pos:line="51" pos:column="6"/></operator><name><name pos:line="51" pos:column="6">pl<pos:position pos:line="51" pos:column="8"/></name><operator pos:line="51" pos:column="8">-&gt;<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="10">group<pos:position pos:line="51" pos:column="15"/></name></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <literal type="char" pos:line="51" pos:column="18">'\0'<pos:position pos:line="51" pos:column="22"/></literal></expr>;<pos:position pos:line="51" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">pl<pos:position pos:line="52" pos:column="7"/></name><operator pos:line="52" pos:column="7">-&gt;<pos:position pos:line="52" pos:column="12"/></operator><name pos:line="52" pos:column="9">group<pos:position pos:line="52" pos:column="14"/></name></name><operator pos:line="52" pos:column="14">++<pos:position pos:line="52" pos:column="16"/></operator></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="55" pos:column="3">pl<pos:position pos:line="55" pos:column="5"/></name><operator pos:line="55" pos:column="5">-&gt;<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="7">exec<pos:position pos:line="55" pos:column="11"/></name></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <call><name pos:line="55" pos:column="14">strdup<pos:position pos:line="55" pos:column="20"/></name> <argument_list pos:line="55" pos:column="21">(<argument><expr><name><name pos:line="55" pos:column="22">ci<pos:position pos:line="55" pos:column="24"/></name><operator pos:line="55" pos:column="24">-&gt;<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="26">values<pos:position pos:line="55" pos:column="32"/></name><index pos:line="55" pos:column="32">[<expr><literal type="number" pos:line="55" pos:column="33">1<pos:position pos:line="55" pos:column="34"/></literal></expr>]<pos:position pos:line="55" pos:column="35"/></index></name><operator pos:line="55" pos:column="35">.<pos:position pos:line="55" pos:column="36"/></operator><name><name pos:line="55" pos:column="36">value<pos:position pos:line="55" pos:column="41"/></name><operator pos:line="55" pos:column="41">.<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="42">string<pos:position pos:line="55" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="50"/></expr_stmt>
  <if pos:line="56" pos:column="3">if <condition pos:line="56" pos:column="6">(<expr><name><name pos:line="56" pos:column="7">pl<pos:position pos:line="56" pos:column="9"/></name><operator pos:line="56" pos:column="9">-&gt;<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="11">exec<pos:position pos:line="56" pos:column="15"/></name></name> <operator pos:line="56" pos:column="16">==<pos:position pos:line="56" pos:column="18"/></operator> <name pos:line="56" pos:column="19">NULL<pos:position pos:line="56" pos:column="23"/></name></expr>)<pos:position pos:line="56" pos:column="24"/></condition><then pos:line="56" pos:column="24">
  <block pos:line="57" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">ERROR<pos:position pos:line="58" pos:column="10"/></name> <argument_list pos:line="58" pos:column="11">(<argument><expr><literal type="string" pos:line="58" pos:column="12">"exec plugin: strdup failed."<pos:position pos:line="58" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">sfree<pos:position pos:line="59" pos:column="10"/></name> <argument_list pos:line="59" pos:column="11">(<argument><expr><name><name pos:line="59" pos:column="12">pl<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">user<pos:position pos:line="59" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">sfree<pos:position pos:line="60" pos:column="10"/></name> <argument_list pos:line="60" pos:column="11">(<argument><expr><name pos:line="60" pos:column="12">pl<pos:position pos:line="60" pos:column="14"/></name></expr></argument>)<pos:position pos:line="60" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="16"/></expr_stmt>
    <return pos:line="61" pos:column="5">return <expr><operator pos:line="61" pos:column="12">(<pos:position pos:line="61" pos:column="13"/></operator><operator pos:line="61" pos:column="13">-<pos:position pos:line="61" pos:column="14"/></operator><literal type="number" pos:line="61" pos:column="14">1<pos:position pos:line="61" pos:column="15"/></literal><operator pos:line="61" pos:column="15">)<pos:position pos:line="61" pos:column="16"/></operator></expr>;<pos:position pos:line="61" pos:column="17"/></return>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="64" pos:column="3">pl<pos:position pos:line="64" pos:column="5"/></name><operator pos:line="64" pos:column="5">-&gt;<pos:position pos:line="64" pos:column="10"/></operator><name pos:line="64" pos:column="7">argv<pos:position pos:line="64" pos:column="11"/></name></name> <operator pos:line="64" pos:column="12">=<pos:position pos:line="64" pos:column="13"/></operator> <operator pos:line="64" pos:column="14">(<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="15">char<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">*<pos:position pos:line="64" pos:column="21"/></operator><operator pos:line="64" pos:column="21">*<pos:position pos:line="64" pos:column="22"/></operator><operator pos:line="64" pos:column="22">)<pos:position pos:line="64" pos:column="23"/></operator> <call><name pos:line="64" pos:column="24">malloc<pos:position pos:line="64" pos:column="30"/></name> <argument_list pos:line="64" pos:column="31">(<argument><expr><name><name pos:line="64" pos:column="32">ci<pos:position pos:line="64" pos:column="34"/></name><operator pos:line="64" pos:column="34">-&gt;<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="36">values_num<pos:position pos:line="64" pos:column="46"/></name></name> <operator pos:line="64" pos:column="47">*<pos:position pos:line="64" pos:column="48"/></operator> <sizeof pos:line="64" pos:column="49">sizeof <argument_list pos:line="64" pos:column="56">(<argument><expr><name pos:line="64" pos:column="57">char<pos:position pos:line="64" pos:column="61"/></name> <operator pos:line="64" pos:column="62">*<pos:position pos:line="64" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="64" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="66"/></expr_stmt>
  <if pos:line="65" pos:column="3">if <condition pos:line="65" pos:column="6">(<expr><name><name pos:line="65" pos:column="7">pl<pos:position pos:line="65" pos:column="9"/></name><operator pos:line="65" pos:column="9">-&gt;<pos:position pos:line="65" pos:column="14"/></operator><name pos:line="65" pos:column="11">argv<pos:position pos:line="65" pos:column="15"/></name></name> <operator pos:line="65" pos:column="16">==<pos:position pos:line="65" pos:column="18"/></operator> <name pos:line="65" pos:column="19">NULL<pos:position pos:line="65" pos:column="23"/></name></expr>)<pos:position pos:line="65" pos:column="24"/></condition><then pos:line="65" pos:column="24">
  <block pos:line="66" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">ERROR<pos:position pos:line="67" pos:column="10"/></name> <argument_list pos:line="67" pos:column="11">(<argument><expr><literal type="string" pos:line="67" pos:column="12">"exec plugin: malloc failed."<pos:position pos:line="67" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">sfree<pos:position pos:line="68" pos:column="10"/></name> <argument_list pos:line="68" pos:column="11">(<argument><expr><name><name pos:line="68" pos:column="12">pl<pos:position pos:line="68" pos:column="14"/></name><operator pos:line="68" pos:column="14">-&gt;<pos:position pos:line="68" pos:column="19"/></operator><name pos:line="68" pos:column="16">exec<pos:position pos:line="68" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">sfree<pos:position pos:line="69" pos:column="10"/></name> <argument_list pos:line="69" pos:column="11">(<argument><expr><name><name pos:line="69" pos:column="12">pl<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">-&gt;<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="16">user<pos:position pos:line="69" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">sfree<pos:position pos:line="70" pos:column="10"/></name> <argument_list pos:line="70" pos:column="11">(<argument><expr><name pos:line="70" pos:column="12">pl<pos:position pos:line="70" pos:column="14"/></name></expr></argument>)<pos:position pos:line="70" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="16"/></expr_stmt>
    <return pos:line="71" pos:column="5">return <expr><operator pos:line="71" pos:column="12">(<pos:position pos:line="71" pos:column="13"/></operator><operator pos:line="71" pos:column="13">-<pos:position pos:line="71" pos:column="14"/></operator><literal type="number" pos:line="71" pos:column="14">1<pos:position pos:line="71" pos:column="15"/></literal><operator pos:line="71" pos:column="15">)<pos:position pos:line="71" pos:column="16"/></operator></expr>;<pos:position pos:line="71" pos:column="17"/></return>
  }<pos:position pos:line="72" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="73" pos:column="3">memset<pos:position pos:line="73" pos:column="9"/></name> <argument_list pos:line="73" pos:column="10">(<argument><expr><name><name pos:line="73" pos:column="11">pl<pos:position pos:line="73" pos:column="13"/></name><operator pos:line="73" pos:column="13">-&gt;<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="15">argv<pos:position pos:line="73" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="73" pos:column="21">'\0'<pos:position pos:line="73" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="27">ci<pos:position pos:line="73" pos:column="29"/></name><operator pos:line="73" pos:column="29">-&gt;<pos:position pos:line="73" pos:column="34"/></operator><name pos:line="73" pos:column="31">values_num<pos:position pos:line="73" pos:column="41"/></name></name> <operator pos:line="73" pos:column="42">*<pos:position pos:line="73" pos:column="43"/></operator> <sizeof pos:line="73" pos:column="44">sizeof <argument_list pos:line="73" pos:column="51">(<argument><expr><name pos:line="73" pos:column="52">char<pos:position pos:line="73" pos:column="56"/></name> <operator pos:line="73" pos:column="57">*<pos:position pos:line="73" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="73" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="73" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="61"/></expr_stmt>

  <block pos:line="75" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="76" pos:column="5">char<pos:position pos:line="76" pos:column="9"/></name> <modifier pos:line="76" pos:column="10">*<pos:position pos:line="76" pos:column="11"/></modifier></type><name pos:line="76" pos:column="11">tmp<pos:position pos:line="76" pos:column="14"/></name> <init pos:line="76" pos:column="15">= <expr><call><name pos:line="76" pos:column="17">strrchr<pos:position pos:line="76" pos:column="24"/></name> <argument_list pos:line="76" pos:column="25">(<argument><expr><name><name pos:line="76" pos:column="26">ci<pos:position pos:line="76" pos:column="28"/></name><operator pos:line="76" pos:column="28">-&gt;<pos:position pos:line="76" pos:column="33"/></operator><name pos:line="76" pos:column="30">values<pos:position pos:line="76" pos:column="36"/></name><index pos:line="76" pos:column="36">[<expr><literal type="number" pos:line="76" pos:column="37">1<pos:position pos:line="76" pos:column="38"/></literal></expr>]<pos:position pos:line="76" pos:column="39"/></index></name><operator pos:line="76" pos:column="39">.<pos:position pos:line="76" pos:column="40"/></operator><name><name pos:line="76" pos:column="40">value<pos:position pos:line="76" pos:column="45"/></name><operator pos:line="76" pos:column="45">.<pos:position pos:line="76" pos:column="46"/></operator><name pos:line="76" pos:column="46">string<pos:position pos:line="76" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="76" pos:column="54">'/'<pos:position pos:line="76" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="76" pos:column="59"/></decl_stmt>
    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><name pos:line="77" pos:column="9">tmp<pos:position pos:line="77" pos:column="12"/></name> <operator pos:line="77" pos:column="13">==<pos:position pos:line="77" pos:column="15"/></operator> <name pos:line="77" pos:column="16">NULL<pos:position pos:line="77" pos:column="20"/></name></expr>)<pos:position pos:line="77" pos:column="21"/></condition><then pos:line="77" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="7">strncpy<pos:position pos:line="78" pos:column="14"/></name> <argument_list pos:line="78" pos:column="15">(<argument><expr><name pos:line="78" pos:column="16">buffer<pos:position pos:line="78" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="24">ci<pos:position pos:line="78" pos:column="26"/></name><operator pos:line="78" pos:column="26">-&gt;<pos:position pos:line="78" pos:column="31"/></operator><name pos:line="78" pos:column="28">values<pos:position pos:line="78" pos:column="34"/></name><index pos:line="78" pos:column="34">[<expr><literal type="number" pos:line="78" pos:column="35">1<pos:position pos:line="78" pos:column="36"/></literal></expr>]<pos:position pos:line="78" pos:column="37"/></index></name><operator pos:line="78" pos:column="37">.<pos:position pos:line="78" pos:column="38"/></operator><name><name pos:line="78" pos:column="38">value<pos:position pos:line="78" pos:column="43"/></name><operator pos:line="78" pos:column="43">.<pos:position pos:line="78" pos:column="44"/></operator><name pos:line="78" pos:column="44">string<pos:position pos:line="78" pos:column="50"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="78" pos:column="52">sizeof <argument_list pos:line="78" pos:column="59">(<argument><expr><name pos:line="78" pos:column="60">buffer<pos:position pos:line="78" pos:column="66"/></name></expr></argument>)<pos:position pos:line="78" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="78" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="69"/></expr_stmt></block></then>
    <else pos:line="79" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="80" pos:column="7">strncpy<pos:position pos:line="80" pos:column="14"/></name> <argument_list pos:line="80" pos:column="15">(<argument><expr><name pos:line="80" pos:column="16">buffer<pos:position pos:line="80" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="24">tmp<pos:position pos:line="80" pos:column="27"/></name> <operator pos:line="80" pos:column="28">+<pos:position pos:line="80" pos:column="29"/></operator> <literal type="number" pos:line="80" pos:column="30">1<pos:position pos:line="80" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="80" pos:column="33">sizeof <argument_list pos:line="80" pos:column="40">(<argument><expr><name pos:line="80" pos:column="41">buffer<pos:position pos:line="80" pos:column="47"/></name></expr></argument>)<pos:position pos:line="80" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="80" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="50"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name><name pos:line="81" pos:column="5">buffer<pos:position pos:line="81" pos:column="11"/></name><index pos:line="81" pos:column="11">[<expr><sizeof pos:line="81" pos:column="12">sizeof <argument_list pos:line="81" pos:column="19">(<argument><expr><name pos:line="81" pos:column="20">buffer<pos:position pos:line="81" pos:column="26"/></name></expr></argument>)<pos:position pos:line="81" pos:column="27"/></argument_list></sizeof> <operator pos:line="81" pos:column="28">-<pos:position pos:line="81" pos:column="29"/></operator> <literal type="number" pos:line="81" pos:column="30">1<pos:position pos:line="81" pos:column="31"/></literal></expr>]<pos:position pos:line="81" pos:column="32"/></index></name> <operator pos:line="81" pos:column="33">=<pos:position pos:line="81" pos:column="34"/></operator> <literal type="char" pos:line="81" pos:column="35">'\0'<pos:position pos:line="81" pos:column="39"/></literal></expr>;<pos:position pos:line="81" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="82" pos:column="4"/></block>
  <expr_stmt><expr><name><name pos:line="83" pos:column="3">pl<pos:position pos:line="83" pos:column="5"/></name><operator pos:line="83" pos:column="5">-&gt;<pos:position pos:line="83" pos:column="10"/></operator><name pos:line="83" pos:column="7">argv<pos:position pos:line="83" pos:column="11"/></name><index pos:line="83" pos:column="11">[<expr><literal type="number" pos:line="83" pos:column="12">0<pos:position pos:line="83" pos:column="13"/></literal></expr>]<pos:position pos:line="83" pos:column="14"/></index></name> <operator pos:line="83" pos:column="15">=<pos:position pos:line="83" pos:column="16"/></operator> <call><name pos:line="83" pos:column="17">strdup<pos:position pos:line="83" pos:column="23"/></name> <argument_list pos:line="83" pos:column="24">(<argument><expr><name pos:line="83" pos:column="25">buffer<pos:position pos:line="83" pos:column="31"/></name></expr></argument>)<pos:position pos:line="83" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="33"/></expr_stmt>
  <if pos:line="84" pos:column="3">if <condition pos:line="84" pos:column="6">(<expr><name><name pos:line="84" pos:column="7">pl<pos:position pos:line="84" pos:column="9"/></name><operator pos:line="84" pos:column="9">-&gt;<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="11">argv<pos:position pos:line="84" pos:column="15"/></name><index pos:line="84" pos:column="15">[<expr><literal type="number" pos:line="84" pos:column="16">0<pos:position pos:line="84" pos:column="17"/></literal></expr>]<pos:position pos:line="84" pos:column="18"/></index></name> <operator pos:line="84" pos:column="19">==<pos:position pos:line="84" pos:column="21"/></operator> <name pos:line="84" pos:column="22">NULL<pos:position pos:line="84" pos:column="26"/></name></expr>)<pos:position pos:line="84" pos:column="27"/></condition><then pos:line="84" pos:column="27">
  <block pos:line="85" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">ERROR<pos:position pos:line="86" pos:column="10"/></name> <argument_list pos:line="86" pos:column="11">(<argument><expr><literal type="string" pos:line="86" pos:column="12">"exec plugin: malloc failed."<pos:position pos:line="86" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">sfree<pos:position pos:line="87" pos:column="10"/></name> <argument_list pos:line="87" pos:column="11">(<argument><expr><name><name pos:line="87" pos:column="12">pl<pos:position pos:line="87" pos:column="14"/></name><operator pos:line="87" pos:column="14">-&gt;<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="16">argv<pos:position pos:line="87" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">sfree<pos:position pos:line="88" pos:column="10"/></name> <argument_list pos:line="88" pos:column="11">(<argument><expr><name><name pos:line="88" pos:column="12">pl<pos:position pos:line="88" pos:column="14"/></name><operator pos:line="88" pos:column="14">-&gt;<pos:position pos:line="88" pos:column="19"/></operator><name pos:line="88" pos:column="16">exec<pos:position pos:line="88" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">sfree<pos:position pos:line="89" pos:column="10"/></name> <argument_list pos:line="89" pos:column="11">(<argument><expr><name><name pos:line="89" pos:column="12">pl<pos:position pos:line="89" pos:column="14"/></name><operator pos:line="89" pos:column="14">-&gt;<pos:position pos:line="89" pos:column="19"/></operator><name pos:line="89" pos:column="16">user<pos:position pos:line="89" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">sfree<pos:position pos:line="90" pos:column="10"/></name> <argument_list pos:line="90" pos:column="11">(<argument><expr><name pos:line="90" pos:column="12">pl<pos:position pos:line="90" pos:column="14"/></name></expr></argument>)<pos:position pos:line="90" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="16"/></expr_stmt>
    <return pos:line="91" pos:column="5">return <expr><operator pos:line="91" pos:column="12">(<pos:position pos:line="91" pos:column="13"/></operator><operator pos:line="91" pos:column="13">-<pos:position pos:line="91" pos:column="14"/></operator><literal type="number" pos:line="91" pos:column="14">1<pos:position pos:line="91" pos:column="15"/></literal><operator pos:line="91" pos:column="15">)<pos:position pos:line="91" pos:column="16"/></operator></expr>;<pos:position pos:line="91" pos:column="17"/></return>
  }<pos:position pos:line="92" pos:column="4"/></block></then></if>

  <for pos:line="94" pos:column="3">for <control pos:line="94" pos:column="7">(<init><expr><name pos:line="94" pos:column="8">i<pos:position pos:line="94" pos:column="9"/></name> <operator pos:line="94" pos:column="10">=<pos:position pos:line="94" pos:column="11"/></operator> <literal type="number" pos:line="94" pos:column="12">1<pos:position pos:line="94" pos:column="13"/></literal></expr>;<pos:position pos:line="94" pos:column="14"/></init> <condition><expr><name pos:line="94" pos:column="15">i<pos:position pos:line="94" pos:column="16"/></name> <operator pos:line="94" pos:column="17">&lt;<pos:position pos:line="94" pos:column="21"/></operator> <operator pos:line="94" pos:column="19">(<pos:position pos:line="94" pos:column="20"/></operator><name><name pos:line="94" pos:column="20">ci<pos:position pos:line="94" pos:column="22"/></name><operator pos:line="94" pos:column="22">-&gt;<pos:position pos:line="94" pos:column="27"/></operator><name pos:line="94" pos:column="24">values_num<pos:position pos:line="94" pos:column="34"/></name></name> <operator pos:line="94" pos:column="35">-<pos:position pos:line="94" pos:column="36"/></operator> <literal type="number" pos:line="94" pos:column="37">1<pos:position pos:line="94" pos:column="38"/></literal><operator pos:line="94" pos:column="38">)<pos:position pos:line="94" pos:column="39"/></operator></expr>;<pos:position pos:line="94" pos:column="40"/></condition> <incr><expr><name pos:line="94" pos:column="41">i<pos:position pos:line="94" pos:column="42"/></name><operator pos:line="94" pos:column="42">++<pos:position pos:line="94" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="94" pos:column="45"/></control>
  <block pos:line="95" pos:column="3">{
    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><name><name pos:line="96" pos:column="9">ci<pos:position pos:line="96" pos:column="11"/></name><operator pos:line="96" pos:column="11">-&gt;<pos:position pos:line="96" pos:column="16"/></operator><name pos:line="96" pos:column="13">values<pos:position pos:line="96" pos:column="19"/></name><index pos:line="96" pos:column="19">[<expr><name pos:line="96" pos:column="20">i<pos:position pos:line="96" pos:column="21"/></name> <operator pos:line="96" pos:column="22">+<pos:position pos:line="96" pos:column="23"/></operator> <literal type="number" pos:line="96" pos:column="24">1<pos:position pos:line="96" pos:column="25"/></literal></expr>]<pos:position pos:line="96" pos:column="26"/></index></name><operator pos:line="96" pos:column="26">.<pos:position pos:line="96" pos:column="27"/></operator><name pos:line="96" pos:column="27">type<pos:position pos:line="96" pos:column="31"/></name> <operator pos:line="96" pos:column="32">==<pos:position pos:line="96" pos:column="34"/></operator> <name pos:line="96" pos:column="35">OCONFIG_TYPE_STRING<pos:position pos:line="96" pos:column="54"/></name></expr>)<pos:position pos:line="96" pos:column="55"/></condition><then pos:line="96" pos:column="55">
    <block pos:line="97" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="98" pos:column="7">pl<pos:position pos:line="98" pos:column="9"/></name><operator pos:line="98" pos:column="9">-&gt;<pos:position pos:line="98" pos:column="14"/></operator><name pos:line="98" pos:column="11">argv<pos:position pos:line="98" pos:column="15"/></name><index pos:line="98" pos:column="15">[<expr><name pos:line="98" pos:column="16">i<pos:position pos:line="98" pos:column="17"/></name></expr>]<pos:position pos:line="98" pos:column="18"/></index></name> <operator pos:line="98" pos:column="19">=<pos:position pos:line="98" pos:column="20"/></operator> <call><name pos:line="98" pos:column="21">strdup<pos:position pos:line="98" pos:column="27"/></name> <argument_list pos:line="98" pos:column="28">(<argument><expr><name><name pos:line="98" pos:column="29">ci<pos:position pos:line="98" pos:column="31"/></name><operator pos:line="98" pos:column="31">-&gt;<pos:position pos:line="98" pos:column="36"/></operator><name pos:line="98" pos:column="33">values<pos:position pos:line="98" pos:column="39"/></name><index pos:line="98" pos:column="39">[<expr><name pos:line="98" pos:column="40">i<pos:position pos:line="98" pos:column="41"/></name> <operator pos:line="98" pos:column="42">+<pos:position pos:line="98" pos:column="43"/></operator> <literal type="number" pos:line="98" pos:column="44">1<pos:position pos:line="98" pos:column="45"/></literal></expr>]<pos:position pos:line="98" pos:column="46"/></index></name><operator pos:line="98" pos:column="46">.<pos:position pos:line="98" pos:column="47"/></operator><name><name pos:line="98" pos:column="47">value<pos:position pos:line="98" pos:column="52"/></name><operator pos:line="98" pos:column="52">.<pos:position pos:line="98" pos:column="53"/></operator><name pos:line="98" pos:column="53">string<pos:position pos:line="98" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="99" pos:column="6"/></block></then>
    <else pos:line="100" pos:column="5">else
    <block pos:line="101" pos:column="5">{
      <if pos:line="102" pos:column="7">if <condition pos:line="102" pos:column="10">(<expr><name><name pos:line="102" pos:column="11">ci<pos:position pos:line="102" pos:column="13"/></name><operator pos:line="102" pos:column="13">-&gt;<pos:position pos:line="102" pos:column="18"/></operator><name pos:line="102" pos:column="15">values<pos:position pos:line="102" pos:column="21"/></name><index pos:line="102" pos:column="21">[<expr><name pos:line="102" pos:column="22">i<pos:position pos:line="102" pos:column="23"/></name> <operator pos:line="102" pos:column="24">+<pos:position pos:line="102" pos:column="25"/></operator> <literal type="number" pos:line="102" pos:column="26">1<pos:position pos:line="102" pos:column="27"/></literal></expr>]<pos:position pos:line="102" pos:column="28"/></index></name><operator pos:line="102" pos:column="28">.<pos:position pos:line="102" pos:column="29"/></operator><name pos:line="102" pos:column="29">type<pos:position pos:line="102" pos:column="33"/></name> <operator pos:line="102" pos:column="34">==<pos:position pos:line="102" pos:column="36"/></operator> <name pos:line="102" pos:column="37">OCONFIG_TYPE_NUMBER<pos:position pos:line="102" pos:column="56"/></name></expr>)<pos:position pos:line="102" pos:column="57"/></condition><then pos:line="102" pos:column="57">
      <block pos:line="103" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="104" pos:column="9">snprintf<pos:position pos:line="104" pos:column="17"/></name> <argument_list pos:line="104" pos:column="18">(<argument><expr><name pos:line="104" pos:column="19">buffer<pos:position pos:line="104" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="104" pos:column="27">sizeof <argument_list pos:line="104" pos:column="34">(<argument><expr><name pos:line="104" pos:column="35">buffer<pos:position pos:line="104" pos:column="41"/></name></expr></argument>)<pos:position pos:line="104" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="44">"%lf"<pos:position pos:line="104" pos:column="49"/></literal></expr></argument>,
	    <argument><expr><name><name pos:line="105" pos:column="13">ci<pos:position pos:line="105" pos:column="15"/></name><operator pos:line="105" pos:column="15">-&gt;<pos:position pos:line="105" pos:column="20"/></operator><name pos:line="105" pos:column="17">values<pos:position pos:line="105" pos:column="23"/></name><index pos:line="105" pos:column="23">[<expr><name pos:line="105" pos:column="24">i<pos:position pos:line="105" pos:column="25"/></name> <operator pos:line="105" pos:column="26">+<pos:position pos:line="105" pos:column="27"/></operator> <literal type="number" pos:line="105" pos:column="28">1<pos:position pos:line="105" pos:column="29"/></literal></expr>]<pos:position pos:line="105" pos:column="30"/></index></name><operator pos:line="105" pos:column="30">.<pos:position pos:line="105" pos:column="31"/></operator><name><name pos:line="105" pos:column="31">value<pos:position pos:line="105" pos:column="36"/></name><operator pos:line="105" pos:column="36">.<pos:position pos:line="105" pos:column="37"/></operator><name pos:line="105" pos:column="37">number<pos:position pos:line="105" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="45"/></expr_stmt>
      }<pos:position pos:line="106" pos:column="8"/></block></then>
      <else pos:line="107" pos:column="7">else
      <block pos:line="108" pos:column="7">{
	<if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name><name pos:line="109" pos:column="13">ci<pos:position pos:line="109" pos:column="15"/></name><operator pos:line="109" pos:column="15">-&gt;<pos:position pos:line="109" pos:column="20"/></operator><name pos:line="109" pos:column="17">values<pos:position pos:line="109" pos:column="23"/></name><index pos:line="109" pos:column="23">[<expr><name pos:line="109" pos:column="24">i<pos:position pos:line="109" pos:column="25"/></name> <operator pos:line="109" pos:column="26">+<pos:position pos:line="109" pos:column="27"/></operator> <literal type="number" pos:line="109" pos:column="28">1<pos:position pos:line="109" pos:column="29"/></literal></expr>]<pos:position pos:line="109" pos:column="30"/></index></name><operator pos:line="109" pos:column="30">.<pos:position pos:line="109" pos:column="31"/></operator><name><name pos:line="109" pos:column="31">value<pos:position pos:line="109" pos:column="36"/></name><operator pos:line="109" pos:column="36">.<pos:position pos:line="109" pos:column="37"/></operator><name pos:line="109" pos:column="37">boolean<pos:position pos:line="109" pos:column="44"/></name></name></expr>)<pos:position pos:line="109" pos:column="45"/></condition><then pos:line="109" pos:column="45">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="11">strncpy<pos:position pos:line="110" pos:column="18"/></name> <argument_list pos:line="110" pos:column="19">(<argument><expr><name pos:line="110" pos:column="20">buffer<pos:position pos:line="110" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="28">"true"<pos:position pos:line="110" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="110" pos:column="36">sizeof <argument_list pos:line="110" pos:column="43">(<argument><expr><name pos:line="110" pos:column="44">buffer<pos:position pos:line="110" pos:column="50"/></name></expr></argument>)<pos:position pos:line="110" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="110" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="53"/></expr_stmt></block></then>
	<else pos:line="111" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="112" pos:column="11">strncpy<pos:position pos:line="112" pos:column="18"/></name> <argument_list pos:line="112" pos:column="19">(<argument><expr><name pos:line="112" pos:column="20">buffer<pos:position pos:line="112" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="28">"false"<pos:position pos:line="112" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="112" pos:column="37">sizeof <argument_list pos:line="112" pos:column="44">(<argument><expr><name pos:line="112" pos:column="45">buffer<pos:position pos:line="112" pos:column="51"/></name></expr></argument>)<pos:position pos:line="112" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="112" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="54"/></expr_stmt></block></else></if>
      }<pos:position pos:line="113" pos:column="8"/></block></else></if>
      <expr_stmt><expr><name><name pos:line="114" pos:column="7">buffer<pos:position pos:line="114" pos:column="13"/></name><index pos:line="114" pos:column="13">[<expr><sizeof pos:line="114" pos:column="14">sizeof <argument_list pos:line="114" pos:column="21">(<argument><expr><name pos:line="114" pos:column="22">buffer<pos:position pos:line="114" pos:column="28"/></name></expr></argument>)<pos:position pos:line="114" pos:column="29"/></argument_list></sizeof> <operator pos:line="114" pos:column="30">-<pos:position pos:line="114" pos:column="31"/></operator> <literal type="number" pos:line="114" pos:column="32">1<pos:position pos:line="114" pos:column="33"/></literal></expr>]<pos:position pos:line="114" pos:column="34"/></index></name> <operator pos:line="114" pos:column="35">=<pos:position pos:line="114" pos:column="36"/></operator> <literal type="char" pos:line="114" pos:column="37">'\0'<pos:position pos:line="114" pos:column="41"/></literal></expr>;<pos:position pos:line="114" pos:column="42"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="116" pos:column="7">pl<pos:position pos:line="116" pos:column="9"/></name><operator pos:line="116" pos:column="9">-&gt;<pos:position pos:line="116" pos:column="14"/></operator><name pos:line="116" pos:column="11">argv<pos:position pos:line="116" pos:column="15"/></name><index pos:line="116" pos:column="15">[<expr><name pos:line="116" pos:column="16">i<pos:position pos:line="116" pos:column="17"/></name></expr>]<pos:position pos:line="116" pos:column="18"/></index></name> <operator pos:line="116" pos:column="19">=<pos:position pos:line="116" pos:column="20"/></operator> <call><name pos:line="116" pos:column="21">strdup<pos:position pos:line="116" pos:column="27"/></name> <argument_list pos:line="116" pos:column="28">(<argument><expr><name pos:line="116" pos:column="29">buffer<pos:position pos:line="116" pos:column="35"/></name></expr></argument>)<pos:position pos:line="116" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="117" pos:column="6"/></block></else></if>

    <if pos:line="119" pos:column="5">if <condition pos:line="119" pos:column="8">(<expr><name><name pos:line="119" pos:column="9">pl<pos:position pos:line="119" pos:column="11"/></name><operator pos:line="119" pos:column="11">-&gt;<pos:position pos:line="119" pos:column="16"/></operator><name pos:line="119" pos:column="13">argv<pos:position pos:line="119" pos:column="17"/></name><index pos:line="119" pos:column="17">[<expr><name pos:line="119" pos:column="18">i<pos:position pos:line="119" pos:column="19"/></name></expr>]<pos:position pos:line="119" pos:column="20"/></index></name> <operator pos:line="119" pos:column="21">==<pos:position pos:line="119" pos:column="23"/></operator> <name pos:line="119" pos:column="24">NULL<pos:position pos:line="119" pos:column="28"/></name></expr>)<pos:position pos:line="119" pos:column="29"/></condition><then pos:line="119" pos:column="29">
    <block pos:line="120" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="121" pos:column="7">ERROR<pos:position pos:line="121" pos:column="12"/></name> <argument_list pos:line="121" pos:column="13">(<argument><expr><literal type="string" pos:line="121" pos:column="14">"exec plugin: strdup failed."<pos:position pos:line="121" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="45"/></expr_stmt>
      <break pos:line="122" pos:column="7">break;<pos:position pos:line="122" pos:column="13"/></break>
    }<pos:position pos:line="123" pos:column="6"/></block></then></if>
  }<pos:position pos:line="124" pos:column="4"/></block></for> <comment type="block" pos:line="124" pos:column="5">/* for (i) */</comment>

  <if pos:line="126" pos:column="3">if <condition pos:line="126" pos:column="6">(<expr><name pos:line="126" pos:column="7">i<pos:position pos:line="126" pos:column="8"/></name> <operator pos:line="126" pos:column="9">&lt;<pos:position pos:line="126" pos:column="13"/></operator> <operator pos:line="126" pos:column="11">(<pos:position pos:line="126" pos:column="12"/></operator><name><name pos:line="126" pos:column="12">ci<pos:position pos:line="126" pos:column="14"/></name><operator pos:line="126" pos:column="14">-&gt;<pos:position pos:line="126" pos:column="19"/></operator><name pos:line="126" pos:column="16">values_num<pos:position pos:line="126" pos:column="26"/></name></name> <operator pos:line="126" pos:column="27">-<pos:position pos:line="126" pos:column="28"/></operator> <literal type="number" pos:line="126" pos:column="29">1<pos:position pos:line="126" pos:column="30"/></literal><operator pos:line="126" pos:column="30">)<pos:position pos:line="126" pos:column="31"/></operator></expr>)<pos:position pos:line="126" pos:column="32"/></condition><then pos:line="126" pos:column="32">
  <block pos:line="127" pos:column="3">{
    <while pos:line="128" pos:column="5">while <condition pos:line="128" pos:column="11">(<expr><operator pos:line="128" pos:column="12">(<pos:position pos:line="128" pos:column="13"/></operator><operator pos:line="128" pos:column="13">--<pos:position pos:line="128" pos:column="15"/></operator><name pos:line="128" pos:column="15">i<pos:position pos:line="128" pos:column="16"/></name><operator pos:line="128" pos:column="16">)<pos:position pos:line="128" pos:column="17"/></operator> <operator pos:line="128" pos:column="18">&gt;=<pos:position pos:line="128" pos:column="23"/></operator> <literal type="number" pos:line="128" pos:column="21">0<pos:position pos:line="128" pos:column="22"/></literal></expr>)<pos:position pos:line="128" pos:column="23"/></condition>
    <block pos:line="129" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="130" pos:column="7">sfree<pos:position pos:line="130" pos:column="12"/></name> <argument_list pos:line="130" pos:column="13">(<argument><expr><name><name pos:line="130" pos:column="14">pl<pos:position pos:line="130" pos:column="16"/></name><operator pos:line="130" pos:column="16">-&gt;<pos:position pos:line="130" pos:column="21"/></operator><name pos:line="130" pos:column="18">argv<pos:position pos:line="130" pos:column="22"/></name><index pos:line="130" pos:column="22">[<expr><name pos:line="130" pos:column="23">i<pos:position pos:line="130" pos:column="24"/></name></expr>]<pos:position pos:line="130" pos:column="25"/></index></name></expr></argument>)<pos:position pos:line="130" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="131" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="132" pos:column="5">sfree<pos:position pos:line="132" pos:column="10"/></name> <argument_list pos:line="132" pos:column="11">(<argument><expr><name><name pos:line="132" pos:column="12">pl<pos:position pos:line="132" pos:column="14"/></name><operator pos:line="132" pos:column="14">-&gt;<pos:position pos:line="132" pos:column="19"/></operator><name pos:line="132" pos:column="16">argv<pos:position pos:line="132" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="133" pos:column="5">sfree<pos:position pos:line="133" pos:column="10"/></name> <argument_list pos:line="133" pos:column="11">(<argument><expr><name><name pos:line="133" pos:column="12">pl<pos:position pos:line="133" pos:column="14"/></name><operator pos:line="133" pos:column="14">-&gt;<pos:position pos:line="133" pos:column="19"/></operator><name pos:line="133" pos:column="16">exec<pos:position pos:line="133" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="134" pos:column="5">sfree<pos:position pos:line="134" pos:column="10"/></name> <argument_list pos:line="134" pos:column="11">(<argument><expr><name><name pos:line="134" pos:column="12">pl<pos:position pos:line="134" pos:column="14"/></name><operator pos:line="134" pos:column="14">-&gt;<pos:position pos:line="134" pos:column="19"/></operator><name pos:line="134" pos:column="16">user<pos:position pos:line="134" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="134" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="135" pos:column="5">sfree<pos:position pos:line="135" pos:column="10"/></name> <argument_list pos:line="135" pos:column="11">(<argument><expr><name pos:line="135" pos:column="12">pl<pos:position pos:line="135" pos:column="14"/></name></expr></argument>)<pos:position pos:line="135" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="16"/></expr_stmt>
    <return pos:line="136" pos:column="5">return <expr><operator pos:line="136" pos:column="12">(<pos:position pos:line="136" pos:column="13"/></operator><operator pos:line="136" pos:column="13">-<pos:position pos:line="136" pos:column="14"/></operator><literal type="number" pos:line="136" pos:column="14">1<pos:position pos:line="136" pos:column="15"/></literal><operator pos:line="136" pos:column="15">)<pos:position pos:line="136" pos:column="16"/></operator></expr>;<pos:position pos:line="136" pos:column="17"/></return>
  }<pos:position pos:line="137" pos:column="4"/></block></then></if>

  <for pos:line="139" pos:column="3">for <control pos:line="139" pos:column="7">(<init><expr><name pos:line="139" pos:column="8">i<pos:position pos:line="139" pos:column="9"/></name> <operator pos:line="139" pos:column="10">=<pos:position pos:line="139" pos:column="11"/></operator> <literal type="number" pos:line="139" pos:column="12">0<pos:position pos:line="139" pos:column="13"/></literal></expr>;<pos:position pos:line="139" pos:column="14"/></init> <condition><expr><name><name pos:line="139" pos:column="15">pl<pos:position pos:line="139" pos:column="17"/></name><operator pos:line="139" pos:column="17">-&gt;<pos:position pos:line="139" pos:column="22"/></operator><name pos:line="139" pos:column="19">argv<pos:position pos:line="139" pos:column="23"/></name><index pos:line="139" pos:column="23">[<expr><name pos:line="139" pos:column="24">i<pos:position pos:line="139" pos:column="25"/></name></expr>]<pos:position pos:line="139" pos:column="26"/></index></name> <operator pos:line="139" pos:column="27">!=<pos:position pos:line="139" pos:column="29"/></operator> <name pos:line="139" pos:column="30">NULL<pos:position pos:line="139" pos:column="34"/></name></expr>;<pos:position pos:line="139" pos:column="35"/></condition> <incr><expr><name pos:line="139" pos:column="36">i<pos:position pos:line="139" pos:column="37"/></name><operator pos:line="139" pos:column="37">++<pos:position pos:line="139" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="139" pos:column="40"/></control>
  <block pos:line="140" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="141" pos:column="5">DEBUG<pos:position pos:line="141" pos:column="10"/></name> <argument_list pos:line="141" pos:column="11">(<argument><expr><literal type="string" pos:line="141" pos:column="12">"exec plugin: argv[%i] = %s"<pos:position pos:line="141" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="141" pos:column="42">i<pos:position pos:line="141" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="141" pos:column="45">pl<pos:position pos:line="141" pos:column="47"/></name><operator pos:line="141" pos:column="47">-&gt;<pos:position pos:line="141" pos:column="52"/></operator><name pos:line="141" pos:column="49">argv<pos:position pos:line="141" pos:column="53"/></name><index pos:line="141" pos:column="53">[<expr><name pos:line="141" pos:column="54">i<pos:position pos:line="141" pos:column="55"/></name></expr>]<pos:position pos:line="141" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="141" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="58"/></expr_stmt>
  }<pos:position pos:line="142" pos:column="4"/></block></for>

  <expr_stmt><expr><name><name pos:line="144" pos:column="3">pl<pos:position pos:line="144" pos:column="5"/></name><operator pos:line="144" pos:column="5">-&gt;<pos:position pos:line="144" pos:column="10"/></operator><name pos:line="144" pos:column="7">next<pos:position pos:line="144" pos:column="11"/></name></name> <operator pos:line="144" pos:column="12">=<pos:position pos:line="144" pos:column="13"/></operator> <name pos:line="144" pos:column="14">pl_head<pos:position pos:line="144" pos:column="21"/></name></expr>;<pos:position pos:line="144" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="145" pos:column="3">pl_head<pos:position pos:line="145" pos:column="10"/></name> <operator pos:line="145" pos:column="11">=<pos:position pos:line="145" pos:column="12"/></operator> <name pos:line="145" pos:column="13">pl<pos:position pos:line="145" pos:column="15"/></name></expr>;<pos:position pos:line="145" pos:column="16"/></expr_stmt>

  <return pos:line="147" pos:column="3">return <expr><operator pos:line="147" pos:column="10">(<pos:position pos:line="147" pos:column="11"/></operator><literal type="number" pos:line="147" pos:column="11">0<pos:position pos:line="147" pos:column="12"/></literal><operator pos:line="147" pos:column="12">)<pos:position pos:line="147" pos:column="13"/></operator></expr>;<pos:position pos:line="147" pos:column="14"/></return>
}<pos:position pos:line="148" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_955_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">zookeeper_query<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">buffer<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">size_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">buffer_size<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list> <block pos:line="1" pos:column="62">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">sk<pos:position pos:line="2" pos:column="9"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="11">status<pos:position pos:line="2" pos:column="17"/></name></decl>;<pos:position pos:line="2" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">buffer_fill<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">sk<pos:position pos:line="5" pos:column="5"/></name> <operator pos:line="5" pos:column="6">=<pos:position pos:line="5" pos:column="7"/></operator> <call><name pos:line="5" pos:column="8">zookeeper_connect<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">()<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">sk<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">&lt;<pos:position pos:line="6" pos:column="14"/></operator> <literal type="number" pos:line="6" pos:column="12">0<pos:position pos:line="6" pos:column="13"/></literal></expr>)<pos:position pos:line="6" pos:column="14"/></condition><then pos:line="6" pos:column="14"> <block pos:line="6" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ERROR<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><literal type="string" pos:line="7" pos:column="11">"zookeeper: Could not connect to daemon"<pos:position pos:line="7" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><literal type="number" pos:line="8" pos:column="14">1<pos:position pos:line="8" pos:column="15"/></literal><operator pos:line="8" pos:column="15">)<pos:position pos:line="8" pos:column="16"/></operator></expr>;<pos:position pos:line="8" pos:column="17"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">status<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">int<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">)<pos:position pos:line="11" pos:column="17"/></operator><call><name pos:line="11" pos:column="17">swrite<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">sk<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="28">"mntr\r\n"<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="40">strlen<pos:position pos:line="11" pos:column="46"/></name><argument_list pos:line="11" pos:column="46">(<argument><expr><literal type="string" pos:line="11" pos:column="47">"mntr\r\n"<pos:position pos:line="11" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="60"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">status<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">!=<pos:position pos:line="12" pos:column="16"/></operator> <literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19"> <block pos:line="12" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name></type> <name><name pos:line="13" pos:column="10">errbuf<pos:position pos:line="13" pos:column="16"/></name><index pos:line="13" pos:column="16">[<expr><literal type="number" pos:line="13" pos:column="17">1024<pos:position pos:line="13" pos:column="21"/></literal></expr>]<pos:position pos:line="13" pos:column="22"/></index></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ERROR<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><literal type="string" pos:line="14" pos:column="11">"zookeeper: write(2) failed: %s"<pos:position pos:line="14" pos:column="43"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="15" pos:column="11">sstrerror<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">errno<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="28">errbuf<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="36">sizeof<argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">errbuf<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">close<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><name pos:line="16" pos:column="11">sk<pos:position pos:line="16" pos:column="13"/></name></expr></argument>)<pos:position pos:line="16" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">-<pos:position pos:line="17" pos:column="14"/></operator><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal><operator pos:line="17" pos:column="15">)<pos:position pos:line="17" pos:column="16"/></operator></expr>;<pos:position pos:line="17" pos:column="17"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">memset<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><name pos:line="20" pos:column="10">buffer<pos:position pos:line="20" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="21">buffer_size<pos:position pos:line="20" pos:column="32"/></name></expr></argument>)<pos:position pos:line="20" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">buffer_fill<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <literal type="number" pos:line="21" pos:column="17">0<pos:position pos:line="21" pos:column="18"/></literal></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt>

  <while pos:line="23" pos:column="3">while <condition pos:line="23" pos:column="9">(<expr><operator pos:line="23" pos:column="10">(<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">status<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <operator pos:line="23" pos:column="20">(<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">int<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">)<pos:position pos:line="23" pos:column="25"/></operator><call><name pos:line="23" pos:column="25">recv<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">sk<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">buffer<pos:position pos:line="23" pos:column="40"/></name> <operator pos:line="23" pos:column="41">+<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="43">buffer_fill<pos:position pos:line="23" pos:column="54"/></name></expr></argument>,
                             <argument><expr><name pos:line="24" pos:column="30">buffer_size<pos:position pos:line="24" pos:column="41"/></name> <operator pos:line="24" pos:column="42">-<pos:position pos:line="24" pos:column="43"/></operator> <name pos:line="24" pos:column="44">buffer_fill<pos:position pos:line="24" pos:column="55"/></name></expr></argument>, <comment type="block" pos:line="24" pos:column="57">/* flags = */</comment> <argument><expr><literal type="number" pos:line="24" pos:column="71">0<pos:position pos:line="24" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="73"/></argument_list></call><operator pos:line="24" pos:column="73">)<pos:position pos:line="24" pos:column="74"/></operator> <operator pos:line="24" pos:column="75">!=<pos:position pos:line="24" pos:column="77"/></operator>
         <literal type="number" pos:line="25" pos:column="10">0<pos:position pos:line="25" pos:column="11"/></literal></expr>)<pos:position pos:line="25" pos:column="12"/></condition> <block pos:line="25" pos:column="13">{
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">status<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">&lt;<pos:position pos:line="26" pos:column="20"/></operator> <literal type="number" pos:line="26" pos:column="18">0<pos:position pos:line="26" pos:column="19"/></literal></expr>)<pos:position pos:line="26" pos:column="20"/></condition><then pos:line="26" pos:column="20"> <block pos:line="26" pos:column="21">{
      <decl_stmt><decl><type><name pos:line="27" pos:column="7">char<pos:position pos:line="27" pos:column="11"/></name></type> <name><name pos:line="27" pos:column="12">errbuf<pos:position pos:line="27" pos:column="18"/></name><index pos:line="27" pos:column="18">[<expr><literal type="number" pos:line="27" pos:column="19">1024<pos:position pos:line="27" pos:column="23"/></literal></expr>]<pos:position pos:line="27" pos:column="24"/></index></name></decl>;<pos:position pos:line="27" pos:column="25"/></decl_stmt>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><operator pos:line="28" pos:column="11">(<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="12">errno<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">==<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">EAGAIN<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">)<pos:position pos:line="28" pos:column="28"/></operator> <operator pos:line="28" pos:column="29">||<pos:position pos:line="28" pos:column="31"/></operator> <operator pos:line="28" pos:column="32">(<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="33">errno<pos:position pos:line="28" pos:column="38"/></name> <operator pos:line="28" pos:column="39">==<pos:position pos:line="28" pos:column="41"/></operator> <name pos:line="28" pos:column="42">EINTR<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">)<pos:position pos:line="28" pos:column="48"/></operator></expr>)<pos:position pos:line="28" pos:column="49"/></condition><then pos:line="28" pos:column="49">
        <block type="pseudo"><continue pos:line="29" pos:column="9">continue;<pos:position pos:line="29" pos:column="18"/></continue></block></then></if>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">ERROR<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><literal type="string" pos:line="30" pos:column="13">"zookeeper: Error reading from socket: %s"<pos:position pos:line="30" pos:column="55"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="31" pos:column="13">sstrerror<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">errno<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="30">errbuf<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="38">sizeof<argument_list pos:line="31" pos:column="44">(<argument><expr><name pos:line="31" pos:column="45">errbuf<pos:position pos:line="31" pos:column="51"/></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">close<pos:position pos:line="32" pos:column="12"/></name><argument_list pos:line="32" pos:column="12">(<argument><expr><name pos:line="32" pos:column="13">sk<pos:position pos:line="32" pos:column="15"/></name></expr></argument>)<pos:position pos:line="32" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="17"/></expr_stmt>
      <return pos:line="33" pos:column="7">return <expr><operator pos:line="33" pos:column="14">(<pos:position pos:line="33" pos:column="15"/></operator><operator pos:line="33" pos:column="15">-<pos:position pos:line="33" pos:column="16"/></operator><literal type="number" pos:line="33" pos:column="16">1<pos:position pos:line="33" pos:column="17"/></literal><operator pos:line="33" pos:column="17">)<pos:position pos:line="33" pos:column="18"/></operator></expr>;<pos:position pos:line="33" pos:column="19"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="36" pos:column="5">buffer_fill<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">+=<pos:position pos:line="36" pos:column="19"/></operator> <operator pos:line="36" pos:column="20">(<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">size_t<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">)<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="28">status<pos:position pos:line="36" pos:column="34"/></name></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></while> <comment type="block" pos:line="37" pos:column="5">/* while (recv) */</comment>

  <expr_stmt><expr><name pos:line="39" pos:column="3">status<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <literal type="number" pos:line="39" pos:column="12">0<pos:position pos:line="39" pos:column="13"/></literal></expr>;<pos:position pos:line="39" pos:column="14"/></expr_stmt>
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name pos:line="40" pos:column="7">buffer_fill<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">==<pos:position pos:line="40" pos:column="21"/></operator> <literal type="number" pos:line="40" pos:column="22">0<pos:position pos:line="40" pos:column="23"/></literal></expr>)<pos:position pos:line="40" pos:column="24"/></condition><then pos:line="40" pos:column="24"> <block pos:line="40" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">WARNING<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><literal type="string" pos:line="41" pos:column="13">"zookeeper: No data returned by MNTR command."<pos:position pos:line="41" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">status<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <operator pos:line="42" pos:column="14">-<pos:position pos:line="42" pos:column="15"/></operator><literal type="number" pos:line="42" pos:column="15">1<pos:position pos:line="42" pos:column="16"/></literal></expr>;<pos:position pos:line="42" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="45" pos:column="3">close<pos:position pos:line="45" pos:column="8"/></name><argument_list pos:line="45" pos:column="8">(<argument><expr><name pos:line="45" pos:column="9">sk<pos:position pos:line="45" pos:column="11"/></name></expr></argument>)<pos:position pos:line="45" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="13"/></expr_stmt>
  <return pos:line="46" pos:column="3">return <expr><operator pos:line="46" pos:column="10">(<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="11">status<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">)<pos:position pos:line="46" pos:column="18"/></operator></expr>;<pos:position pos:line="46" pos:column="19"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

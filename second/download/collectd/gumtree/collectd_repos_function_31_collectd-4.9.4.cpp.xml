<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_31_collectd-4.9.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">lt_dladvise_init<pos:position pos:line="2" pos:column="17"/></name> <parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">lt_dladvise<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">padvise<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">lt_dladvise<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">advise<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><operator pos:line="4" pos:column="24">(<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">lt_dladvise<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">)<pos:position pos:line="4" pos:column="37"/></operator> <call><name pos:line="4" pos:column="38">lt__zalloc<pos:position pos:line="4" pos:column="48"/></name> <argument_list pos:line="4" pos:column="49">(<argument><expr><sizeof pos:line="4" pos:column="50">sizeof <argument_list pos:line="4" pos:column="57">(<argument><expr pos:line="4" pos:column="58">struct <name pos:line="4" pos:column="65">lt__advise<pos:position pos:line="4" pos:column="75"/></name></expr></argument>)<pos:position pos:line="4" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="78"/></decl_stmt>
  <expr_stmt><expr><operator pos:line="5" pos:column="3">*<pos:position pos:line="5" pos:column="4"/></operator><name pos:line="5" pos:column="4">padvise<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <name pos:line="5" pos:column="14">advise<pos:position pos:line="5" pos:column="20"/></name></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt>
  <return pos:line="6" pos:column="3">return <expr><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><ternary><condition><expr><name pos:line="6" pos:column="11">advise<pos:position pos:line="6" pos:column="17"/></name></expr> ?<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19"> <expr><literal type="number" pos:line="6" pos:column="20">0<pos:position pos:line="6" pos:column="21"/></literal></expr> <pos:position pos:line="6" pos:column="22"/></then><else pos:line="6" pos:column="22">: <expr><literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal></expr></else></ternary><operator pos:line="6" pos:column="25">)<pos:position pos:line="6" pos:column="26"/></operator></expr>;<pos:position pos:line="6" pos:column="27"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

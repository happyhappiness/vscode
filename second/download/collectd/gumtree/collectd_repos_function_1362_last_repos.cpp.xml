<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1362_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">service_statnode_process<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">pinba_statnode_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">node<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="62">/* {{{ */</comment>
                                     <parameter><decl><type><name pos:line="2" pos:column="38">Pinba__Request<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">request<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list> <block pos:line="2" pos:column="63">{
  <expr_stmt><expr><name><name pos:line="3" pos:column="3">node<pos:position pos:line="3" pos:column="7"/></name><operator pos:line="3" pos:column="7">-&gt;<pos:position pos:line="3" pos:column="12"/></operator><name pos:line="3" pos:column="9">req_count<pos:position pos:line="3" pos:column="18"/></name></name><operator pos:line="3" pos:column="18">++<pos:position pos:line="3" pos:column="20"/></operator></expr>;<pos:position pos:line="3" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">float_counter_add<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><operator pos:line="5" pos:column="21">&amp;<pos:position pos:line="5" pos:column="26"/></operator><name><name pos:line="5" pos:column="22">node<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">req_time<pos:position pos:line="5" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="38">request<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">-&gt;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="47">request_time<pos:position pos:line="5" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">float_counter_add<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><operator pos:line="6" pos:column="21">&amp;<pos:position pos:line="6" pos:column="26"/></operator><name><name pos:line="6" pos:column="22">node<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">ru_utime<pos:position pos:line="6" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="38">request<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">-&gt;<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="47">ru_utime<pos:position pos:line="6" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">float_counter_add<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><operator pos:line="7" pos:column="21">&amp;<pos:position pos:line="7" pos:column="26"/></operator><name><name pos:line="7" pos:column="22">node<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">ru_stime<pos:position pos:line="7" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="38">request<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">-&gt;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="47">ru_stime<pos:position pos:line="7" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="57"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="9" pos:column="3">node<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">doc_size<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">+=<pos:position pos:line="9" pos:column="20"/></operator> <name><name pos:line="9" pos:column="21">request<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">document_size<pos:position pos:line="9" pos:column="43"/></name></name></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">isnan<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name><name pos:line="11" pos:column="13">node<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">mem_peak<pos:position pos:line="11" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call> <operator pos:line="11" pos:column="29">||<pos:position pos:line="11" pos:column="31"/></operator>
      <operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name><name pos:line="12" pos:column="8">node<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">mem_peak<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">&lt;<pos:position pos:line="12" pos:column="27"/></operator> <operator pos:line="12" pos:column="25">(<pos:position pos:line="12" pos:column="26"/></operator><operator pos:line="12" pos:column="26">(<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">gauge_t<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">)<pos:position pos:line="12" pos:column="35"/></operator><name><name pos:line="12" pos:column="35">request<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">memory_peak<pos:position pos:line="12" pos:column="55"/></name></name><operator pos:line="12" pos:column="55">)<pos:position pos:line="12" pos:column="56"/></operator><operator pos:line="12" pos:column="56">)<pos:position pos:line="12" pos:column="57"/></operator></expr>)<pos:position pos:line="12" pos:column="58"/></condition><then pos:line="12" pos:column="58">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="5">node<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">mem_peak<pos:position pos:line="13" pos:column="19"/></name></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <operator pos:line="13" pos:column="22">(<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">gauge_t<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">)<pos:position pos:line="13" pos:column="31"/></operator><name><name pos:line="13" pos:column="31">request<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">-&gt;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="40">memory_peak<pos:position pos:line="13" pos:column="51"/></name></name></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt></block></then></if>

}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_226_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fbh_free_tree<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">c_avl_tree_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">tree<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list> <comment type="block" pos:line="1" pos:column="48">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">tree<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">==<pos:position pos:line="5" pos:column="14"/></operator> <name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20">
    <block type="pseudo"><return pos:line="6" pos:column="5">return;<pos:position pos:line="6" pos:column="12"/></return></block></then></if>

  <while pos:line="8" pos:column="3">while <condition pos:line="8" pos:column="9">(<expr><literal type="number" pos:line="8" pos:column="10">42<pos:position pos:line="8" pos:column="12"/></literal></expr>)<pos:position pos:line="8" pos:column="13"/></condition>
  <block pos:line="9" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">key<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><name pos:line="10" pos:column="17">NULL<pos:position pos:line="10" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">value<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><name pos:line="11" pos:column="19">NULL<pos:position pos:line="11" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">status<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">c_avl_pick<pos:position pos:line="13" pos:column="24"/></name> <argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">tree<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="32">(<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">void<pos:position pos:line="13" pos:column="37"/></name> <operator pos:line="13" pos:column="38">*<pos:position pos:line="13" pos:column="39"/></operator><operator pos:line="13" pos:column="39">)<pos:position pos:line="13" pos:column="40"/></operator> <operator pos:line="13" pos:column="41">&amp;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="42">key<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="47">(<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">void<pos:position pos:line="13" pos:column="52"/></name> <operator pos:line="13" pos:column="53">*<pos:position pos:line="13" pos:column="54"/></operator><operator pos:line="13" pos:column="54">)<pos:position pos:line="13" pos:column="55"/></operator> <operator pos:line="13" pos:column="56">&amp;<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="57">value<pos:position pos:line="13" pos:column="62"/></name></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">status<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">!=<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21">
      <block type="pseudo"><break pos:line="15" pos:column="7">break;<pos:position pos:line="15" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">free<pos:position pos:line="17" pos:column="9"/></name> <argument_list pos:line="17" pos:column="10">(<argument><expr><name pos:line="17" pos:column="11">key<pos:position pos:line="17" pos:column="14"/></name></expr></argument>)<pos:position pos:line="17" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">free<pos:position pos:line="18" pos:column="9"/></name> <argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">value<pos:position pos:line="18" pos:column="16"/></name></expr></argument>)<pos:position pos:line="18" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">c_avl_destroy<pos:position pos:line="21" pos:column="16"/></name> <argument_list pos:line="21" pos:column="17">(<argument><expr><name pos:line="21" pos:column="18">tree<pos:position pos:line="21" pos:column="22"/></name></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_492_collectd-4.5.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">oconfig_item2hv<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">pTHX_<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">oconfig_item_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ci<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">HV<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">hash<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">AV<pos:position pos:line="5" pos:column="11"/></name> <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type><name pos:line="5" pos:column="13">values<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">AV<pos:position pos:line="6" pos:column="11"/></name> <modifier pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></modifier></type><name pos:line="6" pos:column="13">children<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">NULL<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <call><name pos:line="8" pos:column="21">hv_store<pos:position pos:line="8" pos:column="29"/></name> <argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">hash<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="37">"key"<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="44">3<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="47">newSVpv<pos:position pos:line="8" pos:column="54"/></name> <argument_list pos:line="8" pos:column="55">(<argument><expr><name><name pos:line="8" pos:column="56">ci<pos:position pos:line="8" pos:column="58"/></name><operator pos:line="8" pos:column="58">-&gt;<pos:position pos:line="8" pos:column="63"/></operator><name pos:line="8" pos:column="60">key<pos:position pos:line="8" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="65">0<pos:position pos:line="8" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="69">0<pos:position pos:line="8" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="72"/></condition><then pos:line="8" pos:column="72">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">-<pos:position pos:line="9" pos:column="25"/></operator><literal type="number" pos:line="9" pos:column="25">1<pos:position pos:line="9" pos:column="26"/></literal></expr>;<pos:position pos:line="9" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="11" pos:column="9">values<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">newAV<pos:position pos:line="11" pos:column="23"/></name> <argument_list pos:line="11" pos:column="24">()<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal> <operator pos:line="12" pos:column="15">&lt;<pos:position pos:line="12" pos:column="19"/></operator> <name><name pos:line="12" pos:column="17">ci<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">values_num<pos:position pos:line="12" pos:column="31"/></name></name></expr>)<pos:position pos:line="12" pos:column="32"/></condition><then pos:line="12" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">av_extend<pos:position pos:line="13" pos:column="26"/></name> <argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">values<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="36">ci<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">-&gt;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="40">values_num<pos:position pos:line="13" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">NULL<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">==<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">hv_store<pos:position pos:line="15" pos:column="29"/></name> <argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">hash<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="37">"values"<pos:position pos:line="15" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="47">6<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="50">newRV_noinc<pos:position pos:line="15" pos:column="61"/></name> <argument_list pos:line="15" pos:column="62">(<argument><expr><operator pos:line="15" pos:column="63">(<pos:position pos:line="15" pos:column="64"/></operator><name pos:line="15" pos:column="64">SV<pos:position pos:line="15" pos:column="66"/></name> <operator pos:line="15" pos:column="67">*<pos:position pos:line="15" pos:column="68"/></operator><operator pos:line="15" pos:column="68">)<pos:position pos:line="15" pos:column="69"/></operator><name pos:line="15" pos:column="69">values<pos:position pos:line="15" pos:column="75"/></name></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="78">0<pos:position pos:line="15" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="81"/></condition><then pos:line="15" pos:column="81"> <block pos:line="15" pos:column="82">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">av_clear<pos:position pos:line="16" pos:column="25"/></name> <argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">values<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">av_undef<pos:position pos:line="17" pos:column="25"/></name> <argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">values<pos:position pos:line="17" pos:column="33"/></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><operator pos:line="18" pos:column="24">-<pos:position pos:line="18" pos:column="25"/></operator><literal type="number" pos:line="18" pos:column="25">1<pos:position pos:line="18" pos:column="26"/></literal></expr>;<pos:position pos:line="18" pos:column="27"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">i<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></init> <condition><expr><name pos:line="21" pos:column="21">i<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&lt;<pos:position pos:line="21" pos:column="27"/></operator> <name><name pos:line="21" pos:column="25">ci<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">-&gt;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="29">values_num<pos:position pos:line="21" pos:column="39"/></name></name></expr>;<pos:position pos:line="21" pos:column="40"/></condition> <incr><expr><operator pos:line="21" pos:column="41">++<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="43">i<pos:position pos:line="21" pos:column="44"/></name></expr></incr>)<pos:position pos:line="21" pos:column="45"/></control> <block pos:line="21" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">SV<pos:position pos:line="22" pos:column="19"/></name> <modifier pos:line="22" pos:column="20">*<pos:position pos:line="22" pos:column="21"/></modifier></type><name pos:line="22" pos:column="21">value<pos:position pos:line="22" pos:column="26"/></name></decl>;<pos:position pos:line="22" pos:column="27"/></decl_stmt>

		<switch pos:line="24" pos:column="17">switch <condition pos:line="24" pos:column="24">(<expr><name><name pos:line="24" pos:column="25">ci<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">values<pos:position pos:line="24" pos:column="35"/></name><index pos:line="24" pos:column="35">[<expr><name pos:line="24" pos:column="36">i<pos:position pos:line="24" pos:column="37"/></name></expr>]<pos:position pos:line="24" pos:column="38"/></index></name><operator pos:line="24" pos:column="38">.<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="39">type<pos:position pos:line="24" pos:column="43"/></name></expr>)<pos:position pos:line="24" pos:column="44"/></condition> <block pos:line="24" pos:column="45">{
			<case pos:line="25" pos:column="25">case <expr><name pos:line="25" pos:column="30">OCONFIG_TYPE_STRING<pos:position pos:line="25" pos:column="49"/></name></expr>:<pos:position pos:line="25" pos:column="50"/></case>
				<expr_stmt><expr><name pos:line="26" pos:column="33">value<pos:position pos:line="26" pos:column="38"/></name> <operator pos:line="26" pos:column="39">=<pos:position pos:line="26" pos:column="40"/></operator> <call><name pos:line="26" pos:column="41">newSVpv<pos:position pos:line="26" pos:column="48"/></name> <argument_list pos:line="26" pos:column="49">(<argument><expr><name><name pos:line="26" pos:column="50">ci<pos:position pos:line="26" pos:column="52"/></name><operator pos:line="26" pos:column="52">-&gt;<pos:position pos:line="26" pos:column="57"/></operator><name pos:line="26" pos:column="54">values<pos:position pos:line="26" pos:column="60"/></name><index pos:line="26" pos:column="60">[<expr><name pos:line="26" pos:column="61">i<pos:position pos:line="26" pos:column="62"/></name></expr>]<pos:position pos:line="26" pos:column="63"/></index></name><operator pos:line="26" pos:column="63">.<pos:position pos:line="26" pos:column="64"/></operator><name><name pos:line="26" pos:column="64">value<pos:position pos:line="26" pos:column="69"/></name><operator pos:line="26" pos:column="69">.<pos:position pos:line="26" pos:column="70"/></operator><name pos:line="26" pos:column="70">string<pos:position pos:line="26" pos:column="76"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="78">0<pos:position pos:line="26" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="81"/></expr_stmt>
				<break pos:line="27" pos:column="33">break;<pos:position pos:line="27" pos:column="39"/></break>
			<case pos:line="28" pos:column="25">case <expr><name pos:line="28" pos:column="30">OCONFIG_TYPE_NUMBER<pos:position pos:line="28" pos:column="49"/></name></expr>:<pos:position pos:line="28" pos:column="50"/></case>
				<expr_stmt><expr><name pos:line="29" pos:column="33">value<pos:position pos:line="29" pos:column="38"/></name> <operator pos:line="29" pos:column="39">=<pos:position pos:line="29" pos:column="40"/></operator> <call><name pos:line="29" pos:column="41">newSVnv<pos:position pos:line="29" pos:column="48"/></name> <argument_list pos:line="29" pos:column="49">(<argument><expr><operator pos:line="29" pos:column="50">(<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="51">NV<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">)<pos:position pos:line="29" pos:column="54"/></operator><name><name pos:line="29" pos:column="54">ci<pos:position pos:line="29" pos:column="56"/></name><operator pos:line="29" pos:column="56">-&gt;<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="58">values<pos:position pos:line="29" pos:column="64"/></name><index pos:line="29" pos:column="64">[<expr><name pos:line="29" pos:column="65">i<pos:position pos:line="29" pos:column="66"/></name></expr>]<pos:position pos:line="29" pos:column="67"/></index></name><operator pos:line="29" pos:column="67">.<pos:position pos:line="29" pos:column="68"/></operator><name><name pos:line="29" pos:column="68">value<pos:position pos:line="29" pos:column="73"/></name><operator pos:line="29" pos:column="73">.<pos:position pos:line="29" pos:column="74"/></operator><name pos:line="29" pos:column="74">number<pos:position pos:line="29" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="82"/></expr_stmt>
				<break pos:line="30" pos:column="33">break;<pos:position pos:line="30" pos:column="39"/></break>
			<case pos:line="31" pos:column="25">case <expr><name pos:line="31" pos:column="30">OCONFIG_TYPE_BOOLEAN<pos:position pos:line="31" pos:column="50"/></name></expr>:<pos:position pos:line="31" pos:column="51"/></case>
				<expr_stmt><expr><name pos:line="32" pos:column="33">value<pos:position pos:line="32" pos:column="38"/></name> <operator pos:line="32" pos:column="39">=<pos:position pos:line="32" pos:column="40"/></operator> <ternary><condition><expr><name><name pos:line="32" pos:column="41">ci<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">-&gt;<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="45">values<pos:position pos:line="32" pos:column="51"/></name><index pos:line="32" pos:column="51">[<expr><name pos:line="32" pos:column="52">i<pos:position pos:line="32" pos:column="53"/></name></expr>]<pos:position pos:line="32" pos:column="54"/></index></name><operator pos:line="32" pos:column="54">.<pos:position pos:line="32" pos:column="55"/></operator><name><name pos:line="32" pos:column="55">value<pos:position pos:line="32" pos:column="60"/></name><operator pos:line="32" pos:column="60">.<pos:position pos:line="32" pos:column="61"/></operator><name pos:line="32" pos:column="61">boolean<pos:position pos:line="32" pos:column="68"/></name></name></expr> ?<pos:position pos:line="32" pos:column="70"/></condition><then pos:line="32" pos:column="70"> <expr><operator pos:line="32" pos:column="71">&amp;<pos:position pos:line="32" pos:column="76"/></operator><name pos:line="32" pos:column="72">PL_sv_yes<pos:position pos:line="32" pos:column="81"/></name></expr> <pos:position pos:line="32" pos:column="82"/></then><else pos:line="32" pos:column="82">: <expr><operator pos:line="32" pos:column="84">&amp;<pos:position pos:line="32" pos:column="89"/></operator><name pos:line="32" pos:column="85">PL_sv_no<pos:position pos:line="32" pos:column="93"/></name></expr></else></ternary></expr>;<pos:position pos:line="32" pos:column="94"/></expr_stmt>
				<break pos:line="33" pos:column="33">break;<pos:position pos:line="33" pos:column="39"/></break>
			<default pos:line="34" pos:column="25">default:<pos:position pos:line="34" pos:column="33"/></default>
				<expr_stmt><expr><call><name pos:line="35" pos:column="33">log_err<pos:position pos:line="35" pos:column="40"/></name> <argument_list pos:line="35" pos:column="41">(<argument><expr><literal type="string" pos:line="35" pos:column="42">"oconfig_item2hv: Invalid value type %i."<pos:position pos:line="35" pos:column="83"/></literal></expr></argument>,
						<argument><expr><name><name pos:line="36" pos:column="49">ci<pos:position pos:line="36" pos:column="51"/></name><operator pos:line="36" pos:column="51">-&gt;<pos:position pos:line="36" pos:column="56"/></operator><name pos:line="36" pos:column="53">values<pos:position pos:line="36" pos:column="59"/></name><index pos:line="36" pos:column="59">[<expr><name pos:line="36" pos:column="60">i<pos:position pos:line="36" pos:column="61"/></name></expr>]<pos:position pos:line="36" pos:column="62"/></index></name><operator pos:line="36" pos:column="62">.<pos:position pos:line="36" pos:column="63"/></operator><name pos:line="36" pos:column="63">type<pos:position pos:line="36" pos:column="67"/></name></expr></argument>)<pos:position pos:line="36" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="69"/></expr_stmt>
				<expr_stmt><expr><name pos:line="37" pos:column="33">value<pos:position pos:line="37" pos:column="38"/></name> <operator pos:line="37" pos:column="39">=<pos:position pos:line="37" pos:column="40"/></operator> <operator pos:line="37" pos:column="41">&amp;<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="42">PL_sv_undef<pos:position pos:line="37" pos:column="53"/></name></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></switch>

		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">NULL<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">==<pos:position pos:line="40" pos:column="28"/></operator> <call><name pos:line="40" pos:column="29">av_store<pos:position pos:line="40" pos:column="37"/></name> <argument_list pos:line="40" pos:column="38">(<argument><expr><name pos:line="40" pos:column="39">values<pos:position pos:line="40" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="47">i<pos:position pos:line="40" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="50">value<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="57"/></condition><then pos:line="40" pos:column="57"> <block pos:line="40" pos:column="58">{
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">sv_free<pos:position pos:line="41" pos:column="32"/></name> <argument_list pos:line="41" pos:column="33">(<argument><expr><name pos:line="41" pos:column="34">value<pos:position pos:line="41" pos:column="39"/></name></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>
			<return pos:line="42" pos:column="25">return <expr><operator pos:line="42" pos:column="32">-<pos:position pos:line="42" pos:column="33"/></operator><literal type="number" pos:line="42" pos:column="33">1<pos:position pos:line="42" pos:column="34"/></literal></expr>;<pos:position pos:line="42" pos:column="35"/></return>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>
	}<pos:position pos:line="44" pos:column="10"/></block></for>

	<comment type="block" pos:line="46" pos:column="9">/* ignoring 'parent' member which is uninteresting in this case */</comment>

	<expr_stmt><expr><name pos:line="48" pos:column="9">children<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <call><name pos:line="48" pos:column="20">newAV<pos:position pos:line="48" pos:column="25"/></name> <argument_list pos:line="48" pos:column="26">()<pos:position pos:line="48" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><literal type="number" pos:line="49" pos:column="13">0<pos:position pos:line="49" pos:column="14"/></literal> <operator pos:line="49" pos:column="15">&lt;<pos:position pos:line="49" pos:column="19"/></operator> <name><name pos:line="49" pos:column="17">ci<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">-&gt;<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="21">children_num<pos:position pos:line="49" pos:column="33"/></name></name></expr>)<pos:position pos:line="49" pos:column="34"/></condition><then pos:line="49" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="17">av_extend<pos:position pos:line="50" pos:column="26"/></name> <argument_list pos:line="50" pos:column="27">(<argument><expr><name pos:line="50" pos:column="28">children<pos:position pos:line="50" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="38">ci<pos:position pos:line="50" pos:column="40"/></name><operator pos:line="50" pos:column="40">-&gt;<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="42">children_num<pos:position pos:line="50" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="56"/></expr_stmt></block></then></if>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">NULL<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">==<pos:position pos:line="52" pos:column="20"/></operator> <call><name pos:line="52" pos:column="21">hv_store<pos:position pos:line="52" pos:column="29"/></name> <argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">hash<pos:position pos:line="52" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="37">"children"<pos:position pos:line="52" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="49">8<pos:position pos:line="52" pos:column="50"/></literal></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="52">newRV_noinc<pos:position pos:line="52" pos:column="63"/></name> <argument_list pos:line="52" pos:column="64">(<argument><expr><operator pos:line="52" pos:column="65">(<pos:position pos:line="52" pos:column="66"/></operator><name pos:line="52" pos:column="66">SV<pos:position pos:line="52" pos:column="68"/></name> <operator pos:line="52" pos:column="69">*<pos:position pos:line="52" pos:column="70"/></operator><operator pos:line="52" pos:column="70">)<pos:position pos:line="52" pos:column="71"/></operator><name pos:line="52" pos:column="71">children<pos:position pos:line="52" pos:column="79"/></name></expr></argument>)<pos:position pos:line="52" pos:column="80"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="82">0<pos:position pos:line="52" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="85"/></condition><then pos:line="52" pos:column="85"> <block pos:line="52" pos:column="86">{
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">av_clear<pos:position pos:line="53" pos:column="25"/></name> <argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">children<pos:position pos:line="53" pos:column="35"/></name></expr></argument>)<pos:position pos:line="53" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">av_undef<pos:position pos:line="54" pos:column="25"/></name> <argument_list pos:line="54" pos:column="26">(<argument><expr><name pos:line="54" pos:column="27">children<pos:position pos:line="54" pos:column="35"/></name></expr></argument>)<pos:position pos:line="54" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="37"/></expr_stmt>
		<return pos:line="55" pos:column="17">return <expr><operator pos:line="55" pos:column="24">-<pos:position pos:line="55" pos:column="25"/></operator><literal type="number" pos:line="55" pos:column="25">1<pos:position pos:line="55" pos:column="26"/></literal></expr>;<pos:position pos:line="55" pos:column="27"/></return>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>

	<for pos:line="58" pos:column="9">for <control pos:line="58" pos:column="13">(<init><expr><name pos:line="58" pos:column="14">i<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <literal type="number" pos:line="58" pos:column="18">0<pos:position pos:line="58" pos:column="19"/></literal></expr>;<pos:position pos:line="58" pos:column="20"/></init> <condition><expr><name pos:line="58" pos:column="21">i<pos:position pos:line="58" pos:column="22"/></name> <operator pos:line="58" pos:column="23">&lt;<pos:position pos:line="58" pos:column="27"/></operator> <name><name pos:line="58" pos:column="25">ci<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">-&gt;<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="29">children_num<pos:position pos:line="58" pos:column="41"/></name></name></expr>;<pos:position pos:line="58" pos:column="42"/></condition> <incr><expr><operator pos:line="58" pos:column="43">++<pos:position pos:line="58" pos:column="45"/></operator><name pos:line="58" pos:column="45">i<pos:position pos:line="58" pos:column="46"/></name></expr></incr>)<pos:position pos:line="58" pos:column="47"/></control> <block pos:line="58" pos:column="48">{
		<decl_stmt><decl><type><name pos:line="59" pos:column="17">HV<pos:position pos:line="59" pos:column="19"/></name> <modifier pos:line="59" pos:column="20">*<pos:position pos:line="59" pos:column="21"/></modifier></type><name pos:line="59" pos:column="21">child<pos:position pos:line="59" pos:column="26"/></name> <init pos:line="59" pos:column="27">= <expr><call><name pos:line="59" pos:column="29">newHV<pos:position pos:line="59" pos:column="34"/></name> <argument_list pos:line="59" pos:column="35">()<pos:position pos:line="59" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="59" pos:column="38"/></decl_stmt>

		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><literal type="number" pos:line="61" pos:column="21">0<pos:position pos:line="61" pos:column="22"/></literal> <operator pos:line="61" pos:column="23">!=<pos:position pos:line="61" pos:column="25"/></operator> <macro><name pos:line="61" pos:column="26">oconfig_item2hv<pos:position pos:line="61" pos:column="41"/></name> <argument_list pos:line="61" pos:column="42">(<argument pos:line="61" pos:column="43">aTHX_ ci-&gt;children + i<pos:position pos:line="61" pos:column="65"/></argument>, <argument pos:line="61" pos:column="67">child<pos:position pos:line="61" pos:column="72"/></argument>)<pos:position pos:line="61" pos:column="73"/></argument_list></macro></expr>)<pos:position pos:line="61" pos:column="74"/></condition><then pos:line="61" pos:column="74"> <block pos:line="61" pos:column="75">{
			<expr_stmt><expr><call><name pos:line="62" pos:column="25">hv_clear<pos:position pos:line="62" pos:column="33"/></name> <argument_list pos:line="62" pos:column="34">(<argument><expr><name pos:line="62" pos:column="35">child<pos:position pos:line="62" pos:column="40"/></name></expr></argument>)<pos:position pos:line="62" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="63" pos:column="25">hv_undef<pos:position pos:line="63" pos:column="33"/></name> <argument_list pos:line="63" pos:column="34">(<argument><expr><name pos:line="63" pos:column="35">child<pos:position pos:line="63" pos:column="40"/></name></expr></argument>)<pos:position pos:line="63" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="42"/></expr_stmt>
			<return pos:line="64" pos:column="25">return <expr><operator pos:line="64" pos:column="32">-<pos:position pos:line="64" pos:column="33"/></operator><literal type="number" pos:line="64" pos:column="33">1<pos:position pos:line="64" pos:column="34"/></literal></expr>;<pos:position pos:line="64" pos:column="35"/></return>
		}<pos:position pos:line="65" pos:column="18"/></block></then></if>

		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name pos:line="67" pos:column="21">NULL<pos:position pos:line="67" pos:column="25"/></name> <operator pos:line="67" pos:column="26">==<pos:position pos:line="67" pos:column="28"/></operator> <call><name pos:line="67" pos:column="29">av_store<pos:position pos:line="67" pos:column="37"/></name> <argument_list pos:line="67" pos:column="38">(<argument><expr><name pos:line="67" pos:column="39">children<pos:position pos:line="67" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="49">i<pos:position pos:line="67" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="52">newRV_noinc<pos:position pos:line="67" pos:column="63"/></name> <argument_list pos:line="67" pos:column="64">(<argument><expr><operator pos:line="67" pos:column="65">(<pos:position pos:line="67" pos:column="66"/></operator><name pos:line="67" pos:column="66">SV<pos:position pos:line="67" pos:column="68"/></name> <operator pos:line="67" pos:column="69">*<pos:position pos:line="67" pos:column="70"/></operator><operator pos:line="67" pos:column="70">)<pos:position pos:line="67" pos:column="71"/></operator><name pos:line="67" pos:column="71">child<pos:position pos:line="67" pos:column="76"/></name></expr></argument>)<pos:position pos:line="67" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="79"/></condition><then pos:line="67" pos:column="79"> <block pos:line="67" pos:column="80">{
			<expr_stmt><expr><call><name pos:line="68" pos:column="25">hv_clear<pos:position pos:line="68" pos:column="33"/></name> <argument_list pos:line="68" pos:column="34">(<argument><expr><name pos:line="68" pos:column="35">child<pos:position pos:line="68" pos:column="40"/></name></expr></argument>)<pos:position pos:line="68" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="69" pos:column="25">hv_undef<pos:position pos:line="69" pos:column="33"/></name> <argument_list pos:line="69" pos:column="34">(<argument><expr><name pos:line="69" pos:column="35">child<pos:position pos:line="69" pos:column="40"/></name></expr></argument>)<pos:position pos:line="69" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt>
			<return pos:line="70" pos:column="25">return <expr><operator pos:line="70" pos:column="32">-<pos:position pos:line="70" pos:column="33"/></operator><literal type="number" pos:line="70" pos:column="33">1<pos:position pos:line="70" pos:column="34"/></literal></expr>;<pos:position pos:line="70" pos:column="35"/></return>
		}<pos:position pos:line="71" pos:column="18"/></block></then></if>
	}<pos:position pos:line="72" pos:column="10"/></block></for>
	<return pos:line="73" pos:column="9">return <expr><literal type="number" pos:line="73" pos:column="16">0<pos:position pos:line="73" pos:column="17"/></literal></expr>;<pos:position pos:line="73" pos:column="18"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

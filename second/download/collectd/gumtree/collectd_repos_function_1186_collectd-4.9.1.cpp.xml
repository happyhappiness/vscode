<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1186_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wh_config_url<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">oconfig_item_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ci<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <comment type="block" pos:line="1" pos:column="47">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
        <decl_stmt><decl><type><name pos:line="3" pos:column="9">wh_callback_t<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">cb<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="4" pos:column="9">user_data_t<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">user_data<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

        <expr_stmt><expr><name pos:line="7" pos:column="9">cb<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <call><name pos:line="7" pos:column="14">malloc<pos:position pos:line="7" pos:column="20"/></name> <argument_list pos:line="7" pos:column="21">(<argument><expr><sizeof pos:line="7" pos:column="22">sizeof <argument_list pos:line="7" pos:column="29">(<argument><expr><operator pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">cb<pos:position pos:line="7" pos:column="33"/></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">cb<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">NULL<pos:position pos:line="8" pos:column="23"/></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24">
        <block pos:line="9" pos:column="9">{
                <expr_stmt><expr><call><name pos:line="10" pos:column="17">ERROR<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><literal type="string" pos:line="10" pos:column="24">"write_http plugin: malloc failed."<pos:position pos:line="10" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>
                <return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></return>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">memset<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">cb<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="24">sizeof <argument_list pos:line="13" pos:column="31">(<argument><expr><operator pos:line="13" pos:column="32">*<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">cb<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">cb<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">location<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">NULL<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">cb<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">user<pos:position pos:line="15" pos:column="17"/></name></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">NULL<pos:position pos:line="15" pos:column="24"/></name></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">cb<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">pass<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">NULL<pos:position pos:line="16" pos:column="24"/></name></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">cb<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">credentials<pos:position pos:line="17" pos:column="24"/></name></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">NULL<pos:position pos:line="17" pos:column="31"/></name></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">cb<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">verify_peer<pos:position pos:line="18" pos:column="24"/></name></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <literal type="number" pos:line="18" pos:column="27">1<pos:position pos:line="18" pos:column="28"/></literal></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">cb<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">verify_host<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <literal type="number" pos:line="19" pos:column="27">1<pos:position pos:line="19" pos:column="28"/></literal></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">cb<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">cacert<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">NULL<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">cb<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">format<pos:position pos:line="21" pos:column="19"/></name></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">WH_FORMAT_COMMAND<pos:position pos:line="21" pos:column="39"/></name></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">cb<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">curl<pos:position pos:line="22" pos:column="17"/></name></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">NULL<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="24" pos:column="9">pthread_mutex_init<pos:position pos:line="24" pos:column="27"/></name> <argument_list pos:line="24" pos:column="28">(<argument><expr><operator pos:line="24" pos:column="29">&amp;<pos:position pos:line="24" pos:column="34"/></operator><name><name pos:line="24" pos:column="30">cb<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">-&gt;<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="34">send_lock<pos:position pos:line="24" pos:column="43"/></name></name></expr></argument>, <comment type="block" pos:line="24" pos:column="45">/* attr = */</comment> <argument><expr><name pos:line="24" pos:column="58">NULL<pos:position pos:line="24" pos:column="62"/></name></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="64"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="26" pos:column="9">config_set_string<pos:position pos:line="26" pos:column="26"/></name> <argument_list pos:line="26" pos:column="27">(<argument><expr><operator pos:line="26" pos:column="28">&amp;<pos:position pos:line="26" pos:column="33"/></operator><name><name pos:line="26" pos:column="29">cb<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">-&gt;<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="33">location<pos:position pos:line="26" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">ci<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">cb<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">location<pos:position pos:line="27" pos:column="25"/></name></name> <operator pos:line="27" pos:column="26">==<pos:position pos:line="27" pos:column="28"/></operator> <name pos:line="27" pos:column="29">NULL<pos:position pos:line="27" pos:column="33"/></name></expr>)<pos:position pos:line="27" pos:column="34"/></condition><then pos:line="27" pos:column="34">
                <block type="pseudo"><return pos:line="28" pos:column="17">return <expr><operator pos:line="28" pos:column="24">(<pos:position pos:line="28" pos:column="25"/></operator><operator pos:line="28" pos:column="25">-<pos:position pos:line="28" pos:column="26"/></operator><literal type="number" pos:line="28" pos:column="26">1<pos:position pos:line="28" pos:column="27"/></literal><operator pos:line="28" pos:column="27">)<pos:position pos:line="28" pos:column="28"/></operator></expr>;<pos:position pos:line="28" pos:column="29"/></return></block></then></if>

        <for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">i<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></init> <condition><expr><name pos:line="30" pos:column="21">i<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">&lt;<pos:position pos:line="30" pos:column="27"/></operator> <name><name pos:line="30" pos:column="25">ci<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">-&gt;<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="29">children_num<pos:position pos:line="30" pos:column="41"/></name></name></expr>;<pos:position pos:line="30" pos:column="42"/></condition> <incr><expr><name pos:line="30" pos:column="43">i<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">++<pos:position pos:line="30" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="47"/></control>
        <block pos:line="31" pos:column="9">{
                <decl_stmt><decl><type><name pos:line="32" pos:column="17">oconfig_item_t<pos:position pos:line="32" pos:column="31"/></name> <modifier pos:line="32" pos:column="32">*<pos:position pos:line="32" pos:column="33"/></modifier></type><name pos:line="32" pos:column="33">child<pos:position pos:line="32" pos:column="38"/></name> <init pos:line="32" pos:column="39">= <expr><name><name pos:line="32" pos:column="41">ci<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">-&gt;<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="45">children<pos:position pos:line="32" pos:column="53"/></name></name> <operator pos:line="32" pos:column="54">+<pos:position pos:line="32" pos:column="55"/></operator> <name pos:line="32" pos:column="56">i<pos:position pos:line="32" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="32" pos:column="58"/></decl_stmt>

                <if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><call><name pos:line="34" pos:column="21">strcasecmp<pos:position pos:line="34" pos:column="31"/></name> <argument_list pos:line="34" pos:column="32">(<argument><expr><literal type="string" pos:line="34" pos:column="33">"User"<pos:position pos:line="34" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="41">child<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">-&gt;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="48">key<pos:position pos:line="34" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call> <operator pos:line="34" pos:column="53">==<pos:position pos:line="34" pos:column="55"/></operator> <literal type="number" pos:line="34" pos:column="56">0<pos:position pos:line="34" pos:column="57"/></literal></expr>)<pos:position pos:line="34" pos:column="58"/></condition><then pos:line="34" pos:column="58">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="25">config_set_string<pos:position pos:line="35" pos:column="42"/></name> <argument_list pos:line="35" pos:column="43">(<argument><expr><operator pos:line="35" pos:column="44">&amp;<pos:position pos:line="35" pos:column="49"/></operator><name><name pos:line="35" pos:column="45">cb<pos:position pos:line="35" pos:column="47"/></name><operator pos:line="35" pos:column="47">-&gt;<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="49">user<pos:position pos:line="35" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="55">child<pos:position pos:line="35" pos:column="60"/></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt></block></then>
                <elseif pos:line="36" pos:column="17">else <if pos:line="36" pos:column="22">if <condition pos:line="36" pos:column="25">(<expr><call><name pos:line="36" pos:column="26">strcasecmp<pos:position pos:line="36" pos:column="36"/></name> <argument_list pos:line="36" pos:column="37">(<argument><expr><literal type="string" pos:line="36" pos:column="38">"Password"<pos:position pos:line="36" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="50">child<pos:position pos:line="36" pos:column="55"/></name><operator pos:line="36" pos:column="55">-&gt;<pos:position pos:line="36" pos:column="60"/></operator><name pos:line="36" pos:column="57">key<pos:position pos:line="36" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></call> <operator pos:line="36" pos:column="62">==<pos:position pos:line="36" pos:column="64"/></operator> <literal type="number" pos:line="36" pos:column="65">0<pos:position pos:line="36" pos:column="66"/></literal></expr>)<pos:position pos:line="36" pos:column="67"/></condition><then pos:line="36" pos:column="67">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">config_set_string<pos:position pos:line="37" pos:column="42"/></name> <argument_list pos:line="37" pos:column="43">(<argument><expr><operator pos:line="37" pos:column="44">&amp;<pos:position pos:line="37" pos:column="49"/></operator><name><name pos:line="37" pos:column="45">cb<pos:position pos:line="37" pos:column="47"/></name><operator pos:line="37" pos:column="47">-&gt;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="49">pass<pos:position pos:line="37" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="55">child<pos:position pos:line="37" pos:column="60"/></name></expr></argument>)<pos:position pos:line="37" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="62"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="38" pos:column="17">else <if pos:line="38" pos:column="22">if <condition pos:line="38" pos:column="25">(<expr><call><name pos:line="38" pos:column="26">strcasecmp<pos:position pos:line="38" pos:column="36"/></name> <argument_list pos:line="38" pos:column="37">(<argument><expr><literal type="string" pos:line="38" pos:column="38">"VerifyPeer"<pos:position pos:line="38" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="52">child<pos:position pos:line="38" pos:column="57"/></name><operator pos:line="38" pos:column="57">-&gt;<pos:position pos:line="38" pos:column="62"/></operator><name pos:line="38" pos:column="59">key<pos:position pos:line="38" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="63"/></argument_list></call> <operator pos:line="38" pos:column="64">==<pos:position pos:line="38" pos:column="66"/></operator> <literal type="number" pos:line="38" pos:column="67">0<pos:position pos:line="38" pos:column="68"/></literal></expr>)<pos:position pos:line="38" pos:column="69"/></condition><then pos:line="38" pos:column="69">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">config_set_boolean<pos:position pos:line="39" pos:column="43"/></name> <argument_list pos:line="39" pos:column="44">(<argument><expr><operator pos:line="39" pos:column="45">&amp;<pos:position pos:line="39" pos:column="50"/></operator><name><name pos:line="39" pos:column="46">cb<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">verify_peer<pos:position pos:line="39" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="63">child<pos:position pos:line="39" pos:column="68"/></name></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="70"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="40" pos:column="17">else <if pos:line="40" pos:column="22">if <condition pos:line="40" pos:column="25">(<expr><call><name pos:line="40" pos:column="26">strcasecmp<pos:position pos:line="40" pos:column="36"/></name> <argument_list pos:line="40" pos:column="37">(<argument><expr><literal type="string" pos:line="40" pos:column="38">"VerifyHost"<pos:position pos:line="40" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="52">child<pos:position pos:line="40" pos:column="57"/></name><operator pos:line="40" pos:column="57">-&gt;<pos:position pos:line="40" pos:column="62"/></operator><name pos:line="40" pos:column="59">key<pos:position pos:line="40" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="63"/></argument_list></call> <operator pos:line="40" pos:column="64">==<pos:position pos:line="40" pos:column="66"/></operator> <literal type="number" pos:line="40" pos:column="67">0<pos:position pos:line="40" pos:column="68"/></literal></expr>)<pos:position pos:line="40" pos:column="69"/></condition><then pos:line="40" pos:column="69">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="25">config_set_boolean<pos:position pos:line="41" pos:column="43"/></name> <argument_list pos:line="41" pos:column="44">(<argument><expr><operator pos:line="41" pos:column="45">&amp;<pos:position pos:line="41" pos:column="50"/></operator><name><name pos:line="41" pos:column="46">cb<pos:position pos:line="41" pos:column="48"/></name><operator pos:line="41" pos:column="48">-&gt;<pos:position pos:line="41" pos:column="53"/></operator><name pos:line="41" pos:column="50">verify_host<pos:position pos:line="41" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="63">child<pos:position pos:line="41" pos:column="68"/></name></expr></argument>)<pos:position pos:line="41" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="70"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="42" pos:column="17">else <if pos:line="42" pos:column="22">if <condition pos:line="42" pos:column="25">(<expr><call><name pos:line="42" pos:column="26">strcasecmp<pos:position pos:line="42" pos:column="36"/></name> <argument_list pos:line="42" pos:column="37">(<argument><expr><literal type="string" pos:line="42" pos:column="38">"CACert"<pos:position pos:line="42" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="48">child<pos:position pos:line="42" pos:column="53"/></name><operator pos:line="42" pos:column="53">-&gt;<pos:position pos:line="42" pos:column="58"/></operator><name pos:line="42" pos:column="55">key<pos:position pos:line="42" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="59"/></argument_list></call> <operator pos:line="42" pos:column="60">==<pos:position pos:line="42" pos:column="62"/></operator> <literal type="number" pos:line="42" pos:column="63">0<pos:position pos:line="42" pos:column="64"/></literal></expr>)<pos:position pos:line="42" pos:column="65"/></condition><then pos:line="42" pos:column="65">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="25">config_set_string<pos:position pos:line="43" pos:column="42"/></name> <argument_list pos:line="43" pos:column="43">(<argument><expr><operator pos:line="43" pos:column="44">&amp;<pos:position pos:line="43" pos:column="49"/></operator><name><name pos:line="43" pos:column="45">cb<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">-&gt;<pos:position pos:line="43" pos:column="52"/></operator><name pos:line="43" pos:column="49">cacert<pos:position pos:line="43" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="57">child<pos:position pos:line="43" pos:column="62"/></name></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="64"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="44" pos:column="17">else <if pos:line="44" pos:column="22">if <condition pos:line="44" pos:column="25">(<expr><call><name pos:line="44" pos:column="26">strcasecmp<pos:position pos:line="44" pos:column="36"/></name> <argument_list pos:line="44" pos:column="37">(<argument><expr><literal type="string" pos:line="44" pos:column="38">"Format"<pos:position pos:line="44" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="48">child<pos:position pos:line="44" pos:column="53"/></name><operator pos:line="44" pos:column="53">-&gt;<pos:position pos:line="44" pos:column="58"/></operator><name pos:line="44" pos:column="55">key<pos:position pos:line="44" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call> <operator pos:line="44" pos:column="60">==<pos:position pos:line="44" pos:column="62"/></operator> <literal type="number" pos:line="44" pos:column="63">0<pos:position pos:line="44" pos:column="64"/></literal></expr>)<pos:position pos:line="44" pos:column="65"/></condition><then pos:line="44" pos:column="65">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="25">config_set_format<pos:position pos:line="45" pos:column="42"/></name> <argument_list pos:line="45" pos:column="43">(<argument><expr><name pos:line="45" pos:column="44">cb<pos:position pos:line="45" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="48">child<pos:position pos:line="45" pos:column="53"/></name></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="55"/></expr_stmt></block></then></if></elseif>
                <else pos:line="46" pos:column="17">else
                <block pos:line="47" pos:column="17">{
                        <expr_stmt><expr><call><name pos:line="48" pos:column="25">ERROR<pos:position pos:line="48" pos:column="30"/></name> <argument_list pos:line="48" pos:column="31">(<argument><expr><literal type="string" pos:line="48" pos:column="32">"write_http plugin: Invalid configuration "<pos:position pos:line="48" pos:column="75"/></literal>
                                        <literal type="string" pos:line="49" pos:column="41">"option: %s."<pos:position pos:line="49" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="56">child<pos:position pos:line="49" pos:column="61"/></name><operator pos:line="49" pos:column="61">-&gt;<pos:position pos:line="49" pos:column="66"/></operator><name pos:line="49" pos:column="63">key<pos:position pos:line="49" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="68"/></expr_stmt>
                }<pos:position pos:line="50" pos:column="18"/></block></else></if>
        }<pos:position pos:line="51" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="53" pos:column="9">DEBUG<pos:position pos:line="53" pos:column="14"/></name> <argument_list pos:line="53" pos:column="15">(<argument><expr><literal type="string" pos:line="53" pos:column="16">"write_http: Registering write callback with URL %s"<pos:position pos:line="53" pos:column="68"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="54" pos:column="25">cb<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">-&gt;<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="29">location<pos:position pos:line="54" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="56" pos:column="9">memset<pos:position pos:line="56" pos:column="15"/></name> <argument_list pos:line="56" pos:column="16">(<argument><expr><operator pos:line="56" pos:column="17">&amp;<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="18">user_data<pos:position pos:line="56" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="29">0<pos:position pos:line="56" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="32">sizeof <argument_list pos:line="56" pos:column="39">(<argument><expr><name pos:line="56" pos:column="40">user_data<pos:position pos:line="56" pos:column="49"/></name></expr></argument>)<pos:position pos:line="56" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="56" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="57" pos:column="9">user_data<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">.<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="19">data<pos:position pos:line="57" pos:column="23"/></name></name> <operator pos:line="57" pos:column="24">=<pos:position pos:line="57" pos:column="25"/></operator> <name pos:line="57" pos:column="26">cb<pos:position pos:line="57" pos:column="28"/></name></expr>;<pos:position pos:line="57" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="58" pos:column="9">user_data<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">.<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="19">free_func<pos:position pos:line="58" pos:column="28"/></name></name> <operator pos:line="58" pos:column="29">=<pos:position pos:line="58" pos:column="30"/></operator> <name pos:line="58" pos:column="31">NULL<pos:position pos:line="58" pos:column="35"/></name></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">plugin_register_flush<pos:position pos:line="59" pos:column="30"/></name> <argument_list pos:line="59" pos:column="31">(<argument><expr><literal type="string" pos:line="59" pos:column="32">"write_http"<pos:position pos:line="59" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="46">wh_flush<pos:position pos:line="59" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="56">&amp;<pos:position pos:line="59" pos:column="61"/></operator><name pos:line="59" pos:column="57">user_data<pos:position pos:line="59" pos:column="66"/></name></expr></argument>)<pos:position pos:line="59" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="68"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="61" pos:column="9">user_data<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">.<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="19">free_func<pos:position pos:line="61" pos:column="28"/></name></name> <operator pos:line="61" pos:column="29">=<pos:position pos:line="61" pos:column="30"/></operator> <name pos:line="61" pos:column="31">wh_callback_free<pos:position pos:line="61" pos:column="47"/></name></expr>;<pos:position pos:line="61" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">plugin_register_write<pos:position pos:line="62" pos:column="30"/></name> <argument_list pos:line="62" pos:column="31">(<argument><expr><literal type="string" pos:line="62" pos:column="32">"write_http"<pos:position pos:line="62" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="46">wh_write<pos:position pos:line="62" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="56">&amp;<pos:position pos:line="62" pos:column="61"/></operator><name pos:line="62" pos:column="57">user_data<pos:position pos:line="62" pos:column="66"/></name></expr></argument>)<pos:position pos:line="62" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="68"/></expr_stmt>

        <return pos:line="64" pos:column="9">return <expr><operator pos:line="64" pos:column="16">(<pos:position pos:line="64" pos:column="17"/></operator><literal type="number" pos:line="64" pos:column="17">0<pos:position pos:line="64" pos:column="18"/></literal><operator pos:line="64" pos:column="18">)<pos:position pos:line="64" pos:column="19"/></operator></expr>;<pos:position pos:line="64" pos:column="20"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

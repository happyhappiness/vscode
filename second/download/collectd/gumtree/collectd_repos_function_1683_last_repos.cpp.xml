<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1683_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">snmp_agent_table_oid_handler<pos:position pos:line="2" pos:column="29"/></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name><name pos:line="2" pos:column="30">struct<pos:position pos:line="2" pos:column="36"/></name> <name pos:line="2" pos:column="37">netsnmp_mib_handler_s<pos:position pos:line="2" pos:column="58"/></name></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">handler<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                             <parameter><decl><type><name><name pos:line="3" pos:column="30">struct<pos:position pos:line="3" pos:column="36"/></name> <name pos:line="3" pos:column="37">netsnmp_handler_registration_s<pos:position pos:line="3" pos:column="67"/></name></name> <modifier pos:line="3" pos:column="68">*<pos:position pos:line="3" pos:column="69"/></modifier></type><name pos:line="3" pos:column="69">reginfo<pos:position pos:line="3" pos:column="76"/></name></decl></parameter>,
                             <parameter><decl><type><name><name pos:line="4" pos:column="30">struct<pos:position pos:line="4" pos:column="36"/></name> <name pos:line="4" pos:column="37">netsnmp_agent_request_info_s<pos:position pos:line="4" pos:column="65"/></name></name> <modifier pos:line="4" pos:column="66">*<pos:position pos:line="4" pos:column="67"/></modifier></type><name pos:line="4" pos:column="67">reqinfo<pos:position pos:line="4" pos:column="74"/></name></decl></parameter>,
                             <parameter><decl><type><name><name pos:line="5" pos:column="30">struct<pos:position pos:line="5" pos:column="36"/></name> <name pos:line="5" pos:column="37">netsnmp_request_info_s<pos:position pos:line="5" pos:column="59"/></name></name> <modifier pos:line="5" pos:column="60">*<pos:position pos:line="5" pos:column="61"/></modifier></type><name pos:line="5" pos:column="61">requests<pos:position pos:line="5" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="70"/></parameter_list> <block pos:line="5" pos:column="71">{

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">reqinfo<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">mode<pos:position pos:line="7" pos:column="20"/></name></name> <operator pos:line="7" pos:column="21">!=<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">MODE_GET<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">&amp;&amp;<pos:position pos:line="7" pos:column="43"/></operator> <name><name pos:line="7" pos:column="36">reqinfo<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">mode<pos:position pos:line="7" pos:column="49"/></name></name> <operator pos:line="7" pos:column="50">!=<pos:position pos:line="7" pos:column="52"/></operator> <name pos:line="7" pos:column="53">MODE_GETNEXT<pos:position pos:line="7" pos:column="65"/></name></expr>)<pos:position pos:line="7" pos:column="66"/></condition><then pos:line="7" pos:column="66"> <block pos:line="7" pos:column="67">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">DEBUG<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><name pos:line="8" pos:column="11">PLUGIN_NAME<pos:position pos:line="8" pos:column="22"/></name> <literal type="string" pos:line="8" pos:column="23">": Not supported request mode (%d)"<pos:position pos:line="8" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="60">reqinfo<pos:position pos:line="8" pos:column="67"/></name><operator pos:line="8" pos:column="67">-&gt;<pos:position pos:line="8" pos:column="72"/></operator><name pos:line="8" pos:column="69">mode<pos:position pos:line="8" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="75"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">SNMP_ERR_NOERROR<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">pthread_mutex_lock<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><operator pos:line="12" pos:column="22">&amp;<pos:position pos:line="12" pos:column="27"/></operator><name><name pos:line="12" pos:column="23">g_agent<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">lock<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">oid_t<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">oid<pos:position pos:line="14" pos:column="12"/></name></decl>;<pos:position pos:line="14" pos:column="13"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">memcpy<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><name><name pos:line="15" pos:column="10">oid<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">.<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">oid<pos:position pos:line="15" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="19">requests<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">requestvb<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">name<pos:position pos:line="15" pos:column="44"/></name></name></expr></argument>,
         <argument><expr><sizeof pos:line="16" pos:column="10">sizeof<argument_list pos:line="16" pos:column="16">(<argument><expr><name><name pos:line="16" pos:column="17">oid<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">oid<pos:position pos:line="16" pos:column="24"/></name><index pos:line="16" pos:column="24">[<expr><literal type="number" pos:line="16" pos:column="25">0<pos:position pos:line="16" pos:column="26"/></literal></expr>]<pos:position pos:line="16" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="16" pos:column="28"/></argument_list></sizeof> <operator pos:line="16" pos:column="29">*<pos:position pos:line="16" pos:column="30"/></operator> <name><name pos:line="16" pos:column="31">requests<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">requestvb<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">name_length<pos:position pos:line="16" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">oid<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">.<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">oid_len<pos:position pos:line="17" pos:column="14"/></name></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <name><name pos:line="17" pos:column="17">requests<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">requestvb<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">name_length<pos:position pos:line="17" pos:column="49"/></name></name></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>

<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">COLLECT_DEBUG<pos:position pos:line="19" pos:column="18"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">char<pos:position pos:line="20" pos:column="7"/></name></type> <name><name pos:line="20" pos:column="8">oid_str<pos:position pos:line="20" pos:column="15"/></name><index pos:line="20" pos:column="15">[<expr><name pos:line="20" pos:column="16">DATA_MAX_NAME_LEN<pos:position pos:line="20" pos:column="33"/></name></expr>]<pos:position pos:line="20" pos:column="34"/></index></name></decl>;<pos:position pos:line="20" pos:column="35"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">snmp_agent_oid_to_string<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">oid_str<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="37">sizeof<argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">oid_str<pos:position pos:line="21" pos:column="51"/></name></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="21" pos:column="54">&amp;<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="55">oid<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">DEBUG<pos:position pos:line="22" pos:column="8"/></name><argument_list pos:line="22" pos:column="8">(<argument><expr><name pos:line="22" pos:column="9">PLUGIN_NAME<pos:position pos:line="22" pos:column="20"/></name> <literal type="string" pos:line="22" pos:column="21">": Get request received for table OID '%s'"<pos:position pos:line="22" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="66">oid_str<pos:position pos:line="22" pos:column="73"/></name></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="75"/></expr_stmt>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>

  <for pos:line="25" pos:column="3">for <control pos:line="25" pos:column="7">(<init><decl><type><name pos:line="25" pos:column="8">llentry_t<pos:position pos:line="25" pos:column="17"/></name> <modifier pos:line="25" pos:column="18">*<pos:position pos:line="25" pos:column="19"/></modifier></type><name pos:line="25" pos:column="19">te<pos:position pos:line="25" pos:column="21"/></name> <init pos:line="25" pos:column="22">= <expr><call><name pos:line="25" pos:column="24">llist_head<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name><name pos:line="25" pos:column="35">g_agent<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">tables<pos:position pos:line="25" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="52"/></init> <condition><expr><name pos:line="25" pos:column="53">te<pos:position pos:line="25" pos:column="55"/></name> <operator pos:line="25" pos:column="56">!=<pos:position pos:line="25" pos:column="58"/></operator> <name pos:line="25" pos:column="59">NULL<pos:position pos:line="25" pos:column="63"/></name></expr>;<pos:position pos:line="25" pos:column="64"/></condition> <incr><expr><name pos:line="25" pos:column="65">te<pos:position pos:line="25" pos:column="67"/></name> <operator pos:line="25" pos:column="68">=<pos:position pos:line="25" pos:column="69"/></operator> <name><name pos:line="25" pos:column="70">te<pos:position pos:line="25" pos:column="72"/></name><operator pos:line="25" pos:column="72">-&gt;<pos:position pos:line="25" pos:column="77"/></operator><name pos:line="25" pos:column="74">next<pos:position pos:line="25" pos:column="78"/></name></name></expr></incr>)<pos:position pos:line="25" pos:column="79"/></control> <block pos:line="25" pos:column="80">{
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">table_definition_t<pos:position pos:line="26" pos:column="23"/></name> <modifier pos:line="26" pos:column="24">*<pos:position pos:line="26" pos:column="25"/></modifier></type><name pos:line="26" pos:column="25">td<pos:position pos:line="26" pos:column="27"/></name> <init pos:line="26" pos:column="28">= <expr><name><name pos:line="26" pos:column="30">te<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">-&gt;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="34">value<pos:position pos:line="26" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="26" pos:column="40"/></decl_stmt>

    <for pos:line="28" pos:column="5">for <control pos:line="28" pos:column="9">(<init><decl><type><name pos:line="28" pos:column="10">llentry_t<pos:position pos:line="28" pos:column="19"/></name> <modifier pos:line="28" pos:column="20">*<pos:position pos:line="28" pos:column="21"/></modifier></type><name pos:line="28" pos:column="21">de<pos:position pos:line="28" pos:column="23"/></name> <init pos:line="28" pos:column="24">= <expr><call><name pos:line="28" pos:column="26">llist_head<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(<argument><expr><name><name pos:line="28" pos:column="37">td<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">columns<pos:position pos:line="28" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="50"/></init> <condition><expr><name pos:line="28" pos:column="51">de<pos:position pos:line="28" pos:column="53"/></name> <operator pos:line="28" pos:column="54">!=<pos:position pos:line="28" pos:column="56"/></operator> <name pos:line="28" pos:column="57">NULL<pos:position pos:line="28" pos:column="61"/></name></expr>;<pos:position pos:line="28" pos:column="62"/></condition> <incr><expr><name pos:line="28" pos:column="63">de<pos:position pos:line="28" pos:column="65"/></name> <operator pos:line="28" pos:column="66">=<pos:position pos:line="28" pos:column="67"/></operator> <name><name pos:line="28" pos:column="68">de<pos:position pos:line="28" pos:column="70"/></name><operator pos:line="28" pos:column="70">-&gt;<pos:position pos:line="28" pos:column="75"/></operator><name pos:line="28" pos:column="72">next<pos:position pos:line="28" pos:column="76"/></name></name></expr></incr>)<pos:position pos:line="28" pos:column="77"/></control> <block pos:line="28" pos:column="78">{
      <decl_stmt><decl><type><name pos:line="29" pos:column="7">data_definition_t<pos:position pos:line="29" pos:column="24"/></name> <modifier pos:line="29" pos:column="25">*<pos:position pos:line="29" pos:column="26"/></modifier></type><name pos:line="29" pos:column="26">dd<pos:position pos:line="29" pos:column="28"/></name> <init pos:line="29" pos:column="29">= <expr><name><name pos:line="29" pos:column="31">de<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">-&gt;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="35">value<pos:position pos:line="29" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="29" pos:column="41"/></decl_stmt>

      <for pos:line="31" pos:column="7">for <control pos:line="31" pos:column="11">(<init><decl><type><name pos:line="31" pos:column="12">size_t<pos:position pos:line="31" pos:column="18"/></name></type> <name pos:line="31" pos:column="19">i<pos:position pos:line="31" pos:column="20"/></name> <init pos:line="31" pos:column="21">= <expr><literal type="number" pos:line="31" pos:column="23">0<pos:position pos:line="31" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="31" pos:column="25"/></init> <condition><expr><name pos:line="31" pos:column="26">i<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">&lt;<pos:position pos:line="31" pos:column="32"/></operator> <name><name pos:line="31" pos:column="30">dd<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">-&gt;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="34">oids_len<pos:position pos:line="31" pos:column="42"/></name></name></expr>;<pos:position pos:line="31" pos:column="43"/></condition> <incr><expr><name pos:line="31" pos:column="44">i<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">++<pos:position pos:line="31" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="48"/></control> <block pos:line="31" pos:column="49">{
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">int<pos:position pos:line="32" pos:column="12"/></name></type> <name pos:line="32" pos:column="13">ret<pos:position pos:line="32" pos:column="16"/></name> <init pos:line="32" pos:column="17">= <expr><call><name pos:line="32" pos:column="19">snmp_oid_ncompare<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><name><name pos:line="32" pos:column="37">oid<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">.<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="41">oid<pos:position pos:line="32" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="46">oid<pos:position pos:line="32" pos:column="49"/></name><operator pos:line="32" pos:column="49">.<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="50">oid_len<pos:position pos:line="32" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="59">dd<pos:position pos:line="32" pos:column="61"/></name><operator pos:line="32" pos:column="61">-&gt;<pos:position pos:line="32" pos:column="66"/></operator><name pos:line="32" pos:column="63">oids<pos:position pos:line="32" pos:column="67"/></name><index pos:line="32" pos:column="67">[<expr><name pos:line="32" pos:column="68">i<pos:position pos:line="32" pos:column="69"/></name></expr>]<pos:position pos:line="32" pos:column="70"/></index></name><operator pos:line="32" pos:column="70">.<pos:position pos:line="32" pos:column="71"/></operator><name pos:line="32" pos:column="71">oid<pos:position pos:line="32" pos:column="74"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="33" pos:column="37">dd<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">-&gt;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="41">oids<pos:position pos:line="33" pos:column="45"/></name><index pos:line="33" pos:column="45">[<expr><name pos:line="33" pos:column="46">i<pos:position pos:line="33" pos:column="47"/></name></expr>]<pos:position pos:line="33" pos:column="48"/></index></name><operator pos:line="33" pos:column="48">.<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="49">oid_len<pos:position pos:line="33" pos:column="56"/></name></expr></argument>,
                                    <argument><expr><call><name pos:line="34" pos:column="37">MIN<pos:position pos:line="34" pos:column="40"/></name><argument_list pos:line="34" pos:column="40">(<argument><expr><name><name pos:line="34" pos:column="41">oid<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">.<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="45">oid_len<pos:position pos:line="34" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="54">dd<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">-&gt;<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="58">oids<pos:position pos:line="34" pos:column="62"/></name><index pos:line="34" pos:column="62">[<expr><name pos:line="34" pos:column="63">i<pos:position pos:line="34" pos:column="64"/></name></expr>]<pos:position pos:line="34" pos:column="65"/></index></name><operator pos:line="34" pos:column="65">.<pos:position pos:line="34" pos:column="66"/></operator><name pos:line="34" pos:column="66">oid_len<pos:position pos:line="34" pos:column="73"/></name></expr></argument>)<pos:position pos:line="34" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="76"/></decl_stmt>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">ret<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">!=<pos:position pos:line="35" pos:column="19"/></operator> <literal type="number" pos:line="35" pos:column="20">0<pos:position pos:line="35" pos:column="21"/></literal></expr>)<pos:position pos:line="35" pos:column="22"/></condition><then pos:line="35" pos:column="22">
          <block type="pseudo"><continue pos:line="36" pos:column="11">continue;<pos:position pos:line="36" pos:column="20"/></continue></block></then></if>

        <decl_stmt><decl><type><name pos:line="38" pos:column="9">char<pos:position pos:line="38" pos:column="13"/></name> <modifier pos:line="38" pos:column="14">*<pos:position pos:line="38" pos:column="15"/></modifier></type><name pos:line="38" pos:column="15">instance<pos:position pos:line="38" pos:column="23"/></name></decl>;<pos:position pos:line="38" pos:column="24"/></decl_stmt>

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><name><name pos:line="40" pos:column="14">td<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">index_oid<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">.<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">oid_len<pos:position pos:line="40" pos:column="35"/></name></name></expr>)<pos:position pos:line="40" pos:column="36"/></condition><then pos:line="40" pos:column="36"> <block pos:line="40" pos:column="37">{
          <decl_stmt><decl><type><name pos:line="41" pos:column="11">char<pos:position pos:line="41" pos:column="15"/></name></type> <name><name pos:line="41" pos:column="16">key<pos:position pos:line="41" pos:column="19"/></name><index pos:line="41" pos:column="19">[<expr><name pos:line="41" pos:column="20">MAX_OID_LEN<pos:position pos:line="41" pos:column="31"/></name></expr>]<pos:position pos:line="41" pos:column="32"/></index></name></decl>;<pos:position pos:line="41" pos:column="33"/></decl_stmt>

          <expr_stmt><expr><call><name pos:line="43" pos:column="11">memset<pos:position pos:line="43" pos:column="17"/></name><argument_list pos:line="43" pos:column="17">(<argument><expr><name pos:line="43" pos:column="18">key<pos:position pos:line="43" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="23">0<pos:position pos:line="43" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="26">sizeof<argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">key<pos:position pos:line="43" pos:column="36"/></name></expr></argument>)<pos:position pos:line="43" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="39"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="44" pos:column="11">snmp_agent_generate_oid2string<pos:position pos:line="44" pos:column="41"/></name><argument_list pos:line="44" pos:column="41">(
              <argument><expr><operator pos:line="45" pos:column="15">&amp;<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="16">oid<pos:position pos:line="45" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="21">MIN<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name><name pos:line="45" pos:column="25">oid<pos:position pos:line="45" pos:column="28"/></name><operator pos:line="45" pos:column="28">.<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="29">oid_len<pos:position pos:line="45" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="38">dd<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">-&gt;<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="42">oids<pos:position pos:line="45" pos:column="46"/></name><index pos:line="45" pos:column="46">[<expr><name pos:line="45" pos:column="47">i<pos:position pos:line="45" pos:column="48"/></name></expr>]<pos:position pos:line="45" pos:column="49"/></index></name><operator pos:line="45" pos:column="49">.<pos:position pos:line="45" pos:column="50"/></operator><name pos:line="45" pos:column="50">oid_len<pos:position pos:line="45" pos:column="57"/></name></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="45" pos:column="60">key<pos:position pos:line="45" pos:column="63"/></name></expr></argument>)<pos:position pos:line="45" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="65"/></expr_stmt>

          <expr_stmt><expr><name pos:line="47" pos:column="11">ret<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">=<pos:position pos:line="47" pos:column="16"/></operator> <call><name pos:line="47" pos:column="17">c_avl_get<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><name><name pos:line="47" pos:column="27">td<pos:position pos:line="47" pos:column="29"/></name><operator pos:line="47" pos:column="29">-&gt;<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="31">instance_index<pos:position pos:line="47" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="47">key<pos:position pos:line="47" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="52">(<pos:position pos:line="47" pos:column="53"/></operator><name pos:line="47" pos:column="53">void<pos:position pos:line="47" pos:column="57"/></name> <operator pos:line="47" pos:column="58">*<pos:position pos:line="47" pos:column="59"/></operator><operator pos:line="47" pos:column="59">*<pos:position pos:line="47" pos:column="60"/></operator><operator pos:line="47" pos:column="60">)<pos:position pos:line="47" pos:column="61"/></operator><operator pos:line="47" pos:column="61">&amp;<pos:position pos:line="47" pos:column="66"/></operator><name pos:line="47" pos:column="62">instance<pos:position pos:line="47" pos:column="70"/></name></expr></argument>)<pos:position pos:line="47" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="72"/></expr_stmt>
          <if pos:line="48" pos:column="11">if <condition pos:line="48" pos:column="14">(<expr><name pos:line="48" pos:column="15">ret<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">!=<pos:position pos:line="48" pos:column="21"/></operator> <literal type="number" pos:line="48" pos:column="22">0<pos:position pos:line="48" pos:column="23"/></literal></expr>)<pos:position pos:line="48" pos:column="24"/></condition><then pos:line="48" pos:column="24"> <block pos:line="48" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">DEBUG<pos:position pos:line="49" pos:column="18"/></name><argument_list pos:line="49" pos:column="18">(<argument><expr><name pos:line="49" pos:column="19">PLUGIN_NAME<pos:position pos:line="49" pos:column="30"/></name> <literal type="string" pos:line="49" pos:column="31">": Nonexisting index string '%s' requested"<pos:position pos:line="49" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="76">key<pos:position pos:line="49" pos:column="79"/></name></expr></argument>)<pos:position pos:line="49" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">pthread_mutex_unlock<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><operator pos:line="50" pos:column="34">&amp;<pos:position pos:line="50" pos:column="39"/></operator><name><name pos:line="50" pos:column="35">g_agent<pos:position pos:line="50" pos:column="42"/></name><operator pos:line="50" pos:column="42">-&gt;<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="44">lock<pos:position pos:line="50" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="50"/></expr_stmt>
            <return pos:line="51" pos:column="13">return <expr><name pos:line="51" pos:column="20">SNMP_NOSUCHINSTANCE<pos:position pos:line="51" pos:column="39"/></name></expr>;<pos:position pos:line="51" pos:column="40"/></return>
          }<pos:position pos:line="52" pos:column="12"/></block></then></if>
        }<pos:position pos:line="53" pos:column="10"/></block></then> <else pos:line="53" pos:column="11">else <block pos:line="53" pos:column="16">{
          <decl_stmt><decl><type><name pos:line="54" pos:column="11">int<pos:position pos:line="54" pos:column="14"/></name></type> <name pos:line="54" pos:column="15">index<pos:position pos:line="54" pos:column="20"/></name> <init pos:line="54" pos:column="21">= <expr><name><name pos:line="54" pos:column="23">oid<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">.<pos:position pos:line="54" pos:column="27"/></operator><name pos:line="54" pos:column="27">oid<pos:position pos:line="54" pos:column="30"/></name><index pos:line="54" pos:column="30">[<expr><name><name pos:line="54" pos:column="31">oid<pos:position pos:line="54" pos:column="34"/></name><operator pos:line="54" pos:column="34">.<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="35">oid_len<pos:position pos:line="54" pos:column="42"/></name></name> <operator pos:line="54" pos:column="43">-<pos:position pos:line="54" pos:column="44"/></operator> <literal type="number" pos:line="54" pos:column="45">1<pos:position pos:line="54" pos:column="46"/></literal></expr>]<pos:position pos:line="54" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="54" pos:column="48"/></decl_stmt>

          <expr_stmt><expr><name pos:line="56" pos:column="11">ret<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">=<pos:position pos:line="56" pos:column="16"/></operator> <call><name pos:line="56" pos:column="17">c_avl_get<pos:position pos:line="56" pos:column="26"/></name><argument_list pos:line="56" pos:column="26">(<argument><expr><name><name pos:line="56" pos:column="27">td<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">-&gt;<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="31">index_instance<pos:position pos:line="56" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="47">&amp;<pos:position pos:line="56" pos:column="52"/></operator><name pos:line="56" pos:column="48">index<pos:position pos:line="56" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="55">(<pos:position pos:line="56" pos:column="56"/></operator><name pos:line="56" pos:column="56">void<pos:position pos:line="56" pos:column="60"/></name> <operator pos:line="56" pos:column="61">*<pos:position pos:line="56" pos:column="62"/></operator><operator pos:line="56" pos:column="62">*<pos:position pos:line="56" pos:column="63"/></operator><operator pos:line="56" pos:column="63">)<pos:position pos:line="56" pos:column="64"/></operator><operator pos:line="56" pos:column="64">&amp;<pos:position pos:line="56" pos:column="69"/></operator><name pos:line="56" pos:column="65">instance<pos:position pos:line="56" pos:column="73"/></name></expr></argument>)<pos:position pos:line="56" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="75"/></expr_stmt>
          <if pos:line="57" pos:column="11">if <condition pos:line="57" pos:column="14">(<expr><name pos:line="57" pos:column="15">ret<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">!=<pos:position pos:line="57" pos:column="21"/></operator> <literal type="number" pos:line="57" pos:column="22">0<pos:position pos:line="57" pos:column="23"/></literal></expr>)<pos:position pos:line="57" pos:column="24"/></condition><then pos:line="57" pos:column="24"> <block pos:line="57" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">DEBUG<pos:position pos:line="58" pos:column="18"/></name><argument_list pos:line="58" pos:column="18">(<argument><expr><name pos:line="58" pos:column="19">PLUGIN_NAME<pos:position pos:line="58" pos:column="30"/></name> <literal type="string" pos:line="58" pos:column="31">": Nonexisting index '%d' requested"<pos:position pos:line="58" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="69">index<pos:position pos:line="58" pos:column="74"/></name></expr></argument>)<pos:position pos:line="58" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">pthread_mutex_unlock<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><operator pos:line="59" pos:column="34">&amp;<pos:position pos:line="59" pos:column="39"/></operator><name><name pos:line="59" pos:column="35">g_agent<pos:position pos:line="59" pos:column="42"/></name><operator pos:line="59" pos:column="42">-&gt;<pos:position pos:line="59" pos:column="47"/></operator><name pos:line="59" pos:column="44">lock<pos:position pos:line="59" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="50"/></expr_stmt>
            <return pos:line="60" pos:column="13">return <expr><name pos:line="60" pos:column="20">SNMP_NOSUCHINSTANCE<pos:position pos:line="60" pos:column="39"/></name></expr>;<pos:position pos:line="60" pos:column="40"/></return>
          }<pos:position pos:line="61" pos:column="12"/></block></then></if>
        }<pos:position pos:line="62" pos:column="10"/></block></else></if>

        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name><name pos:line="64" pos:column="13">dd<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">-&gt;<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="17">is_instance<pos:position pos:line="64" pos:column="28"/></name></name></expr>)<pos:position pos:line="64" pos:column="29"/></condition><then pos:line="64" pos:column="29"> <block pos:line="64" pos:column="30">{
          <expr_stmt><expr><name><name pos:line="65" pos:column="11">requests<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">-&gt;<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="21">requestvb<pos:position pos:line="65" pos:column="30"/></name><operator pos:line="65" pos:column="30">-&gt;<pos:position pos:line="65" pos:column="35"/></operator><name pos:line="65" pos:column="32">type<pos:position pos:line="65" pos:column="36"/></name></name> <operator pos:line="65" pos:column="37">=<pos:position pos:line="65" pos:column="38"/></operator> <name pos:line="65" pos:column="39">ASN_OCTET_STR<pos:position pos:line="65" pos:column="52"/></name></expr>;<pos:position pos:line="65" pos:column="53"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="66" pos:column="11">snmp_set_var_typed_value<pos:position pos:line="66" pos:column="35"/></name><argument_list pos:line="66" pos:column="35">(
              <argument><expr><name><name pos:line="67" pos:column="15">requests<pos:position pos:line="67" pos:column="23"/></name><operator pos:line="67" pos:column="23">-&gt;<pos:position pos:line="67" pos:column="28"/></operator><name pos:line="67" pos:column="25">requestvb<pos:position pos:line="67" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="36">requests<pos:position pos:line="67" pos:column="44"/></name><operator pos:line="67" pos:column="44">-&gt;<pos:position pos:line="67" pos:column="49"/></operator><name pos:line="67" pos:column="46">requestvb<pos:position pos:line="67" pos:column="55"/></name><operator pos:line="67" pos:column="55">-&gt;<pos:position pos:line="67" pos:column="60"/></operator><name pos:line="67" pos:column="57">type<pos:position pos:line="67" pos:column="61"/></name></name></expr></argument>,
              <argument><expr><operator pos:line="68" pos:column="15">(<pos:position pos:line="68" pos:column="16"/></operator><specifier pos:line="68" pos:column="16">const<pos:position pos:line="68" pos:column="21"/></specifier> <name pos:line="68" pos:column="22">u_char<pos:position pos:line="68" pos:column="28"/></name> <operator pos:line="68" pos:column="29">*<pos:position pos:line="68" pos:column="30"/></operator><operator pos:line="68" pos:column="30">)<pos:position pos:line="68" pos:column="31"/></operator><name pos:line="68" pos:column="31">instance<pos:position pos:line="68" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="41">strlen<pos:position pos:line="68" pos:column="47"/></name><argument_list pos:line="68" pos:column="47">(<argument><expr><operator pos:line="68" pos:column="48">(<pos:position pos:line="68" pos:column="49"/></operator><name pos:line="68" pos:column="49">instance<pos:position pos:line="68" pos:column="57"/></name><operator pos:line="68" pos:column="57">)<pos:position pos:line="68" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="68" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="61"/></expr_stmt>

          <expr_stmt><expr><call><name pos:line="70" pos:column="11">pthread_mutex_unlock<pos:position pos:line="70" pos:column="31"/></name><argument_list pos:line="70" pos:column="31">(<argument><expr><operator pos:line="70" pos:column="32">&amp;<pos:position pos:line="70" pos:column="37"/></operator><name><name pos:line="70" pos:column="33">g_agent<pos:position pos:line="70" pos:column="40"/></name><operator pos:line="70" pos:column="40">-&gt;<pos:position pos:line="70" pos:column="45"/></operator><name pos:line="70" pos:column="42">lock<pos:position pos:line="70" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="48"/></expr_stmt>

          <return pos:line="72" pos:column="11">return <expr><name pos:line="72" pos:column="18">SNMP_ERR_NOERROR<pos:position pos:line="72" pos:column="34"/></name></expr>;<pos:position pos:line="72" pos:column="35"/></return>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="75" pos:column="9">ret<pos:position pos:line="75" pos:column="12"/></name> <operator pos:line="75" pos:column="13">=<pos:position pos:line="75" pos:column="14"/></operator> <call><name pos:line="75" pos:column="15">snmp_agent_form_reply<pos:position pos:line="75" pos:column="36"/></name><argument_list pos:line="75" pos:column="36">(<argument><expr><name pos:line="75" pos:column="37">requests<pos:position pos:line="75" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="47">dd<pos:position pos:line="75" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="51">instance<pos:position pos:line="75" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="61">i<pos:position pos:line="75" pos:column="62"/></name></expr></argument>)<pos:position pos:line="75" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="64"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="77" pos:column="9">pthread_mutex_unlock<pos:position pos:line="77" pos:column="29"/></name><argument_list pos:line="77" pos:column="29">(<argument><expr><operator pos:line="77" pos:column="30">&amp;<pos:position pos:line="77" pos:column="35"/></operator><name><name pos:line="77" pos:column="31">g_agent<pos:position pos:line="77" pos:column="38"/></name><operator pos:line="77" pos:column="38">-&gt;<pos:position pos:line="77" pos:column="43"/></operator><name pos:line="77" pos:column="40">lock<pos:position pos:line="77" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="46"/></expr_stmt>

        <return pos:line="79" pos:column="9">return <expr><name pos:line="79" pos:column="16">ret<pos:position pos:line="79" pos:column="19"/></name></expr>;<pos:position pos:line="79" pos:column="20"/></return>
      }<pos:position pos:line="80" pos:column="8"/></block></for>
    }<pos:position pos:line="81" pos:column="6"/></block></for>
  }<pos:position pos:line="82" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="84" pos:column="3">pthread_mutex_unlock<pos:position pos:line="84" pos:column="23"/></name><argument_list pos:line="84" pos:column="23">(<argument><expr><operator pos:line="84" pos:column="24">&amp;<pos:position pos:line="84" pos:column="29"/></operator><name><name pos:line="84" pos:column="25">g_agent<pos:position pos:line="84" pos:column="32"/></name><operator pos:line="84" pos:column="32">-&gt;<pos:position pos:line="84" pos:column="37"/></operator><name pos:line="84" pos:column="34">lock<pos:position pos:line="84" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="40"/></expr_stmt>

  <return pos:line="86" pos:column="3">return <expr><name pos:line="86" pos:column="10">SNMP_NOSUCHINSTANCE<pos:position pos:line="86" pos:column="29"/></name></expr>;<pos:position pos:line="86" pos:column="30"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

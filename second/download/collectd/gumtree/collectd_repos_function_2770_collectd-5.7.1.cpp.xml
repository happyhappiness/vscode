<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2770_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_notification_meta_add_double<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">notification_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">n<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">name<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="2" pos:column="41">double<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">value<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list> <block pos:line="2" pos:column="55">{
  <return pos:line="3" pos:column="3">return <expr><operator pos:line="3" pos:column="10">(<pos:position pos:line="3" pos:column="11"/></operator><call><name pos:line="3" pos:column="11">plugin_notification_meta_add<pos:position pos:line="3" pos:column="39"/></name><argument_list pos:line="3" pos:column="39">(<argument><expr><name pos:line="3" pos:column="40">n<pos:position pos:line="3" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="43">name<pos:position pos:line="3" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="49">NM_TYPE_DOUBLE<pos:position pos:line="3" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="65">&amp;<pos:position pos:line="3" pos:column="70"/></operator><name pos:line="3" pos:column="66">value<pos:position pos:line="3" pos:column="71"/></name></expr></argument>)<pos:position pos:line="3" pos:column="72"/></argument_list></call><operator pos:line="3" pos:column="72">)<pos:position pos:line="3" pos:column="73"/></operator></expr>;<pos:position pos:line="3" pos:column="74"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

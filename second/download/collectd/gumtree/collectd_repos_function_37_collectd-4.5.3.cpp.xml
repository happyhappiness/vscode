<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_37_collectd-4.5.3.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name><modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">lt_int_dyld_lib_install_name<pos:position pos:line="1" pos:column="48"/></name><argument_list pos:line="1" pos:column="48">(<argument><expr><name pos:line="1" pos:column="49">mh<pos:position pos:line="1" pos:column="51"/></name></expr></argument>)<pos:position pos:line="1" pos:column="52"/></argument_list>
	const struct <name pos:line="2" pos:column="22">mach_header<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier><name pos:line="2" pos:column="35">mh<pos:position pos:line="2" pos:column="37"/></name></decl>;<pos:position pos:line="2" pos:column="38"/></decl_stmt>
<block pos:line="3" pos:column="1">{
<comment type="block" pos:line="4" pos:column="1">/* NSAddImage is also used to get the loaded image, but it only works if the lib
   is installed, for uninstalled libs we need to check the install_names against
   each other. Note that this is still broken if DYLD_IMAGE_SUFFIX is set and a
   different lib was loaded as a result
*/</comment>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">j<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">load_command<pos:position pos:line="10" pos:column="28"/></name></name> <modifier pos:line="10" pos:column="29">*<pos:position pos:line="10" pos:column="30"/></modifier></type><name pos:line="10" pos:column="30">lc<pos:position pos:line="10" pos:column="32"/></name></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">unsigned<pos:position pos:line="11" pos:column="17"/></name> <name pos:line="11" pos:column="18">long<pos:position pos:line="11" pos:column="22"/></name></type> <name pos:line="11" pos:column="23">offset<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><sizeof pos:line="11" pos:column="32">sizeof<argument_list pos:line="11" pos:column="38">(<argument><expr pos:line="11" pos:column="39">struct <name pos:line="11" pos:column="46">mach_header<pos:position pos:line="11" pos:column="57"/></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="11" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">char<pos:position pos:line="12" pos:column="19"/></name><modifier pos:line="12" pos:column="19">*<pos:position pos:line="12" pos:column="20"/></modifier></type> <name pos:line="12" pos:column="21">retStr<pos:position pos:line="12" pos:column="27"/></name><init pos:line="12" pos:column="27">=<expr><name pos:line="12" pos:column="28">NULL<pos:position pos:line="12" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>
	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">j<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">j<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <name><name pos:line="13" pos:column="25">mh<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">ncmds<pos:position pos:line="13" pos:column="34"/></name></name></expr>;<pos:position pos:line="13" pos:column="35"/></condition> <incr><expr><name pos:line="13" pos:column="36">j<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">++<pos:position pos:line="13" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="40"/></control>
	<block pos:line="14" pos:column="9">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">lc<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="22">(<pos:position pos:line="15" pos:column="23"/></operator>struct <name pos:line="15" pos:column="30">load_command<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">*<pos:position pos:line="15" pos:column="43"/></operator><operator pos:line="15" pos:column="43">)<pos:position pos:line="15" pos:column="44"/></operator><operator pos:line="15" pos:column="44">(<pos:position pos:line="15" pos:column="45"/></operator><operator pos:line="15" pos:column="45">(<pos:position pos:line="15" pos:column="46"/></operator><operator pos:line="15" pos:column="46">(<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="47">unsigned<pos:position pos:line="15" pos:column="55"/></name> <name pos:line="15" pos:column="56">long<pos:position pos:line="15" pos:column="60"/></name><operator pos:line="15" pos:column="60">)<pos:position pos:line="15" pos:column="61"/></operator><name pos:line="15" pos:column="61">mh<pos:position pos:line="15" pos:column="63"/></name><operator pos:line="15" pos:column="63">)<pos:position pos:line="15" pos:column="64"/></operator> <operator pos:line="15" pos:column="65">+<pos:position pos:line="15" pos:column="66"/></operator> <name pos:line="15" pos:column="67">offset<pos:position pos:line="15" pos:column="73"/></name><operator pos:line="15" pos:column="73">)<pos:position pos:line="15" pos:column="74"/></operator></expr>;<pos:position pos:line="15" pos:column="75"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">LC_ID_DYLIB<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">==<pos:position pos:line="16" pos:column="35"/></operator> <name><name pos:line="16" pos:column="36">lc<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">cmd<pos:position pos:line="16" pos:column="43"/></name></name></expr>)<pos:position pos:line="16" pos:column="44"/></condition><then pos:line="16" pos:column="44">
		<block pos:line="17" pos:column="17">{
			<expr_stmt><expr><name pos:line="18" pos:column="25">retStr<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">=<pos:position pos:line="18" pos:column="32"/></operator><operator pos:line="18" pos:column="32">(<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">char<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">*<pos:position pos:line="18" pos:column="38"/></operator><operator pos:line="18" pos:column="38">)<pos:position pos:line="18" pos:column="39"/></operator><operator pos:line="18" pos:column="39">(<pos:position pos:line="18" pos:column="40"/></operator><operator pos:line="18" pos:column="40">(<pos:position pos:line="18" pos:column="41"/></operator><operator pos:line="18" pos:column="41">(<pos:position pos:line="18" pos:column="42"/></operator>struct <name pos:line="18" pos:column="49">dylib_command<pos:position pos:line="18" pos:column="62"/></name><operator pos:line="18" pos:column="62">*<pos:position pos:line="18" pos:column="63"/></operator><operator pos:line="18" pos:column="63">)<pos:position pos:line="18" pos:column="64"/></operator><name pos:line="18" pos:column="64">lc<pos:position pos:line="18" pos:column="66"/></name><operator pos:line="18" pos:column="66">)<pos:position pos:line="18" pos:column="67"/></operator><operator pos:line="18" pos:column="67">-&gt;<pos:position pos:line="18" pos:column="72"/></operator><name><name pos:line="18" pos:column="69">dylib<pos:position pos:line="18" pos:column="74"/></name><operator pos:line="18" pos:column="74">.<pos:position pos:line="18" pos:column="75"/></operator><name pos:line="18" pos:column="75">name<pos:position pos:line="18" pos:column="79"/></name><operator pos:line="18" pos:column="79">.<pos:position pos:line="18" pos:column="80"/></operator><name pos:line="18" pos:column="80">offset<pos:position pos:line="18" pos:column="86"/></name></name> <operator pos:line="18" pos:column="87">+<pos:position pos:line="18" pos:column="88"/></operator>
									<operator pos:line="19" pos:column="73">(<pos:position pos:line="19" pos:column="74"/></operator><name pos:line="19" pos:column="74">unsigned<pos:position pos:line="19" pos:column="82"/></name> <name pos:line="19" pos:column="83">long<pos:position pos:line="19" pos:column="87"/></name><operator pos:line="19" pos:column="87">)<pos:position pos:line="19" pos:column="88"/></operator><name pos:line="19" pos:column="88">lc<pos:position pos:line="19" pos:column="90"/></name><operator pos:line="19" pos:column="90">)<pos:position pos:line="19" pos:column="91"/></operator></expr>;<pos:position pos:line="19" pos:column="92"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="21" pos:column="17">offset<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">+=<pos:position pos:line="21" pos:column="26"/></operator> <name><name pos:line="21" pos:column="27">lc<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">cmdsize<pos:position pos:line="21" pos:column="38"/></name></name></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></for>
	<return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">retStr<pos:position pos:line="23" pos:column="22"/></name></expr>;<pos:position pos:line="23" pos:column="23"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></unit>

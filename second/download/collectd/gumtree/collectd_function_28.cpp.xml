<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_function_28.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cf_callback_plugin_dispatch<pos:position pos:line="1" pos:column="39"/></name> <parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">shortvar<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="63">const<pos:position pos:line="1" pos:column="68"/></specifier> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">var<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">arguments<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">value<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">lc_flags_t<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">flags<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">void<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">extra<pos:position pos:line="3" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="29"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">DEBUG_CALLBACK<pos:position pos:line="5" pos:column="23"/></name> <argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">shortvar<pos:position pos:line="5" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="35">var<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="40">arguments<pos:position pos:line="5" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="51">value<pos:position pos:line="5" pos:column="56"/></name></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="58"/></expr_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">nesting_depth<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">==<pos:position pos:line="7" pos:column="30"/></operator> <literal type="number" pos:line="7" pos:column="31">0<pos:position pos:line="7" pos:column="32"/></literal><operator pos:line="7" pos:column="32">)<pos:position pos:line="7" pos:column="33"/></operator> <operator pos:line="7" pos:column="34">||<pos:position pos:line="7" pos:column="36"/></operator> <operator pos:line="7" pos:column="37">(<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="38">current_module<pos:position pos:line="7" pos:column="52"/></name> <operator pos:line="7" pos:column="53">==<pos:position pos:line="7" pos:column="55"/></operator> <name pos:line="7" pos:column="56">NULL<pos:position pos:line="7" pos:column="60"/></name><operator pos:line="7" pos:column="60">)<pos:position pos:line="7" pos:column="61"/></operator></expr>)<pos:position pos:line="7" pos:column="62"/></condition><then pos:line="7" pos:column="62">
	<block pos:line="8" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">fprintf<pos:position pos:line="9" pos:column="24"/></name> <argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">stderr<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="34">ERR_NEEDS_SECTION<pos:position pos:line="9" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="53">shortvar<pos:position pos:line="9" pos:column="61"/></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="63"/></expr_stmt>
		<return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">LC_CBRET_ERROR<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator></expr>;<pos:position pos:line="10" pos:column="41"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="13" pos:column="9">/* Send the data to the plugin */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">cf_dispatch<pos:position pos:line="14" pos:column="24"/></name> <argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">current_module<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">shortvar<pos:position pos:line="14" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="52">value<pos:position pos:line="14" pos:column="57"/></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call> <operator pos:line="14" pos:column="59">&lt;<pos:position pos:line="14" pos:column="63"/></operator> <literal type="number" pos:line="14" pos:column="61">0<pos:position pos:line="14" pos:column="62"/></literal></expr>)<pos:position pos:line="14" pos:column="63"/></condition><then pos:line="14" pos:column="63">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">LC_CBRET_ERROR<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">)<pos:position pos:line="15" pos:column="40"/></operator></expr>;<pos:position pos:line="15" pos:column="41"/></return></block></then></if>

	<return pos:line="17" pos:column="9">return <expr><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">LC_CBRET_OKAY<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">)<pos:position pos:line="17" pos:column="31"/></operator></expr>;<pos:position pos:line="17" pos:column="32"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_48_collectd-4.5.3.cpp" pos:tabs="8"><function_decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">lt_module<pos:position pos:line="1" pos:column="17"/></name></type>
<name pos:line="2" pos:column="1">presym_open<pos:position pos:line="2" pos:column="12"/></name> <parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">loader_data<pos:position pos:line="2" pos:column="25"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">filename<pos:position pos:line="2" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
     <decl_stmt><decl><type><name pos:line="3" pos:column="6">lt_user_data<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">loader_data<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="4" pos:column="6">const<pos:position pos:line="4" pos:column="11"/></specifier> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">filename<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">lt_dlsymlists_t<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">lists<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">lt_module<pos:position pos:line="7" pos:column="12"/></name></type>	   <name pos:line="7" pos:column="20">module<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><operator pos:line="7" pos:column="29">(<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="30">lt_module<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">)<pos:position pos:line="7" pos:column="40"/></operator> <literal type="number" pos:line="7" pos:column="41">0<pos:position pos:line="7" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">LT_DLMUTEX_LOCK<pos:position pos:line="9" pos:column="18"/></name> <argument_list pos:line="9" pos:column="19">()<pos:position pos:line="9" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="10" pos:column="3">lists<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <name pos:line="10" pos:column="11">preloaded_symbols<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">lists<pos:position pos:line="12" pos:column="13"/></name></expr>)<pos:position pos:line="12" pos:column="14"/></condition><then pos:line="12" pos:column="14">
    <block pos:line="13" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">LT_DLMUTEX_SETERROR<pos:position pos:line="14" pos:column="26"/></name> <argument_list pos:line="14" pos:column="27">(<argument><expr><call><name pos:line="14" pos:column="28">LT_DLSTRERROR<pos:position pos:line="14" pos:column="41"/></name> <argument_list pos:line="14" pos:column="42">(<argument><expr><name pos:line="14" pos:column="43">NO_SYMBOLS<pos:position pos:line="14" pos:column="53"/></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>
      <goto pos:line="15" pos:column="7">goto <name pos:line="15" pos:column="12">done<pos:position pos:line="15" pos:column="16"/></name>;<pos:position pos:line="15" pos:column="17"/></goto>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="18" pos:column="3">/* Can't use NULL as the reflective symbol header, as NULL is
     used to mark the end of the entire symbol list.  Self-dlpreopened
     symbols follow this magic number, chosen to be an unlikely
     clash with a real module name.  */</comment>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">!<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">filename<pos:position pos:line="22" pos:column="16"/></name></expr>)<pos:position pos:line="22" pos:column="17"/></condition><then pos:line="22" pos:column="17">
    <block pos:line="23" pos:column="5">{
      <expr_stmt><expr><name pos:line="24" pos:column="7">filename<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <literal type="string" pos:line="24" pos:column="18">"@PROGRAM@"<pos:position pos:line="24" pos:column="29"/></literal></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

  <while pos:line="27" pos:column="3">while <condition pos:line="27" pos:column="9">(<expr><name pos:line="27" pos:column="10">lists<pos:position pos:line="27" pos:column="15"/></name></expr>)<pos:position pos:line="27" pos:column="16"/></condition>
    <block pos:line="28" pos:column="5">{
      <decl_stmt><decl><type><specifier pos:line="29" pos:column="7">const<pos:position pos:line="29" pos:column="12"/></specifier> <name pos:line="29" pos:column="13">lt_dlsymlist<pos:position pos:line="29" pos:column="25"/></name> <modifier pos:line="29" pos:column="26">*<pos:position pos:line="29" pos:column="27"/></modifier></type><name pos:line="29" pos:column="27">syms<pos:position pos:line="29" pos:column="31"/></name> <init pos:line="29" pos:column="32">= <expr><name><name pos:line="29" pos:column="34">lists<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">syms<pos:position pos:line="29" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="29" pos:column="46"/></decl_stmt>

      <while pos:line="31" pos:column="7">while <condition pos:line="31" pos:column="13">(<expr><name><name pos:line="31" pos:column="14">syms<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">name<pos:position pos:line="31" pos:column="24"/></name></name></expr>)<pos:position pos:line="31" pos:column="25"/></condition>
	<block pos:line="32" pos:column="9">{
	  <if pos:line="33" pos:column="11">if <condition pos:line="33" pos:column="14">(<expr><operator pos:line="33" pos:column="15">!<pos:position pos:line="33" pos:column="16"/></operator><name><name pos:line="33" pos:column="16">syms<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">-&gt;<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="22">address<pos:position pos:line="33" pos:column="29"/></name></name> <operator pos:line="33" pos:column="30">&amp;&amp;<pos:position pos:line="33" pos:column="40"/></operator> <call><name pos:line="33" pos:column="33">strcmp<pos:position pos:line="33" pos:column="39"/></name><argument_list pos:line="33" pos:column="39">(<argument><expr><name><name pos:line="33" pos:column="40">syms<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">-&gt;<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="46">name<pos:position pos:line="33" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="52">filename<pos:position pos:line="33" pos:column="60"/></name></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call> <operator pos:line="33" pos:column="62">==<pos:position pos:line="33" pos:column="64"/></operator> <literal type="number" pos:line="33" pos:column="65">0<pos:position pos:line="33" pos:column="66"/></literal></expr>)<pos:position pos:line="33" pos:column="67"/></condition><then pos:line="33" pos:column="67">
	    <block pos:line="34" pos:column="13">{
	      <expr_stmt><expr><name pos:line="35" pos:column="15">module<pos:position pos:line="35" pos:column="21"/></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <operator pos:line="35" pos:column="24">(<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">lt_module<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">)<pos:position pos:line="35" pos:column="35"/></operator> <name pos:line="35" pos:column="36">syms<pos:position pos:line="35" pos:column="40"/></name></expr>;<pos:position pos:line="35" pos:column="41"/></expr_stmt>
	      <goto pos:line="36" pos:column="15">goto <name pos:line="36" pos:column="20">done<pos:position pos:line="36" pos:column="24"/></name>;<pos:position pos:line="36" pos:column="25"/></goto>
	    }<pos:position pos:line="37" pos:column="14"/></block></then></if>
	  <expr_stmt><expr><operator pos:line="38" pos:column="11">++<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">syms<pos:position pos:line="38" pos:column="17"/></name></expr>;<pos:position pos:line="38" pos:column="18"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></while>

      <expr_stmt><expr><name pos:line="41" pos:column="7">lists<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <name><name pos:line="41" pos:column="15">lists<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">next<pos:position pos:line="41" pos:column="26"/></name></name></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></while>

  <expr_stmt><expr><call><name pos:line="44" pos:column="3">LT_DLMUTEX_SETERROR<pos:position pos:line="44" pos:column="22"/></name> <argument_list pos:line="44" pos:column="23">(<argument><expr><call><name pos:line="44" pos:column="24">LT_DLSTRERROR<pos:position pos:line="44" pos:column="37"/></name> <argument_list pos:line="44" pos:column="38">(<argument><expr><name pos:line="44" pos:column="39">FILE_NOT_FOUND<pos:position pos:line="44" pos:column="53"/></name></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt>

 <label><name pos:line="46" pos:column="2">done<pos:position pos:line="46" pos:column="6"/></name>:<pos:position pos:line="46" pos:column="7"/></label>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">LT_DLMUTEX_UNLOCK<pos:position pos:line="47" pos:column="20"/></name> <argument_list pos:line="47" pos:column="21">()<pos:position pos:line="47" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="24"/></expr_stmt>
  <return pos:line="48" pos:column="3">return <expr><name pos:line="48" pos:column="10">module<pos:position pos:line="48" pos:column="16"/></name></expr>;<pos:position pos:line="48" pos:column="17"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function_decl></unit>

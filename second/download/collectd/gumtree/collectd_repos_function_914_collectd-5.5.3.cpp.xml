<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_914_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cgroups_read<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">cu_mount_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">mnt_list<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">cu_mount_t<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">mnt_ptr<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">_Bool<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">cgroup_found<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><literal type="number" pos:line="5" pos:column="30">0<pos:position pos:line="5" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">mnt_list<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">cu_mount_getlist<pos:position pos:line="8" pos:column="29"/></name> <argument_list pos:line="8" pos:column="30">(<argument><expr><operator pos:line="8" pos:column="31">&amp;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="32">mnt_list<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call> <operator pos:line="8" pos:column="42">==<pos:position pos:line="8" pos:column="44"/></operator> <name pos:line="8" pos:column="45">NULL<pos:position pos:line="8" pos:column="49"/></name></expr>)<pos:position pos:line="8" pos:column="50"/></condition><then pos:line="8" pos:column="50">
	<block pos:line="9" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">ERROR<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><literal type="string" pos:line="10" pos:column="24">"cgroups plugin: cu_mount_getlist failed."<pos:position pos:line="10" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">mnt_ptr<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">mnt_list<pos:position pos:line="14" pos:column="32"/></name></expr>;<pos:position pos:line="14" pos:column="33"/></init> <condition><expr><name pos:line="14" pos:column="34">mnt_ptr<pos:position pos:line="14" pos:column="41"/></name> <operator pos:line="14" pos:column="42">!=<pos:position pos:line="14" pos:column="44"/></operator> <name pos:line="14" pos:column="45">NULL<pos:position pos:line="14" pos:column="49"/></name></expr>;<pos:position pos:line="14" pos:column="50"/></condition> <incr><expr><name pos:line="14" pos:column="51">mnt_ptr<pos:position pos:line="14" pos:column="58"/></name> <operator pos:line="14" pos:column="59">=<pos:position pos:line="14" pos:column="60"/></operator> <name><name pos:line="14" pos:column="61">mnt_ptr<pos:position pos:line="14" pos:column="68"/></name><operator pos:line="14" pos:column="68">-&gt;<pos:position pos:line="14" pos:column="73"/></operator><name pos:line="14" pos:column="70">next<pos:position pos:line="14" pos:column="74"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="75"/></control>
	<block pos:line="15" pos:column="9">{
		<comment type="block" pos:line="16" pos:column="17">/* Find the cgroup mountpoint which contains the cpuacct
		 * controller. */</comment>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">(<pos:position pos:line="18" pos:column="22"/></operator><call><name pos:line="18" pos:column="22">strcmp<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name><name pos:line="18" pos:column="29">mnt_ptr<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">-&gt;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="38">type<pos:position pos:line="18" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="44">"cgroup"<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call> <operator pos:line="18" pos:column="54">!=<pos:position pos:line="18" pos:column="56"/></operator> <literal type="number" pos:line="18" pos:column="57">0<pos:position pos:line="18" pos:column="58"/></literal><operator pos:line="18" pos:column="58">)<pos:position pos:line="18" pos:column="59"/></operator>
				<operator pos:line="19" pos:column="33">||<pos:position pos:line="19" pos:column="35"/></operator> <operator pos:line="19" pos:column="36">!<pos:position pos:line="19" pos:column="37"/></operator><call><name pos:line="19" pos:column="37">cu_mount_checkoption<pos:position pos:line="19" pos:column="57"/></name><argument_list pos:line="19" pos:column="57">(<argument><expr><name><name pos:line="19" pos:column="58">mnt_ptr<pos:position pos:line="19" pos:column="65"/></name><operator pos:line="19" pos:column="65">-&gt;<pos:position pos:line="19" pos:column="70"/></operator><name pos:line="19" pos:column="67">options<pos:position pos:line="19" pos:column="74"/></name></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="20" pos:column="41">"cpuacct"<pos:position pos:line="20" pos:column="50"/></literal></expr></argument>, <comment type="block" pos:line="20" pos:column="52">/* full = */</comment> <argument><expr><literal type="number" pos:line="20" pos:column="65">1<pos:position pos:line="20" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="68"/></condition><then pos:line="20" pos:column="68">
			<block type="pseudo"><continue pos:line="21" pos:column="25">continue;<pos:position pos:line="21" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="23" pos:column="17">walk_directory<pos:position pos:line="23" pos:column="31"/></name> <argument_list pos:line="23" pos:column="32">(<argument><expr><name><name pos:line="23" pos:column="33">mnt_ptr<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">-&gt;<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="42">dir<pos:position pos:line="23" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="47">read_cpuacct_root<pos:position pos:line="23" pos:column="64"/></name></expr></argument>,
				<comment type="block" pos:line="24" pos:column="33">/* user_data = */</comment> <argument><expr><name pos:line="24" pos:column="51">NULL<pos:position pos:line="24" pos:column="55"/></name></expr></argument>,
				<comment type="block" pos:line="25" pos:column="33">/* include_hidden = */</comment> <argument><expr><literal type="number" pos:line="25" pos:column="56">0<pos:position pos:line="25" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">cgroup_found<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <literal type="number" pos:line="26" pos:column="32">1<pos:position pos:line="26" pos:column="33"/></literal></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
		<comment type="block" pos:line="27" pos:column="17">/* It doesn't make sense to check other cpuacct mount-points
		 * (if any), they contain the same data. */</comment>
		<break pos:line="29" pos:column="17">break;<pos:position pos:line="29" pos:column="23"/></break>
	}<pos:position pos:line="30" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">cu_mount_freelist<pos:position pos:line="32" pos:column="26"/></name> <argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">mnt_list<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">cgroup_found<pos:position pos:line="34" pos:column="26"/></name></expr>)<pos:position pos:line="34" pos:column="27"/></condition><then pos:line="34" pos:column="27">
	<block pos:line="35" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">WARNING<pos:position pos:line="36" pos:column="24"/></name> <argument_list pos:line="36" pos:column="25">(<argument><expr><literal type="string" pos:line="36" pos:column="26">"cgroups plugin: Unable to find cgroup "<pos:position pos:line="36" pos:column="66"/></literal>
				<literal type="string" pos:line="37" pos:column="33">"mount-point with the \"cpuacct\" option."<pos:position pos:line="37" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="77"/></expr_stmt>
		<return pos:line="38" pos:column="17">return <expr><operator pos:line="38" pos:column="24">(<pos:position pos:line="38" pos:column="25"/></operator><operator pos:line="38" pos:column="25">-<pos:position pos:line="38" pos:column="26"/></operator><literal type="number" pos:line="38" pos:column="26">1<pos:position pos:line="38" pos:column="27"/></literal><operator pos:line="38" pos:column="27">)<pos:position pos:line="38" pos:column="28"/></operator></expr>;<pos:position pos:line="38" pos:column="29"/></return>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>

	<return pos:line="41" pos:column="9">return <expr><operator pos:line="41" pos:column="16">(<pos:position pos:line="41" pos:column="17"/></operator><literal type="number" pos:line="41" pos:column="17">0<pos:position pos:line="41" pos:column="18"/></literal><operator pos:line="41" pos:column="18">)<pos:position pos:line="41" pos:column="19"/></operator></expr>;<pos:position pos:line="41" pos:column="20"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

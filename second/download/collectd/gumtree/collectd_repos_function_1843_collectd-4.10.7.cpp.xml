<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1843_collectd-4.10.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">iptcc_compile_chain<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">TC_HANDLE_T<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">h<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">STRUCT_REPLACE<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">repl<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="69">struct<pos:position pos:line="1" pos:column="75"/></name> <name pos:line="1" pos:column="76">chain_head<pos:position pos:line="1" pos:column="86"/></name></name> <modifier pos:line="1" pos:column="87">*<pos:position pos:line="1" pos:column="88"/></modifier></type><name pos:line="1" pos:column="88">c<pos:position pos:line="1" pos:column="89"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="90"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">rule_head<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">r<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">iptcb_chain_start<pos:position pos:line="5" pos:column="33"/></name></name> <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="35">head<pos:position pos:line="5" pos:column="39"/></name></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">iptcb_chain_foot<pos:position pos:line="6" pos:column="32"/></name></name> <modifier pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></modifier></type><name pos:line="6" pos:column="34">foot<pos:position pos:line="6" pos:column="38"/></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* only user-defined chains have heaer */</comment>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">iptcc_is_builtin<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">c<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34"> <block pos:line="9" pos:column="35">{
		<comment type="block" pos:line="10" pos:column="17">/* put chain header in place */</comment>
		<expr_stmt><expr><name pos:line="11" pos:column="17">head<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">void<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">*<pos:position pos:line="11" pos:column="31"/></operator><operator pos:line="11" pos:column="31">)<pos:position pos:line="11" pos:column="32"/></operator><name><name pos:line="11" pos:column="32">repl<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">entries<pos:position pos:line="11" pos:column="45"/></name></name> <operator pos:line="11" pos:column="46">+<pos:position pos:line="11" pos:column="47"/></operator> <name><name pos:line="11" pos:column="48">c<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">-&gt;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="51">head_offset<pos:position pos:line="11" pos:column="62"/></name></name></expr>;<pos:position pos:line="11" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="12" pos:column="17">head<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">-&gt;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="23">e<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">.<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">target_offset<pos:position pos:line="12" pos:column="38"/></name></name> <operator pos:line="12" pos:column="39">=<pos:position pos:line="12" pos:column="40"/></operator> <sizeof pos:line="12" pos:column="41">sizeof<argument_list pos:line="12" pos:column="47">(<argument><expr><name pos:line="12" pos:column="48">STRUCT_ENTRY<pos:position pos:line="12" pos:column="60"/></name></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></sizeof></expr>;<pos:position pos:line="12" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="13" pos:column="17">head<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">e<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">.<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">next_offset<pos:position pos:line="13" pos:column="36"/></name></name> <operator pos:line="13" pos:column="37">=<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="39">IPTCB_CHAIN_START_SIZE<pos:position pos:line="13" pos:column="61"/></name></expr>;<pos:position pos:line="13" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">strcpy<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name><name pos:line="14" pos:column="24">head<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">name<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">.<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="35">t<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">.<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">u<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">.<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">user<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">.<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="44">name<pos:position pos:line="14" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="50">ERROR_TARGET<pos:position pos:line="14" pos:column="62"/></name></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="15" pos:column="17">head<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">name<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">.<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">t<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">.<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">u<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">.<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">target_size<pos:position pos:line="15" pos:column="43"/></name></name> <operator pos:line="15" pos:column="44">=<pos:position pos:line="15" pos:column="45"/></operator> 
				<call><name pos:line="16" pos:column="33">ALIGN<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><sizeof pos:line="16" pos:column="39">sizeof<argument_list pos:line="16" pos:column="45">(<argument><expr pos:line="16" pos:column="46">struct <name pos:line="16" pos:column="53">ipt_error_target<pos:position pos:line="16" pos:column="69"/></name></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">strcpy<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name><name pos:line="17" pos:column="24">head<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">name<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">.<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="35">error<pos:position pos:line="17" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="42">c<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">name<pos:position pos:line="17" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then> <else pos:line="18" pos:column="11">else <block pos:line="18" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">repl<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">hook_entry<pos:position pos:line="19" pos:column="33"/></name><index pos:line="19" pos:column="33">[<expr><name><name pos:line="19" pos:column="34">c<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">hooknum<pos:position pos:line="19" pos:column="44"/></name></name><operator pos:line="19" pos:column="44">-<pos:position pos:line="19" pos:column="45"/></operator><literal type="number" pos:line="19" pos:column="45">1<pos:position pos:line="19" pos:column="46"/></literal></expr>]<pos:position pos:line="19" pos:column="47"/></index></name> <operator pos:line="19" pos:column="48">=<pos:position pos:line="19" pos:column="49"/></operator> <name><name pos:line="19" pos:column="50">c<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">-&gt;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="53">head_offset<pos:position pos:line="19" pos:column="64"/></name></name></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>	
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">repl<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">underflow<pos:position pos:line="20" pos:column="32"/></name><index pos:line="20" pos:column="32">[<expr><name><name pos:line="20" pos:column="33">c<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">-&gt;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="36">hooknum<pos:position pos:line="20" pos:column="43"/></name></name><operator pos:line="20" pos:column="43">-<pos:position pos:line="20" pos:column="44"/></operator><literal type="number" pos:line="20" pos:column="44">1<pos:position pos:line="20" pos:column="45"/></literal></expr>]<pos:position pos:line="20" pos:column="46"/></index></name> <operator pos:line="20" pos:column="47">=<pos:position pos:line="20" pos:column="48"/></operator> <name><name pos:line="20" pos:column="49">c<pos:position pos:line="20" pos:column="50"/></name><operator pos:line="20" pos:column="50">-&gt;<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="52">foot_offset<pos:position pos:line="20" pos:column="63"/></name></name></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="23" pos:column="9">/* iterate over rules */</comment>
	<macro><name pos:line="24" pos:column="9">list_for_each_entry<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument pos:line="24" pos:column="29">r<pos:position pos:line="24" pos:column="30"/></argument>, <argument pos:line="24" pos:column="32">&amp;c-&gt;rules<pos:position pos:line="24" pos:column="41"/></argument>, <argument pos:line="24" pos:column="43">list<pos:position pos:line="24" pos:column="47"/></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></macro> <block pos:line="24" pos:column="49">{
		<expr_stmt><expr><name pos:line="25" pos:column="17">ret<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <call><name pos:line="25" pos:column="23">iptcc_compile_rule<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">(<argument><expr><name pos:line="25" pos:column="42">h<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="45">repl<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">r<pos:position pos:line="25" pos:column="52"/></name></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="54"/></expr_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">ret<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">&lt;<pos:position pos:line="26" pos:column="29"/></operator> <literal type="number" pos:line="26" pos:column="27">0<pos:position pos:line="26" pos:column="28"/></literal></expr>)<pos:position pos:line="26" pos:column="29"/></condition><then pos:line="26" pos:column="29">
			<block type="pseudo"><return pos:line="27" pos:column="25">return <expr><name pos:line="27" pos:column="32">ret<pos:position pos:line="27" pos:column="35"/></name></expr>;<pos:position pos:line="27" pos:column="36"/></return></block></then></if>
	}<pos:position pos:line="28" pos:column="10"/></block>

	<comment type="block" pos:line="30" pos:column="9">/* put chain footer in place */</comment>
	<expr_stmt><expr><name pos:line="31" pos:column="9">foot<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <operator pos:line="31" pos:column="16">(<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">void<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">*<pos:position pos:line="31" pos:column="23"/></operator><operator pos:line="31" pos:column="23">)<pos:position pos:line="31" pos:column="24"/></operator><name><name pos:line="31" pos:column="24">repl<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">-&gt;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="30">entries<pos:position pos:line="31" pos:column="37"/></name></name> <operator pos:line="31" pos:column="38">+<pos:position pos:line="31" pos:column="39"/></operator> <name><name pos:line="31" pos:column="40">c<pos:position pos:line="31" pos:column="41"/></name><operator pos:line="31" pos:column="41">-&gt;<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="43">foot_offset<pos:position pos:line="31" pos:column="54"/></name></name></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="32" pos:column="9">foot<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">-&gt;<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="15">e<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">.<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">target_offset<pos:position pos:line="32" pos:column="30"/></name></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <sizeof pos:line="32" pos:column="33">sizeof<argument_list pos:line="32" pos:column="39">(<argument><expr><name pos:line="32" pos:column="40">STRUCT_ENTRY<pos:position pos:line="32" pos:column="52"/></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></sizeof></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="33" pos:column="9">foot<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">e<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">.<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">next_offset<pos:position pos:line="33" pos:column="28"/></name></name> <operator pos:line="33" pos:column="29">=<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="31">IPTCB_CHAIN_FOOT_SIZE<pos:position pos:line="33" pos:column="52"/></name></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">strcpy<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name><name pos:line="34" pos:column="16">foot<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">target<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">.<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="29">target<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">.<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="36">u<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">.<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="38">user<pos:position pos:line="34" pos:column="42"/></name><operator pos:line="34" pos:column="42">.<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="43">name<pos:position pos:line="34" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">STANDARD_TARGET<pos:position pos:line="34" pos:column="64"/></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="35" pos:column="9">foot<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">target<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">.<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">target<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">.<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">u<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">.<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="31">target_size<pos:position pos:line="35" pos:column="42"/></name></name> <operator pos:line="35" pos:column="43">=<pos:position pos:line="35" pos:column="44"/></operator>
				<call><name pos:line="36" pos:column="33">ALIGN<pos:position pos:line="36" pos:column="38"/></name><argument_list pos:line="36" pos:column="38">(<argument><expr><sizeof pos:line="36" pos:column="39">sizeof<argument_list pos:line="36" pos:column="45">(<argument><expr><name pos:line="36" pos:column="46">STRUCT_STANDARD_TARGET<pos:position pos:line="36" pos:column="68"/></name></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="71"/></expr_stmt>
	<comment type="block" pos:line="37" pos:column="9">/* builtin targets have verdict, others return */</comment>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><call><name pos:line="38" pos:column="13">iptcc_is_builtin<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">c<pos:position pos:line="38" pos:column="31"/></name></expr></argument>)<pos:position pos:line="38" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="33"/></condition><then pos:line="38" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="17">foot<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">-&gt;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="23">target<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">.<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">verdict<pos:position pos:line="39" pos:column="37"/></name></name> <operator pos:line="39" pos:column="38">=<pos:position pos:line="39" pos:column="39"/></operator> <name><name pos:line="39" pos:column="40">c<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">-&gt;<pos:position pos:line="39" pos:column="46"/></operator><name pos:line="39" pos:column="43">verdict<pos:position pos:line="39" pos:column="50"/></name></name></expr>;<pos:position pos:line="39" pos:column="51"/></expr_stmt></block></then>
	<else pos:line="40" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="17">foot<pos:position pos:line="41" pos:column="21"/></name><operator pos:line="41" pos:column="21">-&gt;<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="23">target<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">.<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="30">verdict<pos:position pos:line="41" pos:column="37"/></name></name> <operator pos:line="41" pos:column="38">=<pos:position pos:line="41" pos:column="39"/></operator> <name pos:line="41" pos:column="40">RETURN<pos:position pos:line="41" pos:column="46"/></name></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt></block></else></if>
	<comment type="block" pos:line="42" pos:column="9">/* set policy-counters */</comment>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">memcpy<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><operator pos:line="43" pos:column="16">&amp;<pos:position pos:line="43" pos:column="21"/></operator><name><name pos:line="43" pos:column="17">foot<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">-&gt;<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="23">e<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">.<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="25">counters<pos:position pos:line="43" pos:column="33"/></name></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="35">&amp;<pos:position pos:line="43" pos:column="40"/></operator><name><name pos:line="43" pos:column="36">c<pos:position pos:line="43" pos:column="37"/></name><operator pos:line="43" pos:column="37">-&gt;<pos:position pos:line="43" pos:column="42"/></operator><name pos:line="43" pos:column="39">counters<pos:position pos:line="43" pos:column="47"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="49">sizeof<argument_list pos:line="43" pos:column="55">(<argument><expr><name pos:line="43" pos:column="56">STRUCT_COUNTERS<pos:position pos:line="43" pos:column="71"/></name></expr></argument>)<pos:position pos:line="43" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="74"/></expr_stmt>

	<return pos:line="45" pos:column="9">return <expr><literal type="number" pos:line="45" pos:column="16">0<pos:position pos:line="45" pos:column="17"/></literal></expr>;<pos:position pos:line="45" pos:column="18"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

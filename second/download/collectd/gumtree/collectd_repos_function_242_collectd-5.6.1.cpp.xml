<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_242_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_line<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">buffer<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list> <comment type="block" pos:line="1" pos:column="38">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">strncasecmp<pos:position pos:line="3" pos:column="18"/></name> <argument_list pos:line="3" pos:column="19">(<argument><expr><literal type="string" pos:line="3" pos:column="20">"PUTVAL"<pos:position pos:line="3" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="30">buffer<pos:position pos:line="3" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="3" pos:column="38">strlen<pos:position pos:line="3" pos:column="44"/></name> <argument_list pos:line="3" pos:column="45">(<argument><expr><literal type="string" pos:line="3" pos:column="46">"PUTVAL"<pos:position pos:line="3" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="56"/></argument_list></call> <operator pos:line="3" pos:column="57">==<pos:position pos:line="3" pos:column="59"/></operator> <literal type="number" pos:line="3" pos:column="60">0<pos:position pos:line="3" pos:column="61"/></literal></expr>)<pos:position pos:line="3" pos:column="62"/></condition><then pos:line="3" pos:column="62">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><operator pos:line="4" pos:column="12">(<pos:position pos:line="4" pos:column="13"/></operator><call><name pos:line="4" pos:column="13">handle_putval<pos:position pos:line="4" pos:column="26"/></name> <argument_list pos:line="4" pos:column="27">(<argument><expr><name pos:line="4" pos:column="28">stdout<pos:position pos:line="4" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="36">buffer<pos:position pos:line="4" pos:column="42"/></name></expr></argument>)<pos:position pos:line="4" pos:column="43"/></argument_list></call><operator pos:line="4" pos:column="43">)<pos:position pos:line="4" pos:column="44"/></operator></expr>;<pos:position pos:line="4" pos:column="45"/></return></block></then>
  <elseif pos:line="5" pos:column="3">else <if pos:line="5" pos:column="8">if <condition pos:line="5" pos:column="11">(<expr><call><name pos:line="5" pos:column="12">strncasecmp<pos:position pos:line="5" pos:column="23"/></name> <argument_list pos:line="5" pos:column="24">(<argument><expr><literal type="string" pos:line="5" pos:column="25">"PUTNOTIF"<pos:position pos:line="5" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="37">buffer<pos:position pos:line="5" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="45">strlen<pos:position pos:line="5" pos:column="51"/></name> <argument_list pos:line="5" pos:column="52">(<argument><expr><literal type="string" pos:line="5" pos:column="53">"PUTNOTIF"<pos:position pos:line="5" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="65"/></argument_list></call> <operator pos:line="5" pos:column="66">==<pos:position pos:line="5" pos:column="68"/></operator> <literal type="number" pos:line="5" pos:column="69">0<pos:position pos:line="5" pos:column="70"/></literal></expr>)<pos:position pos:line="5" pos:column="71"/></condition><then pos:line="5" pos:column="71">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><call><name pos:line="6" pos:column="13">handle_putnotif<pos:position pos:line="6" pos:column="28"/></name> <argument_list pos:line="6" pos:column="29">(<argument><expr><name pos:line="6" pos:column="30">stdout<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="38">buffer<pos:position pos:line="6" pos:column="44"/></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call><operator pos:line="6" pos:column="45">)<pos:position pos:line="6" pos:column="46"/></operator></expr>;<pos:position pos:line="6" pos:column="47"/></return></block></then></if></elseif>
  <else pos:line="7" pos:column="3">else
  <block pos:line="8" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ERROR<pos:position pos:line="9" pos:column="10"/></name> <argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="string" pos:line="9" pos:column="12">"exec plugin: Unable to parse command, ignoring line: \"%s\""<pos:position pos:line="9" pos:column="73"/></literal></expr></argument>,
	<argument><expr><name pos:line="10" pos:column="9">buffer<pos:position pos:line="10" pos:column="15"/></name></expr></argument>)<pos:position pos:line="10" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></else></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

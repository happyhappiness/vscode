<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1450_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ovs_events_get_select_params<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">()<pos:position pos:line="1" pos:column="44"/></parameter_list> <block pos:line="1" pos:column="45">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">size_t<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">buff_size<pos:position pos:line="2" pos:column="19"/></name> <init pos:line="2" pos:column="20">= <expr><literal type="number" pos:line="2" pos:column="22">0<pos:position pos:line="2" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">buff_off<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">opt_buff<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><name pos:line="4" pos:column="20">NULL<pos:position pos:line="4" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="5" pos:column="3">static<pos:position pos:line="5" pos:column="9"/></specifier> <type><specifier pos:line="5" pos:column="10">const<pos:position pos:line="5" pos:column="15"/></specifier> <name pos:line="5" pos:column="16">char<pos:position pos:line="5" pos:column="20"/></name></type> <name><name pos:line="5" pos:column="21">params_fmt<pos:position pos:line="5" pos:column="31"/></name><index pos:line="5" pos:column="31">[]<pos:position pos:line="5" pos:column="33"/></index></name> <init pos:line="5" pos:column="34">= <expr><literal type="string" pos:line="5" pos:column="36">"[\"Open_vSwitch\"%s]"<pos:position pos:line="5" pos:column="58"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="59"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="6" pos:column="3">static<pos:position pos:line="6" pos:column="9"/></specifier> <type><specifier pos:line="6" pos:column="10">const<pos:position pos:line="6" pos:column="15"/></specifier> <name pos:line="6" pos:column="16">char<pos:position pos:line="6" pos:column="20"/></name></type> <name><name pos:line="6" pos:column="21">option_fmt<pos:position pos:line="6" pos:column="31"/></name><index pos:line="6" pos:column="31">[]<pos:position pos:line="6" pos:column="33"/></index></name> <init pos:line="6" pos:column="34">=
      <expr><literal type="string" pos:line="7" pos:column="7">",{\"op\":\"select\",\"table\":\"Interface\","<pos:position pos:line="7" pos:column="53"/></literal>
      <literal type="string" pos:line="8" pos:column="7">"\"where\":[[\"name\",\"==\",\"%s\"]],"<pos:position pos:line="8" pos:column="46"/></literal>
      <literal type="string" pos:line="9" pos:column="7">"\"columns\":[\"link_state\",\"external_ids\","<pos:position pos:line="9" pos:column="54"/></literal>
      <literal type="string" pos:line="10" pos:column="7">"\"name\",\"_uuid\"]}"<pos:position pos:line="10" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="11" pos:column="3">static<pos:position pos:line="11" pos:column="9"/></specifier> <type><specifier pos:line="11" pos:column="10">const<pos:position pos:line="11" pos:column="15"/></specifier> <name pos:line="11" pos:column="16">char<pos:position pos:line="11" pos:column="20"/></name></type> <name><name pos:line="11" pos:column="21">default_opt<pos:position pos:line="11" pos:column="32"/></name><index pos:line="11" pos:column="32">[]<pos:position pos:line="11" pos:column="34"/></index></name> <init pos:line="11" pos:column="35">=
      <expr><literal type="string" pos:line="12" pos:column="7">",{\"op\":\"select\",\"table\":\"Interface\","<pos:position pos:line="12" pos:column="53"/></literal>
      <literal type="string" pos:line="13" pos:column="7">"\"where\":[],\"columns\":[\"link_state\","<pos:position pos:line="13" pos:column="50"/></literal>
      <literal type="string" pos:line="14" pos:column="7">"\"external_ids\",\"name\",\"_uuid\"]}"<pos:position pos:line="14" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="47"/></decl_stmt>
  <comment type="block" pos:line="15" pos:column="3">/* setup OVS DB interface condition */</comment>
  <for pos:line="16" pos:column="3">for <control pos:line="16" pos:column="7">(<init><decl><type><name pos:line="16" pos:column="8">ovs_events_iface_list_t<pos:position pos:line="16" pos:column="31"/></name> <modifier pos:line="16" pos:column="32">*<pos:position pos:line="16" pos:column="33"/></modifier></type><name pos:line="16" pos:column="33">iface<pos:position pos:line="16" pos:column="38"/></name> <init pos:line="16" pos:column="39">= <expr><name><name pos:line="16" pos:column="41">ovs_events_ctx<pos:position pos:line="16" pos:column="55"/></name><operator pos:line="16" pos:column="55">.<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="56">config<pos:position pos:line="16" pos:column="62"/></name><operator pos:line="16" pos:column="62">.<pos:position pos:line="16" pos:column="63"/></operator><name pos:line="16" pos:column="63">ifaces<pos:position pos:line="16" pos:column="69"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="70"/></init> <condition><expr><name pos:line="16" pos:column="71">iface<pos:position pos:line="16" pos:column="76"/></name></expr>;<pos:position pos:line="16" pos:column="77"/></condition>
       <incr><expr><name pos:line="17" pos:column="8">iface<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <name><name pos:line="17" pos:column="16">iface<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">next<pos:position pos:line="17" pos:column="27"/></name></name></expr></incr>)<pos:position pos:line="17" pos:column="28"/></control> <block pos:line="17" pos:column="29">{
    <comment type="block" pos:line="18" pos:column="5">/* allocate new buffer (format size + ifname len is good enough) */</comment>
    <expr_stmt><expr><name pos:line="19" pos:column="5">buff_size<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">+=<pos:position pos:line="19" pos:column="17"/></operator> <sizeof pos:line="19" pos:column="18">sizeof<argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">option_fmt<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></sizeof> <operator pos:line="19" pos:column="37">+<pos:position pos:line="19" pos:column="38"/></operator> <call><name pos:line="19" pos:column="39">strlen<pos:position pos:line="19" pos:column="45"/></name><argument_list pos:line="19" pos:column="45">(<argument><expr><name><name pos:line="19" pos:column="46">iface<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">-&gt;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="53">name<pos:position pos:line="19" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">char<pos:position pos:line="20" pos:column="9"/></name> <modifier pos:line="20" pos:column="10">*<pos:position pos:line="20" pos:column="11"/></modifier></type><name pos:line="20" pos:column="11">new_buff<pos:position pos:line="20" pos:column="19"/></name> <init pos:line="20" pos:column="20">= <expr><call><name pos:line="20" pos:column="22">realloc<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">opt_buff<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">buff_size<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="51"/></decl_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">new_buff<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">==<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">NULL<pos:position pos:line="21" pos:column="25"/></name></expr>)<pos:position pos:line="21" pos:column="26"/></condition><then pos:line="21" pos:column="26"> <block pos:line="21" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">sfree<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">opt_buff<pos:position pos:line="22" pos:column="21"/></name></expr></argument>)<pos:position pos:line="22" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
      <return pos:line="23" pos:column="7">return <expr><name pos:line="23" pos:column="14">NULL<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="25" pos:column="5">opt_buff<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <name pos:line="25" pos:column="16">new_buff<pos:position pos:line="25" pos:column="24"/></name></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">int<pos:position pos:line="26" pos:column="8"/></name></type> <name pos:line="26" pos:column="9">ret<pos:position pos:line="26" pos:column="12"/></name> <init pos:line="26" pos:column="13">= <expr><call><name pos:line="26" pos:column="15">snprintf<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">opt_buff<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">+<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="35">buff_off<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">buff_size<pos:position pos:line="26" pos:column="54"/></name> <operator pos:line="26" pos:column="55">-<pos:position pos:line="26" pos:column="56"/></operator> <name pos:line="26" pos:column="57">buff_off<pos:position pos:line="26" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="67">option_fmt<pos:position pos:line="26" pos:column="77"/></name></expr></argument>,
                       <argument><expr><name><name pos:line="27" pos:column="24">iface<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">name<pos:position pos:line="27" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="37"/></decl_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">ret<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">&lt;<pos:position pos:line="28" pos:column="17"/></operator> <literal type="number" pos:line="28" pos:column="15">0<pos:position pos:line="28" pos:column="16"/></literal></expr>)<pos:position pos:line="28" pos:column="17"/></condition><then pos:line="28" pos:column="17"> <block pos:line="28" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">sfree<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name pos:line="29" pos:column="13">opt_buff<pos:position pos:line="29" pos:column="21"/></name></expr></argument>)<pos:position pos:line="29" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>
      <return pos:line="30" pos:column="7">return <expr><name pos:line="30" pos:column="14">NULL<pos:position pos:line="30" pos:column="18"/></name></expr>;<pos:position pos:line="30" pos:column="19"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="32" pos:column="5">buff_off<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">+=<pos:position pos:line="32" pos:column="16"/></operator> <name pos:line="32" pos:column="17">ret<pos:position pos:line="32" pos:column="20"/></name></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></for>
  <comment type="block" pos:line="34" pos:column="3">/* if no interfaces are configured, use default params */</comment>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">opt_buff<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">==<pos:position pos:line="35" pos:column="18"/></operator> <name pos:line="35" pos:column="19">NULL<pos:position pos:line="35" pos:column="23"/></name></expr>)<pos:position pos:line="35" pos:column="24"/></condition><then pos:line="35" pos:column="24">
    <block type="pseudo"><if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">(<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">opt_buff<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <call><name pos:line="36" pos:column="21">strdup<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><name pos:line="36" pos:column="28">default_opt<pos:position pos:line="36" pos:column="39"/></name></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></call><operator pos:line="36" pos:column="40">)<pos:position pos:line="36" pos:column="41"/></operator> <operator pos:line="36" pos:column="42">==<pos:position pos:line="36" pos:column="44"/></operator> <name pos:line="36" pos:column="45">NULL<pos:position pos:line="36" pos:column="49"/></name></expr>)<pos:position pos:line="36" pos:column="50"/></condition><then pos:line="36" pos:column="50">
      <block type="pseudo"><return pos:line="37" pos:column="7">return <expr><name pos:line="37" pos:column="14">NULL<pos:position pos:line="37" pos:column="18"/></name></expr>;<pos:position pos:line="37" pos:column="19"/></return></block></then></if></block></then></if>

  <comment type="block" pos:line="39" pos:column="3">/* allocate memory for OVS DB select params */</comment>
  <decl_stmt><decl><type><name pos:line="40" pos:column="3">size_t<pos:position pos:line="40" pos:column="9"/></name></type> <name pos:line="40" pos:column="10">params_size<pos:position pos:line="40" pos:column="21"/></name> <init pos:line="40" pos:column="22">= <expr><sizeof pos:line="40" pos:column="24">sizeof<argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">params_fmt<pos:position pos:line="40" pos:column="41"/></name></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></sizeof> <operator pos:line="40" pos:column="43">+<pos:position pos:line="40" pos:column="44"/></operator> <call><name pos:line="40" pos:column="45">strlen<pos:position pos:line="40" pos:column="51"/></name><argument_list pos:line="40" pos:column="51">(<argument><expr><name pos:line="40" pos:column="52">opt_buff<pos:position pos:line="40" pos:column="60"/></name></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="62"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="41" pos:column="3">char<pos:position pos:line="41" pos:column="7"/></name> <modifier pos:line="41" pos:column="8">*<pos:position pos:line="41" pos:column="9"/></modifier></type><name pos:line="41" pos:column="9">params_buff<pos:position pos:line="41" pos:column="20"/></name> <init pos:line="41" pos:column="21">= <expr><call><name pos:line="41" pos:column="23">calloc<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><literal type="number" pos:line="41" pos:column="30">1<pos:position pos:line="41" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="33">params_size<pos:position pos:line="41" pos:column="44"/></name></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="46"/></decl_stmt>
  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><name pos:line="42" pos:column="7">params_buff<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">==<pos:position pos:line="42" pos:column="21"/></operator> <name pos:line="42" pos:column="22">NULL<pos:position pos:line="42" pos:column="26"/></name></expr>)<pos:position pos:line="42" pos:column="27"/></condition><then pos:line="42" pos:column="27"> <block pos:line="42" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">sfree<pos:position pos:line="43" pos:column="10"/></name><argument_list pos:line="43" pos:column="10">(<argument><expr><name pos:line="43" pos:column="11">opt_buff<pos:position pos:line="43" pos:column="19"/></name></expr></argument>)<pos:position pos:line="43" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="21"/></expr_stmt>
    <return pos:line="44" pos:column="5">return <expr><name pos:line="44" pos:column="12">NULL<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></return>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="47" pos:column="3">/* create OVS DB select params */</comment>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><call><name pos:line="48" pos:column="7">snprintf<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><name pos:line="48" pos:column="16">params_buff<pos:position pos:line="48" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="29">params_size<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="42">params_fmt<pos:position pos:line="48" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="54">opt_buff<pos:position pos:line="48" pos:column="62"/></name></expr></argument>)<pos:position pos:line="48" pos:column="63"/></argument_list></call> <operator pos:line="48" pos:column="64">&lt;<pos:position pos:line="48" pos:column="68"/></operator> <literal type="number" pos:line="48" pos:column="66">0<pos:position pos:line="48" pos:column="67"/></literal></expr>)<pos:position pos:line="48" pos:column="68"/></condition><then pos:line="48" pos:column="68">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="5">sfree<pos:position pos:line="49" pos:column="10"/></name><argument_list pos:line="49" pos:column="10">(<argument><expr><name pos:line="49" pos:column="11">params_buff<pos:position pos:line="49" pos:column="22"/></name></expr></argument>)<pos:position pos:line="49" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="51" pos:column="3">sfree<pos:position pos:line="51" pos:column="8"/></name><argument_list pos:line="51" pos:column="8">(<argument><expr><name pos:line="51" pos:column="9">opt_buff<pos:position pos:line="51" pos:column="17"/></name></expr></argument>)<pos:position pos:line="51" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="19"/></expr_stmt>
  <return pos:line="52" pos:column="3">return <expr><name pos:line="52" pos:column="10">params_buff<pos:position pos:line="52" pos:column="21"/></name></expr>;<pos:position pos:line="52" pos:column="22"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

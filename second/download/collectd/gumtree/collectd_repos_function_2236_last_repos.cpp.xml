<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2236_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">cpy_error<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">PyObject<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">self<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">PyObject<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">args<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list> <block pos:line="1" pos:column="60">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">text<pos:position pos:line="2" pos:column="13"/></name></decl>;<pos:position pos:line="2" pos:column="14"/></decl_stmt>
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">PyArg_ParseTuple<pos:position pos:line="3" pos:column="23"/></name><argument_list pos:line="3" pos:column="23">(<argument><expr><name pos:line="3" pos:column="24">args<pos:position pos:line="3" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="30">"et"<pos:position pos:line="3" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="36">NULL<pos:position pos:line="3" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="42">&amp;<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="43">text<pos:position pos:line="3" pos:column="47"/></name></expr></argument>)<pos:position pos:line="3" pos:column="48"/></argument_list></call> <operator pos:line="3" pos:column="49">==<pos:position pos:line="3" pos:column="51"/></operator> <literal type="number" pos:line="3" pos:column="52">0<pos:position pos:line="3" pos:column="53"/></literal></expr>)<pos:position pos:line="3" pos:column="54"/></condition><then pos:line="3" pos:column="54">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><name pos:line="4" pos:column="12">NULL<pos:position pos:line="4" pos:column="16"/></name></expr>;<pos:position pos:line="4" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="5" pos:column="3">Py_BEGIN_ALLOW_THREADS<pos:position pos:line="5" pos:column="25"/></name></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">plugin_log<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><name pos:line="6" pos:column="14">LOG_ERR<pos:position pos:line="6" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="23">"%s"<pos:position pos:line="6" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="29">text<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">Py_END_ALLOW_THREADS<pos:position pos:line="7" pos:column="23"/></name></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">PyMem_Free<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><name pos:line="8" pos:column="14">text<pos:position pos:line="8" pos:column="18"/></name></expr></argument>)<pos:position pos:line="8" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">Py_RETURN_NONE<pos:position pos:line="9" pos:column="17"/></name></expr>;<pos:position pos:line="9" pos:column="18"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

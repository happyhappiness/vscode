<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_703_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mic_submit_memory_use<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">int<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">micnumber<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">type_instance<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">U32<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">value<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list> <block pos:line="2" pos:column="46">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_list_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">vl<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* MicAccessAPI reports KB's of memory, adjust for this */</comment>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">DEBUG<pos:position pos:line="6" pos:column="8"/></name><argument_list pos:line="6" pos:column="8">(<argument><expr><literal type="string" pos:line="6" pos:column="9">"mic plugin: Memory Value Report; %u %lf"<pos:position pos:line="6" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="52">value<pos:position pos:line="6" pos:column="57"/></name></expr></argument>,
        <argument><expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><operator pos:line="7" pos:column="10">(<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">gauge_t<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">)<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">value<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">)<pos:position pos:line="7" pos:column="25"/></operator> <operator pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></operator> <literal type="number" pos:line="7" pos:column="28">1024.0<pos:position pos:line="7" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="9" pos:column="3">vl<pos:position pos:line="9" pos:column="5"/></name><operator pos:line="9" pos:column="5">.<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">values<pos:position pos:line="9" pos:column="12"/></name></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <operator pos:line="9" pos:column="15">&amp;<pos:position pos:line="9" pos:column="20"/></operator><operator pos:line="9" pos:column="16">(<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">value_t<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">)<pos:position pos:line="9" pos:column="25"/></operator><block pos:line="9" pos:column="25">{<expr><operator pos:line="9" pos:column="26">.<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">gauge<pos:position pos:line="9" pos:column="32"/></name> <operator pos:line="9" pos:column="33">=<pos:position pos:line="9" pos:column="34"/></operator> <operator pos:line="9" pos:column="35">(<pos:position pos:line="9" pos:column="36"/></operator><operator pos:line="9" pos:column="36">(<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">gauge_t<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">)<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="45">value<pos:position pos:line="9" pos:column="50"/></name><operator pos:line="9" pos:column="50">)<pos:position pos:line="9" pos:column="51"/></operator> <operator pos:line="9" pos:column="52">*<pos:position pos:line="9" pos:column="53"/></operator> <literal type="number" pos:line="9" pos:column="54">1024.0<pos:position pos:line="9" pos:column="60"/></literal></expr>}<pos:position pos:line="9" pos:column="61"/></block></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">vl<pos:position pos:line="10" pos:column="5"/></name><operator pos:line="10" pos:column="5">.<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">values_len<pos:position pos:line="10" pos:column="16"/></name></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <literal type="number" pos:line="10" pos:column="19">1<pos:position pos:line="10" pos:column="20"/></literal></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">strncpy<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name><name pos:line="12" pos:column="11">vl<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">.<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">plugin<pos:position pos:line="12" pos:column="20"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="22">"mic"<pos:position pos:line="12" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="29">sizeof<argument_list pos:line="12" pos:column="35">(<argument><expr><name><name pos:line="12" pos:column="36">vl<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">.<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="39">plugin<pos:position pos:line="12" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">snprintf<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name><name pos:line="13" pos:column="12">vl<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">.<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">plugin_instance<pos:position pos:line="13" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="32">sizeof<argument_list pos:line="13" pos:column="38">(<argument><expr><name><name pos:line="13" pos:column="39">vl<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">.<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">plugin_instance<pos:position pos:line="13" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="60">"%i"<pos:position pos:line="13" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="66">micnumber<pos:position pos:line="13" pos:column="75"/></name></expr></argument>)<pos:position pos:line="13" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="77"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">strncpy<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><name><name pos:line="14" pos:column="11">vl<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">.<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">type<pos:position pos:line="14" pos:column="18"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="20">"memory"<pos:position pos:line="14" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="30">sizeof<argument_list pos:line="14" pos:column="36">(<argument><expr><name><name pos:line="14" pos:column="37">vl<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">.<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="40">type<pos:position pos:line="14" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">strncpy<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><name><name pos:line="15" pos:column="11">vl<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">.<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">type_instance<pos:position pos:line="15" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="29">type_instance<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="44">sizeof<argument_list pos:line="15" pos:column="50">(<argument><expr><name><name pos:line="15" pos:column="51">vl<pos:position pos:line="15" pos:column="53"/></name><operator pos:line="15" pos:column="53">.<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="54">type_instance<pos:position pos:line="15" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">plugin_dispatch_values<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><operator pos:line="17" pos:column="26">&amp;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="27">vl<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

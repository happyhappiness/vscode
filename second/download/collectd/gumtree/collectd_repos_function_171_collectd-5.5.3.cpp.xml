<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_171_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rc_read<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">rrdc_stats_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">head<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">rrdc_stats_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">ptr<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">_Bool<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">retried<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">value_t<pos:position pos:line="8" pos:column="10"/></name></type> <name><name pos:line="8" pos:column="11">values<pos:position pos:line="8" pos:column="17"/></name><index pos:line="8" pos:column="17">[<expr><literal type="number" pos:line="8" pos:column="18">1<pos:position pos:line="8" pos:column="19"/></literal></expr>]<pos:position pos:line="8" pos:column="20"/></index></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">value_list_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">vl<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name pos:line="9" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="9" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">daemon_address<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">==<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">NULL<pos:position pos:line="11" pos:column="29"/></name></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">!<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">config_collect_stats<pos:position pos:line="14" pos:column="28"/></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">-<pos:position pos:line="15" pos:column="14"/></operator><literal type="number" pos:line="15" pos:column="14">1<pos:position pos:line="15" pos:column="15"/></literal><operator pos:line="15" pos:column="15">)<pos:position pos:line="15" pos:column="16"/></operator></expr>;<pos:position pos:line="15" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="17" pos:column="3">vl<pos:position pos:line="17" pos:column="5"/></name><operator pos:line="17" pos:column="5">.<pos:position pos:line="17" pos:column="6"/></operator><name pos:line="17" pos:column="6">values<pos:position pos:line="17" pos:column="12"/></name></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">values<pos:position pos:line="17" pos:column="21"/></name></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">vl<pos:position pos:line="18" pos:column="5"/></name><operator pos:line="18" pos:column="5">.<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">values_len<pos:position pos:line="18" pos:column="16"/></name></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <literal type="number" pos:line="18" pos:column="19">1<pos:position pos:line="18" pos:column="20"/></literal></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><operator pos:line="20" pos:column="7">(<pos:position pos:line="20" pos:column="8"/></operator><call><name pos:line="20" pos:column="8">strncmp<pos:position pos:line="20" pos:column="15"/></name> <argument_list pos:line="20" pos:column="16">(<argument><expr><literal type="string" pos:line="20" pos:column="17">"unix:"<pos:position pos:line="20" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="26">daemon_address<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="42">strlen<pos:position pos:line="20" pos:column="48"/></name> <argument_list pos:line="20" pos:column="49">(<argument><expr><literal type="string" pos:line="20" pos:column="50">"unix:"<pos:position pos:line="20" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call> <operator pos:line="20" pos:column="60">==<pos:position pos:line="20" pos:column="62"/></operator> <literal type="number" pos:line="20" pos:column="63">0<pos:position pos:line="20" pos:column="64"/></literal><operator pos:line="20" pos:column="64">)<pos:position pos:line="20" pos:column="65"/></operator>
      <operator pos:line="21" pos:column="7">||<pos:position pos:line="21" pos:column="9"/></operator> <operator pos:line="21" pos:column="10">(<pos:position pos:line="21" pos:column="11"/></operator><name><name pos:line="21" pos:column="11">daemon_address<pos:position pos:line="21" pos:column="25"/></name><index pos:line="21" pos:column="25">[<expr><literal type="number" pos:line="21" pos:column="26">0<pos:position pos:line="21" pos:column="27"/></literal></expr>]<pos:position pos:line="21" pos:column="28"/></index></name> <operator pos:line="21" pos:column="29">==<pos:position pos:line="21" pos:column="31"/></operator> <literal type="char" pos:line="21" pos:column="32">'/'<pos:position pos:line="21" pos:column="35"/></literal><operator pos:line="21" pos:column="35">)<pos:position pos:line="21" pos:column="36"/></operator></expr>)<pos:position pos:line="21" pos:column="37"/></condition><then pos:line="21" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="5">sstrncpy<pos:position pos:line="22" pos:column="13"/></name> <argument_list pos:line="22" pos:column="14">(<argument><expr><name><name pos:line="22" pos:column="15">vl<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">.<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">host<pos:position pos:line="22" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="24">hostname_g<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="36">sizeof <argument_list pos:line="22" pos:column="43">(<argument><expr><name><name pos:line="22" pos:column="44">vl<pos:position pos:line="22" pos:column="46"/></name><operator pos:line="22" pos:column="46">.<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="47">host<pos:position pos:line="22" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt></block></then>
  <else pos:line="23" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">sstrncpy<pos:position pos:line="24" pos:column="13"/></name> <argument_list pos:line="24" pos:column="14">(<argument><expr><name><name pos:line="24" pos:column="15">vl<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">.<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">host<pos:position pos:line="24" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="24">daemon_address<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="40">sizeof <argument_list pos:line="24" pos:column="47">(<argument><expr><name><name pos:line="24" pos:column="48">vl<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">.<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="51">host<pos:position pos:line="24" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt></block></else></if>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">sstrncpy<pos:position pos:line="25" pos:column="11"/></name> <argument_list pos:line="25" pos:column="12">(<argument><expr><name><name pos:line="25" pos:column="13">vl<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">.<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">plugin<pos:position pos:line="25" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="24">"rrdcached"<pos:position pos:line="25" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="37">sizeof <argument_list pos:line="25" pos:column="44">(<argument><expr><name><name pos:line="25" pos:column="45">vl<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">.<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="48">plugin<pos:position pos:line="25" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">rrd_clear_error<pos:position pos:line="27" pos:column="18"/></name> <argument_list pos:line="27" pos:column="19">()<pos:position pos:line="27" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="28" pos:column="3">status<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <call><name pos:line="28" pos:column="12">rrdc_connect<pos:position pos:line="28" pos:column="24"/></name> <argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">daemon_address<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">status<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">!=<pos:position pos:line="29" pos:column="16"/></operator> <literal type="number" pos:line="29" pos:column="17">0<pos:position pos:line="29" pos:column="18"/></literal></expr>)<pos:position pos:line="29" pos:column="19"/></condition><then pos:line="29" pos:column="19">
  <block pos:line="30" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ERROR<pos:position pos:line="31" pos:column="10"/></name> <argument_list pos:line="31" pos:column="11">(<argument><expr><literal type="string" pos:line="31" pos:column="12">"rrdcached plugin: Failed to connect to RRDCacheD "<pos:position pos:line="31" pos:column="63"/></literal>
        <literal type="string" pos:line="32" pos:column="9">"at %s: %s (status=%d)"<pos:position pos:line="32" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">daemon_address<pos:position pos:line="32" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="50">rrd_get_error<pos:position pos:line="32" pos:column="63"/></name> <argument_list pos:line="32" pos:column="64">()<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="68">status<pos:position pos:line="32" pos:column="74"/></name></expr></argument>)<pos:position pos:line="32" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="76"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><operator pos:line="33" pos:column="13">-<pos:position pos:line="33" pos:column="14"/></operator><literal type="number" pos:line="33" pos:column="14">1<pos:position pos:line="33" pos:column="15"/></literal><operator pos:line="33" pos:column="15">)<pos:position pos:line="33" pos:column="16"/></operator></expr>;<pos:position pos:line="33" pos:column="17"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <while pos:line="36" pos:column="3">while <condition pos:line="36" pos:column="9">(<expr><literal type="number" pos:line="36" pos:column="10">42<pos:position pos:line="36" pos:column="12"/></literal></expr>)<pos:position pos:line="36" pos:column="13"/></condition>
  <block pos:line="37" pos:column="3">{
    <comment type="block" pos:line="38" pos:column="5">/* The RRD client lib does not provide any means for checking a
     * connection, hence we'll have to retry upon failed operations. */</comment>
    <expr_stmt><expr><name pos:line="40" pos:column="5">head<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <name pos:line="40" pos:column="12">NULL<pos:position pos:line="40" pos:column="16"/></name></expr>;<pos:position pos:line="40" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">rrd_clear_error<pos:position pos:line="41" pos:column="20"/></name> <argument_list pos:line="41" pos:column="21">()<pos:position pos:line="41" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">status<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">rrdc_stats_get<pos:position pos:line="42" pos:column="28"/></name> <argument_list pos:line="42" pos:column="29">(<argument><expr><operator pos:line="42" pos:column="30">&amp;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="31">head<pos:position pos:line="42" pos:column="35"/></name></expr></argument>)<pos:position pos:line="42" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">status<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">==<pos:position pos:line="43" pos:column="18"/></operator> <literal type="number" pos:line="43" pos:column="19">0<pos:position pos:line="43" pos:column="20"/></literal></expr>)<pos:position pos:line="43" pos:column="21"/></condition><then pos:line="43" pos:column="21">
      <block type="pseudo"><break pos:line="44" pos:column="7">break;<pos:position pos:line="44" pos:column="13"/></break></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">!<pos:position pos:line="46" pos:column="10"/></operator> <name pos:line="46" pos:column="11">retried<pos:position pos:line="46" pos:column="18"/></name></expr>)<pos:position pos:line="46" pos:column="19"/></condition><then pos:line="46" pos:column="19">
    <block pos:line="47" pos:column="5">{
      <expr_stmt><expr><name pos:line="48" pos:column="7">retried<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">=<pos:position pos:line="48" pos:column="16"/></operator> <literal type="number" pos:line="48" pos:column="17">1<pos:position pos:line="48" pos:column="18"/></literal></expr>;<pos:position pos:line="48" pos:column="19"/></expr_stmt>
      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><call><name pos:line="49" pos:column="11">try_reconnect<pos:position pos:line="49" pos:column="24"/></name> <argument_list pos:line="49" pos:column="25">()<pos:position pos:line="49" pos:column="27"/></argument_list></call> <operator pos:line="49" pos:column="28">==<pos:position pos:line="49" pos:column="30"/></operator> <literal type="number" pos:line="49" pos:column="31">0<pos:position pos:line="49" pos:column="32"/></literal></expr>)<pos:position pos:line="49" pos:column="33"/></condition><then pos:line="49" pos:column="33">
        <block type="pseudo"><continue pos:line="50" pos:column="9">continue;<pos:position pos:line="50" pos:column="18"/></continue></block></then></if>
      <comment type="block" pos:line="51" pos:column="7">/* else: report the error and fail */</comment>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="54" pos:column="5">ERROR<pos:position pos:line="54" pos:column="10"/></name> <argument_list pos:line="54" pos:column="11">(<argument><expr><literal type="string" pos:line="54" pos:column="12">"rrdcached plugin: rrdc_stats_get failed: %s (status=%i)."<pos:position pos:line="54" pos:column="70"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="55" pos:column="9">rrd_get_error<pos:position pos:line="55" pos:column="22"/></name> <argument_list pos:line="55" pos:column="23">()<pos:position pos:line="55" pos:column="25"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="55" pos:column="27">status<pos:position pos:line="55" pos:column="33"/></name></expr></argument>)<pos:position pos:line="55" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>
    <return pos:line="56" pos:column="5">return <expr><operator pos:line="56" pos:column="12">(<pos:position pos:line="56" pos:column="13"/></operator><operator pos:line="56" pos:column="13">-<pos:position pos:line="56" pos:column="14"/></operator><literal type="number" pos:line="56" pos:column="14">1<pos:position pos:line="56" pos:column="15"/></literal><operator pos:line="56" pos:column="15">)<pos:position pos:line="56" pos:column="16"/></operator></expr>;<pos:position pos:line="56" pos:column="17"/></return>
  }<pos:position pos:line="57" pos:column="4"/></block></while>

  <for pos:line="59" pos:column="3">for <control pos:line="59" pos:column="7">(<init><expr><name pos:line="59" pos:column="8">ptr<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <name pos:line="59" pos:column="14">head<pos:position pos:line="59" pos:column="18"/></name></expr>;<pos:position pos:line="59" pos:column="19"/></init> <condition><expr><name pos:line="59" pos:column="20">ptr<pos:position pos:line="59" pos:column="23"/></name> <operator pos:line="59" pos:column="24">!=<pos:position pos:line="59" pos:column="26"/></operator> <name pos:line="59" pos:column="27">NULL<pos:position pos:line="59" pos:column="31"/></name></expr>;<pos:position pos:line="59" pos:column="32"/></condition> <incr><expr><name pos:line="59" pos:column="33">ptr<pos:position pos:line="59" pos:column="36"/></name> <operator pos:line="59" pos:column="37">=<pos:position pos:line="59" pos:column="38"/></operator> <name><name pos:line="59" pos:column="39">ptr<pos:position pos:line="59" pos:column="42"/></name><operator pos:line="59" pos:column="42">-&gt;<pos:position pos:line="59" pos:column="47"/></operator><name pos:line="59" pos:column="44">next<pos:position pos:line="59" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="59" pos:column="49"/></control>
  <block pos:line="60" pos:column="3">{
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name><name pos:line="61" pos:column="9">ptr<pos:position pos:line="61" pos:column="12"/></name><operator pos:line="61" pos:column="12">-&gt;<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="14">type<pos:position pos:line="61" pos:column="18"/></name></name> <operator pos:line="61" pos:column="19">==<pos:position pos:line="61" pos:column="21"/></operator> <name pos:line="61" pos:column="22">RRDC_STATS_TYPE_GAUGE<pos:position pos:line="61" pos:column="43"/></name></expr>)<pos:position pos:line="61" pos:column="44"/></condition><then pos:line="61" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="62" pos:column="7">values<pos:position pos:line="62" pos:column="13"/></name><index pos:line="62" pos:column="13">[<expr><literal type="number" pos:line="62" pos:column="14">0<pos:position pos:line="62" pos:column="15"/></literal></expr>]<pos:position pos:line="62" pos:column="16"/></index></name><operator pos:line="62" pos:column="16">.<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="17">gauge<pos:position pos:line="62" pos:column="22"/></name> <operator pos:line="62" pos:column="23">=<pos:position pos:line="62" pos:column="24"/></operator> <operator pos:line="62" pos:column="25">(<pos:position pos:line="62" pos:column="26"/></operator><name pos:line="62" pos:column="26">gauge_t<pos:position pos:line="62" pos:column="33"/></name><operator pos:line="62" pos:column="33">)<pos:position pos:line="62" pos:column="34"/></operator> <name><name pos:line="62" pos:column="35">ptr<pos:position pos:line="62" pos:column="38"/></name><operator pos:line="62" pos:column="38">-&gt;<pos:position pos:line="62" pos:column="43"/></operator><name pos:line="62" pos:column="40">value<pos:position pos:line="62" pos:column="45"/></name><operator pos:line="62" pos:column="45">.<pos:position pos:line="62" pos:column="46"/></operator><name pos:line="62" pos:column="46">gauge<pos:position pos:line="62" pos:column="51"/></name></name></expr>;<pos:position pos:line="62" pos:column="52"/></expr_stmt></block></then>
    <elseif pos:line="63" pos:column="5">else <if pos:line="63" pos:column="10">if <condition pos:line="63" pos:column="13">(<expr><name><name pos:line="63" pos:column="14">ptr<pos:position pos:line="63" pos:column="17"/></name><operator pos:line="63" pos:column="17">-&gt;<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="19">type<pos:position pos:line="63" pos:column="23"/></name></name> <operator pos:line="63" pos:column="24">==<pos:position pos:line="63" pos:column="26"/></operator> <name pos:line="63" pos:column="27">RRDC_STATS_TYPE_COUNTER<pos:position pos:line="63" pos:column="50"/></name></expr>)<pos:position pos:line="63" pos:column="51"/></condition><then pos:line="63" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="64" pos:column="7">values<pos:position pos:line="64" pos:column="13"/></name><index pos:line="64" pos:column="13">[<expr><literal type="number" pos:line="64" pos:column="14">0<pos:position pos:line="64" pos:column="15"/></literal></expr>]<pos:position pos:line="64" pos:column="16"/></index></name><operator pos:line="64" pos:column="16">.<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="17">counter<pos:position pos:line="64" pos:column="24"/></name> <operator pos:line="64" pos:column="25">=<pos:position pos:line="64" pos:column="26"/></operator> <operator pos:line="64" pos:column="27">(<pos:position pos:line="64" pos:column="28"/></operator><name pos:line="64" pos:column="28">counter_t<pos:position pos:line="64" pos:column="37"/></name><operator pos:line="64" pos:column="37">)<pos:position pos:line="64" pos:column="38"/></operator> <name><name pos:line="64" pos:column="39">ptr<pos:position pos:line="64" pos:column="42"/></name><operator pos:line="64" pos:column="42">-&gt;<pos:position pos:line="64" pos:column="47"/></operator><name pos:line="64" pos:column="44">value<pos:position pos:line="64" pos:column="49"/></name><operator pos:line="64" pos:column="49">.<pos:position pos:line="64" pos:column="50"/></operator><name pos:line="64" pos:column="50">counter<pos:position pos:line="64" pos:column="57"/></name></name></expr>;<pos:position pos:line="64" pos:column="58"/></expr_stmt></block></then></if></elseif>
    <else pos:line="65" pos:column="5">else
      <block type="pseudo"><continue pos:line="66" pos:column="7">continue;<pos:position pos:line="66" pos:column="16"/></continue></block></else></if>

    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><call><name pos:line="68" pos:column="9">strcasecmp<pos:position pos:line="68" pos:column="19"/></name> <argument_list pos:line="68" pos:column="20">(<argument><expr><literal type="string" pos:line="68" pos:column="21">"QueueLength"<pos:position pos:line="68" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="36">ptr<pos:position pos:line="68" pos:column="39"/></name><operator pos:line="68" pos:column="39">-&gt;<pos:position pos:line="68" pos:column="44"/></operator><name pos:line="68" pos:column="41">name<pos:position pos:line="68" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="46"/></argument_list></call> <operator pos:line="68" pos:column="47">==<pos:position pos:line="68" pos:column="49"/></operator> <literal type="number" pos:line="68" pos:column="50">0<pos:position pos:line="68" pos:column="51"/></literal></expr>)<pos:position pos:line="68" pos:column="52"/></condition><then pos:line="68" pos:column="52">
    <block pos:line="69" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">sstrncpy<pos:position pos:line="70" pos:column="15"/></name> <argument_list pos:line="70" pos:column="16">(<argument><expr><name><name pos:line="70" pos:column="17">vl<pos:position pos:line="70" pos:column="19"/></name><operator pos:line="70" pos:column="19">.<pos:position pos:line="70" pos:column="20"/></operator><name pos:line="70" pos:column="20">type<pos:position pos:line="70" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="26">"queue_length"<pos:position pos:line="70" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="42">sizeof <argument_list pos:line="70" pos:column="49">(<argument><expr><name><name pos:line="70" pos:column="50">vl<pos:position pos:line="70" pos:column="52"/></name><operator pos:line="70" pos:column="52">.<pos:position pos:line="70" pos:column="53"/></operator><name pos:line="70" pos:column="53">type<pos:position pos:line="70" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="71" pos:column="7">sstrncpy<pos:position pos:line="71" pos:column="15"/></name> <argument_list pos:line="71" pos:column="16">(<argument><expr><name><name pos:line="71" pos:column="17">vl<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">.<pos:position pos:line="71" pos:column="20"/></operator><name pos:line="71" pos:column="20">type_instance<pos:position pos:line="71" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="35">""<pos:position pos:line="71" pos:column="37"/></literal></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="39">sizeof <argument_list pos:line="71" pos:column="46">(<argument><expr><name><name pos:line="71" pos:column="47">vl<pos:position pos:line="71" pos:column="49"/></name><operator pos:line="71" pos:column="49">.<pos:position pos:line="71" pos:column="50"/></operator><name pos:line="71" pos:column="50">type_instance<pos:position pos:line="71" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="71" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then>
    <elseif pos:line="73" pos:column="5">else <if pos:line="73" pos:column="10">if <condition pos:line="73" pos:column="13">(<expr><call><name pos:line="73" pos:column="14">strcasecmp<pos:position pos:line="73" pos:column="24"/></name> <argument_list pos:line="73" pos:column="25">(<argument><expr><literal type="string" pos:line="73" pos:column="26">"UpdatesWritten"<pos:position pos:line="73" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="44">ptr<pos:position pos:line="73" pos:column="47"/></name><operator pos:line="73" pos:column="47">-&gt;<pos:position pos:line="73" pos:column="52"/></operator><name pos:line="73" pos:column="49">name<pos:position pos:line="73" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="54"/></argument_list></call> <operator pos:line="73" pos:column="55">==<pos:position pos:line="73" pos:column="57"/></operator> <literal type="number" pos:line="73" pos:column="58">0<pos:position pos:line="73" pos:column="59"/></literal></expr>)<pos:position pos:line="73" pos:column="60"/></condition><then pos:line="73" pos:column="60">
    <block pos:line="74" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="75" pos:column="7">sstrncpy<pos:position pos:line="75" pos:column="15"/></name> <argument_list pos:line="75" pos:column="16">(<argument><expr><name><name pos:line="75" pos:column="17">vl<pos:position pos:line="75" pos:column="19"/></name><operator pos:line="75" pos:column="19">.<pos:position pos:line="75" pos:column="20"/></operator><name pos:line="75" pos:column="20">type<pos:position pos:line="75" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="26">"operations"<pos:position pos:line="75" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="75" pos:column="40">sizeof <argument_list pos:line="75" pos:column="47">(<argument><expr><name><name pos:line="75" pos:column="48">vl<pos:position pos:line="75" pos:column="50"/></name><operator pos:line="75" pos:column="50">.<pos:position pos:line="75" pos:column="51"/></operator><name pos:line="75" pos:column="51">type<pos:position pos:line="75" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="75" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="76" pos:column="7">sstrncpy<pos:position pos:line="76" pos:column="15"/></name> <argument_list pos:line="76" pos:column="16">(<argument><expr><name><name pos:line="76" pos:column="17">vl<pos:position pos:line="76" pos:column="19"/></name><operator pos:line="76" pos:column="19">.<pos:position pos:line="76" pos:column="20"/></operator><name pos:line="76" pos:column="20">type_instance<pos:position pos:line="76" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="35">"write-updates"<pos:position pos:line="76" pos:column="50"/></literal></expr></argument>, <argument><expr><sizeof pos:line="76" pos:column="52">sizeof <argument_list pos:line="76" pos:column="59">(<argument><expr><name><name pos:line="76" pos:column="60">vl<pos:position pos:line="76" pos:column="62"/></name><operator pos:line="76" pos:column="62">.<pos:position pos:line="76" pos:column="63"/></operator><name pos:line="76" pos:column="63">type_instance<pos:position pos:line="76" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="76" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="78" pos:column="5">else <if pos:line="78" pos:column="10">if <condition pos:line="78" pos:column="13">(<expr><call><name pos:line="78" pos:column="14">strcasecmp<pos:position pos:line="78" pos:column="24"/></name> <argument_list pos:line="78" pos:column="25">(<argument><expr><literal type="string" pos:line="78" pos:column="26">"DataSetsWritten"<pos:position pos:line="78" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="45">ptr<pos:position pos:line="78" pos:column="48"/></name><operator pos:line="78" pos:column="48">-&gt;<pos:position pos:line="78" pos:column="53"/></operator><name pos:line="78" pos:column="50">name<pos:position pos:line="78" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="55"/></argument_list></call> <operator pos:line="78" pos:column="56">==<pos:position pos:line="78" pos:column="58"/></operator> <literal type="number" pos:line="78" pos:column="59">0<pos:position pos:line="78" pos:column="60"/></literal></expr>)<pos:position pos:line="78" pos:column="61"/></condition><then pos:line="78" pos:column="61">
    <block pos:line="79" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="80" pos:column="7">sstrncpy<pos:position pos:line="80" pos:column="15"/></name> <argument_list pos:line="80" pos:column="16">(<argument><expr><name><name pos:line="80" pos:column="17">vl<pos:position pos:line="80" pos:column="19"/></name><operator pos:line="80" pos:column="19">.<pos:position pos:line="80" pos:column="20"/></operator><name pos:line="80" pos:column="20">type<pos:position pos:line="80" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="26">"operations"<pos:position pos:line="80" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="80" pos:column="40">sizeof <argument_list pos:line="80" pos:column="47">(<argument><expr><name><name pos:line="80" pos:column="48">vl<pos:position pos:line="80" pos:column="50"/></name><operator pos:line="80" pos:column="50">.<pos:position pos:line="80" pos:column="51"/></operator><name pos:line="80" pos:column="51">type<pos:position pos:line="80" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="80" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">sstrncpy<pos:position pos:line="81" pos:column="15"/></name> <argument_list pos:line="81" pos:column="16">(<argument><expr><name><name pos:line="81" pos:column="17">vl<pos:position pos:line="81" pos:column="19"/></name><operator pos:line="81" pos:column="19">.<pos:position pos:line="81" pos:column="20"/></operator><name pos:line="81" pos:column="20">type_instance<pos:position pos:line="81" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="35">"write-data_sets"<pos:position pos:line="81" pos:column="52"/></literal></expr></argument>,
          <argument><expr><sizeof pos:line="82" pos:column="11">sizeof <argument_list pos:line="82" pos:column="18">(<argument><expr><name><name pos:line="82" pos:column="19">vl<pos:position pos:line="82" pos:column="21"/></name><operator pos:line="82" pos:column="21">.<pos:position pos:line="82" pos:column="22"/></operator><name pos:line="82" pos:column="22">type_instance<pos:position pos:line="82" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="82" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="84" pos:column="5">else <if pos:line="84" pos:column="10">if <condition pos:line="84" pos:column="13">(<expr><call><name pos:line="84" pos:column="14">strcasecmp<pos:position pos:line="84" pos:column="24"/></name> <argument_list pos:line="84" pos:column="25">(<argument><expr><literal type="string" pos:line="84" pos:column="26">"TreeNodesNumber"<pos:position pos:line="84" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="45">ptr<pos:position pos:line="84" pos:column="48"/></name><operator pos:line="84" pos:column="48">-&gt;<pos:position pos:line="84" pos:column="53"/></operator><name pos:line="84" pos:column="50">name<pos:position pos:line="84" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="55"/></argument_list></call> <operator pos:line="84" pos:column="56">==<pos:position pos:line="84" pos:column="58"/></operator> <literal type="number" pos:line="84" pos:column="59">0<pos:position pos:line="84" pos:column="60"/></literal></expr>)<pos:position pos:line="84" pos:column="61"/></condition><then pos:line="84" pos:column="61">
    <block pos:line="85" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="86" pos:column="7">sstrncpy<pos:position pos:line="86" pos:column="15"/></name> <argument_list pos:line="86" pos:column="16">(<argument><expr><name><name pos:line="86" pos:column="17">vl<pos:position pos:line="86" pos:column="19"/></name><operator pos:line="86" pos:column="19">.<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="20">type<pos:position pos:line="86" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="26">"gauge"<pos:position pos:line="86" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="86" pos:column="35">sizeof <argument_list pos:line="86" pos:column="42">(<argument><expr><name><name pos:line="86" pos:column="43">vl<pos:position pos:line="86" pos:column="45"/></name><operator pos:line="86" pos:column="45">.<pos:position pos:line="86" pos:column="46"/></operator><name pos:line="86" pos:column="46">type<pos:position pos:line="86" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="86" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="87" pos:column="7">sstrncpy<pos:position pos:line="87" pos:column="15"/></name> <argument_list pos:line="87" pos:column="16">(<argument><expr><name><name pos:line="87" pos:column="17">vl<pos:position pos:line="87" pos:column="19"/></name><operator pos:line="87" pos:column="19">.<pos:position pos:line="87" pos:column="20"/></operator><name pos:line="87" pos:column="20">type_instance<pos:position pos:line="87" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="35">"tree_nodes"<pos:position pos:line="87" pos:column="47"/></literal></expr></argument>, <argument><expr><sizeof pos:line="87" pos:column="49">sizeof <argument_list pos:line="87" pos:column="56">(<argument><expr><name><name pos:line="87" pos:column="57">vl<pos:position pos:line="87" pos:column="59"/></name><operator pos:line="87" pos:column="59">.<pos:position pos:line="87" pos:column="60"/></operator><name pos:line="87" pos:column="60">type_instance<pos:position pos:line="87" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="87" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="89" pos:column="5">else <if pos:line="89" pos:column="10">if <condition pos:line="89" pos:column="13">(<expr><call><name pos:line="89" pos:column="14">strcasecmp<pos:position pos:line="89" pos:column="24"/></name> <argument_list pos:line="89" pos:column="25">(<argument><expr><literal type="string" pos:line="89" pos:column="26">"TreeDepth"<pos:position pos:line="89" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="39">ptr<pos:position pos:line="89" pos:column="42"/></name><operator pos:line="89" pos:column="42">-&gt;<pos:position pos:line="89" pos:column="47"/></operator><name pos:line="89" pos:column="44">name<pos:position pos:line="89" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="49"/></argument_list></call> <operator pos:line="89" pos:column="50">==<pos:position pos:line="89" pos:column="52"/></operator> <literal type="number" pos:line="89" pos:column="53">0<pos:position pos:line="89" pos:column="54"/></literal></expr>)<pos:position pos:line="89" pos:column="55"/></condition><then pos:line="89" pos:column="55">
    <block pos:line="90" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">sstrncpy<pos:position pos:line="91" pos:column="15"/></name> <argument_list pos:line="91" pos:column="16">(<argument><expr><name><name pos:line="91" pos:column="17">vl<pos:position pos:line="91" pos:column="19"/></name><operator pos:line="91" pos:column="19">.<pos:position pos:line="91" pos:column="20"/></operator><name pos:line="91" pos:column="20">type<pos:position pos:line="91" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="26">"gauge"<pos:position pos:line="91" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="91" pos:column="35">sizeof <argument_list pos:line="91" pos:column="42">(<argument><expr><name><name pos:line="91" pos:column="43">vl<pos:position pos:line="91" pos:column="45"/></name><operator pos:line="91" pos:column="45">.<pos:position pos:line="91" pos:column="46"/></operator><name pos:line="91" pos:column="46">type<pos:position pos:line="91" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="91" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="92" pos:column="7">sstrncpy<pos:position pos:line="92" pos:column="15"/></name> <argument_list pos:line="92" pos:column="16">(<argument><expr><name><name pos:line="92" pos:column="17">vl<pos:position pos:line="92" pos:column="19"/></name><operator pos:line="92" pos:column="19">.<pos:position pos:line="92" pos:column="20"/></operator><name pos:line="92" pos:column="20">type_instance<pos:position pos:line="92" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="35">"tree_depth"<pos:position pos:line="92" pos:column="47"/></literal></expr></argument>, <argument><expr><sizeof pos:line="92" pos:column="49">sizeof <argument_list pos:line="92" pos:column="56">(<argument><expr><name><name pos:line="92" pos:column="57">vl<pos:position pos:line="92" pos:column="59"/></name><operator pos:line="92" pos:column="59">.<pos:position pos:line="92" pos:column="60"/></operator><name pos:line="92" pos:column="60">type_instance<pos:position pos:line="92" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="92" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="94" pos:column="5">else <if pos:line="94" pos:column="10">if <condition pos:line="94" pos:column="13">(<expr><call><name pos:line="94" pos:column="14">strcasecmp<pos:position pos:line="94" pos:column="24"/></name> <argument_list pos:line="94" pos:column="25">(<argument><expr><literal type="string" pos:line="94" pos:column="26">"FlushesReceived"<pos:position pos:line="94" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="45">ptr<pos:position pos:line="94" pos:column="48"/></name><operator pos:line="94" pos:column="48">-&gt;<pos:position pos:line="94" pos:column="53"/></operator><name pos:line="94" pos:column="50">name<pos:position pos:line="94" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="55"/></argument_list></call> <operator pos:line="94" pos:column="56">==<pos:position pos:line="94" pos:column="58"/></operator> <literal type="number" pos:line="94" pos:column="59">0<pos:position pos:line="94" pos:column="60"/></literal></expr>)<pos:position pos:line="94" pos:column="61"/></condition><then pos:line="94" pos:column="61">
    <block pos:line="95" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="96" pos:column="7">sstrncpy<pos:position pos:line="96" pos:column="15"/></name> <argument_list pos:line="96" pos:column="16">(<argument><expr><name><name pos:line="96" pos:column="17">vl<pos:position pos:line="96" pos:column="19"/></name><operator pos:line="96" pos:column="19">.<pos:position pos:line="96" pos:column="20"/></operator><name pos:line="96" pos:column="20">type<pos:position pos:line="96" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="26">"operations"<pos:position pos:line="96" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="96" pos:column="40">sizeof <argument_list pos:line="96" pos:column="47">(<argument><expr><name><name pos:line="96" pos:column="48">vl<pos:position pos:line="96" pos:column="50"/></name><operator pos:line="96" pos:column="50">.<pos:position pos:line="96" pos:column="51"/></operator><name pos:line="96" pos:column="51">type<pos:position pos:line="96" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="96" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">sstrncpy<pos:position pos:line="97" pos:column="15"/></name> <argument_list pos:line="97" pos:column="16">(<argument><expr><name><name pos:line="97" pos:column="17">vl<pos:position pos:line="97" pos:column="19"/></name><operator pos:line="97" pos:column="19">.<pos:position pos:line="97" pos:column="20"/></operator><name pos:line="97" pos:column="20">type_instance<pos:position pos:line="97" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="35">"receive-flush"<pos:position pos:line="97" pos:column="50"/></literal></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="52">sizeof <argument_list pos:line="97" pos:column="59">(<argument><expr><name><name pos:line="97" pos:column="60">vl<pos:position pos:line="97" pos:column="62"/></name><operator pos:line="97" pos:column="62">.<pos:position pos:line="97" pos:column="63"/></operator><name pos:line="97" pos:column="63">type_instance<pos:position pos:line="97" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="97" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="98" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="99" pos:column="5">else <if pos:line="99" pos:column="10">if <condition pos:line="99" pos:column="13">(<expr><call><name pos:line="99" pos:column="14">strcasecmp<pos:position pos:line="99" pos:column="24"/></name> <argument_list pos:line="99" pos:column="25">(<argument><expr><literal type="string" pos:line="99" pos:column="26">"JournalBytes"<pos:position pos:line="99" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="42">ptr<pos:position pos:line="99" pos:column="45"/></name><operator pos:line="99" pos:column="45">-&gt;<pos:position pos:line="99" pos:column="50"/></operator><name pos:line="99" pos:column="47">name<pos:position pos:line="99" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="52"/></argument_list></call> <operator pos:line="99" pos:column="53">==<pos:position pos:line="99" pos:column="55"/></operator> <literal type="number" pos:line="99" pos:column="56">0<pos:position pos:line="99" pos:column="57"/></literal></expr>)<pos:position pos:line="99" pos:column="58"/></condition><then pos:line="99" pos:column="58">
    <block pos:line="100" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="101" pos:column="7">sstrncpy<pos:position pos:line="101" pos:column="15"/></name> <argument_list pos:line="101" pos:column="16">(<argument><expr><name><name pos:line="101" pos:column="17">vl<pos:position pos:line="101" pos:column="19"/></name><operator pos:line="101" pos:column="19">.<pos:position pos:line="101" pos:column="20"/></operator><name pos:line="101" pos:column="20">type<pos:position pos:line="101" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="26">"counter"<pos:position pos:line="101" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="101" pos:column="37">sizeof <argument_list pos:line="101" pos:column="44">(<argument><expr><name><name pos:line="101" pos:column="45">vl<pos:position pos:line="101" pos:column="47"/></name><operator pos:line="101" pos:column="47">.<pos:position pos:line="101" pos:column="48"/></operator><name pos:line="101" pos:column="48">type<pos:position pos:line="101" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="101" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="102" pos:column="7">sstrncpy<pos:position pos:line="102" pos:column="15"/></name> <argument_list pos:line="102" pos:column="16">(<argument><expr><name><name pos:line="102" pos:column="17">vl<pos:position pos:line="102" pos:column="19"/></name><operator pos:line="102" pos:column="19">.<pos:position pos:line="102" pos:column="20"/></operator><name pos:line="102" pos:column="20">type_instance<pos:position pos:line="102" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="35">"journal-bytes"<pos:position pos:line="102" pos:column="50"/></literal></expr></argument>, <argument><expr><sizeof pos:line="102" pos:column="52">sizeof <argument_list pos:line="102" pos:column="59">(<argument><expr><name><name pos:line="102" pos:column="60">vl<pos:position pos:line="102" pos:column="62"/></name><operator pos:line="102" pos:column="62">.<pos:position pos:line="102" pos:column="63"/></operator><name pos:line="102" pos:column="63">type_instance<pos:position pos:line="102" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="102" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="103" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="104" pos:column="5">else <if pos:line="104" pos:column="10">if <condition pos:line="104" pos:column="13">(<expr><call><name pos:line="104" pos:column="14">strcasecmp<pos:position pos:line="104" pos:column="24"/></name> <argument_list pos:line="104" pos:column="25">(<argument><expr><literal type="string" pos:line="104" pos:column="26">"JournalRotate"<pos:position pos:line="104" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="43">ptr<pos:position pos:line="104" pos:column="46"/></name><operator pos:line="104" pos:column="46">-&gt;<pos:position pos:line="104" pos:column="51"/></operator><name pos:line="104" pos:column="48">name<pos:position pos:line="104" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="53"/></argument_list></call> <operator pos:line="104" pos:column="54">==<pos:position pos:line="104" pos:column="56"/></operator> <literal type="number" pos:line="104" pos:column="57">0<pos:position pos:line="104" pos:column="58"/></literal></expr>)<pos:position pos:line="104" pos:column="59"/></condition><then pos:line="104" pos:column="59">
    <block pos:line="105" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="106" pos:column="7">sstrncpy<pos:position pos:line="106" pos:column="15"/></name> <argument_list pos:line="106" pos:column="16">(<argument><expr><name><name pos:line="106" pos:column="17">vl<pos:position pos:line="106" pos:column="19"/></name><operator pos:line="106" pos:column="19">.<pos:position pos:line="106" pos:column="20"/></operator><name pos:line="106" pos:column="20">type<pos:position pos:line="106" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="26">"counter"<pos:position pos:line="106" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="106" pos:column="37">sizeof <argument_list pos:line="106" pos:column="44">(<argument><expr><name><name pos:line="106" pos:column="45">vl<pos:position pos:line="106" pos:column="47"/></name><operator pos:line="106" pos:column="47">.<pos:position pos:line="106" pos:column="48"/></operator><name pos:line="106" pos:column="48">type<pos:position pos:line="106" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="106" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="107" pos:column="7">sstrncpy<pos:position pos:line="107" pos:column="15"/></name> <argument_list pos:line="107" pos:column="16">(<argument><expr><name><name pos:line="107" pos:column="17">vl<pos:position pos:line="107" pos:column="19"/></name><operator pos:line="107" pos:column="19">.<pos:position pos:line="107" pos:column="20"/></operator><name pos:line="107" pos:column="20">type_instance<pos:position pos:line="107" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="35">"journal-rotates"<pos:position pos:line="107" pos:column="52"/></literal></expr></argument>, <argument><expr><sizeof pos:line="107" pos:column="54">sizeof <argument_list pos:line="107" pos:column="61">(<argument><expr><name><name pos:line="107" pos:column="62">vl<pos:position pos:line="107" pos:column="64"/></name><operator pos:line="107" pos:column="64">.<pos:position pos:line="107" pos:column="65"/></operator><name pos:line="107" pos:column="65">type_instance<pos:position pos:line="107" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="107" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="108" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="109" pos:column="5">else <if pos:line="109" pos:column="10">if <condition pos:line="109" pos:column="13">(<expr><call><name pos:line="109" pos:column="14">strcasecmp<pos:position pos:line="109" pos:column="24"/></name> <argument_list pos:line="109" pos:column="25">(<argument><expr><literal type="string" pos:line="109" pos:column="26">"UpdatesReceived"<pos:position pos:line="109" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="45">ptr<pos:position pos:line="109" pos:column="48"/></name><operator pos:line="109" pos:column="48">-&gt;<pos:position pos:line="109" pos:column="53"/></operator><name pos:line="109" pos:column="50">name<pos:position pos:line="109" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="55"/></argument_list></call> <operator pos:line="109" pos:column="56">==<pos:position pos:line="109" pos:column="58"/></operator> <literal type="number" pos:line="109" pos:column="59">0<pos:position pos:line="109" pos:column="60"/></literal></expr>)<pos:position pos:line="109" pos:column="61"/></condition><then pos:line="109" pos:column="61">
    <block pos:line="110" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="111" pos:column="7">sstrncpy<pos:position pos:line="111" pos:column="15"/></name> <argument_list pos:line="111" pos:column="16">(<argument><expr><name><name pos:line="111" pos:column="17">vl<pos:position pos:line="111" pos:column="19"/></name><operator pos:line="111" pos:column="19">.<pos:position pos:line="111" pos:column="20"/></operator><name pos:line="111" pos:column="20">type<pos:position pos:line="111" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="26">"operations"<pos:position pos:line="111" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="111" pos:column="40">sizeof <argument_list pos:line="111" pos:column="47">(<argument><expr><name><name pos:line="111" pos:column="48">vl<pos:position pos:line="111" pos:column="50"/></name><operator pos:line="111" pos:column="50">.<pos:position pos:line="111" pos:column="51"/></operator><name pos:line="111" pos:column="51">type<pos:position pos:line="111" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="111" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="112" pos:column="7">sstrncpy<pos:position pos:line="112" pos:column="15"/></name> <argument_list pos:line="112" pos:column="16">(<argument><expr><name><name pos:line="112" pos:column="17">vl<pos:position pos:line="112" pos:column="19"/></name><operator pos:line="112" pos:column="19">.<pos:position pos:line="112" pos:column="20"/></operator><name pos:line="112" pos:column="20">type_instance<pos:position pos:line="112" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="35">"receive-update"<pos:position pos:line="112" pos:column="51"/></literal></expr></argument>, <argument><expr><sizeof pos:line="112" pos:column="53">sizeof <argument_list pos:line="112" pos:column="60">(<argument><expr><name><name pos:line="112" pos:column="61">vl<pos:position pos:line="112" pos:column="63"/></name><operator pos:line="112" pos:column="63">.<pos:position pos:line="112" pos:column="64"/></operator><name pos:line="112" pos:column="64">type_instance<pos:position pos:line="112" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="112" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="80"/></expr_stmt>
    }<pos:position pos:line="113" pos:column="6"/></block></then></if></elseif>
    <else pos:line="114" pos:column="5">else
    <block pos:line="115" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="116" pos:column="7">DEBUG<pos:position pos:line="116" pos:column="12"/></name> <argument_list pos:line="116" pos:column="13">(<argument><expr><literal type="string" pos:line="116" pos:column="14">"rrdcached plugin: rc_read: Unknown statistic `%s'."<pos:position pos:line="116" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="68">ptr<pos:position pos:line="116" pos:column="71"/></name><operator pos:line="116" pos:column="71">-&gt;<pos:position pos:line="116" pos:column="76"/></operator><name pos:line="116" pos:column="73">name<pos:position pos:line="116" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="79"/></expr_stmt>
      <continue pos:line="117" pos:column="7">continue;<pos:position pos:line="117" pos:column="16"/></continue>
    }<pos:position pos:line="118" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="120" pos:column="5">plugin_dispatch_values<pos:position pos:line="120" pos:column="27"/></name> <argument_list pos:line="120" pos:column="28">(<argument><expr><operator pos:line="120" pos:column="29">&amp;<pos:position pos:line="120" pos:column="34"/></operator><name pos:line="120" pos:column="30">vl<pos:position pos:line="120" pos:column="32"/></name></expr></argument>)<pos:position pos:line="120" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="121" pos:column="4"/></block></for> <comment type="block" pos:line="121" pos:column="5">/* for (ptr = head; ptr != NULL; ptr = ptr-&gt;next) */</comment>

  <expr_stmt><expr><call><name pos:line="123" pos:column="3">rrdc_stats_free<pos:position pos:line="123" pos:column="18"/></name> <argument_list pos:line="123" pos:column="19">(<argument><expr><name pos:line="123" pos:column="20">head<pos:position pos:line="123" pos:column="24"/></name></expr></argument>)<pos:position pos:line="123" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="26"/></expr_stmt>

  <return pos:line="125" pos:column="3">return <expr><operator pos:line="125" pos:column="10">(<pos:position pos:line="125" pos:column="11"/></operator><literal type="number" pos:line="125" pos:column="11">0<pos:position pos:line="125" pos:column="12"/></literal><operator pos:line="125" pos:column="12">)<pos:position pos:line="125" pos:column="13"/></operator></expr>;<pos:position pos:line="125" pos:column="14"/></return>
}<pos:position pos:line="126" pos:column="2"/></block></function></unit>

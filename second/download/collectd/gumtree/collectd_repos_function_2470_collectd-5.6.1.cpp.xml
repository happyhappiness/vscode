<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2470_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_loop<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">cdtime_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">interval<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><call><name pos:line="3" pos:column="29">cf_get_default_interval<pos:position pos:line="3" pos:column="52"/></name> <argument_list pos:line="3" pos:column="53">()<pos:position pos:line="3" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">cdtime_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">wait_until<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">wait_until<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <call><name pos:line="6" pos:column="22">cdtime<pos:position pos:line="6" pos:column="28"/></name> <argument_list pos:line="6" pos:column="29">()<pos:position pos:line="6" pos:column="31"/></argument_list></call> <operator pos:line="6" pos:column="32">+<pos:position pos:line="6" pos:column="33"/></operator> <name pos:line="6" pos:column="34">interval<pos:position pos:line="6" pos:column="42"/></name></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>

	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><name pos:line="8" pos:column="16">loop<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">==<pos:position pos:line="8" pos:column="23"/></operator> <literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>)<pos:position pos:line="8" pos:column="26"/></condition>
	<block pos:line="9" pos:column="9">{
		<decl_stmt><decl><type><name><name pos:line="10" pos:column="17">struct<pos:position pos:line="10" pos:column="23"/></name> <name pos:line="10" pos:column="24">timespec<pos:position pos:line="10" pos:column="32"/></name></name></type> <name pos:line="10" pos:column="33">ts_wait<pos:position pos:line="10" pos:column="40"/></name> <init pos:line="10" pos:column="41">= <expr><block pos:line="10" pos:column="43">{ <expr><literal type="number" pos:line="10" pos:column="45">0<pos:position pos:line="10" pos:column="46"/></literal></expr>, <expr><literal type="number" pos:line="10" pos:column="48">0<pos:position pos:line="10" pos:column="49"/></literal></expr> }<pos:position pos:line="10" pos:column="51"/></block></expr></init></decl>;<pos:position pos:line="10" pos:column="52"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">cdtime_t<pos:position pos:line="11" pos:column="25"/></name></type> <name pos:line="11" pos:column="26">now<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>

<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><name pos:line="13" pos:column="5">HAVE_LIBKSTAT<pos:position pos:line="13" pos:column="18"/></name></expr></cpp:if>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">update_kstat<pos:position pos:line="14" pos:column="29"/></name> <argument_list pos:line="14" pos:column="30">()<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>

		<comment type="block" pos:line="17" pos:column="17">/* Issue all plugins */</comment>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">plugin_read_all<pos:position pos:line="18" pos:column="32"/></name> <argument_list pos:line="18" pos:column="33">()<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>

		<expr_stmt><expr><name pos:line="20" pos:column="17">now<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <call><name pos:line="20" pos:column="23">cdtime<pos:position pos:line="20" pos:column="29"/></name> <argument_list pos:line="20" pos:column="30">()<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">now<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">&gt;=<pos:position pos:line="21" pos:column="30"/></operator> <name pos:line="21" pos:column="28">wait_until<pos:position pos:line="21" pos:column="38"/></name></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39">
		<block pos:line="22" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">WARNING<pos:position pos:line="23" pos:column="32"/></name> <argument_list pos:line="23" pos:column="33">(<argument><expr><literal type="string" pos:line="23" pos:column="34">"Not sleeping because the next interval is "<pos:position pos:line="23" pos:column="78"/></literal>
					<literal type="string" pos:line="24" pos:column="41">"%.3f seconds in the past!"<pos:position pos:line="24" pos:column="68"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="25" pos:column="41">CDTIME_T_TO_DOUBLE<pos:position pos:line="25" pos:column="59"/></name> <argument_list pos:line="25" pos:column="60">(<argument><expr><name pos:line="25" pos:column="61">now<pos:position pos:line="25" pos:column="64"/></name> <operator pos:line="25" pos:column="65">-<pos:position pos:line="25" pos:column="66"/></operator> <name pos:line="25" pos:column="67">wait_until<pos:position pos:line="25" pos:column="77"/></name></expr></argument>)<pos:position pos:line="25" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="80"/></expr_stmt>
			<expr_stmt><expr><name pos:line="26" pos:column="25">wait_until<pos:position pos:line="26" pos:column="35"/></name> <operator pos:line="26" pos:column="36">=<pos:position pos:line="26" pos:column="37"/></operator> <name pos:line="26" pos:column="38">now<pos:position pos:line="26" pos:column="41"/></name> <operator pos:line="26" pos:column="42">+<pos:position pos:line="26" pos:column="43"/></operator> <name pos:line="26" pos:column="44">interval<pos:position pos:line="26" pos:column="52"/></name></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>
			<continue pos:line="27" pos:column="25">continue;<pos:position pos:line="27" pos:column="34"/></continue>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="30" pos:column="17">CDTIME_T_TO_TIMESPEC<pos:position pos:line="30" pos:column="37"/></name> <argument_list pos:line="30" pos:column="38">(<argument><expr><name pos:line="30" pos:column="39">wait_until<pos:position pos:line="30" pos:column="49"/></name> <operator pos:line="30" pos:column="50">-<pos:position pos:line="30" pos:column="51"/></operator> <name pos:line="30" pos:column="52">now<pos:position pos:line="30" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="57">&amp;<pos:position pos:line="30" pos:column="62"/></operator><name pos:line="30" pos:column="58">ts_wait<pos:position pos:line="30" pos:column="65"/></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><name pos:line="31" pos:column="17">wait_until<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">=<pos:position pos:line="31" pos:column="29"/></operator> <name pos:line="31" pos:column="30">wait_until<pos:position pos:line="31" pos:column="40"/></name> <operator pos:line="31" pos:column="41">+<pos:position pos:line="31" pos:column="42"/></operator> <name pos:line="31" pos:column="43">interval<pos:position pos:line="31" pos:column="51"/></name></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>

		<while pos:line="33" pos:column="17">while <condition pos:line="33" pos:column="23">(<expr><operator pos:line="33" pos:column="24">(<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">loop<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">==<pos:position pos:line="33" pos:column="32"/></operator> <literal type="number" pos:line="33" pos:column="33">0<pos:position pos:line="33" pos:column="34"/></literal><operator pos:line="33" pos:column="34">)<pos:position pos:line="33" pos:column="35"/></operator> <operator pos:line="33" pos:column="36">&amp;&amp;<pos:position pos:line="33" pos:column="46"/></operator> <operator pos:line="33" pos:column="39">(<pos:position pos:line="33" pos:column="40"/></operator><call><name pos:line="33" pos:column="40">nanosleep<pos:position pos:line="33" pos:column="49"/></name> <argument_list pos:line="33" pos:column="50">(<argument><expr><operator pos:line="33" pos:column="51">&amp;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="52">ts_wait<pos:position pos:line="33" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="61">&amp;<pos:position pos:line="33" pos:column="66"/></operator><name pos:line="33" pos:column="62">ts_wait<pos:position pos:line="33" pos:column="69"/></name></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></call> <operator pos:line="33" pos:column="71">!=<pos:position pos:line="33" pos:column="73"/></operator> <literal type="number" pos:line="33" pos:column="74">0<pos:position pos:line="33" pos:column="75"/></literal><operator pos:line="33" pos:column="75">)<pos:position pos:line="33" pos:column="76"/></operator></expr>)<pos:position pos:line="33" pos:column="77"/></condition>
		<block pos:line="34" pos:column="17">{
			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><name pos:line="35" pos:column="29">errno<pos:position pos:line="35" pos:column="34"/></name> <operator pos:line="35" pos:column="35">!=<pos:position pos:line="35" pos:column="37"/></operator> <name pos:line="35" pos:column="38">EINTR<pos:position pos:line="35" pos:column="43"/></name></expr>)<pos:position pos:line="35" pos:column="44"/></condition><then pos:line="35" pos:column="44">
			<block pos:line="36" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="37" pos:column="33">char<pos:position pos:line="37" pos:column="37"/></name></type> <name><name pos:line="37" pos:column="38">errbuf<pos:position pos:line="37" pos:column="44"/></name><index pos:line="37" pos:column="44">[<expr><literal type="number" pos:line="37" pos:column="45">1024<pos:position pos:line="37" pos:column="49"/></literal></expr>]<pos:position pos:line="37" pos:column="50"/></index></name></decl>;<pos:position pos:line="37" pos:column="51"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="38" pos:column="33">ERROR<pos:position pos:line="38" pos:column="38"/></name> <argument_list pos:line="38" pos:column="39">(<argument><expr><literal type="string" pos:line="38" pos:column="40">"nanosleep failed: %s"<pos:position pos:line="38" pos:column="62"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="39" pos:column="49">sstrerror<pos:position pos:line="39" pos:column="58"/></name> <argument_list pos:line="39" pos:column="59">(<argument><expr><name pos:line="39" pos:column="60">errno<pos:position pos:line="39" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="67">errbuf<pos:position pos:line="39" pos:column="73"/></name></expr></argument>,
							<argument><expr><sizeof pos:line="40" pos:column="57">sizeof <argument_list pos:line="40" pos:column="64">(<argument><expr><name pos:line="40" pos:column="65">errbuf<pos:position pos:line="40" pos:column="71"/></name></expr></argument>)<pos:position pos:line="40" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="75"/></expr_stmt>
				<return pos:line="41" pos:column="33">return <expr><operator pos:line="41" pos:column="40">(<pos:position pos:line="41" pos:column="41"/></operator><operator pos:line="41" pos:column="41">-<pos:position pos:line="41" pos:column="42"/></operator><literal type="number" pos:line="41" pos:column="42">1<pos:position pos:line="41" pos:column="43"/></literal><operator pos:line="41" pos:column="43">)<pos:position pos:line="41" pos:column="44"/></operator></expr>;<pos:position pos:line="41" pos:column="45"/></return>
			}<pos:position pos:line="42" pos:column="26"/></block></then></if>
		}<pos:position pos:line="43" pos:column="18"/></block></while>
	}<pos:position pos:line="44" pos:column="10"/></block></while> <comment type="block" pos:line="44" pos:column="11">/* while (loop == 0) */</comment>

	<return pos:line="46" pos:column="9">return <expr><operator pos:line="46" pos:column="16">(<pos:position pos:line="46" pos:column="17"/></operator><literal type="number" pos:line="46" pos:column="17">0<pos:position pos:line="46" pos:column="18"/></literal><operator pos:line="46" pos:column="18">)<pos:position pos:line="46" pos:column="19"/></operator></expr>;<pos:position pos:line="46" pos:column="20"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

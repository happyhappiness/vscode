<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_527_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ipc_read_shm<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list> <comment type="block" pos:line="1" pos:column="32">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ipcinfo_shm_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">ipcinfo_shm<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ipcinfo_shm_t<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">pshm<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">int<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">shm_segments<pos:position pos:line="5" pos:column="28"/></name><init pos:line="5" pos:column="28">=<expr><literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size64_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">shm_bytes<pos:position pos:line="6" pos:column="21"/></name><init pos:line="6" pos:column="21">=<expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>,<decl><type ref="prev"/><name pos:line="7" pos:column="9">n<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">ipcinfo_shm<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <operator pos:line="9" pos:column="17">(<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">ipcinfo_shm_t<pos:position pos:line="9" pos:column="31"/></name> <operator pos:line="9" pos:column="32">*<pos:position pos:line="9" pos:column="33"/></operator><operator pos:line="9" pos:column="33">)<pos:position pos:line="9" pos:column="34"/></operator><call><name pos:line="9" pos:column="34">ipc_get_info<pos:position pos:line="9" pos:column="46"/></name><argument_list pos:line="9" pos:column="46">(<argument><expr><literal type="number" pos:line="9" pos:column="47">0<pos:position pos:line="9" pos:column="48"/></literal></expr></argument>,
    <argument><expr><name pos:line="10" pos:column="5">GET_IPCINFO_SHM_ALL<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="26">IPCINFO_SHM_VERSION<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="47">sizeof<argument_list pos:line="10" pos:column="53">(<argument><expr><name pos:line="10" pos:column="54">ipcinfo_shm_t<pos:position pos:line="10" pos:column="67"/></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="10" pos:column="70">&amp;<pos:position pos:line="10" pos:column="75"/></operator><name pos:line="10" pos:column="71">n<pos:position pos:line="10" pos:column="72"/></name></expr></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="74"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">ipcinfo_shm<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">==<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">NULL<pos:position pos:line="11" pos:column="26"/></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return></block></then></if>

  <for pos:line="14" pos:column="3">for <control pos:line="14" pos:column="7">(<init><expr><name pos:line="14" pos:column="8">i<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator><literal type="number" pos:line="14" pos:column="10">0<pos:position pos:line="14" pos:column="11"/></literal></expr><operator pos:line="14" pos:column="11">,<pos:position pos:line="14" pos:column="12"/></operator> <expr><name pos:line="14" pos:column="13">pshm<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">ipcinfo_shm<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></init> <condition><expr><name pos:line="14" pos:column="31">i<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">&lt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">n<pos:position pos:line="14" pos:column="34"/></name></expr>;<pos:position pos:line="14" pos:column="35"/></condition> <incr><expr><name pos:line="14" pos:column="36">i<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">++<pos:position pos:line="14" pos:column="39"/></operator></expr><operator pos:line="14" pos:column="39">,<pos:position pos:line="14" pos:column="40"/></operator> <expr><name pos:line="14" pos:column="41">pshm<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">++<pos:position pos:line="14" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="48"/></control> <block pos:line="14" pos:column="49">{
    <expr_stmt><expr><name pos:line="15" pos:column="5">shm_segments<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">++<pos:position pos:line="15" pos:column="19"/></operator></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">shm_bytes<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">+=<pos:position pos:line="16" pos:column="17"/></operator> <name><name pos:line="16" pos:column="18">pshm<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">shm_segsz<pos:position pos:line="16" pos:column="33"/></name></name></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">free<pos:position pos:line="18" pos:column="7"/></name><argument_list pos:line="18" pos:column="7">(<argument><expr><name pos:line="18" pos:column="8">ipcinfo_shm<pos:position pos:line="18" pos:column="19"/></name></expr></argument>)<pos:position pos:line="18" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">ipc_submit_g<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="string" pos:line="20" pos:column="16">"shm"<pos:position pos:line="20" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="23">"segments"<pos:position pos:line="20" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">NULL<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">shm_segments<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">ipc_submit_g<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="string" pos:line="21" pos:column="16">"shm"<pos:position pos:line="21" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="23">"bytes"<pos:position pos:line="21" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="32">"total"<pos:position pos:line="21" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">shm_bytes<pos:position pos:line="21" pos:column="50"/></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>

  <return pos:line="23" pos:column="3">return <expr><operator pos:line="23" pos:column="10">(<pos:position pos:line="23" pos:column="11"/></operator><literal type="number" pos:line="23" pos:column="11">0<pos:position pos:line="23" pos:column="12"/></literal><operator pos:line="23" pos:column="12">)<pos:position pos:line="23" pos:column="13"/></operator></expr>;<pos:position pos:line="23" pos:column="14"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

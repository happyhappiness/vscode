<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_168_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cdbi_read_database_query<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">cdbi_database_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">db<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="59">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">udb_query_t<pos:position pos:line="2" pos:column="16"/></name> <modifier pos:line="2" pos:column="17">*<pos:position pos:line="2" pos:column="18"/></modifier></type><name pos:line="2" pos:column="18">q<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="21">udb_query_preparation_area_t<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">prep_area<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">statement<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">dbi_result<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">res<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">column_num<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier><modifier pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></modifier></type><name pos:line="7" pos:column="10">column_names<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier><modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">column_values<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">status<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">i<pos:position pos:line="10" pos:column="11"/></name></decl>;<pos:position pos:line="10" pos:column="12"/></decl_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* Macro that cleans up dynamically allocated memory and returns the
   * specified status. */</comment>
<cpp:define pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">define<pos:position pos:line="14" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="14" pos:column="9">BAIL_OUT<pos:position pos:line="14" pos:column="17"/></name><parameter_list pos:line="14" pos:column="17">(<parameter><type><name pos:line="14" pos:column="18">status<pos:position pos:line="14" pos:column="24"/></name></type></parameter>)<pos:position pos:line="14" pos:column="25"/></parameter_list></cpp:macro> \
  <cpp:value pos:line="15" pos:column="3">if (column_names != NULL) { sfree (column_names[0]); sfree (column_names); } \
  if (column_values != NULL) { sfree (column_values[0]); sfree (column_values); } \
  if (res != NULL) { dbi_result_free (res); res = NULL; } \
  return (status)<pos:position pos:line="18" pos:column="18"/></cpp:value></cpp:define>

  <expr_stmt><expr><name pos:line="20" pos:column="3">column_names<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">NULL<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">column_values<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">NULL<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">res<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <name pos:line="22" pos:column="9">NULL<pos:position pos:line="22" pos:column="13"/></name></expr>;<pos:position pos:line="22" pos:column="14"/></expr_stmt>

  <expr_stmt><expr><name pos:line="24" pos:column="3">statement<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <call><name pos:line="24" pos:column="15">udb_query_get_statement<pos:position pos:line="24" pos:column="38"/></name> <argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">q<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">assert<pos:position pos:line="25" pos:column="9"/></name> <argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">statement<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">!=<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">NULL<pos:position pos:line="25" pos:column="28"/></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><name pos:line="27" pos:column="3">res<pos:position pos:line="27" pos:column="6"/></name> <operator pos:line="27" pos:column="7">=<pos:position pos:line="27" pos:column="8"/></operator> <call><name pos:line="27" pos:column="9">dbi_conn_query<pos:position pos:line="27" pos:column="23"/></name> <argument_list pos:line="27" pos:column="24">(<argument><expr><name><name pos:line="27" pos:column="25">db<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">connection<pos:position pos:line="27" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="41">statement<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">res<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">==<pos:position pos:line="28" pos:column="13"/></operator> <name pos:line="28" pos:column="14">NULL<pos:position pos:line="28" pos:column="18"/></name></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19">
  <block pos:line="29" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">char<pos:position pos:line="30" pos:column="9"/></name></type> <name><name pos:line="30" pos:column="10">errbuf<pos:position pos:line="30" pos:column="16"/></name><index pos:line="30" pos:column="16">[<expr><literal type="number" pos:line="30" pos:column="17">1024<pos:position pos:line="30" pos:column="21"/></literal></expr>]<pos:position pos:line="30" pos:column="22"/></index></name></decl>;<pos:position pos:line="30" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ERROR<pos:position pos:line="31" pos:column="10"/></name> <argument_list pos:line="31" pos:column="11">(<argument><expr><literal type="string" pos:line="31" pos:column="12">"dbi plugin: cdbi_read_database_query (%s, %s): "<pos:position pos:line="31" pos:column="61"/></literal>
        <literal type="string" pos:line="32" pos:column="9">"dbi_conn_query failed: %s"<pos:position pos:line="32" pos:column="36"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="33" pos:column="9">db<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">-&gt;<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="13">name<pos:position pos:line="33" pos:column="17"/></name></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="19">udb_query_get_name<pos:position pos:line="33" pos:column="37"/></name> <argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">q<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr></argument>,
        <argument><expr><call><name pos:line="34" pos:column="9">cdbi_strerror<pos:position pos:line="34" pos:column="22"/></name> <argument_list pos:line="34" pos:column="23">(<argument><expr><name><name pos:line="34" pos:column="24">db<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">-&gt;<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="28">connection<pos:position pos:line="34" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="40">errbuf<pos:position pos:line="34" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="48">sizeof <argument_list pos:line="34" pos:column="55">(<argument><expr><name pos:line="34" pos:column="56">errbuf<pos:position pos:line="34" pos:column="62"/></name></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">BAIL_OUT<pos:position pos:line="35" pos:column="13"/></name> <argument_list pos:line="35" pos:column="14">(<argument><expr><operator pos:line="35" pos:column="15">-<pos:position pos:line="35" pos:column="16"/></operator><literal type="number" pos:line="35" pos:column="16">1<pos:position pos:line="35" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></then>
  <else pos:line="37" pos:column="3">else <comment type="block" pos:line="37" pos:column="8">/* Get the number of columns */</comment>
  <block pos:line="38" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">unsigned<pos:position pos:line="39" pos:column="13"/></name> <name pos:line="39" pos:column="14">int<pos:position pos:line="39" pos:column="17"/></name></type> <name pos:line="39" pos:column="18">db_status<pos:position pos:line="39" pos:column="27"/></name></decl>;<pos:position pos:line="39" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name pos:line="41" pos:column="5">db_status<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <call><name pos:line="41" pos:column="17">dbi_result_get_numfields<pos:position pos:line="41" pos:column="41"/></name> <argument_list pos:line="41" pos:column="42">(<argument><expr><name pos:line="41" pos:column="43">res<pos:position pos:line="41" pos:column="46"/></name></expr></argument>)<pos:position pos:line="41" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="48"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">db_status<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">==<pos:position pos:line="42" pos:column="21"/></operator> <name pos:line="42" pos:column="22">DBI_FIELD_ERROR<pos:position pos:line="42" pos:column="37"/></name></expr>)<pos:position pos:line="42" pos:column="38"/></condition><then pos:line="42" pos:column="38">
    <block pos:line="43" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="44" pos:column="7">char<pos:position pos:line="44" pos:column="11"/></name></type> <name><name pos:line="44" pos:column="12">errbuf<pos:position pos:line="44" pos:column="18"/></name><index pos:line="44" pos:column="18">[<expr><literal type="number" pos:line="44" pos:column="19">1024<pos:position pos:line="44" pos:column="23"/></literal></expr>]<pos:position pos:line="44" pos:column="24"/></index></name></decl>;<pos:position pos:line="44" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">ERROR<pos:position pos:line="45" pos:column="12"/></name> <argument_list pos:line="45" pos:column="13">(<argument><expr><literal type="string" pos:line="45" pos:column="14">"dbi plugin: cdbi_read_database_query (%s, %s): "<pos:position pos:line="45" pos:column="63"/></literal>
          <literal type="string" pos:line="46" pos:column="11">"dbi_result_get_numfields failed: %s"<pos:position pos:line="46" pos:column="48"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="47" pos:column="11">db<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">name<pos:position pos:line="47" pos:column="19"/></name></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="21">udb_query_get_name<pos:position pos:line="47" pos:column="39"/></name> <argument_list pos:line="47" pos:column="40">(<argument><expr><name pos:line="47" pos:column="41">q<pos:position pos:line="47" pos:column="42"/></name></expr></argument>)<pos:position pos:line="47" pos:column="43"/></argument_list></call></expr></argument>,
          <argument><expr><call><name pos:line="48" pos:column="11">cdbi_strerror<pos:position pos:line="48" pos:column="24"/></name> <argument_list pos:line="48" pos:column="25">(<argument><expr><name><name pos:line="48" pos:column="26">db<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">-&gt;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="30">connection<pos:position pos:line="48" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="42">errbuf<pos:position pos:line="48" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="50">sizeof <argument_list pos:line="48" pos:column="57">(<argument><expr><name pos:line="48" pos:column="58">errbuf<pos:position pos:line="48" pos:column="64"/></name></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">BAIL_OUT<pos:position pos:line="49" pos:column="15"/></name> <argument_list pos:line="49" pos:column="16">(<argument><expr><operator pos:line="49" pos:column="17">-<pos:position pos:line="49" pos:column="18"/></operator><literal type="number" pos:line="49" pos:column="18">1<pos:position pos:line="49" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="52" pos:column="5">column_num<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <operator pos:line="52" pos:column="18">(<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="19">size_t<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">)<pos:position pos:line="52" pos:column="26"/></operator> <name pos:line="52" pos:column="27">db_status<pos:position pos:line="52" pos:column="36"/></name></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">DEBUG<pos:position pos:line="53" pos:column="10"/></name> <argument_list pos:line="53" pos:column="11">(<argument><expr><literal type="string" pos:line="53" pos:column="12">"cdbi_read_database_query (%s, %s): There are %zu columns."<pos:position pos:line="53" pos:column="71"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="54" pos:column="9">db<pos:position pos:line="54" pos:column="11"/></name><operator pos:line="54" pos:column="11">-&gt;<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="13">name<pos:position pos:line="54" pos:column="17"/></name></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="19">udb_query_get_name<pos:position pos:line="54" pos:column="37"/></name> <argument_list pos:line="54" pos:column="38">(<argument><expr><name pos:line="54" pos:column="39">q<pos:position pos:line="54" pos:column="40"/></name></expr></argument>)<pos:position pos:line="54" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="54" pos:column="43">column_num<pos:position pos:line="54" pos:column="53"/></name></expr></argument>)<pos:position pos:line="54" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="55" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="57" pos:column="3">/* Allocate `column_names' and `column_values'. {{{ */</comment>
  <expr_stmt><expr><name pos:line="58" pos:column="3">column_names<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <operator pos:line="58" pos:column="18">(<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="19">char<pos:position pos:line="58" pos:column="23"/></name> <operator pos:line="58" pos:column="24">*<pos:position pos:line="58" pos:column="25"/></operator><operator pos:line="58" pos:column="25">*<pos:position pos:line="58" pos:column="26"/></operator><operator pos:line="58" pos:column="26">)<pos:position pos:line="58" pos:column="27"/></operator> <call><name pos:line="58" pos:column="28">calloc<pos:position pos:line="58" pos:column="34"/></name> <argument_list pos:line="58" pos:column="35">(<argument><expr><name pos:line="58" pos:column="36">column_num<pos:position pos:line="58" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="58" pos:column="48">sizeof <argument_list pos:line="58" pos:column="55">(<argument><expr><name pos:line="58" pos:column="56">char<pos:position pos:line="58" pos:column="60"/></name> <operator pos:line="58" pos:column="61">*<pos:position pos:line="58" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="58" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="58" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="65"/></expr_stmt>
  <if pos:line="59" pos:column="3">if <condition pos:line="59" pos:column="6">(<expr><name pos:line="59" pos:column="7">column_names<pos:position pos:line="59" pos:column="19"/></name> <operator pos:line="59" pos:column="20">==<pos:position pos:line="59" pos:column="22"/></operator> <name pos:line="59" pos:column="23">NULL<pos:position pos:line="59" pos:column="27"/></name></expr>)<pos:position pos:line="59" pos:column="28"/></condition><then pos:line="59" pos:column="28">
  <block pos:line="60" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">ERROR<pos:position pos:line="61" pos:column="10"/></name> <argument_list pos:line="61" pos:column="11">(<argument><expr><literal type="string" pos:line="61" pos:column="12">"dbi plugin: malloc failed."<pos:position pos:line="61" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">BAIL_OUT<pos:position pos:line="62" pos:column="13"/></name> <argument_list pos:line="62" pos:column="14">(<argument><expr><operator pos:line="62" pos:column="15">-<pos:position pos:line="62" pos:column="16"/></operator><literal type="number" pos:line="62" pos:column="16">1<pos:position pos:line="62" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="63" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="65" pos:column="3">column_names<pos:position pos:line="65" pos:column="15"/></name><index pos:line="65" pos:column="15">[<expr><literal type="number" pos:line="65" pos:column="16">0<pos:position pos:line="65" pos:column="17"/></literal></expr>]<pos:position pos:line="65" pos:column="18"/></index></name> <operator pos:line="65" pos:column="19">=<pos:position pos:line="65" pos:column="20"/></operator> <operator pos:line="65" pos:column="21">(<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="22">char<pos:position pos:line="65" pos:column="26"/></name> <operator pos:line="65" pos:column="27">*<pos:position pos:line="65" pos:column="28"/></operator><operator pos:line="65" pos:column="28">)<pos:position pos:line="65" pos:column="29"/></operator> <call><name pos:line="65" pos:column="30">calloc<pos:position pos:line="65" pos:column="36"/></name> <argument_list pos:line="65" pos:column="37">(<argument><expr><name pos:line="65" pos:column="38">column_num<pos:position pos:line="65" pos:column="48"/></name></expr></argument>,
      <argument><expr><name pos:line="66" pos:column="7">DATA_MAX_NAME_LEN<pos:position pos:line="66" pos:column="24"/></name> <operator pos:line="66" pos:column="25">*<pos:position pos:line="66" pos:column="26"/></operator> <sizeof pos:line="66" pos:column="27">sizeof <argument_list pos:line="66" pos:column="34">(<argument><expr><name pos:line="66" pos:column="35">char<pos:position pos:line="66" pos:column="39"/></name></expr></argument>)<pos:position pos:line="66" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="42"/></expr_stmt>
  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><name><name pos:line="67" pos:column="7">column_names<pos:position pos:line="67" pos:column="19"/></name><index pos:line="67" pos:column="19">[<expr><literal type="number" pos:line="67" pos:column="20">0<pos:position pos:line="67" pos:column="21"/></literal></expr>]<pos:position pos:line="67" pos:column="22"/></index></name> <operator pos:line="67" pos:column="23">==<pos:position pos:line="67" pos:column="25"/></operator> <name pos:line="67" pos:column="26">NULL<pos:position pos:line="67" pos:column="30"/></name></expr>)<pos:position pos:line="67" pos:column="31"/></condition><then pos:line="67" pos:column="31">
  <block pos:line="68" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">ERROR<pos:position pos:line="69" pos:column="10"/></name> <argument_list pos:line="69" pos:column="11">(<argument><expr><literal type="string" pos:line="69" pos:column="12">"dbi plugin: malloc failed."<pos:position pos:line="69" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">BAIL_OUT<pos:position pos:line="70" pos:column="13"/></name> <argument_list pos:line="70" pos:column="14">(<argument><expr><operator pos:line="70" pos:column="15">-<pos:position pos:line="70" pos:column="16"/></operator><literal type="number" pos:line="70" pos:column="16">1<pos:position pos:line="70" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="71" pos:column="4"/></block></then></if>
  <for pos:line="72" pos:column="3">for <control pos:line="72" pos:column="7">(<init><expr><name pos:line="72" pos:column="8">i<pos:position pos:line="72" pos:column="9"/></name> <operator pos:line="72" pos:column="10">=<pos:position pos:line="72" pos:column="11"/></operator> <literal type="number" pos:line="72" pos:column="12">1<pos:position pos:line="72" pos:column="13"/></literal></expr>;<pos:position pos:line="72" pos:column="14"/></init> <condition><expr><name pos:line="72" pos:column="15">i<pos:position pos:line="72" pos:column="16"/></name> <operator pos:line="72" pos:column="17">&lt;<pos:position pos:line="72" pos:column="21"/></operator> <name pos:line="72" pos:column="19">column_num<pos:position pos:line="72" pos:column="29"/></name></expr>;<pos:position pos:line="72" pos:column="30"/></condition> <incr><expr><name pos:line="72" pos:column="31">i<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">++<pos:position pos:line="72" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="72" pos:column="35"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="73" pos:column="5">column_names<pos:position pos:line="73" pos:column="17"/></name><index pos:line="73" pos:column="17">[<expr><name pos:line="73" pos:column="18">i<pos:position pos:line="73" pos:column="19"/></name></expr>]<pos:position pos:line="73" pos:column="20"/></index></name> <operator pos:line="73" pos:column="21">=<pos:position pos:line="73" pos:column="22"/></operator> <name><name pos:line="73" pos:column="23">column_names<pos:position pos:line="73" pos:column="35"/></name><index pos:line="73" pos:column="35">[<expr><name pos:line="73" pos:column="36">i<pos:position pos:line="73" pos:column="37"/></name> <operator pos:line="73" pos:column="38">-<pos:position pos:line="73" pos:column="39"/></operator> <literal type="number" pos:line="73" pos:column="40">1<pos:position pos:line="73" pos:column="41"/></literal></expr>]<pos:position pos:line="73" pos:column="42"/></index></name> <operator pos:line="73" pos:column="43">+<pos:position pos:line="73" pos:column="44"/></operator> <name pos:line="73" pos:column="45">DATA_MAX_NAME_LEN<pos:position pos:line="73" pos:column="62"/></name></expr>;<pos:position pos:line="73" pos:column="63"/></expr_stmt></block></for>

  <expr_stmt><expr><name pos:line="75" pos:column="3">column_values<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">=<pos:position pos:line="75" pos:column="18"/></operator> <operator pos:line="75" pos:column="19">(<pos:position pos:line="75" pos:column="20"/></operator><name pos:line="75" pos:column="20">char<pos:position pos:line="75" pos:column="24"/></name> <operator pos:line="75" pos:column="25">*<pos:position pos:line="75" pos:column="26"/></operator><operator pos:line="75" pos:column="26">*<pos:position pos:line="75" pos:column="27"/></operator><operator pos:line="75" pos:column="27">)<pos:position pos:line="75" pos:column="28"/></operator> <call><name pos:line="75" pos:column="29">calloc<pos:position pos:line="75" pos:column="35"/></name> <argument_list pos:line="75" pos:column="36">(<argument><expr><name pos:line="75" pos:column="37">column_num<pos:position pos:line="75" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="75" pos:column="49">sizeof <argument_list pos:line="75" pos:column="56">(<argument><expr><name pos:line="75" pos:column="57">char<pos:position pos:line="75" pos:column="61"/></name> <operator pos:line="75" pos:column="62">*<pos:position pos:line="75" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="75" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="75" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="66"/></expr_stmt>
  <if pos:line="76" pos:column="3">if <condition pos:line="76" pos:column="6">(<expr><name pos:line="76" pos:column="7">column_values<pos:position pos:line="76" pos:column="20"/></name> <operator pos:line="76" pos:column="21">==<pos:position pos:line="76" pos:column="23"/></operator> <name pos:line="76" pos:column="24">NULL<pos:position pos:line="76" pos:column="28"/></name></expr>)<pos:position pos:line="76" pos:column="29"/></condition><then pos:line="76" pos:column="29">
  <block pos:line="77" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">ERROR<pos:position pos:line="78" pos:column="10"/></name> <argument_list pos:line="78" pos:column="11">(<argument><expr><literal type="string" pos:line="78" pos:column="12">"dbi plugin: malloc failed."<pos:position pos:line="78" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">BAIL_OUT<pos:position pos:line="79" pos:column="13"/></name> <argument_list pos:line="79" pos:column="14">(<argument><expr><operator pos:line="79" pos:column="15">-<pos:position pos:line="79" pos:column="16"/></operator><literal type="number" pos:line="79" pos:column="16">1<pos:position pos:line="79" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="82" pos:column="3">column_values<pos:position pos:line="82" pos:column="16"/></name><index pos:line="82" pos:column="16">[<expr><literal type="number" pos:line="82" pos:column="17">0<pos:position pos:line="82" pos:column="18"/></literal></expr>]<pos:position pos:line="82" pos:column="19"/></index></name> <operator pos:line="82" pos:column="20">=<pos:position pos:line="82" pos:column="21"/></operator> <operator pos:line="82" pos:column="22">(<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="23">char<pos:position pos:line="82" pos:column="27"/></name> <operator pos:line="82" pos:column="28">*<pos:position pos:line="82" pos:column="29"/></operator><operator pos:line="82" pos:column="29">)<pos:position pos:line="82" pos:column="30"/></operator> <call><name pos:line="82" pos:column="31">calloc<pos:position pos:line="82" pos:column="37"/></name> <argument_list pos:line="82" pos:column="38">(<argument><expr><name pos:line="82" pos:column="39">column_num<pos:position pos:line="82" pos:column="49"/></name></expr></argument>,
      <argument><expr><name pos:line="83" pos:column="7">DATA_MAX_NAME_LEN<pos:position pos:line="83" pos:column="24"/></name> <operator pos:line="83" pos:column="25">*<pos:position pos:line="83" pos:column="26"/></operator> <sizeof pos:line="83" pos:column="27">sizeof <argument_list pos:line="83" pos:column="34">(<argument><expr><name pos:line="83" pos:column="35">char<pos:position pos:line="83" pos:column="39"/></name></expr></argument>)<pos:position pos:line="83" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="83" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="42"/></expr_stmt>
  <if pos:line="84" pos:column="3">if <condition pos:line="84" pos:column="6">(<expr><name><name pos:line="84" pos:column="7">column_values<pos:position pos:line="84" pos:column="20"/></name><index pos:line="84" pos:column="20">[<expr><literal type="number" pos:line="84" pos:column="21">0<pos:position pos:line="84" pos:column="22"/></literal></expr>]<pos:position pos:line="84" pos:column="23"/></index></name> <operator pos:line="84" pos:column="24">==<pos:position pos:line="84" pos:column="26"/></operator> <name pos:line="84" pos:column="27">NULL<pos:position pos:line="84" pos:column="31"/></name></expr>)<pos:position pos:line="84" pos:column="32"/></condition><then pos:line="84" pos:column="32">
  <block pos:line="85" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">ERROR<pos:position pos:line="86" pos:column="10"/></name> <argument_list pos:line="86" pos:column="11">(<argument><expr><literal type="string" pos:line="86" pos:column="12">"dbi plugin: malloc failed."<pos:position pos:line="86" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">BAIL_OUT<pos:position pos:line="87" pos:column="13"/></name> <argument_list pos:line="87" pos:column="14">(<argument><expr><operator pos:line="87" pos:column="15">-<pos:position pos:line="87" pos:column="16"/></operator><literal type="number" pos:line="87" pos:column="16">1<pos:position pos:line="87" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="88" pos:column="4"/></block></then></if>
  <for pos:line="89" pos:column="3">for <control pos:line="89" pos:column="7">(<init><expr><name pos:line="89" pos:column="8">i<pos:position pos:line="89" pos:column="9"/></name> <operator pos:line="89" pos:column="10">=<pos:position pos:line="89" pos:column="11"/></operator> <literal type="number" pos:line="89" pos:column="12">1<pos:position pos:line="89" pos:column="13"/></literal></expr>;<pos:position pos:line="89" pos:column="14"/></init> <condition><expr><name pos:line="89" pos:column="15">i<pos:position pos:line="89" pos:column="16"/></name> <operator pos:line="89" pos:column="17">&lt;<pos:position pos:line="89" pos:column="21"/></operator> <name pos:line="89" pos:column="19">column_num<pos:position pos:line="89" pos:column="29"/></name></expr>;<pos:position pos:line="89" pos:column="30"/></condition> <incr><expr><name pos:line="89" pos:column="31">i<pos:position pos:line="89" pos:column="32"/></name><operator pos:line="89" pos:column="32">++<pos:position pos:line="89" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="89" pos:column="35"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="90" pos:column="5">column_values<pos:position pos:line="90" pos:column="18"/></name><index pos:line="90" pos:column="18">[<expr><name pos:line="90" pos:column="19">i<pos:position pos:line="90" pos:column="20"/></name></expr>]<pos:position pos:line="90" pos:column="21"/></index></name> <operator pos:line="90" pos:column="22">=<pos:position pos:line="90" pos:column="23"/></operator> <name><name pos:line="90" pos:column="24">column_values<pos:position pos:line="90" pos:column="37"/></name><index pos:line="90" pos:column="37">[<expr><name pos:line="90" pos:column="38">i<pos:position pos:line="90" pos:column="39"/></name> <operator pos:line="90" pos:column="40">-<pos:position pos:line="90" pos:column="41"/></operator> <literal type="number" pos:line="90" pos:column="42">1<pos:position pos:line="90" pos:column="43"/></literal></expr>]<pos:position pos:line="90" pos:column="44"/></index></name> <operator pos:line="90" pos:column="45">+<pos:position pos:line="90" pos:column="46"/></operator> <name pos:line="90" pos:column="47">DATA_MAX_NAME_LEN<pos:position pos:line="90" pos:column="64"/></name></expr>;<pos:position pos:line="90" pos:column="65"/></expr_stmt></block></for>
  <comment type="block" pos:line="91" pos:column="3">/* }}} */</comment>

  <comment type="block" pos:line="93" pos:column="3">/* Copy the field names to `column_names' */</comment>
  <for pos:line="94" pos:column="3">for <control pos:line="94" pos:column="7">(<init><expr><name pos:line="94" pos:column="8">i<pos:position pos:line="94" pos:column="9"/></name> <operator pos:line="94" pos:column="10">=<pos:position pos:line="94" pos:column="11"/></operator> <literal type="number" pos:line="94" pos:column="12">0<pos:position pos:line="94" pos:column="13"/></literal></expr>;<pos:position pos:line="94" pos:column="14"/></init> <condition><expr><name pos:line="94" pos:column="15">i<pos:position pos:line="94" pos:column="16"/></name> <operator pos:line="94" pos:column="17">&lt;<pos:position pos:line="94" pos:column="21"/></operator> <name pos:line="94" pos:column="19">column_num<pos:position pos:line="94" pos:column="29"/></name></expr>;<pos:position pos:line="94" pos:column="30"/></condition> <incr><expr><name pos:line="94" pos:column="31">i<pos:position pos:line="94" pos:column="32"/></name><operator pos:line="94" pos:column="32">++<pos:position pos:line="94" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="94" pos:column="35"/></control> <comment type="block" pos:line="94" pos:column="36">/* {{{ */</comment>
  <block pos:line="95" pos:column="3">{
    <decl_stmt><decl><type><specifier pos:line="96" pos:column="5">const<pos:position pos:line="96" pos:column="10"/></specifier> <name pos:line="96" pos:column="11">char<pos:position pos:line="96" pos:column="15"/></name> <modifier pos:line="96" pos:column="16">*<pos:position pos:line="96" pos:column="17"/></modifier></type><name pos:line="96" pos:column="17">column_name<pos:position pos:line="96" pos:column="28"/></name></decl>;<pos:position pos:line="96" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><name pos:line="98" pos:column="5">column_name<pos:position pos:line="98" pos:column="16"/></name> <operator pos:line="98" pos:column="17">=<pos:position pos:line="98" pos:column="18"/></operator> <call><name pos:line="98" pos:column="19">dbi_result_get_field_name<pos:position pos:line="98" pos:column="44"/></name> <argument_list pos:line="98" pos:column="45">(<argument><expr><name pos:line="98" pos:column="46">res<pos:position pos:line="98" pos:column="49"/></name></expr></argument>, <argument><expr><call pos:line="98" pos:column="51">(<name pos:line="98" pos:column="52">unsigned<pos:position pos:line="98" pos:column="60"/></name> <name pos:line="98" pos:column="61">int<pos:position pos:line="98" pos:column="64"/></name>) <argument_list pos:line="98" pos:column="66">(<argument><expr><name pos:line="98" pos:column="67">i<pos:position pos:line="98" pos:column="68"/></name> <operator pos:line="98" pos:column="69">+<pos:position pos:line="98" pos:column="70"/></operator> <literal type="number" pos:line="98" pos:column="71">1<pos:position pos:line="98" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="98" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="75"/></expr_stmt>
    <if pos:line="99" pos:column="5">if <condition pos:line="99" pos:column="8">(<expr><name pos:line="99" pos:column="9">column_name<pos:position pos:line="99" pos:column="20"/></name> <operator pos:line="99" pos:column="21">==<pos:position pos:line="99" pos:column="23"/></operator> <name pos:line="99" pos:column="24">NULL<pos:position pos:line="99" pos:column="28"/></name></expr>)<pos:position pos:line="99" pos:column="29"/></condition><then pos:line="99" pos:column="29">
    <block pos:line="100" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="101" pos:column="7">ERROR<pos:position pos:line="101" pos:column="12"/></name> <argument_list pos:line="101" pos:column="13">(<argument><expr><literal type="string" pos:line="101" pos:column="14">"dbi plugin: cdbi_read_database_query (%s, %s): "<pos:position pos:line="101" pos:column="63"/></literal>
          <literal type="string" pos:line="102" pos:column="11">"Cannot retrieve name of field %zu."<pos:position pos:line="102" pos:column="47"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="103" pos:column="11">db<pos:position pos:line="103" pos:column="13"/></name><operator pos:line="103" pos:column="13">-&gt;<pos:position pos:line="103" pos:column="18"/></operator><name pos:line="103" pos:column="15">name<pos:position pos:line="103" pos:column="19"/></name></name></expr></argument>, <argument><expr><call><name pos:line="103" pos:column="21">udb_query_get_name<pos:position pos:line="103" pos:column="39"/></name> <argument_list pos:line="103" pos:column="40">(<argument><expr><name pos:line="103" pos:column="41">q<pos:position pos:line="103" pos:column="42"/></name></expr></argument>)<pos:position pos:line="103" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="103" pos:column="45">i<pos:position pos:line="103" pos:column="46"/></name> <operator pos:line="103" pos:column="47">+<pos:position pos:line="103" pos:column="48"/></operator> <literal type="number" pos:line="103" pos:column="49">1<pos:position pos:line="103" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="104" pos:column="7">BAIL_OUT<pos:position pos:line="104" pos:column="15"/></name> <argument_list pos:line="104" pos:column="16">(<argument><expr><operator pos:line="104" pos:column="17">-<pos:position pos:line="104" pos:column="18"/></operator><literal type="number" pos:line="104" pos:column="18">1<pos:position pos:line="104" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="105" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="107" pos:column="5">sstrncpy<pos:position pos:line="107" pos:column="13"/></name> <argument_list pos:line="107" pos:column="14">(<argument><expr><name><name pos:line="107" pos:column="15">column_names<pos:position pos:line="107" pos:column="27"/></name><index pos:line="107" pos:column="27">[<expr><name pos:line="107" pos:column="28">i<pos:position pos:line="107" pos:column="29"/></name></expr>]<pos:position pos:line="107" pos:column="30"/></index></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="32">column_name<pos:position pos:line="107" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="45">DATA_MAX_NAME_LEN<pos:position pos:line="107" pos:column="62"/></name></expr></argument>)<pos:position pos:line="107" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="108" pos:column="4"/></block></for> <comment type="block" pos:line="108" pos:column="5">/* }}} for (i = 0; i &lt; column_num; i++) */</comment>

  <expr_stmt><expr><call><name pos:line="110" pos:column="3">udb_query_prepare_result<pos:position pos:line="110" pos:column="27"/></name> <argument_list pos:line="110" pos:column="28">(<argument><expr><name pos:line="110" pos:column="29">q<pos:position pos:line="110" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="32">prep_area<pos:position pos:line="110" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="43">hostname_g<pos:position pos:line="110" pos:column="53"/></name></expr></argument>,
      <comment type="block" pos:line="111" pos:column="7">/* plugin = */</comment> <argument><expr><literal type="string" pos:line="111" pos:column="22">"dbi"<pos:position pos:line="111" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="29">db<pos:position pos:line="111" pos:column="31"/></name><operator pos:line="111" pos:column="31">-&gt;<pos:position pos:line="111" pos:column="36"/></operator><name pos:line="111" pos:column="33">name<pos:position pos:line="111" pos:column="37"/></name></name></expr></argument>,
      <argument><expr><name pos:line="112" pos:column="7">column_names<pos:position pos:line="112" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="21">column_num<pos:position pos:line="112" pos:column="31"/></name></expr></argument>, <comment type="block" pos:line="112" pos:column="33">/* interval = */</comment> <argument><expr><operator pos:line="112" pos:column="50">-<pos:position pos:line="112" pos:column="51"/></operator><literal type="number" pos:line="112" pos:column="51">1<pos:position pos:line="112" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="54"/></expr_stmt>

  <comment type="block" pos:line="114" pos:column="3">/* 0 = error; 1 = success; */</comment>
  <expr_stmt><expr><name pos:line="115" pos:column="3">status<pos:position pos:line="115" pos:column="9"/></name> <operator pos:line="115" pos:column="10">=<pos:position pos:line="115" pos:column="11"/></operator> <call><name pos:line="115" pos:column="12">dbi_result_first_row<pos:position pos:line="115" pos:column="32"/></name> <argument_list pos:line="115" pos:column="33">(<argument><expr><name pos:line="115" pos:column="34">res<pos:position pos:line="115" pos:column="37"/></name></expr></argument>)<pos:position pos:line="115" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="39"/></expr_stmt> <comment type="block" pos:line="115" pos:column="40">/* {{{ */</comment>
  <if pos:line="116" pos:column="3">if <condition pos:line="116" pos:column="6">(<expr><name pos:line="116" pos:column="7">status<pos:position pos:line="116" pos:column="13"/></name> <operator pos:line="116" pos:column="14">!=<pos:position pos:line="116" pos:column="16"/></operator> <literal type="number" pos:line="116" pos:column="17">1<pos:position pos:line="116" pos:column="18"/></literal></expr>)<pos:position pos:line="116" pos:column="19"/></condition><then pos:line="116" pos:column="19">
  <block pos:line="117" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="118" pos:column="5">char<pos:position pos:line="118" pos:column="9"/></name></type> <name><name pos:line="118" pos:column="10">errbuf<pos:position pos:line="118" pos:column="16"/></name><index pos:line="118" pos:column="16">[<expr><literal type="number" pos:line="118" pos:column="17">1024<pos:position pos:line="118" pos:column="21"/></literal></expr>]<pos:position pos:line="118" pos:column="22"/></index></name></decl>;<pos:position pos:line="118" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="119" pos:column="5">ERROR<pos:position pos:line="119" pos:column="10"/></name> <argument_list pos:line="119" pos:column="11">(<argument><expr><literal type="string" pos:line="119" pos:column="12">"dbi plugin: cdbi_read_database_query (%s, %s): "<pos:position pos:line="119" pos:column="61"/></literal>
        <literal type="string" pos:line="120" pos:column="9">"dbi_result_first_row failed: %s. Maybe the statement didn't "<pos:position pos:line="120" pos:column="71"/></literal>
        <literal type="string" pos:line="121" pos:column="9">"return any rows?"<pos:position pos:line="121" pos:column="27"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="122" pos:column="9">db<pos:position pos:line="122" pos:column="11"/></name><operator pos:line="122" pos:column="11">-&gt;<pos:position pos:line="122" pos:column="16"/></operator><name pos:line="122" pos:column="13">name<pos:position pos:line="122" pos:column="17"/></name></name></expr></argument>, <argument><expr><call><name pos:line="122" pos:column="19">udb_query_get_name<pos:position pos:line="122" pos:column="37"/></name> <argument_list pos:line="122" pos:column="38">(<argument><expr><name pos:line="122" pos:column="39">q<pos:position pos:line="122" pos:column="40"/></name></expr></argument>)<pos:position pos:line="122" pos:column="41"/></argument_list></call></expr></argument>,
        <argument><expr><call><name pos:line="123" pos:column="9">cdbi_strerror<pos:position pos:line="123" pos:column="22"/></name> <argument_list pos:line="123" pos:column="23">(<argument><expr><name><name pos:line="123" pos:column="24">db<pos:position pos:line="123" pos:column="26"/></name><operator pos:line="123" pos:column="26">-&gt;<pos:position pos:line="123" pos:column="31"/></operator><name pos:line="123" pos:column="28">connection<pos:position pos:line="123" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="40">errbuf<pos:position pos:line="123" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="123" pos:column="48">sizeof <argument_list pos:line="123" pos:column="55">(<argument><expr><name pos:line="123" pos:column="56">errbuf<pos:position pos:line="123" pos:column="62"/></name></expr></argument>)<pos:position pos:line="123" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="123" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="123" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="124" pos:column="5">udb_query_finish_result<pos:position pos:line="124" pos:column="28"/></name> <argument_list pos:line="124" pos:column="29">(<argument><expr><name pos:line="124" pos:column="30">q<pos:position pos:line="124" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="33">prep_area<pos:position pos:line="124" pos:column="42"/></name></expr></argument>)<pos:position pos:line="124" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="125" pos:column="5">BAIL_OUT<pos:position pos:line="125" pos:column="13"/></name> <argument_list pos:line="125" pos:column="14">(<argument><expr><operator pos:line="125" pos:column="15">-<pos:position pos:line="125" pos:column="16"/></operator><literal type="number" pos:line="125" pos:column="16">1<pos:position pos:line="125" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="126" pos:column="4"/></block></then></if> <comment type="block" pos:line="126" pos:column="5">/* }}} */</comment>

  <comment type="block" pos:line="128" pos:column="3">/* Iterate over all rows and call `udb_query_handle_result' with each list of
   * values. */</comment>
  <while pos:line="130" pos:column="3">while <condition pos:line="130" pos:column="9">(<expr><literal type="number" pos:line="130" pos:column="10">42<pos:position pos:line="130" pos:column="12"/></literal></expr>)<pos:position pos:line="130" pos:column="13"/></condition> <comment type="block" pos:line="130" pos:column="14">/* {{{ */</comment>
  <block pos:line="131" pos:column="3">{
    <expr_stmt><expr><name pos:line="132" pos:column="5">status<pos:position pos:line="132" pos:column="11"/></name> <operator pos:line="132" pos:column="12">=<pos:position pos:line="132" pos:column="13"/></operator> <literal type="number" pos:line="132" pos:column="14">0<pos:position pos:line="132" pos:column="15"/></literal></expr>;<pos:position pos:line="132" pos:column="16"/></expr_stmt>
    <comment type="block" pos:line="133" pos:column="5">/* Copy the value of the columns to `column_values' */</comment>
    <for pos:line="134" pos:column="5">for <control pos:line="134" pos:column="9">(<init><expr><name pos:line="134" pos:column="10">i<pos:position pos:line="134" pos:column="11"/></name> <operator pos:line="134" pos:column="12">=<pos:position pos:line="134" pos:column="13"/></operator> <literal type="number" pos:line="134" pos:column="14">0<pos:position pos:line="134" pos:column="15"/></literal></expr>;<pos:position pos:line="134" pos:column="16"/></init> <condition><expr><name pos:line="134" pos:column="17">i<pos:position pos:line="134" pos:column="18"/></name> <operator pos:line="134" pos:column="19">&lt;<pos:position pos:line="134" pos:column="23"/></operator> <name pos:line="134" pos:column="21">column_num<pos:position pos:line="134" pos:column="31"/></name></expr>;<pos:position pos:line="134" pos:column="32"/></condition> <incr><expr><name pos:line="134" pos:column="33">i<pos:position pos:line="134" pos:column="34"/></name><operator pos:line="134" pos:column="34">++<pos:position pos:line="134" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="134" pos:column="37"/></control> <comment type="block" pos:line="134" pos:column="38">/* {{{ */</comment>
    <block pos:line="135" pos:column="5">{
      <expr_stmt><expr><name pos:line="136" pos:column="7">status<pos:position pos:line="136" pos:column="13"/></name> <operator pos:line="136" pos:column="14">=<pos:position pos:line="136" pos:column="15"/></operator> <call><name pos:line="136" pos:column="16">cdbi_result_get_field<pos:position pos:line="136" pos:column="37"/></name> <argument_list pos:line="136" pos:column="38">(<argument><expr><name pos:line="136" pos:column="39">res<pos:position pos:line="136" pos:column="42"/></name></expr></argument>, <argument><expr><call pos:line="136" pos:column="44">(<name pos:line="136" pos:column="45">unsigned<pos:position pos:line="136" pos:column="53"/></name> <name pos:line="136" pos:column="54">int<pos:position pos:line="136" pos:column="57"/></name>) <argument_list pos:line="136" pos:column="59">(<argument><expr><name pos:line="136" pos:column="60">i<pos:position pos:line="136" pos:column="61"/></name> <operator pos:line="136" pos:column="62">+<pos:position pos:line="136" pos:column="63"/></operator> <literal type="number" pos:line="136" pos:column="64">1<pos:position pos:line="136" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="66"/></argument_list></call></expr></argument>,
          <argument><expr><name><name pos:line="137" pos:column="11">column_values<pos:position pos:line="137" pos:column="24"/></name><index pos:line="137" pos:column="24">[<expr><name pos:line="137" pos:column="25">i<pos:position pos:line="137" pos:column="26"/></name></expr>]<pos:position pos:line="137" pos:column="27"/></index></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="29">DATA_MAX_NAME_LEN<pos:position pos:line="137" pos:column="46"/></name></expr></argument>)<pos:position pos:line="137" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="48"/></expr_stmt>

      <if pos:line="139" pos:column="7">if <condition pos:line="139" pos:column="10">(<expr><name pos:line="139" pos:column="11">status<pos:position pos:line="139" pos:column="17"/></name> <operator pos:line="139" pos:column="18">!=<pos:position pos:line="139" pos:column="20"/></operator> <literal type="number" pos:line="139" pos:column="21">0<pos:position pos:line="139" pos:column="22"/></literal></expr>)<pos:position pos:line="139" pos:column="23"/></condition><then pos:line="139" pos:column="23">
      <block pos:line="140" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="141" pos:column="9">ERROR<pos:position pos:line="141" pos:column="14"/></name> <argument_list pos:line="141" pos:column="15">(<argument><expr><literal type="string" pos:line="141" pos:column="16">"dbi plugin: cdbi_read_database_query (%s, %s): "<pos:position pos:line="141" pos:column="65"/></literal>
            <literal type="string" pos:line="142" pos:column="13">"cdbi_result_get_field (%zu) failed."<pos:position pos:line="142" pos:column="50"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="143" pos:column="13">db<pos:position pos:line="143" pos:column="15"/></name><operator pos:line="143" pos:column="15">-&gt;<pos:position pos:line="143" pos:column="20"/></operator><name pos:line="143" pos:column="17">name<pos:position pos:line="143" pos:column="21"/></name></name></expr></argument>, <argument><expr><call><name pos:line="143" pos:column="23">udb_query_get_name<pos:position pos:line="143" pos:column="41"/></name> <argument_list pos:line="143" pos:column="42">(<argument><expr><name pos:line="143" pos:column="43">q<pos:position pos:line="143" pos:column="44"/></name></expr></argument>)<pos:position pos:line="143" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="143" pos:column="47">i<pos:position pos:line="143" pos:column="48"/></name> <operator pos:line="143" pos:column="49">+<pos:position pos:line="143" pos:column="50"/></operator> <literal type="number" pos:line="143" pos:column="51">1<pos:position pos:line="143" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name pos:line="144" pos:column="9">status<pos:position pos:line="144" pos:column="15"/></name> <operator pos:line="144" pos:column="16">=<pos:position pos:line="144" pos:column="17"/></operator> <operator pos:line="144" pos:column="18">-<pos:position pos:line="144" pos:column="19"/></operator><literal type="number" pos:line="144" pos:column="19">1<pos:position pos:line="144" pos:column="20"/></literal></expr>;<pos:position pos:line="144" pos:column="21"/></expr_stmt>
        <break pos:line="145" pos:column="9">break;<pos:position pos:line="145" pos:column="15"/></break>
      }<pos:position pos:line="146" pos:column="8"/></block></then></if>
    }<pos:position pos:line="147" pos:column="6"/></block></for> <comment type="block" pos:line="147" pos:column="7">/* }}} for (i = 0; i &lt; column_num; i++) */</comment>

    <comment type="block" pos:line="149" pos:column="5">/* If all values were copied successfully, call `udb_query_handle_result'
     * to dispatch the row to the daemon. */</comment>
    <if pos:line="151" pos:column="5">if <condition pos:line="151" pos:column="8">(<expr><name pos:line="151" pos:column="9">status<pos:position pos:line="151" pos:column="15"/></name> <operator pos:line="151" pos:column="16">==<pos:position pos:line="151" pos:column="18"/></operator> <literal type="number" pos:line="151" pos:column="19">0<pos:position pos:line="151" pos:column="20"/></literal></expr>)<pos:position pos:line="151" pos:column="21"/></condition><then pos:line="151" pos:column="21"> <comment type="block" pos:line="151" pos:column="22">/* {{{ */</comment>
    <block pos:line="152" pos:column="5">{
      <expr_stmt><expr><name pos:line="153" pos:column="7">status<pos:position pos:line="153" pos:column="13"/></name> <operator pos:line="153" pos:column="14">=<pos:position pos:line="153" pos:column="15"/></operator> <call><name pos:line="153" pos:column="16">udb_query_handle_result<pos:position pos:line="153" pos:column="39"/></name> <argument_list pos:line="153" pos:column="40">(<argument><expr><name pos:line="153" pos:column="41">q<pos:position pos:line="153" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="44">prep_area<pos:position pos:line="153" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="55">column_values<pos:position pos:line="153" pos:column="68"/></name></expr></argument>)<pos:position pos:line="153" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="70"/></expr_stmt>
      <if pos:line="154" pos:column="7">if <condition pos:line="154" pos:column="10">(<expr><name pos:line="154" pos:column="11">status<pos:position pos:line="154" pos:column="17"/></name> <operator pos:line="154" pos:column="18">!=<pos:position pos:line="154" pos:column="20"/></operator> <literal type="number" pos:line="154" pos:column="21">0<pos:position pos:line="154" pos:column="22"/></literal></expr>)<pos:position pos:line="154" pos:column="23"/></condition><then pos:line="154" pos:column="23">
      <block pos:line="155" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="156" pos:column="9">ERROR<pos:position pos:line="156" pos:column="14"/></name> <argument_list pos:line="156" pos:column="15">(<argument><expr><literal type="string" pos:line="156" pos:column="16">"dbi plugin: cdbi_read_database_query (%s, %s): "<pos:position pos:line="156" pos:column="65"/></literal>
            <literal type="string" pos:line="157" pos:column="13">"udb_query_handle_result failed."<pos:position pos:line="157" pos:column="46"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="158" pos:column="13">db<pos:position pos:line="158" pos:column="15"/></name><operator pos:line="158" pos:column="15">-&gt;<pos:position pos:line="158" pos:column="20"/></operator><name pos:line="158" pos:column="17">name<pos:position pos:line="158" pos:column="21"/></name></name></expr></argument>, <argument><expr><call><name pos:line="158" pos:column="23">udb_query_get_name<pos:position pos:line="158" pos:column="41"/></name> <argument_list pos:line="158" pos:column="42">(<argument><expr><name pos:line="158" pos:column="43">q<pos:position pos:line="158" pos:column="44"/></name></expr></argument>)<pos:position pos:line="158" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="158" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="47"/></expr_stmt>
      }<pos:position pos:line="159" pos:column="8"/></block></then></if>
    }<pos:position pos:line="160" pos:column="6"/></block></then></if> <comment type="block" pos:line="160" pos:column="7">/* }}} */</comment>

    <comment type="block" pos:line="162" pos:column="5">/* Get the next row from the database. */</comment>
    <expr_stmt><expr><name pos:line="163" pos:column="5">status<pos:position pos:line="163" pos:column="11"/></name> <operator pos:line="163" pos:column="12">=<pos:position pos:line="163" pos:column="13"/></operator> <call><name pos:line="163" pos:column="14">dbi_result_next_row<pos:position pos:line="163" pos:column="33"/></name> <argument_list pos:line="163" pos:column="34">(<argument><expr><name pos:line="163" pos:column="35">res<pos:position pos:line="163" pos:column="38"/></name></expr></argument>)<pos:position pos:line="163" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="40"/></expr_stmt> <comment type="block" pos:line="163" pos:column="41">/* {{{ */</comment>
    <if pos:line="164" pos:column="5">if <condition pos:line="164" pos:column="8">(<expr><name pos:line="164" pos:column="9">status<pos:position pos:line="164" pos:column="15"/></name> <operator pos:line="164" pos:column="16">!=<pos:position pos:line="164" pos:column="18"/></operator> <literal type="number" pos:line="164" pos:column="19">1<pos:position pos:line="164" pos:column="20"/></literal></expr>)<pos:position pos:line="164" pos:column="21"/></condition><then pos:line="164" pos:column="21">
    <block pos:line="165" pos:column="5">{
      <if pos:line="166" pos:column="7">if <condition pos:line="166" pos:column="10">(<expr><call><name pos:line="166" pos:column="11">dbi_conn_error<pos:position pos:line="166" pos:column="25"/></name> <argument_list pos:line="166" pos:column="26">(<argument><expr><name><name pos:line="166" pos:column="27">db<pos:position pos:line="166" pos:column="29"/></name><operator pos:line="166" pos:column="29">-&gt;<pos:position pos:line="166" pos:column="34"/></operator><name pos:line="166" pos:column="31">connection<pos:position pos:line="166" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="43">NULL<pos:position pos:line="166" pos:column="47"/></name></expr></argument>)<pos:position pos:line="166" pos:column="48"/></argument_list></call> <operator pos:line="166" pos:column="49">!=<pos:position pos:line="166" pos:column="51"/></operator> <literal type="number" pos:line="166" pos:column="52">0<pos:position pos:line="166" pos:column="53"/></literal></expr>)<pos:position pos:line="166" pos:column="54"/></condition><then pos:line="166" pos:column="54">
      <block pos:line="167" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="168" pos:column="9">char<pos:position pos:line="168" pos:column="13"/></name></type> <name><name pos:line="168" pos:column="14">errbuf<pos:position pos:line="168" pos:column="20"/></name><index pos:line="168" pos:column="20">[<expr><literal type="number" pos:line="168" pos:column="21">1024<pos:position pos:line="168" pos:column="25"/></literal></expr>]<pos:position pos:line="168" pos:column="26"/></index></name></decl>;<pos:position pos:line="168" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="169" pos:column="9">WARNING<pos:position pos:line="169" pos:column="16"/></name> <argument_list pos:line="169" pos:column="17">(<argument><expr><literal type="string" pos:line="169" pos:column="18">"dbi plugin: cdbi_read_database_query (%s, %s): "<pos:position pos:line="169" pos:column="67"/></literal>
            <literal type="string" pos:line="170" pos:column="13">"dbi_result_next_row failed: %s."<pos:position pos:line="170" pos:column="46"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="171" pos:column="13">db<pos:position pos:line="171" pos:column="15"/></name><operator pos:line="171" pos:column="15">-&gt;<pos:position pos:line="171" pos:column="20"/></operator><name pos:line="171" pos:column="17">name<pos:position pos:line="171" pos:column="21"/></name></name></expr></argument>, <argument><expr><call><name pos:line="171" pos:column="23">udb_query_get_name<pos:position pos:line="171" pos:column="41"/></name> <argument_list pos:line="171" pos:column="42">(<argument><expr><name pos:line="171" pos:column="43">q<pos:position pos:line="171" pos:column="44"/></name></expr></argument>)<pos:position pos:line="171" pos:column="45"/></argument_list></call></expr></argument>,
            <argument><expr><call><name pos:line="172" pos:column="13">cdbi_strerror<pos:position pos:line="172" pos:column="26"/></name> <argument_list pos:line="172" pos:column="27">(<argument><expr><name><name pos:line="172" pos:column="28">db<pos:position pos:line="172" pos:column="30"/></name><operator pos:line="172" pos:column="30">-&gt;<pos:position pos:line="172" pos:column="35"/></operator><name pos:line="172" pos:column="32">connection<pos:position pos:line="172" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="44">errbuf<pos:position pos:line="172" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="172" pos:column="52">sizeof <argument_list pos:line="172" pos:column="59">(<argument><expr><name pos:line="172" pos:column="60">errbuf<pos:position pos:line="172" pos:column="66"/></name></expr></argument>)<pos:position pos:line="172" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="172" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="172" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="70"/></expr_stmt>
      }<pos:position pos:line="173" pos:column="8"/></block></then></if>
      <break pos:line="174" pos:column="7">break;<pos:position pos:line="174" pos:column="13"/></break>
    }<pos:position pos:line="175" pos:column="6"/></block></then></if> <comment type="block" pos:line="175" pos:column="7">/* }}} */</comment>
  }<pos:position pos:line="176" pos:column="4"/></block></while> <comment type="block" pos:line="176" pos:column="5">/* }}} while (42) */</comment>

  <comment type="block" pos:line="178" pos:column="3">/* Tell the db query interface that we're done with this query. */</comment>
  <expr_stmt><expr><call><name pos:line="179" pos:column="3">udb_query_finish_result<pos:position pos:line="179" pos:column="26"/></name> <argument_list pos:line="179" pos:column="27">(<argument><expr><name pos:line="179" pos:column="28">q<pos:position pos:line="179" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="31">prep_area<pos:position pos:line="179" pos:column="40"/></name></expr></argument>)<pos:position pos:line="179" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="42"/></expr_stmt>

  <comment type="block" pos:line="181" pos:column="3">/* Clean up and return `status = 0' (success) */</comment>
  <expr_stmt><expr><call><name pos:line="182" pos:column="3">BAIL_OUT<pos:position pos:line="182" pos:column="11"/></name> <argument_list pos:line="182" pos:column="12">(<argument><expr><literal type="number" pos:line="182" pos:column="13">0<pos:position pos:line="182" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="16"/></expr_stmt>
<cpp:undef pos:line="183" pos:column="1">#<cpp:directive pos:line="183" pos:column="2">undef<pos:position pos:line="183" pos:column="7"/></cpp:directive> <name pos:line="183" pos:column="8">BAIL_OUT<pos:position pos:line="183" pos:column="16"/></name></cpp:undef>
}<pos:position pos:line="184" pos:column="2"/></block></function></unit>

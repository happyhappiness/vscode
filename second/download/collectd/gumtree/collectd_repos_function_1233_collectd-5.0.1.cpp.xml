<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1233_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">init_global_variables<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">str<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

	<expr_stmt><expr><name pos:line="5" pos:column="9">str<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <call><name pos:line="5" pos:column="15">global_option_get<pos:position pos:line="5" pos:column="32"/></name> <argument_list pos:line="5" pos:column="33">(<argument><expr><literal type="string" pos:line="5" pos:column="34">"Interval"<pos:position pos:line="5" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="46"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">str<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">==<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr>)<pos:position pos:line="6" pos:column="25"/></condition><then pos:line="6" pos:column="25">
	<block pos:line="7" pos:column="9">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">interval_g<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <call><name pos:line="8" pos:column="30">TIME_T_TO_CDTIME_T<pos:position pos:line="8" pos:column="48"/></name> <argument_list pos:line="8" pos:column="49">(<argument><expr><literal type="number" pos:line="8" pos:column="50">10<pos:position pos:line="8" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then>
	<else pos:line="10" pos:column="9">else
	<block pos:line="11" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">double<pos:position pos:line="12" pos:column="23"/></name></type> <name pos:line="12" pos:column="24">tmp<pos:position pos:line="12" pos:column="27"/></name></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name pos:line="14" pos:column="17">tmp<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <call><name pos:line="14" pos:column="23">atof<pos:position pos:line="14" pos:column="27"/></name> <argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">str<pos:position pos:line="14" pos:column="32"/></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">tmp<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">&lt;=<pos:position pos:line="15" pos:column="30"/></operator> <literal type="number" pos:line="15" pos:column="28">0.0<pos:position pos:line="15" pos:column="31"/></literal></expr>)<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32">
		<block pos:line="16" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">fprintf<pos:position pos:line="17" pos:column="32"/></name> <argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">stderr<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="42">"Cannot set the interval to a "<pos:position pos:line="17" pos:column="73"/></literal>
					<literal type="string" pos:line="18" pos:column="41">"correct value.\n"<pos:position pos:line="18" pos:column="59"/></literal>
					<literal type="string" pos:line="19" pos:column="41">"Please check your settings.\n"<pos:position pos:line="19" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="74"/></expr_stmt>
			<return pos:line="20" pos:column="25">return <expr><operator pos:line="20" pos:column="32">(<pos:position pos:line="20" pos:column="33"/></operator><operator pos:line="20" pos:column="33">-<pos:position pos:line="20" pos:column="34"/></operator><literal type="number" pos:line="20" pos:column="34">1<pos:position pos:line="20" pos:column="35"/></literal><operator pos:line="20" pos:column="35">)<pos:position pos:line="20" pos:column="36"/></operator></expr>;<pos:position pos:line="20" pos:column="37"/></return>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="23" pos:column="17">interval_g<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">=<pos:position pos:line="23" pos:column="29"/></operator> <call><name pos:line="23" pos:column="30">DOUBLE_TO_CDTIME_T<pos:position pos:line="23" pos:column="48"/></name> <argument_list pos:line="23" pos:column="49">(<argument><expr><name pos:line="23" pos:column="50">tmp<pos:position pos:line="23" pos:column="53"/></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">DEBUG<pos:position pos:line="25" pos:column="14"/></name> <argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="string" pos:line="25" pos:column="16">"interval_g = %.3f;"<pos:position pos:line="25" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="38">CDTIME_T_TO_DOUBLE<pos:position pos:line="25" pos:column="56"/></name> <argument_list pos:line="25" pos:column="57">(<argument><expr><name pos:line="25" pos:column="58">interval_g<pos:position pos:line="25" pos:column="68"/></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="71"/></expr_stmt>

	<expr_stmt><expr><name pos:line="27" pos:column="9">str<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <call><name pos:line="27" pos:column="15">global_option_get<pos:position pos:line="27" pos:column="32"/></name> <argument_list pos:line="27" pos:column="33">(<argument><expr><literal type="string" pos:line="27" pos:column="34">"Timeout"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">str<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">==<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">NULL<pos:position pos:line="28" pos:column="24"/></name></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="17">str<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <literal type="string" pos:line="29" pos:column="23">"2"<pos:position pos:line="29" pos:column="26"/></literal></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="30" pos:column="9">timeout_g<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <call><name pos:line="30" pos:column="21">atoi<pos:position pos:line="30" pos:column="25"/></name> <argument_list pos:line="30" pos:column="26">(<argument><expr><name pos:line="30" pos:column="27">str<pos:position pos:line="30" pos:column="30"/></name></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">timeout_g<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">&lt;=<pos:position pos:line="31" pos:column="28"/></operator> <literal type="number" pos:line="31" pos:column="26">1<pos:position pos:line="31" pos:column="27"/></literal></expr>)<pos:position pos:line="31" pos:column="28"/></condition><then pos:line="31" pos:column="28">
	<block pos:line="32" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">fprintf<pos:position pos:line="33" pos:column="24"/></name> <argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">stderr<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="34">"Cannot set the timeout to a correct value.\n"<pos:position pos:line="33" pos:column="80"/></literal>
				<literal type="string" pos:line="34" pos:column="33">"Please check your settings.\n"<pos:position pos:line="34" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="66"/></expr_stmt>
		<return pos:line="35" pos:column="17">return <expr><operator pos:line="35" pos:column="24">(<pos:position pos:line="35" pos:column="25"/></operator><operator pos:line="35" pos:column="25">-<pos:position pos:line="35" pos:column="26"/></operator><literal type="number" pos:line="35" pos:column="26">1<pos:position pos:line="35" pos:column="27"/></literal><operator pos:line="35" pos:column="27">)<pos:position pos:line="35" pos:column="28"/></operator></expr>;<pos:position pos:line="35" pos:column="29"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">DEBUG<pos:position pos:line="37" pos:column="14"/></name> <argument_list pos:line="37" pos:column="15">(<argument><expr><literal type="string" pos:line="37" pos:column="16">"timeout_g = %i;"<pos:position pos:line="37" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="35">timeout_g<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name pos:line="39" pos:column="13">init_hostname<pos:position pos:line="39" pos:column="26"/></name> <argument_list pos:line="39" pos:column="27">()<pos:position pos:line="39" pos:column="29"/></argument_list></call> <operator pos:line="39" pos:column="30">!=<pos:position pos:line="39" pos:column="32"/></operator> <literal type="number" pos:line="39" pos:column="33">0<pos:position pos:line="39" pos:column="34"/></literal></expr>)<pos:position pos:line="39" pos:column="35"/></condition><then pos:line="39" pos:column="35">
		<block type="pseudo"><return pos:line="40" pos:column="17">return <expr><operator pos:line="40" pos:column="24">(<pos:position pos:line="40" pos:column="25"/></operator><operator pos:line="40" pos:column="25">-<pos:position pos:line="40" pos:column="26"/></operator><literal type="number" pos:line="40" pos:column="26">1<pos:position pos:line="40" pos:column="27"/></literal><operator pos:line="40" pos:column="27">)<pos:position pos:line="40" pos:column="28"/></operator></expr>;<pos:position pos:line="40" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">DEBUG<pos:position pos:line="41" pos:column="14"/></name> <argument_list pos:line="41" pos:column="15">(<argument><expr><literal type="string" pos:line="41" pos:column="16">"hostname_g = %s;"<pos:position pos:line="41" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="36">hostname_g<pos:position pos:line="41" pos:column="46"/></name></expr></argument>)<pos:position pos:line="41" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="48"/></expr_stmt>

	<return pos:line="43" pos:column="9">return <expr><operator pos:line="43" pos:column="16">(<pos:position pos:line="43" pos:column="17"/></operator><literal type="number" pos:line="43" pos:column="17">0<pos:position pos:line="43" pos:column="18"/></literal><operator pos:line="43" pos:column="18">)<pos:position pos:line="43" pos:column="19"/></operator></expr>;<pos:position pos:line="43" pos:column="20"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

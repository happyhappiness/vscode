<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_501_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">c_psql_config_writer<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">oconfig_item_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">ci<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">c_psql_writer_t<pos:position pos:line="3" pos:column="24"/></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">writer<pos:position pos:line="3" pos:column="32"/></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">c_psql_writer_t<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">tmp<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">status<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name><name pos:line="8" pos:column="14">ci<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">values_num<pos:position pos:line="8" pos:column="28"/></name></name> <operator pos:line="8" pos:column="29">!=<pos:position pos:line="8" pos:column="31"/></operator> <literal type="number" pos:line="8" pos:column="32">1<pos:position pos:line="8" pos:column="33"/></literal><operator pos:line="8" pos:column="33">)<pos:position pos:line="8" pos:column="34"/></operator>
			<operator pos:line="9" pos:column="25">||<pos:position pos:line="9" pos:column="27"/></operator> <operator pos:line="9" pos:column="28">(<pos:position pos:line="9" pos:column="29"/></operator><name><name pos:line="9" pos:column="29">ci<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">values<pos:position pos:line="9" pos:column="39"/></name><index pos:line="9" pos:column="39">[<expr><literal type="number" pos:line="9" pos:column="40">0<pos:position pos:line="9" pos:column="41"/></literal></expr>]<pos:position pos:line="9" pos:column="42"/></index></name><operator pos:line="9" pos:column="42">.<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="43">type<pos:position pos:line="9" pos:column="47"/></name> <operator pos:line="9" pos:column="48">!=<pos:position pos:line="9" pos:column="50"/></operator> <name pos:line="9" pos:column="51">OCONFIG_TYPE_STRING<pos:position pos:line="9" pos:column="70"/></name><operator pos:line="9" pos:column="70">)<pos:position pos:line="9" pos:column="71"/></operator></expr>)<pos:position pos:line="9" pos:column="72"/></condition><then pos:line="9" pos:column="72"> <block pos:line="9" pos:column="73">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">log_err<pos:position pos:line="10" pos:column="24"/></name> <argument_list pos:line="10" pos:column="25">(<argument><expr><literal type="string" pos:line="10" pos:column="26">"&lt;Writer&gt; expects a single string argument."<pos:position pos:line="10" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="72"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">tmp<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">realloc<pos:position pos:line="14" pos:column="22"/></name> <argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">writers<pos:position pos:line="14" pos:column="31"/></name></expr></argument>,
			<argument><expr><sizeof pos:line="15" pos:column="25">sizeof <argument_list pos:line="15" pos:column="32">(<argument><expr><operator pos:line="15" pos:column="33">*<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="34">writers<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></sizeof> <operator pos:line="15" pos:column="43">*<pos:position pos:line="15" pos:column="44"/></operator> <operator pos:line="15" pos:column="45">(<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="46">writers_num<pos:position pos:line="15" pos:column="57"/></name> <operator pos:line="15" pos:column="58">+<pos:position pos:line="15" pos:column="59"/></operator> <literal type="number" pos:line="15" pos:column="60">1<pos:position pos:line="15" pos:column="61"/></literal><operator pos:line="15" pos:column="61">)<pos:position pos:line="15" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">tmp<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">==<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">NULL<pos:position pos:line="16" pos:column="24"/></name></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25"> <block pos:line="16" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">log_err<pos:position pos:line="17" pos:column="24"/></name> <argument_list pos:line="17" pos:column="25">(<argument><expr><literal type="string" pos:line="17" pos:column="26">"Out of memory."<pos:position pos:line="17" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><operator pos:line="18" pos:column="24">-<pos:position pos:line="18" pos:column="25"/></operator><literal type="number" pos:line="18" pos:column="25">1<pos:position pos:line="18" pos:column="26"/></literal></expr>;<pos:position pos:line="18" pos:column="27"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="21" pos:column="9">writers<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">tmp<pos:position pos:line="21" pos:column="22"/></name></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">writer<pos:position pos:line="22" pos:column="15"/></name>  <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">writers<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">+<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="29">writers_num<pos:position pos:line="22" pos:column="40"/></name></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">memset<pos:position pos:line="23" pos:column="15"/></name> <argument_list pos:line="23" pos:column="16">(<argument><expr><name pos:line="23" pos:column="17">writer<pos:position pos:line="23" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="25">0<pos:position pos:line="23" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="28">sizeof <argument_list pos:line="23" pos:column="35">(<argument><expr><operator pos:line="23" pos:column="36">*<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="37">writer<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="25" pos:column="9">writer<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">name<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <call><name pos:line="25" pos:column="24">sstrdup<pos:position pos:line="25" pos:column="31"/></name> <argument_list pos:line="25" pos:column="32">(<argument><expr><name><name pos:line="25" pos:column="33">ci<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">values<pos:position pos:line="25" pos:column="43"/></name><index pos:line="25" pos:column="43">[<expr><literal type="number" pos:line="25" pos:column="44">0<pos:position pos:line="25" pos:column="45"/></literal></expr>]<pos:position pos:line="25" pos:column="46"/></index></name><operator pos:line="25" pos:column="46">.<pos:position pos:line="25" pos:column="47"/></operator><name><name pos:line="25" pos:column="47">value<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">.<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="53">string<pos:position pos:line="25" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">writer<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">statement<pos:position pos:line="26" pos:column="26"/></name></name> <operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator> <name pos:line="26" pos:column="29">NULL<pos:position pos:line="26" pos:column="33"/></name></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">writer<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">store_rates<pos:position pos:line="27" pos:column="28"/></name></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <literal type="number" pos:line="27" pos:column="31">1<pos:position pos:line="27" pos:column="32"/></literal></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>

	<for pos:line="29" pos:column="9">for <control pos:line="29" pos:column="13">(<init><decl><type><name pos:line="29" pos:column="14">int<pos:position pos:line="29" pos:column="17"/></name></type> <name pos:line="29" pos:column="18">i<pos:position pos:line="29" pos:column="19"/></name> <init pos:line="29" pos:column="20">= <expr><literal type="number" pos:line="29" pos:column="22">0<pos:position pos:line="29" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="24"/></init> <condition><expr><name pos:line="29" pos:column="25">i<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">&lt;<pos:position pos:line="29" pos:column="31"/></operator> <name><name pos:line="29" pos:column="29">ci<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">children_num<pos:position pos:line="29" pos:column="45"/></name></name></expr>;<pos:position pos:line="29" pos:column="46"/></condition> <incr><expr><operator pos:line="29" pos:column="47">++<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="49">i<pos:position pos:line="29" pos:column="50"/></name></expr></incr>)<pos:position pos:line="29" pos:column="51"/></control> <block pos:line="29" pos:column="52">{
		<decl_stmt><decl><type><name pos:line="30" pos:column="17">oconfig_item_t<pos:position pos:line="30" pos:column="31"/></name> <modifier pos:line="30" pos:column="32">*<pos:position pos:line="30" pos:column="33"/></modifier></type><name pos:line="30" pos:column="33">c<pos:position pos:line="30" pos:column="34"/></name> <init pos:line="30" pos:column="35">= <expr><name><name pos:line="30" pos:column="37">ci<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">children<pos:position pos:line="30" pos:column="49"/></name></name> <operator pos:line="30" pos:column="50">+<pos:position pos:line="30" pos:column="51"/></operator> <name pos:line="30" pos:column="52">i<pos:position pos:line="30" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="54"/></decl_stmt>

		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">strcasecmp<pos:position pos:line="32" pos:column="31"/></name> <argument_list pos:line="32" pos:column="32">(<argument><expr><literal type="string" pos:line="32" pos:column="33">"Statement"<pos:position pos:line="32" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="46">c<pos:position pos:line="32" pos:column="47"/></name><operator pos:line="32" pos:column="47">-&gt;<pos:position pos:line="32" pos:column="52"/></operator><name pos:line="32" pos:column="49">key<pos:position pos:line="32" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call> <operator pos:line="32" pos:column="54">==<pos:position pos:line="32" pos:column="56"/></operator> <literal type="number" pos:line="32" pos:column="57">0<pos:position pos:line="32" pos:column="58"/></literal></expr>)<pos:position pos:line="32" pos:column="59"/></condition><then pos:line="32" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="25">status<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">=<pos:position pos:line="33" pos:column="33"/></operator> <call><name pos:line="33" pos:column="34">cf_util_get_string<pos:position pos:line="33" pos:column="52"/></name> <argument_list pos:line="33" pos:column="53">(<argument><expr><name pos:line="33" pos:column="54">c<pos:position pos:line="33" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="57">&amp;<pos:position pos:line="33" pos:column="62"/></operator><name><name pos:line="33" pos:column="58">writer<pos:position pos:line="33" pos:column="64"/></name><operator pos:line="33" pos:column="64">-&gt;<pos:position pos:line="33" pos:column="69"/></operator><name pos:line="33" pos:column="66">statement<pos:position pos:line="33" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="77"/></expr_stmt></block></then>
		<elseif pos:line="34" pos:column="17">else <if pos:line="34" pos:column="22">if <condition pos:line="34" pos:column="25">(<expr><call><name pos:line="34" pos:column="26">strcasecmp<pos:position pos:line="34" pos:column="36"/></name> <argument_list pos:line="34" pos:column="37">(<argument><expr><literal type="string" pos:line="34" pos:column="38">"StoreRates"<pos:position pos:line="34" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="52">c<pos:position pos:line="34" pos:column="53"/></name><operator pos:line="34" pos:column="53">-&gt;<pos:position pos:line="34" pos:column="58"/></operator><name pos:line="34" pos:column="55">key<pos:position pos:line="34" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call> <operator pos:line="34" pos:column="60">==<pos:position pos:line="34" pos:column="62"/></operator> <literal type="number" pos:line="34" pos:column="63">0<pos:position pos:line="34" pos:column="64"/></literal></expr>)<pos:position pos:line="34" pos:column="65"/></condition><then pos:line="34" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="25">status<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">=<pos:position pos:line="35" pos:column="33"/></operator> <call><name pos:line="35" pos:column="34">cf_util_get_boolean<pos:position pos:line="35" pos:column="53"/></name> <argument_list pos:line="35" pos:column="54">(<argument><expr><name pos:line="35" pos:column="55">c<pos:position pos:line="35" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="58">&amp;<pos:position pos:line="35" pos:column="63"/></operator><name><name pos:line="35" pos:column="59">writer<pos:position pos:line="35" pos:column="65"/></name><operator pos:line="35" pos:column="65">-&gt;<pos:position pos:line="35" pos:column="70"/></operator><name pos:line="35" pos:column="67">store_rates<pos:position pos:line="35" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="80"/></expr_stmt></block></then></if></elseif>
		<else pos:line="36" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">log_warn<pos:position pos:line="37" pos:column="33"/></name> <argument_list pos:line="37" pos:column="34">(<argument><expr><literal type="string" pos:line="37" pos:column="35">"Ignoring unknown config key \"%s\"."<pos:position pos:line="37" pos:column="72"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="74">c<pos:position pos:line="37" pos:column="75"/></name><operator pos:line="37" pos:column="75">-&gt;<pos:position pos:line="37" pos:column="80"/></operator><name pos:line="37" pos:column="77">key<pos:position pos:line="37" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="82"/></expr_stmt></block></else></if>
	}<pos:position pos:line="38" pos:column="10"/></block></for>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">status<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">!=<pos:position pos:line="40" pos:column="22"/></operator> <literal type="number" pos:line="40" pos:column="23">0<pos:position pos:line="40" pos:column="24"/></literal></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25"> <block pos:line="40" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">sfree<pos:position pos:line="41" pos:column="22"/></name> <argument_list pos:line="41" pos:column="23">(<argument><expr><name><name pos:line="41" pos:column="24">writer<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">-&gt;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="32">statement<pos:position pos:line="41" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">sfree<pos:position pos:line="42" pos:column="22"/></name> <argument_list pos:line="42" pos:column="23">(<argument><expr><name><name pos:line="42" pos:column="24">writer<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">-&gt;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="32">name<pos:position pos:line="42" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>
		<return pos:line="43" pos:column="17">return <expr><name pos:line="43" pos:column="24">status<pos:position pos:line="43" pos:column="30"/></name></expr>;<pos:position pos:line="43" pos:column="31"/></return>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="46" pos:column="9">++<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="11">writers_num<pos:position pos:line="46" pos:column="22"/></name></expr>;<pos:position pos:line="46" pos:column="23"/></expr_stmt>
	<return pos:line="47" pos:column="9">return <expr><literal type="number" pos:line="47" pos:column="16">0<pos:position pos:line="47" pos:column="17"/></literal></expr>;<pos:position pos:line="47" pos:column="18"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

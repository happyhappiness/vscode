<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_93_collectd-4.3.3.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">lt_dlloader_add<pos:position pos:line="2" pos:column="16"/></name> <argument_list pos:line="2" pos:column="17">(<argument><expr><name pos:line="2" pos:column="18">place<pos:position pos:line="2" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="25">dlloader<pos:position pos:line="2" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="35">loader_name<pos:position pos:line="2" pos:column="46"/></name></expr></argument>)<pos:position pos:line="2" pos:column="47"/></argument_list>
     <name pos:line="3" pos:column="6">lt_dlloader<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier><name pos:line="3" pos:column="19">place<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="4" pos:column="6">const<pos:position pos:line="4" pos:column="11"/></specifier> <name><name pos:line="4" pos:column="12">struct<pos:position pos:line="4" pos:column="18"/></name> <name pos:line="4" pos:column="19">lt_user_dlloader<pos:position pos:line="4" pos:column="35"/></name></name> <modifier pos:line="4" pos:column="36">*<pos:position pos:line="4" pos:column="37"/></modifier></type><name pos:line="4" pos:column="37">dlloader<pos:position pos:line="4" pos:column="45"/></name></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="5" pos:column="6">const<pos:position pos:line="5" pos:column="11"/></specifier> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">loader_name<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">errors<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">lt_dlloader<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">node<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr></init></decl>, <modifier pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="27">ptr<pos:position pos:line="8" pos:column="30"/></name> <init pos:line="8" pos:column="31">= <expr><literal type="number" pos:line="8" pos:column="33">0<pos:position pos:line="8" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">dlloader<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <literal type="number" pos:line="10" pos:column="20">0<pos:position pos:line="10" pos:column="21"/></literal><operator pos:line="10" pos:column="21">)<pos:position pos:line="10" pos:column="22"/></operator>	<comment type="block" pos:line="10" pos:column="25">/* diagnose null parameters */</comment>
      <operator pos:line="11" pos:column="7">||<pos:position pos:line="11" pos:column="9"/></operator> <operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name><name pos:line="11" pos:column="11">dlloader<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">module_open<pos:position pos:line="11" pos:column="32"/></name></name> <operator pos:line="11" pos:column="33">==<pos:position pos:line="11" pos:column="35"/></operator> <literal type="number" pos:line="11" pos:column="36">0<pos:position pos:line="11" pos:column="37"/></literal><operator pos:line="11" pos:column="37">)<pos:position pos:line="11" pos:column="38"/></operator>
      <operator pos:line="12" pos:column="7">||<pos:position pos:line="12" pos:column="9"/></operator> <operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name><name pos:line="12" pos:column="11">dlloader<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">module_close<pos:position pos:line="12" pos:column="33"/></name></name> <operator pos:line="12" pos:column="34">==<pos:position pos:line="12" pos:column="36"/></operator> <literal type="number" pos:line="12" pos:column="37">0<pos:position pos:line="12" pos:column="38"/></literal><operator pos:line="12" pos:column="38">)<pos:position pos:line="12" pos:column="39"/></operator>
      <operator pos:line="13" pos:column="7">||<pos:position pos:line="13" pos:column="9"/></operator> <operator pos:line="13" pos:column="10">(<pos:position pos:line="13" pos:column="11"/></operator><name><name pos:line="13" pos:column="11">dlloader<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">find_sym<pos:position pos:line="13" pos:column="29"/></name></name> <operator pos:line="13" pos:column="30">==<pos:position pos:line="13" pos:column="32"/></operator> <literal type="number" pos:line="13" pos:column="33">0<pos:position pos:line="13" pos:column="34"/></literal><operator pos:line="13" pos:column="34">)<pos:position pos:line="13" pos:column="35"/></operator></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36">
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">LT_DLMUTEX_SETERROR<pos:position pos:line="15" pos:column="26"/></name> <argument_list pos:line="15" pos:column="27">(<argument><expr><call><name pos:line="15" pos:column="28">LT_DLSTRERROR<pos:position pos:line="15" pos:column="41"/></name> <argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">INVALID_LOADER<pos:position pos:line="15" pos:column="57"/></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="60"/></expr_stmt>
      <return pos:line="16" pos:column="7">return <expr><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal></expr>;<pos:position pos:line="16" pos:column="16"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="19" pos:column="3">/* Create a new dlloader node with copies of the user callbacks.  */</comment>
  <expr_stmt><expr><name pos:line="20" pos:column="3">node<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <call><name pos:line="20" pos:column="10">LT_EMALLOC<pos:position pos:line="20" pos:column="20"/></name> <argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">lt_dlloader<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="35">1<pos:position pos:line="20" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">node<pos:position pos:line="21" pos:column="12"/></name></expr>)<pos:position pos:line="21" pos:column="13"/></condition><then pos:line="21" pos:column="13">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><literal type="number" pos:line="22" pos:column="12">1<pos:position pos:line="22" pos:column="13"/></literal></expr>;<pos:position pos:line="22" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="24" pos:column="3">node<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">next<pos:position pos:line="24" pos:column="13"/></name></name>		<operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <literal type="number" pos:line="24" pos:column="27">0<pos:position pos:line="24" pos:column="28"/></literal></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">node<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">loader_name<pos:position pos:line="25" pos:column="20"/></name></name>	<operator pos:line="25" pos:column="25">=<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">loader_name<pos:position pos:line="25" pos:column="38"/></name></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">node<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">sym_prefix<pos:position pos:line="26" pos:column="19"/></name></name>	<operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <name><name pos:line="26" pos:column="27">dlloader<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">-&gt;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="37">sym_prefix<pos:position pos:line="26" pos:column="47"/></name></name></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">node<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">dlloader_exit<pos:position pos:line="27" pos:column="22"/></name></name>	<operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <name><name pos:line="27" pos:column="27">dlloader<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">-&gt;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="37">dlloader_exit<pos:position pos:line="27" pos:column="50"/></name></name></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">node<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">-&gt;<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="9">module_open<pos:position pos:line="28" pos:column="20"/></name></name>	<operator pos:line="28" pos:column="25">=<pos:position pos:line="28" pos:column="26"/></operator> <name><name pos:line="28" pos:column="27">dlloader<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">-&gt;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="37">module_open<pos:position pos:line="28" pos:column="48"/></name></name></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">node<pos:position pos:line="29" pos:column="7"/></name><operator pos:line="29" pos:column="7">-&gt;<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="9">module_close<pos:position pos:line="29" pos:column="21"/></name></name>	<operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <name><name pos:line="29" pos:column="27">dlloader<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">-&gt;<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="37">module_close<pos:position pos:line="29" pos:column="49"/></name></name></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">node<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">find_sym<pos:position pos:line="30" pos:column="17"/></name></name>	<operator pos:line="30" pos:column="25">=<pos:position pos:line="30" pos:column="26"/></operator> <name><name pos:line="30" pos:column="27">dlloader<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">find_sym<pos:position pos:line="30" pos:column="45"/></name></name></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">node<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">-&gt;<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="9">dlloader_data<pos:position pos:line="31" pos:column="22"/></name></name>	<operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <name><name pos:line="31" pos:column="27">dlloader<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">-&gt;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="37">dlloader_data<pos:position pos:line="31" pos:column="50"/></name></name></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">LT_DLMUTEX_LOCK<pos:position pos:line="33" pos:column="18"/></name> <argument_list pos:line="33" pos:column="19">()<pos:position pos:line="33" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="22"/></expr_stmt>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><operator pos:line="34" pos:column="7">!<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">loaders<pos:position pos:line="34" pos:column="15"/></name></expr>)<pos:position pos:line="34" pos:column="16"/></condition><then pos:line="34" pos:column="16">
    <block pos:line="35" pos:column="5">{
      <comment type="block" pos:line="36" pos:column="7">/* If there are no loaders, NODE becomes the list! */</comment>
      <expr_stmt><expr><name pos:line="37" pos:column="7">loaders<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <name pos:line="37" pos:column="17">node<pos:position pos:line="37" pos:column="21"/></name></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then>
  <elseif pos:line="39" pos:column="3">else <if pos:line="39" pos:column="8">if <condition pos:line="39" pos:column="11">(<expr><operator pos:line="39" pos:column="12">!<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">place<pos:position pos:line="39" pos:column="18"/></name></expr>)<pos:position pos:line="39" pos:column="19"/></condition><then pos:line="39" pos:column="19">
    <block pos:line="40" pos:column="5">{
      <comment type="block" pos:line="41" pos:column="7">/* If PLACE is not set, add NODE to the end of the
	 LOADERS list. */</comment>
      <for pos:line="43" pos:column="7">for <control pos:line="43" pos:column="11">(<init><expr><name pos:line="43" pos:column="12">ptr<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <name pos:line="43" pos:column="18">loaders<pos:position pos:line="43" pos:column="25"/></name></expr>;<pos:position pos:line="43" pos:column="26"/></init> <condition><expr><name><name pos:line="43" pos:column="27">ptr<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">-&gt;<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="32">next<pos:position pos:line="43" pos:column="36"/></name></name></expr>;<pos:position pos:line="43" pos:column="37"/></condition> <incr><expr><name pos:line="43" pos:column="38">ptr<pos:position pos:line="43" pos:column="41"/></name> <operator pos:line="43" pos:column="42">=<pos:position pos:line="43" pos:column="43"/></operator> <name><name pos:line="43" pos:column="44">ptr<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">-&gt;<pos:position pos:line="43" pos:column="52"/></operator><name pos:line="43" pos:column="49">next<pos:position pos:line="43" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="43" pos:column="54"/></control>
	<block pos:line="44" pos:column="9">{
	  <comment type="block" pos:line="45" pos:column="11">/*NOWORK*/</comment><empty_stmt pos:line="45" pos:column="21">;<pos:position pos:line="45" pos:column="22"/></empty_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></for>

      <expr_stmt><expr><name><name pos:line="48" pos:column="7">ptr<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">-&gt;<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="12">next<pos:position pos:line="48" pos:column="16"/></name></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <name pos:line="48" pos:column="19">node<pos:position pos:line="48" pos:column="23"/></name></expr>;<pos:position pos:line="48" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if></elseif>
  <elseif pos:line="50" pos:column="3">else <if pos:line="50" pos:column="8">if <condition pos:line="50" pos:column="11">(<expr><name pos:line="50" pos:column="12">loaders<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">==<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="23">place<pos:position pos:line="50" pos:column="28"/></name></expr>)<pos:position pos:line="50" pos:column="29"/></condition><then pos:line="50" pos:column="29">
    <block pos:line="51" pos:column="5">{
      <comment type="block" pos:line="52" pos:column="7">/* If PLACE is the first loader, NODE goes first. */</comment>
      <expr_stmt><expr><name><name pos:line="53" pos:column="7">node<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">next<pos:position pos:line="53" pos:column="17"/></name></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <name pos:line="53" pos:column="20">place<pos:position pos:line="53" pos:column="25"/></name></expr>;<pos:position pos:line="53" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name pos:line="54" pos:column="7">loaders<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">=<pos:position pos:line="54" pos:column="16"/></operator> <name pos:line="54" pos:column="17">node<pos:position pos:line="54" pos:column="21"/></name></expr>;<pos:position pos:line="54" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if></elseif>
  <else pos:line="56" pos:column="3">else
    <block pos:line="57" pos:column="5">{
      <comment type="block" pos:line="58" pos:column="7">/* Find the node immediately preceding PLACE. */</comment>
      <for pos:line="59" pos:column="7">for <control pos:line="59" pos:column="11">(<init><expr><name pos:line="59" pos:column="12">ptr<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <name pos:line="59" pos:column="18">loaders<pos:position pos:line="59" pos:column="25"/></name></expr>;<pos:position pos:line="59" pos:column="26"/></init> <condition><expr><name><name pos:line="59" pos:column="27">ptr<pos:position pos:line="59" pos:column="30"/></name><operator pos:line="59" pos:column="30">-&gt;<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="32">next<pos:position pos:line="59" pos:column="36"/></name></name> <operator pos:line="59" pos:column="37">!=<pos:position pos:line="59" pos:column="39"/></operator> <name pos:line="59" pos:column="40">place<pos:position pos:line="59" pos:column="45"/></name></expr>;<pos:position pos:line="59" pos:column="46"/></condition> <incr><expr><name pos:line="59" pos:column="47">ptr<pos:position pos:line="59" pos:column="50"/></name> <operator pos:line="59" pos:column="51">=<pos:position pos:line="59" pos:column="52"/></operator> <name><name pos:line="59" pos:column="53">ptr<pos:position pos:line="59" pos:column="56"/></name><operator pos:line="59" pos:column="56">-&gt;<pos:position pos:line="59" pos:column="61"/></operator><name pos:line="59" pos:column="58">next<pos:position pos:line="59" pos:column="62"/></name></name></expr></incr>)<pos:position pos:line="59" pos:column="63"/></control>
	<block pos:line="60" pos:column="9">{
	  <comment type="block" pos:line="61" pos:column="11">/*NOWORK*/</comment><empty_stmt pos:line="61" pos:column="21">;<pos:position pos:line="61" pos:column="22"/></empty_stmt>
	}<pos:position pos:line="62" pos:column="10"/></block></for>

      <if pos:line="64" pos:column="7">if <condition pos:line="64" pos:column="10">(<expr><name><name pos:line="64" pos:column="11">ptr<pos:position pos:line="64" pos:column="14"/></name><operator pos:line="64" pos:column="14">-&gt;<pos:position pos:line="64" pos:column="19"/></operator><name pos:line="64" pos:column="16">next<pos:position pos:line="64" pos:column="20"/></name></name> <operator pos:line="64" pos:column="21">!=<pos:position pos:line="64" pos:column="23"/></operator> <name pos:line="64" pos:column="24">place<pos:position pos:line="64" pos:column="29"/></name></expr>)<pos:position pos:line="64" pos:column="30"/></condition><then pos:line="64" pos:column="30">
	<block pos:line="65" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="66" pos:column="11">LT_DLMUTEX_SETERROR<pos:position pos:line="66" pos:column="30"/></name> <argument_list pos:line="66" pos:column="31">(<argument><expr><call><name pos:line="66" pos:column="32">LT_DLSTRERROR<pos:position pos:line="66" pos:column="45"/></name> <argument_list pos:line="66" pos:column="46">(<argument><expr><name pos:line="66" pos:column="47">INVALID_LOADER<pos:position pos:line="66" pos:column="61"/></name></expr></argument>)<pos:position pos:line="66" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="64"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="67" pos:column="11">++<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="13">errors<pos:position pos:line="67" pos:column="19"/></name></expr>;<pos:position pos:line="67" pos:column="20"/></expr_stmt>
	}<pos:position pos:line="68" pos:column="10"/></block></then>
      <else pos:line="69" pos:column="7">else
	<block pos:line="70" pos:column="9">{
	  <comment type="block" pos:line="71" pos:column="11">/* Insert NODE between PTR and PLACE. */</comment>
	  <expr_stmt><expr><name><name pos:line="72" pos:column="11">node<pos:position pos:line="72" pos:column="15"/></name><operator pos:line="72" pos:column="15">-&gt;<pos:position pos:line="72" pos:column="20"/></operator><name pos:line="72" pos:column="17">next<pos:position pos:line="72" pos:column="21"/></name></name> <operator pos:line="72" pos:column="22">=<pos:position pos:line="72" pos:column="23"/></operator> <name pos:line="72" pos:column="24">place<pos:position pos:line="72" pos:column="29"/></name></expr>;<pos:position pos:line="72" pos:column="30"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="73" pos:column="11">ptr<pos:position pos:line="73" pos:column="14"/></name><operator pos:line="73" pos:column="14">-&gt;<pos:position pos:line="73" pos:column="19"/></operator><name pos:line="73" pos:column="16">next<pos:position pos:line="73" pos:column="20"/></name></name>  <operator pos:line="73" pos:column="22">=<pos:position pos:line="73" pos:column="23"/></operator> <name pos:line="73" pos:column="24">node<pos:position pos:line="73" pos:column="28"/></name></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="74" pos:column="10"/></block></else></if>
    }<pos:position pos:line="75" pos:column="6"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="77" pos:column="3">LT_DLMUTEX_UNLOCK<pos:position pos:line="77" pos:column="20"/></name> <argument_list pos:line="77" pos:column="21">()<pos:position pos:line="77" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="24"/></expr_stmt>

  <return pos:line="79" pos:column="3">return <expr><name pos:line="79" pos:column="10">errors<pos:position pos:line="79" pos:column="16"/></name></expr>;<pos:position pos:line="79" pos:column="17"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></unit>

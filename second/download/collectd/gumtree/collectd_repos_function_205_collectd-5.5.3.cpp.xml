<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_205_collectd-5.5.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">format_graphite<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">buffer<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">size_t<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">buffer_size<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="2" pos:column="5">data_set_t<pos:position pos:line="2" pos:column="15"/></name> <specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">ds<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">value_list_t<pos:position pos:line="2" pos:column="39"/></name> <specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">vl<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <specifier pos:line="3" pos:column="10">const<pos:position pos:line="3" pos:column="15"/></specifier> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">prefix<pos:position pos:line="3" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="25">char<pos:position pos:line="3" pos:column="29"/></name> <specifier pos:line="3" pos:column="30">const<pos:position pos:line="3" pos:column="35"/></specifier> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">postfix<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="46">char<pos:position pos:line="3" pos:column="50"/></name> <specifier pos:line="3" pos:column="51">const<pos:position pos:line="3" pos:column="56"/></specifier></type> <name pos:line="3" pos:column="57">escape_char<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">flags<pos:position pos:line="4" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="24"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">status<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">buffer_pos<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">gauge_t<pos:position pos:line="10" pos:column="12"/></name> <modifier pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></modifier></type><name pos:line="10" pos:column="14">rates<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><name pos:line="10" pos:column="22">NULL<pos:position pos:line="10" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">flags<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">&amp;<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="17">GRAPHITE_STORE_RATES<pos:position pos:line="11" pos:column="37"/></name></expr>)<pos:position pos:line="11" pos:column="38"/></condition><then pos:line="11" pos:column="38">
      <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="7">rates<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name pos:line="12" pos:column="15">uc_get_rate<pos:position pos:line="12" pos:column="26"/></name> <argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">ds<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">vl<pos:position pos:line="12" pos:column="34"/></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt></block></then></if>

    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">i<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></init> <condition><expr><name pos:line="14" pos:column="17">i<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">&lt;<pos:position pos:line="14" pos:column="23"/></operator> <name><name pos:line="14" pos:column="21">ds<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">ds_num<pos:position pos:line="14" pos:column="31"/></name></name></expr>;<pos:position pos:line="14" pos:column="32"/></condition> <incr><expr><name pos:line="14" pos:column="33">i<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">++<pos:position pos:line="14" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="37"/></control>
    <block pos:line="15" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name> <specifier pos:line="16" pos:column="14">const<pos:position pos:line="16" pos:column="19"/></specifier> <modifier pos:line="16" pos:column="20">*<pos:position pos:line="16" pos:column="21"/></modifier></type><name pos:line="16" pos:column="21">ds_name<pos:position pos:line="16" pos:column="28"/></name> <init pos:line="16" pos:column="29">= <expr><name pos:line="16" pos:column="31">NULL<pos:position pos:line="16" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name></type>        <name><name pos:line="17" pos:column="21">key<pos:position pos:line="17" pos:column="24"/></name><index pos:line="17" pos:column="24">[<expr><literal type="number" pos:line="17" pos:column="25">10<pos:position pos:line="17" pos:column="27"/></literal><operator pos:line="17" pos:column="27">*<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">DATA_MAX_NAME_LEN<pos:position pos:line="17" pos:column="45"/></name></expr>]<pos:position pos:line="17" pos:column="46"/></index></name></decl>;<pos:position pos:line="17" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">char<pos:position pos:line="18" pos:column="13"/></name></type>        <name><name pos:line="18" pos:column="21">values<pos:position pos:line="18" pos:column="27"/></name><index pos:line="18" pos:column="27">[<expr><literal type="number" pos:line="18" pos:column="28">512<pos:position pos:line="18" pos:column="31"/></literal></expr>]<pos:position pos:line="18" pos:column="32"/></index></name></decl>;<pos:position pos:line="18" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">size_t<pos:position pos:line="19" pos:column="15"/></name></type>      <name pos:line="19" pos:column="21">message_len<pos:position pos:line="19" pos:column="32"/></name></decl>;<pos:position pos:line="19" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">char<pos:position pos:line="20" pos:column="13"/></name></type>        <name><name pos:line="20" pos:column="21">message<pos:position pos:line="20" pos:column="28"/></name><index pos:line="20" pos:column="28">[<expr><literal type="number" pos:line="20" pos:column="29">1024<pos:position pos:line="20" pos:column="33"/></literal></expr>]<pos:position pos:line="20" pos:column="34"/></index></name></decl>;<pos:position pos:line="20" pos:column="35"/></decl_stmt>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">(<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">flags<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">&amp;<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="22">GRAPHITE_ALWAYS_APPEND_DS<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">)<pos:position pos:line="22" pos:column="48"/></operator>
            <operator pos:line="23" pos:column="13">||<pos:position pos:line="23" pos:column="15"/></operator> <operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name><name pos:line="23" pos:column="17">ds<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">ds_num<pos:position pos:line="23" pos:column="27"/></name></name> <operator pos:line="23" pos:column="28">&gt;<pos:position pos:line="23" pos:column="32"/></operator> <literal type="number" pos:line="23" pos:column="30">1<pos:position pos:line="23" pos:column="31"/></literal><operator pos:line="23" pos:column="31">)<pos:position pos:line="23" pos:column="32"/></operator></expr>)<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33">
          <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="11">ds_name<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name><name pos:line="24" pos:column="21">ds<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">-&gt;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="25">ds<pos:position pos:line="24" pos:column="27"/></name><index pos:line="24" pos:column="27">[<expr><name pos:line="24" pos:column="28">i<pos:position pos:line="24" pos:column="29"/></name></expr>]<pos:position pos:line="24" pos:column="30"/></index></name><operator pos:line="24" pos:column="30">.<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="31">name<pos:position pos:line="24" pos:column="35"/></name></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="26" pos:column="9">/* Copy the identifier to `key' and escape it. */</comment>
        <expr_stmt><expr><name pos:line="27" pos:column="9">status<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <call><name pos:line="27" pos:column="18">gr_format_name<pos:position pos:line="27" pos:column="32"/></name> <argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">key<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="39">sizeof <argument_list pos:line="27" pos:column="46">(<argument><expr><name pos:line="27" pos:column="47">key<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="27" pos:column="53">vl<pos:position pos:line="27" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="57">ds_name<pos:position pos:line="27" pos:column="64"/></name></expr></argument>,
                    <argument><expr><name pos:line="28" pos:column="21">prefix<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="29">postfix<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">escape_char<pos:position pos:line="28" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="51">flags<pos:position pos:line="28" pos:column="56"/></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">status<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">!=<pos:position pos:line="29" pos:column="22"/></operator> <literal type="number" pos:line="29" pos:column="23">0<pos:position pos:line="29" pos:column="24"/></literal></expr>)<pos:position pos:line="29" pos:column="25"/></condition><then pos:line="29" pos:column="25">
        <block pos:line="30" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">ERROR<pos:position pos:line="31" pos:column="18"/></name> <argument_list pos:line="31" pos:column="19">(<argument><expr><literal type="string" pos:line="31" pos:column="20">"format_graphite: error with gr_format_name"<pos:position pos:line="31" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">sfree<pos:position pos:line="32" pos:column="18"/></name> <argument_list pos:line="32" pos:column="19">(<argument><expr><name pos:line="32" pos:column="20">rates<pos:position pos:line="32" pos:column="25"/></name></expr></argument>)<pos:position pos:line="32" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>
            <return pos:line="33" pos:column="13">return <expr><operator pos:line="33" pos:column="20">(<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">status<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">)<pos:position pos:line="33" pos:column="28"/></operator></expr>;<pos:position pos:line="33" pos:column="29"/></return>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="36" pos:column="9">escape_graphite_string<pos:position pos:line="36" pos:column="31"/></name> <argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">key<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="38">escape_char<pos:position pos:line="36" pos:column="49"/></name></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>
        <comment type="block" pos:line="37" pos:column="9">/* Convert the values to an ASCII representation and put that into
         * `values'. */</comment>
        <expr_stmt><expr><name pos:line="39" pos:column="9">status<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">gr_format_values<pos:position pos:line="39" pos:column="34"/></name> <argument_list pos:line="39" pos:column="35">(<argument><expr><name pos:line="39" pos:column="36">values<pos:position pos:line="39" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="44">sizeof <argument_list pos:line="39" pos:column="51">(<argument><expr><name pos:line="39" pos:column="52">values<pos:position pos:line="39" pos:column="58"/></name></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="39" pos:column="61">i<pos:position pos:line="39" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="64">ds<pos:position pos:line="39" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="68">vl<pos:position pos:line="39" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="72">rates<pos:position pos:line="39" pos:column="77"/></name></expr></argument>)<pos:position pos:line="39" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="79"/></expr_stmt>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">status<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">!=<pos:position pos:line="40" pos:column="22"/></operator> <literal type="number" pos:line="40" pos:column="23">0<pos:position pos:line="40" pos:column="24"/></literal></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25">
        <block pos:line="41" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">ERROR<pos:position pos:line="42" pos:column="18"/></name> <argument_list pos:line="42" pos:column="19">(<argument><expr><literal type="string" pos:line="42" pos:column="20">"format_graphite: error with gr_format_values"<pos:position pos:line="42" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">sfree<pos:position pos:line="43" pos:column="18"/></name> <argument_list pos:line="43" pos:column="19">(<argument><expr><name pos:line="43" pos:column="20">rates<pos:position pos:line="43" pos:column="25"/></name></expr></argument>)<pos:position pos:line="43" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt>
            <return pos:line="44" pos:column="13">return <expr><operator pos:line="44" pos:column="20">(<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="21">status<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">)<pos:position pos:line="44" pos:column="28"/></operator></expr>;<pos:position pos:line="44" pos:column="29"/></return>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="47" pos:column="9">/* Compute the graphite command */</comment>
        <expr_stmt><expr><name pos:line="48" pos:column="9">message_len<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <operator pos:line="48" pos:column="23">(<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="24">size_t<pos:position pos:line="48" pos:column="30"/></name><operator pos:line="48" pos:column="30">)<pos:position pos:line="48" pos:column="31"/></operator> <call><name pos:line="48" pos:column="32">ssnprintf<pos:position pos:line="48" pos:column="41"/></name> <argument_list pos:line="48" pos:column="42">(<argument><expr><name pos:line="48" pos:column="43">message<pos:position pos:line="48" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="52">sizeof <argument_list pos:line="48" pos:column="59">(<argument><expr><name pos:line="48" pos:column="60">message<pos:position pos:line="48" pos:column="67"/></name></expr></argument>)<pos:position pos:line="48" pos:column="68"/></argument_list></sizeof></expr></argument>,
                <argument><expr><literal type="string" pos:line="49" pos:column="17">"%s %s %u\r\n"<pos:position pos:line="49" pos:column="31"/></literal></expr></argument>,
                <argument><expr><name pos:line="50" pos:column="17">key<pos:position pos:line="50" pos:column="20"/></name></expr></argument>,
                <argument><expr><name pos:line="51" pos:column="17">values<pos:position pos:line="51" pos:column="23"/></name></expr></argument>,
                <argument><expr><operator pos:line="52" pos:column="17">(<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="18">unsigned<pos:position pos:line="52" pos:column="26"/></name> <name pos:line="52" pos:column="27">int<pos:position pos:line="52" pos:column="30"/></name><operator pos:line="52" pos:column="30">)<pos:position pos:line="52" pos:column="31"/></operator> <call><name pos:line="52" pos:column="32">CDTIME_T_TO_TIME_T<pos:position pos:line="52" pos:column="50"/></name> <argument_list pos:line="52" pos:column="51">(<argument><expr><name><name pos:line="52" pos:column="52">vl<pos:position pos:line="52" pos:column="54"/></name><operator pos:line="52" pos:column="54">-&gt;<pos:position pos:line="52" pos:column="59"/></operator><name pos:line="52" pos:column="56">time<pos:position pos:line="52" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="63"/></expr_stmt>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">message_len<pos:position pos:line="53" pos:column="24"/></name> <operator pos:line="53" pos:column="25">&gt;=<pos:position pos:line="53" pos:column="30"/></operator> <sizeof pos:line="53" pos:column="28">sizeof <argument_list pos:line="53" pos:column="35">(<argument><expr><name pos:line="53" pos:column="36">message<pos:position pos:line="53" pos:column="43"/></name></expr></argument>)<pos:position pos:line="53" pos:column="44"/></argument_list></sizeof></expr>)<pos:position pos:line="53" pos:column="45"/></condition><then pos:line="53" pos:column="45"> <block pos:line="53" pos:column="46">{
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">ERROR<pos:position pos:line="54" pos:column="18"/></name> <argument_list pos:line="54" pos:column="19">(<argument><expr><literal type="string" pos:line="54" pos:column="20">"format_graphite: message buffer too small: "<pos:position pos:line="54" pos:column="65"/></literal>
                    <literal type="string" pos:line="55" pos:column="21">"Need %zu bytes."<pos:position pos:line="55" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="40">message_len<pos:position pos:line="55" pos:column="51"/></name> <operator pos:line="55" pos:column="52">+<pos:position pos:line="55" pos:column="53"/></operator> <literal type="number" pos:line="55" pos:column="54">1<pos:position pos:line="55" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">sfree<pos:position pos:line="56" pos:column="18"/></name> <argument_list pos:line="56" pos:column="19">(<argument><expr><name pos:line="56" pos:column="20">rates<pos:position pos:line="56" pos:column="25"/></name></expr></argument>)<pos:position pos:line="56" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="27"/></expr_stmt>
            <return pos:line="57" pos:column="13">return <expr><operator pos:line="57" pos:column="20">(<pos:position pos:line="57" pos:column="21"/></operator><operator pos:line="57" pos:column="21">-<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="22">ENOMEM<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">)<pos:position pos:line="57" pos:column="29"/></operator></expr>;<pos:position pos:line="57" pos:column="30"/></return>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="60" pos:column="9">/* Append it in case we got multiple data set */</comment>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">(<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">buffer_pos<pos:position pos:line="61" pos:column="24"/></name> <operator pos:line="61" pos:column="25">+<pos:position pos:line="61" pos:column="26"/></operator> <name pos:line="61" pos:column="27">message_len<pos:position pos:line="61" pos:column="38"/></name><operator pos:line="61" pos:column="38">)<pos:position pos:line="61" pos:column="39"/></operator> <operator pos:line="61" pos:column="40">&gt;=<pos:position pos:line="61" pos:column="45"/></operator> <name pos:line="61" pos:column="43">buffer_size<pos:position pos:line="61" pos:column="54"/></name></expr>)<pos:position pos:line="61" pos:column="55"/></condition><then pos:line="61" pos:column="55">
        <block pos:line="62" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">ERROR<pos:position pos:line="63" pos:column="18"/></name> <argument_list pos:line="63" pos:column="19">(<argument><expr><literal type="string" pos:line="63" pos:column="20">"format_graphite: target buffer too small"<pos:position pos:line="63" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">sfree<pos:position pos:line="64" pos:column="18"/></name> <argument_list pos:line="64" pos:column="19">(<argument><expr><name pos:line="64" pos:column="20">rates<pos:position pos:line="64" pos:column="25"/></name></expr></argument>)<pos:position pos:line="64" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="27"/></expr_stmt>
            <return pos:line="65" pos:column="13">return <expr><operator pos:line="65" pos:column="20">(<pos:position pos:line="65" pos:column="21"/></operator><operator pos:line="65" pos:column="21">-<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="22">ENOMEM<pos:position pos:line="65" pos:column="28"/></name><operator pos:line="65" pos:column="28">)<pos:position pos:line="65" pos:column="29"/></operator></expr>;<pos:position pos:line="65" pos:column="30"/></return>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">memcpy<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><operator pos:line="67" pos:column="16">(<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="17">void<pos:position pos:line="67" pos:column="21"/></name> <operator pos:line="67" pos:column="22">*<pos:position pos:line="67" pos:column="23"/></operator><operator pos:line="67" pos:column="23">)<pos:position pos:line="67" pos:column="24"/></operator> <operator pos:line="67" pos:column="25">(<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="26">buffer<pos:position pos:line="67" pos:column="32"/></name> <operator pos:line="67" pos:column="33">+<pos:position pos:line="67" pos:column="34"/></operator> <name pos:line="67" pos:column="35">buffer_pos<pos:position pos:line="67" pos:column="45"/></name><operator pos:line="67" pos:column="45">)<pos:position pos:line="67" pos:column="46"/></operator></expr></argument>, <argument><expr><name pos:line="67" pos:column="48">message<pos:position pos:line="67" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="57">message_len<pos:position pos:line="67" pos:column="68"/></name></expr></argument>)<pos:position pos:line="67" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><name pos:line="68" pos:column="9">buffer_pos<pos:position pos:line="68" pos:column="19"/></name> <operator pos:line="68" pos:column="20">+=<pos:position pos:line="68" pos:column="22"/></operator> <name pos:line="68" pos:column="23">message_len<pos:position pos:line="68" pos:column="34"/></name></expr>;<pos:position pos:line="68" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="69" pos:column="9">buffer<pos:position pos:line="69" pos:column="15"/></name><index pos:line="69" pos:column="15">[<expr><name pos:line="69" pos:column="16">buffer_pos<pos:position pos:line="69" pos:column="26"/></name></expr>]<pos:position pos:line="69" pos:column="27"/></index></name> <operator pos:line="69" pos:column="28">=<pos:position pos:line="69" pos:column="29"/></operator> <literal type="char" pos:line="69" pos:column="30">'\0'<pos:position pos:line="69" pos:column="34"/></literal></expr>;<pos:position pos:line="69" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">sfree<pos:position pos:line="71" pos:column="10"/></name> <argument_list pos:line="71" pos:column="11">(<argument><expr><name pos:line="71" pos:column="12">rates<pos:position pos:line="71" pos:column="17"/></name></expr></argument>)<pos:position pos:line="71" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="19"/></expr_stmt>
    <return pos:line="72" pos:column="5">return <expr><operator pos:line="72" pos:column="12">(<pos:position pos:line="72" pos:column="13"/></operator><name pos:line="72" pos:column="13">status<pos:position pos:line="72" pos:column="19"/></name><operator pos:line="72" pos:column="19">)<pos:position pos:line="72" pos:column="20"/></operator></expr>;<pos:position pos:line="72" pos:column="21"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

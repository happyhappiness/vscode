<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_191_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rra_get<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier><modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">ret<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">value_list_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">vl<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="57">/* {{{ */</comment>
                   <parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">rrdcreate_config_t<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">cfg<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list> <block pos:line="2" pos:column="51">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier><modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">rra_def<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">rra_num<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name> <modifier pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></modifier></type><name pos:line="6" pos:column="8">rts<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rts_num<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">rra_max<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">cdp_num<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">cdp_len<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* The stepsize we use here: If it is user-set, use it. If not, use the
   * interval of the value-list. */</comment>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">ss<pos:position pos:line="16" pos:column="9"/></name></decl>;<pos:position pos:line="16" pos:column="10"/></decl_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name><name pos:line="18" pos:column="7">cfg<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">rrarows<pos:position pos:line="18" pos:column="19"/></name></name> <operator pos:line="18" pos:column="20">&lt;=<pos:position pos:line="18" pos:column="25"/></operator> <literal type="number" pos:line="18" pos:column="23">0<pos:position pos:line="18" pos:column="24"/></literal></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25"> <block pos:line="18" pos:column="26">{
    <expr_stmt><expr><operator pos:line="19" pos:column="5">*<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">ret<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <name pos:line="19" pos:column="12">NULL<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><operator pos:line="20" pos:column="13">-<pos:position pos:line="20" pos:column="14"/></operator><literal type="number" pos:line="20" pos:column="14">1<pos:position pos:line="20" pos:column="15"/></literal><operator pos:line="20" pos:column="15">)<pos:position pos:line="20" pos:column="16"/></operator></expr>;<pos:position pos:line="20" pos:column="17"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><operator pos:line="23" pos:column="7">(<pos:position pos:line="23" pos:column="8"/></operator><name><name pos:line="23" pos:column="8">cfg<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">xff<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">&lt;<pos:position pos:line="23" pos:column="21"/></operator> <literal type="number" pos:line="23" pos:column="19">0<pos:position pos:line="23" pos:column="20"/></literal><operator pos:line="23" pos:column="20">)<pos:position pos:line="23" pos:column="21"/></operator> <operator pos:line="23" pos:column="22">||<pos:position pos:line="23" pos:column="24"/></operator> <operator pos:line="23" pos:column="25">(<pos:position pos:line="23" pos:column="26"/></operator><name><name pos:line="23" pos:column="26">cfg<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-&gt;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="31">xff<pos:position pos:line="23" pos:column="34"/></name></name> <operator pos:line="23" pos:column="35">&gt;=<pos:position pos:line="23" pos:column="40"/></operator> <literal type="number" pos:line="23" pos:column="38">1.0<pos:position pos:line="23" pos:column="41"/></literal><operator pos:line="23" pos:column="41">)<pos:position pos:line="23" pos:column="42"/></operator></expr>)<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43"> <block pos:line="23" pos:column="44">{
    <expr_stmt><expr><operator pos:line="24" pos:column="5">*<pos:position pos:line="24" pos:column="6"/></operator><name pos:line="24" pos:column="6">ret<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <name pos:line="24" pos:column="12">NULL<pos:position pos:line="24" pos:column="16"/></name></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><operator pos:line="25" pos:column="13">-<pos:position pos:line="25" pos:column="14"/></operator><literal type="number" pos:line="25" pos:column="14">1<pos:position pos:line="25" pos:column="15"/></literal><operator pos:line="25" pos:column="15">)<pos:position pos:line="25" pos:column="16"/></operator></expr>;<pos:position pos:line="25" pos:column="17"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name><name pos:line="28" pos:column="7">cfg<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">stepsize<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">&gt;<pos:position pos:line="28" pos:column="25"/></operator> <literal type="number" pos:line="28" pos:column="23">0<pos:position pos:line="28" pos:column="24"/></literal></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="5">ss<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <name><name pos:line="29" pos:column="10">cfg<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">-&gt;<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="15">stepsize<pos:position pos:line="29" pos:column="23"/></name></name></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt></block></then>
  <else pos:line="30" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="5">ss<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="11">int<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">)<pos:position pos:line="31" pos:column="15"/></operator><call><name pos:line="31" pos:column="15">CDTIME_T_TO_TIME_T<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">(<argument><expr><name><name pos:line="31" pos:column="34">vl<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">interval<pos:position pos:line="31" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt></block></else></if>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">ss<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">&lt;=<pos:position pos:line="32" pos:column="15"/></operator> <literal type="number" pos:line="32" pos:column="13">0<pos:position pos:line="32" pos:column="14"/></literal></expr>)<pos:position pos:line="32" pos:column="15"/></condition><then pos:line="32" pos:column="15"> <block pos:line="32" pos:column="16">{
    <expr_stmt><expr><operator pos:line="33" pos:column="5">*<pos:position pos:line="33" pos:column="6"/></operator><name pos:line="33" pos:column="6">ret<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <name pos:line="33" pos:column="12">NULL<pos:position pos:line="33" pos:column="16"/></name></expr>;<pos:position pos:line="33" pos:column="17"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><operator pos:line="34" pos:column="13">-<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal><operator pos:line="34" pos:column="15">)<pos:position pos:line="34" pos:column="16"/></operator></expr>;<pos:position pos:line="34" pos:column="17"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="37" pos:column="3">/* Use the configured timespans or fall back to the built-in defaults */</comment>
  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name><name pos:line="38" pos:column="7">cfg<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">timespans_num<pos:position pos:line="38" pos:column="25"/></name></name> <operator pos:line="38" pos:column="26">!=<pos:position pos:line="38" pos:column="28"/></operator> <literal type="number" pos:line="38" pos:column="29">0<pos:position pos:line="38" pos:column="30"/></literal></expr>)<pos:position pos:line="38" pos:column="31"/></condition><then pos:line="38" pos:column="31"> <block pos:line="38" pos:column="32">{
    <expr_stmt><expr><name pos:line="39" pos:column="5">rts<pos:position pos:line="39" pos:column="8"/></name> <operator pos:line="39" pos:column="9">=<pos:position pos:line="39" pos:column="10"/></operator> <name><name pos:line="39" pos:column="11">cfg<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">-&gt;<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="16">timespans<pos:position pos:line="39" pos:column="25"/></name></name></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="40" pos:column="5">rts_num<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <name><name pos:line="40" pos:column="15">cfg<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">-&gt;<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="20">timespans_num<pos:position pos:line="40" pos:column="33"/></name></name></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></then> <else pos:line="41" pos:column="5">else <block pos:line="41" pos:column="10">{
    <expr_stmt><expr><name pos:line="42" pos:column="5">rts<pos:position pos:line="42" pos:column="8"/></name> <operator pos:line="42" pos:column="9">=<pos:position pos:line="42" pos:column="10"/></operator> <name pos:line="42" pos:column="11">rra_timespans<pos:position pos:line="42" pos:column="24"/></name></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">rts_num<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <name pos:line="43" pos:column="15">rra_timespans_num<pos:position pos:line="43" pos:column="32"/></name></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="46" pos:column="3">rra_max<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">=<pos:position pos:line="46" pos:column="12"/></operator> <name pos:line="46" pos:column="13">rts_num<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">*<pos:position pos:line="46" pos:column="22"/></operator> <name pos:line="46" pos:column="23">rra_types_num<pos:position pos:line="46" pos:column="36"/></name></expr>;<pos:position pos:line="46" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">assert<pos:position pos:line="47" pos:column="9"/></name><argument_list pos:line="47" pos:column="9">(<argument><expr><name pos:line="47" pos:column="10">rra_max<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">&gt;<pos:position pos:line="47" pos:column="22"/></operator> <literal type="number" pos:line="47" pos:column="20">0<pos:position pos:line="47" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><operator pos:line="49" pos:column="7">(<pos:position pos:line="49" pos:column="8"/></operator><name pos:line="49" pos:column="8">rra_def<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <call><name pos:line="49" pos:column="18">calloc<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><name pos:line="49" pos:column="25">rra_max<pos:position pos:line="49" pos:column="32"/></name> <operator pos:line="49" pos:column="33">+<pos:position pos:line="49" pos:column="34"/></operator> <literal type="number" pos:line="49" pos:column="35">1<pos:position pos:line="49" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="38">sizeof<argument_list pos:line="49" pos:column="44">(<argument><expr><operator pos:line="49" pos:column="45">*<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="46">rra_def<pos:position pos:line="49" pos:column="53"/></name></expr></argument>)<pos:position pos:line="49" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call><operator pos:line="49" pos:column="55">)<pos:position pos:line="49" pos:column="56"/></operator> <operator pos:line="49" pos:column="57">==<pos:position pos:line="49" pos:column="59"/></operator> <name pos:line="49" pos:column="60">NULL<pos:position pos:line="49" pos:column="64"/></name></expr>)<pos:position pos:line="49" pos:column="65"/></condition><then pos:line="49" pos:column="65">
    <block type="pseudo"><return pos:line="50" pos:column="5">return <expr><operator pos:line="50" pos:column="12">(<pos:position pos:line="50" pos:column="13"/></operator><operator pos:line="50" pos:column="13">-<pos:position pos:line="50" pos:column="14"/></operator><literal type="number" pos:line="50" pos:column="14">1<pos:position pos:line="50" pos:column="15"/></literal><operator pos:line="50" pos:column="15">)<pos:position pos:line="50" pos:column="16"/></operator></expr>;<pos:position pos:line="50" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="51" pos:column="3">rra_num<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <literal type="number" pos:line="51" pos:column="13">0<pos:position pos:line="51" pos:column="14"/></literal></expr>;<pos:position pos:line="51" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><name pos:line="53" pos:column="3">cdp_len<pos:position pos:line="53" pos:column="10"/></name> <operator pos:line="53" pos:column="11">=<pos:position pos:line="53" pos:column="12"/></operator> <literal type="number" pos:line="53" pos:column="13">0<pos:position pos:line="53" pos:column="14"/></literal></expr>;<pos:position pos:line="53" pos:column="15"/></expr_stmt>
  <for pos:line="54" pos:column="3">for <control pos:line="54" pos:column="7">(<init><decl><type><name pos:line="54" pos:column="8">int<pos:position pos:line="54" pos:column="11"/></name></type> <name pos:line="54" pos:column="12">i<pos:position pos:line="54" pos:column="13"/></name> <init pos:line="54" pos:column="14">= <expr><literal type="number" pos:line="54" pos:column="16">0<pos:position pos:line="54" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="54" pos:column="18"/></init> <condition><expr><name pos:line="54" pos:column="19">i<pos:position pos:line="54" pos:column="20"/></name> <operator pos:line="54" pos:column="21">&lt;<pos:position pos:line="54" pos:column="25"/></operator> <name pos:line="54" pos:column="23">rts_num<pos:position pos:line="54" pos:column="30"/></name></expr>;<pos:position pos:line="54" pos:column="31"/></condition> <incr><expr><name pos:line="54" pos:column="32">i<pos:position pos:line="54" pos:column="33"/></name><operator pos:line="54" pos:column="33">++<pos:position pos:line="54" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="36"/></control> <block pos:line="54" pos:column="37">{
    <decl_stmt><decl><type><name pos:line="55" pos:column="5">int<pos:position pos:line="55" pos:column="8"/></name></type> <name pos:line="55" pos:column="9">span<pos:position pos:line="55" pos:column="13"/></name> <init pos:line="55" pos:column="14">= <expr><name><name pos:line="55" pos:column="16">rts<pos:position pos:line="55" pos:column="19"/></name><index pos:line="55" pos:column="19">[<expr><name pos:line="55" pos:column="20">i<pos:position pos:line="55" pos:column="21"/></name></expr>]<pos:position pos:line="55" pos:column="22"/></index></name></expr></init></decl>;<pos:position pos:line="55" pos:column="23"/></decl_stmt>

    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">(<pos:position pos:line="57" pos:column="10"/></operator><name pos:line="57" pos:column="10">span<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">/<pos:position pos:line="57" pos:column="16"/></operator> <name pos:line="57" pos:column="17">ss<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">)<pos:position pos:line="57" pos:column="20"/></operator> <operator pos:line="57" pos:column="21">&lt;<pos:position pos:line="57" pos:column="25"/></operator> <name><name pos:line="57" pos:column="23">cfg<pos:position pos:line="57" pos:column="26"/></name><operator pos:line="57" pos:column="26">-&gt;<pos:position pos:line="57" pos:column="31"/></operator><name pos:line="57" pos:column="28">rrarows<pos:position pos:line="57" pos:column="35"/></name></name></expr>)<pos:position pos:line="57" pos:column="36"/></condition><then pos:line="57" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="7">span<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">=<pos:position pos:line="58" pos:column="13"/></operator> <name pos:line="58" pos:column="14">ss<pos:position pos:line="58" pos:column="16"/></name> <operator pos:line="58" pos:column="17">*<pos:position pos:line="58" pos:column="18"/></operator> <name><name pos:line="58" pos:column="19">cfg<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">-&gt;<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="24">rrarows<pos:position pos:line="58" pos:column="31"/></name></name></expr>;<pos:position pos:line="58" pos:column="32"/></expr_stmt></block></then></if>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">cdp_len<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">==<pos:position pos:line="60" pos:column="19"/></operator> <literal type="number" pos:line="60" pos:column="20">0<pos:position pos:line="60" pos:column="21"/></literal></expr>)<pos:position pos:line="60" pos:column="22"/></condition><then pos:line="60" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="7">cdp_len<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">=<pos:position pos:line="61" pos:column="16"/></operator> <literal type="number" pos:line="61" pos:column="17">1<pos:position pos:line="61" pos:column="18"/></literal></expr>;<pos:position pos:line="61" pos:column="19"/></expr_stmt></block></then>
    <else pos:line="62" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="7">cdp_len<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">=<pos:position pos:line="63" pos:column="16"/></operator> <operator pos:line="63" pos:column="17">(<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="18">int<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">)<pos:position pos:line="63" pos:column="22"/></operator><call><name pos:line="63" pos:column="22">floor<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">(<argument><expr><operator pos:line="63" pos:column="28">(<pos:position pos:line="63" pos:column="29"/></operator><operator pos:line="63" pos:column="29">(<pos:position pos:line="63" pos:column="30"/></operator><name pos:line="63" pos:column="30">double<pos:position pos:line="63" pos:column="36"/></name><operator pos:line="63" pos:column="36">)<pos:position pos:line="63" pos:column="37"/></operator><name pos:line="63" pos:column="37">span<pos:position pos:line="63" pos:column="41"/></name><operator pos:line="63" pos:column="41">)<pos:position pos:line="63" pos:column="42"/></operator> <operator pos:line="63" pos:column="43">/<pos:position pos:line="63" pos:column="44"/></operator> <operator pos:line="63" pos:column="45">(<pos:position pos:line="63" pos:column="46"/></operator><call pos:line="63" pos:column="46">(<name pos:line="63" pos:column="47">double<pos:position pos:line="63" pos:column="53"/></name>)<argument_list pos:line="63" pos:column="54">(<argument><expr><name><name pos:line="63" pos:column="55">cfg<pos:position pos:line="63" pos:column="58"/></name><operator pos:line="63" pos:column="58">-&gt;<pos:position pos:line="63" pos:column="63"/></operator><name pos:line="63" pos:column="60">rrarows<pos:position pos:line="63" pos:column="67"/></name></name> <operator pos:line="63" pos:column="68">*<pos:position pos:line="63" pos:column="69"/></operator> <name pos:line="63" pos:column="70">ss<pos:position pos:line="63" pos:column="72"/></name></expr></argument>)<pos:position pos:line="63" pos:column="73"/></argument_list></call><operator pos:line="63" pos:column="73">)<pos:position pos:line="63" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="63" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="76"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="65" pos:column="5">cdp_num<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">=<pos:position pos:line="65" pos:column="14"/></operator> <operator pos:line="65" pos:column="15">(<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="16">int<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">)<pos:position pos:line="65" pos:column="20"/></operator><call><name pos:line="65" pos:column="20">ceil<pos:position pos:line="65" pos:column="24"/></name><argument_list pos:line="65" pos:column="24">(<argument><expr><operator pos:line="65" pos:column="25">(<pos:position pos:line="65" pos:column="26"/></operator><operator pos:line="65" pos:column="26">(<pos:position pos:line="65" pos:column="27"/></operator><name pos:line="65" pos:column="27">double<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">)<pos:position pos:line="65" pos:column="34"/></operator><name pos:line="65" pos:column="34">span<pos:position pos:line="65" pos:column="38"/></name><operator pos:line="65" pos:column="38">)<pos:position pos:line="65" pos:column="39"/></operator> <operator pos:line="65" pos:column="40">/<pos:position pos:line="65" pos:column="41"/></operator> <operator pos:line="65" pos:column="42">(<pos:position pos:line="65" pos:column="43"/></operator><call pos:line="65" pos:column="43">(<name pos:line="65" pos:column="44">double<pos:position pos:line="65" pos:column="50"/></name>)<argument_list pos:line="65" pos:column="51">(<argument><expr><name pos:line="65" pos:column="52">cdp_len<pos:position pos:line="65" pos:column="59"/></name> <operator pos:line="65" pos:column="60">*<pos:position pos:line="65" pos:column="61"/></operator> <name pos:line="65" pos:column="62">ss<pos:position pos:line="65" pos:column="64"/></name></expr></argument>)<pos:position pos:line="65" pos:column="65"/></argument_list></call><operator pos:line="65" pos:column="65">)<pos:position pos:line="65" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="65" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="68"/></expr_stmt>

    <for pos:line="67" pos:column="5">for <control pos:line="67" pos:column="9">(<init><decl><type><name pos:line="67" pos:column="10">int<pos:position pos:line="67" pos:column="13"/></name></type> <name pos:line="67" pos:column="14">j<pos:position pos:line="67" pos:column="15"/></name> <init pos:line="67" pos:column="16">= <expr><literal type="number" pos:line="67" pos:column="18">0<pos:position pos:line="67" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="67" pos:column="20"/></init> <condition><expr><name pos:line="67" pos:column="21">j<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">&lt;<pos:position pos:line="67" pos:column="27"/></operator> <name pos:line="67" pos:column="25">rra_types_num<pos:position pos:line="67" pos:column="38"/></name></expr>;<pos:position pos:line="67" pos:column="39"/></condition> <incr><expr><name pos:line="67" pos:column="40">j<pos:position pos:line="67" pos:column="41"/></name><operator pos:line="67" pos:column="41">++<pos:position pos:line="67" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="44"/></control> <block pos:line="67" pos:column="45">{
      <decl_stmt><decl><type><name pos:line="68" pos:column="7">char<pos:position pos:line="68" pos:column="11"/></name></type> <name><name pos:line="68" pos:column="12">buffer<pos:position pos:line="68" pos:column="18"/></name><index pos:line="68" pos:column="18">[<expr><literal type="number" pos:line="68" pos:column="19">128<pos:position pos:line="68" pos:column="22"/></literal></expr>]<pos:position pos:line="68" pos:column="23"/></index></name></decl>;<pos:position pos:line="68" pos:column="24"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="69" pos:column="7">int<pos:position pos:line="69" pos:column="10"/></name></type> <name pos:line="69" pos:column="11">status<pos:position pos:line="69" pos:column="17"/></name></decl>;<pos:position pos:line="69" pos:column="18"/></decl_stmt>

      <if pos:line="71" pos:column="7">if <condition pos:line="71" pos:column="10">(<expr><name pos:line="71" pos:column="11">rra_num<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">&gt;=<pos:position pos:line="71" pos:column="24"/></operator> <name pos:line="71" pos:column="22">rra_max<pos:position pos:line="71" pos:column="29"/></name></expr>)<pos:position pos:line="71" pos:column="30"/></condition><then pos:line="71" pos:column="30">
        <block type="pseudo"><break pos:line="72" pos:column="9">break;<pos:position pos:line="72" pos:column="15"/></break></block></then></if>

      <expr_stmt><expr><name pos:line="74" pos:column="7">status<pos:position pos:line="74" pos:column="13"/></name> <operator pos:line="74" pos:column="14">=<pos:position pos:line="74" pos:column="15"/></operator> <call><name pos:line="74" pos:column="16">ssnprintf<pos:position pos:line="74" pos:column="25"/></name><argument_list pos:line="74" pos:column="25">(<argument><expr><name pos:line="74" pos:column="26">buffer<pos:position pos:line="74" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="74" pos:column="34">sizeof<argument_list pos:line="74" pos:column="40">(<argument><expr><name pos:line="74" pos:column="41">buffer<pos:position pos:line="74" pos:column="47"/></name></expr></argument>)<pos:position pos:line="74" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="50">"RRA:%s:%.10f:%u:%u"<pos:position pos:line="74" pos:column="70"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="75" pos:column="26">rra_types<pos:position pos:line="75" pos:column="35"/></name><index pos:line="75" pos:column="35">[<expr><name pos:line="75" pos:column="36">j<pos:position pos:line="75" pos:column="37"/></name></expr>]<pos:position pos:line="75" pos:column="38"/></index></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="40">cfg<pos:position pos:line="75" pos:column="43"/></name><operator pos:line="75" pos:column="43">-&gt;<pos:position pos:line="75" pos:column="48"/></operator><name pos:line="75" pos:column="45">xff<pos:position pos:line="75" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="50">cdp_len<pos:position pos:line="75" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="59">cdp_num<pos:position pos:line="75" pos:column="66"/></name></expr></argument>)<pos:position pos:line="75" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="68"/></expr_stmt>

      <if pos:line="77" pos:column="7">if <condition pos:line="77" pos:column="10">(<expr><operator pos:line="77" pos:column="11">(<pos:position pos:line="77" pos:column="12"/></operator><name pos:line="77" pos:column="12">status<pos:position pos:line="77" pos:column="18"/></name> <operator pos:line="77" pos:column="19">&lt;<pos:position pos:line="77" pos:column="23"/></operator> <literal type="number" pos:line="77" pos:column="21">0<pos:position pos:line="77" pos:column="22"/></literal><operator pos:line="77" pos:column="22">)<pos:position pos:line="77" pos:column="23"/></operator> <operator pos:line="77" pos:column="24">||<pos:position pos:line="77" pos:column="26"/></operator> <operator pos:line="77" pos:column="27">(<pos:position pos:line="77" pos:column="28"/></operator><operator pos:line="77" pos:column="28">(<pos:position pos:line="77" pos:column="29"/></operator><name pos:line="77" pos:column="29">size_t<pos:position pos:line="77" pos:column="35"/></name><operator pos:line="77" pos:column="35">)<pos:position pos:line="77" pos:column="36"/></operator><name pos:line="77" pos:column="36">status<pos:position pos:line="77" pos:column="42"/></name> <operator pos:line="77" pos:column="43">&gt;=<pos:position pos:line="77" pos:column="48"/></operator> <sizeof pos:line="77" pos:column="46">sizeof<argument_list pos:line="77" pos:column="52">(<argument><expr><name pos:line="77" pos:column="53">buffer<pos:position pos:line="77" pos:column="59"/></name></expr></argument>)<pos:position pos:line="77" pos:column="60"/></argument_list></sizeof><operator pos:line="77" pos:column="60">)<pos:position pos:line="77" pos:column="61"/></operator></expr>)<pos:position pos:line="77" pos:column="62"/></condition><then pos:line="77" pos:column="62"> <block pos:line="77" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">ERROR<pos:position pos:line="78" pos:column="14"/></name><argument_list pos:line="78" pos:column="14">(<argument><expr><literal type="string" pos:line="78" pos:column="15">"rra_get: Buffer would have been truncated."<pos:position pos:line="78" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="61"/></expr_stmt>
        <continue pos:line="79" pos:column="9">continue;<pos:position pos:line="79" pos:column="18"/></continue>
      }<pos:position pos:line="80" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="82" pos:column="7">rra_def<pos:position pos:line="82" pos:column="14"/></name><index pos:line="82" pos:column="14">[<expr><name pos:line="82" pos:column="15">rra_num<pos:position pos:line="82" pos:column="22"/></name><operator pos:line="82" pos:column="22">++<pos:position pos:line="82" pos:column="24"/></operator></expr>]<pos:position pos:line="82" pos:column="25"/></index></name> <operator pos:line="82" pos:column="26">=<pos:position pos:line="82" pos:column="27"/></operator> <call><name pos:line="82" pos:column="28">sstrdup<pos:position pos:line="82" pos:column="35"/></name><argument_list pos:line="82" pos:column="35">(<argument><expr><name pos:line="82" pos:column="36">buffer<pos:position pos:line="82" pos:column="42"/></name></expr></argument>)<pos:position pos:line="82" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></for>
  }<pos:position pos:line="84" pos:column="4"/></block></for>

  <if pos:line="86" pos:column="3">if <condition pos:line="86" pos:column="6">(<expr><name pos:line="86" pos:column="7">rra_num<pos:position pos:line="86" pos:column="14"/></name> <operator pos:line="86" pos:column="15">&lt;=<pos:position pos:line="86" pos:column="20"/></operator> <literal type="number" pos:line="86" pos:column="18">0<pos:position pos:line="86" pos:column="19"/></literal></expr>)<pos:position pos:line="86" pos:column="20"/></condition><then pos:line="86" pos:column="20"> <block pos:line="86" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">sfree<pos:position pos:line="87" pos:column="10"/></name><argument_list pos:line="87" pos:column="10">(<argument><expr><name pos:line="87" pos:column="11">rra_def<pos:position pos:line="87" pos:column="18"/></name></expr></argument>)<pos:position pos:line="87" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="20"/></expr_stmt>
    <return pos:line="88" pos:column="5">return <expr><operator pos:line="88" pos:column="12">(<pos:position pos:line="88" pos:column="13"/></operator><literal type="number" pos:line="88" pos:column="13">0<pos:position pos:line="88" pos:column="14"/></literal><operator pos:line="88" pos:column="14">)<pos:position pos:line="88" pos:column="15"/></operator></expr>;<pos:position pos:line="88" pos:column="16"/></return>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="91" pos:column="3">*<pos:position pos:line="91" pos:column="4"/></operator><name pos:line="91" pos:column="4">ret<pos:position pos:line="91" pos:column="7"/></name> <operator pos:line="91" pos:column="8">=<pos:position pos:line="91" pos:column="9"/></operator> <name pos:line="91" pos:column="10">rra_def<pos:position pos:line="91" pos:column="17"/></name></expr>;<pos:position pos:line="91" pos:column="18"/></expr_stmt>
  <return pos:line="92" pos:column="3">return <expr><operator pos:line="92" pos:column="10">(<pos:position pos:line="92" pos:column="11"/></operator><name pos:line="92" pos:column="11">rra_num<pos:position pos:line="92" pos:column="18"/></name><operator pos:line="92" pos:column="18">)<pos:position pos:line="92" pos:column="19"/></operator></expr>;<pos:position pos:line="92" pos:column="20"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

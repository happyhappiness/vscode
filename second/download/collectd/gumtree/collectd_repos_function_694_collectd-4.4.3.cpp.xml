<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_694_collectd-4.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">multimeter_read_value<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">double<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">value<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">retry<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="number" pos:line="3" pos:column="21">3<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt> <comment type="block" pos:line="3" pos:column="24">/* sometimes we receive garbadge */</comment>

	<do pos:line="5" pos:column="9">do
	<block pos:line="6" pos:column="9">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">timeval<pos:position pos:line="7" pos:column="31"/></name></name></type> <name pos:line="7" pos:column="32">time_end<pos:position pos:line="7" pos:column="40"/></name></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="9" pos:column="17">tcflush<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">fd<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="29">TCIFLUSH<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">gettimeofday<pos:position pos:line="11" pos:column="33"/></name> <argument_list pos:line="11" pos:column="34">(<argument><expr><operator pos:line="11" pos:column="35">&amp;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="36">time_end<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">NULL<pos:position pos:line="11" pos:column="50"/></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call> <operator pos:line="11" pos:column="52">&lt;<pos:position pos:line="11" pos:column="56"/></operator> <literal type="number" pos:line="11" pos:column="54">0<pos:position pos:line="11" pos:column="55"/></literal></expr>)<pos:position pos:line="11" pos:column="56"/></condition><then pos:line="11" pos:column="56">
	        <block pos:line="12" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="13" pos:column="25">char<pos:position pos:line="13" pos:column="29"/></name></type> <name><name pos:line="13" pos:column="30">errbuf<pos:position pos:line="13" pos:column="36"/></name><index pos:line="13" pos:column="36">[<expr><literal type="number" pos:line="13" pos:column="37">1024<pos:position pos:line="13" pos:column="41"/></literal></expr>]<pos:position pos:line="13" pos:column="42"/></index></name></decl>;<pos:position pos:line="13" pos:column="43"/></decl_stmt>
	                <expr_stmt><expr><call><name pos:line="14" pos:column="25">ERROR<pos:position pos:line="14" pos:column="30"/></name> <argument_list pos:line="14" pos:column="31">(<argument><expr><literal type="string" pos:line="14" pos:column="32">"multimeter plugin: gettimeofday failed: %s"<pos:position pos:line="14" pos:column="76"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="15" pos:column="41">sstrerror<pos:position pos:line="15" pos:column="50"/></name> <argument_list pos:line="15" pos:column="51">(<argument><expr><name pos:line="15" pos:column="52">errno<pos:position pos:line="15" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="59">errbuf<pos:position pos:line="15" pos:column="65"/></name></expr></argument>,
						<argument><expr><sizeof pos:line="16" pos:column="49">sizeof <argument_list pos:line="16" pos:column="56">(<argument><expr><name pos:line="16" pos:column="57">errbuf<pos:position pos:line="16" pos:column="63"/></name></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt>
	                <return pos:line="17" pos:column="25">return <expr><operator pos:line="17" pos:column="32">(<pos:position pos:line="17" pos:column="33"/></operator><operator pos:line="17" pos:column="33">-<pos:position pos:line="17" pos:column="34"/></operator><literal type="number" pos:line="17" pos:column="34">1<pos:position pos:line="17" pos:column="35"/></literal><operator pos:line="17" pos:column="35">)<pos:position pos:line="17" pos:column="36"/></operator></expr>;<pos:position pos:line="17" pos:column="37"/></return>
	        }<pos:position pos:line="18" pos:column="18"/></block></then></if>
	        <expr_stmt><expr><name><name pos:line="19" pos:column="17">time_end<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">.<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">tv_sec<pos:position pos:line="19" pos:column="32"/></name></name><operator pos:line="19" pos:column="32">++<pos:position pos:line="19" pos:column="34"/></operator></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>	

		<while pos:line="21" pos:column="17">while <condition pos:line="21" pos:column="23">(<expr><literal type="number" pos:line="21" pos:column="24">1<pos:position pos:line="21" pos:column="25"/></literal></expr>)<pos:position pos:line="21" pos:column="26"/></condition>
		<block pos:line="22" pos:column="17">{
		        <decl_stmt><decl><type><name pos:line="23" pos:column="25">char<pos:position pos:line="23" pos:column="29"/></name></type> <name><name pos:line="23" pos:column="30">buf<pos:position pos:line="23" pos:column="33"/></name><index pos:line="23" pos:column="33">[<expr><name pos:line="23" pos:column="34">LINE_LENGTH<pos:position pos:line="23" pos:column="45"/></name></expr>]<pos:position pos:line="23" pos:column="46"/></index></name></decl>;<pos:position pos:line="23" pos:column="47"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="24" pos:column="25">char<pos:position pos:line="24" pos:column="29"/></name> <modifier pos:line="24" pos:column="30">*<pos:position pos:line="24" pos:column="31"/></modifier></type><name pos:line="24" pos:column="31">range<pos:position pos:line="24" pos:column="36"/></name></decl>;<pos:position pos:line="24" pos:column="37"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="25" pos:column="25">int<pos:position pos:line="25" pos:column="28"/></name></type> <name pos:line="25" pos:column="29">status<pos:position pos:line="25" pos:column="35"/></name></decl>;<pos:position pos:line="25" pos:column="36"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="26" pos:column="25">fd_set<pos:position pos:line="26" pos:column="31"/></name></type> <name pos:line="26" pos:column="32">rfds<pos:position pos:line="26" pos:column="36"/></name></decl>;<pos:position pos:line="26" pos:column="37"/></decl_stmt>
    			<decl_stmt><decl><type><name><name pos:line="27" pos:column="25">struct<pos:position pos:line="27" pos:column="31"/></name> <name pos:line="27" pos:column="32">timeval<pos:position pos:line="27" pos:column="39"/></name></name></type> <name pos:line="27" pos:column="40">timeout<pos:position pos:line="27" pos:column="47"/></name></decl>;<pos:position pos:line="27" pos:column="48"/></decl_stmt>
    			<decl_stmt><decl><type><name><name pos:line="28" pos:column="25">struct<pos:position pos:line="28" pos:column="31"/></name> <name pos:line="28" pos:column="32">timeval<pos:position pos:line="28" pos:column="39"/></name></name></type> <name pos:line="28" pos:column="40">time_now<pos:position pos:line="28" pos:column="48"/></name></decl>;<pos:position pos:line="28" pos:column="49"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="30" pos:column="25">write<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name pos:line="30" pos:column="31">fd<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="35">"D"<pos:position pos:line="30" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="40">1<pos:position pos:line="30" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="32" pos:column="25">FD_ZERO<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><operator pos:line="32" pos:column="33">&amp;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="34">rfds<pos:position pos:line="32" pos:column="38"/></name></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">FD_SET<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">fd<pos:position pos:line="33" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="36">&amp;<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="37">rfds<pos:position pos:line="33" pos:column="41"/></name></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>

			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><call><name pos:line="35" pos:column="29">gettimeofday<pos:position pos:line="35" pos:column="41"/></name> <argument_list pos:line="35" pos:column="42">(<argument><expr><operator pos:line="35" pos:column="43">&amp;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="44">time_now<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="54">NULL<pos:position pos:line="35" pos:column="58"/></name></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call> <operator pos:line="35" pos:column="60">&lt;<pos:position pos:line="35" pos:column="64"/></operator> <literal type="number" pos:line="35" pos:column="62">0<pos:position pos:line="35" pos:column="63"/></literal></expr>)<pos:position pos:line="35" pos:column="64"/></condition><then pos:line="35" pos:column="64">
	                <block pos:line="36" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="37" pos:column="33">char<pos:position pos:line="37" pos:column="37"/></name></type> <name><name pos:line="37" pos:column="38">errbuf<pos:position pos:line="37" pos:column="44"/></name><index pos:line="37" pos:column="44">[<expr><literal type="number" pos:line="37" pos:column="45">1024<pos:position pos:line="37" pos:column="49"/></literal></expr>]<pos:position pos:line="37" pos:column="50"/></index></name></decl>;<pos:position pos:line="37" pos:column="51"/></decl_stmt>
		                <expr_stmt><expr><call><name pos:line="38" pos:column="33">ERROR<pos:position pos:line="38" pos:column="38"/></name> <argument_list pos:line="38" pos:column="39">(<argument><expr><literal type="string" pos:line="38" pos:column="40">"multimeter plugin: "<pos:position pos:line="38" pos:column="61"/></literal>
						<literal type="string" pos:line="39" pos:column="49">"gettimeofday failed: %s"<pos:position pos:line="39" pos:column="74"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="40" pos:column="49">sstrerror<pos:position pos:line="40" pos:column="58"/></name> <argument_list pos:line="40" pos:column="59">(<argument><expr><name pos:line="40" pos:column="60">errno<pos:position pos:line="40" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="67">errbuf<pos:position pos:line="40" pos:column="73"/></name></expr></argument>,
							<argument><expr><sizeof pos:line="41" pos:column="57">sizeof <argument_list pos:line="41" pos:column="64">(<argument><expr><name pos:line="41" pos:column="65">errbuf<pos:position pos:line="41" pos:column="71"/></name></expr></argument>)<pos:position pos:line="41" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="75"/></expr_stmt>
	                        <return pos:line="42" pos:column="33">return <expr><operator pos:line="42" pos:column="40">(<pos:position pos:line="42" pos:column="41"/></operator><operator pos:line="42" pos:column="41">-<pos:position pos:line="42" pos:column="42"/></operator><literal type="number" pos:line="42" pos:column="42">1<pos:position pos:line="42" pos:column="43"/></literal><operator pos:line="42" pos:column="43">)<pos:position pos:line="42" pos:column="44"/></operator></expr>;<pos:position pos:line="42" pos:column="45"/></return>
	                }<pos:position pos:line="43" pos:column="26"/></block></then></if>
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><call><name pos:line="44" pos:column="29">multimeter_timeval_sub<pos:position pos:line="44" pos:column="51"/></name> <argument_list pos:line="44" pos:column="52">(<argument><expr><operator pos:line="44" pos:column="53">&amp;<pos:position pos:line="44" pos:column="58"/></operator><name pos:line="44" pos:column="54">time_end<pos:position pos:line="44" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="64">&amp;<pos:position pos:line="44" pos:column="69"/></operator><name pos:line="44" pos:column="65">time_now<pos:position pos:line="44" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="75">&amp;<pos:position pos:line="44" pos:column="80"/></operator><name pos:line="44" pos:column="76">timeout<pos:position pos:line="44" pos:column="83"/></name></expr></argument>)<pos:position pos:line="44" pos:column="84"/></argument_list></call> <operator pos:line="44" pos:column="85">==<pos:position pos:line="44" pos:column="87"/></operator> <operator pos:line="44" pos:column="88">-<pos:position pos:line="44" pos:column="89"/></operator><literal type="number" pos:line="44" pos:column="89">1<pos:position pos:line="44" pos:column="90"/></literal></expr>)<pos:position pos:line="44" pos:column="91"/></condition><then pos:line="44" pos:column="91">
	                        <block type="pseudo"><break pos:line="45" pos:column="33">break;<pos:position pos:line="45" pos:column="39"/></break></block></then></if>

			<expr_stmt><expr><name pos:line="47" pos:column="25">status<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">=<pos:position pos:line="47" pos:column="33"/></operator> <call><name pos:line="47" pos:column="34">select<pos:position pos:line="47" pos:column="40"/></name><argument_list pos:line="47" pos:column="40">(<argument><expr><name pos:line="47" pos:column="41">fd<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">+<pos:position pos:line="47" pos:column="44"/></operator><literal type="number" pos:line="47" pos:column="44">1<pos:position pos:line="47" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="47" pos:column="47">&amp;<pos:position pos:line="47" pos:column="52"/></operator><name pos:line="47" pos:column="48">rfds<pos:position pos:line="47" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="54">NULL<pos:position pos:line="47" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="60">NULL<pos:position pos:line="47" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="66">&amp;<pos:position pos:line="47" pos:column="71"/></operator><name pos:line="47" pos:column="67">timeout<pos:position pos:line="47" pos:column="74"/></name></expr></argument>)<pos:position pos:line="47" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="76"/></expr_stmt>

			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><name pos:line="49" pos:column="29">status<pos:position pos:line="49" pos:column="35"/></name> <operator pos:line="49" pos:column="36">&gt;<pos:position pos:line="49" pos:column="40"/></operator> <literal type="number" pos:line="49" pos:column="38">0<pos:position pos:line="49" pos:column="39"/></literal></expr>)<pos:position pos:line="49" pos:column="40"/></condition><then pos:line="49" pos:column="40"> <comment type="block" pos:line="49" pos:column="41">/* usually we succeed */</comment>
			<block pos:line="50" pos:column="25">{
				<expr_stmt><expr><name pos:line="51" pos:column="33">status<pos:position pos:line="51" pos:column="39"/></name> <operator pos:line="51" pos:column="40">=<pos:position pos:line="51" pos:column="41"/></operator> <call><name pos:line="51" pos:column="42">read<pos:position pos:line="51" pos:column="46"/></name><argument_list pos:line="51" pos:column="46">(<argument><expr><name pos:line="51" pos:column="47">fd<pos:position pos:line="51" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="51">buf<pos:position pos:line="51" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="56">LINE_LENGTH<pos:position pos:line="51" pos:column="67"/></name></expr></argument>)<pos:position pos:line="51" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="69"/></expr_stmt>

				<if pos:line="53" pos:column="33">if <condition pos:line="53" pos:column="36">(<expr><operator pos:line="53" pos:column="37">(<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="38">status<pos:position pos:line="53" pos:column="44"/></name> <operator pos:line="53" pos:column="45">&lt;<pos:position pos:line="53" pos:column="49"/></operator> <literal type="number" pos:line="53" pos:column="47">0<pos:position pos:line="53" pos:column="48"/></literal><operator pos:line="53" pos:column="48">)<pos:position pos:line="53" pos:column="49"/></operator> <operator pos:line="53" pos:column="50">&amp;&amp;<pos:position pos:line="53" pos:column="60"/></operator> <operator pos:line="53" pos:column="53">(<pos:position pos:line="53" pos:column="54"/></operator><operator pos:line="53" pos:column="54">(<pos:position pos:line="53" pos:column="55"/></operator><name pos:line="53" pos:column="55">errno<pos:position pos:line="53" pos:column="60"/></name> <operator pos:line="53" pos:column="61">==<pos:position pos:line="53" pos:column="63"/></operator> <name pos:line="53" pos:column="64">EAGAIN<pos:position pos:line="53" pos:column="70"/></name><operator pos:line="53" pos:column="70">)<pos:position pos:line="53" pos:column="71"/></operator> <operator pos:line="53" pos:column="72">||<pos:position pos:line="53" pos:column="74"/></operator> <operator pos:line="53" pos:column="75">(<pos:position pos:line="53" pos:column="76"/></operator><name pos:line="53" pos:column="76">errno<pos:position pos:line="53" pos:column="81"/></name> <operator pos:line="53" pos:column="82">==<pos:position pos:line="53" pos:column="84"/></operator> <name pos:line="53" pos:column="85">EINTR<pos:position pos:line="53" pos:column="90"/></name><operator pos:line="53" pos:column="90">)<pos:position pos:line="53" pos:column="91"/></operator><operator pos:line="53" pos:column="91">)<pos:position pos:line="53" pos:column="92"/></operator></expr>)<pos:position pos:line="53" pos:column="93"/></condition><then pos:line="53" pos:column="93">
				        <block type="pseudo"><continue pos:line="54" pos:column="41">continue;<pos:position pos:line="54" pos:column="50"/></continue></block></then></if>

				<comment type="block" pos:line="56" pos:column="33">/* Format: "DC 00.000mV  \r" */</comment>
				<if pos:line="57" pos:column="33">if <condition pos:line="57" pos:column="36">(<expr><name pos:line="57" pos:column="37">status<pos:position pos:line="57" pos:column="43"/></name> <operator pos:line="57" pos:column="44">&gt;<pos:position pos:line="57" pos:column="48"/></operator> <literal type="number" pos:line="57" pos:column="46">0<pos:position pos:line="57" pos:column="47"/></literal> <operator pos:line="57" pos:column="48">&amp;&amp;<pos:position pos:line="57" pos:column="58"/></operator> <name pos:line="57" pos:column="51">status<pos:position pos:line="57" pos:column="57"/></name> <operator pos:line="57" pos:column="58">==<pos:position pos:line="57" pos:column="60"/></operator> <name pos:line="57" pos:column="61">LINE_LENGTH<pos:position pos:line="57" pos:column="72"/></name></expr>)<pos:position pos:line="57" pos:column="73"/></condition><then pos:line="57" pos:column="73">
				<block pos:line="58" pos:column="33">{
					<expr_stmt><expr><operator pos:line="59" pos:column="41">*<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="42">value<pos:position pos:line="59" pos:column="47"/></name> <operator pos:line="59" pos:column="48">=<pos:position pos:line="59" pos:column="49"/></operator> <call><name pos:line="59" pos:column="50">strtod<pos:position pos:line="59" pos:column="56"/></name><argument_list pos:line="59" pos:column="56">(<argument><expr><name pos:line="59" pos:column="57">buf<pos:position pos:line="59" pos:column="60"/></name> <operator pos:line="59" pos:column="61">+<pos:position pos:line="59" pos:column="62"/></operator> <literal type="number" pos:line="59" pos:column="63">2<pos:position pos:line="59" pos:column="64"/></literal></expr></argument>, <argument><expr><operator pos:line="59" pos:column="66">&amp;<pos:position pos:line="59" pos:column="71"/></operator><name pos:line="59" pos:column="67">range<pos:position pos:line="59" pos:column="72"/></name></expr></argument>)<pos:position pos:line="59" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="74"/></expr_stmt>

					<if pos:line="61" pos:column="41">if <condition pos:line="61" pos:column="44">( <expr><name pos:line="61" pos:column="46">range<pos:position pos:line="61" pos:column="51"/></name> <operator pos:line="61" pos:column="52">&gt;<pos:position pos:line="61" pos:column="56"/></operator> <operator pos:line="61" pos:column="54">(<pos:position pos:line="61" pos:column="55"/></operator><name pos:line="61" pos:column="55">buf<pos:position pos:line="61" pos:column="58"/></name> <operator pos:line="61" pos:column="59">+<pos:position pos:line="61" pos:column="60"/></operator> <literal type="number" pos:line="61" pos:column="61">6<pos:position pos:line="61" pos:column="62"/></literal><operator pos:line="61" pos:column="62">)<pos:position pos:line="61" pos:column="63"/></operator></expr> )<pos:position pos:line="61" pos:column="65"/></condition><then pos:line="61" pos:column="65">
					<block pos:line="62" pos:column="41">{
			    			<expr_stmt><expr><name pos:line="63" pos:column="49">range<pos:position pos:line="63" pos:column="54"/></name> <operator pos:line="63" pos:column="55">=<pos:position pos:line="63" pos:column="56"/></operator> <name pos:line="63" pos:column="57">buf<pos:position pos:line="63" pos:column="60"/></name> <operator pos:line="63" pos:column="61">+<pos:position pos:line="63" pos:column="62"/></operator> <literal type="number" pos:line="63" pos:column="63">9<pos:position pos:line="63" pos:column="64"/></literal></expr>;<pos:position pos:line="63" pos:column="65"/></expr_stmt>

						<switch pos:line="65" pos:column="49">switch <condition pos:line="65" pos:column="56">( <expr><operator pos:line="65" pos:column="58">*<pos:position pos:line="65" pos:column="59"/></operator><name pos:line="65" pos:column="59">range<pos:position pos:line="65" pos:column="64"/></name></expr> )<pos:position pos:line="65" pos:column="66"/></condition>
						<block pos:line="66" pos:column="49">{
			    				<case pos:line="67" pos:column="57">case <expr><literal type="char" pos:line="67" pos:column="62">'p'<pos:position pos:line="67" pos:column="65"/></literal></expr>:<pos:position pos:line="67" pos:column="66"/></case> <expr_stmt><expr><operator pos:line="67" pos:column="67">*<pos:position pos:line="67" pos:column="68"/></operator><name pos:line="67" pos:column="68">value<pos:position pos:line="67" pos:column="73"/></name> <operator pos:line="67" pos:column="74">*=<pos:position pos:line="67" pos:column="76"/></operator> <literal type="number" pos:line="67" pos:column="77">1.0E<pos:position pos:line="67" pos:column="81"/></literal><operator pos:line="67" pos:column="81">-<pos:position pos:line="67" pos:column="82"/></operator><literal type="number" pos:line="67" pos:column="82">12<pos:position pos:line="67" pos:column="84"/></literal></expr>;<pos:position pos:line="67" pos:column="85"/></expr_stmt> <break pos:line="67" pos:column="86">break;<pos:position pos:line="67" pos:column="92"/></break>
					    		<case pos:line="68" pos:column="57">case <expr><literal type="char" pos:line="68" pos:column="62">'n'<pos:position pos:line="68" pos:column="65"/></literal></expr>:<pos:position pos:line="68" pos:column="66"/></case> <expr_stmt><expr><operator pos:line="68" pos:column="67">*<pos:position pos:line="68" pos:column="68"/></operator><name pos:line="68" pos:column="68">value<pos:position pos:line="68" pos:column="73"/></name> <operator pos:line="68" pos:column="74">*=<pos:position pos:line="68" pos:column="76"/></operator> <literal type="number" pos:line="68" pos:column="77">1.0E<pos:position pos:line="68" pos:column="81"/></literal><operator pos:line="68" pos:column="81">-<pos:position pos:line="68" pos:column="82"/></operator><literal type="number" pos:line="68" pos:column="82">9<pos:position pos:line="68" pos:column="83"/></literal></expr>;<pos:position pos:line="68" pos:column="84"/></expr_stmt> <break pos:line="68" pos:column="85">break;<pos:position pos:line="68" pos:column="91"/></break>
							<case pos:line="69" pos:column="57">case <expr><literal type="char" pos:line="69" pos:column="62">'u'<pos:position pos:line="69" pos:column="65"/></literal></expr>:<pos:position pos:line="69" pos:column="66"/></case> <expr_stmt><expr><operator pos:line="69" pos:column="67">*<pos:position pos:line="69" pos:column="68"/></operator><name pos:line="69" pos:column="68">value<pos:position pos:line="69" pos:column="73"/></name> <operator pos:line="69" pos:column="74">*=<pos:position pos:line="69" pos:column="76"/></operator> <literal type="number" pos:line="69" pos:column="77">1.0E<pos:position pos:line="69" pos:column="81"/></literal><operator pos:line="69" pos:column="81">-<pos:position pos:line="69" pos:column="82"/></operator><literal type="number" pos:line="69" pos:column="82">6<pos:position pos:line="69" pos:column="83"/></literal></expr>;<pos:position pos:line="69" pos:column="84"/></expr_stmt> <break pos:line="69" pos:column="85">break;<pos:position pos:line="69" pos:column="91"/></break>
			    				<case pos:line="70" pos:column="57">case <expr><literal type="char" pos:line="70" pos:column="62">'m'<pos:position pos:line="70" pos:column="65"/></literal></expr>:<pos:position pos:line="70" pos:column="66"/></case> <expr_stmt><expr><operator pos:line="70" pos:column="67">*<pos:position pos:line="70" pos:column="68"/></operator><name pos:line="70" pos:column="68">value<pos:position pos:line="70" pos:column="73"/></name> <operator pos:line="70" pos:column="74">*=<pos:position pos:line="70" pos:column="76"/></operator> <literal type="number" pos:line="70" pos:column="77">1.0E<pos:position pos:line="70" pos:column="81"/></literal><operator pos:line="70" pos:column="81">-<pos:position pos:line="70" pos:column="82"/></operator><literal type="number" pos:line="70" pos:column="82">3<pos:position pos:line="70" pos:column="83"/></literal></expr>;<pos:position pos:line="70" pos:column="84"/></expr_stmt> <break pos:line="70" pos:column="85">break;<pos:position pos:line="70" pos:column="91"/></break>
							<case pos:line="71" pos:column="57">case <expr><literal type="char" pos:line="71" pos:column="62">'k'<pos:position pos:line="71" pos:column="65"/></literal></expr>:<pos:position pos:line="71" pos:column="66"/></case> <expr_stmt><expr><operator pos:line="71" pos:column="67">*<pos:position pos:line="71" pos:column="68"/></operator><name pos:line="71" pos:column="68">value<pos:position pos:line="71" pos:column="73"/></name> <operator pos:line="71" pos:column="74">*=<pos:position pos:line="71" pos:column="76"/></operator> <literal type="number" pos:line="71" pos:column="77">1.0E3<pos:position pos:line="71" pos:column="82"/></literal></expr>;<pos:position pos:line="71" pos:column="83"/></expr_stmt> <break pos:line="71" pos:column="84">break;<pos:position pos:line="71" pos:column="90"/></break>
							<case pos:line="72" pos:column="57">case <expr><literal type="char" pos:line="72" pos:column="62">'M'<pos:position pos:line="72" pos:column="65"/></literal></expr>:<pos:position pos:line="72" pos:column="66"/></case> <expr_stmt><expr><operator pos:line="72" pos:column="67">*<pos:position pos:line="72" pos:column="68"/></operator><name pos:line="72" pos:column="68">value<pos:position pos:line="72" pos:column="73"/></name> <operator pos:line="72" pos:column="74">*=<pos:position pos:line="72" pos:column="76"/></operator> <literal type="number" pos:line="72" pos:column="77">1.0E6<pos:position pos:line="72" pos:column="82"/></literal></expr>;<pos:position pos:line="72" pos:column="83"/></expr_stmt> <break pos:line="72" pos:column="84">break;<pos:position pos:line="72" pos:column="90"/></break>
							<case pos:line="73" pos:column="57">case <expr><literal type="char" pos:line="73" pos:column="62">'G'<pos:position pos:line="73" pos:column="65"/></literal></expr>:<pos:position pos:line="73" pos:column="66"/></case> <expr_stmt><expr><operator pos:line="73" pos:column="67">*<pos:position pos:line="73" pos:column="68"/></operator><name pos:line="73" pos:column="68">value<pos:position pos:line="73" pos:column="73"/></name> <operator pos:line="73" pos:column="74">*=<pos:position pos:line="73" pos:column="76"/></operator> <literal type="number" pos:line="73" pos:column="77">1.0E9<pos:position pos:line="73" pos:column="82"/></literal></expr>;<pos:position pos:line="73" pos:column="83"/></expr_stmt> <break pos:line="73" pos:column="84">break;<pos:position pos:line="73" pos:column="90"/></break>
						}<pos:position pos:line="74" pos:column="50"/></block></switch>
					}<pos:position pos:line="75" pos:column="42"/></block></then>
					<else pos:line="76" pos:column="41">else
						<block type="pseudo"><return pos:line="77" pos:column="49">return <expr><operator pos:line="77" pos:column="56">(<pos:position pos:line="77" pos:column="57"/></operator><operator pos:line="77" pos:column="57">-<pos:position pos:line="77" pos:column="58"/></operator><literal type="number" pos:line="77" pos:column="58">1<pos:position pos:line="77" pos:column="59"/></literal><operator pos:line="77" pos:column="59">)<pos:position pos:line="77" pos:column="60"/></operator></expr>;<pos:position pos:line="77" pos:column="61"/></return></block></else></if> <comment type="block" pos:line="77" pos:column="62">/* Overflow */</comment>

					<return pos:line="79" pos:column="41">return <expr><operator pos:line="79" pos:column="48">(<pos:position pos:line="79" pos:column="49"/></operator><literal type="number" pos:line="79" pos:column="49">0<pos:position pos:line="79" pos:column="50"/></literal><operator pos:line="79" pos:column="50">)<pos:position pos:line="79" pos:column="51"/></operator></expr>;<pos:position pos:line="79" pos:column="52"/></return> <comment type="block" pos:line="79" pos:column="53">/* value received */</comment>
				}<pos:position pos:line="80" pos:column="34"/></block></then>
				<else pos:line="81" pos:column="33">else <block type="pseudo"><break pos:line="81" pos:column="38">break;<pos:position pos:line="81" pos:column="44"/></break></block></else></if>
			}<pos:position pos:line="82" pos:column="26"/></block></then>
			<elseif pos:line="83" pos:column="25">else <if pos:line="83" pos:column="30">if <condition pos:line="83" pos:column="33">(<expr><operator pos:line="83" pos:column="34">!<pos:position pos:line="83" pos:column="35"/></operator><name pos:line="83" pos:column="35">status<pos:position pos:line="83" pos:column="41"/></name></expr>)<pos:position pos:line="83" pos:column="42"/></condition><then pos:line="83" pos:column="42"> <comment type="block" pos:line="83" pos:column="43">/* Timeout */</comment>
            		<block pos:line="84" pos:column="25">{
	                        <break pos:line="85" pos:column="33">break;<pos:position pos:line="85" pos:column="39"/></break>
			}<pos:position pos:line="86" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="87" pos:column="25">else <if pos:line="87" pos:column="30">if <condition pos:line="87" pos:column="33">(<expr><operator pos:line="87" pos:column="34">(<pos:position pos:line="87" pos:column="35"/></operator><name pos:line="87" pos:column="35">status<pos:position pos:line="87" pos:column="41"/></name> <operator pos:line="87" pos:column="42">==<pos:position pos:line="87" pos:column="44"/></operator> <operator pos:line="87" pos:column="45">-<pos:position pos:line="87" pos:column="46"/></operator><literal type="number" pos:line="87" pos:column="46">1<pos:position pos:line="87" pos:column="47"/></literal><operator pos:line="87" pos:column="47">)<pos:position pos:line="87" pos:column="48"/></operator> <operator pos:line="87" pos:column="49">&amp;&amp;<pos:position pos:line="87" pos:column="59"/></operator> <operator pos:line="87" pos:column="52">(<pos:position pos:line="87" pos:column="53"/></operator><operator pos:line="87" pos:column="53">(<pos:position pos:line="87" pos:column="54"/></operator><name pos:line="87" pos:column="54">errno<pos:position pos:line="87" pos:column="59"/></name> <operator pos:line="87" pos:column="60">==<pos:position pos:line="87" pos:column="62"/></operator> <name pos:line="87" pos:column="63">EAGAIN<pos:position pos:line="87" pos:column="69"/></name><operator pos:line="87" pos:column="69">)<pos:position pos:line="87" pos:column="70"/></operator> <operator pos:line="87" pos:column="71">||<pos:position pos:line="87" pos:column="73"/></operator> <operator pos:line="87" pos:column="74">(<pos:position pos:line="87" pos:column="75"/></operator><name pos:line="87" pos:column="75">errno<pos:position pos:line="87" pos:column="80"/></name> <operator pos:line="87" pos:column="81">==<pos:position pos:line="87" pos:column="83"/></operator> <name pos:line="87" pos:column="84">EINTR<pos:position pos:line="87" pos:column="89"/></name><operator pos:line="87" pos:column="89">)<pos:position pos:line="87" pos:column="90"/></operator><operator pos:line="87" pos:column="90">)<pos:position pos:line="87" pos:column="91"/></operator></expr>)<pos:position pos:line="87" pos:column="92"/></condition><then pos:line="87" pos:column="92">
			<block pos:line="88" pos:column="25">{
			        <continue pos:line="89" pos:column="33">continue;<pos:position pos:line="89" pos:column="42"/></continue>
			}<pos:position pos:line="90" pos:column="26"/></block></then></if></elseif>
			<else pos:line="91" pos:column="25">else <comment type="block" pos:line="91" pos:column="30">/* status == -1 */</comment>
            		<block pos:line="92" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="93" pos:column="33">char<pos:position pos:line="93" pos:column="37"/></name></type> <name><name pos:line="93" pos:column="38">errbuf<pos:position pos:line="93" pos:column="44"/></name><index pos:line="93" pos:column="44">[<expr><literal type="number" pos:line="93" pos:column="45">1024<pos:position pos:line="93" pos:column="49"/></literal></expr>]<pos:position pos:line="93" pos:column="50"/></index></name></decl>;<pos:position pos:line="93" pos:column="51"/></decl_stmt>
		                <expr_stmt><expr><call><name pos:line="94" pos:column="33">ERROR<pos:position pos:line="94" pos:column="38"/></name> <argument_list pos:line="94" pos:column="39">(<argument><expr><literal type="string" pos:line="94" pos:column="40">"multimeter plugin: "<pos:position pos:line="94" pos:column="61"/></literal>
						<literal type="string" pos:line="95" pos:column="49">"select failed: %s"<pos:position pos:line="95" pos:column="68"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="96" pos:column="49">sstrerror<pos:position pos:line="96" pos:column="58"/></name> <argument_list pos:line="96" pos:column="59">(<argument><expr><name pos:line="96" pos:column="60">errno<pos:position pos:line="96" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="67">errbuf<pos:position pos:line="96" pos:column="73"/></name></expr></argument>, <argument><expr><sizeof pos:line="96" pos:column="75">sizeof <argument_list pos:line="96" pos:column="82">(<argument><expr><name pos:line="96" pos:column="83">errbuf<pos:position pos:line="96" pos:column="89"/></name></expr></argument>)<pos:position pos:line="96" pos:column="90"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="96" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="93"/></expr_stmt>
	                        <break pos:line="97" pos:column="33">break;<pos:position pos:line="97" pos:column="39"/></break>
			}<pos:position pos:line="98" pos:column="26"/></block></else></if>
		}<pos:position pos:line="99" pos:column="18"/></block></while>
	}<pos:position pos:line="100" pos:column="10"/></block> while <condition pos:line="100" pos:column="17">(<expr><operator pos:line="100" pos:column="18">--<pos:position pos:line="100" pos:column="20"/></operator><name pos:line="100" pos:column="20">retry<pos:position pos:line="100" pos:column="25"/></name></expr>)<pos:position pos:line="100" pos:column="26"/></condition>;<pos:position pos:line="100" pos:column="27"/></do>

	<return pos:line="102" pos:column="9">return <expr><operator pos:line="102" pos:column="16">(<pos:position pos:line="102" pos:column="17"/></operator><operator pos:line="102" pos:column="17">-<pos:position pos:line="102" pos:column="18"/></operator><literal type="number" pos:line="102" pos:column="18">2<pos:position pos:line="102" pos:column="19"/></literal><operator pos:line="102" pos:column="19">)<pos:position pos:line="102" pos:column="20"/></operator></expr>;<pos:position pos:line="102" pos:column="21"/></return>  <comment type="block" pos:line="102" pos:column="23">/* no value received */</comment>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1118_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">compression_submit<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">pinst<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">tinst<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">derive_t<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">uncompressed<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">derive_t<pos:position pos:line="2" pos:column="63"/></name></type> <name pos:line="2" pos:column="64">compressed<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list> <block pos:line="2" pos:column="76">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_list_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">vl<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">value_t<pos:position pos:line="4" pos:column="10"/></name></type> <name><name pos:line="4" pos:column="11">values<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[]<pos:position pos:line="4" pos:column="19"/></index></name> <init pos:line="4" pos:column="20">= <expr><block pos:line="4" pos:column="22">{
      <expr><block pos:line="5" pos:column="7">{<expr><operator pos:line="5" pos:column="8">.<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">derive<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <name pos:line="5" pos:column="18">uncompressed<pos:position pos:line="5" pos:column="30"/></name></expr>}<pos:position pos:line="5" pos:column="31"/></block></expr>, <expr><block pos:line="5" pos:column="33">{<expr><operator pos:line="5" pos:column="34">.<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="35">derive<pos:position pos:line="5" pos:column="41"/></name> <operator pos:line="5" pos:column="42">=<pos:position pos:line="5" pos:column="43"/></operator> <name pos:line="5" pos:column="44">compressed<pos:position pos:line="5" pos:column="54"/></name></expr>}<pos:position pos:line="5" pos:column="55"/></block></expr>,
  }<pos:position pos:line="6" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="5"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="8" pos:column="3">vl<pos:position pos:line="8" pos:column="5"/></name><operator pos:line="8" pos:column="5">.<pos:position pos:line="8" pos:column="6"/></operator><name pos:line="8" pos:column="6">values<pos:position pos:line="8" pos:column="12"/></name></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">values<pos:position pos:line="8" pos:column="21"/></name></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">vl<pos:position pos:line="9" pos:column="5"/></name><operator pos:line="9" pos:column="5">.<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">values_len<pos:position pos:line="9" pos:column="16"/></name></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <call><name pos:line="9" pos:column="19">STATIC_ARRAY_SIZE<pos:position pos:line="9" pos:column="36"/></name><argument_list pos:line="9" pos:column="36">(<argument><expr><name pos:line="9" pos:column="37">values<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">sstrncpy<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name><name pos:line="10" pos:column="12">vl<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">plugin<pos:position pos:line="10" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="23">"openvpn"<pos:position pos:line="10" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="34">sizeof<argument_list pos:line="10" pos:column="40">(<argument><expr><name><name pos:line="10" pos:column="41">vl<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">.<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">plugin<pos:position pos:line="10" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">pinst<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">!=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">sstrncpy<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><name><name pos:line="12" pos:column="14">vl<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">.<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">plugin_instance<pos:position pos:line="12" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="34">pinst<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="41">sizeof<argument_list pos:line="12" pos:column="47">(<argument><expr><name><name pos:line="12" pos:column="48">vl<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">.<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">plugin_instance<pos:position pos:line="12" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="69"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">sstrncpy<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name><name pos:line="13" pos:column="12">vl<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">.<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">type<pos:position pos:line="13" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="21">"compression"<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="36">sizeof<argument_list pos:line="13" pos:column="42">(<argument><expr><name><name pos:line="13" pos:column="43">vl<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">.<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="46">type<pos:position pos:line="13" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">tinst<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">!=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="5">sstrncpy<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><name><name pos:line="15" pos:column="14">vl<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">.<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">type_instance<pos:position pos:line="15" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">tinst<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="39">sizeof<argument_list pos:line="15" pos:column="45">(<argument><expr><name><name pos:line="15" pos:column="46">vl<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">.<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="49">type_instance<pos:position pos:line="15" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">plugin_dispatch_values<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><operator pos:line="17" pos:column="26">&amp;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="27">vl<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

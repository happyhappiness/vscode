<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1214_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">cdtime_t<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">latency_counter_get_average<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">latency_counter_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">lc<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list> <comment type="block" pos:line="1" pos:column="62">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">double<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">average<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">(<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">lc<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">==<pos:position pos:line="5" pos:column="13"/></operator> <name pos:line="5" pos:column="14">NULL<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">)<pos:position pos:line="5" pos:column="19"/></operator> <operator pos:line="5" pos:column="20">||<pos:position pos:line="5" pos:column="22"/></operator> <operator pos:line="5" pos:column="23">(<pos:position pos:line="5" pos:column="24"/></operator><name><name pos:line="5" pos:column="24">lc<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">num<pos:position pos:line="5" pos:column="31"/></name></name> <operator pos:line="5" pos:column="32">==<pos:position pos:line="5" pos:column="34"/></operator> <literal type="number" pos:line="5" pos:column="35">0<pos:position pos:line="5" pos:column="36"/></literal><operator pos:line="5" pos:column="36">)<pos:position pos:line="5" pos:column="37"/></operator></expr>)<pos:position pos:line="5" pos:column="38"/></condition><then pos:line="5" pos:column="38">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal><operator pos:line="6" pos:column="14">)<pos:position pos:line="6" pos:column="15"/></operator></expr>;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="8" pos:column="3">average<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <call><name pos:line="8" pos:column="13">CDTIME_T_TO_DOUBLE<pos:position pos:line="8" pos:column="31"/></name> <argument_list pos:line="8" pos:column="32">(<argument><expr><name><name pos:line="8" pos:column="33">lc<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">sum<pos:position pos:line="8" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call> <operator pos:line="8" pos:column="42">/<pos:position pos:line="8" pos:column="43"/></operator> <operator pos:line="8" pos:column="44">(<pos:position pos:line="8" pos:column="45"/></operator><operator pos:line="8" pos:column="45">(<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="46">double<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">)<pos:position pos:line="8" pos:column="53"/></operator> <name><name pos:line="8" pos:column="54">lc<pos:position pos:line="8" pos:column="56"/></name><operator pos:line="8" pos:column="56">-&gt;<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="58">num<pos:position pos:line="8" pos:column="61"/></name></name><operator pos:line="8" pos:column="61">)<pos:position pos:line="8" pos:column="62"/></operator></expr>;<pos:position pos:line="8" pos:column="63"/></expr_stmt>
  <return pos:line="9" pos:column="3">return <expr><operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><call><name pos:line="9" pos:column="11">DOUBLE_TO_CDTIME_T<pos:position pos:line="9" pos:column="29"/></name> <argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">average<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call><operator pos:line="9" pos:column="39">)<pos:position pos:line="9" pos:column="40"/></operator></expr>;<pos:position pos:line="9" pos:column="41"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

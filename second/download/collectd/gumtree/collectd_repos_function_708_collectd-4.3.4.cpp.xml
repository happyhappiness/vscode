<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_708_collectd-4.3.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ut_check_threshold<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">data_set_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ds<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">value_list_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">vl<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">notification_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">n<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">threshold_t<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">th<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">gauge_t<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">values<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">state_orig<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">state_new<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><name pos:line="9" pos:column="19">STATE_OKAY<pos:position pos:line="9" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">ds_index<pos:position pos:line="10" pos:column="15"/></name> <init pos:line="10" pos:column="16">= <expr><literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">buf<pos:position pos:line="12" pos:column="12"/></name></decl>;<pos:position pos:line="12" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">size_t<pos:position pos:line="13" pos:column="9"/></name></type> <name pos:line="13" pos:column="10">bufsize<pos:position pos:line="13" pos:column="17"/></name></decl>;<pos:position pos:line="13" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">status<pos:position pos:line="14" pos:column="13"/></name></decl>;<pos:position pos:line="14" pos:column="14"/></decl_stmt>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">threshold_tree<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">==<pos:position pos:line="16" pos:column="24"/></operator> <name pos:line="16" pos:column="25">NULL<pos:position pos:line="16" pos:column="29"/></name></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">0<pos:position pos:line="17" pos:column="14"/></literal><operator pos:line="17" pos:column="14">)<pos:position pos:line="17" pos:column="15"/></operator></expr>;<pos:position pos:line="17" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="19" pos:column="3">/* Is this lock really necessary? So far, thresholds are only inserted at
   * startup. -octo */</comment>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">pthread_mutex_lock<pos:position pos:line="21" pos:column="21"/></name> <argument_list pos:line="21" pos:column="22">(<argument><expr><operator pos:line="21" pos:column="23">&amp;<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="24">threshold_lock<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">th<pos:position pos:line="22" pos:column="5"/></name> <operator pos:line="22" pos:column="6">=<pos:position pos:line="22" pos:column="7"/></operator> <call><name pos:line="22" pos:column="8">threshold_search<pos:position pos:line="22" pos:column="24"/></name> <argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">ds<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="30">vl<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">pthread_mutex_unlock<pos:position pos:line="23" pos:column="23"/></name> <argument_list pos:line="23" pos:column="24">(<argument><expr><operator pos:line="23" pos:column="25">&amp;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="26">threshold_lock<pos:position pos:line="23" pos:column="40"/></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">th<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">==<pos:position pos:line="24" pos:column="12"/></operator> <name pos:line="24" pos:column="13">NULL<pos:position pos:line="24" pos:column="17"/></name></expr>)<pos:position pos:line="24" pos:column="18"/></condition><then pos:line="24" pos:column="18">
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><literal type="number" pos:line="25" pos:column="13">0<pos:position pos:line="25" pos:column="14"/></literal><operator pos:line="25" pos:column="14">)<pos:position pos:line="25" pos:column="15"/></operator></expr>;<pos:position pos:line="25" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">DEBUG<pos:position pos:line="27" pos:column="8"/></name> <argument_list pos:line="27" pos:column="9">(<argument><expr><literal type="string" pos:line="27" pos:column="10">"ut_check_threshold: Found matching threshold"<pos:position pos:line="27" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt>

  <expr_stmt><expr><name pos:line="29" pos:column="3">values<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <call><name pos:line="29" pos:column="12">uc_get_rate<pos:position pos:line="29" pos:column="23"/></name> <argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">ds<pos:position pos:line="29" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="29">vl<pos:position pos:line="29" pos:column="31"/></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">values<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">==<pos:position pos:line="30" pos:column="16"/></operator> <name pos:line="30" pos:column="17">NULL<pos:position pos:line="30" pos:column="21"/></name></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22">
    <block type="pseudo"><return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><literal type="number" pos:line="31" pos:column="13">0<pos:position pos:line="31" pos:column="14"/></literal><operator pos:line="31" pos:column="14">)<pos:position pos:line="31" pos:column="15"/></operator></expr>;<pos:position pos:line="31" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="33" pos:column="3">state_orig<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">uc_get_state<pos:position pos:line="33" pos:column="28"/></name> <argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">ds<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="34">vl<pos:position pos:line="33" pos:column="36"/></name></expr></argument>)<pos:position pos:line="33" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>

  <for pos:line="35" pos:column="3">for <control pos:line="35" pos:column="7">(<init><expr><name pos:line="35" pos:column="8">i<pos:position pos:line="35" pos:column="9"/></name> <operator pos:line="35" pos:column="10">=<pos:position pos:line="35" pos:column="11"/></operator> <literal type="number" pos:line="35" pos:column="12">0<pos:position pos:line="35" pos:column="13"/></literal></expr>;<pos:position pos:line="35" pos:column="14"/></init> <condition><expr><name pos:line="35" pos:column="15">i<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">&lt;<pos:position pos:line="35" pos:column="21"/></operator> <name><name pos:line="35" pos:column="19">ds<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">-&gt;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="23">ds_num<pos:position pos:line="35" pos:column="29"/></name></name></expr>;<pos:position pos:line="35" pos:column="30"/></condition> <incr><expr><name pos:line="35" pos:column="31">i<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">++<pos:position pos:line="35" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="35"/></control>
  <block pos:line="36" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">int<pos:position pos:line="37" pos:column="8"/></name></type> <name pos:line="37" pos:column="9">is_inverted<pos:position pos:line="37" pos:column="20"/></name> <init pos:line="37" pos:column="21">= <expr><literal type="number" pos:line="37" pos:column="23">0<pos:position pos:line="37" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="37" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">int<pos:position pos:line="38" pos:column="8"/></name></type> <name pos:line="38" pos:column="9">is_warning<pos:position pos:line="38" pos:column="19"/></name> <init pos:line="38" pos:column="20">= <expr><literal type="number" pos:line="38" pos:column="22">0<pos:position pos:line="38" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="38" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">int<pos:position pos:line="39" pos:column="8"/></name></type> <name pos:line="39" pos:column="9">is_failure<pos:position pos:line="39" pos:column="19"/></name> <init pos:line="39" pos:column="20">= <expr><literal type="number" pos:line="39" pos:column="22">0<pos:position pos:line="39" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="24"/></decl_stmt>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">(<pos:position pos:line="41" pos:column="10"/></operator><name><name pos:line="41" pos:column="10">th<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">flags<pos:position pos:line="41" pos:column="19"/></name></name> <operator pos:line="41" pos:column="20">&amp;<pos:position pos:line="41" pos:column="25"/></operator> <name pos:line="41" pos:column="22">UT_FLAG_INVERT<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">)<pos:position pos:line="41" pos:column="37"/></operator> <operator pos:line="41" pos:column="38">!=<pos:position pos:line="41" pos:column="40"/></operator> <literal type="number" pos:line="41" pos:column="41">0<pos:position pos:line="41" pos:column="42"/></literal></expr>)<pos:position pos:line="41" pos:column="43"/></condition><then pos:line="41" pos:column="43">
    <block pos:line="42" pos:column="5">{
      <expr_stmt><expr><name pos:line="43" pos:column="7">is_inverted<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <literal type="number" pos:line="43" pos:column="21">1<pos:position pos:line="43" pos:column="22"/></literal></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="44" pos:column="7">is_warning<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">--<pos:position pos:line="44" pos:column="19"/></operator></expr>;<pos:position pos:line="44" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="45" pos:column="7">is_failure<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">--<pos:position pos:line="45" pos:column="19"/></operator></expr>;<pos:position pos:line="45" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><operator pos:line="47" pos:column="9">(<pos:position pos:line="47" pos:column="10"/></operator><operator pos:line="47" pos:column="10">!<pos:position pos:line="47" pos:column="11"/></operator><call><name pos:line="47" pos:column="11">isnan<pos:position pos:line="47" pos:column="16"/></name> <argument_list pos:line="47" pos:column="17">(<argument><expr><name><name pos:line="47" pos:column="18">th<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">failure_min<pos:position pos:line="47" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="34"/></argument_list></call> <operator pos:line="47" pos:column="35">&amp;&amp;<pos:position pos:line="47" pos:column="45"/></operator> <operator pos:line="47" pos:column="38">(<pos:position pos:line="47" pos:column="39"/></operator><name><name pos:line="47" pos:column="39">th<pos:position pos:line="47" pos:column="41"/></name><operator pos:line="47" pos:column="41">-&gt;<pos:position pos:line="47" pos:column="46"/></operator><name pos:line="47" pos:column="43">failure_min<pos:position pos:line="47" pos:column="54"/></name></name> <operator pos:line="47" pos:column="55">&gt;<pos:position pos:line="47" pos:column="59"/></operator> <name><name pos:line="47" pos:column="57">values<pos:position pos:line="47" pos:column="63"/></name><index pos:line="47" pos:column="63">[<expr><name pos:line="47" pos:column="64">i<pos:position pos:line="47" pos:column="65"/></name></expr>]<pos:position pos:line="47" pos:column="66"/></index></name><operator pos:line="47" pos:column="66">)<pos:position pos:line="47" pos:column="67"/></operator><operator pos:line="47" pos:column="67">)<pos:position pos:line="47" pos:column="68"/></operator>
	<operator pos:line="48" pos:column="9">||<pos:position pos:line="48" pos:column="11"/></operator> <operator pos:line="48" pos:column="12">(<pos:position pos:line="48" pos:column="13"/></operator><operator pos:line="48" pos:column="13">!<pos:position pos:line="48" pos:column="14"/></operator><call><name pos:line="48" pos:column="14">isnan<pos:position pos:line="48" pos:column="19"/></name> <argument_list pos:line="48" pos:column="20">(<argument><expr><name><name pos:line="48" pos:column="21">th<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">-&gt;<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="25">failure_max<pos:position pos:line="48" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call> <operator pos:line="48" pos:column="38">&amp;&amp;<pos:position pos:line="48" pos:column="48"/></operator> <operator pos:line="48" pos:column="41">(<pos:position pos:line="48" pos:column="42"/></operator><name><name pos:line="48" pos:column="42">th<pos:position pos:line="48" pos:column="44"/></name><operator pos:line="48" pos:column="44">-&gt;<pos:position pos:line="48" pos:column="49"/></operator><name pos:line="48" pos:column="46">failure_max<pos:position pos:line="48" pos:column="57"/></name></name> <operator pos:line="48" pos:column="58">&lt;<pos:position pos:line="48" pos:column="62"/></operator> <name><name pos:line="48" pos:column="60">values<pos:position pos:line="48" pos:column="66"/></name><index pos:line="48" pos:column="66">[<expr><name pos:line="48" pos:column="67">i<pos:position pos:line="48" pos:column="68"/></name></expr>]<pos:position pos:line="48" pos:column="69"/></index></name><operator pos:line="48" pos:column="69">)<pos:position pos:line="48" pos:column="70"/></operator><operator pos:line="48" pos:column="70">)<pos:position pos:line="48" pos:column="71"/></operator></expr>)<pos:position pos:line="48" pos:column="72"/></condition><then pos:line="48" pos:column="72">
      <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="7">is_failure<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">++<pos:position pos:line="49" pos:column="19"/></operator></expr>;<pos:position pos:line="49" pos:column="20"/></expr_stmt></block></then></if>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">(<pos:position pos:line="50" pos:column="10"/></operator><operator pos:line="50" pos:column="10">!<pos:position pos:line="50" pos:column="11"/></operator><call><name pos:line="50" pos:column="11">isnan<pos:position pos:line="50" pos:column="16"/></name> <argument_list pos:line="50" pos:column="17">(<argument><expr><name><name pos:line="50" pos:column="18">th<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">-&gt;<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="22">warning_min<pos:position pos:line="50" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call> <operator pos:line="50" pos:column="35">&amp;&amp;<pos:position pos:line="50" pos:column="45"/></operator> <operator pos:line="50" pos:column="38">(<pos:position pos:line="50" pos:column="39"/></operator><name><name pos:line="50" pos:column="39">th<pos:position pos:line="50" pos:column="41"/></name><operator pos:line="50" pos:column="41">-&gt;<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="43">warning_min<pos:position pos:line="50" pos:column="54"/></name></name> <operator pos:line="50" pos:column="55">&gt;<pos:position pos:line="50" pos:column="59"/></operator> <name><name pos:line="50" pos:column="57">values<pos:position pos:line="50" pos:column="63"/></name><index pos:line="50" pos:column="63">[<expr><name pos:line="50" pos:column="64">i<pos:position pos:line="50" pos:column="65"/></name></expr>]<pos:position pos:line="50" pos:column="66"/></index></name><operator pos:line="50" pos:column="66">)<pos:position pos:line="50" pos:column="67"/></operator><operator pos:line="50" pos:column="67">)<pos:position pos:line="50" pos:column="68"/></operator>
	<operator pos:line="51" pos:column="9">||<pos:position pos:line="51" pos:column="11"/></operator> <operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><call><name pos:line="51" pos:column="14">isnan<pos:position pos:line="51" pos:column="19"/></name> <argument_list pos:line="51" pos:column="20">(<argument><expr><name><name pos:line="51" pos:column="21">th<pos:position pos:line="51" pos:column="23"/></name><operator pos:line="51" pos:column="23">-&gt;<pos:position pos:line="51" pos:column="28"/></operator><name pos:line="51" pos:column="25">warning_max<pos:position pos:line="51" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="37"/></argument_list></call> <operator pos:line="51" pos:column="38">&amp;&amp;<pos:position pos:line="51" pos:column="48"/></operator> <operator pos:line="51" pos:column="41">(<pos:position pos:line="51" pos:column="42"/></operator><name><name pos:line="51" pos:column="42">th<pos:position pos:line="51" pos:column="44"/></name><operator pos:line="51" pos:column="44">-&gt;<pos:position pos:line="51" pos:column="49"/></operator><name pos:line="51" pos:column="46">warning_max<pos:position pos:line="51" pos:column="57"/></name></name> <operator pos:line="51" pos:column="58">&lt;<pos:position pos:line="51" pos:column="62"/></operator> <name><name pos:line="51" pos:column="60">values<pos:position pos:line="51" pos:column="66"/></name><index pos:line="51" pos:column="66">[<expr><name pos:line="51" pos:column="67">i<pos:position pos:line="51" pos:column="68"/></name></expr>]<pos:position pos:line="51" pos:column="69"/></index></name><operator pos:line="51" pos:column="69">)<pos:position pos:line="51" pos:column="70"/></operator><operator pos:line="51" pos:column="70">)<pos:position pos:line="51" pos:column="71"/></operator></expr>)<pos:position pos:line="51" pos:column="72"/></condition><then pos:line="51" pos:column="72">
      <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="7">is_warning<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">++<pos:position pos:line="52" pos:column="19"/></operator></expr>;<pos:position pos:line="52" pos:column="20"/></expr_stmt></block></then></if>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><operator pos:line="54" pos:column="9">(<pos:position pos:line="54" pos:column="10"/></operator><name pos:line="54" pos:column="10">is_failure<pos:position pos:line="54" pos:column="20"/></name> <operator pos:line="54" pos:column="21">!=<pos:position pos:line="54" pos:column="23"/></operator> <literal type="number" pos:line="54" pos:column="24">0<pos:position pos:line="54" pos:column="25"/></literal><operator pos:line="54" pos:column="25">)<pos:position pos:line="54" pos:column="26"/></operator> <operator pos:line="54" pos:column="27">&amp;&amp;<pos:position pos:line="54" pos:column="37"/></operator> <operator pos:line="54" pos:column="30">(<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="31">state_new<pos:position pos:line="54" pos:column="40"/></name> <operator pos:line="54" pos:column="41">!=<pos:position pos:line="54" pos:column="43"/></operator> <name pos:line="54" pos:column="44">STATE_ERROR<pos:position pos:line="54" pos:column="55"/></name><operator pos:line="54" pos:column="55">)<pos:position pos:line="54" pos:column="56"/></operator></expr>)<pos:position pos:line="54" pos:column="57"/></condition><then pos:line="54" pos:column="57">
    <block pos:line="55" pos:column="5">{
      <expr_stmt><expr><name pos:line="56" pos:column="7">state_new<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">=<pos:position pos:line="56" pos:column="18"/></operator> <name pos:line="56" pos:column="19">STATE_ERROR<pos:position pos:line="56" pos:column="30"/></name></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name pos:line="57" pos:column="7">ds_index<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <name pos:line="57" pos:column="18">i<pos:position pos:line="57" pos:column="19"/></name></expr>;<pos:position pos:line="57" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then>
    <elseif pos:line="59" pos:column="5">else <if pos:line="59" pos:column="10">if <condition pos:line="59" pos:column="13">(<expr><operator pos:line="59" pos:column="14">(<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">is_warning<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">!=<pos:position pos:line="59" pos:column="28"/></operator> <literal type="number" pos:line="59" pos:column="29">0<pos:position pos:line="59" pos:column="30"/></literal><operator pos:line="59" pos:column="30">)<pos:position pos:line="59" pos:column="31"/></operator>
	<operator pos:line="60" pos:column="9">&amp;&amp;<pos:position pos:line="60" pos:column="19"/></operator> <operator pos:line="60" pos:column="12">(<pos:position pos:line="60" pos:column="13"/></operator><name pos:line="60" pos:column="13">state_new<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">!=<pos:position pos:line="60" pos:column="25"/></operator> <name pos:line="60" pos:column="26">STATE_ERROR<pos:position pos:line="60" pos:column="37"/></name><operator pos:line="60" pos:column="37">)<pos:position pos:line="60" pos:column="38"/></operator>
	<operator pos:line="61" pos:column="9">&amp;&amp;<pos:position pos:line="61" pos:column="19"/></operator> <operator pos:line="61" pos:column="12">(<pos:position pos:line="61" pos:column="13"/></operator><name pos:line="61" pos:column="13">state_new<pos:position pos:line="61" pos:column="22"/></name> <operator pos:line="61" pos:column="23">!=<pos:position pos:line="61" pos:column="25"/></operator> <name pos:line="61" pos:column="26">STATE_WARNING<pos:position pos:line="61" pos:column="39"/></name><operator pos:line="61" pos:column="39">)<pos:position pos:line="61" pos:column="40"/></operator></expr>)<pos:position pos:line="61" pos:column="41"/></condition><then pos:line="61" pos:column="41">
    <block pos:line="62" pos:column="5">{
      <expr_stmt><expr><name pos:line="63" pos:column="7">state_new<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <name pos:line="63" pos:column="19">STATE_WARNING<pos:position pos:line="63" pos:column="32"/></name></expr>;<pos:position pos:line="63" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name pos:line="64" pos:column="7">ds_index<pos:position pos:line="64" pos:column="15"/></name> <operator pos:line="64" pos:column="16">=<pos:position pos:line="64" pos:column="17"/></operator> <name pos:line="64" pos:column="18">i<pos:position pos:line="64" pos:column="19"/></name></expr>;<pos:position pos:line="64" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="66" pos:column="4"/></block></for>

  <if pos:line="68" pos:column="3">if <condition pos:line="68" pos:column="6">(<expr><name pos:line="68" pos:column="7">state_new<pos:position pos:line="68" pos:column="16"/></name> <operator pos:line="68" pos:column="17">!=<pos:position pos:line="68" pos:column="19"/></operator> <name pos:line="68" pos:column="20">state_orig<pos:position pos:line="68" pos:column="30"/></name></expr>)<pos:position pos:line="68" pos:column="31"/></condition><then pos:line="68" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="5">uc_set_state<pos:position pos:line="69" pos:column="17"/></name> <argument_list pos:line="69" pos:column="18">(<argument><expr><name pos:line="69" pos:column="19">ds<pos:position pos:line="69" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="23">vl<pos:position pos:line="69" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="27">state_new<pos:position pos:line="69" pos:column="36"/></name></expr></argument>)<pos:position pos:line="69" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="38"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="71" pos:column="3">/* Return here if we're not going to send a notification */</comment>
  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><operator pos:line="72" pos:column="7">(<pos:position pos:line="72" pos:column="8"/></operator><name pos:line="72" pos:column="8">state_new<pos:position pos:line="72" pos:column="17"/></name> <operator pos:line="72" pos:column="18">==<pos:position pos:line="72" pos:column="20"/></operator> <name pos:line="72" pos:column="21">state_orig<pos:position pos:line="72" pos:column="31"/></name><operator pos:line="72" pos:column="31">)<pos:position pos:line="72" pos:column="32"/></operator>
      <operator pos:line="73" pos:column="7">&amp;&amp;<pos:position pos:line="73" pos:column="17"/></operator> <operator pos:line="73" pos:column="10">(<pos:position pos:line="73" pos:column="11"/></operator><operator pos:line="73" pos:column="11">(<pos:position pos:line="73" pos:column="12"/></operator><name pos:line="73" pos:column="12">state_new<pos:position pos:line="73" pos:column="21"/></name> <operator pos:line="73" pos:column="22">==<pos:position pos:line="73" pos:column="24"/></operator> <name pos:line="73" pos:column="25">STATE_OKAY<pos:position pos:line="73" pos:column="35"/></name><operator pos:line="73" pos:column="35">)<pos:position pos:line="73" pos:column="36"/></operator>
	<operator pos:line="74" pos:column="9">||<pos:position pos:line="74" pos:column="11"/></operator> <operator pos:line="74" pos:column="12">(<pos:position pos:line="74" pos:column="13"/></operator><operator pos:line="74" pos:column="13">(<pos:position pos:line="74" pos:column="14"/></operator><name><name pos:line="74" pos:column="14">th<pos:position pos:line="74" pos:column="16"/></name><operator pos:line="74" pos:column="16">-&gt;<pos:position pos:line="74" pos:column="21"/></operator><name pos:line="74" pos:column="18">flags<pos:position pos:line="74" pos:column="23"/></name></name> <operator pos:line="74" pos:column="24">&amp;<pos:position pos:line="74" pos:column="29"/></operator> <name pos:line="74" pos:column="26">UT_FLAG_PERSIST<pos:position pos:line="74" pos:column="41"/></name><operator pos:line="74" pos:column="41">)<pos:position pos:line="74" pos:column="42"/></operator> <operator pos:line="74" pos:column="43">==<pos:position pos:line="74" pos:column="45"/></operator> <literal type="number" pos:line="74" pos:column="46">0<pos:position pos:line="74" pos:column="47"/></literal><operator pos:line="74" pos:column="47">)<pos:position pos:line="74" pos:column="48"/></operator><operator pos:line="74" pos:column="48">)<pos:position pos:line="74" pos:column="49"/></operator></expr>)<pos:position pos:line="74" pos:column="50"/></condition><then pos:line="74" pos:column="50">
  <block pos:line="75" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">sfree<pos:position pos:line="76" pos:column="10"/></name> <argument_list pos:line="76" pos:column="11">(<argument><expr><name pos:line="76" pos:column="12">values<pos:position pos:line="76" pos:column="18"/></name></expr></argument>)<pos:position pos:line="76" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="20"/></expr_stmt>
    <return pos:line="77" pos:column="5">return <expr><operator pos:line="77" pos:column="12">(<pos:position pos:line="77" pos:column="13"/></operator><literal type="number" pos:line="77" pos:column="13">0<pos:position pos:line="77" pos:column="14"/></literal><operator pos:line="77" pos:column="14">)<pos:position pos:line="77" pos:column="15"/></operator></expr>;<pos:position pos:line="77" pos:column="16"/></return>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="80" pos:column="3">NOTIFICATION_INIT_VL<pos:position pos:line="80" pos:column="23"/></name> <argument_list pos:line="80" pos:column="24">(<argument><expr><operator pos:line="80" pos:column="25">&amp;<pos:position pos:line="80" pos:column="30"/></operator><name pos:line="80" pos:column="26">n<pos:position pos:line="80" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="29">vl<pos:position pos:line="80" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="33">ds<pos:position pos:line="80" pos:column="35"/></name></expr></argument>)<pos:position pos:line="80" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="37"/></expr_stmt>
  <block pos:line="81" pos:column="3">{
    <comment type="block" pos:line="82" pos:column="5">/* Copy the associative members */</comment>
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name pos:line="83" pos:column="9">state_new<pos:position pos:line="83" pos:column="18"/></name> <operator pos:line="83" pos:column="19">==<pos:position pos:line="83" pos:column="21"/></operator> <name pos:line="83" pos:column="22">STATE_OKAY<pos:position pos:line="83" pos:column="32"/></name></expr>)<pos:position pos:line="83" pos:column="33"/></condition><then pos:line="83" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="84" pos:column="7">n<pos:position pos:line="84" pos:column="8"/></name><operator pos:line="84" pos:column="8">.<pos:position pos:line="84" pos:column="9"/></operator><name pos:line="84" pos:column="9">severity<pos:position pos:line="84" pos:column="17"/></name></name> <operator pos:line="84" pos:column="18">=<pos:position pos:line="84" pos:column="19"/></operator> <name pos:line="84" pos:column="20">NOTIF_OKAY<pos:position pos:line="84" pos:column="30"/></name></expr>;<pos:position pos:line="84" pos:column="31"/></expr_stmt></block></then>
    <elseif pos:line="85" pos:column="5">else <if pos:line="85" pos:column="10">if <condition pos:line="85" pos:column="13">(<expr><name pos:line="85" pos:column="14">state_new<pos:position pos:line="85" pos:column="23"/></name> <operator pos:line="85" pos:column="24">==<pos:position pos:line="85" pos:column="26"/></operator> <name pos:line="85" pos:column="27">STATE_WARNING<pos:position pos:line="85" pos:column="40"/></name></expr>)<pos:position pos:line="85" pos:column="41"/></condition><then pos:line="85" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="86" pos:column="7">n<pos:position pos:line="86" pos:column="8"/></name><operator pos:line="86" pos:column="8">.<pos:position pos:line="86" pos:column="9"/></operator><name pos:line="86" pos:column="9">severity<pos:position pos:line="86" pos:column="17"/></name></name> <operator pos:line="86" pos:column="18">=<pos:position pos:line="86" pos:column="19"/></operator> <name pos:line="86" pos:column="20">NOTIF_WARNING<pos:position pos:line="86" pos:column="33"/></name></expr>;<pos:position pos:line="86" pos:column="34"/></expr_stmt></block></then></if></elseif>
    <else pos:line="87" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="88" pos:column="7">n<pos:position pos:line="88" pos:column="8"/></name><operator pos:line="88" pos:column="8">.<pos:position pos:line="88" pos:column="9"/></operator><name pos:line="88" pos:column="9">severity<pos:position pos:line="88" pos:column="17"/></name></name> <operator pos:line="88" pos:column="18">=<pos:position pos:line="88" pos:column="19"/></operator> <name pos:line="88" pos:column="20">NOTIF_FAILURE<pos:position pos:line="88" pos:column="33"/></name></expr>;<pos:position pos:line="88" pos:column="34"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name><name pos:line="90" pos:column="5">n<pos:position pos:line="90" pos:column="6"/></name><operator pos:line="90" pos:column="6">.<pos:position pos:line="90" pos:column="7"/></operator><name pos:line="90" pos:column="7">time<pos:position pos:line="90" pos:column="11"/></name></name> <operator pos:line="90" pos:column="12">=<pos:position pos:line="90" pos:column="13"/></operator> <name><name pos:line="90" pos:column="14">vl<pos:position pos:line="90" pos:column="16"/></name><operator pos:line="90" pos:column="16">-&gt;<pos:position pos:line="90" pos:column="21"/></operator><name pos:line="90" pos:column="18">time<pos:position pos:line="90" pos:column="22"/></name></name></expr>;<pos:position pos:line="90" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name pos:line="92" pos:column="5">buf<pos:position pos:line="92" pos:column="8"/></name> <operator pos:line="92" pos:column="9">=<pos:position pos:line="92" pos:column="10"/></operator> <name><name pos:line="92" pos:column="11">n<pos:position pos:line="92" pos:column="12"/></name><operator pos:line="92" pos:column="12">.<pos:position pos:line="92" pos:column="13"/></operator><name pos:line="92" pos:column="13">message<pos:position pos:line="92" pos:column="20"/></name></name></expr>;<pos:position pos:line="92" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="93" pos:column="5">bufsize<pos:position pos:line="93" pos:column="12"/></name> <operator pos:line="93" pos:column="13">=<pos:position pos:line="93" pos:column="14"/></operator> <sizeof pos:line="93" pos:column="15">sizeof <argument_list pos:line="93" pos:column="22">(<argument><expr><name><name pos:line="93" pos:column="23">n<pos:position pos:line="93" pos:column="24"/></name><operator pos:line="93" pos:column="24">.<pos:position pos:line="93" pos:column="25"/></operator><name pos:line="93" pos:column="25">message<pos:position pos:line="93" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="33"/></argument_list></sizeof></expr>;<pos:position pos:line="93" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="95" pos:column="5">status<pos:position pos:line="95" pos:column="11"/></name> <operator pos:line="95" pos:column="12">=<pos:position pos:line="95" pos:column="13"/></operator> <call><name pos:line="95" pos:column="14">snprintf<pos:position pos:line="95" pos:column="22"/></name> <argument_list pos:line="95" pos:column="23">(<argument><expr><name pos:line="95" pos:column="24">buf<pos:position pos:line="95" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="29">bufsize<pos:position pos:line="95" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="38">"Host %s, plugin %s"<pos:position pos:line="95" pos:column="58"/></literal></expr></argument>,
	<argument><expr><name><name pos:line="96" pos:column="9">vl<pos:position pos:line="96" pos:column="11"/></name><operator pos:line="96" pos:column="11">-&gt;<pos:position pos:line="96" pos:column="16"/></operator><name pos:line="96" pos:column="13">host<pos:position pos:line="96" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="19">vl<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">-&gt;<pos:position pos:line="96" pos:column="26"/></operator><name pos:line="96" pos:column="23">plugin<pos:position pos:line="96" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="97" pos:column="5">buf<pos:position pos:line="97" pos:column="8"/></name> <operator pos:line="97" pos:column="9">+=<pos:position pos:line="97" pos:column="11"/></operator> <name pos:line="97" pos:column="12">status<pos:position pos:line="97" pos:column="18"/></name></expr>;<pos:position pos:line="97" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="98" pos:column="5">bufsize<pos:position pos:line="98" pos:column="12"/></name> <operator pos:line="98" pos:column="13">-=<pos:position pos:line="98" pos:column="15"/></operator> <name pos:line="98" pos:column="16">status<pos:position pos:line="98" pos:column="22"/></name></expr>;<pos:position pos:line="98" pos:column="23"/></expr_stmt>

    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><name><name pos:line="100" pos:column="9">vl<pos:position pos:line="100" pos:column="11"/></name><operator pos:line="100" pos:column="11">-&gt;<pos:position pos:line="100" pos:column="16"/></operator><name pos:line="100" pos:column="13">plugin_instance<pos:position pos:line="100" pos:column="28"/></name><index pos:line="100" pos:column="28">[<expr><literal type="number" pos:line="100" pos:column="29">0<pos:position pos:line="100" pos:column="30"/></literal></expr>]<pos:position pos:line="100" pos:column="31"/></index></name> <operator pos:line="100" pos:column="32">!=<pos:position pos:line="100" pos:column="34"/></operator> <literal type="char" pos:line="100" pos:column="35">'\0'<pos:position pos:line="100" pos:column="39"/></literal></expr>)<pos:position pos:line="100" pos:column="40"/></condition><then pos:line="100" pos:column="40">
    <block pos:line="101" pos:column="5">{
      <expr_stmt><expr><name pos:line="102" pos:column="7">status<pos:position pos:line="102" pos:column="13"/></name> <operator pos:line="102" pos:column="14">=<pos:position pos:line="102" pos:column="15"/></operator> <call><name pos:line="102" pos:column="16">snprintf<pos:position pos:line="102" pos:column="24"/></name> <argument_list pos:line="102" pos:column="25">(<argument><expr><name pos:line="102" pos:column="26">buf<pos:position pos:line="102" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="31">bufsize<pos:position pos:line="102" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="40">" (instance %s)"<pos:position pos:line="102" pos:column="56"/></literal></expr></argument>,
	  <argument><expr><name><name pos:line="103" pos:column="11">vl<pos:position pos:line="103" pos:column="13"/></name><operator pos:line="103" pos:column="13">-&gt;<pos:position pos:line="103" pos:column="18"/></operator><name pos:line="103" pos:column="15">plugin_instance<pos:position pos:line="103" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="104" pos:column="7">buf<pos:position pos:line="104" pos:column="10"/></name> <operator pos:line="104" pos:column="11">+=<pos:position pos:line="104" pos:column="13"/></operator> <name pos:line="104" pos:column="14">status<pos:position pos:line="104" pos:column="20"/></name></expr>;<pos:position pos:line="104" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="105" pos:column="7">bufsize<pos:position pos:line="105" pos:column="14"/></name> <operator pos:line="105" pos:column="15">-=<pos:position pos:line="105" pos:column="17"/></operator> <name pos:line="105" pos:column="18">status<pos:position pos:line="105" pos:column="24"/></name></expr>;<pos:position pos:line="105" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="106" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="108" pos:column="5">status<pos:position pos:line="108" pos:column="11"/></name> <operator pos:line="108" pos:column="12">=<pos:position pos:line="108" pos:column="13"/></operator> <call><name pos:line="108" pos:column="14">snprintf<pos:position pos:line="108" pos:column="22"/></name> <argument_list pos:line="108" pos:column="23">(<argument><expr><name pos:line="108" pos:column="24">buf<pos:position pos:line="108" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="29">bufsize<pos:position pos:line="108" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="38">" type %s"<pos:position pos:line="108" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="50">ds<pos:position pos:line="108" pos:column="52"/></name><operator pos:line="108" pos:column="52">-&gt;<pos:position pos:line="108" pos:column="57"/></operator><name pos:line="108" pos:column="54">type<pos:position pos:line="108" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name pos:line="109" pos:column="5">buf<pos:position pos:line="109" pos:column="8"/></name> <operator pos:line="109" pos:column="9">+=<pos:position pos:line="109" pos:column="11"/></operator> <name pos:line="109" pos:column="12">status<pos:position pos:line="109" pos:column="18"/></name></expr>;<pos:position pos:line="109" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="110" pos:column="5">bufsize<pos:position pos:line="110" pos:column="12"/></name> <operator pos:line="110" pos:column="13">-=<pos:position pos:line="110" pos:column="15"/></operator> <name pos:line="110" pos:column="16">status<pos:position pos:line="110" pos:column="22"/></name></expr>;<pos:position pos:line="110" pos:column="23"/></expr_stmt>

    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><name><name pos:line="112" pos:column="9">vl<pos:position pos:line="112" pos:column="11"/></name><operator pos:line="112" pos:column="11">-&gt;<pos:position pos:line="112" pos:column="16"/></operator><name pos:line="112" pos:column="13">type_instance<pos:position pos:line="112" pos:column="26"/></name><index pos:line="112" pos:column="26">[<expr><literal type="number" pos:line="112" pos:column="27">0<pos:position pos:line="112" pos:column="28"/></literal></expr>]<pos:position pos:line="112" pos:column="29"/></index></name> <operator pos:line="112" pos:column="30">!=<pos:position pos:line="112" pos:column="32"/></operator> <literal type="char" pos:line="112" pos:column="33">'\0'<pos:position pos:line="112" pos:column="37"/></literal></expr>)<pos:position pos:line="112" pos:column="38"/></condition><then pos:line="112" pos:column="38">
    <block pos:line="113" pos:column="5">{
      <expr_stmt><expr><name pos:line="114" pos:column="7">status<pos:position pos:line="114" pos:column="13"/></name> <operator pos:line="114" pos:column="14">=<pos:position pos:line="114" pos:column="15"/></operator> <call><name pos:line="114" pos:column="16">snprintf<pos:position pos:line="114" pos:column="24"/></name> <argument_list pos:line="114" pos:column="25">(<argument><expr><name pos:line="114" pos:column="26">buf<pos:position pos:line="114" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="31">bufsize<pos:position pos:line="114" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="40">" (instance %s)"<pos:position pos:line="114" pos:column="56"/></literal></expr></argument>,
	  <argument><expr><name><name pos:line="115" pos:column="11">vl<pos:position pos:line="115" pos:column="13"/></name><operator pos:line="115" pos:column="13">-&gt;<pos:position pos:line="115" pos:column="18"/></operator><name pos:line="115" pos:column="15">type_instance<pos:position pos:line="115" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name pos:line="116" pos:column="7">buf<pos:position pos:line="116" pos:column="10"/></name> <operator pos:line="116" pos:column="11">+=<pos:position pos:line="116" pos:column="13"/></operator> <name pos:line="116" pos:column="14">status<pos:position pos:line="116" pos:column="20"/></name></expr>;<pos:position pos:line="116" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="117" pos:column="7">bufsize<pos:position pos:line="117" pos:column="14"/></name> <operator pos:line="117" pos:column="15">-=<pos:position pos:line="117" pos:column="17"/></operator> <name pos:line="117" pos:column="18">status<pos:position pos:line="117" pos:column="24"/></name></expr>;<pos:position pos:line="117" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="118" pos:column="6"/></block></then></if>
  }<pos:position pos:line="119" pos:column="4"/></block>

  <comment type="block" pos:line="121" pos:column="3">/* Send a okay notification */</comment>
  <if pos:line="122" pos:column="3">if <condition pos:line="122" pos:column="6">(<expr><name pos:line="122" pos:column="7">state_new<pos:position pos:line="122" pos:column="16"/></name> <operator pos:line="122" pos:column="17">==<pos:position pos:line="122" pos:column="19"/></operator> <name pos:line="122" pos:column="20">STATE_OKAY<pos:position pos:line="122" pos:column="30"/></name></expr>)<pos:position pos:line="122" pos:column="31"/></condition><then pos:line="122" pos:column="31">
  <block pos:line="123" pos:column="3">{
    <expr_stmt><expr><name pos:line="124" pos:column="5">status<pos:position pos:line="124" pos:column="11"/></name> <operator pos:line="124" pos:column="12">=<pos:position pos:line="124" pos:column="13"/></operator> <call><name pos:line="124" pos:column="14">snprintf<pos:position pos:line="124" pos:column="22"/></name> <argument_list pos:line="124" pos:column="23">(<argument><expr><name pos:line="124" pos:column="24">buf<pos:position pos:line="124" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="29">bufsize<pos:position pos:line="124" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="38">": All data sources are within range again."<pos:position pos:line="124" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="84"/></expr_stmt>
    <expr_stmt><expr><name pos:line="125" pos:column="5">buf<pos:position pos:line="125" pos:column="8"/></name> <operator pos:line="125" pos:column="9">+=<pos:position pos:line="125" pos:column="11"/></operator> <name pos:line="125" pos:column="12">status<pos:position pos:line="125" pos:column="18"/></name></expr>;<pos:position pos:line="125" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="126" pos:column="5">bufsize<pos:position pos:line="126" pos:column="12"/></name> <operator pos:line="126" pos:column="13">-=<pos:position pos:line="126" pos:column="15"/></operator> <name pos:line="126" pos:column="16">status<pos:position pos:line="126" pos:column="22"/></name></expr>;<pos:position pos:line="126" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="127" pos:column="4"/></block></then>
  <else pos:line="128" pos:column="3">else
  <block pos:line="129" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="130" pos:column="5">double<pos:position pos:line="130" pos:column="11"/></name></type> <name pos:line="130" pos:column="12">min<pos:position pos:line="130" pos:column="15"/></name></decl>;<pos:position pos:line="130" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="131" pos:column="5">double<pos:position pos:line="131" pos:column="11"/></name></type> <name pos:line="131" pos:column="12">max<pos:position pos:line="131" pos:column="15"/></name></decl>;<pos:position pos:line="131" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="133" pos:column="5">min<pos:position pos:line="133" pos:column="8"/></name> <operator pos:line="133" pos:column="9">=<pos:position pos:line="133" pos:column="10"/></operator> <ternary><condition><expr><operator pos:line="133" pos:column="11">(<pos:position pos:line="133" pos:column="12"/></operator><name pos:line="133" pos:column="12">state_new<pos:position pos:line="133" pos:column="21"/></name> <operator pos:line="133" pos:column="22">==<pos:position pos:line="133" pos:column="24"/></operator> <name pos:line="133" pos:column="25">STATE_ERROR<pos:position pos:line="133" pos:column="36"/></name><operator pos:line="133" pos:column="36">)<pos:position pos:line="133" pos:column="37"/></operator></expr> ?<pos:position pos:line="133" pos:column="39"/></condition><then pos:line="133" pos:column="39"> <expr><name><name pos:line="133" pos:column="40">th<pos:position pos:line="133" pos:column="42"/></name><operator pos:line="133" pos:column="42">-&gt;<pos:position pos:line="133" pos:column="47"/></operator><name pos:line="133" pos:column="44">failure_min<pos:position pos:line="133" pos:column="55"/></name></name></expr> <pos:position pos:line="133" pos:column="56"/></then><else pos:line="133" pos:column="56">: <expr><name><name pos:line="133" pos:column="58">th<pos:position pos:line="133" pos:column="60"/></name><operator pos:line="133" pos:column="60">-&gt;<pos:position pos:line="133" pos:column="65"/></operator><name pos:line="133" pos:column="62">warning_min<pos:position pos:line="133" pos:column="73"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="133" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name pos:line="134" pos:column="5">max<pos:position pos:line="134" pos:column="8"/></name> <operator pos:line="134" pos:column="9">=<pos:position pos:line="134" pos:column="10"/></operator> <ternary><condition><expr><operator pos:line="134" pos:column="11">(<pos:position pos:line="134" pos:column="12"/></operator><name pos:line="134" pos:column="12">state_new<pos:position pos:line="134" pos:column="21"/></name> <operator pos:line="134" pos:column="22">==<pos:position pos:line="134" pos:column="24"/></operator> <name pos:line="134" pos:column="25">STATE_ERROR<pos:position pos:line="134" pos:column="36"/></name><operator pos:line="134" pos:column="36">)<pos:position pos:line="134" pos:column="37"/></operator></expr> ?<pos:position pos:line="134" pos:column="39"/></condition><then pos:line="134" pos:column="39"> <expr><name><name pos:line="134" pos:column="40">th<pos:position pos:line="134" pos:column="42"/></name><operator pos:line="134" pos:column="42">-&gt;<pos:position pos:line="134" pos:column="47"/></operator><name pos:line="134" pos:column="44">failure_max<pos:position pos:line="134" pos:column="55"/></name></name></expr> <pos:position pos:line="134" pos:column="56"/></then><else pos:line="134" pos:column="56">: <expr><name><name pos:line="134" pos:column="58">th<pos:position pos:line="134" pos:column="60"/></name><operator pos:line="134" pos:column="60">-&gt;<pos:position pos:line="134" pos:column="65"/></operator><name pos:line="134" pos:column="62">warning_max<pos:position pos:line="134" pos:column="73"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="134" pos:column="74"/></expr_stmt>

    <if pos:line="136" pos:column="5">if <condition pos:line="136" pos:column="8">(<expr><name><name pos:line="136" pos:column="9">th<pos:position pos:line="136" pos:column="11"/></name><operator pos:line="136" pos:column="11">-&gt;<pos:position pos:line="136" pos:column="16"/></operator><name pos:line="136" pos:column="13">flags<pos:position pos:line="136" pos:column="18"/></name></name> <operator pos:line="136" pos:column="19">&amp;<pos:position pos:line="136" pos:column="24"/></operator> <name pos:line="136" pos:column="21">UT_FLAG_INVERT<pos:position pos:line="136" pos:column="35"/></name></expr>)<pos:position pos:line="136" pos:column="36"/></condition><then pos:line="136" pos:column="36">
    <block pos:line="137" pos:column="5">{
      <if pos:line="138" pos:column="7">if <condition pos:line="138" pos:column="10">(<expr><operator pos:line="138" pos:column="11">!<pos:position pos:line="138" pos:column="12"/></operator><call><name pos:line="138" pos:column="12">isnan<pos:position pos:line="138" pos:column="17"/></name> <argument_list pos:line="138" pos:column="18">(<argument><expr><name pos:line="138" pos:column="19">min<pos:position pos:line="138" pos:column="22"/></name></expr></argument>)<pos:position pos:line="138" pos:column="23"/></argument_list></call> <operator pos:line="138" pos:column="24">&amp;&amp;<pos:position pos:line="138" pos:column="34"/></operator> <operator pos:line="138" pos:column="27">!<pos:position pos:line="138" pos:column="28"/></operator><call><name pos:line="138" pos:column="28">isnan<pos:position pos:line="138" pos:column="33"/></name> <argument_list pos:line="138" pos:column="34">(<argument><expr><name pos:line="138" pos:column="35">max<pos:position pos:line="138" pos:column="38"/></name></expr></argument>)<pos:position pos:line="138" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="138" pos:column="40"/></condition><then pos:line="138" pos:column="40">
      <block pos:line="139" pos:column="7">{
	<expr_stmt><expr><name pos:line="140" pos:column="9">status<pos:position pos:line="140" pos:column="15"/></name> <operator pos:line="140" pos:column="16">=<pos:position pos:line="140" pos:column="17"/></operator> <call><name pos:line="140" pos:column="18">snprintf<pos:position pos:line="140" pos:column="26"/></name> <argument_list pos:line="140" pos:column="27">(<argument><expr><name pos:line="140" pos:column="28">buf<pos:position pos:line="140" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="33">bufsize<pos:position pos:line="140" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="42">": Data source \"%s\" is currently "<pos:position pos:line="140" pos:column="78"/></literal>
	    <literal type="string" pos:line="141" pos:column="13">"%f. That is within the %s region of %f and %f."<pos:position pos:line="141" pos:column="61"/></literal></expr></argument>,
	    <argument><expr><name><name pos:line="142" pos:column="13">ds<pos:position pos:line="142" pos:column="15"/></name><operator pos:line="142" pos:column="15">-&gt;<pos:position pos:line="142" pos:column="20"/></operator><name pos:line="142" pos:column="17">ds<pos:position pos:line="142" pos:column="19"/></name><index pos:line="142" pos:column="19">[<expr><name pos:line="142" pos:column="20">ds_index<pos:position pos:line="142" pos:column="28"/></name></expr>]<pos:position pos:line="142" pos:column="29"/></index></name><operator pos:line="142" pos:column="29">.<pos:position pos:line="142" pos:column="30"/></operator><name pos:line="142" pos:column="30">name<pos:position pos:line="142" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="36">values<pos:position pos:line="142" pos:column="42"/></name><index pos:line="142" pos:column="42">[<expr><name pos:line="142" pos:column="43">ds_index<pos:position pos:line="142" pos:column="51"/></name></expr>]<pos:position pos:line="142" pos:column="52"/></index></name></expr></argument>,
	    <argument><expr><ternary><condition><expr><operator pos:line="143" pos:column="13">(<pos:position pos:line="143" pos:column="14"/></operator><name pos:line="143" pos:column="14">state_new<pos:position pos:line="143" pos:column="23"/></name> <operator pos:line="143" pos:column="24">==<pos:position pos:line="143" pos:column="26"/></operator> <name pos:line="143" pos:column="27">STATE_ERROR<pos:position pos:line="143" pos:column="38"/></name><operator pos:line="143" pos:column="38">)<pos:position pos:line="143" pos:column="39"/></operator></expr> ?<pos:position pos:line="143" pos:column="41"/></condition><then pos:line="143" pos:column="41"> <expr><literal type="string" pos:line="143" pos:column="42">"failure"<pos:position pos:line="143" pos:column="51"/></literal></expr> <pos:position pos:line="143" pos:column="52"/></then><else pos:line="143" pos:column="52">: <expr><literal type="string" pos:line="143" pos:column="54">"warning"<pos:position pos:line="143" pos:column="63"/></literal></expr></else></ternary></expr></argument>,
	    <argument><expr><name pos:line="144" pos:column="13">min<pos:position pos:line="144" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="18">min<pos:position pos:line="144" pos:column="21"/></name></expr></argument>)<pos:position pos:line="144" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="145" pos:column="8"/></block></then>
      <else pos:line="146" pos:column="7">else
      <block pos:line="147" pos:column="7">{
	<expr_stmt><expr><name pos:line="148" pos:column="9">status<pos:position pos:line="148" pos:column="15"/></name> <operator pos:line="148" pos:column="16">=<pos:position pos:line="148" pos:column="17"/></operator> <call><name pos:line="148" pos:column="18">snprintf<pos:position pos:line="148" pos:column="26"/></name> <argument_list pos:line="148" pos:column="27">(<argument><expr><name pos:line="148" pos:column="28">buf<pos:position pos:line="148" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="33">bufsize<pos:position pos:line="148" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="42">": Data source \"%s\" is currently "<pos:position pos:line="148" pos:column="78"/></literal>
	    <literal type="string" pos:line="149" pos:column="13">"%f. That is %s the %s threshold of %f."<pos:position pos:line="149" pos:column="53"/></literal></expr></argument>,
	    <argument><expr><name><name pos:line="150" pos:column="13">ds<pos:position pos:line="150" pos:column="15"/></name><operator pos:line="150" pos:column="15">-&gt;<pos:position pos:line="150" pos:column="20"/></operator><name pos:line="150" pos:column="17">ds<pos:position pos:line="150" pos:column="19"/></name><index pos:line="150" pos:column="19">[<expr><name pos:line="150" pos:column="20">ds_index<pos:position pos:line="150" pos:column="28"/></name></expr>]<pos:position pos:line="150" pos:column="29"/></index></name><operator pos:line="150" pos:column="29">.<pos:position pos:line="150" pos:column="30"/></operator><name pos:line="150" pos:column="30">name<pos:position pos:line="150" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="150" pos:column="36">values<pos:position pos:line="150" pos:column="42"/></name><index pos:line="150" pos:column="42">[<expr><name pos:line="150" pos:column="43">ds_index<pos:position pos:line="150" pos:column="51"/></name></expr>]<pos:position pos:line="150" pos:column="52"/></index></name></expr></argument>,
	    <argument><expr><ternary><condition><expr><call><name pos:line="151" pos:column="13">isnan<pos:position pos:line="151" pos:column="18"/></name> <argument_list pos:line="151" pos:column="19">(<argument><expr><name pos:line="151" pos:column="20">min<pos:position pos:line="151" pos:column="23"/></name></expr></argument>)<pos:position pos:line="151" pos:column="24"/></argument_list></call></expr> ?<pos:position pos:line="151" pos:column="26"/></condition><then pos:line="151" pos:column="26"> <expr><literal type="string" pos:line="151" pos:column="27">"below"<pos:position pos:line="151" pos:column="34"/></literal></expr> <pos:position pos:line="151" pos:column="35"/></then><else pos:line="151" pos:column="35">: <expr><literal type="string" pos:line="151" pos:column="37">"above"<pos:position pos:line="151" pos:column="44"/></literal></expr></else></ternary></expr></argument>,
	    <argument><expr><ternary><condition><expr><operator pos:line="152" pos:column="13">(<pos:position pos:line="152" pos:column="14"/></operator><name pos:line="152" pos:column="14">state_new<pos:position pos:line="152" pos:column="23"/></name> <operator pos:line="152" pos:column="24">==<pos:position pos:line="152" pos:column="26"/></operator> <name pos:line="152" pos:column="27">STATE_ERROR<pos:position pos:line="152" pos:column="38"/></name><operator pos:line="152" pos:column="38">)<pos:position pos:line="152" pos:column="39"/></operator></expr> ?<pos:position pos:line="152" pos:column="41"/></condition><then pos:line="152" pos:column="41"> <expr><literal type="string" pos:line="152" pos:column="42">"failure"<pos:position pos:line="152" pos:column="51"/></literal></expr> <pos:position pos:line="152" pos:column="52"/></then><else pos:line="152" pos:column="52">: <expr><literal type="string" pos:line="152" pos:column="54">"warning"<pos:position pos:line="152" pos:column="63"/></literal></expr></else></ternary></expr></argument>,
	    <argument><expr><ternary><condition><expr><call><name pos:line="153" pos:column="13">isnan<pos:position pos:line="153" pos:column="18"/></name> <argument_list pos:line="153" pos:column="19">(<argument><expr><name pos:line="153" pos:column="20">min<pos:position pos:line="153" pos:column="23"/></name></expr></argument>)<pos:position pos:line="153" pos:column="24"/></argument_list></call></expr> ?<pos:position pos:line="153" pos:column="26"/></condition><then pos:line="153" pos:column="26"> <expr><name pos:line="153" pos:column="27">max<pos:position pos:line="153" pos:column="30"/></name></expr> <pos:position pos:line="153" pos:column="31"/></then><else pos:line="153" pos:column="31">: <expr><name pos:line="153" pos:column="33">min<pos:position pos:line="153" pos:column="36"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="153" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="154" pos:column="8"/></block></else></if>
    }<pos:position pos:line="155" pos:column="6"/></block></then>
    <else pos:line="156" pos:column="5">else <comment type="block" pos:line="156" pos:column="10">/* is not inverted */</comment>
    <block pos:line="157" pos:column="5">{
      <expr_stmt><expr><name pos:line="158" pos:column="7">status<pos:position pos:line="158" pos:column="13"/></name> <operator pos:line="158" pos:column="14">=<pos:position pos:line="158" pos:column="15"/></operator> <call><name pos:line="158" pos:column="16">snprintf<pos:position pos:line="158" pos:column="24"/></name> <argument_list pos:line="158" pos:column="25">(<argument><expr><name pos:line="158" pos:column="26">buf<pos:position pos:line="158" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="31">bufsize<pos:position pos:line="158" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="40">": Data source \"%s\" is currently "<pos:position pos:line="158" pos:column="76"/></literal>
	  <literal type="string" pos:line="159" pos:column="11">"%f. That is %s the %s threshold of %f."<pos:position pos:line="159" pos:column="51"/></literal></expr></argument>,
	  <argument><expr><name><name pos:line="160" pos:column="11">ds<pos:position pos:line="160" pos:column="13"/></name><operator pos:line="160" pos:column="13">-&gt;<pos:position pos:line="160" pos:column="18"/></operator><name pos:line="160" pos:column="15">ds<pos:position pos:line="160" pos:column="17"/></name><index pos:line="160" pos:column="17">[<expr><name pos:line="160" pos:column="18">ds_index<pos:position pos:line="160" pos:column="26"/></name></expr>]<pos:position pos:line="160" pos:column="27"/></index></name><operator pos:line="160" pos:column="27">.<pos:position pos:line="160" pos:column="28"/></operator><name pos:line="160" pos:column="28">name<pos:position pos:line="160" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="160" pos:column="34">values<pos:position pos:line="160" pos:column="40"/></name><index pos:line="160" pos:column="40">[<expr><name pos:line="160" pos:column="41">ds_index<pos:position pos:line="160" pos:column="49"/></name></expr>]<pos:position pos:line="160" pos:column="50"/></index></name></expr></argument>,
	  <argument><expr><ternary><condition><expr><operator pos:line="161" pos:column="11">(<pos:position pos:line="161" pos:column="12"/></operator><name><name pos:line="161" pos:column="12">values<pos:position pos:line="161" pos:column="18"/></name><index pos:line="161" pos:column="18">[<expr><name pos:line="161" pos:column="19">ds_index<pos:position pos:line="161" pos:column="27"/></name></expr>]<pos:position pos:line="161" pos:column="28"/></index></name> <operator pos:line="161" pos:column="29">&lt;<pos:position pos:line="161" pos:column="33"/></operator> <name pos:line="161" pos:column="31">min<pos:position pos:line="161" pos:column="34"/></name><operator pos:line="161" pos:column="34">)<pos:position pos:line="161" pos:column="35"/></operator></expr> ?<pos:position pos:line="161" pos:column="37"/></condition><then pos:line="161" pos:column="37"> <expr><literal type="string" pos:line="161" pos:column="38">"below"<pos:position pos:line="161" pos:column="45"/></literal></expr> <pos:position pos:line="161" pos:column="46"/></then><else pos:line="161" pos:column="46">: <expr><literal type="string" pos:line="161" pos:column="48">"above"<pos:position pos:line="161" pos:column="55"/></literal></expr></else></ternary></expr></argument>,
	  <argument><expr><ternary><condition><expr><operator pos:line="162" pos:column="11">(<pos:position pos:line="162" pos:column="12"/></operator><name pos:line="162" pos:column="12">state_new<pos:position pos:line="162" pos:column="21"/></name> <operator pos:line="162" pos:column="22">==<pos:position pos:line="162" pos:column="24"/></operator> <name pos:line="162" pos:column="25">STATE_ERROR<pos:position pos:line="162" pos:column="36"/></name><operator pos:line="162" pos:column="36">)<pos:position pos:line="162" pos:column="37"/></operator></expr> ?<pos:position pos:line="162" pos:column="39"/></condition><then pos:line="162" pos:column="39"> <expr><literal type="string" pos:line="162" pos:column="40">"failure"<pos:position pos:line="162" pos:column="49"/></literal></expr> <pos:position pos:line="162" pos:column="50"/></then><else pos:line="162" pos:column="50">: <expr><literal type="string" pos:line="162" pos:column="52">"warning"<pos:position pos:line="162" pos:column="61"/></literal></expr></else></ternary></expr></argument>,
	  <argument><expr><ternary><condition><expr><operator pos:line="163" pos:column="11">(<pos:position pos:line="163" pos:column="12"/></operator><name><name pos:line="163" pos:column="12">values<pos:position pos:line="163" pos:column="18"/></name><index pos:line="163" pos:column="18">[<expr><name pos:line="163" pos:column="19">ds_index<pos:position pos:line="163" pos:column="27"/></name></expr>]<pos:position pos:line="163" pos:column="28"/></index></name> <operator pos:line="163" pos:column="29">&lt;<pos:position pos:line="163" pos:column="33"/></operator> <name pos:line="163" pos:column="31">min<pos:position pos:line="163" pos:column="34"/></name><operator pos:line="163" pos:column="34">)<pos:position pos:line="163" pos:column="35"/></operator></expr> ?<pos:position pos:line="163" pos:column="37"/></condition><then pos:line="163" pos:column="37"> <expr><name pos:line="163" pos:column="38">min<pos:position pos:line="163" pos:column="41"/></name></expr> <pos:position pos:line="163" pos:column="42"/></then><else pos:line="163" pos:column="42">: <expr><name pos:line="163" pos:column="44">max<pos:position pos:line="163" pos:column="47"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="163" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="164" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="165" pos:column="5">buf<pos:position pos:line="165" pos:column="8"/></name> <operator pos:line="165" pos:column="9">+=<pos:position pos:line="165" pos:column="11"/></operator> <name pos:line="165" pos:column="12">status<pos:position pos:line="165" pos:column="18"/></name></expr>;<pos:position pos:line="165" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="166" pos:column="5">bufsize<pos:position pos:line="166" pos:column="12"/></name> <operator pos:line="166" pos:column="13">-=<pos:position pos:line="166" pos:column="15"/></operator> <name pos:line="166" pos:column="16">status<pos:position pos:line="166" pos:column="22"/></name></expr>;<pos:position pos:line="166" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="167" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="169" pos:column="3">plugin_dispatch_notification<pos:position pos:line="169" pos:column="31"/></name> <argument_list pos:line="169" pos:column="32">(<argument><expr><operator pos:line="169" pos:column="33">&amp;<pos:position pos:line="169" pos:column="38"/></operator><name pos:line="169" pos:column="34">n<pos:position pos:line="169" pos:column="35"/></name></expr></argument>)<pos:position pos:line="169" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="171" pos:column="3">sfree<pos:position pos:line="171" pos:column="8"/></name> <argument_list pos:line="171" pos:column="9">(<argument><expr><name pos:line="171" pos:column="10">values<pos:position pos:line="171" pos:column="16"/></name></expr></argument>)<pos:position pos:line="171" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="18"/></expr_stmt>

  <return pos:line="173" pos:column="3">return <expr><operator pos:line="173" pos:column="10">(<pos:position pos:line="173" pos:column="11"/></operator><literal type="number" pos:line="173" pos:column="11">0<pos:position pos:line="173" pos:column="12"/></literal><operator pos:line="173" pos:column="12">)<pos:position pos:line="173" pos:column="13"/></operator></expr>;<pos:position pos:line="173" pos:column="14"/></return>
}<pos:position pos:line="174" pos:column="2"/></block></function></unit>

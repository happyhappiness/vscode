<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_408_collectd-4.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">c_avl_node_t<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">search<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">c_avl_tree_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">t<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">void<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">key<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">c_avl_node_t<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">n<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">cmp<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">n<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <name><name pos:line="6" pos:column="13">t<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">root<pos:position pos:line="6" pos:column="20"/></name></name></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">n<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">!=<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition>
	<block pos:line="8" pos:column="9">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">cmp<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <call><name><name pos:line="9" pos:column="23">t<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">compare<pos:position pos:line="9" pos:column="33"/></name></name> <argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">key<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="40">n<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">key<pos:position pos:line="9" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">cmp<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">==<pos:position pos:line="10" pos:column="27"/></operator> <literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal></expr>)<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30">
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><operator pos:line="11" pos:column="32">(<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">n<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">)<pos:position pos:line="11" pos:column="35"/></operator></expr>;<pos:position pos:line="11" pos:column="36"/></return></block></then>
		<elseif pos:line="12" pos:column="17">else <if pos:line="12" pos:column="22">if <condition pos:line="12" pos:column="25">(<expr><name pos:line="12" pos:column="26">cmp<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">&lt;<pos:position pos:line="12" pos:column="34"/></operator> <literal type="number" pos:line="12" pos:column="32">0<pos:position pos:line="12" pos:column="33"/></literal></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">n<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">=<pos:position pos:line="13" pos:column="28"/></operator> <name><name pos:line="13" pos:column="29">n<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">left<pos:position pos:line="13" pos:column="36"/></name></name></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt></block></then></if></elseif>
		<else pos:line="14" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">n<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">=<pos:position pos:line="15" pos:column="28"/></operator> <name><name pos:line="15" pos:column="29">n<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">right<pos:position pos:line="15" pos:column="37"/></name></name></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt></block></else></if>
	}<pos:position pos:line="16" pos:column="10"/></block></while>

	<return pos:line="18" pos:column="9">return <expr><operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">NULL<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">)<pos:position pos:line="18" pos:column="22"/></operator></expr>;<pos:position pos:line="18" pos:column="23"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

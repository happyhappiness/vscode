<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_534_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ipc_read_shm<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list> <comment type="block" pos:line="1" pos:column="31">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">shm_info<pos:position pos:line="3" pos:column="18"/></name></name></type> <name pos:line="3" pos:column="19">shm_info<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">status<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <call><name pos:line="6" pos:column="12">shmctl<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<comment type="block" pos:line="6" pos:column="19">/* id = */</comment> <argument><expr><literal type="number" pos:line="6" pos:column="30">0<pos:position pos:line="6" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="33">SHM_INFO<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="43">(<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="44">void<pos:position pos:line="6" pos:column="48"/></name> <operator pos:line="6" pos:column="49">*<pos:position pos:line="6" pos:column="50"/></operator><operator pos:line="6" pos:column="50">)<pos:position pos:line="6" pos:column="51"/></operator><operator pos:line="6" pos:column="51">&amp;<pos:position pos:line="6" pos:column="56"/></operator><name pos:line="6" pos:column="52">shm_info<pos:position pos:line="6" pos:column="60"/></name></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="62"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">==<pos:position pos:line="7" pos:column="16"/></operator> <operator pos:line="7" pos:column="17">-<pos:position pos:line="7" pos:column="18"/></operator><literal type="number" pos:line="7" pos:column="18">1<pos:position pos:line="7" pos:column="19"/></literal></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20"> <block pos:line="7" pos:column="21">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">errbuf<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><literal type="number" pos:line="8" pos:column="17">1024<pos:position pos:line="8" pos:column="21"/></literal></expr>]<pos:position pos:line="8" pos:column="22"/></index></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ERROR<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="string" pos:line="9" pos:column="11">"ipc plugin: shmctl(2) failed: %s. "<pos:position pos:line="9" pos:column="47"/></literal>
          <literal type="string" pos:line="10" pos:column="11">"Maybe the kernel is not configured for shared memory?"<pos:position pos:line="10" pos:column="66"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="11" pos:column="11">sstrerror<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">errno<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">errbuf<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="36">sizeof<argument_list pos:line="11" pos:column="42">(<argument><expr><name pos:line="11" pos:column="43">errbuf<pos:position pos:line="11" pos:column="49"/></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">ipc_submit_g<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="string" pos:line="15" pos:column="16">"shm"<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"segments"<pos:position pos:line="15" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="35">NULL<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="41">shm_info<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">.<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">used_ids<pos:position pos:line="15" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">ipc_submit_g<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="string" pos:line="16" pos:column="16">"shm"<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="23">"bytes"<pos:position pos:line="16" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="32">"total"<pos:position pos:line="16" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="41">shm_info<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">.<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="50">shm_tot<pos:position pos:line="16" pos:column="57"/></name></name> <operator pos:line="16" pos:column="58">*<pos:position pos:line="16" pos:column="59"/></operator> <name pos:line="16" pos:column="60">pagesize_g<pos:position pos:line="16" pos:column="70"/></name></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">ipc_submit_g<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="string" pos:line="17" pos:column="16">"shm"<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="23">"bytes"<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="32">"rss"<pos:position pos:line="17" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="39">shm_info<pos:position pos:line="17" pos:column="47"/></name><operator pos:line="17" pos:column="47">.<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="48">shm_rss<pos:position pos:line="17" pos:column="55"/></name></name> <operator pos:line="17" pos:column="56">*<pos:position pos:line="17" pos:column="57"/></operator> <name pos:line="17" pos:column="58">pagesize_g<pos:position pos:line="17" pos:column="68"/></name></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">ipc_submit_g<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="string" pos:line="18" pos:column="16">"shm"<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"bytes"<pos:position pos:line="18" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="32">"swapped"<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="43">shm_info<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">.<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="52">shm_swp<pos:position pos:line="18" pos:column="59"/></name></name> <operator pos:line="18" pos:column="60">*<pos:position pos:line="18" pos:column="61"/></operator> <name pos:line="18" pos:column="62">pagesize_g<pos:position pos:line="18" pos:column="72"/></name></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="74"/></expr_stmt>
  <return pos:line="19" pos:column="3">return <expr><operator pos:line="19" pos:column="10">(<pos:position pos:line="19" pos:column="11"/></operator><literal type="number" pos:line="19" pos:column="11">0<pos:position pos:line="19" pos:column="12"/></literal><operator pos:line="19" pos:column="12">)<pos:position pos:line="19" pos:column="13"/></operator></expr>;<pos:position pos:line="19" pos:column="14"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1195_collectd-4.8.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_part_sign_sha256<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">sockent_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">se<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">void<pos:position pos:line="2" pos:column="9"/></name> <modifier pos:line="2" pos:column="10">*<pos:position pos:line="2" pos:column="11"/></modifier><modifier pos:line="2" pos:column="11">*<pos:position pos:line="2" pos:column="12"/></modifier></type><name pos:line="2" pos:column="12">ret_buffer<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="24">size_t<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">ret_buffer_len<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">int<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">flags<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">buffer<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">buffer_len<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">buffer_offset<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">username_len<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">secret<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">part_signature_sha256_t<pos:position pos:line="11" pos:column="26"/></name></type> <name pos:line="11" pos:column="27">pss<pos:position pos:line="11" pos:column="30"/></name></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">uint16_t<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">pss_head_length<pos:position pos:line="12" pos:column="27"/></name></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name></type> <name><name pos:line="13" pos:column="8">hash<pos:position pos:line="13" pos:column="12"/></name><index pos:line="13" pos:column="12">[<expr><sizeof pos:line="13" pos:column="13">sizeof <argument_list pos:line="13" pos:column="20">(<argument><expr><name><name pos:line="13" pos:column="21">pss<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">.<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">hash<pos:position pos:line="13" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></sizeof></expr>]<pos:position pos:line="13" pos:column="31"/></index></name></decl>;<pos:position pos:line="13" pos:column="32"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="15" pos:column="3">gcry_md_hd_t<pos:position pos:line="15" pos:column="15"/></name></type> <name pos:line="15" pos:column="16">hd<pos:position pos:line="15" pos:column="18"/></name></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">gcry_error_t<pos:position pos:line="16" pos:column="15"/></name></type> <name pos:line="16" pos:column="16">err<pos:position pos:line="16" pos:column="19"/></name></decl>;<pos:position pos:line="16" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">unsigned<pos:position pos:line="17" pos:column="11"/></name> <name pos:line="17" pos:column="12">char<pos:position pos:line="17" pos:column="16"/></name> <modifier pos:line="17" pos:column="17">*<pos:position pos:line="17" pos:column="18"/></modifier></type><name pos:line="17" pos:column="18">hash_ptr<pos:position pos:line="17" pos:column="26"/></name></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">buffer<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <operator pos:line="19" pos:column="12">*<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">ret_buffer<pos:position pos:line="19" pos:column="23"/></name></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">buffer_len<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <operator pos:line="20" pos:column="16">*<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">ret_buffer_len<pos:position pos:line="20" pos:column="31"/></name></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">buffer_offset<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <literal type="number" pos:line="21" pos:column="19">0<pos:position pos:line="21" pos:column="20"/></literal></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name><name pos:line="23" pos:column="7">se<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">data<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">.<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">server<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">.<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">userdb<pos:position pos:line="23" pos:column="29"/></name></name> <operator pos:line="23" pos:column="30">==<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="33">NULL<pos:position pos:line="23" pos:column="37"/></name></expr>)<pos:position pos:line="23" pos:column="38"/></condition><then pos:line="23" pos:column="38">
  <block pos:line="24" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">NOTICE<pos:position pos:line="25" pos:column="11"/></name> <argument_list pos:line="25" pos:column="12">(<argument><expr><literal type="string" pos:line="25" pos:column="13">"network plugin: Received signed network packet but can't verify "<pos:position pos:line="25" pos:column="79"/></literal>
        <literal type="string" pos:line="26" pos:column="9">"it because no user DB has been configured. Will accept it."<pos:position pos:line="26" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><literal type="number" pos:line="27" pos:column="13">0<pos:position pos:line="27" pos:column="14"/></literal><operator pos:line="27" pos:column="14">)<pos:position pos:line="27" pos:column="15"/></operator></expr>;<pos:position pos:line="27" pos:column="16"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/* Check if the buffer has enough data for this structure. */</comment>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">buffer_len<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">&lt;=<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="21">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="31" pos:column="47"/></name></expr>)<pos:position pos:line="31" pos:column="48"/></condition><then pos:line="31" pos:column="48">
    <block type="pseudo"><return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><operator pos:line="32" pos:column="13">-<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">ENOMEM<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">)<pos:position pos:line="32" pos:column="21"/></operator></expr>;<pos:position pos:line="32" pos:column="22"/></return></block></then></if>

  <comment type="block" pos:line="34" pos:column="3">/* Read type and length header */</comment>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">BUFFER_READ<pos:position pos:line="35" pos:column="14"/></name> <argument_list pos:line="35" pos:column="15">(<argument><expr><operator pos:line="35" pos:column="16">&amp;<pos:position pos:line="35" pos:column="21"/></operator><name><name pos:line="35" pos:column="17">pss<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">.<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="21">head<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">.<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="26">type<pos:position pos:line="35" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="32">sizeof <argument_list pos:line="35" pos:column="39">(<argument><expr><name><name pos:line="35" pos:column="40">pss<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">.<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="44">head<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">.<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="49">type<pos:position pos:line="35" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">BUFFER_READ<pos:position pos:line="36" pos:column="14"/></name> <argument_list pos:line="36" pos:column="15">(<argument><expr><operator pos:line="36" pos:column="16">&amp;<pos:position pos:line="36" pos:column="21"/></operator><name><name pos:line="36" pos:column="17">pss<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">.<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">head<pos:position pos:line="36" pos:column="25"/></name><operator pos:line="36" pos:column="25">.<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="26">length<pos:position pos:line="36" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="34">sizeof <argument_list pos:line="36" pos:column="41">(<argument><expr><name><name pos:line="36" pos:column="42">pss<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">.<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="46">head<pos:position pos:line="36" pos:column="50"/></name><operator pos:line="36" pos:column="50">.<pos:position pos:line="36" pos:column="51"/></operator><name pos:line="36" pos:column="51">length<pos:position pos:line="36" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><name pos:line="37" pos:column="3">pss_head_length<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <call><name pos:line="37" pos:column="21">ntohs<pos:position pos:line="37" pos:column="26"/></name> <argument_list pos:line="37" pos:column="27">(<argument><expr><name><name pos:line="37" pos:column="28">pss<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">.<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="32">head<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">.<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="37">length<pos:position pos:line="37" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>

  <comment type="block" pos:line="39" pos:column="3">/* Check if the `pss_head_length' is within bounds. */</comment>
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><operator pos:line="40" pos:column="7">(<pos:position pos:line="40" pos:column="8"/></operator><name pos:line="40" pos:column="8">pss_head_length<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">&lt;=<pos:position pos:line="40" pos:column="29"/></operator> <name pos:line="40" pos:column="27">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="40" pos:column="53"/></name><operator pos:line="40" pos:column="53">)<pos:position pos:line="40" pos:column="54"/></operator>
      <operator pos:line="41" pos:column="7">||<pos:position pos:line="41" pos:column="9"/></operator> <operator pos:line="41" pos:column="10">(<pos:position pos:line="41" pos:column="11"/></operator><name pos:line="41" pos:column="11">pss_head_length<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">&gt;<pos:position pos:line="41" pos:column="31"/></operator> <name pos:line="41" pos:column="29">buffer_len<pos:position pos:line="41" pos:column="39"/></name><operator pos:line="41" pos:column="39">)<pos:position pos:line="41" pos:column="40"/></operator></expr>)<pos:position pos:line="41" pos:column="41"/></condition><then pos:line="41" pos:column="41">
  <block pos:line="42" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">ERROR<pos:position pos:line="43" pos:column="10"/></name> <argument_list pos:line="43" pos:column="11">(<argument><expr><literal type="string" pos:line="43" pos:column="12">"network plugin: HMAC-SHA-256 with invalid length received."<pos:position pos:line="43" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="74"/></expr_stmt>
    <return pos:line="44" pos:column="5">return <expr><operator pos:line="44" pos:column="12">(<pos:position pos:line="44" pos:column="13"/></operator><operator pos:line="44" pos:column="13">-<pos:position pos:line="44" pos:column="14"/></operator><literal type="number" pos:line="44" pos:column="14">1<pos:position pos:line="44" pos:column="15"/></literal><operator pos:line="44" pos:column="15">)<pos:position pos:line="44" pos:column="16"/></operator></expr>;<pos:position pos:line="44" pos:column="17"/></return>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="47" pos:column="3">/* Copy the hash. */</comment>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">BUFFER_READ<pos:position pos:line="48" pos:column="14"/></name> <argument_list pos:line="48" pos:column="15">(<argument><expr><name><name pos:line="48" pos:column="16">pss<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">hash<pos:position pos:line="48" pos:column="24"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="26">sizeof <argument_list pos:line="48" pos:column="33">(<argument><expr><name><name pos:line="48" pos:column="34">pss<pos:position pos:line="48" pos:column="37"/></name><operator pos:line="48" pos:column="37">.<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="38">hash<pos:position pos:line="48" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>

  <comment type="block" pos:line="50" pos:column="3">/* Calculate username length (without null byte) and allocate memory */</comment>
  <expr_stmt><expr><name pos:line="51" pos:column="3">username_len<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <name pos:line="51" pos:column="18">pss_head_length<pos:position pos:line="51" pos:column="33"/></name> <operator pos:line="51" pos:column="34">-<pos:position pos:line="51" pos:column="35"/></operator> <name pos:line="51" pos:column="36">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="51" pos:column="62"/></name></expr>;<pos:position pos:line="51" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="52" pos:column="3">pss<pos:position pos:line="52" pos:column="6"/></name><operator pos:line="52" pos:column="6">.<pos:position pos:line="52" pos:column="7"/></operator><name pos:line="52" pos:column="7">username<pos:position pos:line="52" pos:column="15"/></name></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <call><name pos:line="52" pos:column="18">malloc<pos:position pos:line="52" pos:column="24"/></name> <argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">username_len<pos:position pos:line="52" pos:column="38"/></name> <operator pos:line="52" pos:column="39">+<pos:position pos:line="52" pos:column="40"/></operator> <literal type="number" pos:line="52" pos:column="41">1<pos:position pos:line="52" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="44"/></expr_stmt>
  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><name><name pos:line="53" pos:column="7">pss<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">.<pos:position pos:line="53" pos:column="11"/></operator><name pos:line="53" pos:column="11">username<pos:position pos:line="53" pos:column="19"/></name></name> <operator pos:line="53" pos:column="20">==<pos:position pos:line="53" pos:column="22"/></operator> <name pos:line="53" pos:column="23">NULL<pos:position pos:line="53" pos:column="27"/></name></expr>)<pos:position pos:line="53" pos:column="28"/></condition><then pos:line="53" pos:column="28">
    <block type="pseudo"><return pos:line="54" pos:column="5">return <expr><operator pos:line="54" pos:column="12">(<pos:position pos:line="54" pos:column="13"/></operator><operator pos:line="54" pos:column="13">-<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="14">ENOMEM<pos:position pos:line="54" pos:column="20"/></name><operator pos:line="54" pos:column="20">)<pos:position pos:line="54" pos:column="21"/></operator></expr>;<pos:position pos:line="54" pos:column="22"/></return></block></then></if>

  <comment type="block" pos:line="56" pos:column="3">/* Read the username */</comment>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">BUFFER_READ<pos:position pos:line="57" pos:column="14"/></name> <argument_list pos:line="57" pos:column="15">(<argument><expr><name><name pos:line="57" pos:column="16">pss<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">.<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="20">username<pos:position pos:line="57" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="30">username_len<pos:position pos:line="57" pos:column="42"/></name></expr></argument>)<pos:position pos:line="57" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="58" pos:column="3">pss<pos:position pos:line="58" pos:column="6"/></name><operator pos:line="58" pos:column="6">.<pos:position pos:line="58" pos:column="7"/></operator><name pos:line="58" pos:column="7">username<pos:position pos:line="58" pos:column="15"/></name><index pos:line="58" pos:column="15">[<expr><name pos:line="58" pos:column="16">username_len<pos:position pos:line="58" pos:column="28"/></name></expr>]<pos:position pos:line="58" pos:column="29"/></index></name> <operator pos:line="58" pos:column="30">=<pos:position pos:line="58" pos:column="31"/></operator> <literal type="number" pos:line="58" pos:column="32">0<pos:position pos:line="58" pos:column="33"/></literal></expr>;<pos:position pos:line="58" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="60" pos:column="3">assert<pos:position pos:line="60" pos:column="9"/></name> <argument_list pos:line="60" pos:column="10">(<argument><expr><name pos:line="60" pos:column="11">buffer_offset<pos:position pos:line="60" pos:column="24"/></name> <operator pos:line="60" pos:column="25">==<pos:position pos:line="60" pos:column="27"/></operator> <name pos:line="60" pos:column="28">pss_head_length<pos:position pos:line="60" pos:column="43"/></name></expr></argument>)<pos:position pos:line="60" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="45"/></expr_stmt>

  <comment type="block" pos:line="62" pos:column="3">/* Query the password */</comment>
  <expr_stmt><expr><name pos:line="63" pos:column="3">secret<pos:position pos:line="63" pos:column="9"/></name> <operator pos:line="63" pos:column="10">=<pos:position pos:line="63" pos:column="11"/></operator> <call><name pos:line="63" pos:column="12">fbh_get<pos:position pos:line="63" pos:column="19"/></name> <argument_list pos:line="63" pos:column="20">(<argument><expr><name><name pos:line="63" pos:column="21">se<pos:position pos:line="63" pos:column="23"/></name><operator pos:line="63" pos:column="23">-&gt;<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="25">data<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">.<pos:position pos:line="63" pos:column="30"/></operator><name pos:line="63" pos:column="30">server<pos:position pos:line="63" pos:column="36"/></name><operator pos:line="63" pos:column="36">.<pos:position pos:line="63" pos:column="37"/></operator><name pos:line="63" pos:column="37">userdb<pos:position pos:line="63" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="45">pss<pos:position pos:line="63" pos:column="48"/></name><operator pos:line="63" pos:column="48">.<pos:position pos:line="63" pos:column="49"/></operator><name pos:line="63" pos:column="49">username<pos:position pos:line="63" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="59"/></expr_stmt>
  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><name pos:line="64" pos:column="7">secret<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">==<pos:position pos:line="64" pos:column="16"/></operator> <name pos:line="64" pos:column="17">NULL<pos:position pos:line="64" pos:column="21"/></name></expr>)<pos:position pos:line="64" pos:column="22"/></condition><then pos:line="64" pos:column="22">
  <block pos:line="65" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">ERROR<pos:position pos:line="66" pos:column="10"/></name> <argument_list pos:line="66" pos:column="11">(<argument><expr><literal type="string" pos:line="66" pos:column="12">"network plugin: Unknown user: %s"<pos:position pos:line="66" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="48">pss<pos:position pos:line="66" pos:column="51"/></name><operator pos:line="66" pos:column="51">.<pos:position pos:line="66" pos:column="52"/></operator><name pos:line="66" pos:column="52">username<pos:position pos:line="66" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">sfree<pos:position pos:line="67" pos:column="10"/></name> <argument_list pos:line="67" pos:column="11">(<argument><expr><name><name pos:line="67" pos:column="12">pss<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">.<pos:position pos:line="67" pos:column="16"/></operator><name pos:line="67" pos:column="16">username<pos:position pos:line="67" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="26"/></expr_stmt>
    <return pos:line="68" pos:column="5">return <expr><operator pos:line="68" pos:column="12">(<pos:position pos:line="68" pos:column="13"/></operator><operator pos:line="68" pos:column="13">-<pos:position pos:line="68" pos:column="14"/></operator><name pos:line="68" pos:column="14">ENOENT<pos:position pos:line="68" pos:column="20"/></name><operator pos:line="68" pos:column="20">)<pos:position pos:line="68" pos:column="21"/></operator></expr>;<pos:position pos:line="68" pos:column="22"/></return>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="71" pos:column="3">/* Create a hash device and check the HMAC */</comment>
  <expr_stmt><expr><name pos:line="72" pos:column="3">hd<pos:position pos:line="72" pos:column="5"/></name> <operator pos:line="72" pos:column="6">=<pos:position pos:line="72" pos:column="7"/></operator> <name pos:line="72" pos:column="8">NULL<pos:position pos:line="72" pos:column="12"/></name></expr>;<pos:position pos:line="72" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="73" pos:column="3">err<pos:position pos:line="73" pos:column="6"/></name> <operator pos:line="73" pos:column="7">=<pos:position pos:line="73" pos:column="8"/></operator> <call><name pos:line="73" pos:column="9">gcry_md_open<pos:position pos:line="73" pos:column="21"/></name> <argument_list pos:line="73" pos:column="22">(<argument><expr><operator pos:line="73" pos:column="23">&amp;<pos:position pos:line="73" pos:column="28"/></operator><name pos:line="73" pos:column="24">hd<pos:position pos:line="73" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="28">GCRY_MD_SHA256<pos:position pos:line="73" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="44">GCRY_MD_FLAG_HMAC<pos:position pos:line="73" pos:column="61"/></name></expr></argument>)<pos:position pos:line="73" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="63"/></expr_stmt>
  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><name pos:line="74" pos:column="7">err<pos:position pos:line="74" pos:column="10"/></name> <operator pos:line="74" pos:column="11">!=<pos:position pos:line="74" pos:column="13"/></operator> <literal type="number" pos:line="74" pos:column="14">0<pos:position pos:line="74" pos:column="15"/></literal></expr>)<pos:position pos:line="74" pos:column="16"/></condition><then pos:line="74" pos:column="16">
  <block pos:line="75" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">ERROR<pos:position pos:line="76" pos:column="10"/></name> <argument_list pos:line="76" pos:column="11">(<argument><expr><literal type="string" pos:line="76" pos:column="12">"network plugin: Creating HMAC-SHA-256 object failed: %s"<pos:position pos:line="76" pos:column="69"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="77" pos:column="9">gcry_strerror<pos:position pos:line="77" pos:column="22"/></name> <argument_list pos:line="77" pos:column="23">(<argument><expr><name pos:line="77" pos:column="24">err<pos:position pos:line="77" pos:column="27"/></name></expr></argument>)<pos:position pos:line="77" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">sfree<pos:position pos:line="78" pos:column="10"/></name> <argument_list pos:line="78" pos:column="11">(<argument><expr><name pos:line="78" pos:column="12">secret<pos:position pos:line="78" pos:column="18"/></name></expr></argument>)<pos:position pos:line="78" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">sfree<pos:position pos:line="79" pos:column="10"/></name> <argument_list pos:line="79" pos:column="11">(<argument><expr><name><name pos:line="79" pos:column="12">pss<pos:position pos:line="79" pos:column="15"/></name><operator pos:line="79" pos:column="15">.<pos:position pos:line="79" pos:column="16"/></operator><name pos:line="79" pos:column="16">username<pos:position pos:line="79" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="26"/></expr_stmt>
    <return pos:line="80" pos:column="5">return <expr><operator pos:line="80" pos:column="12">(<pos:position pos:line="80" pos:column="13"/></operator><operator pos:line="80" pos:column="13">-<pos:position pos:line="80" pos:column="14"/></operator><literal type="number" pos:line="80" pos:column="14">1<pos:position pos:line="80" pos:column="15"/></literal><operator pos:line="80" pos:column="15">)<pos:position pos:line="80" pos:column="16"/></operator></expr>;<pos:position pos:line="80" pos:column="17"/></return>
  }<pos:position pos:line="81" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="83" pos:column="3">err<pos:position pos:line="83" pos:column="6"/></name> <operator pos:line="83" pos:column="7">=<pos:position pos:line="83" pos:column="8"/></operator> <call><name pos:line="83" pos:column="9">gcry_md_setkey<pos:position pos:line="83" pos:column="23"/></name> <argument_list pos:line="83" pos:column="24">(<argument><expr><name pos:line="83" pos:column="25">hd<pos:position pos:line="83" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="29">secret<pos:position pos:line="83" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="83" pos:column="37">strlen<pos:position pos:line="83" pos:column="43"/></name> <argument_list pos:line="83" pos:column="44">(<argument><expr><name pos:line="83" pos:column="45">secret<pos:position pos:line="83" pos:column="51"/></name></expr></argument>)<pos:position pos:line="83" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="54"/></expr_stmt>
  <if pos:line="84" pos:column="3">if <condition pos:line="84" pos:column="6">(<expr><name pos:line="84" pos:column="7">err<pos:position pos:line="84" pos:column="10"/></name> <operator pos:line="84" pos:column="11">!=<pos:position pos:line="84" pos:column="13"/></operator> <literal type="number" pos:line="84" pos:column="14">0<pos:position pos:line="84" pos:column="15"/></literal></expr>)<pos:position pos:line="84" pos:column="16"/></condition><then pos:line="84" pos:column="16">
  <block pos:line="85" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">ERROR<pos:position pos:line="86" pos:column="10"/></name> <argument_list pos:line="86" pos:column="11">(<argument><expr><literal type="string" pos:line="86" pos:column="12">"network plugin: gcry_md_setkey failed: %s"<pos:position pos:line="86" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="57">gcry_strerror<pos:position pos:line="86" pos:column="70"/></name> <argument_list pos:line="86" pos:column="71">(<argument><expr><name pos:line="86" pos:column="72">err<pos:position pos:line="86" pos:column="75"/></name></expr></argument>)<pos:position pos:line="86" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">gcry_md_close<pos:position pos:line="87" pos:column="18"/></name> <argument_list pos:line="87" pos:column="19">(<argument><expr><name pos:line="87" pos:column="20">hd<pos:position pos:line="87" pos:column="22"/></name></expr></argument>)<pos:position pos:line="87" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="24"/></expr_stmt>
    <return pos:line="88" pos:column="5">return <expr><operator pos:line="88" pos:column="12">(<pos:position pos:line="88" pos:column="13"/></operator><operator pos:line="88" pos:column="13">-<pos:position pos:line="88" pos:column="14"/></operator><literal type="number" pos:line="88" pos:column="14">1<pos:position pos:line="88" pos:column="15"/></literal><operator pos:line="88" pos:column="15">)<pos:position pos:line="88" pos:column="16"/></operator></expr>;<pos:position pos:line="88" pos:column="17"/></return>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="91" pos:column="3">gcry_md_write<pos:position pos:line="91" pos:column="16"/></name> <argument_list pos:line="91" pos:column="17">(<argument><expr><name pos:line="91" pos:column="18">hd<pos:position pos:line="91" pos:column="20"/></name></expr></argument>,
      <argument><expr><name pos:line="92" pos:column="7">buffer<pos:position pos:line="92" pos:column="13"/></name>     <operator pos:line="92" pos:column="18">+<pos:position pos:line="92" pos:column="19"/></operator> <name pos:line="92" pos:column="20">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="92" pos:column="46"/></name></expr></argument>,
      <argument><expr><name pos:line="93" pos:column="7">buffer_len<pos:position pos:line="93" pos:column="17"/></name> <operator pos:line="93" pos:column="18">-<pos:position pos:line="93" pos:column="19"/></operator> <name pos:line="93" pos:column="20">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="93" pos:column="46"/></name></expr></argument>)<pos:position pos:line="93" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name pos:line="94" pos:column="3">hash_ptr<pos:position pos:line="94" pos:column="11"/></name> <operator pos:line="94" pos:column="12">=<pos:position pos:line="94" pos:column="13"/></operator> <call><name pos:line="94" pos:column="14">gcry_md_read<pos:position pos:line="94" pos:column="26"/></name> <argument_list pos:line="94" pos:column="27">(<argument><expr><name pos:line="94" pos:column="28">hd<pos:position pos:line="94" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="32">GCRY_MD_SHA256<pos:position pos:line="94" pos:column="46"/></name></expr></argument>)<pos:position pos:line="94" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="48"/></expr_stmt>
  <if pos:line="95" pos:column="3">if <condition pos:line="95" pos:column="6">(<expr><name pos:line="95" pos:column="7">hash_ptr<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">==<pos:position pos:line="95" pos:column="18"/></operator> <name pos:line="95" pos:column="19">NULL<pos:position pos:line="95" pos:column="23"/></name></expr>)<pos:position pos:line="95" pos:column="24"/></condition><then pos:line="95" pos:column="24">
  <block pos:line="96" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">ERROR<pos:position pos:line="97" pos:column="10"/></name> <argument_list pos:line="97" pos:column="11">(<argument><expr><literal type="string" pos:line="97" pos:column="12">"network plugin: gcry_md_read failed."<pos:position pos:line="97" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">gcry_md_close<pos:position pos:line="98" pos:column="18"/></name> <argument_list pos:line="98" pos:column="19">(<argument><expr><name pos:line="98" pos:column="20">hd<pos:position pos:line="98" pos:column="22"/></name></expr></argument>)<pos:position pos:line="98" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">sfree<pos:position pos:line="99" pos:column="10"/></name> <argument_list pos:line="99" pos:column="11">(<argument><expr><name pos:line="99" pos:column="12">secret<pos:position pos:line="99" pos:column="18"/></name></expr></argument>)<pos:position pos:line="99" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="100" pos:column="5">sfree<pos:position pos:line="100" pos:column="10"/></name> <argument_list pos:line="100" pos:column="11">(<argument><expr><name><name pos:line="100" pos:column="12">pss<pos:position pos:line="100" pos:column="15"/></name><operator pos:line="100" pos:column="15">.<pos:position pos:line="100" pos:column="16"/></operator><name pos:line="100" pos:column="16">username<pos:position pos:line="100" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="26"/></expr_stmt>
    <return pos:line="101" pos:column="5">return <expr><operator pos:line="101" pos:column="12">(<pos:position pos:line="101" pos:column="13"/></operator><operator pos:line="101" pos:column="13">-<pos:position pos:line="101" pos:column="14"/></operator><literal type="number" pos:line="101" pos:column="14">1<pos:position pos:line="101" pos:column="15"/></literal><operator pos:line="101" pos:column="15">)<pos:position pos:line="101" pos:column="16"/></operator></expr>;<pos:position pos:line="101" pos:column="17"/></return>
  }<pos:position pos:line="102" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="103" pos:column="3">memcpy<pos:position pos:line="103" pos:column="9"/></name> <argument_list pos:line="103" pos:column="10">(<argument><expr><name pos:line="103" pos:column="11">hash<pos:position pos:line="103" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="17">hash_ptr<pos:position pos:line="103" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="103" pos:column="27">sizeof <argument_list pos:line="103" pos:column="34">(<argument><expr><name pos:line="103" pos:column="35">hash<pos:position pos:line="103" pos:column="39"/></name></expr></argument>)<pos:position pos:line="103" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="103" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="42"/></expr_stmt>

  <comment type="block" pos:line="105" pos:column="3">/* Clean up */</comment>
  <expr_stmt><expr><call><name pos:line="106" pos:column="3">gcry_md_close<pos:position pos:line="106" pos:column="16"/></name> <argument_list pos:line="106" pos:column="17">(<argument><expr><name pos:line="106" pos:column="18">hd<pos:position pos:line="106" pos:column="20"/></name></expr></argument>)<pos:position pos:line="106" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="107" pos:column="3">hd<pos:position pos:line="107" pos:column="5"/></name> <operator pos:line="107" pos:column="6">=<pos:position pos:line="107" pos:column="7"/></operator> <name pos:line="107" pos:column="8">NULL<pos:position pos:line="107" pos:column="12"/></name></expr>;<pos:position pos:line="107" pos:column="13"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="109" pos:column="3">sfree<pos:position pos:line="109" pos:column="8"/></name> <argument_list pos:line="109" pos:column="9">(<argument><expr><name pos:line="109" pos:column="10">secret<pos:position pos:line="109" pos:column="16"/></name></expr></argument>)<pos:position pos:line="109" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="110" pos:column="3">sfree<pos:position pos:line="110" pos:column="8"/></name> <argument_list pos:line="110" pos:column="9">(<argument><expr><name><name pos:line="110" pos:column="10">pss<pos:position pos:line="110" pos:column="13"/></name><operator pos:line="110" pos:column="13">.<pos:position pos:line="110" pos:column="14"/></operator><name pos:line="110" pos:column="14">username<pos:position pos:line="110" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="24"/></expr_stmt>

  <if pos:line="112" pos:column="3">if <condition pos:line="112" pos:column="6">(<expr><call><name pos:line="112" pos:column="7">memcmp<pos:position pos:line="112" pos:column="13"/></name> <argument_list pos:line="112" pos:column="14">(<argument><expr><name><name pos:line="112" pos:column="15">pss<pos:position pos:line="112" pos:column="18"/></name><operator pos:line="112" pos:column="18">.<pos:position pos:line="112" pos:column="19"/></operator><name pos:line="112" pos:column="19">hash<pos:position pos:line="112" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="25">hash<pos:position pos:line="112" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="112" pos:column="31">sizeof <argument_list pos:line="112" pos:column="38">(<argument><expr><name><name pos:line="112" pos:column="39">pss<pos:position pos:line="112" pos:column="42"/></name><operator pos:line="112" pos:column="42">.<pos:position pos:line="112" pos:column="43"/></operator><name pos:line="112" pos:column="43">hash<pos:position pos:line="112" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="112" pos:column="49"/></argument_list></call> <operator pos:line="112" pos:column="50">!=<pos:position pos:line="112" pos:column="52"/></operator> <literal type="number" pos:line="112" pos:column="53">0<pos:position pos:line="112" pos:column="54"/></literal></expr>)<pos:position pos:line="112" pos:column="55"/></condition><then pos:line="112" pos:column="55">
  <block pos:line="113" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="114" pos:column="5">WARNING<pos:position pos:line="114" pos:column="12"/></name> <argument_list pos:line="114" pos:column="13">(<argument><expr><literal type="string" pos:line="114" pos:column="14">"network plugin: Verifying HMAC-SHA-256 signature failed: "<pos:position pos:line="114" pos:column="73"/></literal>
        <literal type="string" pos:line="115" pos:column="9">"Hash mismatch."<pos:position pos:line="115" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="116" pos:column="4"/></block></then>
  <else pos:line="117" pos:column="3">else
  <block pos:line="118" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="119" pos:column="5">parse_packet<pos:position pos:line="119" pos:column="17"/></name> <argument_list pos:line="119" pos:column="18">(<argument><expr><name pos:line="119" pos:column="19">se<pos:position pos:line="119" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="23">buffer<pos:position pos:line="119" pos:column="29"/></name> <operator pos:line="119" pos:column="30">+<pos:position pos:line="119" pos:column="31"/></operator> <name pos:line="119" pos:column="32">buffer_offset<pos:position pos:line="119" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="47">buffer_len<pos:position pos:line="119" pos:column="57"/></name> <operator pos:line="119" pos:column="58">-<pos:position pos:line="119" pos:column="59"/></operator> <name pos:line="119" pos:column="60">buffer_offset<pos:position pos:line="119" pos:column="73"/></name></expr></argument>,
        <argument><expr><name pos:line="120" pos:column="9">flags<pos:position pos:line="120" pos:column="14"/></name> <operator pos:line="120" pos:column="15">|<pos:position pos:line="120" pos:column="16"/></operator> <name pos:line="120" pos:column="17">PP_SIGNED<pos:position pos:line="120" pos:column="26"/></name></expr></argument>)<pos:position pos:line="120" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="121" pos:column="4"/></block></else></if>

  <expr_stmt><expr><operator pos:line="123" pos:column="3">*<pos:position pos:line="123" pos:column="4"/></operator><name pos:line="123" pos:column="4">ret_buffer<pos:position pos:line="123" pos:column="14"/></name> <operator pos:line="123" pos:column="15">=<pos:position pos:line="123" pos:column="16"/></operator> <name pos:line="123" pos:column="17">buffer<pos:position pos:line="123" pos:column="23"/></name> <operator pos:line="123" pos:column="24">+<pos:position pos:line="123" pos:column="25"/></operator> <name pos:line="123" pos:column="26">buffer_len<pos:position pos:line="123" pos:column="36"/></name></expr>;<pos:position pos:line="123" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="124" pos:column="3">*<pos:position pos:line="124" pos:column="4"/></operator><name pos:line="124" pos:column="4">ret_buffer_len<pos:position pos:line="124" pos:column="18"/></name> <operator pos:line="124" pos:column="19">=<pos:position pos:line="124" pos:column="20"/></operator> <literal type="number" pos:line="124" pos:column="21">0<pos:position pos:line="124" pos:column="22"/></literal></expr>;<pos:position pos:line="124" pos:column="23"/></expr_stmt>

  <return pos:line="126" pos:column="3">return <expr><operator pos:line="126" pos:column="10">(<pos:position pos:line="126" pos:column="11"/></operator><literal type="number" pos:line="126" pos:column="11">0<pos:position pos:line="126" pos:column="12"/></literal><operator pos:line="126" pos:column="12">)<pos:position pos:line="126" pos:column="13"/></operator></expr>;<pos:position pos:line="126" pos:column="14"/></return>
}<pos:position pos:line="127" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_274_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">thermal_submit<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">plugin_instance<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="57">enum<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">dev_type<pos:position pos:line="1" pos:column="70"/></name></name></type> <name pos:line="1" pos:column="71">dt<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">value_t<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">value<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list> <block pos:line="2" pos:column="43">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_list_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">vl<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="5" pos:column="3">vl<pos:position pos:line="5" pos:column="5"/></name><operator pos:line="5" pos:column="5">.<pos:position pos:line="5" pos:column="6"/></operator><name pos:line="5" pos:column="6">values<pos:position pos:line="5" pos:column="12"/></name></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <operator pos:line="5" pos:column="15">&amp;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="16">value<pos:position pos:line="5" pos:column="21"/></name></expr>;<pos:position pos:line="5" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="6" pos:column="3">vl<pos:position pos:line="6" pos:column="5"/></name><operator pos:line="6" pos:column="5">.<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">values_len<pos:position pos:line="6" pos:column="16"/></name></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <literal type="number" pos:line="6" pos:column="19">1<pos:position pos:line="6" pos:column="20"/></literal></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">sstrncpy<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name><name pos:line="8" pos:column="12">vl<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">plugin<pos:position pos:line="8" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"thermal"<pos:position pos:line="8" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="34">sizeof<argument_list pos:line="8" pos:column="40">(<argument><expr><name><name pos:line="8" pos:column="41">vl<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">.<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">plugin<pos:position pos:line="8" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">plugin_instance<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">!=<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">NULL<pos:position pos:line="9" pos:column="30"/></name></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="5">sstrncpy<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name><name pos:line="10" pos:column="14">vl<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">.<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">plugin_instance<pos:position pos:line="10" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">plugin_instance<pos:position pos:line="10" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="51">sizeof<argument_list pos:line="10" pos:column="57">(<argument><expr><name><name pos:line="10" pos:column="58">vl<pos:position pos:line="10" pos:column="60"/></name><operator pos:line="10" pos:column="60">.<pos:position pos:line="10" pos:column="61"/></operator><name pos:line="10" pos:column="61">plugin_instance<pos:position pos:line="10" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="79"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">sstrncpy<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name><name pos:line="11" pos:column="12">vl<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">.<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">type<pos:position pos:line="11" pos:column="19"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="11" pos:column="21">(<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">dt<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">==<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="28">TEMP<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">)<pos:position pos:line="11" pos:column="33"/></operator></expr> ?<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35"> <expr><literal type="string" pos:line="11" pos:column="36">"temperature"<pos:position pos:line="11" pos:column="49"/></literal></expr> <pos:position pos:line="11" pos:column="50"/></then><else pos:line="11" pos:column="50">: <expr><literal type="string" pos:line="11" pos:column="52">"gauge"<pos:position pos:line="11" pos:column="59"/></literal></expr></else></ternary></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="61">sizeof<argument_list pos:line="11" pos:column="67">(<argument><expr><name><name pos:line="11" pos:column="68">vl<pos:position pos:line="11" pos:column="70"/></name><operator pos:line="11" pos:column="70">.<pos:position pos:line="11" pos:column="71"/></operator><name pos:line="11" pos:column="71">type<pos:position pos:line="11" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="78"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">plugin_dispatch_values<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><operator pos:line="13" pos:column="26">&amp;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="27">vl<pos:position pos:line="13" pos:column="29"/></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

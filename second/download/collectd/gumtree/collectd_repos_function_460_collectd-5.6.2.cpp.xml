<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_460_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_dispatch_table<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">host_definition_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">host<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="2" pos:column="33">data_definition_t<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">data<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="3" pos:column="33">csnmp_list_instances_t<pos:position pos:line="3" pos:column="55"/></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">instance_list<pos:position pos:line="3" pos:column="70"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="4" pos:column="33">csnmp_table_values_t<pos:position pos:line="4" pos:column="53"/></name> <modifier pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></modifier><modifier pos:line="4" pos:column="55">*<pos:position pos:line="4" pos:column="56"/></modifier></type><name pos:line="4" pos:column="56">value_table<pos:position pos:line="4" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="68"/></parameter_list> <block pos:line="4" pos:column="69">{
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">data_set_t<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">ds<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">value_list_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">vl<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="6" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">csnmp_list_instances_t<pos:position pos:line="8" pos:column="25"/></name> <modifier pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></modifier></type><name pos:line="8" pos:column="27">instance_list_ptr<pos:position pos:line="8" pos:column="44"/></name></decl>;<pos:position pos:line="8" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">csnmp_table_values_t<pos:position pos:line="9" pos:column="23"/></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier><modifier pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></modifier></type><name pos:line="9" pos:column="26">value_table_ptr<pos:position pos:line="9" pos:column="41"/></name></decl>;<pos:position pos:line="9" pos:column="42"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">i<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">_Bool<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">have_more<pos:position pos:line="12" pos:column="18"/></name></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">oid_t<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">current_suffix<pos:position pos:line="13" pos:column="23"/></name></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">ds<pos:position pos:line="15" pos:column="5"/></name> <operator pos:line="15" pos:column="6">=<pos:position pos:line="15" pos:column="7"/></operator> <call><name pos:line="15" pos:column="8">plugin_get_ds<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name><name pos:line="15" pos:column="22">data<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">type<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">!<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">ds<pos:position pos:line="16" pos:column="10"/></name></expr>)<pos:position pos:line="16" pos:column="11"/></condition><then pos:line="16" pos:column="11"> <block pos:line="16" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ERROR<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><literal type="string" pos:line="17" pos:column="11">"snmp plugin: DataSet `%s' not defined."<pos:position pos:line="17" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="53">data<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">-&gt;<pos:position pos:line="17" pos:column="62"/></operator><name pos:line="17" pos:column="59">type<pos:position pos:line="17" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="65"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><operator pos:line="18" pos:column="13">-<pos:position pos:line="18" pos:column="14"/></operator><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal><operator pos:line="18" pos:column="15">)<pos:position pos:line="18" pos:column="16"/></operator></expr>;<pos:position pos:line="18" pos:column="17"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">assert<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><name><name pos:line="20" pos:column="10">ds<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">ds_num<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">==<pos:position pos:line="20" pos:column="23"/></operator> <name><name pos:line="20" pos:column="24">data<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">values_len<pos:position pos:line="20" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">assert<pos:position pos:line="21" pos:column="9"/></name><argument_list pos:line="21" pos:column="9">(<argument><expr><name><name pos:line="21" pos:column="10">data<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">values_len<pos:position pos:line="21" pos:column="26"/></name></name> <operator pos:line="21" pos:column="27">&gt;<pos:position pos:line="21" pos:column="31"/></operator> <literal type="number" pos:line="21" pos:column="29">0<pos:position pos:line="21" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name pos:line="23" pos:column="3">instance_list_ptr<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">instance_list<pos:position pos:line="23" pos:column="36"/></name></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><name pos:line="25" pos:column="3">value_table_ptr<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <call><name pos:line="25" pos:column="21">calloc<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name><name pos:line="25" pos:column="28">data<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">values_len<pos:position pos:line="25" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="46">sizeof<argument_list pos:line="25" pos:column="52">(<argument><expr><operator pos:line="25" pos:column="53">*<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="54">value_table_ptr<pos:position pos:line="25" pos:column="69"/></name></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="72"/></expr_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">value_table_ptr<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">==<pos:position pos:line="26" pos:column="25"/></operator> <name pos:line="26" pos:column="26">NULL<pos:position pos:line="26" pos:column="30"/></name></expr>)<pos:position pos:line="26" pos:column="31"/></condition><then pos:line="26" pos:column="31">
    <block type="pseudo"><return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><operator pos:line="27" pos:column="13">-<pos:position pos:line="27" pos:column="14"/></operator><literal type="number" pos:line="27" pos:column="14">1<pos:position pos:line="27" pos:column="15"/></literal><operator pos:line="27" pos:column="15">)<pos:position pos:line="27" pos:column="16"/></operator></expr>;<pos:position pos:line="27" pos:column="17"/></return></block></then></if>
  <for pos:line="28" pos:column="3">for <control pos:line="28" pos:column="7">(<init><expr><name pos:line="28" pos:column="8">i<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></init> <condition><expr><name pos:line="28" pos:column="15">i<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">&lt;<pos:position pos:line="28" pos:column="21"/></operator> <name><name pos:line="28" pos:column="19">data<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">values_len<pos:position pos:line="28" pos:column="35"/></name></name></expr>;<pos:position pos:line="28" pos:column="36"/></condition> <incr><expr><name pos:line="28" pos:column="37">i<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">++<pos:position pos:line="28" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="41"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="5">value_table_ptr<pos:position pos:line="29" pos:column="20"/></name><index pos:line="29" pos:column="20">[<expr><name pos:line="29" pos:column="21">i<pos:position pos:line="29" pos:column="22"/></name></expr>]<pos:position pos:line="29" pos:column="23"/></index></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <name><name pos:line="29" pos:column="26">value_table<pos:position pos:line="29" pos:column="37"/></name><index pos:line="29" pos:column="37">[<expr><name pos:line="29" pos:column="38">i<pos:position pos:line="29" pos:column="39"/></name></expr>]<pos:position pos:line="29" pos:column="40"/></index></name></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt></block></for>

  <expr_stmt><expr><name><name pos:line="31" pos:column="3">vl<pos:position pos:line="31" pos:column="5"/></name><operator pos:line="31" pos:column="5">.<pos:position pos:line="31" pos:column="6"/></operator><name pos:line="31" pos:column="6">values_len<pos:position pos:line="31" pos:column="16"/></name></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name><name pos:line="31" pos:column="19">data<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">values_len<pos:position pos:line="31" pos:column="35"/></name></name></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">vl<pos:position pos:line="32" pos:column="5"/></name><operator pos:line="32" pos:column="5">.<pos:position pos:line="32" pos:column="6"/></operator><name pos:line="32" pos:column="6">values<pos:position pos:line="32" pos:column="12"/></name></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <call><name pos:line="32" pos:column="15">malloc<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><sizeof pos:line="32" pos:column="22">sizeof<argument_list pos:line="32" pos:column="28">(<argument><expr><operator pos:line="32" pos:column="29">*<pos:position pos:line="32" pos:column="30"/></operator><name><name pos:line="32" pos:column="30">vl<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">.<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="33">values<pos:position pos:line="32" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></sizeof> <operator pos:line="32" pos:column="41">*<pos:position pos:line="32" pos:column="42"/></operator> <name><name pos:line="32" pos:column="43">vl<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">.<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="46">values_len<pos:position pos:line="32" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name><name pos:line="33" pos:column="7">vl<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">.<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">values<pos:position pos:line="33" pos:column="16"/></name></name> <operator pos:line="33" pos:column="17">==<pos:position pos:line="33" pos:column="19"/></operator> <name pos:line="33" pos:column="20">NULL<pos:position pos:line="33" pos:column="24"/></name></expr>)<pos:position pos:line="33" pos:column="25"/></condition><then pos:line="33" pos:column="25"> <block pos:line="33" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ERROR<pos:position pos:line="34" pos:column="10"/></name><argument_list pos:line="34" pos:column="10">(<argument><expr><literal type="string" pos:line="34" pos:column="11">"snmp plugin: malloc failed."<pos:position pos:line="34" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">sfree<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><name pos:line="35" pos:column="11">value_table_ptr<pos:position pos:line="35" pos:column="26"/></name></expr></argument>)<pos:position pos:line="35" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><operator pos:line="36" pos:column="13">-<pos:position pos:line="36" pos:column="14"/></operator><literal type="number" pos:line="36" pos:column="14">1<pos:position pos:line="36" pos:column="15"/></literal><operator pos:line="36" pos:column="15">)<pos:position pos:line="36" pos:column="16"/></operator></expr>;<pos:position pos:line="36" pos:column="17"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="39" pos:column="3">sstrncpy<pos:position pos:line="39" pos:column="11"/></name><argument_list pos:line="39" pos:column="11">(<argument><expr><name><name pos:line="39" pos:column="12">vl<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">.<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="15">host<pos:position pos:line="39" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="21">host<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">-&gt;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="27">name<pos:position pos:line="39" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="33">sizeof<argument_list pos:line="39" pos:column="39">(<argument><expr><name><name pos:line="39" pos:column="40">vl<pos:position pos:line="39" pos:column="42"/></name><operator pos:line="39" pos:column="42">.<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="43">host<pos:position pos:line="39" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">sstrncpy<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><name><name pos:line="40" pos:column="12">vl<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">.<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">plugin<pos:position pos:line="40" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="23">"snmp"<pos:position pos:line="40" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="31">sizeof<argument_list pos:line="40" pos:column="37">(<argument><expr><name><name pos:line="40" pos:column="38">vl<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">.<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="41">plugin<pos:position pos:line="40" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="42" pos:column="3">vl<pos:position pos:line="42" pos:column="5"/></name><operator pos:line="42" pos:column="5">.<pos:position pos:line="42" pos:column="6"/></operator><name pos:line="42" pos:column="6">interval<pos:position pos:line="42" pos:column="14"/></name></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <name><name pos:line="42" pos:column="17">host<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">interval<pos:position pos:line="42" pos:column="31"/></name></name></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name pos:line="44" pos:column="3">have_more<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <literal type="number" pos:line="44" pos:column="15">1<pos:position pos:line="44" pos:column="16"/></literal></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt>
  <while pos:line="45" pos:column="3">while <condition pos:line="45" pos:column="9">(<expr><name pos:line="45" pos:column="10">have_more<pos:position pos:line="45" pos:column="19"/></name></expr>)<pos:position pos:line="45" pos:column="20"/></condition> <block pos:line="45" pos:column="21">{
    <decl_stmt><decl><type><name pos:line="46" pos:column="5">_Bool<pos:position pos:line="46" pos:column="10"/></name></type> <name pos:line="46" pos:column="11">suffix_skipped<pos:position pos:line="46" pos:column="25"/></name> <init pos:line="46" pos:column="26">= <expr><literal type="number" pos:line="46" pos:column="28">0<pos:position pos:line="46" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="46" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="48" pos:column="5">/* Determine next suffix to handle. */</comment>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">instance_list<pos:position pos:line="49" pos:column="22"/></name> <operator pos:line="49" pos:column="23">!=<pos:position pos:line="49" pos:column="25"/></operator> <name pos:line="49" pos:column="26">NULL<pos:position pos:line="49" pos:column="30"/></name></expr>)<pos:position pos:line="49" pos:column="31"/></condition><then pos:line="49" pos:column="31"> <block pos:line="49" pos:column="32">{
      <if pos:line="50" pos:column="7">if <condition pos:line="50" pos:column="10">(<expr><name pos:line="50" pos:column="11">instance_list_ptr<pos:position pos:line="50" pos:column="28"/></name> <operator pos:line="50" pos:column="29">==<pos:position pos:line="50" pos:column="31"/></operator> <name pos:line="50" pos:column="32">NULL<pos:position pos:line="50" pos:column="36"/></name></expr>)<pos:position pos:line="50" pos:column="37"/></condition><then pos:line="50" pos:column="37"> <block pos:line="50" pos:column="38">{
        <expr_stmt><expr><name pos:line="51" pos:column="9">have_more<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <literal type="number" pos:line="51" pos:column="21">0<pos:position pos:line="51" pos:column="22"/></literal></expr>;<pos:position pos:line="51" pos:column="23"/></expr_stmt>
        <continue pos:line="52" pos:column="9">continue;<pos:position pos:line="52" pos:column="18"/></continue>
      }<pos:position pos:line="53" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="55" pos:column="7">memcpy<pos:position pos:line="55" pos:column="13"/></name><argument_list pos:line="55" pos:column="13">(<argument><expr><operator pos:line="55" pos:column="14">&amp;<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="15">current_suffix<pos:position pos:line="55" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="31">&amp;<pos:position pos:line="55" pos:column="36"/></operator><name><name pos:line="55" pos:column="32">instance_list_ptr<pos:position pos:line="55" pos:column="49"/></name><operator pos:line="55" pos:column="49">-&gt;<pos:position pos:line="55" pos:column="54"/></operator><name pos:line="55" pos:column="51">suffix<pos:position pos:line="55" pos:column="57"/></name></name></expr></argument>,
             <argument><expr><sizeof pos:line="56" pos:column="14">sizeof<argument_list pos:line="56" pos:column="20">(<argument><expr><name pos:line="56" pos:column="21">current_suffix<pos:position pos:line="56" pos:column="35"/></name></expr></argument>)<pos:position pos:line="56" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="56" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then> <else pos:line="57" pos:column="7">else <comment type="block" pos:line="57" pos:column="12">/* no instance configured */</comment>
    <block pos:line="58" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="59" pos:column="7">csnmp_table_values_t<pos:position pos:line="59" pos:column="27"/></name> <modifier pos:line="59" pos:column="28">*<pos:position pos:line="59" pos:column="29"/></modifier></type><name pos:line="59" pos:column="29">ptr<pos:position pos:line="59" pos:column="32"/></name> <init pos:line="59" pos:column="33">= <expr><name><name pos:line="59" pos:column="35">value_table_ptr<pos:position pos:line="59" pos:column="50"/></name><index pos:line="59" pos:column="50">[<expr><literal type="number" pos:line="59" pos:column="51">0<pos:position pos:line="59" pos:column="52"/></literal></expr>]<pos:position pos:line="59" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="59" pos:column="54"/></decl_stmt>
      <if pos:line="60" pos:column="7">if <condition pos:line="60" pos:column="10">(<expr><name pos:line="60" pos:column="11">ptr<pos:position pos:line="60" pos:column="14"/></name> <operator pos:line="60" pos:column="15">==<pos:position pos:line="60" pos:column="17"/></operator> <name pos:line="60" pos:column="18">NULL<pos:position pos:line="60" pos:column="22"/></name></expr>)<pos:position pos:line="60" pos:column="23"/></condition><then pos:line="60" pos:column="23"> <block pos:line="60" pos:column="24">{
        <expr_stmt><expr><name pos:line="61" pos:column="9">have_more<pos:position pos:line="61" pos:column="18"/></name> <operator pos:line="61" pos:column="19">=<pos:position pos:line="61" pos:column="20"/></operator> <literal type="number" pos:line="61" pos:column="21">0<pos:position pos:line="61" pos:column="22"/></literal></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
        <continue pos:line="62" pos:column="9">continue;<pos:position pos:line="62" pos:column="18"/></continue>
      }<pos:position pos:line="63" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="65" pos:column="7">memcpy<pos:position pos:line="65" pos:column="13"/></name><argument_list pos:line="65" pos:column="13">(<argument><expr><operator pos:line="65" pos:column="14">&amp;<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="15">current_suffix<pos:position pos:line="65" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="31">&amp;<pos:position pos:line="65" pos:column="36"/></operator><name><name pos:line="65" pos:column="32">ptr<pos:position pos:line="65" pos:column="35"/></name><operator pos:line="65" pos:column="35">-&gt;<pos:position pos:line="65" pos:column="40"/></operator><name pos:line="65" pos:column="37">suffix<pos:position pos:line="65" pos:column="43"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="45">sizeof<argument_list pos:line="65" pos:column="51">(<argument><expr><name pos:line="65" pos:column="52">current_suffix<pos:position pos:line="65" pos:column="66"/></name></expr></argument>)<pos:position pos:line="65" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="68" pos:column="5">/* Update all the value_table_ptr to point at the entry with the same
     * trailing partial OID */</comment>
    <for pos:line="70" pos:column="5">for <control pos:line="70" pos:column="9">(<init><expr><name pos:line="70" pos:column="10">i<pos:position pos:line="70" pos:column="11"/></name> <operator pos:line="70" pos:column="12">=<pos:position pos:line="70" pos:column="13"/></operator> <literal type="number" pos:line="70" pos:column="14">0<pos:position pos:line="70" pos:column="15"/></literal></expr>;<pos:position pos:line="70" pos:column="16"/></init> <condition><expr><name pos:line="70" pos:column="17">i<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">&lt;<pos:position pos:line="70" pos:column="23"/></operator> <name><name pos:line="70" pos:column="21">data<pos:position pos:line="70" pos:column="25"/></name><operator pos:line="70" pos:column="25">-&gt;<pos:position pos:line="70" pos:column="30"/></operator><name pos:line="70" pos:column="27">values_len<pos:position pos:line="70" pos:column="37"/></name></name></expr>;<pos:position pos:line="70" pos:column="38"/></condition> <incr><expr><name pos:line="70" pos:column="39">i<pos:position pos:line="70" pos:column="40"/></name><operator pos:line="70" pos:column="40">++<pos:position pos:line="70" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="70" pos:column="43"/></control> <block pos:line="70" pos:column="44">{
      <while pos:line="71" pos:column="7">while <condition pos:line="71" pos:column="13">(
          <expr><operator pos:line="72" pos:column="11">(<pos:position pos:line="72" pos:column="12"/></operator><name><name pos:line="72" pos:column="12">value_table_ptr<pos:position pos:line="72" pos:column="27"/></name><index pos:line="72" pos:column="27">[<expr><name pos:line="72" pos:column="28">i<pos:position pos:line="72" pos:column="29"/></name></expr>]<pos:position pos:line="72" pos:column="30"/></index></name> <operator pos:line="72" pos:column="31">!=<pos:position pos:line="72" pos:column="33"/></operator> <name pos:line="72" pos:column="34">NULL<pos:position pos:line="72" pos:column="38"/></name><operator pos:line="72" pos:column="38">)<pos:position pos:line="72" pos:column="39"/></operator> <operator pos:line="72" pos:column="40">&amp;&amp;<pos:position pos:line="72" pos:column="50"/></operator>
          <operator pos:line="73" pos:column="11">(<pos:position pos:line="73" pos:column="12"/></operator><call><name pos:line="73" pos:column="12">csnmp_oid_compare<pos:position pos:line="73" pos:column="29"/></name><argument_list pos:line="73" pos:column="29">(<argument><expr><operator pos:line="73" pos:column="30">&amp;<pos:position pos:line="73" pos:column="35"/></operator><name><name pos:line="73" pos:column="31">value_table_ptr<pos:position pos:line="73" pos:column="46"/></name><index pos:line="73" pos:column="46">[<expr><name pos:line="73" pos:column="47">i<pos:position pos:line="73" pos:column="48"/></name></expr>]<pos:position pos:line="73" pos:column="49"/></index></name><operator pos:line="73" pos:column="49">-&gt;<pos:position pos:line="73" pos:column="54"/></operator><name pos:line="73" pos:column="51">suffix<pos:position pos:line="73" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="59">&amp;<pos:position pos:line="73" pos:column="64"/></operator><name pos:line="73" pos:column="60">current_suffix<pos:position pos:line="73" pos:column="74"/></name></expr></argument>)<pos:position pos:line="73" pos:column="75"/></argument_list></call> <operator pos:line="73" pos:column="76">&lt;<pos:position pos:line="73" pos:column="80"/></operator> <literal type="number" pos:line="73" pos:column="78">0<pos:position pos:line="73" pos:column="79"/></literal><operator pos:line="73" pos:column="79">)<pos:position pos:line="73" pos:column="80"/></operator></expr>)<pos:position pos:line="73" pos:column="81"/></condition>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="74" pos:column="9">value_table_ptr<pos:position pos:line="74" pos:column="24"/></name><index pos:line="74" pos:column="24">[<expr><name pos:line="74" pos:column="25">i<pos:position pos:line="74" pos:column="26"/></name></expr>]<pos:position pos:line="74" pos:column="27"/></index></name> <operator pos:line="74" pos:column="28">=<pos:position pos:line="74" pos:column="29"/></operator> <name><name pos:line="74" pos:column="30">value_table_ptr<pos:position pos:line="74" pos:column="45"/></name><index pos:line="74" pos:column="45">[<expr><name pos:line="74" pos:column="46">i<pos:position pos:line="74" pos:column="47"/></name></expr>]<pos:position pos:line="74" pos:column="48"/></index></name><operator pos:line="74" pos:column="48">-&gt;<pos:position pos:line="74" pos:column="53"/></operator><name pos:line="74" pos:column="50">next<pos:position pos:line="74" pos:column="54"/></name></expr>;<pos:position pos:line="74" pos:column="55"/></expr_stmt></block></while>

      <if pos:line="76" pos:column="7">if <condition pos:line="76" pos:column="10">(<expr><name><name pos:line="76" pos:column="11">value_table_ptr<pos:position pos:line="76" pos:column="26"/></name><index pos:line="76" pos:column="26">[<expr><name pos:line="76" pos:column="27">i<pos:position pos:line="76" pos:column="28"/></name></expr>]<pos:position pos:line="76" pos:column="29"/></index></name> <operator pos:line="76" pos:column="30">==<pos:position pos:line="76" pos:column="32"/></operator> <name pos:line="76" pos:column="33">NULL<pos:position pos:line="76" pos:column="37"/></name></expr>)<pos:position pos:line="76" pos:column="38"/></condition><then pos:line="76" pos:column="38"> <block pos:line="76" pos:column="39">{
        <expr_stmt><expr><name pos:line="77" pos:column="9">have_more<pos:position pos:line="77" pos:column="18"/></name> <operator pos:line="77" pos:column="19">=<pos:position pos:line="77" pos:column="20"/></operator> <literal type="number" pos:line="77" pos:column="21">0<pos:position pos:line="77" pos:column="22"/></literal></expr>;<pos:position pos:line="77" pos:column="23"/></expr_stmt>
        <break pos:line="78" pos:column="9">break;<pos:position pos:line="78" pos:column="15"/></break>
      }<pos:position pos:line="79" pos:column="8"/></block></then> <elseif pos:line="79" pos:column="9">else <if pos:line="79" pos:column="14">if <condition pos:line="79" pos:column="17">(<expr><call><name pos:line="79" pos:column="18">csnmp_oid_compare<pos:position pos:line="79" pos:column="35"/></name><argument_list pos:line="79" pos:column="35">(<argument><expr><operator pos:line="79" pos:column="36">&amp;<pos:position pos:line="79" pos:column="41"/></operator><name><name pos:line="79" pos:column="37">value_table_ptr<pos:position pos:line="79" pos:column="52"/></name><index pos:line="79" pos:column="52">[<expr><name pos:line="79" pos:column="53">i<pos:position pos:line="79" pos:column="54"/></name></expr>]<pos:position pos:line="79" pos:column="55"/></index></name><operator pos:line="79" pos:column="55">-&gt;<pos:position pos:line="79" pos:column="60"/></operator><name pos:line="79" pos:column="57">suffix<pos:position pos:line="79" pos:column="63"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="80" pos:column="36">&amp;<pos:position pos:line="80" pos:column="41"/></operator><name pos:line="80" pos:column="37">current_suffix<pos:position pos:line="80" pos:column="51"/></name></expr></argument>)<pos:position pos:line="80" pos:column="52"/></argument_list></call> <operator pos:line="80" pos:column="53">&gt;<pos:position pos:line="80" pos:column="57"/></operator> <literal type="number" pos:line="80" pos:column="55">0<pos:position pos:line="80" pos:column="56"/></literal></expr>)<pos:position pos:line="80" pos:column="57"/></condition><then pos:line="80" pos:column="57"> <block pos:line="80" pos:column="58">{
        <comment type="block" pos:line="81" pos:column="9">/* This suffix is missing in the subtree. Indicate this with the
         * "suffix_skipped" flag and try the next instance / suffix. */</comment>
        <expr_stmt><expr><name pos:line="83" pos:column="9">suffix_skipped<pos:position pos:line="83" pos:column="23"/></name> <operator pos:line="83" pos:column="24">=<pos:position pos:line="83" pos:column="25"/></operator> <literal type="number" pos:line="83" pos:column="26">1<pos:position pos:line="83" pos:column="27"/></literal></expr>;<pos:position pos:line="83" pos:column="28"/></expr_stmt>
        <break pos:line="84" pos:column="9">break;<pos:position pos:line="84" pos:column="15"/></break>
      }<pos:position pos:line="85" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="86" pos:column="6"/></block></for> <comment type="block" pos:line="86" pos:column="7">/* for (i = 0; i &lt; columns; i++) */</comment>

    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><operator pos:line="88" pos:column="9">!<pos:position pos:line="88" pos:column="10"/></operator><name pos:line="88" pos:column="10">have_more<pos:position pos:line="88" pos:column="19"/></name></expr>)<pos:position pos:line="88" pos:column="20"/></condition><then pos:line="88" pos:column="20">
      <block type="pseudo"><break pos:line="89" pos:column="7">break;<pos:position pos:line="89" pos:column="13"/></break></block></then></if>

    <comment type="block" pos:line="91" pos:column="5">/* Matching the values failed. Start from the beginning again. */</comment>
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name pos:line="92" pos:column="9">suffix_skipped<pos:position pos:line="92" pos:column="23"/></name></expr>)<pos:position pos:line="92" pos:column="24"/></condition><then pos:line="92" pos:column="24"> <block pos:line="92" pos:column="25">{
      <if pos:line="93" pos:column="7">if <condition pos:line="93" pos:column="10">(<expr><name pos:line="93" pos:column="11">instance_list<pos:position pos:line="93" pos:column="24"/></name> <operator pos:line="93" pos:column="25">!=<pos:position pos:line="93" pos:column="27"/></operator> <name pos:line="93" pos:column="28">NULL<pos:position pos:line="93" pos:column="32"/></name></expr>)<pos:position pos:line="93" pos:column="33"/></condition><then pos:line="93" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="9">instance_list_ptr<pos:position pos:line="94" pos:column="26"/></name> <operator pos:line="94" pos:column="27">=<pos:position pos:line="94" pos:column="28"/></operator> <name><name pos:line="94" pos:column="29">instance_list_ptr<pos:position pos:line="94" pos:column="46"/></name><operator pos:line="94" pos:column="46">-&gt;<pos:position pos:line="94" pos:column="51"/></operator><name pos:line="94" pos:column="48">next<pos:position pos:line="94" pos:column="52"/></name></name></expr>;<pos:position pos:line="94" pos:column="53"/></expr_stmt></block></then>
      <else pos:line="95" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="96" pos:column="9">value_table_ptr<pos:position pos:line="96" pos:column="24"/></name><index pos:line="96" pos:column="24">[<expr><literal type="number" pos:line="96" pos:column="25">0<pos:position pos:line="96" pos:column="26"/></literal></expr>]<pos:position pos:line="96" pos:column="27"/></index></name> <operator pos:line="96" pos:column="28">=<pos:position pos:line="96" pos:column="29"/></operator> <name><name pos:line="96" pos:column="30">value_table_ptr<pos:position pos:line="96" pos:column="45"/></name><index pos:line="96" pos:column="45">[<expr><literal type="number" pos:line="96" pos:column="46">0<pos:position pos:line="96" pos:column="47"/></literal></expr>]<pos:position pos:line="96" pos:column="48"/></index></name><operator pos:line="96" pos:column="48">-&gt;<pos:position pos:line="96" pos:column="53"/></operator><name pos:line="96" pos:column="50">next<pos:position pos:line="96" pos:column="54"/></name></expr>;<pos:position pos:line="96" pos:column="55"/></expr_stmt></block></else></if>

      <continue pos:line="98" pos:column="7">continue;<pos:position pos:line="98" pos:column="16"/></continue>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>

<comment type="block" pos:line="101" pos:column="1">/* if we reach this line, all value_table_ptr[i] are non-NULL and are set
 * to the same subid. instance_list_ptr is either NULL or points to the
 * same subid, too. */</comment>
<cpp:if pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">if<pos:position pos:line="104" pos:column="4"/></cpp:directive> <expr><name pos:line="104" pos:column="5">COLLECT_DEBUG<pos:position pos:line="104" pos:column="18"/></name></expr></cpp:if>
    <for pos:line="105" pos:column="5">for <control pos:line="105" pos:column="9">(<init><expr><name pos:line="105" pos:column="10">i<pos:position pos:line="105" pos:column="11"/></name> <operator pos:line="105" pos:column="12">=<pos:position pos:line="105" pos:column="13"/></operator> <literal type="number" pos:line="105" pos:column="14">1<pos:position pos:line="105" pos:column="15"/></literal></expr>;<pos:position pos:line="105" pos:column="16"/></init> <condition><expr><name pos:line="105" pos:column="17">i<pos:position pos:line="105" pos:column="18"/></name> <operator pos:line="105" pos:column="19">&lt;<pos:position pos:line="105" pos:column="23"/></operator> <name><name pos:line="105" pos:column="21">data<pos:position pos:line="105" pos:column="25"/></name><operator pos:line="105" pos:column="25">-&gt;<pos:position pos:line="105" pos:column="30"/></operator><name pos:line="105" pos:column="27">values_len<pos:position pos:line="105" pos:column="37"/></name></name></expr>;<pos:position pos:line="105" pos:column="38"/></condition> <incr><expr><name pos:line="105" pos:column="39">i<pos:position pos:line="105" pos:column="40"/></name><operator pos:line="105" pos:column="40">++<pos:position pos:line="105" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="105" pos:column="43"/></control> <block pos:line="105" pos:column="44">{
      <expr_stmt><expr><call><name pos:line="106" pos:column="7">assert<pos:position pos:line="106" pos:column="13"/></name><argument_list pos:line="106" pos:column="13">(<argument><expr><name><name pos:line="106" pos:column="14">value_table_ptr<pos:position pos:line="106" pos:column="29"/></name><index pos:line="106" pos:column="29">[<expr><name pos:line="106" pos:column="30">i<pos:position pos:line="106" pos:column="31"/></name></expr>]<pos:position pos:line="106" pos:column="32"/></index></name> <operator pos:line="106" pos:column="33">!=<pos:position pos:line="106" pos:column="35"/></operator> <name pos:line="106" pos:column="36">NULL<pos:position pos:line="106" pos:column="40"/></name></expr></argument>)<pos:position pos:line="106" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="107" pos:column="7">assert<pos:position pos:line="107" pos:column="13"/></name><argument_list pos:line="107" pos:column="13">(<argument><expr><call><name pos:line="107" pos:column="14">csnmp_oid_compare<pos:position pos:line="107" pos:column="31"/></name><argument_list pos:line="107" pos:column="31">(<argument><expr><operator pos:line="107" pos:column="32">&amp;<pos:position pos:line="107" pos:column="37"/></operator><name><name pos:line="107" pos:column="33">value_table_ptr<pos:position pos:line="107" pos:column="48"/></name><index pos:line="107" pos:column="48">[<expr><name pos:line="107" pos:column="49">i<pos:position pos:line="107" pos:column="50"/></name> <operator pos:line="107" pos:column="51">-<pos:position pos:line="107" pos:column="52"/></operator> <literal type="number" pos:line="107" pos:column="53">1<pos:position pos:line="107" pos:column="54"/></literal></expr>]<pos:position pos:line="107" pos:column="55"/></index></name><operator pos:line="107" pos:column="55">-&gt;<pos:position pos:line="107" pos:column="60"/></operator><name pos:line="107" pos:column="57">suffix<pos:position pos:line="107" pos:column="63"/></name></expr></argument>,
                               <argument><expr><operator pos:line="108" pos:column="32">&amp;<pos:position pos:line="108" pos:column="37"/></operator><name><name pos:line="108" pos:column="33">value_table_ptr<pos:position pos:line="108" pos:column="48"/></name><index pos:line="108" pos:column="48">[<expr><name pos:line="108" pos:column="49">i<pos:position pos:line="108" pos:column="50"/></name></expr>]<pos:position pos:line="108" pos:column="51"/></index></name><operator pos:line="108" pos:column="51">-&gt;<pos:position pos:line="108" pos:column="56"/></operator><name pos:line="108" pos:column="53">suffix<pos:position pos:line="108" pos:column="59"/></name></expr></argument>)<pos:position pos:line="108" pos:column="60"/></argument_list></call> <operator pos:line="108" pos:column="61">==<pos:position pos:line="108" pos:column="63"/></operator> <literal type="number" pos:line="108" pos:column="64">0<pos:position pos:line="108" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="109" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="110" pos:column="5">assert<pos:position pos:line="110" pos:column="11"/></name><argument_list pos:line="110" pos:column="11">(<argument><expr><operator pos:line="110" pos:column="12">(<pos:position pos:line="110" pos:column="13"/></operator><name pos:line="110" pos:column="13">instance_list_ptr<pos:position pos:line="110" pos:column="30"/></name> <operator pos:line="110" pos:column="31">==<pos:position pos:line="110" pos:column="33"/></operator> <name pos:line="110" pos:column="34">NULL<pos:position pos:line="110" pos:column="38"/></name><operator pos:line="110" pos:column="38">)<pos:position pos:line="110" pos:column="39"/></operator> <operator pos:line="110" pos:column="40">||<pos:position pos:line="110" pos:column="42"/></operator>
           <operator pos:line="111" pos:column="12">(<pos:position pos:line="111" pos:column="13"/></operator><call><name pos:line="111" pos:column="13">csnmp_oid_compare<pos:position pos:line="111" pos:column="30"/></name><argument_list pos:line="111" pos:column="30">(<argument><expr><operator pos:line="111" pos:column="31">&amp;<pos:position pos:line="111" pos:column="36"/></operator><name><name pos:line="111" pos:column="32">instance_list_ptr<pos:position pos:line="111" pos:column="49"/></name><operator pos:line="111" pos:column="49">-&gt;<pos:position pos:line="111" pos:column="54"/></operator><name pos:line="111" pos:column="51">suffix<pos:position pos:line="111" pos:column="57"/></name></name></expr></argument>,
                              <argument><expr><operator pos:line="112" pos:column="31">&amp;<pos:position pos:line="112" pos:column="36"/></operator><name><name pos:line="112" pos:column="32">value_table_ptr<pos:position pos:line="112" pos:column="47"/></name><index pos:line="112" pos:column="47">[<expr><literal type="number" pos:line="112" pos:column="48">0<pos:position pos:line="112" pos:column="49"/></literal></expr>]<pos:position pos:line="112" pos:column="50"/></index></name><operator pos:line="112" pos:column="50">-&gt;<pos:position pos:line="112" pos:column="55"/></operator><name pos:line="112" pos:column="52">suffix<pos:position pos:line="112" pos:column="58"/></name></expr></argument>)<pos:position pos:line="112" pos:column="59"/></argument_list></call> <operator pos:line="112" pos:column="60">==<pos:position pos:line="112" pos:column="62"/></operator> <literal type="number" pos:line="112" pos:column="63">0<pos:position pos:line="112" pos:column="64"/></literal><operator pos:line="112" pos:column="64">)<pos:position pos:line="112" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="112" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="67"/></expr_stmt>
<cpp:endif pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">endif<pos:position pos:line="113" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="115" pos:column="5">sstrncpy<pos:position pos:line="115" pos:column="13"/></name><argument_list pos:line="115" pos:column="13">(<argument><expr><name><name pos:line="115" pos:column="14">vl<pos:position pos:line="115" pos:column="16"/></name><operator pos:line="115" pos:column="16">.<pos:position pos:line="115" pos:column="17"/></operator><name pos:line="115" pos:column="17">type<pos:position pos:line="115" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="23">data<pos:position pos:line="115" pos:column="27"/></name><operator pos:line="115" pos:column="27">-&gt;<pos:position pos:line="115" pos:column="32"/></operator><name pos:line="115" pos:column="29">type<pos:position pos:line="115" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="115" pos:column="35">sizeof<argument_list pos:line="115" pos:column="41">(<argument><expr><name><name pos:line="115" pos:column="42">vl<pos:position pos:line="115" pos:column="44"/></name><operator pos:line="115" pos:column="44">.<pos:position pos:line="115" pos:column="45"/></operator><name pos:line="115" pos:column="45">type<pos:position pos:line="115" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="115" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="52"/></expr_stmt>

    <block pos:line="117" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="118" pos:column="7">char<pos:position pos:line="118" pos:column="11"/></name></type> <name><name pos:line="118" pos:column="12">temp<pos:position pos:line="118" pos:column="16"/></name><index pos:line="118" pos:column="16">[<expr><name pos:line="118" pos:column="17">DATA_MAX_NAME_LEN<pos:position pos:line="118" pos:column="34"/></name></expr>]<pos:position pos:line="118" pos:column="35"/></index></name></decl>;<pos:position pos:line="118" pos:column="36"/></decl_stmt>

      <if pos:line="120" pos:column="7">if <condition pos:line="120" pos:column="10">(<expr><name pos:line="120" pos:column="11">instance_list_ptr<pos:position pos:line="120" pos:column="28"/></name> <operator pos:line="120" pos:column="29">==<pos:position pos:line="120" pos:column="31"/></operator> <name pos:line="120" pos:column="32">NULL<pos:position pos:line="120" pos:column="36"/></name></expr>)<pos:position pos:line="120" pos:column="37"/></condition><then pos:line="120" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="121" pos:column="9">csnmp_oid_to_string<pos:position pos:line="121" pos:column="28"/></name><argument_list pos:line="121" pos:column="28">(<argument><expr><name pos:line="121" pos:column="29">temp<pos:position pos:line="121" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="121" pos:column="35">sizeof<argument_list pos:line="121" pos:column="41">(<argument><expr><name pos:line="121" pos:column="42">temp<pos:position pos:line="121" pos:column="46"/></name></expr></argument>)<pos:position pos:line="121" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="121" pos:column="49">&amp;<pos:position pos:line="121" pos:column="54"/></operator><name pos:line="121" pos:column="50">current_suffix<pos:position pos:line="121" pos:column="64"/></name></expr></argument>)<pos:position pos:line="121" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="66"/></expr_stmt></block></then>
      <else pos:line="122" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="123" pos:column="9">sstrncpy<pos:position pos:line="123" pos:column="17"/></name><argument_list pos:line="123" pos:column="17">(<argument><expr><name pos:line="123" pos:column="18">temp<pos:position pos:line="123" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="123" pos:column="24">instance_list_ptr<pos:position pos:line="123" pos:column="41"/></name><operator pos:line="123" pos:column="41">-&gt;<pos:position pos:line="123" pos:column="46"/></operator><name pos:line="123" pos:column="43">instance<pos:position pos:line="123" pos:column="51"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="123" pos:column="53">sizeof<argument_list pos:line="123" pos:column="59">(<argument><expr><name pos:line="123" pos:column="60">temp<pos:position pos:line="123" pos:column="64"/></name></expr></argument>)<pos:position pos:line="123" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="123" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="67"/></expr_stmt></block></else></if>

      <if pos:line="125" pos:column="7">if <condition pos:line="125" pos:column="10">(<expr><name><name pos:line="125" pos:column="11">data<pos:position pos:line="125" pos:column="15"/></name><operator pos:line="125" pos:column="15">-&gt;<pos:position pos:line="125" pos:column="20"/></operator><name pos:line="125" pos:column="17">instance_prefix<pos:position pos:line="125" pos:column="32"/></name></name> <operator pos:line="125" pos:column="33">==<pos:position pos:line="125" pos:column="35"/></operator> <name pos:line="125" pos:column="36">NULL<pos:position pos:line="125" pos:column="40"/></name></expr>)<pos:position pos:line="125" pos:column="41"/></condition><then pos:line="125" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="126" pos:column="9">sstrncpy<pos:position pos:line="126" pos:column="17"/></name><argument_list pos:line="126" pos:column="17">(<argument><expr><name><name pos:line="126" pos:column="18">vl<pos:position pos:line="126" pos:column="20"/></name><operator pos:line="126" pos:column="20">.<pos:position pos:line="126" pos:column="21"/></operator><name pos:line="126" pos:column="21">type_instance<pos:position pos:line="126" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="36">temp<pos:position pos:line="126" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="126" pos:column="42">sizeof<argument_list pos:line="126" pos:column="48">(<argument><expr><name><name pos:line="126" pos:column="49">vl<pos:position pos:line="126" pos:column="51"/></name><operator pos:line="126" pos:column="51">.<pos:position pos:line="126" pos:column="52"/></operator><name pos:line="126" pos:column="52">type_instance<pos:position pos:line="126" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="126" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="68"/></expr_stmt></block></then>
      <else pos:line="127" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="128" pos:column="9">ssnprintf<pos:position pos:line="128" pos:column="18"/></name><argument_list pos:line="128" pos:column="18">(<argument><expr><name><name pos:line="128" pos:column="19">vl<pos:position pos:line="128" pos:column="21"/></name><operator pos:line="128" pos:column="21">.<pos:position pos:line="128" pos:column="22"/></operator><name pos:line="128" pos:column="22">type_instance<pos:position pos:line="128" pos:column="35"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="128" pos:column="37">sizeof<argument_list pos:line="128" pos:column="43">(<argument><expr><name><name pos:line="128" pos:column="44">vl<pos:position pos:line="128" pos:column="46"/></name><operator pos:line="128" pos:column="46">.<pos:position pos:line="128" pos:column="47"/></operator><name pos:line="128" pos:column="47">type_instance<pos:position pos:line="128" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="61"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="63">"%s%s"<pos:position pos:line="128" pos:column="69"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="129" pos:column="19">data<pos:position pos:line="129" pos:column="23"/></name><operator pos:line="129" pos:column="23">-&gt;<pos:position pos:line="129" pos:column="28"/></operator><name pos:line="129" pos:column="25">instance_prefix<pos:position pos:line="129" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="42">temp<pos:position pos:line="129" pos:column="46"/></name></expr></argument>)<pos:position pos:line="129" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="48"/></expr_stmt></block></else></if>
    }<pos:position pos:line="130" pos:column="6"/></block>

    <for pos:line="132" pos:column="5">for <control pos:line="132" pos:column="9">(<init><expr><name pos:line="132" pos:column="10">i<pos:position pos:line="132" pos:column="11"/></name> <operator pos:line="132" pos:column="12">=<pos:position pos:line="132" pos:column="13"/></operator> <literal type="number" pos:line="132" pos:column="14">0<pos:position pos:line="132" pos:column="15"/></literal></expr>;<pos:position pos:line="132" pos:column="16"/></init> <condition><expr><name pos:line="132" pos:column="17">i<pos:position pos:line="132" pos:column="18"/></name> <operator pos:line="132" pos:column="19">&lt;<pos:position pos:line="132" pos:column="23"/></operator> <name><name pos:line="132" pos:column="21">data<pos:position pos:line="132" pos:column="25"/></name><operator pos:line="132" pos:column="25">-&gt;<pos:position pos:line="132" pos:column="30"/></operator><name pos:line="132" pos:column="27">values_len<pos:position pos:line="132" pos:column="37"/></name></name></expr>;<pos:position pos:line="132" pos:column="38"/></condition> <incr><expr><name pos:line="132" pos:column="39">i<pos:position pos:line="132" pos:column="40"/></name><operator pos:line="132" pos:column="40">++<pos:position pos:line="132" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="132" pos:column="43"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="133" pos:column="7">vl<pos:position pos:line="133" pos:column="9"/></name><operator pos:line="133" pos:column="9">.<pos:position pos:line="133" pos:column="10"/></operator><name pos:line="133" pos:column="10">values<pos:position pos:line="133" pos:column="16"/></name><index pos:line="133" pos:column="16">[<expr><name pos:line="133" pos:column="17">i<pos:position pos:line="133" pos:column="18"/></name></expr>]<pos:position pos:line="133" pos:column="19"/></index></name> <operator pos:line="133" pos:column="20">=<pos:position pos:line="133" pos:column="21"/></operator> <name><name pos:line="133" pos:column="22">value_table_ptr<pos:position pos:line="133" pos:column="37"/></name><index pos:line="133" pos:column="37">[<expr><name pos:line="133" pos:column="38">i<pos:position pos:line="133" pos:column="39"/></name></expr>]<pos:position pos:line="133" pos:column="40"/></index></name><operator pos:line="133" pos:column="40">-&gt;<pos:position pos:line="133" pos:column="45"/></operator><name pos:line="133" pos:column="42">value<pos:position pos:line="133" pos:column="47"/></name></expr>;<pos:position pos:line="133" pos:column="48"/></expr_stmt></block></for>

    <comment type="block" pos:line="135" pos:column="5">/* If we get here `vl.type_instance' and all `vl.values' have been set
     * vl.type_instance can be empty, i.e. a blank port description on a
     * switch if you're using IF-MIB::ifDescr as Instance.
     */</comment>
    <if pos:line="139" pos:column="5">if <condition pos:line="139" pos:column="8">(<expr><name><name pos:line="139" pos:column="9">vl<pos:position pos:line="139" pos:column="11"/></name><operator pos:line="139" pos:column="11">.<pos:position pos:line="139" pos:column="12"/></operator><name pos:line="139" pos:column="12">type_instance<pos:position pos:line="139" pos:column="25"/></name><index pos:line="139" pos:column="25">[<expr><literal type="number" pos:line="139" pos:column="26">0<pos:position pos:line="139" pos:column="27"/></literal></expr>]<pos:position pos:line="139" pos:column="28"/></index></name> <operator pos:line="139" pos:column="29">!=<pos:position pos:line="139" pos:column="31"/></operator> <literal type="char" pos:line="139" pos:column="32">'\0'<pos:position pos:line="139" pos:column="36"/></literal></expr>)<pos:position pos:line="139" pos:column="37"/></condition><then pos:line="139" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="140" pos:column="7">plugin_dispatch_values<pos:position pos:line="140" pos:column="29"/></name><argument_list pos:line="140" pos:column="29">(<argument><expr><operator pos:line="140" pos:column="30">&amp;<pos:position pos:line="140" pos:column="35"/></operator><name pos:line="140" pos:column="31">vl<pos:position pos:line="140" pos:column="33"/></name></expr></argument>)<pos:position pos:line="140" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="35"/></expr_stmt></block></then></if>

    <if pos:line="142" pos:column="5">if <condition pos:line="142" pos:column="8">(<expr><name pos:line="142" pos:column="9">instance_list<pos:position pos:line="142" pos:column="22"/></name> <operator pos:line="142" pos:column="23">!=<pos:position pos:line="142" pos:column="25"/></operator> <name pos:line="142" pos:column="26">NULL<pos:position pos:line="142" pos:column="30"/></name></expr>)<pos:position pos:line="142" pos:column="31"/></condition><then pos:line="142" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><name pos:line="143" pos:column="7">instance_list_ptr<pos:position pos:line="143" pos:column="24"/></name> <operator pos:line="143" pos:column="25">=<pos:position pos:line="143" pos:column="26"/></operator> <name><name pos:line="143" pos:column="27">instance_list_ptr<pos:position pos:line="143" pos:column="44"/></name><operator pos:line="143" pos:column="44">-&gt;<pos:position pos:line="143" pos:column="49"/></operator><name pos:line="143" pos:column="46">next<pos:position pos:line="143" pos:column="50"/></name></name></expr>;<pos:position pos:line="143" pos:column="51"/></expr_stmt></block></then>
    <else pos:line="144" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="145" pos:column="7">value_table_ptr<pos:position pos:line="145" pos:column="22"/></name><index pos:line="145" pos:column="22">[<expr><literal type="number" pos:line="145" pos:column="23">0<pos:position pos:line="145" pos:column="24"/></literal></expr>]<pos:position pos:line="145" pos:column="25"/></index></name> <operator pos:line="145" pos:column="26">=<pos:position pos:line="145" pos:column="27"/></operator> <name><name pos:line="145" pos:column="28">value_table_ptr<pos:position pos:line="145" pos:column="43"/></name><index pos:line="145" pos:column="43">[<expr><literal type="number" pos:line="145" pos:column="44">0<pos:position pos:line="145" pos:column="45"/></literal></expr>]<pos:position pos:line="145" pos:column="46"/></index></name><operator pos:line="145" pos:column="46">-&gt;<pos:position pos:line="145" pos:column="51"/></operator><name pos:line="145" pos:column="48">next<pos:position pos:line="145" pos:column="52"/></name></expr>;<pos:position pos:line="145" pos:column="53"/></expr_stmt></block></else></if>
  }<pos:position pos:line="146" pos:column="4"/></block></while> <comment type="block" pos:line="146" pos:column="5">/* while (have_more) */</comment>

  <expr_stmt><expr><call><name pos:line="148" pos:column="3">sfree<pos:position pos:line="148" pos:column="8"/></name><argument_list pos:line="148" pos:column="8">(<argument><expr><name><name pos:line="148" pos:column="9">vl<pos:position pos:line="148" pos:column="11"/></name><operator pos:line="148" pos:column="11">.<pos:position pos:line="148" pos:column="12"/></operator><name pos:line="148" pos:column="12">values<pos:position pos:line="148" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="149" pos:column="3">sfree<pos:position pos:line="149" pos:column="8"/></name><argument_list pos:line="149" pos:column="8">(<argument><expr><name pos:line="149" pos:column="9">value_table_ptr<pos:position pos:line="149" pos:column="24"/></name></expr></argument>)<pos:position pos:line="149" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="26"/></expr_stmt>

  <return pos:line="151" pos:column="3">return <expr><operator pos:line="151" pos:column="10">(<pos:position pos:line="151" pos:column="11"/></operator><literal type="number" pos:line="151" pos:column="11">0<pos:position pos:line="151" pos:column="12"/></literal><operator pos:line="151" pos:column="12">)<pos:position pos:line="151" pos:column="13"/></operator></expr>;<pos:position pos:line="151" pos:column="14"/></return>
}<pos:position pos:line="152" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_47_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">lt_dlclose<pos:position pos:line="2" pos:column="11"/></name> <parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">lt_dlhandle<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">handle<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">lt_dlhandle<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">cur<pos:position pos:line="4" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="20">last<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">errors<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* check whether the handle is valid */</comment>
  <expr_stmt><expr><name pos:line="8" pos:column="3">last<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <name pos:line="8" pos:column="10">cur<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">handles<pos:position pos:line="8" pos:column="23"/></name></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>
  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><name pos:line="9" pos:column="10">cur<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">&amp;&amp;<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="17">handle<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">!=<pos:position pos:line="9" pos:column="26"/></operator> <name pos:line="9" pos:column="27">cur<pos:position pos:line="9" pos:column="30"/></name></expr>)<pos:position pos:line="9" pos:column="31"/></condition>
    <block pos:line="10" pos:column="5">{
      <expr_stmt><expr><name pos:line="11" pos:column="7">last<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">cur<pos:position pos:line="11" pos:column="17"/></name></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="12" pos:column="7">cur<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <name><name pos:line="12" pos:column="13">cur<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">next<pos:position pos:line="12" pos:column="22"/></name></name></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></while>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">cur<pos:position pos:line="15" pos:column="11"/></name></expr>)<pos:position pos:line="15" pos:column="12"/></condition><then pos:line="15" pos:column="12">
    <block pos:line="16" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">LT__SETERROR<pos:position pos:line="17" pos:column="19"/></name> <argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">INVALID_HANDLE<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="18" pos:column="7">++<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">errors<pos:position pos:line="18" pos:column="15"/></name></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>
      <goto pos:line="19" pos:column="7">goto <name pos:line="19" pos:column="12">done<pos:position pos:line="19" pos:column="16"/></name>;<pos:position pos:line="19" pos:column="17"/></goto>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name pos:line="22" pos:column="3">cur<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <name pos:line="22" pos:column="9">handle<pos:position pos:line="22" pos:column="15"/></name></expr>;<pos:position pos:line="22" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">cur<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">info<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">.<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">ref_count<pos:position pos:line="23" pos:column="22"/></name></name><operator pos:line="23" pos:column="22">--<pos:position pos:line="23" pos:column="24"/></operator></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* Note that even with resident modules, we must track the ref_count
     correctly incase the user decides to reset the residency flag
     later (even though the API makes no provision for that at the
     moment).  */</comment>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name><name pos:line="29" pos:column="7">cur<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">info<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">.<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">ref_count<pos:position pos:line="29" pos:column="26"/></name></name> <operator pos:line="29" pos:column="27">&lt;=<pos:position pos:line="29" pos:column="32"/></operator> <literal type="number" pos:line="29" pos:column="30">0<pos:position pos:line="29" pos:column="31"/></literal> <operator pos:line="29" pos:column="32">&amp;&amp;<pos:position pos:line="29" pos:column="42"/></operator> <operator pos:line="29" pos:column="35">!<pos:position pos:line="29" pos:column="36"/></operator><call><name pos:line="29" pos:column="36">LT_DLIS_RESIDENT<pos:position pos:line="29" pos:column="52"/></name> <argument_list pos:line="29" pos:column="53">(<argument><expr><name pos:line="29" pos:column="54">cur<pos:position pos:line="29" pos:column="57"/></name></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="59"/></condition><then pos:line="29" pos:column="59">
    <block pos:line="30" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="31" pos:column="7">lt_user_data<pos:position pos:line="31" pos:column="19"/></name></type> <name pos:line="31" pos:column="20">data<pos:position pos:line="31" pos:column="24"/></name> <init pos:line="31" pos:column="25">= <expr><name><name pos:line="31" pos:column="27">cur<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">-&gt;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="32">vtable<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">-&gt;<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="40">dlloader_data<pos:position pos:line="31" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="31" pos:column="54"/></decl_stmt>

      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><name pos:line="33" pos:column="11">cur<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">!=<pos:position pos:line="33" pos:column="17"/></operator> <name pos:line="33" pos:column="18">handles<pos:position pos:line="33" pos:column="25"/></name></expr>)<pos:position pos:line="33" pos:column="26"/></condition><then pos:line="33" pos:column="26">
	<block pos:line="34" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="35" pos:column="11">last<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">next<pos:position pos:line="35" pos:column="21"/></name></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <name><name pos:line="35" pos:column="24">cur<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">next<pos:position pos:line="35" pos:column="33"/></name></name></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then>
      <else pos:line="37" pos:column="7">else
	<block pos:line="38" pos:column="9">{
	  <expr_stmt><expr><name pos:line="39" pos:column="11">handles<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <name><name pos:line="39" pos:column="21">cur<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">-&gt;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="26">next<pos:position pos:line="39" pos:column="30"/></name></name></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></else></if>

      <expr_stmt><expr><name pos:line="42" pos:column="7">errors<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">+=<pos:position pos:line="42" pos:column="16"/></operator> <call><name><name pos:line="42" pos:column="17">cur<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">-&gt;<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="22">vtable<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">-&gt;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="30">module_close<pos:position pos:line="42" pos:column="42"/></name></name> <argument_list pos:line="42" pos:column="43">(<argument><expr><name pos:line="42" pos:column="44">data<pos:position pos:line="42" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="50">cur<pos:position pos:line="42" pos:column="53"/></name><operator pos:line="42" pos:column="53">-&gt;<pos:position pos:line="42" pos:column="58"/></operator><name pos:line="42" pos:column="55">module<pos:position pos:line="42" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="63"/></expr_stmt>
      <expr_stmt><expr><name pos:line="43" pos:column="7">errors<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">+=<pos:position pos:line="43" pos:column="16"/></operator> <call><name pos:line="43" pos:column="17">unload_deplibs<pos:position pos:line="43" pos:column="31"/></name> <argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">handle<pos:position pos:line="43" pos:column="39"/></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="41"/></expr_stmt>

      <comment type="block" pos:line="45" pos:column="7">/* It is up to the callers to free the data itself.  */</comment>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">FREE<pos:position pos:line="46" pos:column="11"/></name> <argument_list pos:line="46" pos:column="12">(<argument><expr><name><name pos:line="46" pos:column="13">cur<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">interface_data<pos:position pos:line="46" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="34"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="48" pos:column="7">FREE<pos:position pos:line="48" pos:column="11"/></name> <argument_list pos:line="48" pos:column="12">(<argument><expr><name><name pos:line="48" pos:column="13">cur<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">-&gt;<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="18">info<pos:position pos:line="48" pos:column="22"/></name><operator pos:line="48" pos:column="22">.<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="23">filename<pos:position pos:line="48" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">FREE<pos:position pos:line="49" pos:column="11"/></name> <argument_list pos:line="49" pos:column="12">(<argument><expr><name><name pos:line="49" pos:column="13">cur<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">info<pos:position pos:line="49" pos:column="22"/></name><operator pos:line="49" pos:column="22">.<pos:position pos:line="49" pos:column="23"/></operator><name pos:line="49" pos:column="23">name<pos:position pos:line="49" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">FREE<pos:position pos:line="50" pos:column="11"/></name> <argument_list pos:line="50" pos:column="12">(<argument><expr><name pos:line="50" pos:column="13">cur<pos:position pos:line="50" pos:column="16"/></name></expr></argument>)<pos:position pos:line="50" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="18"/></expr_stmt>

      <goto pos:line="52" pos:column="7">goto <name pos:line="52" pos:column="12">done<pos:position pos:line="52" pos:column="16"/></name>;<pos:position pos:line="52" pos:column="17"/></goto>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><call><name pos:line="55" pos:column="7">LT_DLIS_RESIDENT<pos:position pos:line="55" pos:column="23"/></name> <argument_list pos:line="55" pos:column="24">(<argument><expr><name pos:line="55" pos:column="25">handle<pos:position pos:line="55" pos:column="31"/></name></expr></argument>)<pos:position pos:line="55" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="33"/></condition><then pos:line="55" pos:column="33">
    <block pos:line="56" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">LT__SETERROR<pos:position pos:line="57" pos:column="19"/></name> <argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">CLOSE_RESIDENT_MODULE<pos:position pos:line="57" pos:column="42"/></name></expr></argument>)<pos:position pos:line="57" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="58" pos:column="7">++<pos:position pos:line="58" pos:column="9"/></operator><name pos:line="58" pos:column="9">errors<pos:position pos:line="58" pos:column="15"/></name></expr>;<pos:position pos:line="58" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

 <label><name pos:line="61" pos:column="2">done<pos:position pos:line="61" pos:column="6"/></name>:<pos:position pos:line="61" pos:column="7"/></label>
  <return pos:line="62" pos:column="3">return <expr><name pos:line="62" pos:column="10">errors<pos:position pos:line="62" pos:column="16"/></name></expr>;<pos:position pos:line="62" pos:column="17"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

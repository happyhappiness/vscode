<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_315_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">camqp_config<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">oconfig_item_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">ci<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <comment type="block" pos:line="1" pos:column="46">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><expr><name pos:line="5" pos:column="10">i<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr>;<pos:position pos:line="5" pos:column="16"/></init> <condition><expr><name pos:line="5" pos:column="17">i<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">&lt;<pos:position pos:line="5" pos:column="23"/></operator> <name><name pos:line="5" pos:column="21">ci<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">-&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">children_num<pos:position pos:line="5" pos:column="37"/></name></name></expr>;<pos:position pos:line="5" pos:column="38"/></condition> <incr><expr><name pos:line="5" pos:column="39">i<pos:position pos:line="5" pos:column="40"/></name><operator pos:line="5" pos:column="40">++<pos:position pos:line="5" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="43"/></control>
    <block pos:line="6" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">oconfig_item_t<pos:position pos:line="7" pos:column="23"/></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">child<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><name><name pos:line="7" pos:column="33">ci<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">children<pos:position pos:line="7" pos:column="45"/></name></name> <operator pos:line="7" pos:column="46">+<pos:position pos:line="7" pos:column="47"/></operator> <name pos:line="7" pos:column="48">i<pos:position pos:line="7" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="50"/></decl_stmt>

        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">strcasecmp<pos:position pos:line="9" pos:column="23"/></name> <argument_list pos:line="9" pos:column="24">(<argument><expr><literal type="string" pos:line="9" pos:column="25">"Publish"<pos:position pos:line="9" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="36">child<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">key<pos:position pos:line="9" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call> <operator pos:line="9" pos:column="48">==<pos:position pos:line="9" pos:column="50"/></operator> <literal type="number" pos:line="9" pos:column="51">0<pos:position pos:line="9" pos:column="52"/></literal></expr>)<pos:position pos:line="9" pos:column="53"/></condition><then pos:line="9" pos:column="53">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="13">camqp_config_connection<pos:position pos:line="10" pos:column="36"/></name> <argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">child<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <comment type="block" pos:line="10" pos:column="45">/* publish = */</comment> <argument><expr><literal type="number" pos:line="10" pos:column="61">1<pos:position pos:line="10" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt></block></then>
        <elseif pos:line="11" pos:column="9">else <if pos:line="11" pos:column="14">if <condition pos:line="11" pos:column="17">(<expr><call><name pos:line="11" pos:column="18">strcasecmp<pos:position pos:line="11" pos:column="28"/></name> <argument_list pos:line="11" pos:column="29">(<argument><expr><literal type="string" pos:line="11" pos:column="30">"Subscribe"<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="43">child<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="50">key<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call> <operator pos:line="11" pos:column="55">==<pos:position pos:line="11" pos:column="57"/></operator> <literal type="number" pos:line="11" pos:column="58">0<pos:position pos:line="11" pos:column="59"/></literal></expr>)<pos:position pos:line="11" pos:column="60"/></condition><then pos:line="11" pos:column="60">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="13">camqp_config_connection<pos:position pos:line="12" pos:column="36"/></name> <argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">child<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <comment type="block" pos:line="12" pos:column="45">/* publish = */</comment> <argument><expr><literal type="number" pos:line="12" pos:column="61">0<pos:position pos:line="12" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt></block></then></if></elseif>
        <else pos:line="13" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="13">WARNING<pos:position pos:line="14" pos:column="20"/></name> <argument_list pos:line="14" pos:column="21">(<argument><expr><literal type="string" pos:line="14" pos:column="22">"amqp plugin: Ignoring unknown config option \"%s\"."<pos:position pos:line="14" pos:column="75"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="15" pos:column="21">child<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">key<pos:position pos:line="15" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt></block></else></if>
    }<pos:position pos:line="16" pos:column="6"/></block></for> <comment type="block" pos:line="16" pos:column="7">/* for (ci-&gt;children_num) */</comment>

    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><literal type="number" pos:line="18" pos:column="13">0<pos:position pos:line="18" pos:column="14"/></literal><operator pos:line="18" pos:column="14">)<pos:position pos:line="18" pos:column="15"/></operator></expr>;<pos:position pos:line="18" pos:column="16"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1699_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wg_format_values<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">ret<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">size_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">ret_len<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">ds_num<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">data_set_t<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">ds<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">value_list_t<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">vl<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="3" pos:column="9">_Bool<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">store_rates<pos:position pos:line="3" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="27"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">offset<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">status<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">gauge_t<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">rates<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name> <argument_list pos:line="9" pos:column="12">(<argument><expr><literal type="number" pos:line="9" pos:column="13">0<pos:position pos:line="9" pos:column="14"/></literal> <operator pos:line="9" pos:column="15">==<pos:position pos:line="9" pos:column="17"/></operator> <call><name pos:line="9" pos:column="18">strcmp<pos:position pos:line="9" pos:column="24"/></name> <argument_list pos:line="9" pos:column="25">(<argument><expr><name><name pos:line="9" pos:column="26">ds<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">type<pos:position pos:line="9" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="36">vl<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">type<pos:position pos:line="9" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">memset<pos:position pos:line="11" pos:column="11"/></name> <argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">ret<pos:position pos:line="11" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="21">ret_len<pos:position pos:line="11" pos:column="28"/></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>

<cpp:define pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">define<pos:position pos:line="13" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="13" pos:column="9">BUFFER_ADD<pos:position pos:line="13" pos:column="19"/></name><parameter_list pos:line="13" pos:column="19">(<parameter><type><modifier pos:line="13" pos:column="20">...<pos:position pos:line="13" pos:column="23"/></modifier></type></parameter>)<pos:position pos:line="13" pos:column="24"/></parameter_list></cpp:macro> <cpp:value pos:line="13" pos:column="25">do { \
    status = ssnprintf (ret + offset, ret_len - offset, \
            __VA_ARGS__); \
    if (status &lt; 1) \
    { \
        sfree (rates); \
        return (-1); \
    } \
    else if (((size_t) status) &gt;= (ret_len - offset)) \
    { \
        sfree (rates); \
        return (-1); \
    } \
    else \
    offset += ((size_t) status); \
} while (0)<pos:position pos:line="28" pos:column="12"/></cpp:value></cpp:define>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name><name pos:line="30" pos:column="9">ds<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">ds<pos:position pos:line="30" pos:column="15"/></name><index pos:line="30" pos:column="15">[<expr><name pos:line="30" pos:column="16">ds_num<pos:position pos:line="30" pos:column="22"/></name></expr>]<pos:position pos:line="30" pos:column="23"/></index></name><operator pos:line="30" pos:column="23">.<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="24">type<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">==<pos:position pos:line="30" pos:column="31"/></operator> <name pos:line="30" pos:column="32">DS_TYPE_GAUGE<pos:position pos:line="30" pos:column="45"/></name></expr>)<pos:position pos:line="30" pos:column="46"/></condition><then pos:line="30" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="9">BUFFER_ADD<pos:position pos:line="31" pos:column="19"/></name> <argument_list pos:line="31" pos:column="20">(<argument><expr><literal type="string" pos:line="31" pos:column="21">"%f"<pos:position pos:line="31" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="27">vl<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">values<pos:position pos:line="31" pos:column="37"/></name><index pos:line="31" pos:column="37">[<expr><name pos:line="31" pos:column="38">ds_num<pos:position pos:line="31" pos:column="44"/></name></expr>]<pos:position pos:line="31" pos:column="45"/></index></name><operator pos:line="31" pos:column="45">.<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="46">gauge<pos:position pos:line="31" pos:column="51"/></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt></block></then>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><name pos:line="32" pos:column="14">store_rates<pos:position pos:line="32" pos:column="25"/></name></expr>)<pos:position pos:line="32" pos:column="26"/></condition><then pos:line="32" pos:column="26">
    <block pos:line="33" pos:column="5">{
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">rates<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">==<pos:position pos:line="34" pos:column="21"/></operator> <name pos:line="34" pos:column="22">NULL<pos:position pos:line="34" pos:column="26"/></name></expr>)<pos:position pos:line="34" pos:column="27"/></condition><then pos:line="34" pos:column="27">
            <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="13">rates<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <call><name pos:line="35" pos:column="21">uc_get_rate<pos:position pos:line="35" pos:column="32"/></name> <argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">ds<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="38">vl<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt></block></then></if>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">rates<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">==<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">NULL<pos:position pos:line="36" pos:column="26"/></name></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27">
        <block pos:line="37" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">WARNING<pos:position pos:line="38" pos:column="20"/></name> <argument_list pos:line="38" pos:column="21">(<argument><expr><literal type="string" pos:line="38" pos:column="22">"format_values: "<pos:position pos:line="38" pos:column="39"/></literal>
                    <literal type="string" pos:line="39" pos:column="21">"uc_get_rate failed."<pos:position pos:line="39" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
            <return pos:line="40" pos:column="13">return <expr><operator pos:line="40" pos:column="20">(<pos:position pos:line="40" pos:column="21"/></operator><operator pos:line="40" pos:column="21">-<pos:position pos:line="40" pos:column="22"/></operator><literal type="number" pos:line="40" pos:column="22">1<pos:position pos:line="40" pos:column="23"/></literal><operator pos:line="40" pos:column="23">)<pos:position pos:line="40" pos:column="24"/></operator></expr>;<pos:position pos:line="40" pos:column="25"/></return>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">BUFFER_ADD<pos:position pos:line="42" pos:column="19"/></name> <argument_list pos:line="42" pos:column="20">(<argument><expr><literal type="string" pos:line="42" pos:column="21">"%g"<pos:position pos:line="42" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="27">rates<pos:position pos:line="42" pos:column="32"/></name><index pos:line="42" pos:column="32">[<expr><name pos:line="42" pos:column="33">ds_num<pos:position pos:line="42" pos:column="39"/></name></expr>]<pos:position pos:line="42" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="44" pos:column="5">else <if pos:line="44" pos:column="10">if <condition pos:line="44" pos:column="13">(<expr><name><name pos:line="44" pos:column="14">ds<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">ds<pos:position pos:line="44" pos:column="20"/></name><index pos:line="44" pos:column="20">[<expr><name pos:line="44" pos:column="21">ds_num<pos:position pos:line="44" pos:column="27"/></name></expr>]<pos:position pos:line="44" pos:column="28"/></index></name><operator pos:line="44" pos:column="28">.<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="29">type<pos:position pos:line="44" pos:column="33"/></name> <operator pos:line="44" pos:column="34">==<pos:position pos:line="44" pos:column="36"/></operator> <name pos:line="44" pos:column="37">DS_TYPE_COUNTER<pos:position pos:line="44" pos:column="52"/></name></expr>)<pos:position pos:line="44" pos:column="53"/></condition><then pos:line="44" pos:column="53">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="9">BUFFER_ADD<pos:position pos:line="45" pos:column="19"/></name> <argument_list pos:line="45" pos:column="20">(<argument><expr><literal type="string" pos:line="45" pos:column="21">"%llu"<pos:position pos:line="45" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="29">vl<pos:position pos:line="45" pos:column="31"/></name><operator pos:line="45" pos:column="31">-&gt;<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="33">values<pos:position pos:line="45" pos:column="39"/></name><index pos:line="45" pos:column="39">[<expr><name pos:line="45" pos:column="40">ds_num<pos:position pos:line="45" pos:column="46"/></name></expr>]<pos:position pos:line="45" pos:column="47"/></index></name><operator pos:line="45" pos:column="47">.<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="48">counter<pos:position pos:line="45" pos:column="55"/></name></expr></argument>)<pos:position pos:line="45" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="57"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><name><name pos:line="46" pos:column="14">ds<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">ds<pos:position pos:line="46" pos:column="20"/></name><index pos:line="46" pos:column="20">[<expr><name pos:line="46" pos:column="21">ds_num<pos:position pos:line="46" pos:column="27"/></name></expr>]<pos:position pos:line="46" pos:column="28"/></index></name><operator pos:line="46" pos:column="28">.<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="29">type<pos:position pos:line="46" pos:column="33"/></name> <operator pos:line="46" pos:column="34">==<pos:position pos:line="46" pos:column="36"/></operator> <name pos:line="46" pos:column="37">DS_TYPE_DERIVE<pos:position pos:line="46" pos:column="51"/></name></expr>)<pos:position pos:line="46" pos:column="52"/></condition><then pos:line="46" pos:column="52">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="9">BUFFER_ADD<pos:position pos:line="47" pos:column="19"/></name> <argument_list pos:line="47" pos:column="20">(<argument><expr><literal type="string" pos:line="47" pos:column="21">"%"<pos:position pos:line="47" pos:column="24"/></literal><name pos:line="47" pos:column="24">PRIi64<pos:position pos:line="47" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="32">vl<pos:position pos:line="47" pos:column="34"/></name><operator pos:line="47" pos:column="34">-&gt;<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="36">values<pos:position pos:line="47" pos:column="42"/></name><index pos:line="47" pos:column="42">[<expr><name pos:line="47" pos:column="43">ds_num<pos:position pos:line="47" pos:column="49"/></name></expr>]<pos:position pos:line="47" pos:column="50"/></index></name><operator pos:line="47" pos:column="50">.<pos:position pos:line="47" pos:column="51"/></operator><name pos:line="47" pos:column="51">derive<pos:position pos:line="47" pos:column="57"/></name></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="59"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="48" pos:column="5">else <if pos:line="48" pos:column="10">if <condition pos:line="48" pos:column="13">(<expr><name><name pos:line="48" pos:column="14">ds<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">-&gt;<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="18">ds<pos:position pos:line="48" pos:column="20"/></name><index pos:line="48" pos:column="20">[<expr><name pos:line="48" pos:column="21">ds_num<pos:position pos:line="48" pos:column="27"/></name></expr>]<pos:position pos:line="48" pos:column="28"/></index></name><operator pos:line="48" pos:column="28">.<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="29">type<pos:position pos:line="48" pos:column="33"/></name> <operator pos:line="48" pos:column="34">==<pos:position pos:line="48" pos:column="36"/></operator> <name pos:line="48" pos:column="37">DS_TYPE_ABSOLUTE<pos:position pos:line="48" pos:column="53"/></name></expr>)<pos:position pos:line="48" pos:column="54"/></condition><then pos:line="48" pos:column="54">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="9">BUFFER_ADD<pos:position pos:line="49" pos:column="19"/></name> <argument_list pos:line="49" pos:column="20">(<argument><expr><literal type="string" pos:line="49" pos:column="21">"%"<pos:position pos:line="49" pos:column="24"/></literal><name pos:line="49" pos:column="24">PRIu64<pos:position pos:line="49" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="32">vl<pos:position pos:line="49" pos:column="34"/></name><operator pos:line="49" pos:column="34">-&gt;<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="36">values<pos:position pos:line="49" pos:column="42"/></name><index pos:line="49" pos:column="42">[<expr><name pos:line="49" pos:column="43">ds_num<pos:position pos:line="49" pos:column="49"/></name></expr>]<pos:position pos:line="49" pos:column="50"/></index></name><operator pos:line="49" pos:column="50">.<pos:position pos:line="49" pos:column="51"/></operator><name pos:line="49" pos:column="51">absolute<pos:position pos:line="49" pos:column="59"/></name></expr></argument>)<pos:position pos:line="49" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="61"/></expr_stmt></block></then></if></elseif>
    <else pos:line="50" pos:column="5">else
    <block pos:line="51" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">ERROR<pos:position pos:line="52" pos:column="14"/></name> <argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="string" pos:line="52" pos:column="16">"format_values plugin: Unknown data source type: %i"<pos:position pos:line="52" pos:column="68"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="53" pos:column="17">ds<pos:position pos:line="53" pos:column="19"/></name><operator pos:line="53" pos:column="19">-&gt;<pos:position pos:line="53" pos:column="24"/></operator><name pos:line="53" pos:column="21">ds<pos:position pos:line="53" pos:column="23"/></name><index pos:line="53" pos:column="23">[<expr><name pos:line="53" pos:column="24">ds_num<pos:position pos:line="53" pos:column="30"/></name></expr>]<pos:position pos:line="53" pos:column="31"/></index></name><operator pos:line="53" pos:column="31">.<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="32">type<pos:position pos:line="53" pos:column="36"/></name></expr></argument>)<pos:position pos:line="53" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">sfree<pos:position pos:line="54" pos:column="14"/></name> <argument_list pos:line="54" pos:column="15">(<argument><expr><name pos:line="54" pos:column="16">rates<pos:position pos:line="54" pos:column="21"/></name></expr></argument>)<pos:position pos:line="54" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="23"/></expr_stmt>
        <return pos:line="55" pos:column="9">return <expr><operator pos:line="55" pos:column="16">(<pos:position pos:line="55" pos:column="17"/></operator><operator pos:line="55" pos:column="17">-<pos:position pos:line="55" pos:column="18"/></operator><literal type="number" pos:line="55" pos:column="18">1<pos:position pos:line="55" pos:column="19"/></literal><operator pos:line="55" pos:column="19">)<pos:position pos:line="55" pos:column="20"/></operator></expr>;<pos:position pos:line="55" pos:column="21"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></else></if>

<cpp:undef pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">undef<pos:position pos:line="58" pos:column="7"/></cpp:directive> <name pos:line="58" pos:column="8">BUFFER_ADD<pos:position pos:line="58" pos:column="18"/></name></cpp:undef>

    <expr_stmt><expr><call><name pos:line="60" pos:column="5">sfree<pos:position pos:line="60" pos:column="10"/></name> <argument_list pos:line="60" pos:column="11">(<argument><expr><name pos:line="60" pos:column="12">rates<pos:position pos:line="60" pos:column="17"/></name></expr></argument>)<pos:position pos:line="60" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="19"/></expr_stmt>
    <return pos:line="61" pos:column="5">return <expr><operator pos:line="61" pos:column="12">(<pos:position pos:line="61" pos:column="13"/></operator><literal type="number" pos:line="61" pos:column="13">0<pos:position pos:line="61" pos:column="14"/></literal><operator pos:line="61" pos:column="14">)<pos:position pos:line="61" pos:column="15"/></operator></expr>;<pos:position pos:line="61" pos:column="16"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

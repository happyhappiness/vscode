<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_485_collectd-4.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">bind_xml<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">data<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list> <comment type="block" pos:line="1" pos:column="40">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">xmlDoc<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">doc<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name pos:line="3" pos:column="17">NULL<pos:position pos:line="3" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">xmlXPathContext<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">xpathCtx<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">NULL<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">xmlXPathObject<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">xpathObj<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">NULL<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">ret<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><operator pos:line="6" pos:column="13">-<pos:position pos:line="6" pos:column="14"/></operator><literal type="number" pos:line="6" pos:column="14">1<pos:position pos:line="6" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">doc<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">xmlParseMemory<pos:position pos:line="9" pos:column="23"/></name> <argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">data<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="31">strlen<pos:position pos:line="9" pos:column="37"/></name> <argument_list pos:line="9" pos:column="38">(<argument><expr><name pos:line="9" pos:column="39">data<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">doc<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">==<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">NULL<pos:position pos:line="10" pos:column="18"/></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name> <argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="string" pos:line="12" pos:column="12">"bind plugin: xmlParseMemory failed."<pos:position pos:line="12" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">xpathCtx<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">xmlXPathNewContext<pos:position pos:line="16" pos:column="32"/></name> <argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">doc<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">xpathCtx<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">==<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">NULL<pos:position pos:line="17" pos:column="23"/></name></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ERROR<pos:position pos:line="19" pos:column="10"/></name> <argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="string" pos:line="19" pos:column="12">"bind plugin: xmlXPathNewContext failed."<pos:position pos:line="19" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">xmlFreeDoc<pos:position pos:line="20" pos:column="15"/></name> <argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">doc<pos:position pos:line="20" pos:column="20"/></name></expr></argument>)<pos:position pos:line="20" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><operator pos:line="21" pos:column="13">-<pos:position pos:line="21" pos:column="14"/></operator><literal type="number" pos:line="21" pos:column="14">1<pos:position pos:line="21" pos:column="15"/></literal><operator pos:line="21" pos:column="15">)<pos:position pos:line="21" pos:column="16"/></operator></expr>;<pos:position pos:line="21" pos:column="17"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="24" pos:column="3">xpathObj<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">xmlXPathEvalExpression<pos:position pos:line="24" pos:column="36"/></name> <argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">BAD_CAST<pos:position pos:line="24" pos:column="46"/></name> <literal type="string" pos:line="24" pos:column="47">"/isc/bind/statistics"<pos:position pos:line="24" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="71">xpathCtx<pos:position pos:line="24" pos:column="79"/></name></expr></argument>)<pos:position pos:line="24" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="81"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">xpathObj<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">==<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">NULL<pos:position pos:line="25" pos:column="23"/></name></expr>)<pos:position pos:line="25" pos:column="24"/></condition><then pos:line="25" pos:column="24">
  <block pos:line="26" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">ERROR<pos:position pos:line="27" pos:column="10"/></name> <argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="string" pos:line="27" pos:column="12">"bind plugin: Cannot find the &lt;statistics&gt; tag."<pos:position pos:line="27" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">xmlXPathFreeContext<pos:position pos:line="28" pos:column="24"/></name> <argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">xpathCtx<pos:position pos:line="28" pos:column="34"/></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">xmlFreeDoc<pos:position pos:line="29" pos:column="15"/></name> <argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">doc<pos:position pos:line="29" pos:column="20"/></name></expr></argument>)<pos:position pos:line="29" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><operator pos:line="30" pos:column="13">-<pos:position pos:line="30" pos:column="14"/></operator><literal type="number" pos:line="30" pos:column="14">1<pos:position pos:line="30" pos:column="15"/></literal><operator pos:line="30" pos:column="15">)<pos:position pos:line="30" pos:column="16"/></operator></expr>;<pos:position pos:line="30" pos:column="17"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then>
  <elseif pos:line="32" pos:column="3">else <if pos:line="32" pos:column="8">if <condition pos:line="32" pos:column="11">(<expr><name><name pos:line="32" pos:column="12">xpathObj<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">nodesetval<pos:position pos:line="32" pos:column="32"/></name></name> <operator pos:line="32" pos:column="33">==<pos:position pos:line="32" pos:column="35"/></operator> <name pos:line="32" pos:column="36">NULL<pos:position pos:line="32" pos:column="40"/></name></expr>)<pos:position pos:line="32" pos:column="41"/></condition><then pos:line="32" pos:column="41">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ERROR<pos:position pos:line="34" pos:column="10"/></name> <argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="string" pos:line="34" pos:column="12">"bind plugin: xmlXPathEvalExpression failed."<pos:position pos:line="34" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">xmlXPathFreeObject<pos:position pos:line="35" pos:column="23"/></name> <argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">xpathObj<pos:position pos:line="35" pos:column="33"/></name></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">xmlXPathFreeContext<pos:position pos:line="36" pos:column="24"/></name> <argument_list pos:line="36" pos:column="25">(<argument><expr><name pos:line="36" pos:column="26">xpathCtx<pos:position pos:line="36" pos:column="34"/></name></expr></argument>)<pos:position pos:line="36" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">xmlFreeDoc<pos:position pos:line="37" pos:column="15"/></name> <argument_list pos:line="37" pos:column="16">(<argument><expr><name pos:line="37" pos:column="17">doc<pos:position pos:line="37" pos:column="20"/></name></expr></argument>)<pos:position pos:line="37" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><operator pos:line="38" pos:column="12">(<pos:position pos:line="38" pos:column="13"/></operator><operator pos:line="38" pos:column="13">-<pos:position pos:line="38" pos:column="14"/></operator><literal type="number" pos:line="38" pos:column="14">1<pos:position pos:line="38" pos:column="15"/></literal><operator pos:line="38" pos:column="15">)<pos:position pos:line="38" pos:column="16"/></operator></expr>;<pos:position pos:line="38" pos:column="17"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if></elseif></if>

  <for pos:line="41" pos:column="3">for <control pos:line="41" pos:column="7">(<init><expr><name pos:line="41" pos:column="8">i<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <literal type="number" pos:line="41" pos:column="12">0<pos:position pos:line="41" pos:column="13"/></literal></expr>;<pos:position pos:line="41" pos:column="14"/></init> <condition><expr><name pos:line="41" pos:column="15">i<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">&lt;<pos:position pos:line="41" pos:column="21"/></operator> <name><name pos:line="41" pos:column="19">xpathObj<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">nodesetval<pos:position pos:line="41" pos:column="39"/></name><operator pos:line="41" pos:column="39">-&gt;<pos:position pos:line="41" pos:column="44"/></operator><name pos:line="41" pos:column="41">nodeNr<pos:position pos:line="41" pos:column="47"/></name></name></expr>;<pos:position pos:line="41" pos:column="48"/></condition> <incr><expr><name pos:line="41" pos:column="49">i<pos:position pos:line="41" pos:column="50"/></name><operator pos:line="41" pos:column="50">++<pos:position pos:line="41" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="53"/></control>
  <block pos:line="42" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="43" pos:column="5">xmlNode<pos:position pos:line="43" pos:column="12"/></name> <modifier pos:line="43" pos:column="13">*<pos:position pos:line="43" pos:column="14"/></modifier></type><name pos:line="43" pos:column="14">node<pos:position pos:line="43" pos:column="18"/></name></decl>;<pos:position pos:line="43" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">char<pos:position pos:line="44" pos:column="9"/></name> <modifier pos:line="44" pos:column="10">*<pos:position pos:line="44" pos:column="11"/></modifier></type><name pos:line="44" pos:column="11">attr_version<pos:position pos:line="44" pos:column="23"/></name></decl>;<pos:position pos:line="44" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="45" pos:column="5">int<pos:position pos:line="45" pos:column="8"/></name></type> <name pos:line="45" pos:column="9">parsed_version<pos:position pos:line="45" pos:column="23"/></name> <init pos:line="45" pos:column="24">= <expr><literal type="number" pos:line="45" pos:column="26">0<pos:position pos:line="45" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="45" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name pos:line="47" pos:column="5">node<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">=<pos:position pos:line="47" pos:column="11"/></operator> <name><name pos:line="47" pos:column="12">xpathObj<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">nodesetval<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">nodeTab<pos:position pos:line="47" pos:column="41"/></name><index pos:line="47" pos:column="41">[<expr><name pos:line="47" pos:column="42">i<pos:position pos:line="47" pos:column="43"/></name></expr>]<pos:position pos:line="47" pos:column="44"/></index></name></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">assert<pos:position pos:line="48" pos:column="11"/></name> <argument_list pos:line="48" pos:column="12">(<argument><expr><name pos:line="48" pos:column="13">node<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">!=<pos:position pos:line="48" pos:column="20"/></operator> <name pos:line="48" pos:column="21">NULL<pos:position pos:line="48" pos:column="25"/></name></expr></argument>)<pos:position pos:line="48" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="50" pos:column="5">attr_version<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <operator pos:line="50" pos:column="20">(<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="21">char<pos:position pos:line="50" pos:column="25"/></name> <operator pos:line="50" pos:column="26">*<pos:position pos:line="50" pos:column="27"/></operator><operator pos:line="50" pos:column="27">)<pos:position pos:line="50" pos:column="28"/></operator> <call><name pos:line="50" pos:column="29">xmlGetProp<pos:position pos:line="50" pos:column="39"/></name> <argument_list pos:line="50" pos:column="40">(<argument><expr><name pos:line="50" pos:column="41">node<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">BAD_CAST<pos:position pos:line="50" pos:column="55"/></name> <literal type="string" pos:line="50" pos:column="56">"version"<pos:position pos:line="50" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="67"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">attr_version<pos:position pos:line="51" pos:column="21"/></name> <operator pos:line="51" pos:column="22">==<pos:position pos:line="51" pos:column="24"/></operator> <name pos:line="51" pos:column="25">NULL<pos:position pos:line="51" pos:column="29"/></name></expr>)<pos:position pos:line="51" pos:column="30"/></condition><then pos:line="51" pos:column="30">
    <block pos:line="52" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">NOTICE<pos:position pos:line="53" pos:column="13"/></name> <argument_list pos:line="53" pos:column="14">(<argument><expr><literal type="string" pos:line="53" pos:column="15">"bind plugin: Found &lt;statistics&gt; tag doesn't have a "<pos:position pos:line="53" pos:column="74"/></literal>
          <literal type="string" pos:line="54" pos:column="11">"`version' attribute."<pos:position pos:line="54" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="35"/></expr_stmt>
      <continue pos:line="55" pos:column="7">continue;<pos:position pos:line="55" pos:column="16"/></continue>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">DEBUG<pos:position pos:line="57" pos:column="10"/></name> <argument_list pos:line="57" pos:column="11">(<argument><expr><literal type="string" pos:line="57" pos:column="12">"bind plugin: Found: &lt;statistics version=\"%s\"&gt;"<pos:position pos:line="57" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="63">attr_version<pos:position pos:line="57" pos:column="75"/></name></expr></argument>)<pos:position pos:line="57" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="77"/></expr_stmt>

    <comment type="block" pos:line="59" pos:column="5">/* At the time this plugin was written, version "1.0" was used by
     * BIND 9.5.0, version "2.0" was used by BIND 9.5.1 and 9.6.0. We assume
     * that "1.*" and "2.*" don't introduce structural changes, so we just
     * check for the first two characters here. */</comment>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><call><name pos:line="63" pos:column="9">strncmp<pos:position pos:line="63" pos:column="16"/></name> <argument_list pos:line="63" pos:column="17">(<argument><expr><literal type="string" pos:line="63" pos:column="18">"1."<pos:position pos:line="63" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="24">attr_version<pos:position pos:line="63" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="38">strlen<pos:position pos:line="63" pos:column="44"/></name> <argument_list pos:line="63" pos:column="45">(<argument><expr><literal type="string" pos:line="63" pos:column="46">"1."<pos:position pos:line="63" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="52"/></argument_list></call> <operator pos:line="63" pos:column="53">==<pos:position pos:line="63" pos:column="55"/></operator> <literal type="number" pos:line="63" pos:column="56">0<pos:position pos:line="63" pos:column="57"/></literal></expr>)<pos:position pos:line="63" pos:column="58"/></condition><then pos:line="63" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="7">parsed_version<pos:position pos:line="64" pos:column="21"/></name> <operator pos:line="64" pos:column="22">=<pos:position pos:line="64" pos:column="23"/></operator> <literal type="number" pos:line="64" pos:column="24">1<pos:position pos:line="64" pos:column="25"/></literal></expr>;<pos:position pos:line="64" pos:column="26"/></expr_stmt></block></then>
    <elseif pos:line="65" pos:column="5">else <if pos:line="65" pos:column="10">if <condition pos:line="65" pos:column="13">(<expr><call><name pos:line="65" pos:column="14">strncmp<pos:position pos:line="65" pos:column="21"/></name> <argument_list pos:line="65" pos:column="22">(<argument><expr><literal type="string" pos:line="65" pos:column="23">"2."<pos:position pos:line="65" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="29">attr_version<pos:position pos:line="65" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="43">strlen<pos:position pos:line="65" pos:column="49"/></name> <argument_list pos:line="65" pos:column="50">(<argument><expr><literal type="string" pos:line="65" pos:column="51">"2."<pos:position pos:line="65" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="57"/></argument_list></call> <operator pos:line="65" pos:column="58">==<pos:position pos:line="65" pos:column="60"/></operator> <literal type="number" pos:line="65" pos:column="61">0<pos:position pos:line="65" pos:column="62"/></literal></expr>)<pos:position pos:line="65" pos:column="63"/></condition><then pos:line="65" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="7">parsed_version<pos:position pos:line="66" pos:column="21"/></name> <operator pos:line="66" pos:column="22">=<pos:position pos:line="66" pos:column="23"/></operator> <literal type="number" pos:line="66" pos:column="24">2<pos:position pos:line="66" pos:column="25"/></literal></expr>;<pos:position pos:line="66" pos:column="26"/></expr_stmt></block></then></if></elseif>
    <else pos:line="67" pos:column="5">else
    <block pos:line="68" pos:column="5">{
      <comment type="block" pos:line="69" pos:column="7">/* TODO: Use the complaint mechanism here. */</comment>
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">NOTICE<pos:position pos:line="70" pos:column="13"/></name> <argument_list pos:line="70" pos:column="14">(<argument><expr><literal type="string" pos:line="70" pos:column="15">"bind plugin: Found &lt;statistics&gt; tag with version `%s'. "<pos:position pos:line="70" pos:column="78"/></literal>
          <literal type="string" pos:line="71" pos:column="11">"Unfortunately I have no clue how to parse that. "<pos:position pos:line="71" pos:column="61"/></literal>
          <literal type="string" pos:line="72" pos:column="11">"Please open a bug report for this."<pos:position pos:line="72" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="49">attr_version<pos:position pos:line="72" pos:column="61"/></name></expr></argument>)<pos:position pos:line="72" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="63"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">xmlFree<pos:position pos:line="73" pos:column="14"/></name> <argument_list pos:line="73" pos:column="15">(<argument><expr><name pos:line="73" pos:column="16">attr_version<pos:position pos:line="73" pos:column="28"/></name></expr></argument>)<pos:position pos:line="73" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="30"/></expr_stmt>
      <continue pos:line="74" pos:column="7">continue;<pos:position pos:line="74" pos:column="16"/></continue>
    }<pos:position pos:line="75" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="77" pos:column="5">ret<pos:position pos:line="77" pos:column="8"/></name> <operator pos:line="77" pos:column="9">=<pos:position pos:line="77" pos:column="10"/></operator> <call><name pos:line="77" pos:column="11">bind_xml_stats<pos:position pos:line="77" pos:column="25"/></name> <argument_list pos:line="77" pos:column="26">(<argument><expr><name pos:line="77" pos:column="27">parsed_version<pos:position pos:line="77" pos:column="41"/></name></expr></argument>,
        <argument><expr><name pos:line="78" pos:column="9">doc<pos:position pos:line="78" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="14">xpathCtx<pos:position pos:line="78" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="24">node<pos:position pos:line="78" pos:column="28"/></name></expr></argument>)<pos:position pos:line="78" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="80" pos:column="5">xmlFree<pos:position pos:line="80" pos:column="12"/></name> <argument_list pos:line="80" pos:column="13">(<argument><expr><name pos:line="80" pos:column="14">attr_version<pos:position pos:line="80" pos:column="26"/></name></expr></argument>)<pos:position pos:line="80" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="28"/></expr_stmt>
    <comment type="block" pos:line="81" pos:column="5">/* One &lt;statistics&gt; node ought to be enough. */</comment>
    <break pos:line="82" pos:column="5">break;<pos:position pos:line="82" pos:column="11"/></break>
  }<pos:position pos:line="83" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="85" pos:column="3">xmlXPathFreeObject<pos:position pos:line="85" pos:column="21"/></name> <argument_list pos:line="85" pos:column="22">(<argument><expr><name pos:line="85" pos:column="23">xpathObj<pos:position pos:line="85" pos:column="31"/></name></expr></argument>)<pos:position pos:line="85" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="86" pos:column="3">xmlXPathFreeContext<pos:position pos:line="86" pos:column="22"/></name> <argument_list pos:line="86" pos:column="23">(<argument><expr><name pos:line="86" pos:column="24">xpathCtx<pos:position pos:line="86" pos:column="32"/></name></expr></argument>)<pos:position pos:line="86" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="87" pos:column="3">xmlFreeDoc<pos:position pos:line="87" pos:column="13"/></name> <argument_list pos:line="87" pos:column="14">(<argument><expr><name pos:line="87" pos:column="15">doc<pos:position pos:line="87" pos:column="18"/></name></expr></argument>)<pos:position pos:line="87" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="20"/></expr_stmt>

  <return pos:line="89" pos:column="3">return <expr><operator pos:line="89" pos:column="10">(<pos:position pos:line="89" pos:column="11"/></operator><name pos:line="89" pos:column="11">ret<pos:position pos:line="89" pos:column="14"/></name><operator pos:line="89" pos:column="14">)<pos:position pos:line="89" pos:column="15"/></operator></expr>;<pos:position pos:line="89" pos:column="16"/></return>
}<pos:position pos:line="90" pos:column="2"/></block></function></unit>

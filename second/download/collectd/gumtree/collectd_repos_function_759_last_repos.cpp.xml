<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_759_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pf_read<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list> <block pos:line="1" pos:column="26">{
  <decl_stmt><decl><type><name><name pos:line="2" pos:column="3">struct<pos:position pos:line="2" pos:column="9"/></name> <name pos:line="2" pos:column="10">pf_status<pos:position pos:line="2" pos:column="19"/></name></name></type> <name pos:line="2" pos:column="20">state<pos:position pos:line="2" pos:column="25"/></name></decl>;<pos:position pos:line="2" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">fd<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">fd<pos:position pos:line="6" pos:column="5"/></name> <operator pos:line="6" pos:column="6">=<pos:position pos:line="6" pos:column="7"/></operator> <call><name pos:line="6" pos:column="8">open<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><name pos:line="6" pos:column="13">pf_device<pos:position pos:line="6" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="24">O_RDONLY<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">fd<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">&lt;<pos:position pos:line="7" pos:column="14"/></operator> <literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>)<pos:position pos:line="7" pos:column="14"/></condition><then pos:line="7" pos:column="14"> <block pos:line="7" pos:column="15">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">errbuf<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><literal type="number" pos:line="8" pos:column="17">1024<pos:position pos:line="8" pos:column="21"/></literal></expr>]<pos:position pos:line="8" pos:column="22"/></index></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ERROR<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="string" pos:line="9" pos:column="11">"pf plugin: Unable to open %s: %s"<pos:position pos:line="9" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="47">pf_device<pos:position pos:line="9" pos:column="56"/></name></expr></argument>,
          <argument><expr><call><name pos:line="10" pos:column="11">sstrerror<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">errno<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="28">errbuf<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="36">sizeof<argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">errbuf<pos:position pos:line="10" pos:column="49"/></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">1<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">status<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">ioctl<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">fd<pos:position pos:line="14" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="22">DIOCGETSTATUS<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="37">&amp;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="38">state<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">status<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">!=<pos:position pos:line="15" pos:column="16"/></operator> <literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19"> <block pos:line="15" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name></type> <name><name pos:line="16" pos:column="10">errbuf<pos:position pos:line="16" pos:column="16"/></name><index pos:line="16" pos:column="16">[<expr><literal type="number" pos:line="16" pos:column="17">1024<pos:position pos:line="16" pos:column="21"/></literal></expr>]<pos:position pos:line="16" pos:column="22"/></index></name></decl>;<pos:position pos:line="16" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ERROR<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><literal type="string" pos:line="17" pos:column="11">"pf plugin: ioctl(DIOCGETSTATUS) failed: %s"<pos:position pos:line="17" pos:column="55"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="18" pos:column="11">sstrerror<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">errno<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="28">errbuf<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="36">sizeof<argument_list pos:line="18" pos:column="42">(<argument><expr><name pos:line="18" pos:column="43">errbuf<pos:position pos:line="18" pos:column="49"/></name></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">close<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><name pos:line="19" pos:column="11">fd<pos:position pos:line="19" pos:column="13"/></name></expr></argument>)<pos:position pos:line="19" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="15"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">-<pos:position pos:line="20" pos:column="13"/></operator><literal type="number" pos:line="20" pos:column="13">1<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">close<pos:position pos:line="23" pos:column="8"/></name><argument_list pos:line="23" pos:column="8">(<argument><expr><name pos:line="23" pos:column="9">fd<pos:position pos:line="23" pos:column="11"/></name></expr></argument>)<pos:position pos:line="23" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="13"/></expr_stmt>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><operator pos:line="25" pos:column="7">!<pos:position pos:line="25" pos:column="8"/></operator><name><name pos:line="25" pos:column="8">state<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">.<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">running<pos:position pos:line="25" pos:column="21"/></name></name></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22"> <block pos:line="25" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">WARNING<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><literal type="string" pos:line="26" pos:column="13">"pf plugin: PF is not running."<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">-<pos:position pos:line="27" pos:column="13"/></operator><literal type="number" pos:line="27" pos:column="13">1<pos:position pos:line="27" pos:column="14"/></literal></expr>;<pos:position pos:line="27" pos:column="15"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <for pos:line="30" pos:column="3">for <control pos:line="30" pos:column="7">(<init><decl><type><name pos:line="30" pos:column="8">int<pos:position pos:line="30" pos:column="11"/></name></type> <name pos:line="30" pos:column="12">i<pos:position pos:line="30" pos:column="13"/></name> <init pos:line="30" pos:column="14">= <expr><literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="18"/></init> <condition><expr><name pos:line="30" pos:column="19">i<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">&lt;<pos:position pos:line="30" pos:column="25"/></operator> <name pos:line="30" pos:column="23">PFRES_MAX<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></condition> <incr><expr><name pos:line="30" pos:column="34">i<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">++<pos:position pos:line="30" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="38"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="5">pf_submit<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><literal type="string" pos:line="31" pos:column="15">"pf_counters"<pos:position pos:line="31" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="30">pf_reasons<pos:position pos:line="31" pos:column="40"/></name><index pos:line="31" pos:column="40">[<expr><name pos:line="31" pos:column="41">i<pos:position pos:line="31" pos:column="42"/></name></expr>]<pos:position pos:line="31" pos:column="43"/></index></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="45">state<pos:position pos:line="31" pos:column="50"/></name><operator pos:line="31" pos:column="50">.<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="51">counters<pos:position pos:line="31" pos:column="59"/></name><index pos:line="31" pos:column="59">[<expr><name pos:line="31" pos:column="60">i<pos:position pos:line="31" pos:column="61"/></name></expr>]<pos:position pos:line="31" pos:column="62"/></index></name></expr></argument>,
              <comment type="block" pos:line="32" pos:column="15">/* is gauge = */</comment> <argument><expr><literal type="number" pos:line="32" pos:column="32">0<pos:position pos:line="32" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt></block></for>
  <for pos:line="33" pos:column="3">for <control pos:line="33" pos:column="7">(<init><decl><type><name pos:line="33" pos:column="8">int<pos:position pos:line="33" pos:column="11"/></name></type> <name pos:line="33" pos:column="12">i<pos:position pos:line="33" pos:column="13"/></name> <init pos:line="33" pos:column="14">= <expr><literal type="number" pos:line="33" pos:column="16">0<pos:position pos:line="33" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="33" pos:column="18"/></init> <condition><expr><name pos:line="33" pos:column="19">i<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">&lt;<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="23">LCNT_MAX<pos:position pos:line="33" pos:column="31"/></name></expr>;<pos:position pos:line="33" pos:column="32"/></condition> <incr><expr><name pos:line="33" pos:column="33">i<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">++<pos:position pos:line="33" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="37"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="5">pf_submit<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><literal type="string" pos:line="34" pos:column="15">"pf_limits"<pos:position pos:line="34" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="28">pf_lcounters<pos:position pos:line="34" pos:column="40"/></name><index pos:line="34" pos:column="40">[<expr><name pos:line="34" pos:column="41">i<pos:position pos:line="34" pos:column="42"/></name></expr>]<pos:position pos:line="34" pos:column="43"/></index></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="45">state<pos:position pos:line="34" pos:column="50"/></name><operator pos:line="34" pos:column="50">.<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="51">lcounters<pos:position pos:line="34" pos:column="60"/></name><index pos:line="34" pos:column="60">[<expr><name pos:line="34" pos:column="61">i<pos:position pos:line="34" pos:column="62"/></name></expr>]<pos:position pos:line="34" pos:column="63"/></index></name></expr></argument>,
              <comment type="block" pos:line="35" pos:column="15">/* is gauge = */</comment> <argument><expr><literal type="number" pos:line="35" pos:column="32">0<pos:position pos:line="35" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt></block></for>
  <for pos:line="36" pos:column="3">for <control pos:line="36" pos:column="7">(<init><decl><type><name pos:line="36" pos:column="8">int<pos:position pos:line="36" pos:column="11"/></name></type> <name pos:line="36" pos:column="12">i<pos:position pos:line="36" pos:column="13"/></name> <init pos:line="36" pos:column="14">= <expr><literal type="number" pos:line="36" pos:column="16">0<pos:position pos:line="36" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="36" pos:column="18"/></init> <condition><expr><name pos:line="36" pos:column="19">i<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">&lt;<pos:position pos:line="36" pos:column="25"/></operator> <name pos:line="36" pos:column="23">FCNT_MAX<pos:position pos:line="36" pos:column="31"/></name></expr>;<pos:position pos:line="36" pos:column="32"/></condition> <incr><expr><name pos:line="36" pos:column="33">i<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">++<pos:position pos:line="36" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="37"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="5">pf_submit<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><literal type="string" pos:line="37" pos:column="15">"pf_state"<pos:position pos:line="37" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="27">pf_fcounters<pos:position pos:line="37" pos:column="39"/></name><index pos:line="37" pos:column="39">[<expr><name pos:line="37" pos:column="40">i<pos:position pos:line="37" pos:column="41"/></name></expr>]<pos:position pos:line="37" pos:column="42"/></index></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="44">state<pos:position pos:line="37" pos:column="49"/></name><operator pos:line="37" pos:column="49">.<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="50">fcounters<pos:position pos:line="37" pos:column="59"/></name><index pos:line="37" pos:column="59">[<expr><name pos:line="37" pos:column="60">i<pos:position pos:line="37" pos:column="61"/></name></expr>]<pos:position pos:line="37" pos:column="62"/></index></name></expr></argument>,
              <comment type="block" pos:line="38" pos:column="15">/* is gauge = */</comment> <argument><expr><literal type="number" pos:line="38" pos:column="32">0<pos:position pos:line="38" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt></block></for>
  <for pos:line="39" pos:column="3">for <control pos:line="39" pos:column="7">(<init><decl><type><name pos:line="39" pos:column="8">int<pos:position pos:line="39" pos:column="11"/></name></type> <name pos:line="39" pos:column="12">i<pos:position pos:line="39" pos:column="13"/></name> <init pos:line="39" pos:column="14">= <expr><literal type="number" pos:line="39" pos:column="16">0<pos:position pos:line="39" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="18"/></init> <condition><expr><name pos:line="39" pos:column="19">i<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">&lt;<pos:position pos:line="39" pos:column="25"/></operator> <name pos:line="39" pos:column="23">SCNT_MAX<pos:position pos:line="39" pos:column="31"/></name></expr>;<pos:position pos:line="39" pos:column="32"/></condition> <incr><expr><name pos:line="39" pos:column="33">i<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">++<pos:position pos:line="39" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="37"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="5">pf_submit<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><literal type="string" pos:line="40" pos:column="15">"pf_source"<pos:position pos:line="40" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="28">pf_scounters<pos:position pos:line="40" pos:column="40"/></name><index pos:line="40" pos:column="40">[<expr><name pos:line="40" pos:column="41">i<pos:position pos:line="40" pos:column="42"/></name></expr>]<pos:position pos:line="40" pos:column="43"/></index></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="45">state<pos:position pos:line="40" pos:column="50"/></name><operator pos:line="40" pos:column="50">.<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="51">scounters<pos:position pos:line="40" pos:column="60"/></name><index pos:line="40" pos:column="60">[<expr><name pos:line="40" pos:column="61">i<pos:position pos:line="40" pos:column="62"/></name></expr>]<pos:position pos:line="40" pos:column="63"/></index></name></expr></argument>,
              <comment type="block" pos:line="41" pos:column="15">/* is gauge = */</comment> <argument><expr><literal type="number" pos:line="41" pos:column="32">0<pos:position pos:line="41" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt></block></for>

  <expr_stmt><expr><call><name pos:line="43" pos:column="3">pf_submit<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><literal type="string" pos:line="43" pos:column="13">"pf_states"<pos:position pos:line="43" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="26">"current"<pos:position pos:line="43" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="37">(<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="38">uint32_t<pos:position pos:line="43" pos:column="46"/></name><operator pos:line="43" pos:column="46">)<pos:position pos:line="43" pos:column="47"/></operator><name><name pos:line="43" pos:column="47">state<pos:position pos:line="43" pos:column="52"/></name><operator pos:line="43" pos:column="52">.<pos:position pos:line="43" pos:column="53"/></operator><name pos:line="43" pos:column="53">states<pos:position pos:line="43" pos:column="59"/></name></name></expr></argument>,
            <comment type="block" pos:line="44" pos:column="13">/* is gauge = */</comment> <argument><expr><literal type="number" pos:line="44" pos:column="30">1<pos:position pos:line="44" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>

  <return pos:line="46" pos:column="3">return <expr><literal type="number" pos:line="46" pos:column="10">0<pos:position pos:line="46" pos:column="11"/></literal></expr>;<pos:position pos:line="46" pos:column="12"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

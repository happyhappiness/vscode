<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_967_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">powerdns_read<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list> <block pos:line="1" pos:column="32">{
  <for pos:line="2" pos:column="3">for <control pos:line="2" pos:column="7">(<init><decl><type><name pos:line="2" pos:column="8">llentry_t<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">e<pos:position pos:line="2" pos:column="20"/></name> <init pos:line="2" pos:column="21">= <expr><call><name pos:line="2" pos:column="23">llist_head<pos:position pos:line="2" pos:column="33"/></name><argument_list pos:line="2" pos:column="33">(<argument><expr><name pos:line="2" pos:column="34">list<pos:position pos:line="2" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="40"/></init> <condition><expr><name pos:line="2" pos:column="41">e<pos:position pos:line="2" pos:column="42"/></name> <operator pos:line="2" pos:column="43">!=<pos:position pos:line="2" pos:column="45"/></operator> <name pos:line="2" pos:column="46">NULL<pos:position pos:line="2" pos:column="50"/></name></expr>;<pos:position pos:line="2" pos:column="51"/></condition> <incr><expr><name pos:line="2" pos:column="52">e<pos:position pos:line="2" pos:column="53"/></name> <operator pos:line="2" pos:column="54">=<pos:position pos:line="2" pos:column="55"/></operator> <name><name pos:line="2" pos:column="56">e<pos:position pos:line="2" pos:column="57"/></name><operator pos:line="2" pos:column="57">-&gt;<pos:position pos:line="2" pos:column="62"/></operator><name pos:line="2" pos:column="59">next<pos:position pos:line="2" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="2" pos:column="64"/></control> <block pos:line="2" pos:column="65">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">list_item_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">item<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><name><name pos:line="3" pos:column="25">e<pos:position pos:line="3" pos:column="26"/></name><operator pos:line="3" pos:column="26">-&gt;<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="28">value<pos:position pos:line="3" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">item<pos:position pos:line="4" pos:column="9"/></name><operator pos:line="4" pos:column="9">-&gt;<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="11">func<pos:position pos:line="4" pos:column="15"/></name></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">item<pos:position pos:line="4" pos:column="20"/></name></expr></argument>)<pos:position pos:line="4" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="5" pos:column="4"/></block></for>

  <return pos:line="7" pos:column="3">return <expr><operator pos:line="7" pos:column="10">(<pos:position pos:line="7" pos:column="11"/></operator><literal type="number" pos:line="7" pos:column="11">0<pos:position pos:line="7" pos:column="12"/></literal><operator pos:line="7" pos:column="12">)<pos:position pos:line="7" pos:column="13"/></operator></expr>;<pos:position pos:line="7" pos:column="14"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

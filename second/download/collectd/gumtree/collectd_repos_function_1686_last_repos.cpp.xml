<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1686_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">snmp_agent_scalar_oid_handler<pos:position pos:line="2" pos:column="30"/></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">netsnmp_mib_handler_s<pos:position pos:line="2" pos:column="59"/></name></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">handler<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
                              <parameter><decl><type><name><name pos:line="3" pos:column="31">struct<pos:position pos:line="3" pos:column="37"/></name> <name pos:line="3" pos:column="38">netsnmp_handler_registration_s<pos:position pos:line="3" pos:column="68"/></name></name> <modifier pos:line="3" pos:column="69">*<pos:position pos:line="3" pos:column="70"/></modifier></type><name pos:line="3" pos:column="70">reginfo<pos:position pos:line="3" pos:column="77"/></name></decl></parameter>,
                              <parameter><decl><type><name><name pos:line="4" pos:column="31">struct<pos:position pos:line="4" pos:column="37"/></name> <name pos:line="4" pos:column="38">netsnmp_agent_request_info_s<pos:position pos:line="4" pos:column="66"/></name></name> <modifier pos:line="4" pos:column="67">*<pos:position pos:line="4" pos:column="68"/></modifier></type><name pos:line="4" pos:column="68">reqinfo<pos:position pos:line="4" pos:column="75"/></name></decl></parameter>,
                              <parameter><decl><type><name><name pos:line="5" pos:column="31">struct<pos:position pos:line="5" pos:column="37"/></name> <name pos:line="5" pos:column="38">netsnmp_request_info_s<pos:position pos:line="5" pos:column="60"/></name></name> <modifier pos:line="5" pos:column="61">*<pos:position pos:line="5" pos:column="62"/></modifier></type><name pos:line="5" pos:column="62">requests<pos:position pos:line="5" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="71"/></parameter_list> <block pos:line="5" pos:column="72">{

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">reqinfo<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">mode<pos:position pos:line="7" pos:column="20"/></name></name> <operator pos:line="7" pos:column="21">!=<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">MODE_GET<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">&amp;&amp;<pos:position pos:line="7" pos:column="43"/></operator> <name><name pos:line="7" pos:column="36">reqinfo<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">mode<pos:position pos:line="7" pos:column="49"/></name></name> <operator pos:line="7" pos:column="50">!=<pos:position pos:line="7" pos:column="52"/></operator> <name pos:line="7" pos:column="53">MODE_GETNEXT<pos:position pos:line="7" pos:column="65"/></name></expr>)<pos:position pos:line="7" pos:column="66"/></condition><then pos:line="7" pos:column="66"> <block pos:line="7" pos:column="67">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">DEBUG<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><name pos:line="8" pos:column="11">PLUGIN_NAME<pos:position pos:line="8" pos:column="22"/></name> <literal type="string" pos:line="8" pos:column="23">": Not supported request mode (%d)"<pos:position pos:line="8" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="60">reqinfo<pos:position pos:line="8" pos:column="67"/></name><operator pos:line="8" pos:column="67">-&gt;<pos:position pos:line="8" pos:column="72"/></operator><name pos:line="8" pos:column="69">mode<pos:position pos:line="8" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="75"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">SNMP_ERR_NOERROR<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">pthread_mutex_lock<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><operator pos:line="12" pos:column="22">&amp;<pos:position pos:line="12" pos:column="27"/></operator><name><name pos:line="12" pos:column="23">g_agent<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">lock<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">oid_t<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">oid<pos:position pos:line="14" pos:column="12"/></name></decl>;<pos:position pos:line="14" pos:column="13"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">memcpy<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><name><name pos:line="15" pos:column="10">oid<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">.<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">oid<pos:position pos:line="15" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="19">requests<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">requestvb<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">name<pos:position pos:line="15" pos:column="44"/></name></name></expr></argument>,
         <argument><expr><sizeof pos:line="16" pos:column="10">sizeof<argument_list pos:line="16" pos:column="16">(<argument><expr><name><name pos:line="16" pos:column="17">oid<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">oid<pos:position pos:line="16" pos:column="24"/></name><index pos:line="16" pos:column="24">[<expr><literal type="number" pos:line="16" pos:column="25">0<pos:position pos:line="16" pos:column="26"/></literal></expr>]<pos:position pos:line="16" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="16" pos:column="28"/></argument_list></sizeof> <operator pos:line="16" pos:column="29">*<pos:position pos:line="16" pos:column="30"/></operator> <name><name pos:line="16" pos:column="31">requests<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">requestvb<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">name_length<pos:position pos:line="16" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">oid<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">.<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">oid_len<pos:position pos:line="17" pos:column="14"/></name></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <name><name pos:line="17" pos:column="17">requests<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">requestvb<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">name_length<pos:position pos:line="17" pos:column="49"/></name></name></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>

<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">COLLECT_DEBUG<pos:position pos:line="19" pos:column="18"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">char<pos:position pos:line="20" pos:column="7"/></name></type> <name><name pos:line="20" pos:column="8">oid_str<pos:position pos:line="20" pos:column="15"/></name><index pos:line="20" pos:column="15">[<expr><name pos:line="20" pos:column="16">DATA_MAX_NAME_LEN<pos:position pos:line="20" pos:column="33"/></name></expr>]<pos:position pos:line="20" pos:column="34"/></index></name></decl>;<pos:position pos:line="20" pos:column="35"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">snmp_agent_oid_to_string<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">oid_str<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="37">sizeof<argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">oid_str<pos:position pos:line="21" pos:column="51"/></name></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="21" pos:column="54">&amp;<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="55">oid<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">DEBUG<pos:position pos:line="22" pos:column="8"/></name><argument_list pos:line="22" pos:column="8">(<argument><expr><name pos:line="22" pos:column="9">PLUGIN_NAME<pos:position pos:line="22" pos:column="20"/></name> <literal type="string" pos:line="22" pos:column="21">": Get request received for scalar OID '%s'"<pos:position pos:line="22" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="67">oid_str<pos:position pos:line="22" pos:column="74"/></name></expr></argument>)<pos:position pos:line="22" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="76"/></expr_stmt>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>

  <for pos:line="25" pos:column="3">for <control pos:line="25" pos:column="7">(<init><decl><type><name pos:line="25" pos:column="8">llentry_t<pos:position pos:line="25" pos:column="17"/></name> <modifier pos:line="25" pos:column="18">*<pos:position pos:line="25" pos:column="19"/></modifier></type><name pos:line="25" pos:column="19">de<pos:position pos:line="25" pos:column="21"/></name> <init pos:line="25" pos:column="22">= <expr><call><name pos:line="25" pos:column="24">llist_head<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name><name pos:line="25" pos:column="35">g_agent<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">scalars<pos:position pos:line="25" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="53"/></init> <condition><expr><name pos:line="25" pos:column="54">de<pos:position pos:line="25" pos:column="56"/></name> <operator pos:line="25" pos:column="57">!=<pos:position pos:line="25" pos:column="59"/></operator> <name pos:line="25" pos:column="60">NULL<pos:position pos:line="25" pos:column="64"/></name></expr>;<pos:position pos:line="25" pos:column="65"/></condition>
       <incr><expr><name pos:line="26" pos:column="8">de<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <name><name pos:line="26" pos:column="13">de<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">next<pos:position pos:line="26" pos:column="21"/></name></name></expr></incr>)<pos:position pos:line="26" pos:column="22"/></control> <block pos:line="26" pos:column="23">{
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">data_definition_t<pos:position pos:line="27" pos:column="22"/></name> <modifier pos:line="27" pos:column="23">*<pos:position pos:line="27" pos:column="24"/></modifier></type><name pos:line="27" pos:column="24">dd<pos:position pos:line="27" pos:column="26"/></name> <init pos:line="27" pos:column="27">= <expr><name><name pos:line="27" pos:column="29">de<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">-&gt;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="33">value<pos:position pos:line="27" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="27" pos:column="39"/></decl_stmt>

    <for pos:line="29" pos:column="5">for <control pos:line="29" pos:column="9">(<init><decl><type><name pos:line="29" pos:column="10">size_t<pos:position pos:line="29" pos:column="16"/></name></type> <name pos:line="29" pos:column="17">i<pos:position pos:line="29" pos:column="18"/></name> <init pos:line="29" pos:column="19">= <expr><literal type="number" pos:line="29" pos:column="21">0<pos:position pos:line="29" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="23"/></init> <condition><expr><name pos:line="29" pos:column="24">i<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">&lt;<pos:position pos:line="29" pos:column="30"/></operator> <name><name pos:line="29" pos:column="28">dd<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">oids_len<pos:position pos:line="29" pos:column="40"/></name></name></expr>;<pos:position pos:line="29" pos:column="41"/></condition> <incr><expr><name pos:line="29" pos:column="42">i<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">++<pos:position pos:line="29" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="46"/></control> <block pos:line="29" pos:column="47">{

      <decl_stmt><decl><type><name pos:line="31" pos:column="7">int<pos:position pos:line="31" pos:column="10"/></name></type> <name pos:line="31" pos:column="11">ret<pos:position pos:line="31" pos:column="14"/></name> <init pos:line="31" pos:column="15">= <expr><call><name pos:line="31" pos:column="17">snmp_oid_compare<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">(<argument><expr><name><name pos:line="31" pos:column="34">oid<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">.<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">oid<pos:position pos:line="31" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="43">oid<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">.<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="47">oid_len<pos:position pos:line="31" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="56">dd<pos:position pos:line="31" pos:column="58"/></name><operator pos:line="31" pos:column="58">-&gt;<pos:position pos:line="31" pos:column="63"/></operator><name pos:line="31" pos:column="60">oids<pos:position pos:line="31" pos:column="64"/></name><index pos:line="31" pos:column="64">[<expr><name pos:line="31" pos:column="65">i<pos:position pos:line="31" pos:column="66"/></name></expr>]<pos:position pos:line="31" pos:column="67"/></index></name><operator pos:line="31" pos:column="67">.<pos:position pos:line="31" pos:column="68"/></operator><name pos:line="31" pos:column="68">oid<pos:position pos:line="31" pos:column="71"/></name></expr></argument>,
                                 <argument><expr><name><name pos:line="32" pos:column="34">dd<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">oids<pos:position pos:line="32" pos:column="42"/></name><index pos:line="32" pos:column="42">[<expr><name pos:line="32" pos:column="43">i<pos:position pos:line="32" pos:column="44"/></name></expr>]<pos:position pos:line="32" pos:column="45"/></index></name><operator pos:line="32" pos:column="45">.<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="46">oid_len<pos:position pos:line="32" pos:column="53"/></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="55"/></decl_stmt>
      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><name pos:line="33" pos:column="11">ret<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">!=<pos:position pos:line="33" pos:column="17"/></operator> <literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr>)<pos:position pos:line="33" pos:column="20"/></condition><then pos:line="33" pos:column="20">
        <block type="pseudo"><continue pos:line="34" pos:column="9">continue;<pos:position pos:line="34" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><name pos:line="36" pos:column="7">ret<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <call><name pos:line="36" pos:column="13">snmp_agent_form_reply<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">requests<pos:position pos:line="36" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="45">dd<pos:position pos:line="36" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="49">NULL<pos:position pos:line="36" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="55">i<pos:position pos:line="36" pos:column="56"/></name></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="58"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="38" pos:column="7">pthread_mutex_unlock<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><operator pos:line="38" pos:column="28">&amp;<pos:position pos:line="38" pos:column="33"/></operator><name><name pos:line="38" pos:column="29">g_agent<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-&gt;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="38">lock<pos:position pos:line="38" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="44"/></expr_stmt>

      <return pos:line="40" pos:column="7">return <expr><name pos:line="40" pos:column="14">ret<pos:position pos:line="40" pos:column="17"/></name></expr>;<pos:position pos:line="40" pos:column="18"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></for>
  }<pos:position pos:line="42" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="44" pos:column="3">pthread_mutex_unlock<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><operator pos:line="44" pos:column="24">&amp;<pos:position pos:line="44" pos:column="29"/></operator><name><name pos:line="44" pos:column="25">g_agent<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">lock<pos:position pos:line="44" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>

  <return pos:line="46" pos:column="3">return <expr><name pos:line="46" pos:column="10">SNMP_NOSUCHINSTANCE<pos:position pos:line="46" pos:column="29"/></name></expr>;<pos:position pos:line="46" pos:column="30"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

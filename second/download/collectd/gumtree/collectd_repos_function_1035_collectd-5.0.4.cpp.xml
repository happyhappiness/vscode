<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1035_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">plugin_read<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list> <comment type="block" pos:line="1" pos:column="31">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">unsigned<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">int<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">i<pos:position pos:line="3" pos:column="17"/></name><init pos:line="3" pos:column="17">=<expr><literal type="number" pos:line="3" pos:column="18">0<pos:position pos:line="3" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">pinba_statnode_t<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">data<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  
  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">i<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <call><name pos:line="6" pos:column="15">service_statnode_collect<pos:position pos:line="6" pos:column="39"/></name> <argument_list pos:line="6" pos:column="40">(<argument><expr><operator pos:line="6" pos:column="41">&amp;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="42">data<pos:position pos:line="6" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="48">i<pos:position pos:line="6" pos:column="49"/></name></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call><operator pos:line="6" pos:column="50">)<pos:position pos:line="6" pos:column="51"/></operator> <operator pos:line="6" pos:column="52">!=<pos:position pos:line="6" pos:column="54"/></operator> <literal type="number" pos:line="6" pos:column="55">0<pos:position pos:line="6" pos:column="56"/></literal></expr>)<pos:position pos:line="6" pos:column="57"/></condition>
  <block pos:line="7" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">plugin_submit<pos:position pos:line="8" pos:column="18"/></name> <argument_list pos:line="8" pos:column="19">(<argument><expr><operator pos:line="8" pos:column="20">&amp;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="21">data<pos:position pos:line="8" pos:column="25"/></name></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></while>
  
  <return pos:line="11" pos:column="3">return <expr><literal type="number" pos:line="11" pos:column="10">0<pos:position pos:line="11" pos:column="11"/></literal></expr>;<pos:position pos:line="11" pos:column="12"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

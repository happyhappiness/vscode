<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_413_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nut_add_ups<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">name<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list> <block pos:line="1" pos:column="42">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">nut_ups_t<pos:position pos:line="2" pos:column="12"/></name> <modifier pos:line="2" pos:column="13">*<pos:position pos:line="2" pos:column="14"/></modifier></type><name pos:line="2" pos:column="14">ups<pos:position pos:line="2" pos:column="17"/></name></decl>;<pos:position pos:line="2" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">cb_name<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">DEBUG<pos:position pos:line="6" pos:column="8"/></name><argument_list pos:line="6" pos:column="8">(<argument><expr><literal type="string" pos:line="6" pos:column="9">"nut plugin: nut_add_ups (name = %s);"<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="49">name<pos:position pos:line="6" pos:column="53"/></name></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">ups<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <call><name pos:line="8" pos:column="9">calloc<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">1<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="19">sizeof<argument_list pos:line="8" pos:column="25">(<argument><expr><operator pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">ups<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">ups<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">==<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">NULL<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19"> <block pos:line="9" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"nut plugin: nut_add_ups: calloc failed."<pos:position pos:line="10" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">1<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">status<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">upscli_splitname<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">name<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="35">&amp;<pos:position pos:line="14" pos:column="40"/></operator><name><name pos:line="14" pos:column="36">ups<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">-&gt;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="41">upsname<pos:position pos:line="14" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="50">&amp;<pos:position pos:line="14" pos:column="55"/></operator><name><name pos:line="14" pos:column="51">ups<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">-&gt;<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="56">hostname<pos:position pos:line="14" pos:column="64"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="66">&amp;<pos:position pos:line="14" pos:column="71"/></operator><name><name pos:line="14" pos:column="67">ups<pos:position pos:line="14" pos:column="70"/></name><operator pos:line="14" pos:column="70">-&gt;<pos:position pos:line="14" pos:column="75"/></operator><name pos:line="14" pos:column="72">port<pos:position pos:line="14" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="78"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">status<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">!=<pos:position pos:line="15" pos:column="16"/></operator> <literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19"> <block pos:line="15" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">ERROR<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><literal type="string" pos:line="16" pos:column="11">"nut plugin: nut_add_ups: upscli_splitname (%s) failed."<pos:position pos:line="16" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="69">name<pos:position pos:line="16" pos:column="73"/></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">free_nut_ups_t<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">ups<pos:position pos:line="17" pos:column="23"/></name></expr></argument>)<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><literal type="number" pos:line="18" pos:column="12">1<pos:position pos:line="18" pos:column="13"/></literal></expr>;<pos:position pos:line="18" pos:column="14"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="21" pos:column="3">cb_name<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <call><name pos:line="21" pos:column="13">ssnprintf_alloc<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><literal type="string" pos:line="21" pos:column="29">"nut/%s"<pos:position pos:line="21" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">name<pos:position pos:line="21" pos:column="43"/></name></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><name pos:line="23" pos:column="3">status<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <call><name pos:line="23" pos:column="12">plugin_register_complex_read<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(
      <comment type="block" pos:line="24" pos:column="7">/* group     = */</comment> <argument><expr><literal type="string" pos:line="24" pos:column="25">"nut"<pos:position pos:line="24" pos:column="30"/></literal></expr></argument>,
      <comment type="block" pos:line="25" pos:column="7">/* name      = */</comment> <argument><expr><name pos:line="25" pos:column="25">cb_name<pos:position pos:line="25" pos:column="32"/></name></expr></argument>,
      <comment type="block" pos:line="26" pos:column="7">/* callback  = */</comment> <argument><expr><name pos:line="26" pos:column="25">nut_read<pos:position pos:line="26" pos:column="33"/></name></expr></argument>,
      <comment type="block" pos:line="27" pos:column="7">/* interval  = */</comment> <argument><expr><literal type="number" pos:line="27" pos:column="25">0<pos:position pos:line="27" pos:column="26"/></literal></expr></argument>,
      <comment type="block" pos:line="28" pos:column="7">/* user_data = */</comment> <argument><expr><operator pos:line="28" pos:column="25">&amp;<pos:position pos:line="28" pos:column="30"/></operator><operator pos:line="28" pos:column="26">(<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="27">user_data_t<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">)<pos:position pos:line="28" pos:column="39"/></operator><block pos:line="28" pos:column="39">{
          <expr><operator pos:line="29" pos:column="11">.<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="12">data<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">ups<pos:position pos:line="29" pos:column="22"/></name></expr>, <expr><operator pos:line="29" pos:column="24">.<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="25">free_func<pos:position pos:line="29" pos:column="34"/></name> <operator pos:line="29" pos:column="35">=<pos:position pos:line="29" pos:column="36"/></operator> <name pos:line="29" pos:column="37">free_nut_ups_t<pos:position pos:line="29" pos:column="51"/></name></expr>,
      }<pos:position pos:line="30" pos:column="8"/></block></expr></argument>)<pos:position pos:line="30" pos:column="9"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="10"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">sfree<pos:position pos:line="32" pos:column="8"/></name><argument_list pos:line="32" pos:column="8">(<argument><expr><name pos:line="32" pos:column="9">cb_name<pos:position pos:line="32" pos:column="16"/></name></expr></argument>)<pos:position pos:line="32" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="18"/></expr_stmt>

  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">status<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">==<pos:position pos:line="34" pos:column="16"/></operator> <name pos:line="34" pos:column="17">EINVAL<pos:position pos:line="34" pos:column="23"/></name></expr>)<pos:position pos:line="34" pos:column="24"/></condition><then pos:line="34" pos:column="24"> <block pos:line="34" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">WARNING<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><literal type="string" pos:line="35" pos:column="13">"nut plugin: UPS \"%s\" already added. "<pos:position pos:line="35" pos:column="53"/></literal>
            <literal type="string" pos:line="36" pos:column="13">"Please check your configuration."<pos:position pos:line="36" pos:column="47"/></literal></expr></argument>,
            <argument><expr><name pos:line="37" pos:column="13">name<pos:position pos:line="37" pos:column="17"/></name></expr></argument>)<pos:position pos:line="37" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><operator pos:line="38" pos:column="12">-<pos:position pos:line="38" pos:column="13"/></operator><literal type="number" pos:line="38" pos:column="13">1<pos:position pos:line="38" pos:column="14"/></literal></expr>;<pos:position pos:line="38" pos:column="15"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <return pos:line="41" pos:column="3">return <expr><literal type="number" pos:line="41" pos:column="10">0<pos:position pos:line="41" pos:column="11"/></literal></expr>;<pos:position pos:line="41" pos:column="12"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

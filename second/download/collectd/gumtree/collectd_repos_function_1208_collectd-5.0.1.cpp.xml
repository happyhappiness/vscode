<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1208_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rrd_shutdown<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">pthread_mutex_lock<pos:position pos:line="3" pos:column="27"/></name> <argument_list pos:line="3" pos:column="28">(<argument><expr><operator pos:line="3" pos:column="29">&amp;<pos:position pos:line="3" pos:column="34"/></operator><name pos:line="3" pos:column="30">cache_lock<pos:position pos:line="3" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">rrd_cache_flush<pos:position pos:line="4" pos:column="24"/></name> <argument_list pos:line="4" pos:column="25">(<argument><expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">pthread_mutex_unlock<pos:position pos:line="5" pos:column="29"/></name> <argument_list pos:line="5" pos:column="30">(<argument><expr><operator pos:line="5" pos:column="31">&amp;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="32">cache_lock<pos:position pos:line="5" pos:column="42"/></name></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">pthread_mutex_lock<pos:position pos:line="7" pos:column="27"/></name> <argument_list pos:line="7" pos:column="28">(<argument><expr><operator pos:line="7" pos:column="29">&amp;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="30">queue_lock<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">do_shutdown<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <literal type="number" pos:line="8" pos:column="23">1<pos:position pos:line="8" pos:column="24"/></literal></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">pthread_cond_signal<pos:position pos:line="9" pos:column="28"/></name> <argument_list pos:line="9" pos:column="29">(<argument><expr><operator pos:line="9" pos:column="30">&amp;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="31">queue_cond<pos:position pos:line="9" pos:column="41"/></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">pthread_mutex_unlock<pos:position pos:line="10" pos:column="29"/></name> <argument_list pos:line="10" pos:column="30">(<argument><expr><operator pos:line="10" pos:column="31">&amp;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="32">queue_lock<pos:position pos:line="10" pos:column="42"/></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">queue_thread_running<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">!=<pos:position pos:line="12" pos:column="37"/></operator> <literal type="number" pos:line="12" pos:column="38">0<pos:position pos:line="12" pos:column="39"/></literal><operator pos:line="12" pos:column="39">)<pos:position pos:line="12" pos:column="40"/></operator>
			<operator pos:line="13" pos:column="25">&amp;&amp;<pos:position pos:line="13" pos:column="35"/></operator> <operator pos:line="13" pos:column="28">(<pos:position pos:line="13" pos:column="29"/></operator><operator pos:line="13" pos:column="29">(<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">queue_head<pos:position pos:line="13" pos:column="40"/></name> <operator pos:line="13" pos:column="41">!=<pos:position pos:line="13" pos:column="43"/></operator> <name pos:line="13" pos:column="44">NULL<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">)<pos:position pos:line="13" pos:column="49"/></operator> <operator pos:line="13" pos:column="50">||<pos:position pos:line="13" pos:column="52"/></operator> <operator pos:line="13" pos:column="53">(<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="54">flushq_head<pos:position pos:line="13" pos:column="65"/></name> <operator pos:line="13" pos:column="66">!=<pos:position pos:line="13" pos:column="68"/></operator> <name pos:line="13" pos:column="69">NULL<pos:position pos:line="13" pos:column="73"/></name><operator pos:line="13" pos:column="73">)<pos:position pos:line="13" pos:column="74"/></operator><operator pos:line="13" pos:column="74">)<pos:position pos:line="13" pos:column="75"/></operator></expr>)<pos:position pos:line="13" pos:column="76"/></condition><then pos:line="13" pos:column="76">
	<block pos:line="14" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">INFO<pos:position pos:line="15" pos:column="21"/></name> <argument_list pos:line="15" pos:column="22">(<argument><expr><literal type="string" pos:line="15" pos:column="23">"rrdtool plugin: Shutting down the queue thread. "<pos:position pos:line="15" pos:column="73"/></literal>
				<literal type="string" pos:line="16" pos:column="33">"This may take a while."<pos:position pos:line="16" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then>
	<elseif pos:line="18" pos:column="9">else <if pos:line="18" pos:column="14">if <condition pos:line="18" pos:column="17">(<expr><name pos:line="18" pos:column="18">queue_thread_running<pos:position pos:line="18" pos:column="38"/></name> <operator pos:line="18" pos:column="39">!=<pos:position pos:line="18" pos:column="41"/></operator> <literal type="number" pos:line="18" pos:column="42">0<pos:position pos:line="18" pos:column="43"/></literal></expr>)<pos:position pos:line="18" pos:column="44"/></condition><then pos:line="18" pos:column="44">
	<block pos:line="19" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">INFO<pos:position pos:line="20" pos:column="21"/></name> <argument_list pos:line="20" pos:column="22">(<argument><expr><literal type="string" pos:line="20" pos:column="23">"rrdtool plugin: Shutting down the queue thread."<pos:position pos:line="20" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if></elseif></if>

	<comment type="block" pos:line="23" pos:column="9">/* Wait for all the values to be written to disk before returning. */</comment>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">queue_thread_running<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">!=<pos:position pos:line="24" pos:column="36"/></operator> <literal type="number" pos:line="24" pos:column="37">0<pos:position pos:line="24" pos:column="38"/></literal></expr>)<pos:position pos:line="24" pos:column="39"/></condition><then pos:line="24" pos:column="39">
	<block pos:line="25" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">pthread_join<pos:position pos:line="26" pos:column="29"/></name> <argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">queue_thread<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">NULL<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">memset<pos:position pos:line="27" pos:column="23"/></name> <argument_list pos:line="27" pos:column="24">(<argument><expr><operator pos:line="27" pos:column="25">&amp;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="26">queue_thread<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="40">0<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="43">sizeof <argument_list pos:line="27" pos:column="50">(<argument><expr><name pos:line="27" pos:column="51">queue_thread<pos:position pos:line="27" pos:column="63"/></name></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">queue_thread_running<pos:position pos:line="28" pos:column="37"/></name> <operator pos:line="28" pos:column="38">=<pos:position pos:line="28" pos:column="39"/></operator> <literal type="number" pos:line="28" pos:column="40">0<pos:position pos:line="28" pos:column="41"/></literal></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">DEBUG<pos:position pos:line="29" pos:column="22"/></name> <argument_list pos:line="29" pos:column="23">(<argument><expr><literal type="string" pos:line="29" pos:column="24">"rrdtool plugin: queue_thread exited."<pos:position pos:line="29" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">rrd_cache_destroy<pos:position pos:line="32" pos:column="26"/></name> <argument_list pos:line="32" pos:column="27">()<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>

	<return pos:line="34" pos:column="9">return <expr><operator pos:line="34" pos:column="16">(<pos:position pos:line="34" pos:column="17"/></operator><literal type="number" pos:line="34" pos:column="17">0<pos:position pos:line="34" pos:column="18"/></literal><operator pos:line="34" pos:column="18">)<pos:position pos:line="34" pos:column="19"/></operator></expr>;<pos:position pos:line="34" pos:column="20"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

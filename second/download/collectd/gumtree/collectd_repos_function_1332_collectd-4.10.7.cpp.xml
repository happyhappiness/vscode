<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1332_collectd-4.10.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">madwifi_config<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">key<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">value<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">init_state<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">!=<pos:position pos:line="3" pos:column="26"/></operator> <literal type="number" pos:line="3" pos:column="27">1<pos:position pos:line="3" pos:column="28"/></literal></expr>)<pos:position pos:line="3" pos:column="29"/></condition><then pos:line="3" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="17">madwifi_real_init<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">()<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="37"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="5" pos:column="9">init_state<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">=<pos:position pos:line="5" pos:column="21"/></operator> <literal type="number" pos:line="5" pos:column="22">1<pos:position pos:line="5" pos:column="23"/></literal></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">ignorelist<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">==<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">ignorelist<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <call><name pos:line="8" pos:column="30">ignorelist_create<pos:position pos:line="8" pos:column="47"/></name> <argument_list pos:line="8" pos:column="48">(<comment type="block" pos:line="8" pos:column="49">/* invert = */</comment> <argument><expr><literal type="number" pos:line="8" pos:column="64">1<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="67"/></expr_stmt></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">strcasecmp<pos:position pos:line="10" pos:column="23"/></name> <argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">key<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="30">"Interface"<pos:position pos:line="10" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call> <operator pos:line="10" pos:column="43">==<pos:position pos:line="10" pos:column="45"/></operator> <literal type="number" pos:line="10" pos:column="46">0<pos:position pos:line="10" pos:column="47"/></literal></expr>)<pos:position pos:line="10" pos:column="48"/></condition><then pos:line="10" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">ignorelist_add<pos:position pos:line="11" pos:column="31"/></name> <argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">ignorelist<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">value<pos:position pos:line="11" pos:column="50"/></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt></block></then>

	<elseif pos:line="13" pos:column="9">else <if pos:line="13" pos:column="14">if <condition pos:line="13" pos:column="17">(<expr><call><name pos:line="13" pos:column="18">strcasecmp<pos:position pos:line="13" pos:column="28"/></name> <argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">key<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="35">"IgnoreSelected"<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call> <operator pos:line="13" pos:column="53">==<pos:position pos:line="13" pos:column="55"/></operator> <literal type="number" pos:line="13" pos:column="56">0<pos:position pos:line="13" pos:column="57"/></literal></expr>)<pos:position pos:line="13" pos:column="58"/></condition><then pos:line="13" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">ignorelist_set_invert<pos:position pos:line="14" pos:column="38"/></name> <argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">ignorelist<pos:position pos:line="14" pos:column="50"/></name></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="14" pos:column="52">IS_TRUE<pos:position pos:line="14" pos:column="59"/></name> <argument_list pos:line="14" pos:column="60">(<argument><expr><name pos:line="14" pos:column="61">value<pos:position pos:line="14" pos:column="66"/></name></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr> ?<pos:position pos:line="14" pos:column="69"/></condition><then pos:line="14" pos:column="69"> <expr><literal type="number" pos:line="14" pos:column="70">0<pos:position pos:line="14" pos:column="71"/></literal></expr> <pos:position pos:line="14" pos:column="72"/></then><else pos:line="14" pos:column="72">: <expr><literal type="number" pos:line="14" pos:column="74">1<pos:position pos:line="14" pos:column="75"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="14" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="77"/></expr_stmt></block></then></if></elseif>

	<elseif pos:line="16" pos:column="9">else <if pos:line="16" pos:column="14">if <condition pos:line="16" pos:column="17">(<expr><call><name pos:line="16" pos:column="18">strcasecmp<pos:position pos:line="16" pos:column="28"/></name> <argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">key<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="35">"Source"<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call> <operator pos:line="16" pos:column="45">==<pos:position pos:line="16" pos:column="47"/></operator> <literal type="number" pos:line="16" pos:column="48">0<pos:position pos:line="16" pos:column="49"/></literal></expr>)<pos:position pos:line="16" pos:column="50"/></condition><then pos:line="16" pos:column="50">
	<block pos:line="17" pos:column="9">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><call><name pos:line="18" pos:column="21">strcasecmp<pos:position pos:line="18" pos:column="31"/></name> <argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">value<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="40">"ProcFS"<pos:position pos:line="18" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call> <operator pos:line="18" pos:column="50">==<pos:position pos:line="18" pos:column="52"/></operator> <literal type="number" pos:line="18" pos:column="53">0<pos:position pos:line="18" pos:column="54"/></literal></expr>)<pos:position pos:line="18" pos:column="55"/></condition><then pos:line="18" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="25">use_sysfs<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">=<pos:position pos:line="19" pos:column="36"/></operator> <literal type="number" pos:line="19" pos:column="37">0<pos:position pos:line="19" pos:column="38"/></literal></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt></block></then>
		<elseif pos:line="20" pos:column="17">else <if pos:line="20" pos:column="22">if <condition pos:line="20" pos:column="25">(<expr><call><name pos:line="20" pos:column="26">strcasecmp<pos:position pos:line="20" pos:column="36"/></name> <argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">value<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="45">"SysFS"<pos:position pos:line="20" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call> <operator pos:line="20" pos:column="54">==<pos:position pos:line="20" pos:column="56"/></operator> <literal type="number" pos:line="20" pos:column="57">0<pos:position pos:line="20" pos:column="58"/></literal></expr>)<pos:position pos:line="20" pos:column="59"/></condition><then pos:line="20" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="25">use_sysfs<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">=<pos:position pos:line="21" pos:column="36"/></operator> <literal type="number" pos:line="21" pos:column="37">1<pos:position pos:line="21" pos:column="38"/></literal></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt></block></then></if></elseif>
		<else pos:line="22" pos:column="17">else
		<block pos:line="23" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">ERROR<pos:position pos:line="24" pos:column="30"/></name> <argument_list pos:line="24" pos:column="31">(<argument><expr><literal type="string" pos:line="24" pos:column="32">"madwifi plugin: The argument of the `Source' "<pos:position pos:line="24" pos:column="79"/></literal>
					<literal type="string" pos:line="25" pos:column="41">"option must either be `SysFS' or "<pos:position pos:line="25" pos:column="76"/></literal>
					<literal type="string" pos:line="26" pos:column="41">"`ProcFS'."<pos:position pos:line="26" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="54"/></expr_stmt>
			<return pos:line="27" pos:column="25">return <expr><operator pos:line="27" pos:column="32">-<pos:position pos:line="27" pos:column="33"/></operator><literal type="number" pos:line="27" pos:column="33">1<pos:position pos:line="27" pos:column="34"/></literal></expr>;<pos:position pos:line="27" pos:column="35"/></return>
		}<pos:position pos:line="28" pos:column="18"/></block></else></if>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if></elseif>

	<elseif pos:line="31" pos:column="9">else <if pos:line="31" pos:column="14">if <condition pos:line="31" pos:column="17">(<expr><call><name pos:line="31" pos:column="18">strcasecmp<pos:position pos:line="31" pos:column="28"/></name> <argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">key<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="35">"WatchSet"<pos:position pos:line="31" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call> <operator pos:line="31" pos:column="47">==<pos:position pos:line="31" pos:column="49"/></operator> <literal type="number" pos:line="31" pos:column="50">0<pos:position pos:line="31" pos:column="51"/></literal></expr>)<pos:position pos:line="31" pos:column="52"/></condition><then pos:line="31" pos:column="52">
	<block pos:line="32" pos:column="9">{
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><call><name pos:line="33" pos:column="21">strcasecmp<pos:position pos:line="33" pos:column="31"/></name> <argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">value<pos:position pos:line="33" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="40">"All"<pos:position pos:line="33" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call> <operator pos:line="33" pos:column="47">==<pos:position pos:line="33" pos:column="49"/></operator> <literal type="number" pos:line="33" pos:column="50">0<pos:position pos:line="33" pos:column="51"/></literal></expr>)<pos:position pos:line="33" pos:column="52"/></condition><then pos:line="33" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="25">watchlist_set<pos:position pos:line="34" pos:column="38"/></name> <argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">watch_items<pos:position pos:line="34" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="53">0xFFFFFFFF<pos:position pos:line="34" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="65"/></expr_stmt></block></then>
		<elseif pos:line="35" pos:column="17">else <if pos:line="35" pos:column="22">if <condition pos:line="35" pos:column="25">(<expr><call><name pos:line="35" pos:column="26">strcasecmp<pos:position pos:line="35" pos:column="36"/></name> <argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">value<pos:position pos:line="35" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="45">"None"<pos:position pos:line="35" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call> <operator pos:line="35" pos:column="53">==<pos:position pos:line="35" pos:column="55"/></operator> <literal type="number" pos:line="35" pos:column="56">0<pos:position pos:line="35" pos:column="57"/></literal></expr>)<pos:position pos:line="35" pos:column="58"/></condition><then pos:line="35" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="25">watchlist_set<pos:position pos:line="36" pos:column="38"/></name> <argument_list pos:line="36" pos:column="39">(<argument><expr><name pos:line="36" pos:column="40">watch_items<pos:position pos:line="36" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="53">0<pos:position pos:line="36" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt></block></then></if></elseif>
		<else pos:line="37" pos:column="17">else <block type="pseudo"><return pos:line="37" pos:column="22">return <expr><operator pos:line="37" pos:column="29">-<pos:position pos:line="37" pos:column="30"/></operator><literal type="number" pos:line="37" pos:column="30">1<pos:position pos:line="37" pos:column="31"/></literal></expr>;<pos:position pos:line="37" pos:column="32"/></return></block></else></if>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if></elseif>

	<elseif pos:line="40" pos:column="9">else <if pos:line="40" pos:column="14">if <condition pos:line="40" pos:column="17">(<expr><call><name pos:line="40" pos:column="18">strcasecmp<pos:position pos:line="40" pos:column="28"/></name> <argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">key<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="35">"WatchAdd"<pos:position pos:line="40" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></call> <operator pos:line="40" pos:column="47">==<pos:position pos:line="40" pos:column="49"/></operator> <literal type="number" pos:line="40" pos:column="50">0<pos:position pos:line="40" pos:column="51"/></literal></expr>)<pos:position pos:line="40" pos:column="52"/></condition><then pos:line="40" pos:column="52">
	<block pos:line="41" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="42" pos:column="17">int<pos:position pos:line="42" pos:column="20"/></name></type> <name pos:line="42" pos:column="21">id<pos:position pos:line="42" pos:column="23"/></name> <init pos:line="42" pos:column="24">= <expr><call><name pos:line="42" pos:column="26">watchitem_find<pos:position pos:line="42" pos:column="40"/></name> <argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">value<pos:position pos:line="42" pos:column="47"/></name></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="49"/></decl_stmt>

		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">id<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">&lt;<pos:position pos:line="44" pos:column="28"/></operator> <literal type="number" pos:line="44" pos:column="26">0<pos:position pos:line="44" pos:column="27"/></literal></expr>)<pos:position pos:line="44" pos:column="28"/></condition><then pos:line="44" pos:column="28">
			<block type="pseudo"><return pos:line="45" pos:column="25">return <expr><operator pos:line="45" pos:column="32">(<pos:position pos:line="45" pos:column="33"/></operator><operator pos:line="45" pos:column="33">-<pos:position pos:line="45" pos:column="34"/></operator><literal type="number" pos:line="45" pos:column="34">1<pos:position pos:line="45" pos:column="35"/></literal><operator pos:line="45" pos:column="35">)<pos:position pos:line="45" pos:column="36"/></operator></expr>;<pos:position pos:line="45" pos:column="37"/></return></block></then>
		<else pos:line="46" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="25">watchlist_add<pos:position pos:line="47" pos:column="38"/></name> <argument_list pos:line="47" pos:column="39">(<argument><expr><name pos:line="47" pos:column="40">watch_items<pos:position pos:line="47" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="53">id<pos:position pos:line="47" pos:column="55"/></name></expr></argument>)<pos:position pos:line="47" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="57"/></expr_stmt></block></else></if>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if></elseif>

	<elseif pos:line="50" pos:column="9">else <if pos:line="50" pos:column="14">if <condition pos:line="50" pos:column="17">(<expr><call><name pos:line="50" pos:column="18">strcasecmp<pos:position pos:line="50" pos:column="28"/></name> <argument_list pos:line="50" pos:column="29">(<argument><expr><name pos:line="50" pos:column="30">key<pos:position pos:line="50" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="35">"WatchRemove"<pos:position pos:line="50" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call> <operator pos:line="50" pos:column="50">==<pos:position pos:line="50" pos:column="52"/></operator> <literal type="number" pos:line="50" pos:column="53">0<pos:position pos:line="50" pos:column="54"/></literal></expr>)<pos:position pos:line="50" pos:column="55"/></condition><then pos:line="50" pos:column="55">
	<block pos:line="51" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="52" pos:column="17">int<pos:position pos:line="52" pos:column="20"/></name></type> <name pos:line="52" pos:column="21">id<pos:position pos:line="52" pos:column="23"/></name> <init pos:line="52" pos:column="24">= <expr><call><name pos:line="52" pos:column="26">watchitem_find<pos:position pos:line="52" pos:column="40"/></name> <argument_list pos:line="52" pos:column="41">(<argument><expr><name pos:line="52" pos:column="42">value<pos:position pos:line="52" pos:column="47"/></name></expr></argument>)<pos:position pos:line="52" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="49"/></decl_stmt>

		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><name pos:line="54" pos:column="21">id<pos:position pos:line="54" pos:column="23"/></name> <operator pos:line="54" pos:column="24">&lt;<pos:position pos:line="54" pos:column="28"/></operator> <literal type="number" pos:line="54" pos:column="26">0<pos:position pos:line="54" pos:column="27"/></literal></expr>)<pos:position pos:line="54" pos:column="28"/></condition><then pos:line="54" pos:column="28">
			<block type="pseudo"><return pos:line="55" pos:column="25">return <expr><operator pos:line="55" pos:column="32">(<pos:position pos:line="55" pos:column="33"/></operator><operator pos:line="55" pos:column="33">-<pos:position pos:line="55" pos:column="34"/></operator><literal type="number" pos:line="55" pos:column="34">1<pos:position pos:line="55" pos:column="35"/></literal><operator pos:line="55" pos:column="35">)<pos:position pos:line="55" pos:column="36"/></operator></expr>;<pos:position pos:line="55" pos:column="37"/></return></block></then>
		<else pos:line="56" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="25">watchlist_remove<pos:position pos:line="57" pos:column="41"/></name> <argument_list pos:line="57" pos:column="42">(<argument><expr><name pos:line="57" pos:column="43">watch_items<pos:position pos:line="57" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="56">id<pos:position pos:line="57" pos:column="58"/></name></expr></argument>)<pos:position pos:line="57" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="60"/></expr_stmt></block></else></if>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if></elseif>

	<elseif pos:line="60" pos:column="9">else <if pos:line="60" pos:column="14">if <condition pos:line="60" pos:column="17">(<expr><call><name pos:line="60" pos:column="18">strcasecmp<pos:position pos:line="60" pos:column="28"/></name> <argument_list pos:line="60" pos:column="29">(<argument><expr><name pos:line="60" pos:column="30">key<pos:position pos:line="60" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="35">"MiscSet"<pos:position pos:line="60" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="45"/></argument_list></call> <operator pos:line="60" pos:column="46">==<pos:position pos:line="60" pos:column="48"/></operator> <literal type="number" pos:line="60" pos:column="49">0<pos:position pos:line="60" pos:column="50"/></literal></expr>)<pos:position pos:line="60" pos:column="51"/></condition><then pos:line="60" pos:column="51">
	<block pos:line="61" pos:column="9">{
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><call><name pos:line="62" pos:column="21">strcasecmp<pos:position pos:line="62" pos:column="31"/></name> <argument_list pos:line="62" pos:column="32">(<argument><expr><name pos:line="62" pos:column="33">value<pos:position pos:line="62" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="40">"All"<pos:position pos:line="62" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call> <operator pos:line="62" pos:column="47">==<pos:position pos:line="62" pos:column="49"/></operator> <literal type="number" pos:line="62" pos:column="50">0<pos:position pos:line="62" pos:column="51"/></literal></expr>)<pos:position pos:line="62" pos:column="52"/></condition><then pos:line="62" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="25">watchlist_set<pos:position pos:line="63" pos:column="38"/></name> <argument_list pos:line="63" pos:column="39">(<argument><expr><name pos:line="63" pos:column="40">misc_items<pos:position pos:line="63" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="52">0xFFFFFFFF<pos:position pos:line="63" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="64"/></expr_stmt></block></then>
		<elseif pos:line="64" pos:column="17">else <if pos:line="64" pos:column="22">if <condition pos:line="64" pos:column="25">(<expr><call><name pos:line="64" pos:column="26">strcasecmp<pos:position pos:line="64" pos:column="36"/></name> <argument_list pos:line="64" pos:column="37">(<argument><expr><name pos:line="64" pos:column="38">value<pos:position pos:line="64" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="45">"None"<pos:position pos:line="64" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></call> <operator pos:line="64" pos:column="53">==<pos:position pos:line="64" pos:column="55"/></operator> <literal type="number" pos:line="64" pos:column="56">0<pos:position pos:line="64" pos:column="57"/></literal></expr>)<pos:position pos:line="64" pos:column="58"/></condition><then pos:line="64" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="25">watchlist_set<pos:position pos:line="65" pos:column="38"/></name> <argument_list pos:line="65" pos:column="39">(<argument><expr><name pos:line="65" pos:column="40">misc_items<pos:position pos:line="65" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="52">0<pos:position pos:line="65" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="55"/></expr_stmt></block></then></if></elseif>
		<else pos:line="66" pos:column="17">else <block type="pseudo"><return pos:line="66" pos:column="22">return <expr><operator pos:line="66" pos:column="29">-<pos:position pos:line="66" pos:column="30"/></operator><literal type="number" pos:line="66" pos:column="30">1<pos:position pos:line="66" pos:column="31"/></literal></expr>;<pos:position pos:line="66" pos:column="32"/></return></block></else></if>
	}<pos:position pos:line="67" pos:column="10"/></block></then></if></elseif>

	<elseif pos:line="69" pos:column="9">else <if pos:line="69" pos:column="14">if <condition pos:line="69" pos:column="17">(<expr><call><name pos:line="69" pos:column="18">strcasecmp<pos:position pos:line="69" pos:column="28"/></name> <argument_list pos:line="69" pos:column="29">(<argument><expr><name pos:line="69" pos:column="30">key<pos:position pos:line="69" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="35">"MiscAdd"<pos:position pos:line="69" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="45"/></argument_list></call> <operator pos:line="69" pos:column="46">==<pos:position pos:line="69" pos:column="48"/></operator> <literal type="number" pos:line="69" pos:column="49">0<pos:position pos:line="69" pos:column="50"/></literal></expr>)<pos:position pos:line="69" pos:column="51"/></condition><then pos:line="69" pos:column="51">
	<block pos:line="70" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="71" pos:column="17">int<pos:position pos:line="71" pos:column="20"/></name></type> <name pos:line="71" pos:column="21">id<pos:position pos:line="71" pos:column="23"/></name> <init pos:line="71" pos:column="24">= <expr><call><name pos:line="71" pos:column="26">watchitem_find<pos:position pos:line="71" pos:column="40"/></name> <argument_list pos:line="71" pos:column="41">(<argument><expr><name pos:line="71" pos:column="42">value<pos:position pos:line="71" pos:column="47"/></name></expr></argument>)<pos:position pos:line="71" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="71" pos:column="49"/></decl_stmt>

		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name pos:line="73" pos:column="21">id<pos:position pos:line="73" pos:column="23"/></name> <operator pos:line="73" pos:column="24">&lt;<pos:position pos:line="73" pos:column="28"/></operator> <literal type="number" pos:line="73" pos:column="26">0<pos:position pos:line="73" pos:column="27"/></literal></expr>)<pos:position pos:line="73" pos:column="28"/></condition><then pos:line="73" pos:column="28">
			<block type="pseudo"><return pos:line="74" pos:column="25">return <expr><operator pos:line="74" pos:column="32">(<pos:position pos:line="74" pos:column="33"/></operator><operator pos:line="74" pos:column="33">-<pos:position pos:line="74" pos:column="34"/></operator><literal type="number" pos:line="74" pos:column="34">1<pos:position pos:line="74" pos:column="35"/></literal><operator pos:line="74" pos:column="35">)<pos:position pos:line="74" pos:column="36"/></operator></expr>;<pos:position pos:line="74" pos:column="37"/></return></block></then>
		<else pos:line="75" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="25">watchlist_add<pos:position pos:line="76" pos:column="38"/></name> <argument_list pos:line="76" pos:column="39">(<argument><expr><name pos:line="76" pos:column="40">misc_items<pos:position pos:line="76" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="52">id<pos:position pos:line="76" pos:column="54"/></name></expr></argument>)<pos:position pos:line="76" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="56"/></expr_stmt></block></else></if>
	}<pos:position pos:line="77" pos:column="10"/></block></then></if></elseif>

	<elseif pos:line="79" pos:column="9">else <if pos:line="79" pos:column="14">if <condition pos:line="79" pos:column="17">(<expr><call><name pos:line="79" pos:column="18">strcasecmp<pos:position pos:line="79" pos:column="28"/></name> <argument_list pos:line="79" pos:column="29">(<argument><expr><name pos:line="79" pos:column="30">key<pos:position pos:line="79" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="35">"MiscRemove"<pos:position pos:line="79" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="48"/></argument_list></call> <operator pos:line="79" pos:column="49">==<pos:position pos:line="79" pos:column="51"/></operator> <literal type="number" pos:line="79" pos:column="52">0<pos:position pos:line="79" pos:column="53"/></literal></expr>)<pos:position pos:line="79" pos:column="54"/></condition><then pos:line="79" pos:column="54">
	<block pos:line="80" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="81" pos:column="17">int<pos:position pos:line="81" pos:column="20"/></name></type> <name pos:line="81" pos:column="21">id<pos:position pos:line="81" pos:column="23"/></name> <init pos:line="81" pos:column="24">= <expr><call><name pos:line="81" pos:column="26">watchitem_find<pos:position pos:line="81" pos:column="40"/></name> <argument_list pos:line="81" pos:column="41">(<argument><expr><name pos:line="81" pos:column="42">value<pos:position pos:line="81" pos:column="47"/></name></expr></argument>)<pos:position pos:line="81" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="81" pos:column="49"/></decl_stmt>

		<if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><name pos:line="83" pos:column="21">id<pos:position pos:line="83" pos:column="23"/></name> <operator pos:line="83" pos:column="24">&lt;<pos:position pos:line="83" pos:column="28"/></operator> <literal type="number" pos:line="83" pos:column="26">0<pos:position pos:line="83" pos:column="27"/></literal></expr>)<pos:position pos:line="83" pos:column="28"/></condition><then pos:line="83" pos:column="28">
			<block type="pseudo"><return pos:line="84" pos:column="25">return <expr><operator pos:line="84" pos:column="32">(<pos:position pos:line="84" pos:column="33"/></operator><operator pos:line="84" pos:column="33">-<pos:position pos:line="84" pos:column="34"/></operator><literal type="number" pos:line="84" pos:column="34">1<pos:position pos:line="84" pos:column="35"/></literal><operator pos:line="84" pos:column="35">)<pos:position pos:line="84" pos:column="36"/></operator></expr>;<pos:position pos:line="84" pos:column="37"/></return></block></then>
		<else pos:line="85" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="25">watchlist_remove<pos:position pos:line="86" pos:column="41"/></name> <argument_list pos:line="86" pos:column="42">(<argument><expr><name pos:line="86" pos:column="43">misc_items<pos:position pos:line="86" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="55">id<pos:position pos:line="86" pos:column="57"/></name></expr></argument>)<pos:position pos:line="86" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="59"/></expr_stmt></block></else></if>
	}<pos:position pos:line="87" pos:column="10"/></block></then></if></elseif>

	<else pos:line="89" pos:column="9">else
		<block type="pseudo"><return pos:line="90" pos:column="17">return <expr><operator pos:line="90" pos:column="24">(<pos:position pos:line="90" pos:column="25"/></operator><operator pos:line="90" pos:column="25">-<pos:position pos:line="90" pos:column="26"/></operator><literal type="number" pos:line="90" pos:column="26">1<pos:position pos:line="90" pos:column="27"/></literal><operator pos:line="90" pos:column="27">)<pos:position pos:line="90" pos:column="28"/></operator></expr>;<pos:position pos:line="90" pos:column="29"/></return></block></else></if>

	<return pos:line="92" pos:column="9">return <expr><operator pos:line="92" pos:column="16">(<pos:position pos:line="92" pos:column="17"/></operator><literal type="number" pos:line="92" pos:column="17">0<pos:position pos:line="92" pos:column="18"/></literal><operator pos:line="92" pos:column="18">)<pos:position pos:line="92" pos:column="19"/></operator></expr>;<pos:position pos:line="92" pos:column="20"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

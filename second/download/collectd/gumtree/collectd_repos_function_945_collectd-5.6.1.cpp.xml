<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_945_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_cpuacct_root<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">dirname<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">filename<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">void<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">user_data<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">abs_path<pos:position pos:line="4" pos:column="22"/></name><index pos:line="4" pos:column="22">[<expr><name pos:line="4" pos:column="23">PATH_MAX<pos:position pos:line="4" pos:column="31"/></name></expr>]<pos:position pos:line="4" pos:column="32"/></index></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">stat<pos:position pos:line="5" pos:column="20"/></name></name></type> <name pos:line="5" pos:column="21">statbuf<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">status<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">ssnprintf<pos:position pos:line="8" pos:column="18"/></name> <argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">abs_path<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="30">sizeof <argument_list pos:line="8" pos:column="37">(<argument><expr><name pos:line="8" pos:column="38">abs_path<pos:position pos:line="8" pos:column="46"/></name></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="49">"%s/%s"<pos:position pos:line="8" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="58">dirname<pos:position pos:line="8" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="67">filename<pos:position pos:line="8" pos:column="75"/></name></expr></argument>)<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="77"/></expr_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">status<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <call><name pos:line="10" pos:column="18">lstat<pos:position pos:line="10" pos:column="23"/></name> <argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">abs_path<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="35">&amp;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="36">statbuf<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">status<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">!=<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
	<block pos:line="12" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">ERROR<pos:position pos:line="13" pos:column="22"/></name> <argument_list pos:line="13" pos:column="23">(<argument><expr><literal type="string" pos:line="13" pos:column="24">"cgroups plugin: stat (%s) failed."<pos:position pos:line="13" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="61">abs_path<pos:position pos:line="13" pos:column="69"/></name></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="71"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">S_ISDIR<pos:position pos:line="17" pos:column="20"/></name> <argument_list pos:line="17" pos:column="21">(<argument><expr><name><name pos:line="17" pos:column="22">statbuf<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">.<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">st_mode<pos:position pos:line="17" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39">
	<block pos:line="18" pos:column="9">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">status<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <call><name pos:line="19" pos:column="26">walk_directory<pos:position pos:line="19" pos:column="40"/></name> <argument_list pos:line="19" pos:column="41">(<argument><expr><name pos:line="19" pos:column="42">abs_path<pos:position pos:line="19" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="52">read_cpuacct_procs<pos:position pos:line="19" pos:column="70"/></name></expr></argument>,
				<comment type="block" pos:line="20" pos:column="33">/* user_data = */</comment> <argument><expr><name pos:line="20" pos:column="51">NULL<pos:position pos:line="20" pos:column="55"/></name></expr></argument>,
				<comment type="block" pos:line="21" pos:column="33">/* include_hidden = */</comment> <argument><expr><literal type="number" pos:line="21" pos:column="56">0<pos:position pos:line="21" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>
		<return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">status<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">)<pos:position pos:line="22" pos:column="32"/></operator></expr>;<pos:position pos:line="22" pos:column="33"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<return pos:line="25" pos:column="9">return <expr><operator pos:line="25" pos:column="16">(<pos:position pos:line="25" pos:column="17"/></operator><literal type="number" pos:line="25" pos:column="17">0<pos:position pos:line="25" pos:column="18"/></literal><operator pos:line="25" pos:column="18">)<pos:position pos:line="25" pos:column="19"/></operator></expr>;<pos:position pos:line="25" pos:column="20"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

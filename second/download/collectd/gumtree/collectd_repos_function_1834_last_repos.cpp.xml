<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1834_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cx_handle_single_value_xpath<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">xmlXPathContextPtr<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">xpath_ctx<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="71">/* {{{ */</comment>
                                        <parameter><decl><type><name pos:line="2" pos:column="41">cx_xpath_t<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">xpath<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="60">const<pos:position pos:line="2" pos:column="65"/></specifier> <name pos:line="2" pos:column="66">data_set_t<pos:position pos:line="2" pos:column="76"/></name> <modifier pos:line="2" pos:column="77">*<pos:position pos:line="2" pos:column="78"/></modifier></type><name pos:line="2" pos:column="78">ds<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="3" pos:column="41">value_list_t<pos:position pos:line="3" pos:column="53"/></name> <modifier pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></modifier></type><name pos:line="3" pos:column="55">vl<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="59">int<pos:position pos:line="3" pos:column="62"/></name></type> <name pos:line="3" pos:column="63">index<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="69"/></parameter_list> <block pos:line="3" pos:column="70">{

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">node_value<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><call><name pos:line="5" pos:column="22">cx_get_text_node_value<pos:position pos:line="5" pos:column="44"/></name><argument_list pos:line="5" pos:column="44">(
      <argument><expr><name pos:line="6" pos:column="7">xpath_ctx<pos:position pos:line="6" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="18">xpath<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">values<pos:position pos:line="6" pos:column="31"/></name><index pos:line="6" pos:column="31">[<expr><name pos:line="6" pos:column="32">index<pos:position pos:line="6" pos:column="37"/></name></expr>]<pos:position pos:line="6" pos:column="38"/></index></name><operator pos:line="6" pos:column="38">.<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="39">path<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="45">"ValuesFrom"<pos:position pos:line="6" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="59"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">node_value<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="21">NULL<pos:position pos:line="8" pos:column="25"/></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">-<pos:position pos:line="9" pos:column="13"/></operator><literal type="number" pos:line="9" pos:column="13">1<pos:position pos:line="9" pos:column="14"/></literal></expr>;<pos:position pos:line="9" pos:column="15"/></return></block></then></if>

  <switch pos:line="11" pos:column="3">switch <condition pos:line="11" pos:column="10">(<expr><name><name pos:line="11" pos:column="11">ds<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">ds<pos:position pos:line="11" pos:column="17"/></name><index pos:line="11" pos:column="17">[<expr><name pos:line="11" pos:column="18">index<pos:position pos:line="11" pos:column="23"/></name></expr>]<pos:position pos:line="11" pos:column="24"/></index></name><operator pos:line="11" pos:column="24">.<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">type<pos:position pos:line="11" pos:column="29"/></name></expr>)<pos:position pos:line="11" pos:column="30"/></condition> <block pos:line="11" pos:column="31">{
  <case pos:line="12" pos:column="3">case <expr><name pos:line="12" pos:column="8">DS_TYPE_COUNTER<pos:position pos:line="12" pos:column="23"/></name></expr>:<pos:position pos:line="12" pos:column="24"/></case>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">vl<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">values<pos:position pos:line="13" pos:column="15"/></name><index pos:line="13" pos:column="15">[<expr><name pos:line="13" pos:column="16">index<pos:position pos:line="13" pos:column="21"/></name></expr>]<pos:position pos:line="13" pos:column="22"/></index></name><operator pos:line="13" pos:column="22">.<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">counter<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator>
        <operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">counter_t<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">)<pos:position pos:line="14" pos:column="20"/></operator><call><name pos:line="14" pos:column="20">strtoull<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">node_value<pos:position pos:line="14" pos:column="39"/></name></expr></argument>,
                            <comment type="block" pos:line="15" pos:column="29">/* endptr = */</comment> <argument><expr><name pos:line="15" pos:column="44">NULL<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <comment type="block" pos:line="15" pos:column="50">/* base = */</comment> <argument><expr><literal type="number" pos:line="15" pos:column="63">0<pos:position pos:line="15" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>
    <break pos:line="16" pos:column="5">break;<pos:position pos:line="16" pos:column="11"/></break>
  <case pos:line="17" pos:column="3">case <expr><name pos:line="17" pos:column="8">DS_TYPE_DERIVE<pos:position pos:line="17" pos:column="22"/></name></expr>:<pos:position pos:line="17" pos:column="23"/></case>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">vl<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">values<pos:position pos:line="18" pos:column="15"/></name><index pos:line="18" pos:column="15">[<expr><name pos:line="18" pos:column="16">index<pos:position pos:line="18" pos:column="21"/></name></expr>]<pos:position pos:line="18" pos:column="22"/></index></name><operator pos:line="18" pos:column="22">.<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="23">derive<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">=<pos:position pos:line="18" pos:column="31"/></operator>
        <operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">derive_t<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">)<pos:position pos:line="19" pos:column="19"/></operator><call><name pos:line="19" pos:column="19">strtoll<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">node_value<pos:position pos:line="19" pos:column="37"/></name></expr></argument>,
                          <comment type="block" pos:line="20" pos:column="27">/* endptr = */</comment> <argument><expr><name pos:line="20" pos:column="42">NULL<pos:position pos:line="20" pos:column="46"/></name></expr></argument>, <comment type="block" pos:line="20" pos:column="48">/* base = */</comment> <argument><expr><literal type="number" pos:line="20" pos:column="61">0<pos:position pos:line="20" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>
    <break pos:line="21" pos:column="5">break;<pos:position pos:line="21" pos:column="11"/></break>
  <case pos:line="22" pos:column="3">case <expr><name pos:line="22" pos:column="8">DS_TYPE_ABSOLUTE<pos:position pos:line="22" pos:column="24"/></name></expr>:<pos:position pos:line="22" pos:column="25"/></case>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">vl<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">values<pos:position pos:line="23" pos:column="15"/></name><index pos:line="23" pos:column="15">[<expr><name pos:line="23" pos:column="16">index<pos:position pos:line="23" pos:column="21"/></name></expr>]<pos:position pos:line="23" pos:column="22"/></index></name><operator pos:line="23" pos:column="22">.<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">absolute<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">=<pos:position pos:line="23" pos:column="33"/></operator>
        <operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">absolute_t<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">)<pos:position pos:line="24" pos:column="21"/></operator><call><name pos:line="24" pos:column="21">strtoull<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">node_value<pos:position pos:line="24" pos:column="40"/></name></expr></argument>,
                             <comment type="block" pos:line="25" pos:column="30">/* endptr = */</comment> <argument><expr><name pos:line="25" pos:column="45">NULL<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <comment type="block" pos:line="25" pos:column="51">/* base = */</comment> <argument><expr><literal type="number" pos:line="25" pos:column="64">0<pos:position pos:line="25" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="67"/></expr_stmt>
    <break pos:line="26" pos:column="5">break;<pos:position pos:line="26" pos:column="11"/></break>
  <case pos:line="27" pos:column="3">case <expr><name pos:line="27" pos:column="8">DS_TYPE_GAUGE<pos:position pos:line="27" pos:column="21"/></name></expr>:<pos:position pos:line="27" pos:column="22"/></case>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">vl<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">-&gt;<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="9">values<pos:position pos:line="28" pos:column="15"/></name><index pos:line="28" pos:column="15">[<expr><name pos:line="28" pos:column="16">index<pos:position pos:line="28" pos:column="21"/></name></expr>]<pos:position pos:line="28" pos:column="22"/></index></name><operator pos:line="28" pos:column="22">.<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">gauge<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <operator pos:line="28" pos:column="31">(<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="32">gauge_t<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">)<pos:position pos:line="28" pos:column="40"/></operator><call><name pos:line="28" pos:column="40">strtod<pos:position pos:line="28" pos:column="46"/></name><argument_list pos:line="28" pos:column="46">(<argument><expr><name pos:line="28" pos:column="47">node_value<pos:position pos:line="28" pos:column="57"/></name></expr></argument>,
                                              <comment type="block" pos:line="29" pos:column="47">/* endptr = */</comment> <argument><expr><name pos:line="29" pos:column="62">NULL<pos:position pos:line="29" pos:column="66"/></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="68"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></switch>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">xmlFree<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><name pos:line="32" pos:column="11">node_value<pos:position pos:line="32" pos:column="21"/></name></expr></argument>)<pos:position pos:line="32" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="23"/></expr_stmt>

  <comment type="block" pos:line="34" pos:column="3">/* We have reached here which means that
   * we have got something to work */</comment>
  <return pos:line="36" pos:column="3">return <expr><literal type="number" pos:line="36" pos:column="10">0<pos:position pos:line="36" pos:column="11"/></literal></expr>;<pos:position pos:line="36" pos:column="12"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_210_collectd-4.3.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">double<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">wireless_percent_to_power<pos:position pos:line="1" pos:column="40"/></name> <parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">double<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">quality<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">assert<pos:position pos:line="3" pos:column="15"/></name> <argument_list pos:line="3" pos:column="16">(<argument><expr><operator pos:line="3" pos:column="17">(<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">quality<pos:position pos:line="3" pos:column="25"/></name> <operator pos:line="3" pos:column="26">&gt;=<pos:position pos:line="3" pos:column="31"/></operator> <literal type="number" pos:line="3" pos:column="29">0.0<pos:position pos:line="3" pos:column="32"/></literal><operator pos:line="3" pos:column="32">)<pos:position pos:line="3" pos:column="33"/></operator> <operator pos:line="3" pos:column="34">&amp;&amp;<pos:position pos:line="3" pos:column="44"/></operator> <operator pos:line="3" pos:column="37">(<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="38">quality<pos:position pos:line="3" pos:column="45"/></name> <operator pos:line="3" pos:column="46">&lt;=<pos:position pos:line="3" pos:column="51"/></operator> <literal type="number" pos:line="3" pos:column="49">100.0<pos:position pos:line="3" pos:column="54"/></literal><operator pos:line="3" pos:column="54">)<pos:position pos:line="3" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="3" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="57"/></expr_stmt>

	<return pos:line="5" pos:column="9">return <expr><operator pos:line="5" pos:column="16">(<pos:position pos:line="5" pos:column="17"/></operator><operator pos:line="5" pos:column="17">(<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">quality<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></operator> <operator pos:line="5" pos:column="28">(<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">POWER_MAX<pos:position pos:line="5" pos:column="38"/></name> <operator pos:line="5" pos:column="39">-<pos:position pos:line="5" pos:column="40"/></operator> <name pos:line="5" pos:column="41">POWER_MIN<pos:position pos:line="5" pos:column="50"/></name><operator pos:line="5" pos:column="50">)<pos:position pos:line="5" pos:column="51"/></operator><operator pos:line="5" pos:column="51">)<pos:position pos:line="5" pos:column="52"/></operator> <operator pos:line="5" pos:column="53">+<pos:position pos:line="5" pos:column="54"/></operator> <name pos:line="5" pos:column="55">POWER_MIN<pos:position pos:line="5" pos:column="64"/></name><operator pos:line="5" pos:column="64">)<pos:position pos:line="5" pos:column="65"/></operator></expr>;<pos:position pos:line="5" pos:column="66"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

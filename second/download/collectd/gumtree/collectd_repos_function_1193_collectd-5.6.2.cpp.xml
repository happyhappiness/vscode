<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1193_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tss2_vserver_gapl<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">FILE<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">read_fh<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">FILE<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">write_fh<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">gauge_t<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">ret_value<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list> <block pos:line="2" pos:column="50">{
  <comment type="block" pos:line="3" pos:column="3">/*
   * Reads the vserver's average packet loss and submits it to collectd.
   * Be sure to run the tss2_read_vserver function before calling this so
   * the vserver is selected correctly.
   */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gauge_t<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">packet_loss<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><name pos:line="8" pos:column="25">NAN<pos:position pos:line="8" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">status<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">status<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <call><name pos:line="11" pos:column="12">tss2_send_request<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">write_fh<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="40">"gapl\r\n"<pos:position pos:line="11" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">status<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">!=<pos:position pos:line="12" pos:column="16"/></operator> <literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19"> <block pos:line="12" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><literal type="string" pos:line="13" pos:column="11">"teamspeak2 plugin: tss2_send_request (gapl) failed."<pos:position pos:line="13" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <while pos:line="17" pos:column="3">while <condition pos:line="17" pos:column="9">(<expr><literal type="number" pos:line="17" pos:column="10">42<pos:position pos:line="17" pos:column="12"/></literal></expr>)<pos:position pos:line="17" pos:column="13"/></condition> <block pos:line="17" pos:column="14">{
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name></type> <name><name pos:line="18" pos:column="10">buffer<pos:position pos:line="18" pos:column="16"/></name><index pos:line="18" pos:column="16">[<expr><literal type="number" pos:line="18" pos:column="17">4096<pos:position pos:line="18" pos:column="21"/></literal></expr>]<pos:position pos:line="18" pos:column="22"/></index></name></decl>;<pos:position pos:line="18" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name> <modifier pos:line="19" pos:column="10">*<pos:position pos:line="19" pos:column="11"/></modifier></type><name pos:line="19" pos:column="11">value<pos:position pos:line="19" pos:column="16"/></name></decl>;<pos:position pos:line="19" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">char<pos:position pos:line="20" pos:column="9"/></name> <modifier pos:line="20" pos:column="10">*<pos:position pos:line="20" pos:column="11"/></modifier></type><name pos:line="20" pos:column="11">endptr<pos:position pos:line="20" pos:column="17"/></name> <init pos:line="20" pos:column="18">= <expr><name pos:line="20" pos:column="20">NULL<pos:position pos:line="20" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">status<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">tss2_receive_line<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">read_fh<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">buffer<pos:position pos:line="22" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="49">sizeof<argument_list pos:line="22" pos:column="55">(<argument><expr><name pos:line="22" pos:column="56">buffer<pos:position pos:line="22" pos:column="62"/></name></expr></argument>)<pos:position pos:line="22" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">status<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">!=<pos:position pos:line="23" pos:column="18"/></operator> <literal type="number" pos:line="23" pos:column="19">0<pos:position pos:line="23" pos:column="20"/></literal></expr>)<pos:position pos:line="23" pos:column="21"/></condition><then pos:line="23" pos:column="21"> <block pos:line="23" pos:column="22">{
      <comment type="block" pos:line="24" pos:column="7">/* Set to NULL just to make sure no one uses these FHs anymore. */</comment>
      <expr_stmt><expr><name pos:line="25" pos:column="7">read_fh<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">NULL<pos:position pos:line="25" pos:column="21"/></name></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="26" pos:column="7">write_fh<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <name pos:line="26" pos:column="18">NULL<pos:position pos:line="26" pos:column="22"/></name></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">ERROR<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><literal type="string" pos:line="27" pos:column="13">"teamspeak2 plugin: tss2_receive_line failed."<pos:position pos:line="27" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt>
      <return pos:line="28" pos:column="7">return <expr><operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><operator pos:line="28" pos:column="15">-<pos:position pos:line="28" pos:column="16"/></operator><literal type="number" pos:line="28" pos:column="16">1<pos:position pos:line="28" pos:column="17"/></literal><operator pos:line="28" pos:column="17">)<pos:position pos:line="28" pos:column="18"/></operator></expr>;<pos:position pos:line="28" pos:column="19"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">buffer<pos:position pos:line="30" pos:column="11"/></name><index pos:line="30" pos:column="11">[<expr><sizeof pos:line="30" pos:column="12">sizeof<argument_list pos:line="30" pos:column="18">(<argument><expr><name pos:line="30" pos:column="19">buffer<pos:position pos:line="30" pos:column="25"/></name></expr></argument>)<pos:position pos:line="30" pos:column="26"/></argument_list></sizeof> <operator pos:line="30" pos:column="27">-<pos:position pos:line="30" pos:column="28"/></operator> <literal type="number" pos:line="30" pos:column="29">1<pos:position pos:line="30" pos:column="30"/></literal></expr>]<pos:position pos:line="30" pos:column="31"/></index></name> <operator pos:line="30" pos:column="32">=<pos:position pos:line="30" pos:column="33"/></operator> <literal type="number" pos:line="30" pos:column="34">0<pos:position pos:line="30" pos:column="35"/></literal></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">strncmp<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><literal type="string" pos:line="32" pos:column="17">"average_packet_loss="<pos:position pos:line="32" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">buffer<pos:position pos:line="32" pos:column="47"/></name></expr></argument>,
                <argument><expr><call><name pos:line="33" pos:column="17">strlen<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><literal type="string" pos:line="33" pos:column="24">"average_packet_loss="<pos:position pos:line="33" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call> <operator pos:line="33" pos:column="49">==<pos:position pos:line="33" pos:column="51"/></operator> <literal type="number" pos:line="33" pos:column="52">0<pos:position pos:line="33" pos:column="53"/></literal></expr>)<pos:position pos:line="33" pos:column="54"/></condition><then pos:line="33" pos:column="54"> <block pos:line="33" pos:column="55">{
      <comment type="block" pos:line="34" pos:column="7">/* Got average packet loss, now interpret it */</comment>
      <expr_stmt><expr><name pos:line="35" pos:column="7">value<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <operator pos:line="35" pos:column="15">&amp;<pos:position pos:line="35" pos:column="20"/></operator><name><name pos:line="35" pos:column="16">buffer<pos:position pos:line="35" pos:column="22"/></name><index pos:line="35" pos:column="22">[<expr><literal type="number" pos:line="35" pos:column="23">20<pos:position pos:line="35" pos:column="25"/></literal></expr>]<pos:position pos:line="35" pos:column="26"/></index></name></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
      <comment type="block" pos:line="36" pos:column="7">/* Replace , with . */</comment>
      <while pos:line="37" pos:column="7">while <condition pos:line="37" pos:column="13">(<expr><operator pos:line="37" pos:column="14">*<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">value<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">!=<pos:position pos:line="37" pos:column="23"/></operator> <literal type="number" pos:line="37" pos:column="24">0<pos:position pos:line="37" pos:column="25"/></literal></expr>)<pos:position pos:line="37" pos:column="26"/></condition> <block pos:line="37" pos:column="27">{
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">*<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">value<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">==<pos:position pos:line="38" pos:column="22"/></operator> <literal type="char" pos:line="38" pos:column="23">','<pos:position pos:line="38" pos:column="26"/></literal></expr>)<pos:position pos:line="38" pos:column="27"/></condition><then pos:line="38" pos:column="27"> <block pos:line="38" pos:column="28">{
          <expr_stmt><expr><operator pos:line="39" pos:column="11">*<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">value<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <literal type="char" pos:line="39" pos:column="20">'.'<pos:position pos:line="39" pos:column="23"/></literal></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt>
          <break pos:line="40" pos:column="11">break;<pos:position pos:line="40" pos:column="17"/></break>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="42" pos:column="9">value<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">++<pos:position pos:line="42" pos:column="16"/></operator></expr>;<pos:position pos:line="42" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="43" pos:column="8"/></block></while>

      <expr_stmt><expr><name pos:line="45" pos:column="7">value<pos:position pos:line="45" pos:column="12"/></name> <operator pos:line="45" pos:column="13">=<pos:position pos:line="45" pos:column="14"/></operator> <operator pos:line="45" pos:column="15">&amp;<pos:position pos:line="45" pos:column="20"/></operator><name><name pos:line="45" pos:column="16">buffer<pos:position pos:line="45" pos:column="22"/></name><index pos:line="45" pos:column="22">[<expr><literal type="number" pos:line="45" pos:column="23">20<pos:position pos:line="45" pos:column="25"/></literal></expr>]<pos:position pos:line="45" pos:column="26"/></index></name></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>

      <expr_stmt><expr><name pos:line="47" pos:column="7">packet_loss<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator> <call><name pos:line="47" pos:column="21">strtod<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">value<pos:position pos:line="47" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="35">&amp;<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="36">endptr<pos:position pos:line="47" pos:column="42"/></name></expr></argument>)<pos:position pos:line="47" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="44"/></expr_stmt>
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><name pos:line="48" pos:column="11">value<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">==<pos:position pos:line="48" pos:column="19"/></operator> <name pos:line="48" pos:column="20">endptr<pos:position pos:line="48" pos:column="26"/></name></expr>)<pos:position pos:line="48" pos:column="27"/></condition><then pos:line="48" pos:column="27"> <block pos:line="48" pos:column="28">{
        <comment type="block" pos:line="49" pos:column="9">/* Failed */</comment>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">WARNING<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><literal type="string" pos:line="50" pos:column="17">"teamspeak2 plugin: Could not read average package "<pos:position pos:line="50" pos:column="69"/></literal>
                <literal type="string" pos:line="51" pos:column="17">"loss from string: %s"<pos:position pos:line="51" pos:column="39"/></literal></expr></argument>,
                <argument><expr><name pos:line="52" pos:column="17">buffer<pos:position pos:line="52" pos:column="23"/></name></expr></argument>)<pos:position pos:line="52" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="25"/></expr_stmt>
        <continue pos:line="53" pos:column="9">continue;<pos:position pos:line="53" pos:column="18"/></continue>
      }<pos:position pos:line="54" pos:column="8"/></block></then></if>
    }<pos:position pos:line="55" pos:column="6"/></block></then> <elseif pos:line="55" pos:column="7">else <if pos:line="55" pos:column="12">if <condition pos:line="55" pos:column="15">(<expr><call><name pos:line="55" pos:column="16">strncasecmp<pos:position pos:line="55" pos:column="27"/></name><argument_list pos:line="55" pos:column="27">(<argument><expr><literal type="string" pos:line="55" pos:column="28">"OK"<pos:position pos:line="55" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="34">buffer<pos:position pos:line="55" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="42">2<pos:position pos:line="55" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="44"/></argument_list></call> <operator pos:line="55" pos:column="45">==<pos:position pos:line="55" pos:column="47"/></operator> <literal type="number" pos:line="55" pos:column="48">0<pos:position pos:line="55" pos:column="49"/></literal></expr>)<pos:position pos:line="55" pos:column="50"/></condition><then pos:line="55" pos:column="50"> <block pos:line="55" pos:column="51">{
      <break pos:line="56" pos:column="7">break;<pos:position pos:line="56" pos:column="13"/></break>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if></elseif> <elseif pos:line="57" pos:column="7">else <if pos:line="57" pos:column="12">if <condition pos:line="57" pos:column="15">(<expr><call><name pos:line="57" pos:column="16">strncasecmp<pos:position pos:line="57" pos:column="27"/></name><argument_list pos:line="57" pos:column="27">(<argument><expr><literal type="string" pos:line="57" pos:column="28">"ERROR"<pos:position pos:line="57" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="37">buffer<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="45">5<pos:position pos:line="57" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="47"/></argument_list></call> <operator pos:line="57" pos:column="48">==<pos:position pos:line="57" pos:column="50"/></operator> <literal type="number" pos:line="57" pos:column="51">0<pos:position pos:line="57" pos:column="52"/></literal></expr>)<pos:position pos:line="57" pos:column="53"/></condition><then pos:line="57" pos:column="53"> <block pos:line="57" pos:column="54">{
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">ERROR<pos:position pos:line="58" pos:column="12"/></name><argument_list pos:line="58" pos:column="12">(<argument><expr><literal type="string" pos:line="58" pos:column="13">"teamspeak2 plugin: Server returned an error: %s"<pos:position pos:line="58" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="64">buffer<pos:position pos:line="58" pos:column="70"/></name></expr></argument>)<pos:position pos:line="58" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="72"/></expr_stmt>
      <return pos:line="59" pos:column="7">return <expr><operator pos:line="59" pos:column="14">(<pos:position pos:line="59" pos:column="15"/></operator><operator pos:line="59" pos:column="15">-<pos:position pos:line="59" pos:column="16"/></operator><literal type="number" pos:line="59" pos:column="16">1<pos:position pos:line="59" pos:column="17"/></literal><operator pos:line="59" pos:column="17">)<pos:position pos:line="59" pos:column="18"/></operator></expr>;<pos:position pos:line="59" pos:column="19"/></return>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if></elseif> <else pos:line="60" pos:column="7">else <block pos:line="60" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">WARNING<pos:position pos:line="61" pos:column="14"/></name><argument_list pos:line="61" pos:column="14">(<argument><expr><literal type="string" pos:line="61" pos:column="15">"teamspeak2 plugin: Server returned unexpected string: %s"<pos:position pos:line="61" pos:column="73"/></literal></expr></argument>,
              <argument><expr><name pos:line="62" pos:column="15">buffer<pos:position pos:line="62" pos:column="21"/></name></expr></argument>)<pos:position pos:line="62" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></else></if>
  }<pos:position pos:line="64" pos:column="4"/></block></while>

  <expr_stmt><expr><operator pos:line="66" pos:column="3">*<pos:position pos:line="66" pos:column="4"/></operator><name pos:line="66" pos:column="4">ret_value<pos:position pos:line="66" pos:column="13"/></name> <operator pos:line="66" pos:column="14">=<pos:position pos:line="66" pos:column="15"/></operator> <name pos:line="66" pos:column="16">packet_loss<pos:position pos:line="66" pos:column="27"/></name></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt>
  <return pos:line="67" pos:column="3">return <expr><operator pos:line="67" pos:column="10">(<pos:position pos:line="67" pos:column="11"/></operator><literal type="number" pos:line="67" pos:column="11">0<pos:position pos:line="67" pos:column="12"/></literal><operator pos:line="67" pos:column="12">)<pos:position pos:line="67" pos:column="13"/></operator></expr>;<pos:position pos:line="67" pos:column="14"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_854_collectd-5.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">filter_ds<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">size_t<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">values_num<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">double<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier><modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">values<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier><modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier><modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">values_names<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">gauge_t<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">new_values<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name>   <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier><modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">new_names<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">i<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">match_ds_g<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">==<pos:position pos:line="9" pos:column="26"/></operator> <name pos:line="9" pos:column="27">NULL<pos:position pos:line="9" pos:column="31"/></name></expr>)<pos:position pos:line="9" pos:column="32"/></condition><then pos:line="9" pos:column="32">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">RET_OKAY<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator></expr>;<pos:position pos:line="10" pos:column="35"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">new_values<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <operator pos:line="12" pos:column="22">(<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">gauge_t<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">*<pos:position pos:line="12" pos:column="32"/></operator><operator pos:line="12" pos:column="32">)<pos:position pos:line="12" pos:column="33"/></operator><call><name pos:line="12" pos:column="33">calloc<pos:position pos:line="12" pos:column="39"/></name> <argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">match_ds_num_g<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="57">sizeof <argument_list pos:line="12" pos:column="64">(<argument><expr><operator pos:line="12" pos:column="65">*<pos:position pos:line="12" pos:column="66"/></operator><name pos:line="12" pos:column="66">new_values<pos:position pos:line="12" pos:column="76"/></name></expr></argument>)<pos:position pos:line="12" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="79"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">new_values<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">==<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">NULL<pos:position pos:line="13" pos:column="31"/></name></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32">
	<block pos:line="14" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">fprintf<pos:position pos:line="15" pos:column="24"/></name> <argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">stderr<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="34">"malloc failed: %s\n"<pos:position pos:line="15" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="57">strerror<pos:position pos:line="15" pos:column="65"/></name> <argument_list pos:line="15" pos:column="66">(<argument><expr><name pos:line="15" pos:column="67">errno<pos:position pos:line="15" pos:column="72"/></name></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="75"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">RET_UNKNOWN<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">)<pos:position pos:line="16" pos:column="37"/></operator></expr>;<pos:position pos:line="16" pos:column="38"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="19" pos:column="9">new_names<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <operator pos:line="19" pos:column="21">(<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">char<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">*<pos:position pos:line="19" pos:column="28"/></operator><operator pos:line="19" pos:column="28">*<pos:position pos:line="19" pos:column="29"/></operator><operator pos:line="19" pos:column="29">)<pos:position pos:line="19" pos:column="30"/></operator><call><name pos:line="19" pos:column="30">calloc<pos:position pos:line="19" pos:column="36"/></name> <argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">match_ds_num_g<pos:position pos:line="19" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="54">sizeof <argument_list pos:line="19" pos:column="61">(<argument><expr><operator pos:line="19" pos:column="62">*<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="63">new_names<pos:position pos:line="19" pos:column="72"/></name></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="75"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">new_names<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">==<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="26">NULL<pos:position pos:line="20" pos:column="30"/></name></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31">
	<block pos:line="21" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">fprintf<pos:position pos:line="22" pos:column="24"/></name> <argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">stderr<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="34">"malloc failed: %s\n"<pos:position pos:line="22" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="57">strerror<pos:position pos:line="22" pos:column="65"/></name> <argument_list pos:line="22" pos:column="66">(<argument><expr><name pos:line="22" pos:column="67">errno<pos:position pos:line="22" pos:column="72"/></name></expr></argument>)<pos:position pos:line="22" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">free<pos:position pos:line="23" pos:column="21"/></name> <argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">new_values<pos:position pos:line="23" pos:column="33"/></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
		<return pos:line="24" pos:column="17">return <expr><operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">RET_UNKNOWN<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">)<pos:position pos:line="24" pos:column="37"/></operator></expr>;<pos:position pos:line="24" pos:column="38"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

	<for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">(<init><expr><name pos:line="27" pos:column="14">i<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></init> <condition><expr><name pos:line="27" pos:column="21">i<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">&lt;<pos:position pos:line="27" pos:column="27"/></operator> <operator pos:line="27" pos:column="25">(<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">size_t<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">)<pos:position pos:line="27" pos:column="33"/></operator> <name pos:line="27" pos:column="34">match_ds_num_g<pos:position pos:line="27" pos:column="48"/></name></expr>;<pos:position pos:line="27" pos:column="49"/></condition> <incr><expr><name pos:line="27" pos:column="50">i<pos:position pos:line="27" pos:column="51"/></name><operator pos:line="27" pos:column="51">++<pos:position pos:line="27" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="54"/></control>
	<block pos:line="28" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">size_t<pos:position pos:line="29" pos:column="23"/></name></type> <name pos:line="29" pos:column="24">j<pos:position pos:line="29" pos:column="25"/></name></decl>;<pos:position pos:line="29" pos:column="26"/></decl_stmt>

		<comment type="block" pos:line="31" pos:column="17">/* match_ds_g keeps pointers into argv but the names will be freed */</comment>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">new_names<pos:position pos:line="32" pos:column="26"/></name><index pos:line="32" pos:column="26">[<expr><name pos:line="32" pos:column="27">i<pos:position pos:line="32" pos:column="28"/></name></expr>]<pos:position pos:line="32" pos:column="29"/></index></name> <operator pos:line="32" pos:column="30">=<pos:position pos:line="32" pos:column="31"/></operator> <call><name pos:line="32" pos:column="32">cn_strdup<pos:position pos:line="32" pos:column="41"/></name> <argument_list pos:line="32" pos:column="42">(<argument><expr><name><name pos:line="32" pos:column="43">match_ds_g<pos:position pos:line="32" pos:column="53"/></name><index pos:line="32" pos:column="53">[<expr><name pos:line="32" pos:column="54">i<pos:position pos:line="32" pos:column="55"/></name></expr>]<pos:position pos:line="32" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name><name pos:line="33" pos:column="21">new_names<pos:position pos:line="33" pos:column="30"/></name><index pos:line="33" pos:column="30">[<expr><name pos:line="33" pos:column="31">i<pos:position pos:line="33" pos:column="32"/></name></expr>]<pos:position pos:line="33" pos:column="33"/></index></name> <operator pos:line="33" pos:column="34">==<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="37">NULL<pos:position pos:line="33" pos:column="41"/></name></expr>)<pos:position pos:line="33" pos:column="42"/></condition><then pos:line="33" pos:column="42">
		<block pos:line="34" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">fprintf<pos:position pos:line="35" pos:column="32"/></name> <argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">stderr<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="42">"cn_strdup failed: %s\n"<pos:position pos:line="35" pos:column="66"/></literal></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="68">strerror<pos:position pos:line="35" pos:column="76"/></name> <argument_list pos:line="35" pos:column="77">(<argument><expr><name pos:line="35" pos:column="78">errno<pos:position pos:line="35" pos:column="83"/></name></expr></argument>)<pos:position pos:line="35" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="86"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">free<pos:position pos:line="36" pos:column="29"/></name> <argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">new_values<pos:position pos:line="36" pos:column="41"/></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>
			<for pos:line="37" pos:column="25">for <control pos:line="37" pos:column="29">(<init><expr><name pos:line="37" pos:column="30">j<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator> <literal type="number" pos:line="37" pos:column="34">0<pos:position pos:line="37" pos:column="35"/></literal></expr>;<pos:position pos:line="37" pos:column="36"/></init> <condition><expr><name pos:line="37" pos:column="37">j<pos:position pos:line="37" pos:column="38"/></name> <operator pos:line="37" pos:column="39">&lt;<pos:position pos:line="37" pos:column="43"/></operator> <name pos:line="37" pos:column="41">i<pos:position pos:line="37" pos:column="42"/></name></expr>;<pos:position pos:line="37" pos:column="43"/></condition> <incr><expr><name pos:line="37" pos:column="44">j<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">++<pos:position pos:line="37" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="37" pos:column="48"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="33">free<pos:position pos:line="38" pos:column="37"/></name> <argument_list pos:line="38" pos:column="38">(<argument><expr><name><name pos:line="38" pos:column="39">new_names<pos:position pos:line="38" pos:column="48"/></name><index pos:line="38" pos:column="48">[<expr><name pos:line="38" pos:column="49">j<pos:position pos:line="38" pos:column="50"/></name></expr>]<pos:position pos:line="38" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt></block></for>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">free<pos:position pos:line="39" pos:column="29"/></name> <argument_list pos:line="39" pos:column="30">(<argument><expr><name pos:line="39" pos:column="31">new_names<pos:position pos:line="39" pos:column="40"/></name></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="42"/></expr_stmt>
			<return pos:line="40" pos:column="25">return <expr><operator pos:line="40" pos:column="32">(<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="33">RET_UNKNOWN<pos:position pos:line="40" pos:column="44"/></name><operator pos:line="40" pos:column="44">)<pos:position pos:line="40" pos:column="45"/></operator></expr>;<pos:position pos:line="40" pos:column="46"/></return>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>

		<for pos:line="43" pos:column="17">for <control pos:line="43" pos:column="21">(<init><expr><name pos:line="43" pos:column="22">j<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">=<pos:position pos:line="43" pos:column="25"/></operator> <literal type="number" pos:line="43" pos:column="26">0<pos:position pos:line="43" pos:column="27"/></literal></expr>;<pos:position pos:line="43" pos:column="28"/></init> <condition><expr><name pos:line="43" pos:column="29">j<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">&lt;<pos:position pos:line="43" pos:column="35"/></operator> <operator pos:line="43" pos:column="33">*<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="34">values_num<pos:position pos:line="43" pos:column="44"/></name></expr>;<pos:position pos:line="43" pos:column="45"/></condition> <incr><expr><name pos:line="43" pos:column="46">j<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">++<pos:position pos:line="43" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="43" pos:column="50"/></control>
			<block type="pseudo"><if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><call><name pos:line="44" pos:column="29">strcasecmp<pos:position pos:line="44" pos:column="39"/></name> <argument_list pos:line="44" pos:column="40">(<argument><expr><name><name pos:line="44" pos:column="41">new_names<pos:position pos:line="44" pos:column="50"/></name><index pos:line="44" pos:column="50">[<expr><name pos:line="44" pos:column="51">i<pos:position pos:line="44" pos:column="52"/></name></expr>]<pos:position pos:line="44" pos:column="53"/></index></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="55">(<pos:position pos:line="44" pos:column="56"/></operator><operator pos:line="44" pos:column="56">*<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="57">values_names<pos:position pos:line="44" pos:column="69"/></name><operator pos:line="44" pos:column="69">)<pos:position pos:line="44" pos:column="70"/></operator><index pos:line="44" pos:column="70">[<expr><name pos:line="44" pos:column="71">j<pos:position pos:line="44" pos:column="72"/></name></expr>]<pos:position pos:line="44" pos:column="73"/></index></expr></argument>)<pos:position pos:line="44" pos:column="74"/></argument_list></call> <operator pos:line="44" pos:column="75">==<pos:position pos:line="44" pos:column="77"/></operator> <literal type="number" pos:line="44" pos:column="78">0<pos:position pos:line="44" pos:column="79"/></literal></expr>)<pos:position pos:line="44" pos:column="80"/></condition><then pos:line="44" pos:column="80">
				<block type="pseudo"><break pos:line="45" pos:column="33">break;<pos:position pos:line="45" pos:column="39"/></break></block></then></if></block></for>

		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">j<pos:position pos:line="47" pos:column="22"/></name> <operator pos:line="47" pos:column="23">==<pos:position pos:line="47" pos:column="25"/></operator> <operator pos:line="47" pos:column="26">*<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="27">values_num<pos:position pos:line="47" pos:column="37"/></name></expr>)<pos:position pos:line="47" pos:column="38"/></condition><then pos:line="47" pos:column="38">
		<block pos:line="48" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="49" pos:column="25">printf<pos:position pos:line="49" pos:column="31"/></name> <argument_list pos:line="49" pos:column="32">(<argument><expr><literal type="string" pos:line="49" pos:column="33">"ERROR: DS `%s' is not available.\n"<pos:position pos:line="49" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="71">new_names<pos:position pos:line="49" pos:column="80"/></name><index pos:line="49" pos:column="80">[<expr><name pos:line="49" pos:column="81">i<pos:position pos:line="49" pos:column="82"/></name></expr>]<pos:position pos:line="49" pos:column="83"/></index></name></expr></argument>)<pos:position pos:line="49" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="85"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="50" pos:column="25">free<pos:position pos:line="50" pos:column="29"/></name> <argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">new_values<pos:position pos:line="50" pos:column="41"/></name></expr></argument>)<pos:position pos:line="50" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="43"/></expr_stmt>
			<for pos:line="51" pos:column="25">for <control pos:line="51" pos:column="29">(<init><expr><name pos:line="51" pos:column="30">j<pos:position pos:line="51" pos:column="31"/></name> <operator pos:line="51" pos:column="32">=<pos:position pos:line="51" pos:column="33"/></operator> <literal type="number" pos:line="51" pos:column="34">0<pos:position pos:line="51" pos:column="35"/></literal></expr>;<pos:position pos:line="51" pos:column="36"/></init> <condition><expr><name pos:line="51" pos:column="37">j<pos:position pos:line="51" pos:column="38"/></name> <operator pos:line="51" pos:column="39">&lt;=<pos:position pos:line="51" pos:column="44"/></operator> <name pos:line="51" pos:column="42">i<pos:position pos:line="51" pos:column="43"/></name></expr>;<pos:position pos:line="51" pos:column="44"/></condition> <incr><expr><name pos:line="51" pos:column="45">j<pos:position pos:line="51" pos:column="46"/></name><operator pos:line="51" pos:column="46">++<pos:position pos:line="51" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="49"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="33">free<pos:position pos:line="52" pos:column="37"/></name> <argument_list pos:line="52" pos:column="38">(<argument><expr><name><name pos:line="52" pos:column="39">new_names<pos:position pos:line="52" pos:column="48"/></name><index pos:line="52" pos:column="48">[<expr><name pos:line="52" pos:column="49">j<pos:position pos:line="52" pos:column="50"/></name></expr>]<pos:position pos:line="52" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="52" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="53"/></expr_stmt></block></for>
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">free<pos:position pos:line="53" pos:column="29"/></name> <argument_list pos:line="53" pos:column="30">(<argument><expr><name pos:line="53" pos:column="31">new_names<pos:position pos:line="53" pos:column="40"/></name></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
			<return pos:line="54" pos:column="25">return <expr><operator pos:line="54" pos:column="32">(<pos:position pos:line="54" pos:column="33"/></operator><name pos:line="54" pos:column="33">RET_CRITICAL<pos:position pos:line="54" pos:column="45"/></name><operator pos:line="54" pos:column="45">)<pos:position pos:line="54" pos:column="46"/></operator></expr>;<pos:position pos:line="54" pos:column="47"/></return>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="57" pos:column="17">new_values<pos:position pos:line="57" pos:column="27"/></name><index pos:line="57" pos:column="27">[<expr><name pos:line="57" pos:column="28">i<pos:position pos:line="57" pos:column="29"/></name></expr>]<pos:position pos:line="57" pos:column="30"/></index></name> <operator pos:line="57" pos:column="31">=<pos:position pos:line="57" pos:column="32"/></operator> <operator pos:line="57" pos:column="33">(<pos:position pos:line="57" pos:column="34"/></operator><operator pos:line="57" pos:column="34">*<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="35">values<pos:position pos:line="57" pos:column="41"/></name><operator pos:line="57" pos:column="41">)<pos:position pos:line="57" pos:column="42"/></operator><index pos:line="57" pos:column="42">[<expr><name pos:line="57" pos:column="43">j<pos:position pos:line="57" pos:column="44"/></name></expr>]<pos:position pos:line="57" pos:column="45"/></index></expr>;<pos:position pos:line="57" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="58" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="60" pos:column="9">free<pos:position pos:line="60" pos:column="13"/></name> <argument_list pos:line="60" pos:column="14">(<argument><expr><operator pos:line="60" pos:column="15">*<pos:position pos:line="60" pos:column="16"/></operator><name pos:line="60" pos:column="16">values<pos:position pos:line="60" pos:column="22"/></name></expr></argument>)<pos:position pos:line="60" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="24"/></expr_stmt>
	<for pos:line="61" pos:column="9">for <control pos:line="61" pos:column="13">(<init><expr><name pos:line="61" pos:column="14">i<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <literal type="number" pos:line="61" pos:column="18">0<pos:position pos:line="61" pos:column="19"/></literal></expr>;<pos:position pos:line="61" pos:column="20"/></init> <condition><expr><name pos:line="61" pos:column="21">i<pos:position pos:line="61" pos:column="22"/></name> <operator pos:line="61" pos:column="23">&lt;<pos:position pos:line="61" pos:column="27"/></operator> <operator pos:line="61" pos:column="25">*<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="26">values_num<pos:position pos:line="61" pos:column="36"/></name></expr>;<pos:position pos:line="61" pos:column="37"/></condition> <incr><expr><name pos:line="61" pos:column="38">i<pos:position pos:line="61" pos:column="39"/></name><operator pos:line="61" pos:column="39">++<pos:position pos:line="61" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="61" pos:column="42"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="17">free<pos:position pos:line="62" pos:column="21"/></name> <argument_list pos:line="62" pos:column="22">(<argument><expr><operator pos:line="62" pos:column="23">(<pos:position pos:line="62" pos:column="24"/></operator><operator pos:line="62" pos:column="24">*<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="25">values_names<pos:position pos:line="62" pos:column="37"/></name><operator pos:line="62" pos:column="37">)<pos:position pos:line="62" pos:column="38"/></operator><index pos:line="62" pos:column="38">[<expr><name pos:line="62" pos:column="39">i<pos:position pos:line="62" pos:column="40"/></name></expr>]<pos:position pos:line="62" pos:column="41"/></index></expr></argument>)<pos:position pos:line="62" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="43"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">free<pos:position pos:line="63" pos:column="13"/></name> <argument_list pos:line="63" pos:column="14">(<argument><expr><operator pos:line="63" pos:column="15">*<pos:position pos:line="63" pos:column="16"/></operator><name pos:line="63" pos:column="16">values_names<pos:position pos:line="63" pos:column="28"/></name></expr></argument>)<pos:position pos:line="63" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><operator pos:line="65" pos:column="9">*<pos:position pos:line="65" pos:column="10"/></operator><name pos:line="65" pos:column="10">values<pos:position pos:line="65" pos:column="16"/></name>       <operator pos:line="65" pos:column="23">=<pos:position pos:line="65" pos:column="24"/></operator> <name pos:line="65" pos:column="25">new_values<pos:position pos:line="65" pos:column="35"/></name></expr>;<pos:position pos:line="65" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="66" pos:column="9">*<pos:position pos:line="66" pos:column="10"/></operator><name pos:line="66" pos:column="10">values_names<pos:position pos:line="66" pos:column="22"/></name> <operator pos:line="66" pos:column="23">=<pos:position pos:line="66" pos:column="24"/></operator> <name pos:line="66" pos:column="25">new_names<pos:position pos:line="66" pos:column="34"/></name></expr>;<pos:position pos:line="66" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="67" pos:column="9">*<pos:position pos:line="67" pos:column="10"/></operator><name pos:line="67" pos:column="10">values_num<pos:position pos:line="67" pos:column="20"/></name>   <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <name pos:line="67" pos:column="25">match_ds_num_g<pos:position pos:line="67" pos:column="39"/></name></expr>;<pos:position pos:line="67" pos:column="40"/></expr_stmt>
	<return pos:line="68" pos:column="9">return <expr><operator pos:line="68" pos:column="16">(<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="17">RET_OKAY<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">)<pos:position pos:line="68" pos:column="26"/></operator></expr>;<pos:position pos:line="68" pos:column="27"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

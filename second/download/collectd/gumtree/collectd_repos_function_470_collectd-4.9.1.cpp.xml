<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_470_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cjni_callback_register<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">JNIEnv<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">jvm_env<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="53">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">jobject<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">o_name<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="21">jobject<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">o_callback<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">type<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cjni_callback_info_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">cbi<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">cjni_callback_info_t<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">tmp<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">COLLECT_DEBUG<pos:position pos:line="6" pos:column="18"/></name></expr></cpp:if>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">type_str<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="10" pos:column="3">cbi<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">cjni_callback_info_create<pos:position pos:line="10" pos:column="34"/></name> <argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">jvm_env<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="45">o_name<pos:position pos:line="10" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="53">o_callback<pos:position pos:line="10" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="65">type<pos:position pos:line="10" pos:column="69"/></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="71"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">cbi<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">==<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">NULL<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return></block></then></if>

<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">COLLECT_DEBUG<pos:position pos:line="14" pos:column="18"/></name></expr></cpp:if>
  <switch pos:line="15" pos:column="3">switch <condition pos:line="15" pos:column="10">(<expr><name pos:line="15" pos:column="11">type<pos:position pos:line="15" pos:column="15"/></name></expr>)<pos:position pos:line="15" pos:column="16"/></condition>
  <block pos:line="16" pos:column="3">{
    <case pos:line="17" pos:column="5">case <expr><name pos:line="17" pos:column="10">CB_TYPE_CONFIG<pos:position pos:line="17" pos:column="24"/></name></expr>:<pos:position pos:line="17" pos:column="25"/></case>
      <expr_stmt><expr><name pos:line="18" pos:column="7">type_str<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="string" pos:line="18" pos:column="18">"config"<pos:position pos:line="18" pos:column="26"/></literal></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
      <break pos:line="19" pos:column="7">break;<pos:position pos:line="19" pos:column="13"/></break>

    <case pos:line="21" pos:column="5">case <expr><name pos:line="21" pos:column="10">CB_TYPE_INIT<pos:position pos:line="21" pos:column="22"/></name></expr>:<pos:position pos:line="21" pos:column="23"/></case>
      <expr_stmt><expr><name pos:line="22" pos:column="7">type_str<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="string" pos:line="22" pos:column="18">"init"<pos:position pos:line="22" pos:column="24"/></literal></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
      <break pos:line="23" pos:column="7">break;<pos:position pos:line="23" pos:column="13"/></break>

    <case pos:line="25" pos:column="5">case <expr><name pos:line="25" pos:column="10">CB_TYPE_SHUTDOWN<pos:position pos:line="25" pos:column="26"/></name></expr>:<pos:position pos:line="25" pos:column="27"/></case>
      <expr_stmt><expr><name pos:line="26" pos:column="7">type_str<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <literal type="string" pos:line="26" pos:column="18">"shutdown"<pos:position pos:line="26" pos:column="28"/></literal></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
      <break pos:line="27" pos:column="7">break;<pos:position pos:line="27" pos:column="13"/></break>

    <case pos:line="29" pos:column="5">case <expr><name pos:line="29" pos:column="10">CB_TYPE_MATCH<pos:position pos:line="29" pos:column="23"/></name></expr>:<pos:position pos:line="29" pos:column="24"/></case>
      <expr_stmt><expr><name pos:line="30" pos:column="7">type_str<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="string" pos:line="30" pos:column="18">"match"<pos:position pos:line="30" pos:column="25"/></literal></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
      <break pos:line="31" pos:column="7">break;<pos:position pos:line="31" pos:column="13"/></break>

    <case pos:line="33" pos:column="5">case <expr><name pos:line="33" pos:column="10">CB_TYPE_TARGET<pos:position pos:line="33" pos:column="24"/></name></expr>:<pos:position pos:line="33" pos:column="25"/></case>
      <expr_stmt><expr><name pos:line="34" pos:column="7">type_str<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <literal type="string" pos:line="34" pos:column="18">"target"<pos:position pos:line="34" pos:column="26"/></literal></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
      <break pos:line="35" pos:column="7">break;<pos:position pos:line="35" pos:column="13"/></break>

    <default pos:line="37" pos:column="5">default:<pos:position pos:line="37" pos:column="13"/></default>
      <expr_stmt><expr><name pos:line="38" pos:column="7">type_str<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <literal type="string" pos:line="38" pos:column="18">"&lt;unknown&gt;"<pos:position pos:line="38" pos:column="35"/></literal></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></switch>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">DEBUG<pos:position pos:line="40" pos:column="8"/></name> <argument_list pos:line="40" pos:column="9">(<argument><expr><literal type="string" pos:line="40" pos:column="10">"java plugin: Registering new %s callback: %s"<pos:position pos:line="40" pos:column="56"/></literal></expr></argument>,
      <argument><expr><name pos:line="41" pos:column="7">type_str<pos:position pos:line="41" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="17">cbi<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">name<pos:position pos:line="41" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="44" pos:column="3">pthread_mutex_lock<pos:position pos:line="44" pos:column="21"/></name> <argument_list pos:line="44" pos:column="22">(<argument><expr><operator pos:line="44" pos:column="23">&amp;<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="24">java_callbacks_lock<pos:position pos:line="44" pos:column="43"/></name></expr></argument>)<pos:position pos:line="44" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><name pos:line="46" pos:column="3">tmp<pos:position pos:line="46" pos:column="6"/></name> <operator pos:line="46" pos:column="7">=<pos:position pos:line="46" pos:column="8"/></operator> <operator pos:line="46" pos:column="9">(<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">cjni_callback_info_t<pos:position pos:line="46" pos:column="30"/></name> <operator pos:line="46" pos:column="31">*<pos:position pos:line="46" pos:column="32"/></operator><operator pos:line="46" pos:column="32">)<pos:position pos:line="46" pos:column="33"/></operator> <call><name pos:line="46" pos:column="34">realloc<pos:position pos:line="46" pos:column="41"/></name> <argument_list pos:line="46" pos:column="42">(<argument><expr><name pos:line="46" pos:column="43">java_callbacks<pos:position pos:line="46" pos:column="57"/></name></expr></argument>,
      <argument><expr><operator pos:line="47" pos:column="7">(<pos:position pos:line="47" pos:column="8"/></operator><name pos:line="47" pos:column="8">java_callbacks_num<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">+<pos:position pos:line="47" pos:column="28"/></operator> <literal type="number" pos:line="47" pos:column="29">1<pos:position pos:line="47" pos:column="30"/></literal><operator pos:line="47" pos:column="30">)<pos:position pos:line="47" pos:column="31"/></operator> <operator pos:line="47" pos:column="32">*<pos:position pos:line="47" pos:column="33"/></operator> <sizeof pos:line="47" pos:column="34">sizeof <argument_list pos:line="47" pos:column="41">(<argument><expr><operator pos:line="47" pos:column="42">*<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="43">java_callbacks<pos:position pos:line="47" pos:column="57"/></name></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name pos:line="48" pos:column="7">tmp<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">==<pos:position pos:line="48" pos:column="13"/></operator> <name pos:line="48" pos:column="14">NULL<pos:position pos:line="48" pos:column="18"/></name></expr>)<pos:position pos:line="48" pos:column="19"/></condition><then pos:line="48" pos:column="19">
  <block pos:line="49" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">pthread_mutex_unlock<pos:position pos:line="50" pos:column="25"/></name> <argument_list pos:line="50" pos:column="26">(<argument><expr><operator pos:line="50" pos:column="27">&amp;<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="28">java_callbacks_lock<pos:position pos:line="50" pos:column="47"/></name></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">ERROR<pos:position pos:line="51" pos:column="10"/></name> <argument_list pos:line="51" pos:column="11">(<argument><expr><literal type="string" pos:line="51" pos:column="12">"java plugin: cjni_callback_register: realloc failed."<pos:position pos:line="51" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="68"/></expr_stmt>

    <expr_stmt><expr><call><name><operator pos:line="53" pos:column="5">(<pos:position pos:line="53" pos:column="6"/></operator><operator pos:line="53" pos:column="6">*<pos:position pos:line="53" pos:column="7"/></operator><name pos:line="53" pos:column="7">jvm_env<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">)<pos:position pos:line="53" pos:column="15"/></operator><operator pos:line="53" pos:column="15">-&gt;<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="17">DeleteGlobalRef<pos:position pos:line="53" pos:column="32"/></name></name> <argument_list pos:line="53" pos:column="33">(<argument><expr><name pos:line="53" pos:column="34">jvm_env<pos:position pos:line="53" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="43">cbi<pos:position pos:line="53" pos:column="46"/></name><operator pos:line="53" pos:column="46">-&gt;<pos:position pos:line="53" pos:column="51"/></operator><name pos:line="53" pos:column="48">object<pos:position pos:line="53" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">free<pos:position pos:line="54" pos:column="9"/></name> <argument_list pos:line="54" pos:column="10">(<argument><expr><name pos:line="54" pos:column="11">cbi<pos:position pos:line="54" pos:column="14"/></name></expr></argument>)<pos:position pos:line="54" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="16"/></expr_stmt>

    <return pos:line="56" pos:column="5">return <expr><operator pos:line="56" pos:column="12">(<pos:position pos:line="56" pos:column="13"/></operator><operator pos:line="56" pos:column="13">-<pos:position pos:line="56" pos:column="14"/></operator><literal type="number" pos:line="56" pos:column="14">1<pos:position pos:line="56" pos:column="15"/></literal><operator pos:line="56" pos:column="15">)<pos:position pos:line="56" pos:column="16"/></operator></expr>;<pos:position pos:line="56" pos:column="17"/></return>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="58" pos:column="3">java_callbacks<pos:position pos:line="58" pos:column="17"/></name> <operator pos:line="58" pos:column="18">=<pos:position pos:line="58" pos:column="19"/></operator> <name pos:line="58" pos:column="20">tmp<pos:position pos:line="58" pos:column="23"/></name></expr>;<pos:position pos:line="58" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="59" pos:column="3">java_callbacks<pos:position pos:line="59" pos:column="17"/></name><index pos:line="59" pos:column="17">[<expr><name pos:line="59" pos:column="18">java_callbacks_num<pos:position pos:line="59" pos:column="36"/></name></expr>]<pos:position pos:line="59" pos:column="37"/></index></name> <operator pos:line="59" pos:column="38">=<pos:position pos:line="59" pos:column="39"/></operator> <operator pos:line="59" pos:column="40">*<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="41">cbi<pos:position pos:line="59" pos:column="44"/></name></expr>;<pos:position pos:line="59" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name pos:line="60" pos:column="3">java_callbacks_num<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">++<pos:position pos:line="60" pos:column="23"/></operator></expr>;<pos:position pos:line="60" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="62" pos:column="3">pthread_mutex_unlock<pos:position pos:line="62" pos:column="23"/></name> <argument_list pos:line="62" pos:column="24">(<argument><expr><operator pos:line="62" pos:column="25">&amp;<pos:position pos:line="62" pos:column="30"/></operator><name pos:line="62" pos:column="26">java_callbacks_lock<pos:position pos:line="62" pos:column="45"/></name></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="47"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="64" pos:column="3">free<pos:position pos:line="64" pos:column="7"/></name> <argument_list pos:line="64" pos:column="8">(<argument><expr><name pos:line="64" pos:column="9">cbi<pos:position pos:line="64" pos:column="12"/></name></expr></argument>)<pos:position pos:line="64" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="14"/></expr_stmt>
  <return pos:line="65" pos:column="3">return <expr><operator pos:line="65" pos:column="10">(<pos:position pos:line="65" pos:column="11"/></operator><literal type="number" pos:line="65" pos:column="11">0<pos:position pos:line="65" pos:column="12"/></literal><operator pos:line="65" pos:column="12">)<pos:position pos:line="65" pos:column="13"/></operator></expr>;<pos:position pos:line="65" pos:column="14"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

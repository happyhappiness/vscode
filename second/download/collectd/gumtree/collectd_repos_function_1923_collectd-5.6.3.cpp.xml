<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1923_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_part_sign_sha256<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">sockent_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">se<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
                                  <parameter><decl><type><name pos:line="2" pos:column="35">void<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier><modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">ret_buffer<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">size_t<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">ret_buffer_size<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">int<pos:position pos:line="3" pos:column="38"/></name></type> <name pos:line="3" pos:column="39">flags<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="45"/></parameter_list> <block pos:line="3" pos:column="46">{
  <decl_stmt><decl><specifier pos:line="4" pos:column="3">static<pos:position pos:line="4" pos:column="9"/></specifier> <type><name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">warning_has_been_printed<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><literal type="number" pos:line="4" pos:column="41">0<pos:position pos:line="4" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">buffer<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">buffer_size<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">buffer_offset<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">uint16_t<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">part_len<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">part_signature_sha256_t<pos:position pos:line="11" pos:column="26"/></name></type> <name pos:line="11" pos:column="27">pss<pos:position pos:line="11" pos:column="30"/></name></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">buffer<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <operator pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">ret_buffer<pos:position pos:line="13" pos:column="23"/></name></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">buffer_size<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">ret_buffer_size<pos:position pos:line="14" pos:column="33"/></name></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">buffer_offset<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">buffer_size<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">&lt;=<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="22">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="17" pos:column="48"/></name></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><operator pos:line="18" pos:column="13">-<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">ENOMEM<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">)<pos:position pos:line="18" pos:column="21"/></operator></expr>;<pos:position pos:line="18" pos:column="22"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">BUFFER_READ<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><operator pos:line="20" pos:column="15">&amp;<pos:position pos:line="20" pos:column="20"/></operator><name><name pos:line="20" pos:column="16">pss<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">.<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">head<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">type<pos:position pos:line="20" pos:column="29"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="31">sizeof<argument_list pos:line="20" pos:column="37">(<argument><expr><name><name pos:line="20" pos:column="38">pss<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">.<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="42">head<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">.<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="47">type<pos:position pos:line="20" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">BUFFER_READ<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><operator pos:line="21" pos:column="15">&amp;<pos:position pos:line="21" pos:column="20"/></operator><name><name pos:line="21" pos:column="16">pss<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">.<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">head<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">.<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">length<pos:position pos:line="21" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="33">sizeof<argument_list pos:line="21" pos:column="39">(<argument><expr><name><name pos:line="21" pos:column="40">pss<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">.<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="44">head<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">.<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="49">length<pos:position pos:line="21" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">part_len<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">ntohs<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name><name pos:line="22" pos:column="20">pss<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">.<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">head<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">.<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">length<pos:position pos:line="22" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">(<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">part_len<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">&lt;=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="20">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">)<pos:position pos:line="24" pos:column="47"/></operator> <operator pos:line="24" pos:column="48">||<pos:position pos:line="24" pos:column="50"/></operator> <operator pos:line="24" pos:column="51">(<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="52">part_len<pos:position pos:line="24" pos:column="60"/></name> <operator pos:line="24" pos:column="61">&gt;<pos:position pos:line="24" pos:column="65"/></operator> <name pos:line="24" pos:column="63">buffer_size<pos:position pos:line="24" pos:column="74"/></name><operator pos:line="24" pos:column="74">)<pos:position pos:line="24" pos:column="75"/></operator></expr>)<pos:position pos:line="24" pos:column="76"/></condition><then pos:line="24" pos:column="76">
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><operator pos:line="25" pos:column="13">-<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">EINVAL<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">)<pos:position pos:line="25" pos:column="21"/></operator></expr>;<pos:position pos:line="25" pos:column="22"/></return></block></then></if>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">warning_has_been_printed<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">==<pos:position pos:line="27" pos:column="34"/></operator> <literal type="number" pos:line="27" pos:column="35">0<pos:position pos:line="27" pos:column="36"/></literal></expr>)<pos:position pos:line="27" pos:column="37"/></condition><then pos:line="27" pos:column="37"> <block pos:line="27" pos:column="38">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">WARNING<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><literal type="string" pos:line="28" pos:column="13">"network plugin: Received signed packet, but the network "<pos:position pos:line="28" pos:column="71"/></literal>
            <literal type="string" pos:line="29" pos:column="13">"plugin was not linked with libgcrypt, so I cannot "<pos:position pos:line="29" pos:column="65"/></literal>
            <literal type="string" pos:line="30" pos:column="13">"verify the signature. The packet will be accepted."<pos:position pos:line="30" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">warning_has_been_printed<pos:position pos:line="31" pos:column="29"/></name> <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <literal type="number" pos:line="31" pos:column="32">1<pos:position pos:line="31" pos:column="33"/></literal></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">parse_packet<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">se<pos:position pos:line="34" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="20">buffer<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">+<pos:position pos:line="34" pos:column="28"/></operator> <name pos:line="34" pos:column="29">part_len<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">buffer_size<pos:position pos:line="34" pos:column="50"/></name> <operator pos:line="34" pos:column="51">-<pos:position pos:line="34" pos:column="52"/></operator> <name pos:line="34" pos:column="53">part_len<pos:position pos:line="34" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="63">flags<pos:position pos:line="34" pos:column="68"/></name></expr></argument>,
               <comment type="block" pos:line="35" pos:column="16">/* username = */</comment> <argument><expr><name pos:line="35" pos:column="33">NULL<pos:position pos:line="35" pos:column="37"/></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="37" pos:column="3">*<pos:position pos:line="37" pos:column="4"/></operator><name pos:line="37" pos:column="4">ret_buffer<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <name pos:line="37" pos:column="17">buffer<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">+<pos:position pos:line="37" pos:column="25"/></operator> <name pos:line="37" pos:column="26">buffer_size<pos:position pos:line="37" pos:column="37"/></name></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="38" pos:column="3">*<pos:position pos:line="38" pos:column="4"/></operator><name pos:line="38" pos:column="4">ret_buffer_size<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <literal type="number" pos:line="38" pos:column="22">0<pos:position pos:line="38" pos:column="23"/></literal></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>

  <return pos:line="40" pos:column="3">return <expr><operator pos:line="40" pos:column="10">(<pos:position pos:line="40" pos:column="11"/></operator><literal type="number" pos:line="40" pos:column="11">0<pos:position pos:line="40" pos:column="12"/></literal><operator pos:line="40" pos:column="12">)<pos:position pos:line="40" pos:column="13"/></operator></expr>;<pos:position pos:line="40" pos:column="14"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2612_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">plugin_free_data_sets<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list> <block pos:line="1" pos:column="41">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">void<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">key<pos:position pos:line="2" pos:column="12"/></name></decl>;<pos:position pos:line="2" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">void<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">value<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">data_sets<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">==<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25">
    <block type="pseudo"><return pos:line="6" pos:column="5">return;<pos:position pos:line="6" pos:column="12"/></return></block></then></if>

  <while pos:line="8" pos:column="3">while <condition pos:line="8" pos:column="9">(<expr><call><name pos:line="8" pos:column="10">c_avl_pick<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">data_sets<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="32">&amp;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="33">key<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="38">&amp;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="39">value<pos:position pos:line="8" pos:column="44"/></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call> <operator pos:line="8" pos:column="46">==<pos:position pos:line="8" pos:column="48"/></operator> <literal type="number" pos:line="8" pos:column="49">0<pos:position pos:line="8" pos:column="50"/></literal></expr>)<pos:position pos:line="8" pos:column="51"/></condition> <block pos:line="8" pos:column="52">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">data_set_t<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">ds<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><name pos:line="9" pos:column="22">value<pos:position pos:line="9" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
    <comment type="block" pos:line="10" pos:column="5">/* key is a pointer to ds-&gt;type */</comment>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">sfree<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name><name pos:line="12" pos:column="11">ds<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">ds<pos:position pos:line="12" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">sfree<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">ds<pos:position pos:line="13" pos:column="13"/></name></expr></argument>)<pos:position pos:line="13" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">c_avl_destroy<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">data_sets<pos:position pos:line="16" pos:column="26"/></name></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">data_sets<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">NULL<pos:position pos:line="17" pos:column="19"/></name></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

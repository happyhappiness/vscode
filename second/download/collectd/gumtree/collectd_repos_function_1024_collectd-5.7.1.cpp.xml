<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1024_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pplugin_call<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">pTHX_<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">type<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="41">...<pos:position pos:line="1" pos:column="44"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <block pos:line="1" pos:column="46">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">retvals<pos:position pos:line="2" pos:column="14"/></name> <init pos:line="2" pos:column="15">= <expr><literal type="number" pos:line="2" pos:column="17">0<pos:position pos:line="2" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="4" pos:column="3">va_list<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">ap<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">ret<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">subname<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">dSP<pos:position pos:line="8" pos:column="6"/></name></expr>;<pos:position pos:line="8" pos:column="7"/></expr_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">type<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">&lt;<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="15">0<pos:position pos:line="10" pos:column="16"/></literal><operator pos:line="10" pos:column="16">)<pos:position pos:line="10" pos:column="17"/></operator> <operator pos:line="10" pos:column="18">||<pos:position pos:line="10" pos:column="20"/></operator> <operator pos:line="10" pos:column="21">(<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">type<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">&gt;=<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="30">PLUGIN_TYPES<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">)<pos:position pos:line="10" pos:column="43"/></operator></expr>)<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">1<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">va_start<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">ap<pos:position pos:line="13" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="16">type<pos:position pos:line="13" pos:column="20"/></name></expr></argument>)<pos:position pos:line="13" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">ENTER<pos:position pos:line="15" pos:column="8"/></name></expr>;<pos:position pos:line="15" pos:column="9"/></expr_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">SAVETMPS<pos:position pos:line="16" pos:column="11"/></name></expr>;<pos:position pos:line="16" pos:column="12"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">PUSHMARK<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name pos:line="18" pos:column="12">SP<pos:position pos:line="18" pos:column="14"/></name></expr></argument>)<pos:position pos:line="18" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">PLUGIN_READ<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">==<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">type<pos:position pos:line="20" pos:column="26"/></name></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27"> <block pos:line="20" pos:column="28">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">subname<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">va_arg<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">ap<pos:position pos:line="21" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="26">char<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">*<pos:position pos:line="21" pos:column="32"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></then> <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><name pos:line="22" pos:column="14">PLUGIN_WRITE<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">==<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="30">type<pos:position pos:line="22" pos:column="34"/></name></expr>)<pos:position pos:line="22" pos:column="35"/></condition><then pos:line="22" pos:column="35"> <block pos:line="22" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">data_set_t<pos:position pos:line="23" pos:column="15"/></name> <modifier pos:line="23" pos:column="16">*<pos:position pos:line="23" pos:column="17"/></modifier></type><name pos:line="23" pos:column="17">ds<pos:position pos:line="23" pos:column="19"/></name></decl>;<pos:position pos:line="23" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">value_list_t<pos:position pos:line="24" pos:column="17"/></name> <modifier pos:line="24" pos:column="18">*<pos:position pos:line="24" pos:column="19"/></modifier></type><name pos:line="24" pos:column="19">vl<pos:position pos:line="24" pos:column="21"/></name></decl>;<pos:position pos:line="24" pos:column="22"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="26" pos:column="5">AV<pos:position pos:line="26" pos:column="7"/></name> <modifier pos:line="26" pos:column="8">*<pos:position pos:line="26" pos:column="9"/></modifier></type><name pos:line="26" pos:column="9">pds<pos:position pos:line="26" pos:column="12"/></name> <init pos:line="26" pos:column="13">= <expr><call><name pos:line="26" pos:column="15">newAV<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">()<pos:position pos:line="26" pos:column="22"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">HV<pos:position pos:line="27" pos:column="7"/></name> <modifier pos:line="27" pos:column="8">*<pos:position pos:line="27" pos:column="9"/></modifier></type><name pos:line="27" pos:column="9">pvl<pos:position pos:line="27" pos:column="12"/></name> <init pos:line="27" pos:column="13">= <expr><call><name pos:line="27" pos:column="15">newHV<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">()<pos:position pos:line="27" pos:column="22"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="29" pos:column="5">subname<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <call><name pos:line="29" pos:column="15">va_arg<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">ap<pos:position pos:line="29" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="26">char<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">*<pos:position pos:line="29" pos:column="32"/></operator></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
    <comment type="block" pos:line="30" pos:column="5">/*
     * $_[0] = $plugin_type;
     *
     * $_[1] =
     * [
     *   {
     *     name =&gt; $ds_name,
     *     type =&gt; $ds_type,
     *     min  =&gt; $ds_min,
     *     max  =&gt; $ds_max
     *   },
     *   ...
     * ];
     *
     * $_[2] =
     * {
     *   values =&gt; [ $v1, ... ],
     *   time   =&gt; $time,
     *   host   =&gt; $hostname,
     *   plugin =&gt; $plugin,
     *   type   =&gt; $type,
     *   plugin_instance =&gt; $instance,
     *   type_instance   =&gt; $type_instance
     * };
     */</comment>
    <expr_stmt><expr><name pos:line="55" pos:column="5">ds<pos:position pos:line="55" pos:column="7"/></name> <operator pos:line="55" pos:column="8">=<pos:position pos:line="55" pos:column="9"/></operator> <call><name pos:line="55" pos:column="10">va_arg<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><name pos:line="55" pos:column="17">ap<pos:position pos:line="55" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="21">data_set_t<pos:position pos:line="55" pos:column="31"/></name> <operator pos:line="55" pos:column="32">*<pos:position pos:line="55" pos:column="33"/></operator></expr></argument>)<pos:position pos:line="55" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="56" pos:column="5">vl<pos:position pos:line="56" pos:column="7"/></name> <operator pos:line="56" pos:column="8">=<pos:position pos:line="56" pos:column="9"/></operator> <call><name pos:line="56" pos:column="10">va_arg<pos:position pos:line="56" pos:column="16"/></name><argument_list pos:line="56" pos:column="16">(<argument><expr><name pos:line="56" pos:column="17">ap<pos:position pos:line="56" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="21">value_list_t<pos:position pos:line="56" pos:column="33"/></name> <operator pos:line="56" pos:column="34">*<pos:position pos:line="56" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="56" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="37"/></expr_stmt>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">-<pos:position pos:line="58" pos:column="10"/></operator><literal type="number" pos:line="58" pos:column="10">1<pos:position pos:line="58" pos:column="11"/></literal> <operator pos:line="58" pos:column="12">==<pos:position pos:line="58" pos:column="14"/></operator> <macro><name pos:line="58" pos:column="15">data_set2av<pos:position pos:line="58" pos:column="26"/></name><argument_list pos:line="58" pos:column="26">(<argument pos:line="58" pos:column="27">aTHX_ ds<pos:position pos:line="58" pos:column="35"/></argument>, <argument pos:line="58" pos:column="37">pds<pos:position pos:line="58" pos:column="40"/></argument>)<pos:position pos:line="58" pos:column="41"/></argument_list></macro></expr>)<pos:position pos:line="58" pos:column="42"/></condition><then pos:line="58" pos:column="42"> <block pos:line="58" pos:column="43">{
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">av_clear<pos:position pos:line="59" pos:column="15"/></name><argument_list pos:line="59" pos:column="15">(<argument><expr><name pos:line="59" pos:column="16">pds<pos:position pos:line="59" pos:column="19"/></name></expr></argument>)<pos:position pos:line="59" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">av_undef<pos:position pos:line="60" pos:column="15"/></name><argument_list pos:line="60" pos:column="15">(<argument><expr><name pos:line="60" pos:column="16">pds<pos:position pos:line="60" pos:column="19"/></name></expr></argument>)<pos:position pos:line="60" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="61" pos:column="7">pds<pos:position pos:line="61" pos:column="10"/></name> <operator pos:line="61" pos:column="11">=<pos:position pos:line="61" pos:column="12"/></operator> <operator pos:line="61" pos:column="13">(<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">AV<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">*<pos:position pos:line="61" pos:column="18"/></operator><operator pos:line="61" pos:column="18">)<pos:position pos:line="61" pos:column="19"/></operator><operator pos:line="61" pos:column="19">&amp;<pos:position pos:line="61" pos:column="24"/></operator><name pos:line="61" pos:column="20">PL_sv_undef<pos:position pos:line="61" pos:column="31"/></name></expr>;<pos:position pos:line="61" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="62" pos:column="7">ret<pos:position pos:line="62" pos:column="10"/></name> <operator pos:line="62" pos:column="11">=<pos:position pos:line="62" pos:column="12"/></operator> <operator pos:line="62" pos:column="13">-<pos:position pos:line="62" pos:column="14"/></operator><literal type="number" pos:line="62" pos:column="14">1<pos:position pos:line="62" pos:column="15"/></literal></expr>;<pos:position pos:line="62" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><operator pos:line="65" pos:column="9">-<pos:position pos:line="65" pos:column="10"/></operator><literal type="number" pos:line="65" pos:column="10">1<pos:position pos:line="65" pos:column="11"/></literal> <operator pos:line="65" pos:column="12">==<pos:position pos:line="65" pos:column="14"/></operator> <macro><name pos:line="65" pos:column="15">value_list2hv<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument pos:line="65" pos:column="29">aTHX_ vl<pos:position pos:line="65" pos:column="37"/></argument>, <argument pos:line="65" pos:column="39">ds<pos:position pos:line="65" pos:column="41"/></argument>, <argument pos:line="65" pos:column="43">pvl<pos:position pos:line="65" pos:column="46"/></argument>)<pos:position pos:line="65" pos:column="47"/></argument_list></macro></expr>)<pos:position pos:line="65" pos:column="48"/></condition><then pos:line="65" pos:column="48"> <block pos:line="65" pos:column="49">{
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">hv_clear<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><name pos:line="66" pos:column="16">pvl<pos:position pos:line="66" pos:column="19"/></name></expr></argument>)<pos:position pos:line="66" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">hv_undef<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><name pos:line="67" pos:column="16">pvl<pos:position pos:line="67" pos:column="19"/></name></expr></argument>)<pos:position pos:line="67" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="68" pos:column="7">pvl<pos:position pos:line="68" pos:column="10"/></name> <operator pos:line="68" pos:column="11">=<pos:position pos:line="68" pos:column="12"/></operator> <operator pos:line="68" pos:column="13">(<pos:position pos:line="68" pos:column="14"/></operator><name pos:line="68" pos:column="14">HV<pos:position pos:line="68" pos:column="16"/></name> <operator pos:line="68" pos:column="17">*<pos:position pos:line="68" pos:column="18"/></operator><operator pos:line="68" pos:column="18">)<pos:position pos:line="68" pos:column="19"/></operator><operator pos:line="68" pos:column="19">&amp;<pos:position pos:line="68" pos:column="24"/></operator><name pos:line="68" pos:column="20">PL_sv_undef<pos:position pos:line="68" pos:column="31"/></name></expr>;<pos:position pos:line="68" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="69" pos:column="7">ret<pos:position pos:line="69" pos:column="10"/></name> <operator pos:line="69" pos:column="11">=<pos:position pos:line="69" pos:column="12"/></operator> <operator pos:line="69" pos:column="13">-<pos:position pos:line="69" pos:column="14"/></operator><literal type="number" pos:line="69" pos:column="14">1<pos:position pos:line="69" pos:column="15"/></literal></expr>;<pos:position pos:line="69" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="72" pos:column="5">XPUSHs<pos:position pos:line="72" pos:column="11"/></name><argument_list pos:line="72" pos:column="11">(<argument><expr><call><name pos:line="72" pos:column="12">sv_2mortal<pos:position pos:line="72" pos:column="22"/></name><argument_list pos:line="72" pos:column="22">(<argument><expr><call><name pos:line="72" pos:column="23">newSVpv<pos:position pos:line="72" pos:column="30"/></name><argument_list pos:line="72" pos:column="30">(<argument><expr><name><name pos:line="72" pos:column="31">ds<pos:position pos:line="72" pos:column="33"/></name><operator pos:line="72" pos:column="33">-&gt;<pos:position pos:line="72" pos:column="38"/></operator><name pos:line="72" pos:column="35">type<pos:position pos:line="72" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="41">0<pos:position pos:line="72" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">XPUSHs<pos:position pos:line="73" pos:column="11"/></name><argument_list pos:line="73" pos:column="11">(<argument><expr><call><name pos:line="73" pos:column="12">sv_2mortal<pos:position pos:line="73" pos:column="22"/></name><argument_list pos:line="73" pos:column="22">(<argument><expr><call><name pos:line="73" pos:column="23">newRV_noinc<pos:position pos:line="73" pos:column="34"/></name><argument_list pos:line="73" pos:column="34">(<argument><expr><operator pos:line="73" pos:column="35">(<pos:position pos:line="73" pos:column="36"/></operator><name pos:line="73" pos:column="36">SV<pos:position pos:line="73" pos:column="38"/></name> <operator pos:line="73" pos:column="39">*<pos:position pos:line="73" pos:column="40"/></operator><operator pos:line="73" pos:column="40">)<pos:position pos:line="73" pos:column="41"/></operator><name pos:line="73" pos:column="41">pds<pos:position pos:line="73" pos:column="44"/></name></expr></argument>)<pos:position pos:line="73" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">XPUSHs<pos:position pos:line="74" pos:column="11"/></name><argument_list pos:line="74" pos:column="11">(<argument><expr><call><name pos:line="74" pos:column="12">sv_2mortal<pos:position pos:line="74" pos:column="22"/></name><argument_list pos:line="74" pos:column="22">(<argument><expr><call><name pos:line="74" pos:column="23">newRV_noinc<pos:position pos:line="74" pos:column="34"/></name><argument_list pos:line="74" pos:column="34">(<argument><expr><operator pos:line="74" pos:column="35">(<pos:position pos:line="74" pos:column="36"/></operator><name pos:line="74" pos:column="36">SV<pos:position pos:line="74" pos:column="38"/></name> <operator pos:line="74" pos:column="39">*<pos:position pos:line="74" pos:column="40"/></operator><operator pos:line="74" pos:column="40">)<pos:position pos:line="74" pos:column="41"/></operator><name pos:line="74" pos:column="41">pvl<pos:position pos:line="74" pos:column="44"/></name></expr></argument>)<pos:position pos:line="74" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="75" pos:column="4"/></block></then></if></elseif> <elseif pos:line="75" pos:column="5">else <if pos:line="75" pos:column="10">if <condition pos:line="75" pos:column="13">(<expr><name pos:line="75" pos:column="14">PLUGIN_LOG<pos:position pos:line="75" pos:column="24"/></name> <operator pos:line="75" pos:column="25">==<pos:position pos:line="75" pos:column="27"/></operator> <name pos:line="75" pos:column="28">type<pos:position pos:line="75" pos:column="32"/></name></expr>)<pos:position pos:line="75" pos:column="33"/></condition><then pos:line="75" pos:column="33"> <block pos:line="75" pos:column="34">{
    <expr_stmt><expr><name pos:line="76" pos:column="5">subname<pos:position pos:line="76" pos:column="12"/></name> <operator pos:line="76" pos:column="13">=<pos:position pos:line="76" pos:column="14"/></operator> <call><name pos:line="76" pos:column="15">va_arg<pos:position pos:line="76" pos:column="21"/></name><argument_list pos:line="76" pos:column="21">(<argument><expr><name pos:line="76" pos:column="22">ap<pos:position pos:line="76" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="26">char<pos:position pos:line="76" pos:column="30"/></name> <operator pos:line="76" pos:column="31">*<pos:position pos:line="76" pos:column="32"/></operator></expr></argument>)<pos:position pos:line="76" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="34"/></expr_stmt>
    <comment type="block" pos:line="77" pos:column="5">/*
     * $_[0] = $level;
     *
     * $_[1] = $message;
     */</comment>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">XPUSHs<pos:position pos:line="82" pos:column="11"/></name><argument_list pos:line="82" pos:column="11">(<argument><expr><call><name pos:line="82" pos:column="12">sv_2mortal<pos:position pos:line="82" pos:column="22"/></name><argument_list pos:line="82" pos:column="22">(<argument><expr><call><name pos:line="82" pos:column="23">newSViv<pos:position pos:line="82" pos:column="30"/></name><argument_list pos:line="82" pos:column="30">(<argument><expr><call><name pos:line="82" pos:column="31">va_arg<pos:position pos:line="82" pos:column="37"/></name><argument_list pos:line="82" pos:column="37">(<argument><expr><name pos:line="82" pos:column="38">ap<pos:position pos:line="82" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="42">int<pos:position pos:line="82" pos:column="45"/></name></expr></argument>)<pos:position pos:line="82" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">XPUSHs<pos:position pos:line="83" pos:column="11"/></name><argument_list pos:line="83" pos:column="11">(<argument><expr><call><name pos:line="83" pos:column="12">sv_2mortal<pos:position pos:line="83" pos:column="22"/></name><argument_list pos:line="83" pos:column="22">(<argument><expr><call><name pos:line="83" pos:column="23">newSVpv<pos:position pos:line="83" pos:column="30"/></name><argument_list pos:line="83" pos:column="30">(<argument><expr><call><name pos:line="83" pos:column="31">va_arg<pos:position pos:line="83" pos:column="37"/></name><argument_list pos:line="83" pos:column="37">(<argument><expr><name pos:line="83" pos:column="38">ap<pos:position pos:line="83" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="42">char<pos:position pos:line="83" pos:column="46"/></name> <operator pos:line="83" pos:column="47">*<pos:position pos:line="83" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="83" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="51">0<pos:position pos:line="83" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="56"/></expr_stmt>
  }<pos:position pos:line="84" pos:column="4"/></block></then></if></elseif> <elseif pos:line="84" pos:column="5">else <if pos:line="84" pos:column="10">if <condition pos:line="84" pos:column="13">(<expr><name pos:line="84" pos:column="14">PLUGIN_NOTIF<pos:position pos:line="84" pos:column="26"/></name> <operator pos:line="84" pos:column="27">==<pos:position pos:line="84" pos:column="29"/></operator> <name pos:line="84" pos:column="30">type<pos:position pos:line="84" pos:column="34"/></name></expr>)<pos:position pos:line="84" pos:column="35"/></condition><then pos:line="84" pos:column="35"> <block pos:line="84" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="85" pos:column="5">notification_t<pos:position pos:line="85" pos:column="19"/></name> <modifier pos:line="85" pos:column="20">*<pos:position pos:line="85" pos:column="21"/></modifier></type><name pos:line="85" pos:column="21">n<pos:position pos:line="85" pos:column="22"/></name></decl>;<pos:position pos:line="85" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="86" pos:column="5">HV<pos:position pos:line="86" pos:column="7"/></name> <modifier pos:line="86" pos:column="8">*<pos:position pos:line="86" pos:column="9"/></modifier></type><name pos:line="86" pos:column="9">notif<pos:position pos:line="86" pos:column="14"/></name> <init pos:line="86" pos:column="15">= <expr><call><name pos:line="86" pos:column="17">newHV<pos:position pos:line="86" pos:column="22"/></name><argument_list pos:line="86" pos:column="22">()<pos:position pos:line="86" pos:column="24"/></argument_list></call></expr></init></decl>;<pos:position pos:line="86" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="88" pos:column="5">subname<pos:position pos:line="88" pos:column="12"/></name> <operator pos:line="88" pos:column="13">=<pos:position pos:line="88" pos:column="14"/></operator> <call><name pos:line="88" pos:column="15">va_arg<pos:position pos:line="88" pos:column="21"/></name><argument_list pos:line="88" pos:column="21">(<argument><expr><name pos:line="88" pos:column="22">ap<pos:position pos:line="88" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="26">char<pos:position pos:line="88" pos:column="30"/></name> <operator pos:line="88" pos:column="31">*<pos:position pos:line="88" pos:column="32"/></operator></expr></argument>)<pos:position pos:line="88" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="34"/></expr_stmt>
    <comment type="block" pos:line="89" pos:column="5">/*
     * $_[0] =
     * {
     *   severity =&gt; $severity,
     *   time     =&gt; $time,
     *   message  =&gt; $msg,
     *   host     =&gt; $host,
     *   plugin   =&gt; $plugin,
     *   type     =&gt; $type,
     *   plugin_instance =&gt; $instance,
     *   type_instance   =&gt; $type_instance
     * };
     */</comment>
    <expr_stmt><expr><name pos:line="102" pos:column="5">n<pos:position pos:line="102" pos:column="6"/></name> <operator pos:line="102" pos:column="7">=<pos:position pos:line="102" pos:column="8"/></operator> <call><name pos:line="102" pos:column="9">va_arg<pos:position pos:line="102" pos:column="15"/></name><argument_list pos:line="102" pos:column="15">(<argument><expr><name pos:line="102" pos:column="16">ap<pos:position pos:line="102" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="20">notification_t<pos:position pos:line="102" pos:column="34"/></name> <operator pos:line="102" pos:column="35">*<pos:position pos:line="102" pos:column="36"/></operator></expr></argument>)<pos:position pos:line="102" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="38"/></expr_stmt>

    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><operator pos:line="104" pos:column="9">-<pos:position pos:line="104" pos:column="10"/></operator><literal type="number" pos:line="104" pos:column="10">1<pos:position pos:line="104" pos:column="11"/></literal> <operator pos:line="104" pos:column="12">==<pos:position pos:line="104" pos:column="14"/></operator> <macro><name pos:line="104" pos:column="15">notification2hv<pos:position pos:line="104" pos:column="30"/></name><argument_list pos:line="104" pos:column="30">(<argument pos:line="104" pos:column="31">aTHX_ n<pos:position pos:line="104" pos:column="38"/></argument>, <argument pos:line="104" pos:column="40">notif<pos:position pos:line="104" pos:column="45"/></argument>)<pos:position pos:line="104" pos:column="46"/></argument_list></macro></expr>)<pos:position pos:line="104" pos:column="47"/></condition><then pos:line="104" pos:column="47"> <block pos:line="104" pos:column="48">{
      <expr_stmt><expr><call><name pos:line="105" pos:column="7">hv_clear<pos:position pos:line="105" pos:column="15"/></name><argument_list pos:line="105" pos:column="15">(<argument><expr><name pos:line="105" pos:column="16">notif<pos:position pos:line="105" pos:column="21"/></name></expr></argument>)<pos:position pos:line="105" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="106" pos:column="7">hv_undef<pos:position pos:line="106" pos:column="15"/></name><argument_list pos:line="106" pos:column="15">(<argument><expr><name pos:line="106" pos:column="16">notif<pos:position pos:line="106" pos:column="21"/></name></expr></argument>)<pos:position pos:line="106" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="107" pos:column="7">notif<pos:position pos:line="107" pos:column="12"/></name> <operator pos:line="107" pos:column="13">=<pos:position pos:line="107" pos:column="14"/></operator> <operator pos:line="107" pos:column="15">(<pos:position pos:line="107" pos:column="16"/></operator><name pos:line="107" pos:column="16">HV<pos:position pos:line="107" pos:column="18"/></name> <operator pos:line="107" pos:column="19">*<pos:position pos:line="107" pos:column="20"/></operator><operator pos:line="107" pos:column="20">)<pos:position pos:line="107" pos:column="21"/></operator><operator pos:line="107" pos:column="21">&amp;<pos:position pos:line="107" pos:column="26"/></operator><name pos:line="107" pos:column="22">PL_sv_undef<pos:position pos:line="107" pos:column="33"/></name></expr>;<pos:position pos:line="107" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name pos:line="108" pos:column="7">ret<pos:position pos:line="108" pos:column="10"/></name> <operator pos:line="108" pos:column="11">=<pos:position pos:line="108" pos:column="12"/></operator> <operator pos:line="108" pos:column="13">-<pos:position pos:line="108" pos:column="14"/></operator><literal type="number" pos:line="108" pos:column="14">1<pos:position pos:line="108" pos:column="15"/></literal></expr>;<pos:position pos:line="108" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="109" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="111" pos:column="5">XPUSHs<pos:position pos:line="111" pos:column="11"/></name><argument_list pos:line="111" pos:column="11">(<argument><expr><call><name pos:line="111" pos:column="12">sv_2mortal<pos:position pos:line="111" pos:column="22"/></name><argument_list pos:line="111" pos:column="22">(<argument><expr><call><name pos:line="111" pos:column="23">newRV_noinc<pos:position pos:line="111" pos:column="34"/></name><argument_list pos:line="111" pos:column="34">(<argument><expr><operator pos:line="111" pos:column="35">(<pos:position pos:line="111" pos:column="36"/></operator><name pos:line="111" pos:column="36">SV<pos:position pos:line="111" pos:column="38"/></name> <operator pos:line="111" pos:column="39">*<pos:position pos:line="111" pos:column="40"/></operator><operator pos:line="111" pos:column="40">)<pos:position pos:line="111" pos:column="41"/></operator><name pos:line="111" pos:column="41">notif<pos:position pos:line="111" pos:column="46"/></name></expr></argument>)<pos:position pos:line="111" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="112" pos:column="4"/></block></then></if></elseif> <elseif pos:line="112" pos:column="5">else <if pos:line="112" pos:column="10">if <condition pos:line="112" pos:column="13">(<expr><name pos:line="112" pos:column="14">PLUGIN_FLUSH<pos:position pos:line="112" pos:column="26"/></name> <operator pos:line="112" pos:column="27">==<pos:position pos:line="112" pos:column="29"/></operator> <name pos:line="112" pos:column="30">type<pos:position pos:line="112" pos:column="34"/></name></expr>)<pos:position pos:line="112" pos:column="35"/></condition><then pos:line="112" pos:column="35"> <block pos:line="112" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="113" pos:column="5">cdtime_t<pos:position pos:line="113" pos:column="13"/></name></type> <name pos:line="113" pos:column="14">timeout<pos:position pos:line="113" pos:column="21"/></name></decl>;<pos:position pos:line="113" pos:column="22"/></decl_stmt>
    <expr_stmt><expr><name pos:line="114" pos:column="5">subname<pos:position pos:line="114" pos:column="12"/></name> <operator pos:line="114" pos:column="13">=<pos:position pos:line="114" pos:column="14"/></operator> <call><name pos:line="114" pos:column="15">va_arg<pos:position pos:line="114" pos:column="21"/></name><argument_list pos:line="114" pos:column="21">(<argument><expr><name pos:line="114" pos:column="22">ap<pos:position pos:line="114" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="26">char<pos:position pos:line="114" pos:column="30"/></name> <operator pos:line="114" pos:column="31">*<pos:position pos:line="114" pos:column="32"/></operator></expr></argument>)<pos:position pos:line="114" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="34"/></expr_stmt>
    <comment type="block" pos:line="115" pos:column="5">/*
     * $_[0] = $timeout;
     * $_[1] = $identifier;
     */</comment>
    <expr_stmt><expr><name pos:line="119" pos:column="5">timeout<pos:position pos:line="119" pos:column="12"/></name> <operator pos:line="119" pos:column="13">=<pos:position pos:line="119" pos:column="14"/></operator> <call><name pos:line="119" pos:column="15">va_arg<pos:position pos:line="119" pos:column="21"/></name><argument_list pos:line="119" pos:column="21">(<argument><expr><name pos:line="119" pos:column="22">ap<pos:position pos:line="119" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="26">cdtime_t<pos:position pos:line="119" pos:column="34"/></name></expr></argument>)<pos:position pos:line="119" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="121" pos:column="5">XPUSHs<pos:position pos:line="121" pos:column="11"/></name><argument_list pos:line="121" pos:column="11">(<argument><expr><call><name pos:line="121" pos:column="12">sv_2mortal<pos:position pos:line="121" pos:column="22"/></name><argument_list pos:line="121" pos:column="22">(<argument><expr><call><name pos:line="121" pos:column="23">newSVnv<pos:position pos:line="121" pos:column="30"/></name><argument_list pos:line="121" pos:column="30">(<argument><expr><call><name pos:line="121" pos:column="31">CDTIME_T_TO_DOUBLE<pos:position pos:line="121" pos:column="49"/></name><argument_list pos:line="121" pos:column="49">(<argument><expr><name pos:line="121" pos:column="50">timeout<pos:position pos:line="121" pos:column="57"/></name></expr></argument>)<pos:position pos:line="121" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="122" pos:column="5">XPUSHs<pos:position pos:line="122" pos:column="11"/></name><argument_list pos:line="122" pos:column="11">(<argument><expr><call><name pos:line="122" pos:column="12">sv_2mortal<pos:position pos:line="122" pos:column="22"/></name><argument_list pos:line="122" pos:column="22">(<argument><expr><call><name pos:line="122" pos:column="23">newSVpv<pos:position pos:line="122" pos:column="30"/></name><argument_list pos:line="122" pos:column="30">(<argument><expr><call><name pos:line="122" pos:column="31">va_arg<pos:position pos:line="122" pos:column="37"/></name><argument_list pos:line="122" pos:column="37">(<argument><expr><name pos:line="122" pos:column="38">ap<pos:position pos:line="122" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="42">char<pos:position pos:line="122" pos:column="46"/></name> <operator pos:line="122" pos:column="47">*<pos:position pos:line="122" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="122" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="51">0<pos:position pos:line="122" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="122" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="122" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="56"/></expr_stmt>
  }<pos:position pos:line="123" pos:column="4"/></block></then></if></elseif> <elseif pos:line="123" pos:column="5">else <if pos:line="123" pos:column="10">if <condition pos:line="123" pos:column="13">(<expr><name pos:line="123" pos:column="14">PLUGIN_FLUSH_ALL<pos:position pos:line="123" pos:column="30"/></name> <operator pos:line="123" pos:column="31">==<pos:position pos:line="123" pos:column="33"/></operator> <name pos:line="123" pos:column="34">type<pos:position pos:line="123" pos:column="38"/></name></expr>)<pos:position pos:line="123" pos:column="39"/></condition><then pos:line="123" pos:column="39"> <block pos:line="123" pos:column="40">{
    <decl_stmt><decl><type><name pos:line="124" pos:column="5">cdtime_t<pos:position pos:line="124" pos:column="13"/></name></type> <name pos:line="124" pos:column="14">timeout<pos:position pos:line="124" pos:column="21"/></name></decl>;<pos:position pos:line="124" pos:column="22"/></decl_stmt>
    <expr_stmt><expr><name pos:line="125" pos:column="5">subname<pos:position pos:line="125" pos:column="12"/></name> <operator pos:line="125" pos:column="13">=<pos:position pos:line="125" pos:column="14"/></operator> <literal type="string" pos:line="125" pos:column="15">"Collectd::plugin_call_all"<pos:position pos:line="125" pos:column="42"/></literal></expr>;<pos:position pos:line="125" pos:column="43"/></expr_stmt>
    <comment type="block" pos:line="126" pos:column="5">/*
     * $_[0] = $timeout;
     * $_[1] = $identifier;
     */</comment>
    <expr_stmt><expr><name pos:line="130" pos:column="5">timeout<pos:position pos:line="130" pos:column="12"/></name> <operator pos:line="130" pos:column="13">=<pos:position pos:line="130" pos:column="14"/></operator> <call><name pos:line="130" pos:column="15">va_arg<pos:position pos:line="130" pos:column="21"/></name><argument_list pos:line="130" pos:column="21">(<argument><expr><name pos:line="130" pos:column="22">ap<pos:position pos:line="130" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="26">cdtime_t<pos:position pos:line="130" pos:column="34"/></name></expr></argument>)<pos:position pos:line="130" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="132" pos:column="5">XPUSHs<pos:position pos:line="132" pos:column="11"/></name><argument_list pos:line="132" pos:column="11">(<argument><expr><call><name pos:line="132" pos:column="12">sv_2mortal<pos:position pos:line="132" pos:column="22"/></name><argument_list pos:line="132" pos:column="22">(<argument><expr><call><name pos:line="132" pos:column="23">newSViv<pos:position pos:line="132" pos:column="30"/></name><argument_list pos:line="132" pos:column="30">(<argument><expr><operator pos:line="132" pos:column="31">(<pos:position pos:line="132" pos:column="32"/></operator><name pos:line="132" pos:column="32">IV<pos:position pos:line="132" pos:column="34"/></name><operator pos:line="132" pos:column="34">)<pos:position pos:line="132" pos:column="35"/></operator><name pos:line="132" pos:column="35">PLUGIN_FLUSH<pos:position pos:line="132" pos:column="47"/></name></expr></argument>)<pos:position pos:line="132" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="132" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="132" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="133" pos:column="5">XPUSHs<pos:position pos:line="133" pos:column="11"/></name><argument_list pos:line="133" pos:column="11">(<argument><expr><call><name pos:line="133" pos:column="12">sv_2mortal<pos:position pos:line="133" pos:column="22"/></name><argument_list pos:line="133" pos:column="22">(<argument><expr><call><name pos:line="133" pos:column="23">newSVnv<pos:position pos:line="133" pos:column="30"/></name><argument_list pos:line="133" pos:column="30">(<argument><expr><call><name pos:line="133" pos:column="31">CDTIME_T_TO_DOUBLE<pos:position pos:line="133" pos:column="49"/></name><argument_list pos:line="133" pos:column="49">(<argument><expr><name pos:line="133" pos:column="50">timeout<pos:position pos:line="133" pos:column="57"/></name></expr></argument>)<pos:position pos:line="133" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="133" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="133" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="133" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="134" pos:column="5">XPUSHs<pos:position pos:line="134" pos:column="11"/></name><argument_list pos:line="134" pos:column="11">(<argument><expr><call><name pos:line="134" pos:column="12">sv_2mortal<pos:position pos:line="134" pos:column="22"/></name><argument_list pos:line="134" pos:column="22">(<argument><expr><call><name pos:line="134" pos:column="23">newSVpv<pos:position pos:line="134" pos:column="30"/></name><argument_list pos:line="134" pos:column="30">(<argument><expr><call><name pos:line="134" pos:column="31">va_arg<pos:position pos:line="134" pos:column="37"/></name><argument_list pos:line="134" pos:column="37">(<argument><expr><name pos:line="134" pos:column="38">ap<pos:position pos:line="134" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="42">char<pos:position pos:line="134" pos:column="46"/></name> <operator pos:line="134" pos:column="47">*<pos:position pos:line="134" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="134" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="51">0<pos:position pos:line="134" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="134" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="134" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="56"/></expr_stmt>
  }<pos:position pos:line="135" pos:column="4"/></block></then></if></elseif> <elseif pos:line="135" pos:column="5">else <if pos:line="135" pos:column="10">if <condition pos:line="135" pos:column="13">(<expr><name pos:line="135" pos:column="14">PLUGIN_INIT<pos:position pos:line="135" pos:column="25"/></name> <operator pos:line="135" pos:column="26">==<pos:position pos:line="135" pos:column="28"/></operator> <name pos:line="135" pos:column="29">type<pos:position pos:line="135" pos:column="33"/></name></expr>)<pos:position pos:line="135" pos:column="34"/></condition><then pos:line="135" pos:column="34"> <block pos:line="135" pos:column="35">{
    <expr_stmt><expr><name pos:line="136" pos:column="5">subname<pos:position pos:line="136" pos:column="12"/></name> <operator pos:line="136" pos:column="13">=<pos:position pos:line="136" pos:column="14"/></operator> <literal type="string" pos:line="136" pos:column="15">"Collectd::plugin_call_all"<pos:position pos:line="136" pos:column="42"/></literal></expr>;<pos:position pos:line="136" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="137" pos:column="5">XPUSHs<pos:position pos:line="137" pos:column="11"/></name><argument_list pos:line="137" pos:column="11">(<argument><expr><call><name pos:line="137" pos:column="12">sv_2mortal<pos:position pos:line="137" pos:column="22"/></name><argument_list pos:line="137" pos:column="22">(<argument><expr><call><name pos:line="137" pos:column="23">newSViv<pos:position pos:line="137" pos:column="30"/></name><argument_list pos:line="137" pos:column="30">(<argument><expr><operator pos:line="137" pos:column="31">(<pos:position pos:line="137" pos:column="32"/></operator><name pos:line="137" pos:column="32">IV<pos:position pos:line="137" pos:column="34"/></name><operator pos:line="137" pos:column="34">)<pos:position pos:line="137" pos:column="35"/></operator><name pos:line="137" pos:column="35">type<pos:position pos:line="137" pos:column="39"/></name></expr></argument>)<pos:position pos:line="137" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="137" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="137" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="138" pos:column="4"/></block></then></if></elseif> <elseif pos:line="138" pos:column="5">else <if pos:line="138" pos:column="10">if <condition pos:line="138" pos:column="13">(<expr><name pos:line="138" pos:column="14">PLUGIN_SHUTDOWN<pos:position pos:line="138" pos:column="29"/></name> <operator pos:line="138" pos:column="30">==<pos:position pos:line="138" pos:column="32"/></operator> <name pos:line="138" pos:column="33">type<pos:position pos:line="138" pos:column="37"/></name></expr>)<pos:position pos:line="138" pos:column="38"/></condition><then pos:line="138" pos:column="38"> <block pos:line="138" pos:column="39">{
    <expr_stmt><expr><name pos:line="139" pos:column="5">subname<pos:position pos:line="139" pos:column="12"/></name> <operator pos:line="139" pos:column="13">=<pos:position pos:line="139" pos:column="14"/></operator> <literal type="string" pos:line="139" pos:column="15">"Collectd::plugin_call_all"<pos:position pos:line="139" pos:column="42"/></literal></expr>;<pos:position pos:line="139" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="140" pos:column="5">XPUSHs<pos:position pos:line="140" pos:column="11"/></name><argument_list pos:line="140" pos:column="11">(<argument><expr><call><name pos:line="140" pos:column="12">sv_2mortal<pos:position pos:line="140" pos:column="22"/></name><argument_list pos:line="140" pos:column="22">(<argument><expr><call><name pos:line="140" pos:column="23">newSViv<pos:position pos:line="140" pos:column="30"/></name><argument_list pos:line="140" pos:column="30">(<argument><expr><operator pos:line="140" pos:column="31">(<pos:position pos:line="140" pos:column="32"/></operator><name pos:line="140" pos:column="32">IV<pos:position pos:line="140" pos:column="34"/></name><operator pos:line="140" pos:column="34">)<pos:position pos:line="140" pos:column="35"/></operator><name pos:line="140" pos:column="35">type<pos:position pos:line="140" pos:column="39"/></name></expr></argument>)<pos:position pos:line="140" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="140" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="140" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="141" pos:column="4"/></block></then></if></elseif> <else pos:line="141" pos:column="5">else <block pos:line="141" pos:column="10">{ <comment type="block" pos:line="141" pos:column="12">/* Unknown type. Run 'plugin_call_all' and make compiler happy */</comment>
    <expr_stmt><expr><name pos:line="142" pos:column="5">subname<pos:position pos:line="142" pos:column="12"/></name> <operator pos:line="142" pos:column="13">=<pos:position pos:line="142" pos:column="14"/></operator> <literal type="string" pos:line="142" pos:column="15">"Collectd::plugin_call_all"<pos:position pos:line="142" pos:column="42"/></literal></expr>;<pos:position pos:line="142" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="143" pos:column="5">XPUSHs<pos:position pos:line="143" pos:column="11"/></name><argument_list pos:line="143" pos:column="11">(<argument><expr><call><name pos:line="143" pos:column="12">sv_2mortal<pos:position pos:line="143" pos:column="22"/></name><argument_list pos:line="143" pos:column="22">(<argument><expr><call><name pos:line="143" pos:column="23">newSViv<pos:position pos:line="143" pos:column="30"/></name><argument_list pos:line="143" pos:column="30">(<argument><expr><operator pos:line="143" pos:column="31">(<pos:position pos:line="143" pos:column="32"/></operator><name pos:line="143" pos:column="32">IV<pos:position pos:line="143" pos:column="34"/></name><operator pos:line="143" pos:column="34">)<pos:position pos:line="143" pos:column="35"/></operator><name pos:line="143" pos:column="35">type<pos:position pos:line="143" pos:column="39"/></name></expr></argument>)<pos:position pos:line="143" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="143" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="143" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="144" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="146" pos:column="3">PUTBACK<pos:position pos:line="146" pos:column="10"/></name></expr>;<pos:position pos:line="146" pos:column="11"/></expr_stmt>

  <expr_stmt><expr><name pos:line="148" pos:column="3">retvals<pos:position pos:line="148" pos:column="10"/></name> <operator pos:line="148" pos:column="11">=<pos:position pos:line="148" pos:column="12"/></operator> <macro><name pos:line="148" pos:column="13">call_pv_locked<pos:position pos:line="148" pos:column="27"/></name><argument_list pos:line="148" pos:column="27">(<argument pos:line="148" pos:column="28">aTHX_ subname<pos:position pos:line="148" pos:column="41"/></argument>)<pos:position pos:line="148" pos:column="42"/></argument_list></macro></expr>;<pos:position pos:line="148" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><name pos:line="150" pos:column="3">SPAGAIN<pos:position pos:line="150" pos:column="10"/></name></expr>;<pos:position pos:line="150" pos:column="11"/></expr_stmt>
  <if pos:line="151" pos:column="3">if <condition pos:line="151" pos:column="6">(<expr><call><name pos:line="151" pos:column="7">SvTRUE<pos:position pos:line="151" pos:column="13"/></name><argument_list pos:line="151" pos:column="13">(<argument><expr><name pos:line="151" pos:column="14">ERRSV<pos:position pos:line="151" pos:column="19"/></name></expr></argument>)<pos:position pos:line="151" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="151" pos:column="21"/></condition><then pos:line="151" pos:column="21"> <block pos:line="151" pos:column="22">{
    <if pos:line="152" pos:column="5">if <condition pos:line="152" pos:column="8">(<expr><name pos:line="152" pos:column="9">PLUGIN_LOG<pos:position pos:line="152" pos:column="19"/></name> <operator pos:line="152" pos:column="20">!=<pos:position pos:line="152" pos:column="22"/></operator> <name pos:line="152" pos:column="23">type<pos:position pos:line="152" pos:column="27"/></name></expr>)<pos:position pos:line="152" pos:column="28"/></condition><then pos:line="152" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="153" pos:column="7">ERROR<pos:position pos:line="153" pos:column="12"/></name><argument_list pos:line="153" pos:column="12">(<argument><expr><literal type="string" pos:line="153" pos:column="13">"perl: %s error: %s"<pos:position pos:line="153" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="35">subname<pos:position pos:line="153" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="153" pos:column="44">SvPV_nolen<pos:position pos:line="153" pos:column="54"/></name><argument_list pos:line="153" pos:column="54">(<argument><expr><name pos:line="153" pos:column="55">ERRSV<pos:position pos:line="153" pos:column="60"/></name></expr></argument>)<pos:position pos:line="153" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="153" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="63"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="154" pos:column="5">ret<pos:position pos:line="154" pos:column="8"/></name> <operator pos:line="154" pos:column="9">=<pos:position pos:line="154" pos:column="10"/></operator> <operator pos:line="154" pos:column="11">-<pos:position pos:line="154" pos:column="12"/></operator><literal type="number" pos:line="154" pos:column="12">1<pos:position pos:line="154" pos:column="13"/></literal></expr>;<pos:position pos:line="154" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="155" pos:column="4"/></block></then> <elseif pos:line="155" pos:column="5">else <if pos:line="155" pos:column="10">if <condition pos:line="155" pos:column="13">(<expr><literal type="number" pos:line="155" pos:column="14">0<pos:position pos:line="155" pos:column="15"/></literal> <operator pos:line="155" pos:column="16">&lt;<pos:position pos:line="155" pos:column="20"/></operator> <name pos:line="155" pos:column="18">retvals<pos:position pos:line="155" pos:column="25"/></name></expr>)<pos:position pos:line="155" pos:column="26"/></condition><then pos:line="155" pos:column="26"> <block pos:line="155" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="156" pos:column="5">SV<pos:position pos:line="156" pos:column="7"/></name> <modifier pos:line="156" pos:column="8">*<pos:position pos:line="156" pos:column="9"/></modifier></type><name pos:line="156" pos:column="9">tmp<pos:position pos:line="156" pos:column="12"/></name> <init pos:line="156" pos:column="13">= <expr><name pos:line="156" pos:column="15">POPs<pos:position pos:line="156" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="156" pos:column="20"/></decl_stmt>
    <if pos:line="157" pos:column="5">if <condition pos:line="157" pos:column="8">(<expr><operator pos:line="157" pos:column="9">!<pos:position pos:line="157" pos:column="10"/></operator><call><name pos:line="157" pos:column="10">SvTRUE<pos:position pos:line="157" pos:column="16"/></name><argument_list pos:line="157" pos:column="16">(<argument><expr><name pos:line="157" pos:column="17">tmp<pos:position pos:line="157" pos:column="20"/></name></expr></argument>)<pos:position pos:line="157" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="157" pos:column="22"/></condition><then pos:line="157" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><name pos:line="158" pos:column="7">ret<pos:position pos:line="158" pos:column="10"/></name> <operator pos:line="158" pos:column="11">=<pos:position pos:line="158" pos:column="12"/></operator> <operator pos:line="158" pos:column="13">-<pos:position pos:line="158" pos:column="14"/></operator><literal type="number" pos:line="158" pos:column="14">1<pos:position pos:line="158" pos:column="15"/></literal></expr>;<pos:position pos:line="158" pos:column="16"/></expr_stmt></block></then></if>
  }<pos:position pos:line="159" pos:column="4"/></block></then></if></elseif></if>

  <expr_stmt><expr><name pos:line="161" pos:column="3">PUTBACK<pos:position pos:line="161" pos:column="10"/></name></expr>;<pos:position pos:line="161" pos:column="11"/></expr_stmt>
  <expr_stmt><expr><name pos:line="162" pos:column="3">FREETMPS<pos:position pos:line="162" pos:column="11"/></name></expr>;<pos:position pos:line="162" pos:column="12"/></expr_stmt>
  <expr_stmt><expr><name pos:line="163" pos:column="3">LEAVE<pos:position pos:line="163" pos:column="8"/></name></expr>;<pos:position pos:line="163" pos:column="9"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="165" pos:column="3">va_end<pos:position pos:line="165" pos:column="9"/></name><argument_list pos:line="165" pos:column="9">(<argument><expr><name pos:line="165" pos:column="10">ap<pos:position pos:line="165" pos:column="12"/></name></expr></argument>)<pos:position pos:line="165" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="14"/></expr_stmt>
  <return pos:line="166" pos:column="3">return <expr><name pos:line="166" pos:column="10">ret<pos:position pos:line="166" pos:column="13"/></name></expr>;<pos:position pos:line="166" pos:column="14"/></return>
}<pos:position pos:line="167" pos:column="2"/></block></function></unit>

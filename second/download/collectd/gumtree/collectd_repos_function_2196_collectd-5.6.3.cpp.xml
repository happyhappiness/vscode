<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2196_collectd-5.6.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">lookup_search<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">lookup_t<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">obj<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="34">/* {{{ */</comment>
                  <parameter><decl><type><name pos:line="2" pos:column="19">data_set_t<pos:position pos:line="2" pos:column="29"/></name> <specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">ds<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">value_list_t<pos:position pos:line="2" pos:column="53"/></name> <specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">vl<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list> <block pos:line="2" pos:column="65">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">by_type_entry_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">by_type<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name pos:line="3" pos:column="30">NULL<pos:position pos:line="3" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">user_class_list_t<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">user_class_list<pos:position pos:line="4" pos:column="37"/></name> <init pos:line="4" pos:column="38">= <expr><name pos:line="4" pos:column="40">NULL<pos:position pos:line="4" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">retval<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">obj<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">==<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">)<pos:position pos:line="8" pos:column="20"/></operator> <operator pos:line="8" pos:column="21">||<pos:position pos:line="8" pos:column="23"/></operator> <operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">ds<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">==<pos:position pos:line="8" pos:column="30"/></operator> <name pos:line="8" pos:column="31">NULL<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">)<pos:position pos:line="8" pos:column="36"/></operator> <operator pos:line="8" pos:column="37">||<pos:position pos:line="8" pos:column="39"/></operator> <operator pos:line="8" pos:column="40">(<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">vl<pos:position pos:line="8" pos:column="43"/></name> <operator pos:line="8" pos:column="44">==<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="47">NULL<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">)<pos:position pos:line="8" pos:column="52"/></operator></expr>)<pos:position pos:line="8" pos:column="53"/></condition><then pos:line="8" pos:column="53">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">-<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">EINVAL<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">)<pos:position pos:line="9" pos:column="21"/></operator></expr>;<pos:position pos:line="9" pos:column="22"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">by_type<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <call><name pos:line="11" pos:column="13">lu_search_by_type<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">obj<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="36">vl<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">type<pos:position pos:line="11" pos:column="44"/></name></name></expr></argument>, <comment type="block" pos:line="11" pos:column="46">/* allocate = */</comment> <argument><expr><literal type="number" pos:line="11" pos:column="63">0<pos:position pos:line="11" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="66"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">by_type<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">==<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">NULL<pos:position pos:line="12" pos:column="22"/></name></expr>)<pos:position pos:line="12" pos:column="23"/></condition><then pos:line="12" pos:column="23">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">0<pos:position pos:line="13" pos:column="14"/></literal><operator pos:line="13" pos:column="14">)<pos:position pos:line="13" pos:column="15"/></operator></expr>;<pos:position pos:line="13" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">status<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator>
      <call><name pos:line="16" pos:column="7">c_avl_get<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name><name pos:line="16" pos:column="17">by_type<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">by_plugin_tree<pos:position pos:line="16" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="42">vl<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">-&gt;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="46">plugin<pos:position pos:line="16" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="54">(<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="55">void<pos:position pos:line="16" pos:column="59"/></name> <operator pos:line="16" pos:column="60">*<pos:position pos:line="16" pos:column="61"/></operator><operator pos:line="16" pos:column="61">)<pos:position pos:line="16" pos:column="62"/></operator><operator pos:line="16" pos:column="62">&amp;<pos:position pos:line="16" pos:column="67"/></operator><name pos:line="16" pos:column="63">user_class_list<pos:position pos:line="16" pos:column="78"/></name></expr></argument>)<pos:position pos:line="16" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="80"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">status<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">==<pos:position pos:line="17" pos:column="16"/></operator> <literal type="number" pos:line="17" pos:column="17">0<pos:position pos:line="17" pos:column="18"/></literal></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19"> <block pos:line="17" pos:column="20">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">status<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">lu_handle_user_class_list<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">obj<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">ds<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">vl<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="53">user_class_list<pos:position pos:line="18" pos:column="68"/></name></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="70"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">status<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">&lt;<pos:position pos:line="19" pos:column="20"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20">
      <block type="pseudo"><return pos:line="20" pos:column="7">return <expr><operator pos:line="20" pos:column="14">(<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">status<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">)<pos:position pos:line="20" pos:column="22"/></operator></expr>;<pos:position pos:line="20" pos:column="23"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="21" pos:column="5">retval<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">+=<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">status<pos:position pos:line="21" pos:column="21"/></name></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name><name pos:line="24" pos:column="7">by_type<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">wildcard_plugin_list<pos:position pos:line="24" pos:column="36"/></name></name> <operator pos:line="24" pos:column="37">!=<pos:position pos:line="24" pos:column="39"/></operator> <name pos:line="24" pos:column="40">NULL<pos:position pos:line="24" pos:column="44"/></name></expr>)<pos:position pos:line="24" pos:column="45"/></condition><then pos:line="24" pos:column="45"> <block pos:line="24" pos:column="46">{
    <expr_stmt><expr><name pos:line="25" pos:column="5">status<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator>
        <call><name pos:line="26" pos:column="9">lu_handle_user_class_list<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><name pos:line="26" pos:column="35">obj<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="40">ds<pos:position pos:line="26" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="44">vl<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="48">by_type<pos:position pos:line="26" pos:column="55"/></name><operator pos:line="26" pos:column="55">-&gt;<pos:position pos:line="26" pos:column="60"/></operator><name pos:line="26" pos:column="57">wildcard_plugin_list<pos:position pos:line="26" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="79"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">status<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">&lt;<pos:position pos:line="27" pos:column="20"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20">
      <block type="pseudo"><return pos:line="28" pos:column="7">return <expr><operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">status<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">)<pos:position pos:line="28" pos:column="22"/></operator></expr>;<pos:position pos:line="28" pos:column="23"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="29" pos:column="5">retval<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">+=<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">status<pos:position pos:line="29" pos:column="21"/></name></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <return pos:line="32" pos:column="3">return <expr><operator pos:line="32" pos:column="10">(<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="11">retval<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">)<pos:position pos:line="32" pos:column="18"/></operator></expr>;<pos:position pos:line="32" pos:column="19"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

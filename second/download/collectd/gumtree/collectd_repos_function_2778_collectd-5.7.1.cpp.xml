<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2778_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">plugin_ctx_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">plugin_set_ctx<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">plugin_ctx_t<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">ctx<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <block pos:line="1" pos:column="47">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">plugin_ctx_t<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">c<pos:position pos:line="2" pos:column="18"/></name></decl>;<pos:position pos:line="2" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">plugin_ctx_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">old<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">assert<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">plugin_ctx_key_initialized<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name pos:line="6" pos:column="3">c<pos:position pos:line="6" pos:column="4"/></name> <operator pos:line="6" pos:column="5">=<pos:position pos:line="6" pos:column="6"/></operator> <call><name pos:line="6" pos:column="7">pthread_getspecific<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">plugin_ctx_key<pos:position pos:line="6" pos:column="41"/></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">c<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">==<pos:position pos:line="8" pos:column="11"/></operator> <name pos:line="8" pos:column="12">NULL<pos:position pos:line="8" pos:column="16"/></name></expr>)<pos:position pos:line="8" pos:column="17"/></condition><then pos:line="8" pos:column="17"> <block pos:line="8" pos:column="18">{
    <expr_stmt><expr><name pos:line="9" pos:column="5">c<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">plugin_ctx_create<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">()<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
    <comment type="block" pos:line="10" pos:column="5">/* this must no happen -- exit() instead? */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">c<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">==<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">NULL<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
      <block type="pseudo"><return pos:line="12" pos:column="7">return <expr><name pos:line="12" pos:column="14">ctx_init<pos:position pos:line="12" pos:column="22"/></name></expr>;<pos:position pos:line="12" pos:column="23"/></return></block></then></if>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">old<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">c<pos:position pos:line="15" pos:column="11"/></name></expr>;<pos:position pos:line="15" pos:column="12"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="16" pos:column="3">*<pos:position pos:line="16" pos:column="4"/></operator><name pos:line="16" pos:column="4">c<pos:position pos:line="16" pos:column="5"/></name> <operator pos:line="16" pos:column="6">=<pos:position pos:line="16" pos:column="7"/></operator> <name pos:line="16" pos:column="8">ctx<pos:position pos:line="16" pos:column="11"/></name></expr>;<pos:position pos:line="16" pos:column="12"/></expr_stmt>

  <return pos:line="18" pos:column="3">return <expr><operator pos:line="18" pos:column="10">(<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">old<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">)<pos:position pos:line="18" pos:column="15"/></operator></expr>;<pos:position pos:line="18" pos:column="16"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

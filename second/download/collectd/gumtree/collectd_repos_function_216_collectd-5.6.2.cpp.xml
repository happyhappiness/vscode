<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_216_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">memory_submit<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">gauge_t<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">memory<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">virDomainPtr<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">dom<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list> <block pos:line="1" pos:column="61">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">value_t<pos:position pos:line="2" pos:column="10"/></name></type> <name><name pos:line="2" pos:column="11">values<pos:position pos:line="2" pos:column="17"/></name><index pos:line="2" pos:column="17">[<expr><literal type="number" pos:line="2" pos:column="18">1<pos:position pos:line="2" pos:column="19"/></literal></expr>]<pos:position pos:line="2" pos:column="20"/></index></name></decl>;<pos:position pos:line="2" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_list_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">vl<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">init_value_list<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><operator pos:line="5" pos:column="19">&amp;<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="20">vl<pos:position pos:line="5" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="24">dom<pos:position pos:line="5" pos:column="27"/></name></expr></argument>)<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="7" pos:column="3">values<pos:position pos:line="7" pos:column="9"/></name><index pos:line="7" pos:column="9">[<expr><literal type="number" pos:line="7" pos:column="10">0<pos:position pos:line="7" pos:column="11"/></literal></expr>]<pos:position pos:line="7" pos:column="12"/></index></name><operator pos:line="7" pos:column="12">.<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">gauge<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">memory<pos:position pos:line="7" pos:column="27"/></name></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="9" pos:column="3">vl<pos:position pos:line="9" pos:column="5"/></name><operator pos:line="9" pos:column="5">.<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">values<pos:position pos:line="9" pos:column="12"/></name></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">values<pos:position pos:line="9" pos:column="21"/></name></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">vl<pos:position pos:line="10" pos:column="5"/></name><operator pos:line="10" pos:column="5">.<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">values_len<pos:position pos:line="10" pos:column="16"/></name></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <literal type="number" pos:line="10" pos:column="19">1<pos:position pos:line="10" pos:column="20"/></literal></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">sstrncpy<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name><name pos:line="12" pos:column="12">vl<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">.<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">type<pos:position pos:line="12" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="21">"memory"<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="31">sizeof<argument_list pos:line="12" pos:column="37">(<argument><expr><name><name pos:line="12" pos:column="38">vl<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">.<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="41">type<pos:position pos:line="12" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">sstrncpy<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name><name pos:line="13" pos:column="12">vl<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">.<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">type_instance<pos:position pos:line="13" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="30">"total"<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="39">sizeof<argument_list pos:line="13" pos:column="45">(<argument><expr><name><name pos:line="13" pos:column="46">vl<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">.<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="49">type_instance<pos:position pos:line="13" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">plugin_dispatch_values<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><operator pos:line="15" pos:column="26">&amp;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="27">vl<pos:position pos:line="15" pos:column="29"/></name></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1516_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">plugin_load_file<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">file<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">uint32_t<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">flags<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">lt_dlhandle<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">dlh<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<function_decl><type><name pos:line="4" pos:column="9">void<pos:position pos:line="4" pos:column="13"/></name></type> (<modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier><name pos:line="4" pos:column="16">reg_handle<pos:position pos:line="4" pos:column="26"/></name>) <parameter_list pos:line="4" pos:column="28">(<parameter><decl><type><name pos:line="4" pos:column="29">void<pos:position pos:line="4" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="4" pos:column="34"/></parameter_list>;<pos:position pos:line="4" pos:column="35"/></function_decl>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">DEBUG<pos:position pos:line="6" pos:column="14"/></name> <argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="string" pos:line="6" pos:column="16">"file = %s"<pos:position pos:line="6" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="29">file<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">lt_dlinit<pos:position pos:line="8" pos:column="18"/></name> <argument_list pos:line="8" pos:column="19">()<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">lt_dlerror<pos:position pos:line="9" pos:column="19"/></name> <argument_list pos:line="9" pos:column="20">()<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt> <comment type="block" pos:line="9" pos:column="24">/* clear errors */</comment>

<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">LIBTOOL_VERSION<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">==<pos:position pos:line="11" pos:column="23"/></operator> <literal type="number" pos:line="11" pos:column="24">2<pos:position pos:line="11" pos:column="25"/></literal></expr></cpp:if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">flags<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">&amp;<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="21">PLUGIN_FLAGS_GLOBAL<pos:position pos:line="12" pos:column="40"/></name></expr>)<pos:position pos:line="12" pos:column="41"/></condition><then pos:line="12" pos:column="41"> <block pos:line="12" pos:column="42">{
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">lt_dladvise<pos:position pos:line="13" pos:column="28"/></name></type> <name pos:line="13" pos:column="29">advise<pos:position pos:line="13" pos:column="35"/></name></decl>;<pos:position pos:line="13" pos:column="36"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">lt_dladvise_init<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><operator pos:line="14" pos:column="34">&amp;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="35">advise<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">lt_dladvise_global<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><operator pos:line="15" pos:column="36">&amp;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="37">advise<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">dlh<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <call><name pos:line="16" pos:column="23">lt_dlopenadvise<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">file<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">advise<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">lt_dladvise_destroy<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><operator pos:line="17" pos:column="37">&amp;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="38">advise<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then> <else pos:line="18" pos:column="11">else <block pos:line="18" pos:column="16">{
        	<expr_stmt><expr><name pos:line="19" pos:column="17">dlh<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <call><name pos:line="19" pos:column="23">lt_dlopen<pos:position pos:line="19" pos:column="32"/></name> <argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">file<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></else></if>
<cpp:else pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">else<pos:position pos:line="21" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="21" pos:column="7">/* if LIBTOOL_VERSION == 1 */</comment>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">flags<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">&amp;<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="21">PLUGIN_FLAGS_GLOBAL<pos:position pos:line="22" pos:column="40"/></name></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">ERROR<pos:position pos:line="23" pos:column="22"/></name> <argument_list pos:line="23" pos:column="23">(<argument><expr><literal type="string" pos:line="23" pos:column="24">"plugin_load_file: The global flag is not supported, "<pos:position pos:line="23" pos:column="78"/></literal>
				<literal type="string" pos:line="24" pos:column="33">"libtool 2 is required for this."<pos:position pos:line="24" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="68"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="25" pos:column="9">dlh<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <call><name pos:line="25" pos:column="15">lt_dlopen<pos:position pos:line="25" pos:column="24"/></name> <argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">file<pos:position pos:line="25" pos:column="30"/></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">dlh<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">==<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">NULL<pos:position pos:line="28" pos:column="24"/></name></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25">
	<block pos:line="29" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="30" pos:column="17">const<pos:position pos:line="30" pos:column="22"/></specifier> <name pos:line="30" pos:column="23">char<pos:position pos:line="30" pos:column="27"/></name> <modifier pos:line="30" pos:column="28">*<pos:position pos:line="30" pos:column="29"/></modifier></type><name pos:line="30" pos:column="29">error<pos:position pos:line="30" pos:column="34"/></name> <init pos:line="30" pos:column="35">= <expr><call><name pos:line="30" pos:column="37">lt_dlerror<pos:position pos:line="30" pos:column="47"/></name> <argument_list pos:line="30" pos:column="48">()<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="51"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="32" pos:column="17">ERROR<pos:position pos:line="32" pos:column="22"/></name> <argument_list pos:line="32" pos:column="23">(<argument><expr><literal type="string" pos:line="32" pos:column="24">"lt_dlopen (%s) failed: %s"<pos:position pos:line="32" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="53">file<pos:position pos:line="32" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="59">error<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">fprintf<pos:position pos:line="33" pos:column="24"/></name> <argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">stderr<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="34">"lt_dlopen (%s) failed: %s\n"<pos:position pos:line="33" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="65">file<pos:position pos:line="33" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="71">error<pos:position pos:line="33" pos:column="76"/></name></expr></argument>)<pos:position pos:line="33" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="78"/></expr_stmt>
		<return pos:line="34" pos:column="17">return <expr><operator pos:line="34" pos:column="24">(<pos:position pos:line="34" pos:column="25"/></operator><literal type="number" pos:line="34" pos:column="25">1<pos:position pos:line="34" pos:column="26"/></literal><operator pos:line="34" pos:column="26">)<pos:position pos:line="34" pos:column="27"/></operator></expr>;<pos:position pos:line="34" pos:column="28"/></return>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">(<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">reg_handle<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <operator pos:line="37" pos:column="27">(<pos:position pos:line="37" pos:column="28"/></operator><call><call><name pos:line="37" pos:column="28">void<pos:position pos:line="37" pos:column="32"/></name> <argument_list pos:line="37" pos:column="33">(<argument><expr><operator pos:line="37" pos:column="34">*<pos:position pos:line="37" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="37" pos:column="36"/></argument_list></call> <argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">void<pos:position pos:line="37" pos:column="42"/></name></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call><operator pos:line="37" pos:column="43">)<pos:position pos:line="37" pos:column="44"/></operator> <call><name pos:line="37" pos:column="45">lt_dlsym<pos:position pos:line="37" pos:column="53"/></name> <argument_list pos:line="37" pos:column="54">(<argument><expr><name pos:line="37" pos:column="55">dlh<pos:position pos:line="37" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="60">"module_register"<pos:position pos:line="37" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="78"/></argument_list></call><operator pos:line="37" pos:column="78">)<pos:position pos:line="37" pos:column="79"/></operator> <operator pos:line="37" pos:column="80">==<pos:position pos:line="37" pos:column="82"/></operator> <name pos:line="37" pos:column="83">NULL<pos:position pos:line="37" pos:column="87"/></name></expr>)<pos:position pos:line="37" pos:column="88"/></condition><then pos:line="37" pos:column="88">
	<block pos:line="38" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">WARNING<pos:position pos:line="39" pos:column="24"/></name> <argument_list pos:line="39" pos:column="25">(<argument><expr><literal type="string" pos:line="39" pos:column="26">"Couldn't find symbol `module_register' in `%s': %s\n"<pos:position pos:line="39" pos:column="80"/></literal></expr></argument>,
				<argument><expr><name pos:line="40" pos:column="33">file<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="39">lt_dlerror<pos:position pos:line="40" pos:column="49"/></name> <argument_list pos:line="40" pos:column="50">()<pos:position pos:line="40" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">lt_dlclose<pos:position pos:line="41" pos:column="27"/></name> <argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">dlh<pos:position pos:line="41" pos:column="32"/></name></expr></argument>)<pos:position pos:line="41" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>
		<return pos:line="42" pos:column="17">return <expr><operator pos:line="42" pos:column="24">(<pos:position pos:line="42" pos:column="25"/></operator><operator pos:line="42" pos:column="25">-<pos:position pos:line="42" pos:column="26"/></operator><literal type="number" pos:line="42" pos:column="26">1<pos:position pos:line="42" pos:column="27"/></literal><operator pos:line="42" pos:column="27">)<pos:position pos:line="42" pos:column="28"/></operator></expr>;<pos:position pos:line="42" pos:column="29"/></return>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call pos:line="45" pos:column="9">(<modifier pos:line="45" pos:column="10">*<pos:position pos:line="45" pos:column="11"/></modifier><name pos:line="45" pos:column="11">reg_handle<pos:position pos:line="45" pos:column="21"/></name>) <argument_list pos:line="45" pos:column="23">()<pos:position pos:line="45" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt>

	<return pos:line="47" pos:column="9">return <expr><operator pos:line="47" pos:column="16">(<pos:position pos:line="47" pos:column="17"/></operator><literal type="number" pos:line="47" pos:column="17">0<pos:position pos:line="47" pos:column="18"/></literal><operator pos:line="47" pos:column="18">)<pos:position pos:line="47" pos:column="19"/></operator></expr>;<pos:position pos:line="47" pos:column="20"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

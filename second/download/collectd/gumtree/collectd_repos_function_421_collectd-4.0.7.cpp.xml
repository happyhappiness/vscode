<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_421_collectd-4.0.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rrd_write_cache_entry<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">filename<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">rrd_cache_t<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">rc<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">argv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type>    <name pos:line="4" pos:column="16">argc<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">fn<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">status<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">rc<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">values_num<pos:position pos:line="11" pos:column="27"/></name></name> <operator pos:line="11" pos:column="28">&lt;<pos:position pos:line="11" pos:column="32"/></operator> <literal type="number" pos:line="11" pos:column="30">1<pos:position pos:line="11" pos:column="31"/></literal></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal><operator pos:line="12" pos:column="26">)<pos:position pos:line="12" pos:column="27"/></operator></expr>;<pos:position pos:line="12" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">argc<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <name><name pos:line="14" pos:column="16">rc<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">values_num<pos:position pos:line="14" pos:column="30"/></name></name> <operator pos:line="14" pos:column="31">+<pos:position pos:line="14" pos:column="32"/></operator> <literal type="number" pos:line="14" pos:column="33">2<pos:position pos:line="14" pos:column="34"/></literal></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">argv<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <operator pos:line="15" pos:column="16">(<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">char<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></operator><operator pos:line="15" pos:column="23">*<pos:position pos:line="15" pos:column="24"/></operator><operator pos:line="15" pos:column="24">)<pos:position pos:line="15" pos:column="25"/></operator> <call><name pos:line="15" pos:column="26">malloc<pos:position pos:line="15" pos:column="32"/></name> <argument_list pos:line="15" pos:column="33">(<argument><expr><operator pos:line="15" pos:column="34">(<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="35">argc<pos:position pos:line="15" pos:column="39"/></name> <operator pos:line="15" pos:column="40">+<pos:position pos:line="15" pos:column="41"/></operator> <literal type="number" pos:line="15" pos:column="42">1<pos:position pos:line="15" pos:column="43"/></literal><operator pos:line="15" pos:column="43">)<pos:position pos:line="15" pos:column="44"/></operator> <operator pos:line="15" pos:column="45">*<pos:position pos:line="15" pos:column="46"/></operator> <sizeof pos:line="15" pos:column="47">sizeof <argument_list pos:line="15" pos:column="54">(<argument><expr><name pos:line="15" pos:column="55">char<pos:position pos:line="15" pos:column="59"/></name> <operator pos:line="15" pos:column="60">*<pos:position pos:line="15" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">argv<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">==<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">NULL<pos:position pos:line="16" pos:column="25"/></name></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><operator pos:line="17" pos:column="25">-<pos:position pos:line="17" pos:column="26"/></operator><literal type="number" pos:line="17" pos:column="26">1<pos:position pos:line="17" pos:column="27"/></literal><operator pos:line="17" pos:column="27">)<pos:position pos:line="17" pos:column="28"/></operator></expr>;<pos:position pos:line="17" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="19" pos:column="9">fn<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">strdup<pos:position pos:line="19" pos:column="20"/></name> <argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">filename<pos:position pos:line="19" pos:column="30"/></name></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">fn<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">==<pos:position pos:line="20" pos:column="18"/></operator> <name pos:line="20" pos:column="19">NULL<pos:position pos:line="20" pos:column="23"/></name></expr>)<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24">
	<block pos:line="21" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">free<pos:position pos:line="22" pos:column="21"/></name> <argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">argv<pos:position pos:line="22" pos:column="27"/></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
		<return pos:line="23" pos:column="17">return <expr><operator pos:line="23" pos:column="24">(<pos:position pos:line="23" pos:column="25"/></operator><operator pos:line="23" pos:column="25">-<pos:position pos:line="23" pos:column="26"/></operator><literal type="number" pos:line="23" pos:column="26">1<pos:position pos:line="23" pos:column="27"/></literal><operator pos:line="23" pos:column="27">)<pos:position pos:line="23" pos:column="28"/></operator></expr>;<pos:position pos:line="23" pos:column="29"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="26" pos:column="9">argv<pos:position pos:line="26" pos:column="13"/></name><index pos:line="26" pos:column="13">[<expr><literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal></expr>]<pos:position pos:line="26" pos:column="16"/></index></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <literal type="string" pos:line="26" pos:column="19">"update"<pos:position pos:line="26" pos:column="27"/></literal></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">argv<pos:position pos:line="27" pos:column="13"/></name><index pos:line="27" pos:column="13">[<expr><literal type="number" pos:line="27" pos:column="14">1<pos:position pos:line="27" pos:column="15"/></literal></expr>]<pos:position pos:line="27" pos:column="16"/></index></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">fn<pos:position pos:line="27" pos:column="21"/></name></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">memcpy<pos:position pos:line="28" pos:column="15"/></name> <argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">argv<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">+<pos:position pos:line="28" pos:column="23"/></operator> <literal type="number" pos:line="28" pos:column="24">2<pos:position pos:line="28" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="27">rc<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">-&gt;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="31">values<pos:position pos:line="28" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="39">rc<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">-&gt;<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="43">values_num<pos:position pos:line="28" pos:column="53"/></name></name> <operator pos:line="28" pos:column="54">*<pos:position pos:line="28" pos:column="55"/></operator> <sizeof pos:line="28" pos:column="56">sizeof <argument_list pos:line="28" pos:column="63">(<argument><expr><name pos:line="28" pos:column="64">char<pos:position pos:line="28" pos:column="68"/></name> <operator pos:line="28" pos:column="69">*<pos:position pos:line="28" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">argv<pos:position pos:line="29" pos:column="13"/></name><index pos:line="29" pos:column="13">[<expr><name pos:line="29" pos:column="14">argc<pos:position pos:line="29" pos:column="18"/></name></expr>]<pos:position pos:line="29" pos:column="19"/></index></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="22">NULL<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">DEBUG<pos:position pos:line="31" pos:column="14"/></name> <argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="string" pos:line="31" pos:column="16">"rrd_update (argc = %i, argv = %p)"<pos:position pos:line="31" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="53">argc<pos:position pos:line="31" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="59">(<pos:position pos:line="31" pos:column="60"/></operator><name pos:line="31" pos:column="60">void<pos:position pos:line="31" pos:column="64"/></name> <operator pos:line="31" pos:column="65">*<pos:position pos:line="31" pos:column="66"/></operator><operator pos:line="31" pos:column="66">)<pos:position pos:line="31" pos:column="67"/></operator> <name pos:line="31" pos:column="68">argv<pos:position pos:line="31" pos:column="72"/></name></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="74"/></expr_stmt>

	<expr_stmt><expr><name pos:line="33" pos:column="9">optind<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr>;<pos:position pos:line="33" pos:column="20"/></expr_stmt> <comment type="block" pos:line="33" pos:column="21">/* bug in librrd? */</comment>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">rrd_clear_error<pos:position pos:line="34" pos:column="24"/></name> <argument_list pos:line="34" pos:column="25">()<pos:position pos:line="34" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="35" pos:column="9">status<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <call><name pos:line="35" pos:column="18">rrd_update<pos:position pos:line="35" pos:column="28"/></name> <argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">argc<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="36">argv<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">status<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">!=<pos:position pos:line="36" pos:column="22"/></operator> <literal type="number" pos:line="36" pos:column="23">0<pos:position pos:line="36" pos:column="24"/></literal></expr>)<pos:position pos:line="36" pos:column="25"/></condition><then pos:line="36" pos:column="25">
	<block pos:line="37" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">WARNING<pos:position pos:line="38" pos:column="24"/></name> <argument_list pos:line="38" pos:column="25">(<argument><expr><literal type="string" pos:line="38" pos:column="26">"rrd_update failed: %s: %s"<pos:position pos:line="38" pos:column="53"/></literal></expr></argument>,
				<argument><expr><name pos:line="39" pos:column="33">filename<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="43">rrd_get_error<pos:position pos:line="39" pos:column="56"/></name> <argument_list pos:line="39" pos:column="57">()<pos:position pos:line="39" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name pos:line="40" pos:column="17">status<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <operator pos:line="40" pos:column="26">-<pos:position pos:line="40" pos:column="27"/></operator><literal type="number" pos:line="40" pos:column="27">1<pos:position pos:line="40" pos:column="28"/></literal></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="43" pos:column="9">free<pos:position pos:line="43" pos:column="13"/></name> <argument_list pos:line="43" pos:column="14">(<argument><expr><name pos:line="43" pos:column="15">argv<pos:position pos:line="43" pos:column="19"/></name></expr></argument>)<pos:position pos:line="43" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">free<pos:position pos:line="44" pos:column="13"/></name> <argument_list pos:line="44" pos:column="14">(<argument><expr><name pos:line="44" pos:column="15">fn<pos:position pos:line="44" pos:column="17"/></name></expr></argument>)<pos:position pos:line="44" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="19"/></expr_stmt>
	<comment type="block" pos:line="45" pos:column="9">/* Free the value list of `rc' */</comment>
	<for pos:line="46" pos:column="9">for <control pos:line="46" pos:column="13">(<init><expr><name pos:line="46" pos:column="14">i<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <literal type="number" pos:line="46" pos:column="18">0<pos:position pos:line="46" pos:column="19"/></literal></expr>;<pos:position pos:line="46" pos:column="20"/></init> <condition><expr><name pos:line="46" pos:column="21">i<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">&lt;<pos:position pos:line="46" pos:column="27"/></operator> <name><name pos:line="46" pos:column="25">rc<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">-&gt;<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="29">values_num<pos:position pos:line="46" pos:column="39"/></name></name></expr>;<pos:position pos:line="46" pos:column="40"/></condition> <incr><expr><name pos:line="46" pos:column="41">i<pos:position pos:line="46" pos:column="42"/></name><operator pos:line="46" pos:column="42">++<pos:position pos:line="46" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="46" pos:column="45"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="17">free<pos:position pos:line="47" pos:column="21"/></name> <argument_list pos:line="47" pos:column="22">(<argument><expr><name><name pos:line="47" pos:column="23">rc<pos:position pos:line="47" pos:column="25"/></name><operator pos:line="47" pos:column="25">-&gt;<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="27">values<pos:position pos:line="47" pos:column="33"/></name><index pos:line="47" pos:column="33">[<expr><name pos:line="47" pos:column="34">i<pos:position pos:line="47" pos:column="35"/></name></expr>]<pos:position pos:line="47" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="47" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">free<pos:position pos:line="48" pos:column="13"/></name> <argument_list pos:line="48" pos:column="14">(<argument><expr><name><name pos:line="48" pos:column="15">rc<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">-&gt;<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="19">values<pos:position pos:line="48" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="49" pos:column="9">rc<pos:position pos:line="49" pos:column="11"/></name><operator pos:line="49" pos:column="11">-&gt;<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="13">values<pos:position pos:line="49" pos:column="19"/></name></name> <operator pos:line="49" pos:column="20">=<pos:position pos:line="49" pos:column="21"/></operator> <name pos:line="49" pos:column="22">NULL<pos:position pos:line="49" pos:column="26"/></name></expr>;<pos:position pos:line="49" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="50" pos:column="9">rc<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">-&gt;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="13">values_num<pos:position pos:line="50" pos:column="23"/></name></name> <operator pos:line="50" pos:column="24">=<pos:position pos:line="50" pos:column="25"/></operator> <literal type="number" pos:line="50" pos:column="26">0<pos:position pos:line="50" pos:column="27"/></literal></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>

	<return pos:line="52" pos:column="9">return <expr><operator pos:line="52" pos:column="16">(<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="17">status<pos:position pos:line="52" pos:column="23"/></name><operator pos:line="52" pos:column="23">)<pos:position pos:line="52" pos:column="24"/></operator></expr>;<pos:position pos:line="52" pos:column="25"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_918_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_handle_system_data<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">hostname<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="58">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">cfg_system_t<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">cfg_system<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">na_elem_t<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">data<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">int<pos:position pos:line="2" pos:column="63"/></name></type> <name pos:line="2" pos:column="64">interval<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">na_elem_t<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">instances<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">na_elem_t<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">counter<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">na_elem_iter_t<pos:position pos:line="6" pos:column="23"/></name></type> <name pos:line="6" pos:column="24">counter_iter<pos:position pos:line="6" pos:column="36"/></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="8" pos:column="9">derive_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">disk_read<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="33">disk_written<pos:position pos:line="8" pos:column="45"/></name> <init pos:line="8" pos:column="46">= <expr><literal type="number" pos:line="8" pos:column="48">0<pos:position pos:line="8" pos:column="49"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">derive_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">net_recv<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><literal type="number" pos:line="9" pos:column="29">0<pos:position pos:line="9" pos:column="30"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="32">net_sent<pos:position pos:line="9" pos:column="40"/></name> <init pos:line="9" pos:column="41">= <expr><literal type="number" pos:line="9" pos:column="43">0<pos:position pos:line="9" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">derive_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">cpu_busy<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="32">cpu_total<pos:position pos:line="10" pos:column="41"/></name> <init pos:line="10" pos:column="42">= <expr><literal type="number" pos:line="10" pos:column="44">0<pos:position pos:line="10" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">uint32_t<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">counter_flags<pos:position pos:line="11" pos:column="31"/></name> <init pos:line="11" pos:column="32">= <expr><literal type="number" pos:line="11" pos:column="34">0<pos:position pos:line="11" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="36"/></decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">char<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">instance<pos:position pos:line="13" pos:column="29"/></name></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">cdtime_t<pos:position pos:line="14" pos:column="17"/></name></type> <name pos:line="14" pos:column="18">timestamp<pos:position pos:line="14" pos:column="27"/></name></decl>;<pos:position pos:line="14" pos:column="28"/></decl_stmt>
	
	<expr_stmt><expr><name pos:line="16" pos:column="9">timestamp<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <call><name pos:line="16" pos:column="21">cna_child_get_cdtime<pos:position pos:line="16" pos:column="41"/></name> <argument_list pos:line="16" pos:column="42">(<argument><expr><name pos:line="16" pos:column="43">data<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><name pos:line="18" pos:column="9">instances<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <call><name pos:line="18" pos:column="21">na_elem_child<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><call><name pos:line="18" pos:column="35">na_elem_child<pos:position pos:line="18" pos:column="48"/></name> <argument_list pos:line="18" pos:column="49">(<argument><expr><name pos:line="18" pos:column="50">data<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="56">"instances"<pos:position pos:line="18" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="70">"instance-data"<pos:position pos:line="18" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="87"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">instances<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">==<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">NULL<pos:position pos:line="19" pos:column="30"/></name></expr>)<pos:position pos:line="19" pos:column="31"/></condition><then pos:line="19" pos:column="31">
	<block pos:line="20" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">ERROR<pos:position pos:line="21" pos:column="22"/></name> <argument_list pos:line="21" pos:column="23">(<argument><expr><literal type="string" pos:line="21" pos:column="24">"netapp plugin: cna_handle_system_data: "<pos:position pos:line="21" pos:column="65"/></literal>
				<literal type="string" pos:line="22" pos:column="33">"na_elem_child (\"instances\") failed "<pos:position pos:line="22" pos:column="72"/></literal>
				<literal type="string" pos:line="23" pos:column="33">"for host %s."<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="49">hostname<pos:position pos:line="23" pos:column="57"/></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>
		<return pos:line="24" pos:column="17">return <expr><operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><operator pos:line="24" pos:column="25">-<pos:position pos:line="24" pos:column="26"/></operator><literal type="number" pos:line="24" pos:column="26">1<pos:position pos:line="24" pos:column="27"/></literal><operator pos:line="24" pos:column="27">)<pos:position pos:line="24" pos:column="28"/></operator></expr>;<pos:position pos:line="24" pos:column="29"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="27" pos:column="9">instance<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <call><name pos:line="27" pos:column="20">na_child_get_string<pos:position pos:line="27" pos:column="39"/></name> <argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">instances<pos:position pos:line="27" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="52">"name"<pos:position pos:line="27" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">instance<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">==<pos:position pos:line="28" pos:column="24"/></operator> <name pos:line="28" pos:column="25">NULL<pos:position pos:line="28" pos:column="29"/></name></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30">
	<block pos:line="29" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">ERROR<pos:position pos:line="30" pos:column="22"/></name> <argument_list pos:line="30" pos:column="23">(<argument><expr><literal type="string" pos:line="30" pos:column="24">"netapp plugin: cna_handle_system_data: "<pos:position pos:line="30" pos:column="65"/></literal>
				<literal type="string" pos:line="31" pos:column="33">"na_child_get_string (\"name\") failed "<pos:position pos:line="31" pos:column="73"/></literal>
				<literal type="string" pos:line="32" pos:column="33">"for host %s."<pos:position pos:line="32" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="49">hostname<pos:position pos:line="32" pos:column="57"/></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>
		<return pos:line="33" pos:column="17">return <expr><operator pos:line="33" pos:column="24">(<pos:position pos:line="33" pos:column="25"/></operator><operator pos:line="33" pos:column="25">-<pos:position pos:line="33" pos:column="26"/></operator><literal type="number" pos:line="33" pos:column="26">1<pos:position pos:line="33" pos:column="27"/></literal><operator pos:line="33" pos:column="27">)<pos:position pos:line="33" pos:column="28"/></operator></expr>;<pos:position pos:line="33" pos:column="29"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="36" pos:column="9">counter_iter<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <call><name pos:line="36" pos:column="24">na_child_iterator<pos:position pos:line="36" pos:column="41"/></name> <argument_list pos:line="36" pos:column="42">(<argument><expr><call><name pos:line="36" pos:column="43">na_elem_child<pos:position pos:line="36" pos:column="56"/></name> <argument_list pos:line="36" pos:column="57">(<argument><expr><name pos:line="36" pos:column="58">instances<pos:position pos:line="36" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="69">"counters"<pos:position pos:line="36" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="82"/></expr_stmt>
	<for pos:line="37" pos:column="9">for <control pos:line="37" pos:column="13">(<init><expr><name pos:line="37" pos:column="14">counter<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <call><name pos:line="37" pos:column="24">na_iterator_next<pos:position pos:line="37" pos:column="40"/></name> <argument_list pos:line="37" pos:column="41">(<argument><expr><operator pos:line="37" pos:column="42">&amp;<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="43">counter_iter<pos:position pos:line="37" pos:column="55"/></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="57"/></init>
			<condition><expr><name pos:line="38" pos:column="25">counter<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">!=<pos:position pos:line="38" pos:column="35"/></operator> <name pos:line="38" pos:column="36">NULL<pos:position pos:line="38" pos:column="40"/></name></expr>;<pos:position pos:line="38" pos:column="41"/></condition>
			<incr><expr><name pos:line="39" pos:column="25">counter<pos:position pos:line="39" pos:column="32"/></name> <operator pos:line="39" pos:column="33">=<pos:position pos:line="39" pos:column="34"/></operator> <call><name pos:line="39" pos:column="35">na_iterator_next<pos:position pos:line="39" pos:column="51"/></name> <argument_list pos:line="39" pos:column="52">(<argument><expr><operator pos:line="39" pos:column="53">&amp;<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="54">counter_iter<pos:position pos:line="39" pos:column="66"/></name></expr></argument>)<pos:position pos:line="39" pos:column="67"/></argument_list></call></expr></incr>)<pos:position pos:line="39" pos:column="68"/></control>
	<block pos:line="40" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="41" pos:column="17">const<pos:position pos:line="41" pos:column="22"/></specifier> <name pos:line="41" pos:column="23">char<pos:position pos:line="41" pos:column="27"/></name> <modifier pos:line="41" pos:column="28">*<pos:position pos:line="41" pos:column="29"/></modifier></type><name pos:line="41" pos:column="29">name<pos:position pos:line="41" pos:column="33"/></name></decl>;<pos:position pos:line="41" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="42" pos:column="17">uint64_t<pos:position pos:line="42" pos:column="25"/></name></type> <name pos:line="42" pos:column="26">value<pos:position pos:line="42" pos:column="31"/></name></decl>;<pos:position pos:line="42" pos:column="32"/></decl_stmt>

		<expr_stmt><expr><name pos:line="44" pos:column="17">name<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <call><name pos:line="44" pos:column="24">na_child_get_string<pos:position pos:line="44" pos:column="43"/></name><argument_list pos:line="44" pos:column="43">(<argument><expr><name pos:line="44" pos:column="44">counter<pos:position pos:line="44" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="53">"name"<pos:position pos:line="44" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">name<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">==<pos:position pos:line="45" pos:column="28"/></operator> <name pos:line="45" pos:column="29">NULL<pos:position pos:line="45" pos:column="33"/></name></expr>)<pos:position pos:line="45" pos:column="34"/></condition><then pos:line="45" pos:column="34">
			<block type="pseudo"><continue pos:line="46" pos:column="25">continue;<pos:position pos:line="46" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="48" pos:column="17">value<pos:position pos:line="48" pos:column="22"/></name> <operator pos:line="48" pos:column="23">=<pos:position pos:line="48" pos:column="24"/></operator> <call><name pos:line="48" pos:column="25">na_child_get_uint64<pos:position pos:line="48" pos:column="44"/></name><argument_list pos:line="48" pos:column="44">(<argument><expr><name pos:line="48" pos:column="45">counter<pos:position pos:line="48" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="54">"value"<pos:position pos:line="48" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="63">UINT64_MAX<pos:position pos:line="48" pos:column="73"/></name></expr></argument>)<pos:position pos:line="48" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="75"/></expr_stmt>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name pos:line="49" pos:column="21">value<pos:position pos:line="49" pos:column="26"/></name> <operator pos:line="49" pos:column="27">==<pos:position pos:line="49" pos:column="29"/></operator> <name pos:line="49" pos:column="30">UINT64_MAX<pos:position pos:line="49" pos:column="40"/></name></expr>)<pos:position pos:line="49" pos:column="41"/></condition><then pos:line="49" pos:column="41">
			<block type="pseudo"><continue pos:line="50" pos:column="25">continue;<pos:position pos:line="50" pos:column="34"/></continue></block></then></if>

		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><operator pos:line="52" pos:column="21">!<pos:position pos:line="52" pos:column="22"/></operator><call><name pos:line="52" pos:column="22">strcmp<pos:position pos:line="52" pos:column="28"/></name><argument_list pos:line="52" pos:column="28">(<argument><expr><name pos:line="52" pos:column="29">name<pos:position pos:line="52" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="35">"disk_data_read"<pos:position pos:line="52" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="53"/></condition><then pos:line="52" pos:column="53"> <block pos:line="52" pos:column="54">{
			<expr_stmt><expr><name pos:line="53" pos:column="25">disk_read<pos:position pos:line="53" pos:column="34"/></name> <operator pos:line="53" pos:column="35">=<pos:position pos:line="53" pos:column="36"/></operator> <call pos:line="53" pos:column="37">(<name pos:line="53" pos:column="38">derive_t<pos:position pos:line="53" pos:column="46"/></name>) <argument_list pos:line="53" pos:column="48">(<argument><expr><name pos:line="53" pos:column="49">value<pos:position pos:line="53" pos:column="54"/></name> <operator pos:line="53" pos:column="55">*<pos:position pos:line="53" pos:column="56"/></operator> <literal type="number" pos:line="53" pos:column="57">1024<pos:position pos:line="53" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><name pos:line="54" pos:column="25">counter_flags<pos:position pos:line="54" pos:column="38"/></name> <operator pos:line="54" pos:column="39">|=<pos:position pos:line="54" pos:column="41"/></operator> <literal type="number" pos:line="54" pos:column="42">0x01<pos:position pos:line="54" pos:column="46"/></literal></expr>;<pos:position pos:line="54" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="55" pos:column="18"/></block></then> <elseif pos:line="55" pos:column="19">else <if pos:line="55" pos:column="24">if <condition pos:line="55" pos:column="27">(<expr><operator pos:line="55" pos:column="28">!<pos:position pos:line="55" pos:column="29"/></operator><call><name pos:line="55" pos:column="29">strcmp<pos:position pos:line="55" pos:column="35"/></name><argument_list pos:line="55" pos:column="35">(<argument><expr><name pos:line="55" pos:column="36">name<pos:position pos:line="55" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="42">"disk_data_written"<pos:position pos:line="55" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="63"/></condition><then pos:line="55" pos:column="63"> <block pos:line="55" pos:column="64">{
			<expr_stmt><expr><name pos:line="56" pos:column="25">disk_written<pos:position pos:line="56" pos:column="37"/></name> <operator pos:line="56" pos:column="38">=<pos:position pos:line="56" pos:column="39"/></operator> <call pos:line="56" pos:column="40">(<name pos:line="56" pos:column="41">derive_t<pos:position pos:line="56" pos:column="49"/></name>) <argument_list pos:line="56" pos:column="51">(<argument><expr><name pos:line="56" pos:column="52">value<pos:position pos:line="56" pos:column="57"/></name> <operator pos:line="56" pos:column="58">*<pos:position pos:line="56" pos:column="59"/></operator> <literal type="number" pos:line="56" pos:column="60">1024<pos:position pos:line="56" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><name pos:line="57" pos:column="25">counter_flags<pos:position pos:line="57" pos:column="38"/></name> <operator pos:line="57" pos:column="39">|=<pos:position pos:line="57" pos:column="41"/></operator> <literal type="number" pos:line="57" pos:column="42">0x02<pos:position pos:line="57" pos:column="46"/></literal></expr>;<pos:position pos:line="57" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if></elseif> <elseif pos:line="58" pos:column="19">else <if pos:line="58" pos:column="24">if <condition pos:line="58" pos:column="27">(<expr><operator pos:line="58" pos:column="28">!<pos:position pos:line="58" pos:column="29"/></operator><call><name pos:line="58" pos:column="29">strcmp<pos:position pos:line="58" pos:column="35"/></name><argument_list pos:line="58" pos:column="35">(<argument><expr><name pos:line="58" pos:column="36">name<pos:position pos:line="58" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="42">"net_data_recv"<pos:position pos:line="58" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="59"/></condition><then pos:line="58" pos:column="59"> <block pos:line="58" pos:column="60">{
			<expr_stmt><expr><name pos:line="59" pos:column="25">net_recv<pos:position pos:line="59" pos:column="33"/></name> <operator pos:line="59" pos:column="34">=<pos:position pos:line="59" pos:column="35"/></operator> <call pos:line="59" pos:column="36">(<name pos:line="59" pos:column="37">derive_t<pos:position pos:line="59" pos:column="45"/></name>) <argument_list pos:line="59" pos:column="47">(<argument><expr><name pos:line="59" pos:column="48">value<pos:position pos:line="59" pos:column="53"/></name> <operator pos:line="59" pos:column="54">*<pos:position pos:line="59" pos:column="55"/></operator> <literal type="number" pos:line="59" pos:column="56">1024<pos:position pos:line="59" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><name pos:line="60" pos:column="25">counter_flags<pos:position pos:line="60" pos:column="38"/></name> <operator pos:line="60" pos:column="39">|=<pos:position pos:line="60" pos:column="41"/></operator> <literal type="number" pos:line="60" pos:column="42">0x04<pos:position pos:line="60" pos:column="46"/></literal></expr>;<pos:position pos:line="60" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if></elseif> <elseif pos:line="61" pos:column="19">else <if pos:line="61" pos:column="24">if <condition pos:line="61" pos:column="27">(<expr><operator pos:line="61" pos:column="28">!<pos:position pos:line="61" pos:column="29"/></operator><call><name pos:line="61" pos:column="29">strcmp<pos:position pos:line="61" pos:column="35"/></name><argument_list pos:line="61" pos:column="35">(<argument><expr><name pos:line="61" pos:column="36">name<pos:position pos:line="61" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="42">"net_data_sent"<pos:position pos:line="61" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="59"/></condition><then pos:line="61" pos:column="59"> <block pos:line="61" pos:column="60">{
			<expr_stmt><expr><name pos:line="62" pos:column="25">net_sent<pos:position pos:line="62" pos:column="33"/></name> <operator pos:line="62" pos:column="34">=<pos:position pos:line="62" pos:column="35"/></operator> <call pos:line="62" pos:column="36">(<name pos:line="62" pos:column="37">derive_t<pos:position pos:line="62" pos:column="45"/></name>) <argument_list pos:line="62" pos:column="47">(<argument><expr><name pos:line="62" pos:column="48">value<pos:position pos:line="62" pos:column="53"/></name> <operator pos:line="62" pos:column="54">*<pos:position pos:line="62" pos:column="55"/></operator> <literal type="number" pos:line="62" pos:column="56">1024<pos:position pos:line="62" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><name pos:line="63" pos:column="25">counter_flags<pos:position pos:line="63" pos:column="38"/></name> <operator pos:line="63" pos:column="39">|=<pos:position pos:line="63" pos:column="41"/></operator> <literal type="number" pos:line="63" pos:column="42">0x08<pos:position pos:line="63" pos:column="46"/></literal></expr>;<pos:position pos:line="63" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if></elseif> <elseif pos:line="64" pos:column="19">else <if pos:line="64" pos:column="24">if <condition pos:line="64" pos:column="27">(<expr><operator pos:line="64" pos:column="28">!<pos:position pos:line="64" pos:column="29"/></operator><call><name pos:line="64" pos:column="29">strcmp<pos:position pos:line="64" pos:column="35"/></name><argument_list pos:line="64" pos:column="35">(<argument><expr><name pos:line="64" pos:column="36">name<pos:position pos:line="64" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="42">"cpu_busy"<pos:position pos:line="64" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="54"/></condition><then pos:line="64" pos:column="54"> <block pos:line="64" pos:column="55">{
			<expr_stmt><expr><name pos:line="65" pos:column="25">cpu_busy<pos:position pos:line="65" pos:column="33"/></name> <operator pos:line="65" pos:column="34">=<pos:position pos:line="65" pos:column="35"/></operator> <operator pos:line="65" pos:column="36">(<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="37">derive_t<pos:position pos:line="65" pos:column="45"/></name><operator pos:line="65" pos:column="45">)<pos:position pos:line="65" pos:column="46"/></operator> <name pos:line="65" pos:column="47">value<pos:position pos:line="65" pos:column="52"/></name></expr>;<pos:position pos:line="65" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name pos:line="66" pos:column="25">counter_flags<pos:position pos:line="66" pos:column="38"/></name> <operator pos:line="66" pos:column="39">|=<pos:position pos:line="66" pos:column="41"/></operator> <literal type="number" pos:line="66" pos:column="42">0x10<pos:position pos:line="66" pos:column="46"/></literal></expr>;<pos:position pos:line="66" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="67" pos:column="18"/></block></then></if></elseif> <elseif pos:line="67" pos:column="19">else <if pos:line="67" pos:column="24">if <condition pos:line="67" pos:column="27">(<expr><operator pos:line="67" pos:column="28">!<pos:position pos:line="67" pos:column="29"/></operator><call><name pos:line="67" pos:column="29">strcmp<pos:position pos:line="67" pos:column="35"/></name><argument_list pos:line="67" pos:column="35">(<argument><expr><name pos:line="67" pos:column="36">name<pos:position pos:line="67" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="42">"cpu_elapsed_time"<pos:position pos:line="67" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="62"/></condition><then pos:line="67" pos:column="62"> <block pos:line="67" pos:column="63">{
			<expr_stmt><expr><name pos:line="68" pos:column="25">cpu_total<pos:position pos:line="68" pos:column="34"/></name> <operator pos:line="68" pos:column="35">=<pos:position pos:line="68" pos:column="36"/></operator> <operator pos:line="68" pos:column="37">(<pos:position pos:line="68" pos:column="38"/></operator><name pos:line="68" pos:column="38">derive_t<pos:position pos:line="68" pos:column="46"/></name><operator pos:line="68" pos:column="46">)<pos:position pos:line="68" pos:column="47"/></operator> <name pos:line="68" pos:column="48">value<pos:position pos:line="68" pos:column="53"/></name></expr>;<pos:position pos:line="68" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><name pos:line="69" pos:column="25">counter_flags<pos:position pos:line="69" pos:column="38"/></name> <operator pos:line="69" pos:column="39">|=<pos:position pos:line="69" pos:column="41"/></operator> <literal type="number" pos:line="69" pos:column="42">0x20<pos:position pos:line="69" pos:column="46"/></literal></expr>;<pos:position pos:line="69" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="70" pos:column="18"/></block></then></if></elseif> <elseif pos:line="70" pos:column="19">else <if pos:line="70" pos:column="24">if <condition pos:line="70" pos:column="27">(<expr><operator pos:line="70" pos:column="28">(<pos:position pos:line="70" pos:column="29"/></operator><name><name pos:line="70" pos:column="29">cfg_system<pos:position pos:line="70" pos:column="39"/></name><operator pos:line="70" pos:column="39">-&gt;<pos:position pos:line="70" pos:column="44"/></operator><name pos:line="70" pos:column="41">flags<pos:position pos:line="70" pos:column="46"/></name></name> <operator pos:line="70" pos:column="47">&amp;<pos:position pos:line="70" pos:column="52"/></operator> <name pos:line="70" pos:column="49">CFG_SYSTEM_OPS<pos:position pos:line="70" pos:column="63"/></name><operator pos:line="70" pos:column="63">)<pos:position pos:line="70" pos:column="64"/></operator>
				<operator pos:line="71" pos:column="33">&amp;&amp;<pos:position pos:line="71" pos:column="43"/></operator> <operator pos:line="71" pos:column="36">(<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="37">value<pos:position pos:line="71" pos:column="42"/></name> <operator pos:line="71" pos:column="43">&gt;<pos:position pos:line="71" pos:column="47"/></operator> <literal type="number" pos:line="71" pos:column="45">0<pos:position pos:line="71" pos:column="46"/></literal><operator pos:line="71" pos:column="46">)<pos:position pos:line="71" pos:column="47"/></operator> <operator pos:line="71" pos:column="48">&amp;&amp;<pos:position pos:line="71" pos:column="58"/></operator> <operator pos:line="71" pos:column="51">(<pos:position pos:line="71" pos:column="52"/></operator><call><name pos:line="71" pos:column="52">strlen<pos:position pos:line="71" pos:column="58"/></name><argument_list pos:line="71" pos:column="58">(<argument><expr><name pos:line="71" pos:column="59">name<pos:position pos:line="71" pos:column="63"/></name></expr></argument>)<pos:position pos:line="71" pos:column="64"/></argument_list></call> <operator pos:line="71" pos:column="65">&gt;<pos:position pos:line="71" pos:column="69"/></operator> <literal type="number" pos:line="71" pos:column="67">4<pos:position pos:line="71" pos:column="68"/></literal><operator pos:line="71" pos:column="68">)<pos:position pos:line="71" pos:column="69"/></operator>
				<operator pos:line="72" pos:column="33">&amp;&amp;<pos:position pos:line="72" pos:column="43"/></operator> <operator pos:line="72" pos:column="36">(<pos:position pos:line="72" pos:column="37"/></operator><operator pos:line="72" pos:column="37">!<pos:position pos:line="72" pos:column="38"/></operator><call><name pos:line="72" pos:column="38">strcmp<pos:position pos:line="72" pos:column="44"/></name><argument_list pos:line="72" pos:column="44">(<argument><expr><name pos:line="72" pos:column="45">name<pos:position pos:line="72" pos:column="49"/></name> <operator pos:line="72" pos:column="50">+<pos:position pos:line="72" pos:column="51"/></operator> <call><name pos:line="72" pos:column="52">strlen<pos:position pos:line="72" pos:column="58"/></name><argument_list pos:line="72" pos:column="58">(<argument><expr><name pos:line="72" pos:column="59">name<pos:position pos:line="72" pos:column="63"/></name></expr></argument>)<pos:position pos:line="72" pos:column="64"/></argument_list></call> <operator pos:line="72" pos:column="65">-<pos:position pos:line="72" pos:column="66"/></operator> <literal type="number" pos:line="72" pos:column="67">4<pos:position pos:line="72" pos:column="68"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="70">"_ops"<pos:position pos:line="72" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="77"/></argument_list></call><operator pos:line="72" pos:column="77">)<pos:position pos:line="72" pos:column="78"/></operator></expr>)<pos:position pos:line="72" pos:column="79"/></condition><then pos:line="72" pos:column="79"> <block pos:line="72" pos:column="80">{
			<expr_stmt><expr><call><name pos:line="73" pos:column="25">submit_derive<pos:position pos:line="73" pos:column="38"/></name> <argument_list pos:line="73" pos:column="39">(<argument><expr><name pos:line="73" pos:column="40">hostname<pos:position pos:line="73" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="50">instance<pos:position pos:line="73" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="60">"disk_ops_complex"<pos:position pos:line="73" pos:column="78"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="80">name<pos:position pos:line="73" pos:column="84"/></name></expr></argument>,
					<argument><expr><operator pos:line="74" pos:column="41">(<pos:position pos:line="74" pos:column="42"/></operator><name pos:line="74" pos:column="42">derive_t<pos:position pos:line="74" pos:column="50"/></name><operator pos:line="74" pos:column="50">)<pos:position pos:line="74" pos:column="51"/></operator> <name pos:line="74" pos:column="52">value<pos:position pos:line="74" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="59">timestamp<pos:position pos:line="74" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="70">interval<pos:position pos:line="74" pos:column="78"/></name></expr></argument>)<pos:position pos:line="74" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="80"/></expr_stmt>
		}<pos:position pos:line="75" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="76" pos:column="10"/></block></for> <comment type="block" pos:line="76" pos:column="11">/* for (counter) */</comment>

	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><operator pos:line="78" pos:column="13">(<pos:position pos:line="78" pos:column="14"/></operator><name><name pos:line="78" pos:column="14">cfg_system<pos:position pos:line="78" pos:column="24"/></name><operator pos:line="78" pos:column="24">-&gt;<pos:position pos:line="78" pos:column="29"/></operator><name pos:line="78" pos:column="26">flags<pos:position pos:line="78" pos:column="31"/></name></name> <operator pos:line="78" pos:column="32">&amp;<pos:position pos:line="78" pos:column="37"/></operator> <name pos:line="78" pos:column="34">CFG_SYSTEM_DISK<pos:position pos:line="78" pos:column="49"/></name><operator pos:line="78" pos:column="49">)<pos:position pos:line="78" pos:column="50"/></operator>
			<operator pos:line="79" pos:column="25">&amp;&amp;<pos:position pos:line="79" pos:column="35"/></operator> <operator pos:line="79" pos:column="28">(<pos:position pos:line="79" pos:column="29"/></operator><call><name pos:line="79" pos:column="29">HAS_ALL_FLAGS<pos:position pos:line="79" pos:column="42"/></name> <argument_list pos:line="79" pos:column="43">(<argument><expr><name pos:line="79" pos:column="44">counter_flags<pos:position pos:line="79" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="59">0x01<pos:position pos:line="79" pos:column="63"/></literal> <operator pos:line="79" pos:column="64">|<pos:position pos:line="79" pos:column="65"/></operator> <literal type="number" pos:line="79" pos:column="66">0x02<pos:position pos:line="79" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="71"/></argument_list></call><operator pos:line="79" pos:column="71">)<pos:position pos:line="79" pos:column="72"/></operator></expr>)<pos:position pos:line="79" pos:column="73"/></condition><then pos:line="79" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="80" pos:column="17">submit_two_derive<pos:position pos:line="80" pos:column="34"/></name> <argument_list pos:line="80" pos:column="35">(<argument><expr><name pos:line="80" pos:column="36">hostname<pos:position pos:line="80" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="46">instance<pos:position pos:line="80" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="56">"disk_octets"<pos:position pos:line="80" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="71">NULL<pos:position pos:line="80" pos:column="75"/></name></expr></argument>,
				<argument><expr><name pos:line="81" pos:column="33">disk_read<pos:position pos:line="81" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="44">disk_written<pos:position pos:line="81" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="58">timestamp<pos:position pos:line="81" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="69">interval<pos:position pos:line="81" pos:column="77"/></name></expr></argument>)<pos:position pos:line="81" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="79"/></expr_stmt></block></then></if>
				
	<if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><operator pos:line="83" pos:column="13">(<pos:position pos:line="83" pos:column="14"/></operator><name><name pos:line="83" pos:column="14">cfg_system<pos:position pos:line="83" pos:column="24"/></name><operator pos:line="83" pos:column="24">-&gt;<pos:position pos:line="83" pos:column="29"/></operator><name pos:line="83" pos:column="26">flags<pos:position pos:line="83" pos:column="31"/></name></name> <operator pos:line="83" pos:column="32">&amp;<pos:position pos:line="83" pos:column="37"/></operator> <name pos:line="83" pos:column="34">CFG_SYSTEM_NET<pos:position pos:line="83" pos:column="48"/></name><operator pos:line="83" pos:column="48">)<pos:position pos:line="83" pos:column="49"/></operator>
			<operator pos:line="84" pos:column="25">&amp;&amp;<pos:position pos:line="84" pos:column="35"/></operator> <operator pos:line="84" pos:column="28">(<pos:position pos:line="84" pos:column="29"/></operator><call><name pos:line="84" pos:column="29">HAS_ALL_FLAGS<pos:position pos:line="84" pos:column="42"/></name> <argument_list pos:line="84" pos:column="43">(<argument><expr><name pos:line="84" pos:column="44">counter_flags<pos:position pos:line="84" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="59">0x04<pos:position pos:line="84" pos:column="63"/></literal> <operator pos:line="84" pos:column="64">|<pos:position pos:line="84" pos:column="65"/></operator> <literal type="number" pos:line="84" pos:column="66">0x08<pos:position pos:line="84" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="71"/></argument_list></call><operator pos:line="84" pos:column="71">)<pos:position pos:line="84" pos:column="72"/></operator></expr>)<pos:position pos:line="84" pos:column="73"/></condition><then pos:line="84" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="17">submit_two_derive<pos:position pos:line="85" pos:column="34"/></name> <argument_list pos:line="85" pos:column="35">(<argument><expr><name pos:line="85" pos:column="36">hostname<pos:position pos:line="85" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="46">instance<pos:position pos:line="85" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="56">"if_octets"<pos:position pos:line="85" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="69">NULL<pos:position pos:line="85" pos:column="73"/></name></expr></argument>,
				<argument><expr><name pos:line="86" pos:column="33">net_recv<pos:position pos:line="86" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="43">net_sent<pos:position pos:line="86" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="53">timestamp<pos:position pos:line="86" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="64">interval<pos:position pos:line="86" pos:column="72"/></name></expr></argument>)<pos:position pos:line="86" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="74"/></expr_stmt></block></then></if>

	<if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><operator pos:line="88" pos:column="13">(<pos:position pos:line="88" pos:column="14"/></operator><name><name pos:line="88" pos:column="14">cfg_system<pos:position pos:line="88" pos:column="24"/></name><operator pos:line="88" pos:column="24">-&gt;<pos:position pos:line="88" pos:column="29"/></operator><name pos:line="88" pos:column="26">flags<pos:position pos:line="88" pos:column="31"/></name></name> <operator pos:line="88" pos:column="32">&amp;<pos:position pos:line="88" pos:column="37"/></operator> <name pos:line="88" pos:column="34">CFG_SYSTEM_CPU<pos:position pos:line="88" pos:column="48"/></name><operator pos:line="88" pos:column="48">)<pos:position pos:line="88" pos:column="49"/></operator>
			<operator pos:line="89" pos:column="25">&amp;&amp;<pos:position pos:line="89" pos:column="35"/></operator> <operator pos:line="89" pos:column="28">(<pos:position pos:line="89" pos:column="29"/></operator><call><name pos:line="89" pos:column="29">HAS_ALL_FLAGS<pos:position pos:line="89" pos:column="42"/></name> <argument_list pos:line="89" pos:column="43">(<argument><expr><name pos:line="89" pos:column="44">counter_flags<pos:position pos:line="89" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="59">0x10<pos:position pos:line="89" pos:column="63"/></literal> <operator pos:line="89" pos:column="64">|<pos:position pos:line="89" pos:column="65"/></operator> <literal type="number" pos:line="89" pos:column="66">0x20<pos:position pos:line="89" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="71"/></argument_list></call><operator pos:line="89" pos:column="71">)<pos:position pos:line="89" pos:column="72"/></operator></expr>)<pos:position pos:line="89" pos:column="73"/></condition><then pos:line="89" pos:column="73">
	<block pos:line="90" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="91" pos:column="17">submit_derive<pos:position pos:line="91" pos:column="30"/></name> <argument_list pos:line="91" pos:column="31">(<argument><expr><name pos:line="91" pos:column="32">hostname<pos:position pos:line="91" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="42">instance<pos:position pos:line="91" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="52">"cpu"<pos:position pos:line="91" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="59">"system"<pos:position pos:line="91" pos:column="67"/></literal></expr></argument>,
				<argument><expr><name pos:line="92" pos:column="33">cpu_busy<pos:position pos:line="92" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="43">timestamp<pos:position pos:line="92" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="54">interval<pos:position pos:line="92" pos:column="62"/></name></expr></argument>)<pos:position pos:line="92" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="93" pos:column="17">submit_derive<pos:position pos:line="93" pos:column="30"/></name> <argument_list pos:line="93" pos:column="31">(<argument><expr><name pos:line="93" pos:column="32">hostname<pos:position pos:line="93" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="42">instance<pos:position pos:line="93" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="52">"cpu"<pos:position pos:line="93" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="59">"idle"<pos:position pos:line="93" pos:column="65"/></literal></expr></argument>,
				<argument><expr><name pos:line="94" pos:column="33">cpu_total<pos:position pos:line="94" pos:column="42"/></name> <operator pos:line="94" pos:column="43">-<pos:position pos:line="94" pos:column="44"/></operator> <name pos:line="94" pos:column="45">cpu_busy<pos:position pos:line="94" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="55">timestamp<pos:position pos:line="94" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="66">interval<pos:position pos:line="94" pos:column="74"/></name></expr></argument>)<pos:position pos:line="94" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="76"/></expr_stmt>
	}<pos:position pos:line="95" pos:column="10"/></block></then></if>

	<return pos:line="97" pos:column="9">return <expr><operator pos:line="97" pos:column="16">(<pos:position pos:line="97" pos:column="17"/></operator><literal type="number" pos:line="97" pos:column="17">0<pos:position pos:line="97" pos:column="18"/></literal><operator pos:line="97" pos:column="18">)<pos:position pos:line="97" pos:column="19"/></operator></expr>;<pos:position pos:line="97" pos:column="20"/></return>
}<pos:position pos:line="98" pos:column="2"/></block></function></unit>

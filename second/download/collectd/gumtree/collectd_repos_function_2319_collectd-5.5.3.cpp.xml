<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2319_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">notify_systemd<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type>                  <name pos:line="3" pos:column="26">fd<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><operator pos:line="3" pos:column="31">-<pos:position pos:line="3" pos:column="32"/></operator><literal type="number" pos:line="3" pos:column="32">1<pos:position pos:line="3" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name>          <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">notifysocket<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><call><name pos:line="4" pos:column="41">getenv<pos:position pos:line="4" pos:column="47"/></name><argument_list pos:line="4" pos:column="47">(<argument><expr><literal type="string" pos:line="4" pos:column="48">"NOTIFY_SOCKET"<pos:position pos:line="4" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="65"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">sockaddr_un<pos:position pos:line="5" pos:column="23"/></name></name></type>   <name pos:line="5" pos:column="26">su<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">iovec<pos:position pos:line="6" pos:column="17"/></name></name></type>         <name pos:line="6" pos:column="26">iov<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">msghdr<pos:position pos:line="7" pos:column="18"/></name></name></type>        <name pos:line="7" pos:column="26">hdr<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">notifysocket<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">==<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="25">NULL<pos:position pos:line="9" pos:column="29"/></name></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></return></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><call><name pos:line="12" pos:column="10">strchr<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><literal type="string" pos:line="12" pos:column="17">"@/"<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="23">notifysocket<pos:position pos:line="12" pos:column="35"/></name><index pos:line="12" pos:column="35">[<expr><literal type="number" pos:line="12" pos:column="36">0<pos:position pos:line="12" pos:column="37"/></literal></expr>]<pos:position pos:line="12" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call><operator pos:line="12" pos:column="39">)<pos:position pos:line="12" pos:column="40"/></operator> <operator pos:line="12" pos:column="41">==<pos:position pos:line="12" pos:column="43"/></operator> <name pos:line="12" pos:column="44">NULL<pos:position pos:line="12" pos:column="48"/></name> <operator pos:line="12" pos:column="49">||<pos:position pos:line="12" pos:column="51"/></operator>
        <call><name pos:line="13" pos:column="9">strlen<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">notifysocket<pos:position pos:line="13" pos:column="28"/></name></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></call> <operator pos:line="13" pos:column="30">&lt;<pos:position pos:line="13" pos:column="34"/></operator> <literal type="number" pos:line="13" pos:column="32">2<pos:position pos:line="13" pos:column="33"/></literal></expr>)<pos:position pos:line="13" pos:column="34"/></condition><then pos:line="13" pos:column="34">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">WARNING<pos:position pos:line="16" pos:column="12"/></name> <argument_list pos:line="16" pos:column="13">(<argument><expr><literal type="string" pos:line="16" pos:column="14">"supervised by systemd, will signal readyness"<pos:position pos:line="16" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="62"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">fd<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">socket<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">AF_UNIX<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="31">SOCK_DGRAM<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="43">0<pos:position pos:line="17" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call><operator pos:line="17" pos:column="45">)<pos:position pos:line="17" pos:column="46"/></operator> <operator pos:line="17" pos:column="47">&lt;<pos:position pos:line="17" pos:column="51"/></operator> <literal type="number" pos:line="17" pos:column="49">0<pos:position pos:line="17" pos:column="50"/></literal></expr>)<pos:position pos:line="17" pos:column="51"/></condition><then pos:line="17" pos:column="51"> <block pos:line="17" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">WARNING<pos:position pos:line="18" pos:column="16"/></name> <argument_list pos:line="18" pos:column="17">(<argument><expr><literal type="string" pos:line="18" pos:column="18">"cannot contact systemd socket %s"<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">notifysocket<pos:position pos:line="18" pos:column="66"/></name></expr></argument>)<pos:position pos:line="18" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="68"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">bzero<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><operator pos:line="22" pos:column="11">&amp;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="12">su<pos:position pos:line="22" pos:column="14"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="16">sizeof<argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">su<pos:position pos:line="22" pos:column="25"/></name></expr></argument>)<pos:position pos:line="22" pos:column="26"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">su<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">.<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">sun_family<pos:position pos:line="23" pos:column="18"/></name></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <name pos:line="23" pos:column="21">AF_UNIX<pos:position pos:line="23" pos:column="28"/></name></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">sstrncpy<pos:position pos:line="24" pos:column="13"/></name> <argument_list pos:line="24" pos:column="14">(<argument><expr><name><name pos:line="24" pos:column="15">su<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">.<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">sun_path<pos:position pos:line="24" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="28">notifysocket<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="42">sizeof<argument_list pos:line="24" pos:column="48">(<argument><expr><name><name pos:line="24" pos:column="49">su<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">.<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="52">sun_path<pos:position pos:line="24" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name><name pos:line="26" pos:column="9">notifysocket<pos:position pos:line="26" pos:column="21"/></name><index pos:line="26" pos:column="21">[<expr><literal type="number" pos:line="26" pos:column="22">0<pos:position pos:line="26" pos:column="23"/></literal></expr>]<pos:position pos:line="26" pos:column="24"/></index></name> <operator pos:line="26" pos:column="25">==<pos:position pos:line="26" pos:column="27"/></operator> <literal type="char" pos:line="26" pos:column="28">'@'<pos:position pos:line="26" pos:column="31"/></literal></expr>)<pos:position pos:line="26" pos:column="32"/></condition><then pos:line="26" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="9">su<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">.<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">sun_path<pos:position pos:line="27" pos:column="20"/></name><index pos:line="27" pos:column="20">[<expr><literal type="number" pos:line="27" pos:column="21">0<pos:position pos:line="27" pos:column="22"/></literal></expr>]<pos:position pos:line="27" pos:column="23"/></index></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <literal type="number" pos:line="27" pos:column="26">0<pos:position pos:line="27" pos:column="27"/></literal></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">bzero<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><operator pos:line="29" pos:column="11">&amp;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="12">iov<pos:position pos:line="29" pos:column="15"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="17">sizeof<argument_list pos:line="29" pos:column="23">(<argument><expr><name pos:line="29" pos:column="24">iov<pos:position pos:line="29" pos:column="27"/></name></expr></argument>)<pos:position pos:line="29" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">iov<pos:position pos:line="30" pos:column="8"/></name><operator pos:line="30" pos:column="8">.<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="9">iov_base<pos:position pos:line="30" pos:column="17"/></name></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <literal type="string" pos:line="30" pos:column="20">"READY=1"<pos:position pos:line="30" pos:column="29"/></literal></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">iov<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">.<pos:position pos:line="31" pos:column="9"/></operator><name pos:line="31" pos:column="9">iov_len<pos:position pos:line="31" pos:column="16"/></name></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <call><name pos:line="31" pos:column="19">strlen<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><literal type="string" pos:line="31" pos:column="26">"READY=1"<pos:position pos:line="31" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">bzero<pos:position pos:line="33" pos:column="10"/></name><argument_list pos:line="33" pos:column="10">(<argument><expr><operator pos:line="33" pos:column="11">&amp;<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="12">hdr<pos:position pos:line="33" pos:column="15"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="17">sizeof<argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">hdr<pos:position pos:line="33" pos:column="27"/></name></expr></argument>)<pos:position pos:line="33" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">hdr<pos:position pos:line="34" pos:column="8"/></name><operator pos:line="34" pos:column="8">.<pos:position pos:line="34" pos:column="9"/></operator><name pos:line="34" pos:column="9">msg_name<pos:position pos:line="34" pos:column="17"/></name></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <operator pos:line="34" pos:column="20">&amp;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="21">su<pos:position pos:line="34" pos:column="23"/></name></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">hdr<pos:position pos:line="35" pos:column="8"/></name><operator pos:line="35" pos:column="8">.<pos:position pos:line="35" pos:column="9"/></operator><name pos:line="35" pos:column="9">msg_namelen<pos:position pos:line="35" pos:column="20"/></name></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <call><name pos:line="35" pos:column="23">offsetof<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr pos:line="35" pos:column="32">struct <name pos:line="35" pos:column="39">sockaddr_un<pos:position pos:line="35" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="52">sun_path<pos:position pos:line="35" pos:column="60"/></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call> <operator pos:line="35" pos:column="62">+<pos:position pos:line="35" pos:column="63"/></operator>
        <call><name pos:line="36" pos:column="9">strlen<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><name pos:line="36" pos:column="16">notifysocket<pos:position pos:line="36" pos:column="28"/></name></expr></argument>)<pos:position pos:line="36" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">hdr<pos:position pos:line="37" pos:column="8"/></name><operator pos:line="37" pos:column="8">.<pos:position pos:line="37" pos:column="9"/></operator><name pos:line="37" pos:column="9">msg_iov<pos:position pos:line="37" pos:column="16"/></name></name> <operator pos:line="37" pos:column="17">=<pos:position pos:line="37" pos:column="18"/></operator> <operator pos:line="37" pos:column="19">&amp;<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="20">iov<pos:position pos:line="37" pos:column="23"/></name></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">hdr<pos:position pos:line="38" pos:column="8"/></name><operator pos:line="38" pos:column="8">.<pos:position pos:line="38" pos:column="9"/></operator><name pos:line="38" pos:column="9">msg_iovlen<pos:position pos:line="38" pos:column="19"/></name></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <literal type="number" pos:line="38" pos:column="22">1<pos:position pos:line="38" pos:column="23"/></literal></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">unsetenv<pos:position pos:line="40" pos:column="13"/></name><argument_list pos:line="40" pos:column="13">(<argument><expr><literal type="string" pos:line="40" pos:column="14">"NOTIFY_SOCKET"<pos:position pos:line="40" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><call><name pos:line="41" pos:column="9">sendmsg<pos:position pos:line="41" pos:column="16"/></name><argument_list pos:line="41" pos:column="16">(<argument><expr><name pos:line="41" pos:column="17">fd<pos:position pos:line="41" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="21">&amp;<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="22">hdr<pos:position pos:line="41" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="27">MSG_NOSIGNAL<pos:position pos:line="41" pos:column="39"/></name></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call> <operator pos:line="41" pos:column="41">&lt;<pos:position pos:line="41" pos:column="45"/></operator> <literal type="number" pos:line="41" pos:column="43">0<pos:position pos:line="41" pos:column="44"/></literal></expr>)<pos:position pos:line="41" pos:column="45"/></condition><then pos:line="41" pos:column="45"> <block pos:line="41" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">WARNING<pos:position pos:line="42" pos:column="16"/></name> <argument_list pos:line="42" pos:column="17">(<argument><expr><literal type="string" pos:line="42" pos:column="18">"cannot send notification to systemd"<pos:position pos:line="42" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">close<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><name pos:line="43" pos:column="15">fd<pos:position pos:line="43" pos:column="17"/></name></expr></argument>)<pos:position pos:line="43" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="19"/></expr_stmt>
        <return pos:line="44" pos:column="9">return <expr><literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">close<pos:position pos:line="46" pos:column="10"/></name><argument_list pos:line="46" pos:column="10">(<argument><expr><name pos:line="46" pos:column="11">fd<pos:position pos:line="46" pos:column="13"/></name></expr></argument>)<pos:position pos:line="46" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="15"/></expr_stmt>
    <return pos:line="47" pos:column="5">return <expr><literal type="number" pos:line="47" pos:column="12">1<pos:position pos:line="47" pos:column="13"/></literal></expr>;<pos:position pos:line="47" pos:column="14"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_76_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cpu_submit<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">domain_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">dom<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">unsigned<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">long<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">long<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">cpuTime_new<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list> <block pos:line="1" pos:column="77">{

  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">!<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">dom<pos:position pos:line="3" pos:column="11"/></name></expr>)<pos:position pos:line="3" pos:column="12"/></condition><then pos:line="3" pos:column="12">
    <block type="pseudo"><return pos:line="4" pos:column="5">return;<pos:position pos:line="4" pos:column="12"/></return></block></then></if>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">extra_stats<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&amp;<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="21">ex_stats_cpu_util<pos:position pos:line="6" pos:column="38"/></name></expr>)<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39"> <block pos:line="6" pos:column="40">{
    <comment type="block" pos:line="7" pos:column="5">/* Computing %CPU requires 2 samples of cpuTime */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">dom<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">info<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">.<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">cpuTime<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">!=<pos:position pos:line="8" pos:column="29"/></operator> <literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal> <operator pos:line="8" pos:column="32">&amp;&amp;<pos:position pos:line="8" pos:column="42"/></operator> <name pos:line="8" pos:column="35">cpuTime_new<pos:position pos:line="8" pos:column="46"/></name> <operator pos:line="8" pos:column="47">!=<pos:position pos:line="8" pos:column="49"/></operator> <literal type="number" pos:line="8" pos:column="50">0<pos:position pos:line="8" pos:column="51"/></literal></expr>)<pos:position pos:line="8" pos:column="52"/></condition><then pos:line="8" pos:column="52"> <block pos:line="8" pos:column="53">{

      <expr_stmt><expr><call><name pos:line="10" pos:column="7">submit<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name><name pos:line="10" pos:column="14">dom<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">ptr<pos:position pos:line="10" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="24">"percent"<pos:position pos:line="10" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="35">"virt_cpu_total"<pos:position pos:line="10" pos:column="51"/></literal></expr></argument>,
             <argument><expr><operator pos:line="11" pos:column="14">&amp;<pos:position pos:line="11" pos:column="19"/></operator><operator pos:line="11" pos:column="15">(<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">value_t<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">)<pos:position pos:line="11" pos:column="24"/></operator><block pos:line="11" pos:column="24">{<expr><operator pos:line="11" pos:column="25">.<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">gauge<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">=<pos:position pos:line="11" pos:column="33"/></operator> <macro><name pos:line="11" pos:column="34">cpu_ns_to_percent<pos:position pos:line="11" pos:column="51"/></name><argument_list pos:line="11" pos:column="51">(
                            <argument pos:line="12" pos:column="29">nodeinfo.cpus<pos:position pos:line="12" pos:column="42"/></argument>, <argument pos:line="12" pos:column="44">dom-&gt;info.cpuTime<pos:position pos:line="12" pos:column="61"/></argument>, <argument pos:line="12" pos:column="63">cpuTime_new<pos:position pos:line="12" pos:column="74"/></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></macro></expr>}<pos:position pos:line="12" pos:column="76"/></block></expr></argument>,
             <argument><expr><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">submit<pos:position pos:line="17" pos:column="9"/></name><argument_list pos:line="17" pos:column="9">(<argument><expr><name><name pos:line="17" pos:column="10">dom<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">ptr<pos:position pos:line="17" pos:column="18"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="20">"virt_cpu_total"<pos:position pos:line="17" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">NULL<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="44">&amp;<pos:position pos:line="17" pos:column="49"/></operator><operator pos:line="17" pos:column="45">(<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="46">value_t<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">)<pos:position pos:line="17" pos:column="54"/></operator><block pos:line="17" pos:column="54">{<expr><operator pos:line="17" pos:column="55">.<pos:position pos:line="17" pos:column="56"/></operator><name pos:line="17" pos:column="56">derive<pos:position pos:line="17" pos:column="62"/></name> <operator pos:line="17" pos:column="63">=<pos:position pos:line="17" pos:column="64"/></operator> <name pos:line="17" pos:column="65">cpuTime_new<pos:position pos:line="17" pos:column="76"/></name></expr>}<pos:position pos:line="17" pos:column="77"/></block></expr></argument>,
         <argument><expr><literal type="number" pos:line="18" pos:column="10">1<pos:position pos:line="18" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="13"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_96_collectd-4.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">lt_dlvtable<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">lt_dlloader_remove<pos:position pos:line="2" pos:column="19"/></name> <parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">name<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">lt_dlvtable<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type>	<name pos:line="4" pos:column="25">vtable<pos:position pos:line="4" pos:column="31"/></name>	<init pos:line="4" pos:column="33">= <expr><call><name pos:line="4" pos:column="35">lt_dlloader_find<pos:position pos:line="4" pos:column="51"/></name> <argument_list pos:line="4" pos:column="52">(<argument><expr><name pos:line="4" pos:column="53">name<pos:position pos:line="4" pos:column="57"/></name></expr></argument>)<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="5" pos:column="3">static<pos:position pos:line="5" pos:column="9"/></specifier> <type><specifier pos:line="5" pos:column="10">const<pos:position pos:line="5" pos:column="15"/></specifier> <name pos:line="5" pos:column="16">char<pos:position pos:line="5" pos:column="20"/></name></type>	<name><name pos:line="5" pos:column="25">id_string<pos:position pos:line="5" pos:column="34"/></name><index pos:line="5" pos:column="34">[]<pos:position pos:line="5" pos:column="36"/></index></name> <init pos:line="5" pos:column="37">= <expr><literal type="string" pos:line="5" pos:column="39">"lt_dlloader_remove"<pos:position pos:line="5" pos:column="59"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">lt_dlinterface_id<pos:position pos:line="6" pos:column="20"/></name></type>	<name pos:line="6" pos:column="25">iface<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">lt_dlhandle<pos:position pos:line="7" pos:column="14"/></name></type>		<name pos:line="7" pos:column="25">handle<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><literal type="number" pos:line="7" pos:column="34">0<pos:position pos:line="7" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type>			<name pos:line="8" pos:column="25">in_use<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><literal type="number" pos:line="8" pos:column="34">0<pos:position pos:line="8" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type>			<name pos:line="9" pos:column="25">in_use_by_resident<pos:position pos:line="9" pos:column="43"/></name> <init pos:line="9" pos:column="44">= <expr><literal type="number" pos:line="9" pos:column="46">0<pos:position pos:line="9" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">vtable<pos:position pos:line="11" pos:column="14"/></name></expr>)<pos:position pos:line="11" pos:column="15"/></condition><then pos:line="11" pos:column="15">
    <block pos:line="12" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">LT__SETERROR<pos:position pos:line="13" pos:column="19"/></name> <argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">INVALID_LOADER<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
      <return pos:line="14" pos:column="7">return <expr><literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="17" pos:column="3">/* Fail if there are any open modules which use this loader.  */</comment>
  <expr_stmt><expr><name pos:line="18" pos:column="3">iface<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">lt_dlinterface_register<pos:position pos:line="18" pos:column="34"/></name> <argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">id_string<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">NULL<pos:position pos:line="18" pos:column="51"/></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
  <while pos:line="19" pos:column="3">while <condition pos:line="19" pos:column="9">(<expr><operator pos:line="19" pos:column="10">(<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">handle<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <call><name pos:line="19" pos:column="20">lt_dlhandle_iterate<pos:position pos:line="19" pos:column="39"/></name> <argument_list pos:line="19" pos:column="40">(<argument><expr><name pos:line="19" pos:column="41">iface<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="48">handle<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call><operator pos:line="19" pos:column="55">)<pos:position pos:line="19" pos:column="56"/></operator></expr>)<pos:position pos:line="19" pos:column="57"/></condition>
    <block pos:line="20" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="21" pos:column="7">lt_dlhandle<pos:position pos:line="21" pos:column="18"/></name></type> <name pos:line="21" pos:column="19">cur<pos:position pos:line="21" pos:column="22"/></name> <init pos:line="21" pos:column="23">= <expr><name pos:line="21" pos:column="25">handle<pos:position pos:line="21" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="32"/></decl_stmt>
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><name><name pos:line="22" pos:column="11">cur<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">vtable<pos:position pos:line="22" pos:column="22"/></name></name> <operator pos:line="22" pos:column="23">==<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">vtable<pos:position pos:line="22" pos:column="32"/></name></expr>)<pos:position pos:line="22" pos:column="33"/></condition><then pos:line="22" pos:column="33">
	<block pos:line="23" pos:column="9">{
	  <expr_stmt><expr><name pos:line="24" pos:column="11">in_use<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <literal type="number" pos:line="24" pos:column="20">1<pos:position pos:line="24" pos:column="21"/></literal></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt>
	  <if pos:line="25" pos:column="11">if <condition pos:line="25" pos:column="14">(<expr><call><name pos:line="25" pos:column="15">lt_dlisresident<pos:position pos:line="25" pos:column="30"/></name> <argument_list pos:line="25" pos:column="31">(<argument><expr><name pos:line="25" pos:column="32">handle<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="40"/></condition><then pos:line="25" pos:column="40">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="13">in_use_by_resident<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">=<pos:position pos:line="26" pos:column="33"/></operator> <literal type="number" pos:line="26" pos:column="34">1<pos:position pos:line="26" pos:column="35"/></literal></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
    }<pos:position pos:line="28" pos:column="6"/></block></while>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">lt_dlinterface_free<pos:position pos:line="29" pos:column="22"/></name> <argument_list pos:line="29" pos:column="23">(<argument><expr><name pos:line="29" pos:column="24">iface<pos:position pos:line="29" pos:column="29"/></name></expr></argument>)<pos:position pos:line="29" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">in_use<pos:position pos:line="30" pos:column="13"/></name></expr>)<pos:position pos:line="30" pos:column="14"/></condition><then pos:line="30" pos:column="14">
    <block pos:line="31" pos:column="5">{
      <if pos:line="32" pos:column="7">if <condition pos:line="32" pos:column="10">(<expr><operator pos:line="32" pos:column="11">!<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">in_use_by_resident<pos:position pos:line="32" pos:column="30"/></name></expr>)<pos:position pos:line="32" pos:column="31"/></condition><then pos:line="32" pos:column="31">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="9">LT__SETERROR<pos:position pos:line="33" pos:column="21"/></name> <argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">REMOVE_LOADER<pos:position pos:line="33" pos:column="36"/></name></expr></argument>)<pos:position pos:line="33" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt></block></then></if>
      <return pos:line="34" pos:column="7">return <expr><literal type="number" pos:line="34" pos:column="14">0<pos:position pos:line="34" pos:column="15"/></literal></expr>;<pos:position pos:line="34" pos:column="16"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="37" pos:column="3">/* Call the loader finalisation function.  */</comment>
  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name pos:line="38" pos:column="7">vtable<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">&amp;&amp;<pos:position pos:line="38" pos:column="24"/></operator> <name><name pos:line="38" pos:column="17">vtable<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">dlloader_exit<pos:position pos:line="38" pos:column="38"/></name></name></expr>)<pos:position pos:line="38" pos:column="39"/></condition><then pos:line="38" pos:column="39">
    <block pos:line="39" pos:column="5">{
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><call pos:line="40" pos:column="11">(<modifier pos:line="40" pos:column="12">*<pos:position pos:line="40" pos:column="13"/></modifier><name><name pos:line="40" pos:column="13">vtable<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">dlloader_exit<pos:position pos:line="40" pos:column="34"/></name></name>) <argument_list pos:line="40" pos:column="36">(<argument><expr><name><name pos:line="40" pos:column="37">vtable<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">-&gt;<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="45">dlloader_data<pos:position pos:line="40" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call> <operator pos:line="40" pos:column="60">!=<pos:position pos:line="40" pos:column="62"/></operator> <literal type="number" pos:line="40" pos:column="63">0<pos:position pos:line="40" pos:column="64"/></literal></expr>)<pos:position pos:line="40" pos:column="65"/></condition><then pos:line="40" pos:column="65">
	<block pos:line="41" pos:column="9">{
	  <comment type="block" pos:line="42" pos:column="11">/* If there is an exit function, and it returns non-zero
	     then it must set an error, and we will not remove it
	     from the list.  */</comment>
	  <return pos:line="45" pos:column="11">return <expr><literal type="number" pos:line="45" pos:column="18">0<pos:position pos:line="45" pos:column="19"/></literal></expr>;<pos:position pos:line="45" pos:column="20"/></return>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="49" pos:column="3">/* If we got this far, remove the loader from our global list.  */</comment>
  <return pos:line="50" pos:column="3">return <expr><operator pos:line="50" pos:column="10">(<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="11">lt_dlvtable<pos:position pos:line="50" pos:column="22"/></name> <operator pos:line="50" pos:column="23">*<pos:position pos:line="50" pos:column="24"/></operator><operator pos:line="50" pos:column="24">)<pos:position pos:line="50" pos:column="25"/></operator>
      <call><name pos:line="51" pos:column="7">slist_unbox<pos:position pos:line="51" pos:column="18"/></name> <argument_list pos:line="51" pos:column="19">(<argument><expr><operator pos:line="51" pos:column="20">(<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="21">SList<pos:position pos:line="51" pos:column="26"/></name> <operator pos:line="51" pos:column="27">*<pos:position pos:line="51" pos:column="28"/></operator><operator pos:line="51" pos:column="28">)<pos:position pos:line="51" pos:column="29"/></operator> <call><name pos:line="51" pos:column="30">slist_remove<pos:position pos:line="51" pos:column="42"/></name> <argument_list pos:line="51" pos:column="43">(<argument><expr><operator pos:line="51" pos:column="44">&amp;<pos:position pos:line="51" pos:column="49"/></operator><name pos:line="51" pos:column="45">loaders<pos:position pos:line="51" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="54">loader_callback<pos:position pos:line="51" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="71">name<pos:position pos:line="51" pos:column="75"/></name></expr></argument>)<pos:position pos:line="51" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="78"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

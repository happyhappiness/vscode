<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2408_collectd-5.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">set_sock_opts<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">sockfd<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list> <comment type="block" pos:line="1" pos:column="32">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">socktype<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">socklen_t<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">socklen<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><sizeof pos:line="6" pos:column="23">sizeof<argument_list pos:line="6" pos:column="29">(<argument><expr><name pos:line="6" pos:column="30">socklen_t<pos:position pos:line="6" pos:column="39"/></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">so_keepalive<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><literal type="number" pos:line="7" pos:column="22">1<pos:position pos:line="7" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">status<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <call><name pos:line="9" pos:column="12">getsockopt<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">sockfd<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="31">SOL_SOCKET<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="43">SO_TYPE<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="52">&amp;<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="53">socktype<pos:position pos:line="9" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="63">&amp;<pos:position pos:line="9" pos:column="68"/></operator><name pos:line="9" pos:column="64">socklen<pos:position pos:line="9" pos:column="71"/></name></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="73"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">status<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">!=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block pos:line="10" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">WARNING<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><literal type="string" pos:line="11" pos:column="13">"set_sock_opts: failed to determine socket type"<pos:position pos:line="11" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="63"/></expr_stmt>
    <return pos:line="12" pos:column="5">return;<pos:position pos:line="12" pos:column="12"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">socktype<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">SOCK_STREAM<pos:position pos:line="15" pos:column="30"/></name></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31"> <block pos:line="15" pos:column="32">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">status<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">setsockopt<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">sockfd<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">SOL_SOCKET<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">SO_KEEPALIVE<pos:position pos:line="16" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="59">&amp;<pos:position pos:line="16" pos:column="64"/></operator><name pos:line="16" pos:column="60">so_keepalive<pos:position pos:line="16" pos:column="72"/></name></expr></argument>,
                        <argument><expr><sizeof pos:line="17" pos:column="25">sizeof<argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">so_keepalive<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">status<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">!=<pos:position pos:line="18" pos:column="18"/></operator> <literal type="number" pos:line="18" pos:column="19">0<pos:position pos:line="18" pos:column="20"/></literal></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="7">WARNING<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><literal type="string" pos:line="19" pos:column="15">"set_sock_opts: failed to set socket keepalive flag"<pos:position pos:line="19" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="69"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifdef<pos:position pos:line="21" pos:column="7"/></cpp:directive> <name pos:line="21" pos:column="8">TCP_KEEPIDLE<pos:position pos:line="21" pos:column="20"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">int<pos:position pos:line="22" pos:column="8"/></name></type> <name pos:line="22" pos:column="9">tcp_keepidle<pos:position pos:line="22" pos:column="21"/></name> <init pos:line="22" pos:column="22">= <expr><operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><operator pos:line="22" pos:column="25">(<pos:position pos:line="22" pos:column="26"/></operator><call><name pos:line="22" pos:column="26">CDTIME_T_TO_MS<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><call><name pos:line="22" pos:column="41">plugin_get_interval<pos:position pos:line="22" pos:column="60"/></name><argument_list pos:line="22" pos:column="60">()<pos:position pos:line="22" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="63"/></argument_list></call> <operator pos:line="22" pos:column="64">-<pos:position pos:line="22" pos:column="65"/></operator> <literal type="number" pos:line="22" pos:column="66">1<pos:position pos:line="22" pos:column="67"/></literal><operator pos:line="22" pos:column="67">)<pos:position pos:line="22" pos:column="68"/></operator> <operator pos:line="22" pos:column="69">/<pos:position pos:line="22" pos:column="70"/></operator> <literal type="number" pos:line="22" pos:column="71">100<pos:position pos:line="22" pos:column="74"/></literal> <operator pos:line="22" pos:column="75">+<pos:position pos:line="22" pos:column="76"/></operator> <literal type="number" pos:line="22" pos:column="77">1<pos:position pos:line="22" pos:column="78"/></literal><operator pos:line="22" pos:column="78">)<pos:position pos:line="22" pos:column="79"/></operator></expr></init></decl>;<pos:position pos:line="22" pos:column="80"/></decl_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">status<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">setsockopt<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">sockfd<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="33">IPPROTO_TCP<pos:position pos:line="23" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="46">TCP_KEEPIDLE<pos:position pos:line="23" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="60">&amp;<pos:position pos:line="23" pos:column="65"/></operator><name pos:line="23" pos:column="61">tcp_keepidle<pos:position pos:line="23" pos:column="73"/></name></expr></argument>,
                        <argument><expr><sizeof pos:line="24" pos:column="25">sizeof<argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">tcp_keepidle<pos:position pos:line="24" pos:column="44"/></name></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">status<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">!=<pos:position pos:line="25" pos:column="18"/></operator> <literal type="number" pos:line="25" pos:column="19">0<pos:position pos:line="25" pos:column="20"/></literal></expr>)<pos:position pos:line="25" pos:column="21"/></condition><then pos:line="25" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="7">WARNING<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><literal type="string" pos:line="26" pos:column="15">"set_sock_opts: failed to set socket tcp keepalive time"<pos:position pos:line="26" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="73"/></expr_stmt></block></then></if>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">TCP_KEEPINTVL<pos:position pos:line="29" pos:column="21"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">int<pos:position pos:line="30" pos:column="8"/></name></type> <name pos:line="30" pos:column="9">tcp_keepintvl<pos:position pos:line="30" pos:column="22"/></name> <init pos:line="30" pos:column="23">=
        <expr><operator pos:line="31" pos:column="9">(<pos:position pos:line="31" pos:column="10"/></operator><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><call><name pos:line="31" pos:column="11">CDTIME_T_TO_MS<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><call><name pos:line="31" pos:column="26">plugin_get_interval<pos:position pos:line="31" pos:column="45"/></name><argument_list pos:line="31" pos:column="45">()<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call> <operator pos:line="31" pos:column="49">-<pos:position pos:line="31" pos:column="50"/></operator> <literal type="number" pos:line="31" pos:column="51">1<pos:position pos:line="31" pos:column="52"/></literal><operator pos:line="31" pos:column="52">)<pos:position pos:line="31" pos:column="53"/></operator> <operator pos:line="31" pos:column="54">/<pos:position pos:line="31" pos:column="55"/></operator> <literal type="number" pos:line="31" pos:column="56">1000<pos:position pos:line="31" pos:column="60"/></literal> <operator pos:line="31" pos:column="61">+<pos:position pos:line="31" pos:column="62"/></operator> <literal type="number" pos:line="31" pos:column="63">1<pos:position pos:line="31" pos:column="64"/></literal><operator pos:line="31" pos:column="64">)<pos:position pos:line="31" pos:column="65"/></operator></expr></init></decl>;<pos:position pos:line="31" pos:column="66"/></decl_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">status<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">setsockopt<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">sockfd<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="33">IPPROTO_TCP<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">TCP_KEEPINTVL<pos:position pos:line="32" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="61">&amp;<pos:position pos:line="32" pos:column="66"/></operator><name pos:line="32" pos:column="62">tcp_keepintvl<pos:position pos:line="32" pos:column="75"/></name></expr></argument>,
                        <argument><expr><sizeof pos:line="33" pos:column="25">sizeof<argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">tcp_keepintvl<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">status<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">!=<pos:position pos:line="34" pos:column="18"/></operator> <literal type="number" pos:line="34" pos:column="19">0<pos:position pos:line="34" pos:column="20"/></literal></expr>)<pos:position pos:line="34" pos:column="21"/></condition><then pos:line="34" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="7">WARNING<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><literal type="string" pos:line="35" pos:column="15">"set_sock_opts: failed to set socket tcp keepalive interval"<pos:position pos:line="35" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="77"/></expr_stmt></block></then></if>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

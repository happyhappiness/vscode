<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1393_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">plugin_submit<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">pinba_statnode_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">res<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <comment type="block" pos:line="1" pos:column="55">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_list_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">vl<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="5" pos:column="3">vl<pos:position pos:line="5" pos:column="5"/></name><operator pos:line="5" pos:column="5">.<pos:position pos:line="5" pos:column="6"/></operator><name pos:line="5" pos:column="6">values_len<pos:position pos:line="5" pos:column="16"/></name></name> <operator pos:line="5" pos:column="17">=<pos:position pos:line="5" pos:column="18"/></operator> <literal type="number" pos:line="5" pos:column="19">1<pos:position pos:line="5" pos:column="20"/></literal></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">sstrncpy<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name><name pos:line="6" pos:column="12">vl<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">.<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">plugin<pos:position pos:line="6" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="23">"pinba"<pos:position pos:line="6" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="32">sizeof<argument_list pos:line="6" pos:column="38">(<argument><expr><name><name pos:line="6" pos:column="39">vl<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">.<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="42">plugin<pos:position pos:line="6" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">sstrncpy<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name><name pos:line="7" pos:column="12">vl<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">.<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">plugin_instance<pos:position pos:line="7" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="32">res<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">name<pos:position pos:line="7" pos:column="41"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="43">sizeof<argument_list pos:line="7" pos:column="49">(<argument><expr><name><name pos:line="7" pos:column="50">vl<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">.<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="53">plugin_instance<pos:position pos:line="7" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="71"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="9" pos:column="3">vl<pos:position pos:line="9" pos:column="5"/></name><operator pos:line="9" pos:column="5">.<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">values<pos:position pos:line="9" pos:column="12"/></name></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <operator pos:line="9" pos:column="15">&amp;<pos:position pos:line="9" pos:column="20"/></operator><operator pos:line="9" pos:column="16">(<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">value_t<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">)<pos:position pos:line="9" pos:column="25"/></operator><block pos:line="9" pos:column="25">{<expr><operator pos:line="9" pos:column="26">.<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">derive<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">=<pos:position pos:line="9" pos:column="35"/></operator> <name><name pos:line="9" pos:column="36">res<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">req_count<pos:position pos:line="9" pos:column="50"/></name></name></expr>}<pos:position pos:line="9" pos:column="51"/></block></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">sstrncpy<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name><name pos:line="10" pos:column="12">vl<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">type<pos:position pos:line="10" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="21">"total_requests"<pos:position pos:line="10" pos:column="37"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="39">sizeof<argument_list pos:line="10" pos:column="45">(<argument><expr><name><name pos:line="10" pos:column="46">vl<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">.<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="49">type<pos:position pos:line="10" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">plugin_dispatch_values<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><operator pos:line="11" pos:column="26">&amp;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="27">vl<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="13" pos:column="3">vl<pos:position pos:line="13" pos:column="5"/></name><operator pos:line="13" pos:column="5">.<pos:position pos:line="13" pos:column="6"/></operator><name pos:line="13" pos:column="6">values<pos:position pos:line="13" pos:column="12"/></name></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <operator pos:line="13" pos:column="15">&amp;<pos:position pos:line="13" pos:column="20"/></operator><operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">value_t<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">)<pos:position pos:line="13" pos:column="25"/></operator><block pos:line="13" pos:column="25">{
      <expr><operator pos:line="14" pos:column="7">.<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">derive<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <macro><name pos:line="14" pos:column="17">float_counter_get<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument pos:line="14" pos:column="35">&amp;res-&gt;req_time<pos:position pos:line="14" pos:column="49"/></argument>, <comment type="block" pos:line="14" pos:column="51">/* factor = */</comment> <argument><literal type="number" pos:line="14" pos:column="66">1000<pos:position pos:line="14" pos:column="70"/></literal></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></macro></expr>}<pos:position pos:line="14" pos:column="72"/></block></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">sstrncpy<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name><name pos:line="15" pos:column="12">vl<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">.<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">type<pos:position pos:line="15" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="21">"total_time_in_ms"<pos:position pos:line="15" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="41">sizeof<argument_list pos:line="15" pos:column="47">(<argument><expr><name><name pos:line="15" pos:column="48">vl<pos:position pos:line="15" pos:column="50"/></name><operator pos:line="15" pos:column="50">.<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="51">type<pos:position pos:line="15" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">plugin_dispatch_values<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="27">vl<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="18" pos:column="3">vl<pos:position pos:line="18" pos:column="5"/></name><operator pos:line="18" pos:column="5">.<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">values<pos:position pos:line="18" pos:column="12"/></name></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <operator pos:line="18" pos:column="15">&amp;<pos:position pos:line="18" pos:column="20"/></operator><operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">value_t<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">)<pos:position pos:line="18" pos:column="25"/></operator><block pos:line="18" pos:column="25">{<expr><operator pos:line="18" pos:column="26">.<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">derive<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">=<pos:position pos:line="18" pos:column="35"/></operator> <name><name pos:line="18" pos:column="36">res<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">doc_size<pos:position pos:line="18" pos:column="49"/></name></name></expr>}<pos:position pos:line="18" pos:column="50"/></block></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">sstrncpy<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name><name pos:line="19" pos:column="12">vl<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">.<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">type<pos:position pos:line="19" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="21">"total_bytes"<pos:position pos:line="19" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="36">sizeof<argument_list pos:line="19" pos:column="42">(<argument><expr><name><name pos:line="19" pos:column="43">vl<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">.<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">type<pos:position pos:line="19" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">plugin_dispatch_values<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><operator pos:line="20" pos:column="26">&amp;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="27">vl<pos:position pos:line="20" pos:column="29"/></name></expr></argument>)<pos:position pos:line="20" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="22" pos:column="3">vl<pos:position pos:line="22" pos:column="5"/></name><operator pos:line="22" pos:column="5">.<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">values<pos:position pos:line="22" pos:column="12"/></name></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <operator pos:line="22" pos:column="15">&amp;<pos:position pos:line="22" pos:column="20"/></operator><operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">value_t<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">)<pos:position pos:line="22" pos:column="25"/></operator><block pos:line="22" pos:column="25">{
      <expr><operator pos:line="23" pos:column="7">.<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">derive<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <macro><name pos:line="23" pos:column="17">float_counter_get<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument pos:line="23" pos:column="35">&amp;res-&gt;ru_utime<pos:position pos:line="23" pos:column="49"/></argument>, <comment type="block" pos:line="23" pos:column="51">/* factor = */</comment> <argument><literal type="number" pos:line="23" pos:column="66">100<pos:position pos:line="23" pos:column="69"/></literal></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></macro></expr>}<pos:position pos:line="23" pos:column="71"/></block></expr>;<pos:position pos:line="23" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">sstrncpy<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name><name pos:line="24" pos:column="12">vl<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">.<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">type<pos:position pos:line="24" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="21">"cpu"<pos:position pos:line="24" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="28">sizeof<argument_list pos:line="24" pos:column="34">(<argument><expr><name><name pos:line="24" pos:column="35">vl<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">.<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="38">type<pos:position pos:line="24" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">sstrncpy<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name><name pos:line="25" pos:column="12">vl<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">.<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">type_instance<pos:position pos:line="25" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="30">"user"<pos:position pos:line="25" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="38">sizeof<argument_list pos:line="25" pos:column="44">(<argument><expr><name><name pos:line="25" pos:column="45">vl<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">.<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="48">type_instance<pos:position pos:line="25" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">plugin_dispatch_values<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><operator pos:line="26" pos:column="26">&amp;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="27">vl<pos:position pos:line="26" pos:column="29"/></name></expr></argument>)<pos:position pos:line="26" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="28" pos:column="3">vl<pos:position pos:line="28" pos:column="5"/></name><operator pos:line="28" pos:column="5">.<pos:position pos:line="28" pos:column="6"/></operator><name pos:line="28" pos:column="6">values<pos:position pos:line="28" pos:column="12"/></name></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <operator pos:line="28" pos:column="15">&amp;<pos:position pos:line="28" pos:column="20"/></operator><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">value_t<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">)<pos:position pos:line="28" pos:column="25"/></operator><block pos:line="28" pos:column="25">{
      <expr><operator pos:line="29" pos:column="7">.<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">derive<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <macro><name pos:line="29" pos:column="17">float_counter_get<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument pos:line="29" pos:column="35">&amp;res-&gt;ru_stime<pos:position pos:line="29" pos:column="49"/></argument>, <comment type="block" pos:line="29" pos:column="51">/* factor = */</comment> <argument><literal type="number" pos:line="29" pos:column="66">100<pos:position pos:line="29" pos:column="69"/></literal></argument>)<pos:position pos:line="29" pos:column="70"/></argument_list></macro></expr>}<pos:position pos:line="29" pos:column="71"/></block></expr>;<pos:position pos:line="29" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">sstrncpy<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><name><name pos:line="30" pos:column="12">vl<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">.<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">type<pos:position pos:line="30" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="21">"cpu"<pos:position pos:line="30" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="28">sizeof<argument_list pos:line="30" pos:column="34">(<argument><expr><name><name pos:line="30" pos:column="35">vl<pos:position pos:line="30" pos:column="37"/></name><operator pos:line="30" pos:column="37">.<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="38">type<pos:position pos:line="30" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">sstrncpy<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><name><name pos:line="31" pos:column="12">vl<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">.<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">type_instance<pos:position pos:line="31" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="30">"system"<pos:position pos:line="31" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="40">sizeof<argument_list pos:line="31" pos:column="46">(<argument><expr><name><name pos:line="31" pos:column="47">vl<pos:position pos:line="31" pos:column="49"/></name><operator pos:line="31" pos:column="49">.<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="50">type_instance<pos:position pos:line="31" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">plugin_dispatch_values<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><operator pos:line="32" pos:column="26">&amp;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="27">vl<pos:position pos:line="32" pos:column="29"/></name></expr></argument>)<pos:position pos:line="32" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="34" pos:column="3">vl<pos:position pos:line="34" pos:column="5"/></name><operator pos:line="34" pos:column="5">.<pos:position pos:line="34" pos:column="6"/></operator><name pos:line="34" pos:column="6">values<pos:position pos:line="34" pos:column="12"/></name></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <operator pos:line="34" pos:column="15">&amp;<pos:position pos:line="34" pos:column="20"/></operator><operator pos:line="34" pos:column="16">(<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">value_t<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">)<pos:position pos:line="34" pos:column="25"/></operator><block pos:line="34" pos:column="25">{<expr><operator pos:line="34" pos:column="26">.<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="27">gauge<pos:position pos:line="34" pos:column="32"/></name> <operator pos:line="34" pos:column="33">=<pos:position pos:line="34" pos:column="34"/></operator> <name><name pos:line="34" pos:column="35">res<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">-&gt;<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="40">mem_peak<pos:position pos:line="34" pos:column="48"/></name></name></expr>}<pos:position pos:line="34" pos:column="49"/></block></expr>;<pos:position pos:line="34" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">sstrncpy<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">(<argument><expr><name><name pos:line="35" pos:column="12">vl<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">.<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">type<pos:position pos:line="35" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="21">"memory"<pos:position pos:line="35" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="31">sizeof<argument_list pos:line="35" pos:column="37">(<argument><expr><name><name pos:line="35" pos:column="38">vl<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">.<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="41">type<pos:position pos:line="35" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">sstrncpy<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><name><name pos:line="36" pos:column="12">vl<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">.<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">type_instance<pos:position pos:line="36" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="30">"peak"<pos:position pos:line="36" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="38">sizeof<argument_list pos:line="36" pos:column="44">(<argument><expr><name><name pos:line="36" pos:column="45">vl<pos:position pos:line="36" pos:column="47"/></name><operator pos:line="36" pos:column="47">.<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="48">type_instance<pos:position pos:line="36" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">plugin_dispatch_values<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><operator pos:line="37" pos:column="26">&amp;<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="27">vl<pos:position pos:line="37" pos:column="29"/></name></expr></argument>)<pos:position pos:line="37" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>

  <return pos:line="39" pos:column="3">return <expr><operator pos:line="39" pos:column="10">(<pos:position pos:line="39" pos:column="11"/></operator><literal type="number" pos:line="39" pos:column="11">0<pos:position pos:line="39" pos:column="12"/></literal><operator pos:line="39" pos:column="12">)<pos:position pos:line="39" pos:column="13"/></operator></expr>;<pos:position pos:line="39" pos:column="14"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

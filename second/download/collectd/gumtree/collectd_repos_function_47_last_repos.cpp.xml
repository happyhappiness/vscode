<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_47_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">srrd_create_async<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">filename<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="52">/* {{{ */</comment>
                             <parameter><decl><type><name pos:line="2" pos:column="30">unsigned<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">long<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">pdp_step<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">time_t<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">last_up<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="70">int<pos:position pos:line="2" pos:column="73"/></name></type> <name pos:line="2" pos:column="74">argc<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>,
                             <parameter><decl><type><specifier pos:line="3" pos:column="30">const<pos:position pos:line="3" pos:column="35"/></specifier> <name pos:line="3" pos:column="36">char<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier><modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">argv<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list> <block pos:line="3" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">srrd_create_args_t<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">args<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">pthread_t<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">thread<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">pthread_attr_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">attr<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">DEBUG<pos:position pos:line="9" pos:column="8"/></name><argument_list pos:line="9" pos:column="8">(<argument><expr><literal type="string" pos:line="9" pos:column="9">"srrd_create_async: Creating \"%s\" in the background."<pos:position pos:line="9" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="66">filename<pos:position pos:line="9" pos:column="74"/></name></expr></argument>)<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="76"/></expr_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">args<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">srrd_create_args_create<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">filename<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="44">pdp_step<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="54">last_up<pos:position pos:line="11" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="63">argc<pos:position pos:line="11" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="69">argv<pos:position pos:line="11" pos:column="73"/></name></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="75"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">args<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">==<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">NULL<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">status<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <call><name pos:line="15" pos:column="12">pthread_attr_init<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><operator pos:line="15" pos:column="30">&amp;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="31">attr<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">status<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">!=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="17">0<pos:position pos:line="16" pos:column="18"/></literal></expr>)<pos:position pos:line="16" pos:column="19"/></condition><then pos:line="16" pos:column="19"> <block pos:line="16" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">srrd_create_args_destroy<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">args<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">-<pos:position pos:line="18" pos:column="13"/></operator><literal type="number" pos:line="18" pos:column="13">1<pos:position pos:line="18" pos:column="14"/></literal></expr>;<pos:position pos:line="18" pos:column="15"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="21" pos:column="3">status<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <call><name pos:line="21" pos:column="12">pthread_attr_setdetachstate<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">(<argument><expr><operator pos:line="21" pos:column="40">&amp;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="41">attr<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">PTHREAD_CREATE_DETACHED<pos:position pos:line="21" pos:column="70"/></name></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">status<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">!=<pos:position pos:line="22" pos:column="16"/></operator> <literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19"> <block pos:line="22" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">pthread_attr_destroy<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><operator pos:line="23" pos:column="26">&amp;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="27">attr<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">srrd_create_args_destroy<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">args<pos:position pos:line="24" pos:column="34"/></name></expr></argument>)<pos:position pos:line="24" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">-<pos:position pos:line="25" pos:column="13"/></operator><literal type="number" pos:line="25" pos:column="13">1<pos:position pos:line="25" pos:column="14"/></literal></expr>;<pos:position pos:line="25" pos:column="15"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="28" pos:column="3">status<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <call><name pos:line="28" pos:column="12">pthread_create<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><operator pos:line="28" pos:column="27">&amp;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="28">thread<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="36">&amp;<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="37">attr<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="43">srrd_create_thread<pos:position pos:line="28" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="63">args<pos:position pos:line="28" pos:column="67"/></name></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="69"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">status<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">!=<pos:position pos:line="29" pos:column="16"/></operator> <literal type="number" pos:line="29" pos:column="17">0<pos:position pos:line="29" pos:column="18"/></literal></expr>)<pos:position pos:line="29" pos:column="19"/></condition><then pos:line="29" pos:column="19"> <block pos:line="29" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">char<pos:position pos:line="30" pos:column="9"/></name></type> <name><name pos:line="30" pos:column="10">errbuf<pos:position pos:line="30" pos:column="16"/></name><index pos:line="30" pos:column="16">[<expr><literal type="number" pos:line="30" pos:column="17">1024<pos:position pos:line="30" pos:column="21"/></literal></expr>]<pos:position pos:line="30" pos:column="22"/></index></name></decl>;<pos:position pos:line="30" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ERROR<pos:position pos:line="31" pos:column="10"/></name><argument_list pos:line="31" pos:column="10">(<argument><expr><literal type="string" pos:line="31" pos:column="11">"srrd_create_async: pthread_create failed: %s"<pos:position pos:line="31" pos:column="57"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="32" pos:column="11">sstrerror<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">status<pos:position pos:line="32" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="29">errbuf<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="37">sizeof<argument_list pos:line="32" pos:column="43">(<argument><expr><name pos:line="32" pos:column="44">errbuf<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">pthread_attr_destroy<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><operator pos:line="33" pos:column="26">&amp;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="27">attr<pos:position pos:line="33" pos:column="31"/></name></expr></argument>)<pos:position pos:line="33" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">srrd_create_args_destroy<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">args<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">status<pos:position pos:line="35" pos:column="18"/></name></expr>;<pos:position pos:line="35" pos:column="19"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">pthread_attr_destroy<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><operator pos:line="38" pos:column="24">&amp;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="25">attr<pos:position pos:line="38" pos:column="29"/></name></expr></argument>)<pos:position pos:line="38" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
  <comment type="block" pos:line="39" pos:column="3">/* args is freed in srrd_create_thread(). */</comment>
  <return pos:line="40" pos:column="3">return <expr><literal type="number" pos:line="40" pos:column="10">0<pos:position pos:line="40" pos:column="11"/></literal></expr>;<pos:position pos:line="40" pos:column="12"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

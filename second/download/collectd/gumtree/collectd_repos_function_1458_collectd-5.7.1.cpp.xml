<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1458_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dns_sleep_one_interval<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list> <comment type="block" pos:line="1" pos:column="41">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">timespec<pos:position pos:line="3" pos:column="18"/></name></name></type> <name pos:line="3" pos:column="19">ts<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><call><name pos:line="3" pos:column="24">CDTIME_T_TO_TIMESPEC<pos:position pos:line="3" pos:column="44"/></name><argument_list pos:line="3" pos:column="44">(<argument><expr><call><name pos:line="3" pos:column="45">plugin_get_interval<pos:position pos:line="3" pos:column="64"/></name><argument_list pos:line="3" pos:column="64">()<pos:position pos:line="3" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="68"/></decl_stmt>
  <while pos:line="4" pos:column="3">while <condition pos:line="4" pos:column="9">(<expr><call><name pos:line="4" pos:column="10">nanosleep<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><operator pos:line="4" pos:column="20">&amp;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="21">ts<pos:position pos:line="4" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="25">&amp;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="26">ts<pos:position pos:line="4" pos:column="28"/></name></expr></argument>)<pos:position pos:line="4" pos:column="29"/></argument_list></call> <operator pos:line="4" pos:column="30">!=<pos:position pos:line="4" pos:column="32"/></operator> <literal type="number" pos:line="4" pos:column="33">0<pos:position pos:line="4" pos:column="34"/></literal></expr>)<pos:position pos:line="4" pos:column="35"/></condition> <block pos:line="4" pos:column="36">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">errno<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">==<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">EINTR<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">)<pos:position pos:line="5" pos:column="25"/></operator> <operator pos:line="5" pos:column="26">||<pos:position pos:line="5" pos:column="28"/></operator> <operator pos:line="5" pos:column="29">(<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">errno<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">==<pos:position pos:line="5" pos:column="38"/></operator> <name pos:line="5" pos:column="39">EAGAIN<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">)<pos:position pos:line="5" pos:column="46"/></operator></expr>)<pos:position pos:line="5" pos:column="47"/></condition><then pos:line="5" pos:column="47">
      <block type="pseudo"><continue pos:line="6" pos:column="7">continue;<pos:position pos:line="6" pos:column="16"/></continue></block></then></if>

    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">errno<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">)<pos:position pos:line="8" pos:column="19"/></operator></expr>;<pos:position pos:line="8" pos:column="20"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></while>

  <return pos:line="11" pos:column="3">return <expr><operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><literal type="number" pos:line="11" pos:column="11">0<pos:position pos:line="11" pos:column="12"/></literal><operator pos:line="11" pos:column="12">)<pos:position pos:line="11" pos:column="13"/></operator></expr>;<pos:position pos:line="11" pos:column="14"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

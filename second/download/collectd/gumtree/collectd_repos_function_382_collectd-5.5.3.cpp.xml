<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_382_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_sysfs_callback<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">dir<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">power_supply<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">void<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">user_data<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="33"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">battery_index<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">user_data<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <specifier pos:line="7" pos:column="14">const<pos:position pos:line="7" pos:column="19"/></specifier> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">plugin_instance<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">buffer<pos:position pos:line="8" pos:column="20"/></name><index pos:line="8" pos:column="20">[<expr><literal type="number" pos:line="8" pos:column="21">32<pos:position pos:line="8" pos:column="23"/></literal></expr>]<pos:position pos:line="8" pos:column="24"/></index></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">gauge_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">v<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name pos:line="9" pos:column="21">NAN<pos:position pos:line="9" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">_Bool<pos:position pos:line="10" pos:column="14"/></name></type> <name pos:line="10" pos:column="15">discharging<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">status<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>

	<comment type="block" pos:line="13" pos:column="9">/* Ignore non-battery directories, such as AC power. */</comment>
	<expr_stmt><expr><name pos:line="14" pos:column="9">status<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">sysfs_file_to_buffer<pos:position pos:line="14" pos:column="38"/></name> <argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">dir<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">power_supply<pos:position pos:line="14" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="59">"type"<pos:position pos:line="14" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="67">buffer<pos:position pos:line="14" pos:column="73"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="75">sizeof <argument_list pos:line="14" pos:column="82">(<argument><expr><name pos:line="14" pos:column="83">buffer<pos:position pos:line="14" pos:column="89"/></name></expr></argument>)<pos:position pos:line="14" pos:column="90"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="92"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">status<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">!=<pos:position pos:line="15" pos:column="22"/></operator> <literal type="number" pos:line="15" pos:column="23">0<pos:position pos:line="15" pos:column="24"/></literal></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">0<pos:position pos:line="16" pos:column="26"/></literal><operator pos:line="16" pos:column="26">)<pos:position pos:line="16" pos:column="27"/></operator></expr>;<pos:position pos:line="16" pos:column="28"/></return></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">strcasecmp<pos:position pos:line="17" pos:column="23"/></name> <argument_list pos:line="17" pos:column="24">(<argument><expr><literal type="string" pos:line="17" pos:column="25">"Battery"<pos:position pos:line="17" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">buffer<pos:position pos:line="17" pos:column="42"/></name></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call> <operator pos:line="17" pos:column="44">!=<pos:position pos:line="17" pos:column="46"/></operator> <literal type="number" pos:line="17" pos:column="47">0<pos:position pos:line="17" pos:column="48"/></literal></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><operator pos:line="18" pos:column="24">(<pos:position pos:line="18" pos:column="25"/></operator><literal type="number" pos:line="18" pos:column="25">0<pos:position pos:line="18" pos:column="26"/></literal><operator pos:line="18" pos:column="26">)<pos:position pos:line="18" pos:column="27"/></operator></expr>;<pos:position pos:line="18" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><operator pos:line="20" pos:column="9">(<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">void<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">)<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">sysfs_file_to_buffer<pos:position pos:line="20" pos:column="36"/></name> <argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">dir<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="43">power_supply<pos:position pos:line="20" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="57">"status"<pos:position pos:line="20" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="67">buffer<pos:position pos:line="20" pos:column="73"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="75">sizeof <argument_list pos:line="20" pos:column="82">(<argument><expr><name pos:line="20" pos:column="83">buffer<pos:position pos:line="20" pos:column="89"/></name></expr></argument>)<pos:position pos:line="20" pos:column="90"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="92"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">strcasecmp<pos:position pos:line="21" pos:column="23"/></name> <argument_list pos:line="21" pos:column="24">(<argument><expr><literal type="string" pos:line="21" pos:column="25">"Discharging"<pos:position pos:line="21" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="40">buffer<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call> <operator pos:line="21" pos:column="48">==<pos:position pos:line="21" pos:column="50"/></operator> <literal type="number" pos:line="21" pos:column="51">0<pos:position pos:line="21" pos:column="52"/></literal></expr>)<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="17">discharging<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <literal type="number" pos:line="22" pos:column="31">1<pos:position pos:line="22" pos:column="32"/></literal></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="24" pos:column="9">/* FIXME: This is a dirty hack for backwards compatibility: The battery
	 * plugin, for a very long time, has had the plugin_instance
	 * hard-coded to "0". So, to keep backwards compatibility, we'll use
	 * "0" for the first battery we find and the power_supply name for all
	 * following. This should be reverted in a future major version. */</comment>
	<expr_stmt><expr><name pos:line="29" pos:column="9">plugin_instance<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <ternary><condition><expr><operator pos:line="29" pos:column="27">(<pos:position pos:line="29" pos:column="28"/></operator><operator pos:line="29" pos:column="28">*<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="29">battery_index<pos:position pos:line="29" pos:column="42"/></name> <operator pos:line="29" pos:column="43">==<pos:position pos:line="29" pos:column="45"/></operator> <literal type="number" pos:line="29" pos:column="46">0<pos:position pos:line="29" pos:column="47"/></literal><operator pos:line="29" pos:column="47">)<pos:position pos:line="29" pos:column="48"/></operator></expr> ?<pos:position pos:line="29" pos:column="50"/></condition><then pos:line="29" pos:column="50"> <expr><literal type="string" pos:line="29" pos:column="51">"0"<pos:position pos:line="29" pos:column="54"/></literal></expr> <pos:position pos:line="29" pos:column="55"/></then><else pos:line="29" pos:column="55">: <expr><name pos:line="29" pos:column="57">power_supply<pos:position pos:line="29" pos:column="69"/></name></expr></else></ternary></expr>;<pos:position pos:line="29" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><operator pos:line="30" pos:column="10">*<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">battery_index<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">)<pos:position pos:line="30" pos:column="25"/></operator><operator pos:line="30" pos:column="25">++<pos:position pos:line="30" pos:column="27"/></operator></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">read_sysfs_capacity<pos:position pos:line="32" pos:column="28"/></name> <argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">dir<pos:position pos:line="32" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="35">power_supply<pos:position pos:line="32" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="49">plugin_instance<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">sysfs_file_to_gauge<pos:position pos:line="34" pos:column="32"/></name> <argument_list pos:line="34" pos:column="33">(<argument><expr><name pos:line="34" pos:column="34">dir<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">power_supply<pos:position pos:line="34" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="53">"power_now"<pos:position pos:line="34" pos:column="64"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="66">&amp;<pos:position pos:line="34" pos:column="71"/></operator><name pos:line="34" pos:column="67">v<pos:position pos:line="34" pos:column="68"/></name></expr></argument>)<pos:position pos:line="34" pos:column="69"/></argument_list></call> <operator pos:line="34" pos:column="70">==<pos:position pos:line="34" pos:column="72"/></operator> <literal type="number" pos:line="34" pos:column="73">0<pos:position pos:line="34" pos:column="74"/></literal></expr>)<pos:position pos:line="34" pos:column="75"/></condition><then pos:line="34" pos:column="75">
	<block pos:line="35" pos:column="9">{
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">discharging<pos:position pos:line="36" pos:column="32"/></name></expr>)<pos:position pos:line="36" pos:column="33"/></condition><then pos:line="36" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">v<pos:position pos:line="37" pos:column="26"/></name> <operator pos:line="37" pos:column="27">*=<pos:position pos:line="37" pos:column="29"/></operator> <operator pos:line="37" pos:column="30">-<pos:position pos:line="37" pos:column="31"/></operator><literal type="number" pos:line="37" pos:column="31">1.0<pos:position pos:line="37" pos:column="34"/></literal></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">battery_submit<pos:position pos:line="38" pos:column="31"/></name> <argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">plugin_instance<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="50">"power"<pos:position pos:line="38" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="59">v<pos:position pos:line="38" pos:column="60"/></name> <operator pos:line="38" pos:column="61">*<pos:position pos:line="38" pos:column="62"/></operator> <name pos:line="38" pos:column="63">SYSFS_FACTOR<pos:position pos:line="38" pos:column="75"/></name></expr></argument>)<pos:position pos:line="38" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name pos:line="40" pos:column="13">sysfs_file_to_gauge<pos:position pos:line="40" pos:column="32"/></name> <argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">dir<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="39">power_supply<pos:position pos:line="40" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="53">"current_now"<pos:position pos:line="40" pos:column="66"/></literal></expr></argument>, <argument><expr><operator pos:line="40" pos:column="68">&amp;<pos:position pos:line="40" pos:column="73"/></operator><name pos:line="40" pos:column="69">v<pos:position pos:line="40" pos:column="70"/></name></expr></argument>)<pos:position pos:line="40" pos:column="71"/></argument_list></call> <operator pos:line="40" pos:column="72">==<pos:position pos:line="40" pos:column="74"/></operator> <literal type="number" pos:line="40" pos:column="75">0<pos:position pos:line="40" pos:column="76"/></literal></expr>)<pos:position pos:line="40" pos:column="77"/></condition><then pos:line="40" pos:column="77">
	<block pos:line="41" pos:column="9">{
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">discharging<pos:position pos:line="42" pos:column="32"/></name></expr>)<pos:position pos:line="42" pos:column="33"/></condition><then pos:line="42" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="25">v<pos:position pos:line="43" pos:column="26"/></name> <operator pos:line="43" pos:column="27">*=<pos:position pos:line="43" pos:column="29"/></operator> <operator pos:line="43" pos:column="30">-<pos:position pos:line="43" pos:column="31"/></operator><literal type="number" pos:line="43" pos:column="31">1.0<pos:position pos:line="43" pos:column="34"/></literal></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">battery_submit<pos:position pos:line="44" pos:column="31"/></name> <argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">plugin_instance<pos:position pos:line="44" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="50">"current"<pos:position pos:line="44" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="61">v<pos:position pos:line="44" pos:column="62"/></name> <operator pos:line="44" pos:column="63">*<pos:position pos:line="44" pos:column="64"/></operator> <name pos:line="44" pos:column="65">SYSFS_FACTOR<pos:position pos:line="44" pos:column="77"/></name></expr></argument>)<pos:position pos:line="44" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="79"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><call><name pos:line="47" pos:column="13">sysfs_file_to_gauge<pos:position pos:line="47" pos:column="32"/></name> <argument_list pos:line="47" pos:column="33">(<argument><expr><name pos:line="47" pos:column="34">dir<pos:position pos:line="47" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="39">power_supply<pos:position pos:line="47" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="53">"voltage_now"<pos:position pos:line="47" pos:column="66"/></literal></expr></argument>, <argument><expr><operator pos:line="47" pos:column="68">&amp;<pos:position pos:line="47" pos:column="73"/></operator><name pos:line="47" pos:column="69">v<pos:position pos:line="47" pos:column="70"/></name></expr></argument>)<pos:position pos:line="47" pos:column="71"/></argument_list></call> <operator pos:line="47" pos:column="72">==<pos:position pos:line="47" pos:column="74"/></operator> <literal type="number" pos:line="47" pos:column="75">0<pos:position pos:line="47" pos:column="76"/></literal></expr>)<pos:position pos:line="47" pos:column="77"/></condition><then pos:line="47" pos:column="77">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="17">battery_submit<pos:position pos:line="48" pos:column="31"/></name> <argument_list pos:line="48" pos:column="32">(<argument><expr><name pos:line="48" pos:column="33">plugin_instance<pos:position pos:line="48" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="50">"voltage"<pos:position pos:line="48" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="61">v<pos:position pos:line="48" pos:column="62"/></name> <operator pos:line="48" pos:column="63">*<pos:position pos:line="48" pos:column="64"/></operator> <name pos:line="48" pos:column="65">SYSFS_FACTOR<pos:position pos:line="48" pos:column="77"/></name></expr></argument>)<pos:position pos:line="48" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="79"/></expr_stmt></block></then></if>

	<return pos:line="50" pos:column="9">return <expr><operator pos:line="50" pos:column="16">(<pos:position pos:line="50" pos:column="17"/></operator><literal type="number" pos:line="50" pos:column="17">0<pos:position pos:line="50" pos:column="18"/></literal><operator pos:line="50" pos:column="18">)<pos:position pos:line="50" pos:column="19"/></operator></expr>;<pos:position pos:line="50" pos:column="20"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

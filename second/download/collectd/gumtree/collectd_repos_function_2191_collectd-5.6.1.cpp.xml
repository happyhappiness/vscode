<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2191_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">lookup_destroy<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">lookup_t<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">obj<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list> <comment type="block" pos:line="1" pos:column="37">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">obj<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">==<pos:position pos:line="5" pos:column="13"/></operator> <name pos:line="5" pos:column="14">NULL<pos:position pos:line="5" pos:column="18"/></name></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19">
    <block type="pseudo"><return pos:line="6" pos:column="5">return;<pos:position pos:line="6" pos:column="12"/></return></block></then></if>

  <while pos:line="8" pos:column="3">while <condition pos:line="8" pos:column="9">(<expr><literal type="number" pos:line="8" pos:column="10">42<pos:position pos:line="8" pos:column="12"/></literal></expr>)<pos:position pos:line="8" pos:column="13"/></condition>
  <block pos:line="9" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">type<pos:position pos:line="10" pos:column="15"/></name> <init pos:line="10" pos:column="16">= <expr><name pos:line="10" pos:column="18">NULL<pos:position pos:line="10" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">by_type_entry_t<pos:position pos:line="11" pos:column="20"/></name> <modifier pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></modifier></type><name pos:line="11" pos:column="22">by_type<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><name pos:line="11" pos:column="32">NULL<pos:position pos:line="11" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">status<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">c_avl_pick<pos:position pos:line="13" pos:column="24"/></name> <argument_list pos:line="13" pos:column="25">(<argument><expr><name><name pos:line="13" pos:column="26">obj<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">by_type_tree<pos:position pos:line="13" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="45">(<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="46">void<pos:position pos:line="13" pos:column="50"/></name> <operator pos:line="13" pos:column="51">*<pos:position pos:line="13" pos:column="52"/></operator><operator pos:line="13" pos:column="52">)<pos:position pos:line="13" pos:column="53"/></operator> <operator pos:line="13" pos:column="54">&amp;<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="55">type<pos:position pos:line="13" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="61">(<pos:position pos:line="13" pos:column="62"/></operator><name pos:line="13" pos:column="62">void<pos:position pos:line="13" pos:column="66"/></name> <operator pos:line="13" pos:column="67">*<pos:position pos:line="13" pos:column="68"/></operator><operator pos:line="13" pos:column="68">)<pos:position pos:line="13" pos:column="69"/></operator> <operator pos:line="13" pos:column="70">&amp;<pos:position pos:line="13" pos:column="75"/></operator><name pos:line="13" pos:column="71">by_type<pos:position pos:line="13" pos:column="78"/></name></expr></argument>)<pos:position pos:line="13" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="80"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">status<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">!=<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21">
      <block type="pseudo"><break pos:line="15" pos:column="7">break;<pos:position pos:line="15" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">DEBUG<pos:position pos:line="17" pos:column="10"/></name> <argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="string" pos:line="17" pos:column="12">"utils_vl_lookup: lookup_destroy: Destroying type \"%s\"."<pos:position pos:line="17" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="72">type<pos:position pos:line="17" pos:column="76"/></name></expr></argument>)<pos:position pos:line="17" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">sfree<pos:position pos:line="18" pos:column="10"/></name> <argument_list pos:line="18" pos:column="11">(<argument><expr><name pos:line="18" pos:column="12">type<pos:position pos:line="18" pos:column="16"/></name></expr></argument>)<pos:position pos:line="18" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">lu_destroy_by_type<pos:position pos:line="19" pos:column="23"/></name> <argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">obj<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">by_type<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">c_avl_destroy<pos:position pos:line="22" pos:column="16"/></name> <argument_list pos:line="22" pos:column="17">(<argument><expr><name><name pos:line="22" pos:column="18">obj<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">by_type_tree<pos:position pos:line="22" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">obj<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">by_type_tree<pos:position pos:line="23" pos:column="20"/></name></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">NULL<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">sfree<pos:position pos:line="25" pos:column="8"/></name> <argument_list pos:line="25" pos:column="9">(<argument><expr><name pos:line="25" pos:column="10">obj<pos:position pos:line="25" pos:column="13"/></name></expr></argument>)<pos:position pos:line="25" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="15"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

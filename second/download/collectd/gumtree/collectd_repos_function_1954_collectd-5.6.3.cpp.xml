<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1954_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">network_shutdown<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list> <block pos:line="1" pos:column="35">{
  <expr_stmt><expr><name pos:line="2" pos:column="3">listen_loop<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">++<pos:position pos:line="2" pos:column="16"/></operator></expr>;<pos:position pos:line="2" pos:column="17"/></expr_stmt>

  <comment type="block" pos:line="4" pos:column="3">/* Kill the listening thread */</comment>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">receive_thread_running<pos:position pos:line="5" pos:column="29"/></name> <operator pos:line="5" pos:column="30">!=<pos:position pos:line="5" pos:column="32"/></operator> <literal type="number" pos:line="5" pos:column="33">0<pos:position pos:line="5" pos:column="34"/></literal></expr>)<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35"> <block pos:line="5" pos:column="36">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">INFO<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><literal type="string" pos:line="6" pos:column="10">"network plugin: Stopping receive thread."<pos:position pos:line="6" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">pthread_kill<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">receive_thread_id<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="37">SIGTERM<pos:position pos:line="7" pos:column="44"/></name></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">pthread_join<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">receive_thread_id<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="37">NULL<pos:position pos:line="8" pos:column="41"/></name></expr></argument> <comment type="block" pos:line="8" pos:column="42">/* no return value */</comment>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">memset<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><operator pos:line="9" pos:column="12">&amp;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="13">receive_thread_id<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="32">0<pos:position pos:line="9" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="35">sizeof<argument_list pos:line="9" pos:column="41">(<argument><expr><name pos:line="9" pos:column="42">receive_thread_id<pos:position pos:line="9" pos:column="59"/></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">receive_thread_running<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">=<pos:position pos:line="10" pos:column="29"/></operator> <literal type="number" pos:line="10" pos:column="30">0<pos:position pos:line="10" pos:column="31"/></literal></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="13" pos:column="3">/* Shutdown the dispatching thread */</comment>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">dispatch_thread_running<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">!=<pos:position pos:line="14" pos:column="33"/></operator> <literal type="number" pos:line="14" pos:column="34">0<pos:position pos:line="14" pos:column="35"/></literal></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36"> <block pos:line="14" pos:column="37">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">INFO<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><literal type="string" pos:line="15" pos:column="10">"network plugin: Stopping dispatch thread."<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">pthread_mutex_lock<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><operator pos:line="16" pos:column="24">&amp;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="25">receive_list_lock<pos:position pos:line="16" pos:column="42"/></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">pthread_cond_broadcast<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><operator pos:line="17" pos:column="28">&amp;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="29">receive_list_cond<pos:position pos:line="17" pos:column="46"/></name></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">pthread_mutex_unlock<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><operator pos:line="18" pos:column="26">&amp;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="27">receive_list_lock<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">pthread_join<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">dispatch_thread_id<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <comment type="block" pos:line="19" pos:column="38">/* ret = */</comment> <argument><expr><name pos:line="19" pos:column="50">NULL<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">dispatch_thread_running<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <literal type="number" pos:line="20" pos:column="31">0<pos:position pos:line="20" pos:column="32"/></literal></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">sockent_destroy<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">listen_sockets<pos:position pos:line="23" pos:column="33"/></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">send_buffer_fill<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">&gt;<pos:position pos:line="25" pos:column="28"/></operator> <literal type="number" pos:line="25" pos:column="26">0<pos:position pos:line="25" pos:column="27"/></literal></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="5">flush_buffer<pos:position pos:line="26" pos:column="17"/></name><argument_list pos:line="26" pos:column="17">()<pos:position pos:line="26" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">sfree<pos:position pos:line="28" pos:column="8"/></name><argument_list pos:line="28" pos:column="8">(<argument><expr><name pos:line="28" pos:column="9">send_buffer<pos:position pos:line="28" pos:column="20"/></name></expr></argument>)<pos:position pos:line="28" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>

  <for pos:line="30" pos:column="3">for <control pos:line="30" pos:column="7">(<init><decl><type><name pos:line="30" pos:column="8">sockent_t<pos:position pos:line="30" pos:column="17"/></name> <modifier pos:line="30" pos:column="18">*<pos:position pos:line="30" pos:column="19"/></modifier></type><name pos:line="30" pos:column="19">se<pos:position pos:line="30" pos:column="21"/></name> <init pos:line="30" pos:column="22">= <expr><name pos:line="30" pos:column="24">sending_sockets<pos:position pos:line="30" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="40"/></init> <condition><expr><name pos:line="30" pos:column="41">se<pos:position pos:line="30" pos:column="43"/></name> <operator pos:line="30" pos:column="44">!=<pos:position pos:line="30" pos:column="46"/></operator> <name pos:line="30" pos:column="47">NULL<pos:position pos:line="30" pos:column="51"/></name></expr>;<pos:position pos:line="30" pos:column="52"/></condition> <incr><expr><name pos:line="30" pos:column="53">se<pos:position pos:line="30" pos:column="55"/></name> <operator pos:line="30" pos:column="56">=<pos:position pos:line="30" pos:column="57"/></operator> <name><name pos:line="30" pos:column="58">se<pos:position pos:line="30" pos:column="60"/></name><operator pos:line="30" pos:column="60">-&gt;<pos:position pos:line="30" pos:column="65"/></operator><name pos:line="30" pos:column="62">next<pos:position pos:line="30" pos:column="66"/></name></name></expr></incr>)<pos:position pos:line="30" pos:column="67"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="5">sockent_client_disconnect<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">se<pos:position pos:line="31" pos:column="33"/></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt></block></for>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">sockent_destroy<pos:position pos:line="32" pos:column="18"/></name><argument_list pos:line="32" pos:column="18">(<argument><expr><name pos:line="32" pos:column="19">sending_sockets<pos:position pos:line="32" pos:column="34"/></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">plugin_unregister_config<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><literal type="string" pos:line="34" pos:column="28">"network"<pos:position pos:line="34" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">plugin_unregister_init<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><literal type="string" pos:line="35" pos:column="26">"network"<pos:position pos:line="35" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">plugin_unregister_write<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">(<argument><expr><literal type="string" pos:line="36" pos:column="27">"network"<pos:position pos:line="36" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">plugin_unregister_shutdown<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><literal type="string" pos:line="37" pos:column="30">"network"<pos:position pos:line="37" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>

  <return pos:line="39" pos:column="3">return <expr><operator pos:line="39" pos:column="10">(<pos:position pos:line="39" pos:column="11"/></operator><literal type="number" pos:line="39" pos:column="11">0<pos:position pos:line="39" pos:column="12"/></literal><operator pos:line="39" pos:column="12">)<pos:position pos:line="39" pos:column="13"/></operator></expr>;<pos:position pos:line="39" pos:column="14"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

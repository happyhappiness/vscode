<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1902_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">submit_value<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">cpu_num<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">gauge_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">percent<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">value_t<pos:position pos:line="3" pos:column="12"/></name></type> <name><name pos:line="3" pos:column="13">values<pos:position pos:line="3" pos:column="19"/></name><index pos:line="3" pos:column="19">[<expr><literal type="number" pos:line="3" pos:column="20">1<pos:position pos:line="3" pos:column="21"/></literal></expr>]<pos:position pos:line="3" pos:column="22"/></index></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">value_list_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">vl<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">VALUE_LIST_INIT<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="6" pos:column="5">values<pos:position pos:line="6" pos:column="11"/></name><index pos:line="6" pos:column="11">[<expr><literal type="number" pos:line="6" pos:column="12">0<pos:position pos:line="6" pos:column="13"/></literal></expr>]<pos:position pos:line="6" pos:column="14"/></index></name><operator pos:line="6" pos:column="14">.<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">gauge<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">=<pos:position pos:line="6" pos:column="22"/></operator> <name pos:line="6" pos:column="23">percent<pos:position pos:line="6" pos:column="30"/></name></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="8" pos:column="5">vl<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">.<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">values<pos:position pos:line="8" pos:column="14"/></name></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">values<pos:position pos:line="8" pos:column="23"/></name></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">vl<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">.<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">values_len<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <literal type="number" pos:line="9" pos:column="21">1<pos:position pos:line="9" pos:column="22"/></literal></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">sstrncpy<pos:position pos:line="11" pos:column="13"/></name> <argument_list pos:line="11" pos:column="14">(<argument><expr><name><name pos:line="11" pos:column="15">vl<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">.<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">host<pos:position pos:line="11" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="24">hostname_g<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="36">sizeof <argument_list pos:line="11" pos:column="43">(<argument><expr><name><name pos:line="11" pos:column="44">vl<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">.<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="47">host<pos:position pos:line="11" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">sstrncpy<pos:position pos:line="12" pos:column="13"/></name> <argument_list pos:line="12" pos:column="14">(<argument><expr><name><name pos:line="12" pos:column="15">vl<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">.<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">plugin<pos:position pos:line="12" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="26">"xencpu"<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="36">sizeof <argument_list pos:line="12" pos:column="43">(<argument><expr><name><name pos:line="12" pos:column="44">vl<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">.<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="47">plugin<pos:position pos:line="12" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">sstrncpy<pos:position pos:line="13" pos:column="13"/></name> <argument_list pos:line="13" pos:column="14">(<argument><expr><name><name pos:line="13" pos:column="15">vl<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">type<pos:position pos:line="13" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="24">"percent"<pos:position pos:line="13" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="35">sizeof <argument_list pos:line="13" pos:column="42">(<argument><expr><name><name pos:line="13" pos:column="43">vl<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">.<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="46">type<pos:position pos:line="13" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">sstrncpy<pos:position pos:line="14" pos:column="13"/></name> <argument_list pos:line="14" pos:column="14">(<argument><expr><name><name pos:line="14" pos:column="15">vl<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">.<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">type_instance<pos:position pos:line="14" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="33">"load"<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="41">sizeof <argument_list pos:line="14" pos:column="48">(<argument><expr><name><name pos:line="14" pos:column="49">vl<pos:position pos:line="14" pos:column="51"/></name><operator pos:line="14" pos:column="51">.<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="52">type_instance<pos:position pos:line="14" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">cpu_num<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">&gt;=<pos:position pos:line="16" pos:column="22"/></operator> <literal type="number" pos:line="16" pos:column="20">0<pos:position pos:line="16" pos:column="21"/></literal></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22"> <block pos:line="16" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">ssnprintf<pos:position pos:line="17" pos:column="18"/></name> <argument_list pos:line="17" pos:column="19">(<argument><expr><name><name pos:line="17" pos:column="20">vl<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">.<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">plugin_instance<pos:position pos:line="17" pos:column="38"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="40">sizeof <argument_list pos:line="17" pos:column="47">(<argument><expr><name><name pos:line="17" pos:column="48">vl<pos:position pos:line="17" pos:column="50"/></name><operator pos:line="17" pos:column="50">.<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="51">plugin_instance<pos:position pos:line="17" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></sizeof></expr></argument>,
                <argument><expr><literal type="string" pos:line="18" pos:column="17">"%i"<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="23">cpu_num<pos:position pos:line="18" pos:column="30"/></name></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">plugin_dispatch_values<pos:position pos:line="20" pos:column="27"/></name> <argument_list pos:line="20" pos:column="28">(<argument><expr><operator pos:line="20" pos:column="29">&amp;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="30">vl<pos:position pos:line="20" pos:column="32"/></name></expr></argument>)<pos:position pos:line="20" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

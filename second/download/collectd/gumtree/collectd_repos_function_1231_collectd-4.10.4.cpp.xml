<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1231_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">wh_reset_buffer<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">wh_callback_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">cb<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>  <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
        <expr_stmt><expr><call><name pos:line="3" pos:column="9">memset<pos:position pos:line="3" pos:column="15"/></name> <argument_list pos:line="3" pos:column="16">(<argument><expr><name><name pos:line="3" pos:column="17">cb<pos:position pos:line="3" pos:column="19"/></name><operator pos:line="3" pos:column="19">-&gt;<pos:position pos:line="3" pos:column="24"/></operator><name pos:line="3" pos:column="21">send_buffer<pos:position pos:line="3" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="34">0<pos:position pos:line="3" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="37">sizeof <argument_list pos:line="3" pos:column="44">(<argument><expr><name><name pos:line="3" pos:column="45">cb<pos:position pos:line="3" pos:column="47"/></name><operator pos:line="3" pos:column="47">-&gt;<pos:position pos:line="3" pos:column="52"/></operator><name pos:line="3" pos:column="49">send_buffer<pos:position pos:line="3" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="4" pos:column="9">cb<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">-&gt;<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="13">send_buffer_free<pos:position pos:line="4" pos:column="29"/></name></name> <operator pos:line="4" pos:column="30">=<pos:position pos:line="4" pos:column="31"/></operator> <sizeof pos:line="4" pos:column="32">sizeof <argument_list pos:line="4" pos:column="39">(<argument><expr><name><name pos:line="4" pos:column="40">cb<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">-&gt;<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="44">send_buffer<pos:position pos:line="4" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></sizeof></expr>;<pos:position pos:line="4" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="5" pos:column="9">cb<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">send_buffer_fill<pos:position pos:line="5" pos:column="29"/></name></name> <operator pos:line="5" pos:column="30">=<pos:position pos:line="5" pos:column="31"/></operator> <literal type="number" pos:line="5" pos:column="32">0<pos:position pos:line="5" pos:column="33"/></literal></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">cb<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">send_buffer_init_time<pos:position pos:line="6" pos:column="34"/></name></name> <operator pos:line="6" pos:column="35">=<pos:position pos:line="6" pos:column="36"/></operator> <call><name pos:line="6" pos:column="37">time<pos:position pos:line="6" pos:column="41"/></name> <argument_list pos:line="6" pos:column="42">(<argument><expr><name pos:line="6" pos:column="43">NULL<pos:position pos:line="6" pos:column="47"/></name></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="49"/></expr_stmt>

        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">cb<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">format<pos:position pos:line="8" pos:column="23"/></name></name> <operator pos:line="8" pos:column="24">==<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="27">WH_FORMAT_JSON<pos:position pos:line="8" pos:column="41"/></name></expr>)<pos:position pos:line="8" pos:column="42"/></condition><then pos:line="8" pos:column="42">
        <block pos:line="9" pos:column="9">{
                <expr_stmt><expr><call><name pos:line="10" pos:column="17">format_json_initialize<pos:position pos:line="10" pos:column="39"/></name> <argument_list pos:line="10" pos:column="40">(<argument><expr><name><name pos:line="10" pos:column="41">cb<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">send_buffer<pos:position pos:line="10" pos:column="56"/></name></name></expr></argument>,
                                <argument><expr><operator pos:line="11" pos:column="33">&amp;<pos:position pos:line="11" pos:column="38"/></operator><name><name pos:line="11" pos:column="34">cb<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">send_buffer_fill<pos:position pos:line="11" pos:column="54"/></name></name></expr></argument>,
                                <argument><expr><operator pos:line="12" pos:column="33">&amp;<pos:position pos:line="12" pos:column="38"/></operator><name><name pos:line="12" pos:column="34">cb<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">send_buffer_free<pos:position pos:line="12" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

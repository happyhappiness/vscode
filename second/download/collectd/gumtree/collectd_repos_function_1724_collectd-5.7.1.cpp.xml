<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1724_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cx_handle_instance_xpath<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">xmlXPathContextPtr<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">xpath_ctx<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="67">/* {{{ */</comment>
                                    <parameter><decl><type><name pos:line="2" pos:column="37">cx_xpath_t<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">xpath<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">value_list_t<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="70">vl<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">_Bool<pos:position pos:line="3" pos:column="42"/></name></type> <name pos:line="3" pos:column="43">is_table<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list> <block pos:line="3" pos:column="53">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">xmlXPathObjectPtr<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">instance_node_obj<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><name pos:line="4" pos:column="41">NULL<pos:position pos:line="4" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">xmlNodeSetPtr<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">instance_node<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><name pos:line="5" pos:column="33">NULL<pos:position pos:line="5" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">memset<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name><name pos:line="7" pos:column="10">vl<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">type_instance<pos:position pos:line="7" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="32">sizeof<argument_list pos:line="7" pos:column="38">(<argument><expr><name><name pos:line="7" pos:column="39">vl<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">-&gt;<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="43">type_instance<pos:position pos:line="7" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="59"/></expr_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* If the base xpath returns more than one block, the result is assumed to be
   * a table. The `Instance' option is not optional in this case. Check for the
   * condition and inform the user. */</comment>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">is_table<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">&amp;&amp;<pos:position pos:line="12" pos:column="26"/></operator> <operator pos:line="12" pos:column="19">(<pos:position pos:line="12" pos:column="20"/></operator><name><name pos:line="12" pos:column="20">xpath<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">instance<pos:position pos:line="12" pos:column="35"/></name></name> <operator pos:line="12" pos:column="36">==<pos:position pos:line="12" pos:column="38"/></operator> <name pos:line="12" pos:column="39">NULL<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">)<pos:position pos:line="12" pos:column="44"/></operator></expr>)<pos:position pos:line="12" pos:column="45"/></condition><then pos:line="12" pos:column="45"> <block pos:line="12" pos:column="46">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">WARNING<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><literal type="string" pos:line="13" pos:column="13">"curl_xml plugin: "<pos:position pos:line="13" pos:column="32"/></literal>
            <literal type="string" pos:line="14" pos:column="13">"Base-XPath %s is a table (more than one result was returned), "<pos:position pos:line="14" pos:column="77"/></literal>
            <literal type="string" pos:line="15" pos:column="13">"but no instance-XPath has been defined."<pos:position pos:line="15" pos:column="54"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="16" pos:column="13">xpath<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">path<pos:position pos:line="16" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">-<pos:position pos:line="17" pos:column="14"/></operator><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal><operator pos:line="17" pos:column="15">)<pos:position pos:line="17" pos:column="16"/></operator></expr>;<pos:position pos:line="17" pos:column="17"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="20" pos:column="3">/* instance has to be an xpath expression */</comment>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name><name pos:line="21" pos:column="7">xpath<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">instance<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">!=<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">NULL<pos:position pos:line="21" pos:column="30"/></name></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31"> <block pos:line="21" pos:column="32">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">int<pos:position pos:line="22" pos:column="8"/></name></type> <name pos:line="22" pos:column="9">tmp_size<pos:position pos:line="22" pos:column="17"/></name></decl>;<pos:position pos:line="22" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name pos:line="24" pos:column="5">instance_node_obj<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <macro><name pos:line="24" pos:column="25">cx_evaluate_xpath<pos:position pos:line="24" pos:column="42"/></name><argument_list pos:line="24" pos:column="42">(<argument pos:line="24" pos:column="43">xpath_ctx<pos:position pos:line="24" pos:column="52"/></argument>, <argument pos:line="24" pos:column="54">BAD_CAST xpath-&gt;instance<pos:position pos:line="24" pos:column="78"/></argument>)<pos:position pos:line="24" pos:column="79"/></argument_list></macro></expr>;<pos:position pos:line="24" pos:column="80"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">instance_node_obj<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">==<pos:position pos:line="25" pos:column="29"/></operator> <name pos:line="25" pos:column="30">NULL<pos:position pos:line="25" pos:column="34"/></name></expr>)<pos:position pos:line="25" pos:column="35"/></condition><then pos:line="25" pos:column="35">
      <block type="pseudo"><return pos:line="26" pos:column="7">return <expr><operator pos:line="26" pos:column="14">(<pos:position pos:line="26" pos:column="15"/></operator><operator pos:line="26" pos:column="15">-<pos:position pos:line="26" pos:column="16"/></operator><literal type="number" pos:line="26" pos:column="16">1<pos:position pos:line="26" pos:column="17"/></literal><operator pos:line="26" pos:column="17">)<pos:position pos:line="26" pos:column="18"/></operator></expr>;<pos:position pos:line="26" pos:column="19"/></return></block></then></if> <comment type="block" pos:line="26" pos:column="20">/* error is logged already */</comment>

    <expr_stmt><expr><name pos:line="28" pos:column="5">instance_node<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <name><name pos:line="28" pos:column="21">instance_node_obj<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">-&gt;<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="40">nodesetval<pos:position pos:line="28" pos:column="50"/></name></name></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">tmp_size<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <ternary><condition><expr><operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">instance_node<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">)<pos:position pos:line="29" pos:column="31"/></operator></expr> ?<pos:position pos:line="29" pos:column="33"/></condition><then pos:line="29" pos:column="33"> <expr><name><name pos:line="29" pos:column="34">instance_node<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">-&gt;<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="49">nodeNr<pos:position pos:line="29" pos:column="55"/></name></name></expr> <pos:position pos:line="29" pos:column="56"/></then><else pos:line="29" pos:column="56">: <expr><literal type="number" pos:line="29" pos:column="58">0<pos:position pos:line="29" pos:column="59"/></literal></expr></else></ternary></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">tmp_size<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">&lt;=<pos:position pos:line="31" pos:column="23"/></operator> <literal type="number" pos:line="31" pos:column="21">0<pos:position pos:line="31" pos:column="22"/></literal></expr>)<pos:position pos:line="31" pos:column="23"/></condition><then pos:line="31" pos:column="23"> <block pos:line="31" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">WARNING<pos:position pos:line="32" pos:column="14"/></name><argument_list pos:line="32" pos:column="14">(
          <argument><expr><literal type="string" pos:line="33" pos:column="11">"curl_xml plugin: "<pos:position pos:line="33" pos:column="30"/></literal>
          <literal type="string" pos:line="34" pos:column="11">"relative xpath expression for 'InstanceFrom' \"%s\" doesn't match "<pos:position pos:line="34" pos:column="79"/></literal>
          <literal type="string" pos:line="35" pos:column="11">"any of the nodes. Skipping the node."<pos:position pos:line="35" pos:column="49"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="36" pos:column="11">xpath<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">-&gt;<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="18">instance<pos:position pos:line="36" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">xmlXPathFreeObject<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">instance_node_obj<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
      <return pos:line="38" pos:column="7">return <expr><operator pos:line="38" pos:column="14">(<pos:position pos:line="38" pos:column="15"/></operator><operator pos:line="38" pos:column="15">-<pos:position pos:line="38" pos:column="16"/></operator><literal type="number" pos:line="38" pos:column="16">1<pos:position pos:line="38" pos:column="17"/></literal><operator pos:line="38" pos:column="17">)<pos:position pos:line="38" pos:column="18"/></operator></expr>;<pos:position pos:line="38" pos:column="19"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">tmp_size<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">&gt;<pos:position pos:line="41" pos:column="22"/></operator> <literal type="number" pos:line="41" pos:column="20">1<pos:position pos:line="41" pos:column="21"/></literal></expr>)<pos:position pos:line="41" pos:column="22"/></condition><then pos:line="41" pos:column="22"> <block pos:line="41" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">WARNING<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><literal type="string" pos:line="42" pos:column="15">"curl_xml plugin: "<pos:position pos:line="42" pos:column="34"/></literal>
              <literal type="string" pos:line="43" pos:column="15">"relative xpath expression for 'InstanceFrom' \"%s\" is expected "<pos:position pos:line="43" pos:column="81"/></literal>
              <literal type="string" pos:line="44" pos:column="15">"to return only one text node. Skipping the node."<pos:position pos:line="44" pos:column="65"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="45" pos:column="15">xpath<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">-&gt;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="22">instance<pos:position pos:line="45" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">xmlXPathFreeObject<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">instance_node_obj<pos:position pos:line="46" pos:column="43"/></name></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="45"/></expr_stmt>
      <return pos:line="47" pos:column="7">return <expr><operator pos:line="47" pos:column="14">(<pos:position pos:line="47" pos:column="15"/></operator><operator pos:line="47" pos:column="15">-<pos:position pos:line="47" pos:column="16"/></operator><literal type="number" pos:line="47" pos:column="16">1<pos:position pos:line="47" pos:column="17"/></literal><operator pos:line="47" pos:column="17">)<pos:position pos:line="47" pos:column="18"/></operator></expr>;<pos:position pos:line="47" pos:column="19"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="50" pos:column="5">/* ignoring the element if other than textnode/attribute */</comment>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><call><name pos:line="51" pos:column="9">cx_if_not_text_node<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name><name pos:line="51" pos:column="29">instance_node<pos:position pos:line="51" pos:column="42"/></name><operator pos:line="51" pos:column="42">-&gt;<pos:position pos:line="51" pos:column="47"/></operator><name pos:line="51" pos:column="44">nodeTab<pos:position pos:line="51" pos:column="51"/></name><index pos:line="51" pos:column="51">[<expr><literal type="number" pos:line="51" pos:column="52">0<pos:position pos:line="51" pos:column="53"/></literal></expr>]<pos:position pos:line="51" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="56"/></condition><then pos:line="51" pos:column="56"> <block pos:line="51" pos:column="57">{
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">WARNING<pos:position pos:line="52" pos:column="14"/></name><argument_list pos:line="52" pos:column="14">(<argument><expr><literal type="string" pos:line="52" pos:column="15">"curl_xml plugin: "<pos:position pos:line="52" pos:column="34"/></literal>
              <literal type="string" pos:line="53" pos:column="15">"relative xpath expression \"%s\" is expected to return only "<pos:position pos:line="53" pos:column="77"/></literal>
              <literal type="string" pos:line="54" pos:column="15">"text node "<pos:position pos:line="54" pos:column="27"/></literal>
              <literal type="string" pos:line="55" pos:column="15">"which is not the case. Skipping the node."<pos:position pos:line="55" pos:column="58"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="56" pos:column="15">xpath<pos:position pos:line="56" pos:column="20"/></name><operator pos:line="56" pos:column="20">-&gt;<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="22">instance<pos:position pos:line="56" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">xmlXPathFreeObject<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name pos:line="57" pos:column="26">instance_node_obj<pos:position pos:line="57" pos:column="43"/></name></expr></argument>)<pos:position pos:line="57" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="45"/></expr_stmt>
      <return pos:line="58" pos:column="7">return <expr><operator pos:line="58" pos:column="14">(<pos:position pos:line="58" pos:column="15"/></operator><operator pos:line="58" pos:column="15">-<pos:position pos:line="58" pos:column="16"/></operator><literal type="number" pos:line="58" pos:column="16">1<pos:position pos:line="58" pos:column="17"/></literal><operator pos:line="58" pos:column="17">)<pos:position pos:line="58" pos:column="18"/></operator></expr>;<pos:position pos:line="58" pos:column="19"/></return>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if> <comment type="block" pos:line="60" pos:column="5">/* if (xpath-&gt;instance != NULL) */</comment>

  <if pos:line="62" pos:column="3">if <condition pos:line="62" pos:column="6">(<expr><name><name pos:line="62" pos:column="7">xpath<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">instance_prefix<pos:position pos:line="62" pos:column="29"/></name></name> <operator pos:line="62" pos:column="30">!=<pos:position pos:line="62" pos:column="32"/></operator> <name pos:line="62" pos:column="33">NULL<pos:position pos:line="62" pos:column="37"/></name></expr>)<pos:position pos:line="62" pos:column="38"/></condition><then pos:line="62" pos:column="38"> <block pos:line="62" pos:column="39">{
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">instance_node<pos:position pos:line="63" pos:column="22"/></name> <operator pos:line="63" pos:column="23">!=<pos:position pos:line="63" pos:column="25"/></operator> <name pos:line="63" pos:column="26">NULL<pos:position pos:line="63" pos:column="30"/></name></expr>)<pos:position pos:line="63" pos:column="31"/></condition><then pos:line="63" pos:column="31"> <block pos:line="63" pos:column="32">{
      <decl_stmt><decl><type><name pos:line="64" pos:column="7">char<pos:position pos:line="64" pos:column="11"/></name> <modifier pos:line="64" pos:column="12">*<pos:position pos:line="64" pos:column="13"/></modifier></type><name pos:line="64" pos:column="13">node_value<pos:position pos:line="64" pos:column="23"/></name> <init pos:line="64" pos:column="24">= <expr><operator pos:line="64" pos:column="26">(<pos:position pos:line="64" pos:column="27"/></operator><name pos:line="64" pos:column="27">char<pos:position pos:line="64" pos:column="31"/></name> <operator pos:line="64" pos:column="32">*<pos:position pos:line="64" pos:column="33"/></operator><operator pos:line="64" pos:column="33">)<pos:position pos:line="64" pos:column="34"/></operator><call><name pos:line="64" pos:column="34">xmlNodeGetContent<pos:position pos:line="64" pos:column="51"/></name><argument_list pos:line="64" pos:column="51">(<argument><expr><name><name pos:line="64" pos:column="52">instance_node<pos:position pos:line="64" pos:column="65"/></name><operator pos:line="64" pos:column="65">-&gt;<pos:position pos:line="64" pos:column="70"/></operator><name pos:line="64" pos:column="67">nodeTab<pos:position pos:line="64" pos:column="74"/></name><index pos:line="64" pos:column="74">[<expr><literal type="number" pos:line="64" pos:column="75">0<pos:position pos:line="64" pos:column="76"/></literal></expr>]<pos:position pos:line="64" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="64" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="64" pos:column="79"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">ssnprintf<pos:position pos:line="65" pos:column="16"/></name><argument_list pos:line="65" pos:column="16">(<argument><expr><name><name pos:line="65" pos:column="17">vl<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">-&gt;<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="21">type_instance<pos:position pos:line="65" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="36">sizeof<argument_list pos:line="65" pos:column="42">(<argument><expr><name><name pos:line="65" pos:column="43">vl<pos:position pos:line="65" pos:column="45"/></name><operator pos:line="65" pos:column="45">-&gt;<pos:position pos:line="65" pos:column="50"/></operator><name pos:line="65" pos:column="47">type_instance<pos:position pos:line="65" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="61"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="63">"%s%s"<pos:position pos:line="65" pos:column="69"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="66" pos:column="17">xpath<pos:position pos:line="66" pos:column="22"/></name><operator pos:line="66" pos:column="22">-&gt;<pos:position pos:line="66" pos:column="27"/></operator><name pos:line="66" pos:column="24">instance_prefix<pos:position pos:line="66" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="41">node_value<pos:position pos:line="66" pos:column="51"/></name></expr></argument>)<pos:position pos:line="66" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">sfree<pos:position pos:line="67" pos:column="12"/></name><argument_list pos:line="67" pos:column="12">(<argument><expr><name pos:line="67" pos:column="13">node_value<pos:position pos:line="67" pos:column="23"/></name></expr></argument>)<pos:position pos:line="67" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then> <else pos:line="68" pos:column="7">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="7">sstrncpy<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><name><name pos:line="69" pos:column="16">vl<pos:position pos:line="69" pos:column="18"/></name><operator pos:line="69" pos:column="18">-&gt;<pos:position pos:line="69" pos:column="23"/></operator><name pos:line="69" pos:column="20">type_instance<pos:position pos:line="69" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="35">xpath<pos:position pos:line="69" pos:column="40"/></name><operator pos:line="69" pos:column="40">-&gt;<pos:position pos:line="69" pos:column="45"/></operator><name pos:line="69" pos:column="42">instance_prefix<pos:position pos:line="69" pos:column="57"/></name></name></expr></argument>,
               <argument><expr><sizeof pos:line="70" pos:column="16">sizeof<argument_list pos:line="70" pos:column="22">(<argument><expr><name><name pos:line="70" pos:column="23">vl<pos:position pos:line="70" pos:column="25"/></name><operator pos:line="70" pos:column="25">-&gt;<pos:position pos:line="70" pos:column="30"/></operator><name pos:line="70" pos:column="27">type_instance<pos:position pos:line="70" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="43"/></expr_stmt></block></else></if>
  }<pos:position pos:line="71" pos:column="4"/></block></then> <else pos:line="71" pos:column="5">else <block pos:line="71" pos:column="10">{
    <comment type="block" pos:line="72" pos:column="5">/* If instance_prefix and instance_node are NULL, then
     * don't set the type_instance */</comment>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">instance_node<pos:position pos:line="74" pos:column="22"/></name> <operator pos:line="74" pos:column="23">!=<pos:position pos:line="74" pos:column="25"/></operator> <name pos:line="74" pos:column="26">NULL<pos:position pos:line="74" pos:column="30"/></name></expr>)<pos:position pos:line="74" pos:column="31"/></condition><then pos:line="74" pos:column="31"> <block pos:line="74" pos:column="32">{
      <decl_stmt><decl><type><name pos:line="75" pos:column="7">char<pos:position pos:line="75" pos:column="11"/></name> <modifier pos:line="75" pos:column="12">*<pos:position pos:line="75" pos:column="13"/></modifier></type><name pos:line="75" pos:column="13">node_value<pos:position pos:line="75" pos:column="23"/></name> <init pos:line="75" pos:column="24">= <expr><operator pos:line="75" pos:column="26">(<pos:position pos:line="75" pos:column="27"/></operator><name pos:line="75" pos:column="27">char<pos:position pos:line="75" pos:column="31"/></name> <operator pos:line="75" pos:column="32">*<pos:position pos:line="75" pos:column="33"/></operator><operator pos:line="75" pos:column="33">)<pos:position pos:line="75" pos:column="34"/></operator><call><name pos:line="75" pos:column="34">xmlNodeGetContent<pos:position pos:line="75" pos:column="51"/></name><argument_list pos:line="75" pos:column="51">(<argument><expr><name><name pos:line="75" pos:column="52">instance_node<pos:position pos:line="75" pos:column="65"/></name><operator pos:line="75" pos:column="65">-&gt;<pos:position pos:line="75" pos:column="70"/></operator><name pos:line="75" pos:column="67">nodeTab<pos:position pos:line="75" pos:column="74"/></name><index pos:line="75" pos:column="74">[<expr><literal type="number" pos:line="75" pos:column="75">0<pos:position pos:line="75" pos:column="76"/></literal></expr>]<pos:position pos:line="75" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="75" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="75" pos:column="79"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="76" pos:column="7">sstrncpy<pos:position pos:line="76" pos:column="15"/></name><argument_list pos:line="76" pos:column="15">(<argument><expr><name><name pos:line="76" pos:column="16">vl<pos:position pos:line="76" pos:column="18"/></name><operator pos:line="76" pos:column="18">-&gt;<pos:position pos:line="76" pos:column="23"/></operator><name pos:line="76" pos:column="20">type_instance<pos:position pos:line="76" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="35">node_value<pos:position pos:line="76" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="76" pos:column="47">sizeof<argument_list pos:line="76" pos:column="53">(<argument><expr><name><name pos:line="76" pos:column="54">vl<pos:position pos:line="76" pos:column="56"/></name><operator pos:line="76" pos:column="56">-&gt;<pos:position pos:line="76" pos:column="61"/></operator><name pos:line="76" pos:column="58">type_instance<pos:position pos:line="76" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="76" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="74"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">sfree<pos:position pos:line="77" pos:column="12"/></name><argument_list pos:line="77" pos:column="12">(<argument><expr><name pos:line="77" pos:column="13">node_value<pos:position pos:line="77" pos:column="23"/></name></expr></argument>)<pos:position pos:line="77" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>
  }<pos:position pos:line="79" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="81" pos:column="3">/* Free `instance_node_obj' this late, because `instance_node' points to
   * somewhere inside this structure. */</comment>
  <expr_stmt><expr><call><name pos:line="83" pos:column="3">xmlXPathFreeObject<pos:position pos:line="83" pos:column="21"/></name><argument_list pos:line="83" pos:column="21">(<argument><expr><name pos:line="83" pos:column="22">instance_node_obj<pos:position pos:line="83" pos:column="39"/></name></expr></argument>)<pos:position pos:line="83" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="41"/></expr_stmt>

  <return pos:line="85" pos:column="3">return <expr><operator pos:line="85" pos:column="10">(<pos:position pos:line="85" pos:column="11"/></operator><literal type="number" pos:line="85" pos:column="11">0<pos:position pos:line="85" pos:column="12"/></literal><operator pos:line="85" pos:column="12">)<pos:position pos:line="85" pos:column="13"/></operator></expr>;<pos:position pos:line="85" pos:column="14"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_236_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dpdk_config<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">oconfig_item_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">ci<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list> <block pos:line="1" pos:column="44">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">port_counter<pos:position pos:line="2" pos:column="19"/></name> <init pos:line="2" pos:column="20">= <expr><literal type="number" pos:line="2" pos:column="22">0<pos:position pos:line="2" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="24"/></decl_stmt>
  <comment type="block" pos:line="3" pos:column="3">/* Allocate g_configuration and
   * initialize a POSIX SHared Memory (SHM) object.
   */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">err<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><call><name pos:line="6" pos:column="13">dpdk_shm_init<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><sizeof pos:line="6" pos:column="27">sizeof<argument_list pos:line="6" pos:column="33">(<argument><expr><name pos:line="6" pos:column="34">dpdk_config_t<pos:position pos:line="6" pos:column="47"/></name></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">err<pos:position pos:line="7" pos:column="10"/></name></expr>)<pos:position pos:line="7" pos:column="11"/></condition><then pos:line="7" pos:column="11"> <block pos:line="7" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">errbuf<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><name pos:line="8" pos:column="17">ERR_BUF_SIZE<pos:position pos:line="8" pos:column="29"/></name></expr>]<pos:position pos:line="8" pos:column="30"/></index></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ERROR<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="string" pos:line="9" pos:column="11">"dpdkstat: error in shm_init, %s"<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="10" pos:column="11">sstrerror<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">errno<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="28">errbuf<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="36">sizeof<argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">errbuf<pos:position pos:line="10" pos:column="49"/></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">1<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="14" pos:column="3">/* Set defaults for config, overwritten by loop if config item exists */</comment>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">dpdk_config_init_default<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">()<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>

  <for pos:line="17" pos:column="3">for <control pos:line="17" pos:column="7">(<init><decl><type><name pos:line="17" pos:column="8">int<pos:position pos:line="17" pos:column="11"/></name></type> <name pos:line="17" pos:column="12">i<pos:position pos:line="17" pos:column="13"/></name> <init pos:line="17" pos:column="14">= <expr><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="18"/></init> <condition><expr><name pos:line="17" pos:column="19">i<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">&lt;<pos:position pos:line="17" pos:column="25"/></operator> <name><name pos:line="17" pos:column="23">ci<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">children_num<pos:position pos:line="17" pos:column="39"/></name></name></expr>;<pos:position pos:line="17" pos:column="40"/></condition> <incr><expr><name pos:line="17" pos:column="41">i<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">++<pos:position pos:line="17" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="45"/></control> <block pos:line="17" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">oconfig_item_t<pos:position pos:line="18" pos:column="19"/></name> <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier></type><name pos:line="18" pos:column="21">child<pos:position pos:line="18" pos:column="26"/></name> <init pos:line="18" pos:column="27">= <expr><name><name pos:line="18" pos:column="29">ci<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">children<pos:position pos:line="18" pos:column="41"/></name></name> <operator pos:line="18" pos:column="42">+<pos:position pos:line="18" pos:column="43"/></operator> <name pos:line="18" pos:column="44">i<pos:position pos:line="18" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="46"/></decl_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name pos:line="20" pos:column="9">strcasecmp<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><literal type="string" pos:line="20" pos:column="20">"Coremask"<pos:position pos:line="20" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="32">child<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">key<pos:position pos:line="20" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call> <operator pos:line="20" pos:column="44">==<pos:position pos:line="20" pos:column="46"/></operator> <literal type="number" pos:line="20" pos:column="47">0<pos:position pos:line="20" pos:column="48"/></literal></expr>)<pos:position pos:line="20" pos:column="49"/></condition><then pos:line="20" pos:column="49"> <block pos:line="20" pos:column="50">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">cf_util_get_string_buffer<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">child<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="40">g_configuration<pos:position pos:line="21" pos:column="55"/></name><operator pos:line="21" pos:column="55">-&gt;<pos:position pos:line="21" pos:column="60"/></operator><name pos:line="21" pos:column="57">coremask<pos:position pos:line="21" pos:column="65"/></name></name></expr></argument>,
                                <argument><expr><sizeof pos:line="22" pos:column="33">sizeof<argument_list pos:line="22" pos:column="39">(<argument><expr><name><name pos:line="22" pos:column="40">g_configuration<pos:position pos:line="22" pos:column="55"/></name><operator pos:line="22" pos:column="55">-&gt;<pos:position pos:line="22" pos:column="60"/></operator><name pos:line="22" pos:column="57">coremask<pos:position pos:line="22" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">DEBUG<pos:position pos:line="23" pos:column="12"/></name><argument_list pos:line="23" pos:column="12">(<argument><expr><literal type="string" pos:line="23" pos:column="13">"dpdkstat:COREMASK %s "<pos:position pos:line="23" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="38">g_configuration<pos:position pos:line="23" pos:column="53"/></name><operator pos:line="23" pos:column="53">-&gt;<pos:position pos:line="23" pos:column="58"/></operator><name pos:line="23" pos:column="55">coremask<pos:position pos:line="23" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then> <elseif pos:line="24" pos:column="7">else <if pos:line="24" pos:column="12">if <condition pos:line="24" pos:column="15">(<expr><call><name pos:line="24" pos:column="16">strcasecmp<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><literal type="string" pos:line="24" pos:column="27">"MemoryChannels"<pos:position pos:line="24" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="45">child<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">-&gt;<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="52">key<pos:position pos:line="24" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></call> <operator pos:line="24" pos:column="57">==<pos:position pos:line="24" pos:column="59"/></operator> <literal type="number" pos:line="24" pos:column="60">0<pos:position pos:line="24" pos:column="61"/></literal></expr>)<pos:position pos:line="24" pos:column="62"/></condition><then pos:line="24" pos:column="62"> <block pos:line="24" pos:column="63">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">cf_util_get_string_buffer<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">child<pos:position pos:line="25" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="40">g_configuration<pos:position pos:line="25" pos:column="55"/></name><operator pos:line="25" pos:column="55">-&gt;<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="57">memory_channels<pos:position pos:line="25" pos:column="72"/></name></name></expr></argument>,
                                <argument><expr><sizeof pos:line="26" pos:column="33">sizeof<argument_list pos:line="26" pos:column="39">(<argument><expr><name><name pos:line="26" pos:column="40">g_configuration<pos:position pos:line="26" pos:column="55"/></name><operator pos:line="26" pos:column="55">-&gt;<pos:position pos:line="26" pos:column="60"/></operator><name pos:line="26" pos:column="57">memory_channels<pos:position pos:line="26" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="75"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">DEBUG<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><literal type="string" pos:line="27" pos:column="13">"dpdkstat:Memory Channels %s "<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="45">g_configuration<pos:position pos:line="27" pos:column="60"/></name><operator pos:line="27" pos:column="60">-&gt;<pos:position pos:line="27" pos:column="65"/></operator><name pos:line="27" pos:column="62">memory_channels<pos:position pos:line="27" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if></elseif> <elseif pos:line="28" pos:column="7">else <if pos:line="28" pos:column="12">if <condition pos:line="28" pos:column="15">(<expr><call><name pos:line="28" pos:column="16">strcasecmp<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><literal type="string" pos:line="28" pos:column="27">"SocketMemory"<pos:position pos:line="28" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="43">child<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">-&gt;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="50">key<pos:position pos:line="28" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call> <operator pos:line="28" pos:column="55">==<pos:position pos:line="28" pos:column="57"/></operator> <literal type="number" pos:line="28" pos:column="58">0<pos:position pos:line="28" pos:column="59"/></literal></expr>)<pos:position pos:line="28" pos:column="60"/></condition><then pos:line="28" pos:column="60"> <block pos:line="28" pos:column="61">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">cf_util_get_string_buffer<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">child<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="40">g_configuration<pos:position pos:line="29" pos:column="55"/></name><operator pos:line="29" pos:column="55">-&gt;<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="57">socket_memory<pos:position pos:line="29" pos:column="70"/></name></name></expr></argument>,
                                <argument><expr><sizeof pos:line="30" pos:column="33">sizeof<argument_list pos:line="30" pos:column="39">(<argument><expr><name><name pos:line="30" pos:column="40">g_configuration<pos:position pos:line="30" pos:column="55"/></name><operator pos:line="30" pos:column="55">-&gt;<pos:position pos:line="30" pos:column="60"/></operator><name pos:line="30" pos:column="57">memory_channels<pos:position pos:line="30" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="75"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">DEBUG<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><literal type="string" pos:line="31" pos:column="13">"dpdkstat: socket mem %s "<pos:position pos:line="31" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="41">g_configuration<pos:position pos:line="31" pos:column="56"/></name><operator pos:line="31" pos:column="56">-&gt;<pos:position pos:line="31" pos:column="61"/></operator><name pos:line="31" pos:column="58">socket_memory<pos:position pos:line="31" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if></elseif> <elseif pos:line="32" pos:column="7">else <if pos:line="32" pos:column="12">if <condition pos:line="32" pos:column="15">(<expr><call><name pos:line="32" pos:column="16">strcasecmp<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><literal type="string" pos:line="32" pos:column="27">"ProcessType"<pos:position pos:line="32" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="42">child<pos:position pos:line="32" pos:column="47"/></name><operator pos:line="32" pos:column="47">-&gt;<pos:position pos:line="32" pos:column="52"/></operator><name pos:line="32" pos:column="49">key<pos:position pos:line="32" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call> <operator pos:line="32" pos:column="54">==<pos:position pos:line="32" pos:column="56"/></operator> <literal type="number" pos:line="32" pos:column="57">0<pos:position pos:line="32" pos:column="58"/></literal></expr>)<pos:position pos:line="32" pos:column="59"/></condition><then pos:line="32" pos:column="59"> <block pos:line="32" pos:column="60">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">cf_util_get_string_buffer<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">child<pos:position pos:line="33" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="40">g_configuration<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">-&gt;<pos:position pos:line="33" pos:column="60"/></operator><name pos:line="33" pos:column="57">process_type<pos:position pos:line="33" pos:column="69"/></name></name></expr></argument>,
                                <argument><expr><sizeof pos:line="34" pos:column="33">sizeof<argument_list pos:line="34" pos:column="39">(<argument><expr><name><name pos:line="34" pos:column="40">g_configuration<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">-&gt;<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="57">process_type<pos:position pos:line="34" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">DEBUG<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><literal type="string" pos:line="35" pos:column="13">"dpdkstat: proc type %s "<pos:position pos:line="35" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="40">g_configuration<pos:position pos:line="35" pos:column="55"/></name><operator pos:line="35" pos:column="55">-&gt;<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="57">process_type<pos:position pos:line="35" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if></elseif> <elseif pos:line="36" pos:column="7">else <if pos:line="36" pos:column="12">if <condition pos:line="36" pos:column="15">(<expr><operator pos:line="36" pos:column="16">(<pos:position pos:line="36" pos:column="17"/></operator><call><name pos:line="36" pos:column="17">strcasecmp<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><literal type="string" pos:line="36" pos:column="28">"FilePrefix"<pos:position pos:line="36" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="42">child<pos:position pos:line="36" pos:column="47"/></name><operator pos:line="36" pos:column="47">-&gt;<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="49">key<pos:position pos:line="36" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call> <operator pos:line="36" pos:column="54">==<pos:position pos:line="36" pos:column="56"/></operator> <literal type="number" pos:line="36" pos:column="57">0<pos:position pos:line="36" pos:column="58"/></literal><operator pos:line="36" pos:column="58">)<pos:position pos:line="36" pos:column="59"/></operator> <operator pos:line="36" pos:column="60">&amp;&amp;<pos:position pos:line="36" pos:column="70"/></operator>
               <operator pos:line="37" pos:column="16">(<pos:position pos:line="37" pos:column="17"/></operator><name><name pos:line="37" pos:column="17">child<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">-&gt;<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="24">values<pos:position pos:line="37" pos:column="30"/></name><index pos:line="37" pos:column="30">[<expr><literal type="number" pos:line="37" pos:column="31">0<pos:position pos:line="37" pos:column="32"/></literal></expr>]<pos:position pos:line="37" pos:column="33"/></index></name><operator pos:line="37" pos:column="33">.<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="34">type<pos:position pos:line="37" pos:column="38"/></name> <operator pos:line="37" pos:column="39">==<pos:position pos:line="37" pos:column="41"/></operator> <name pos:line="37" pos:column="42">OCONFIG_TYPE_STRING<pos:position pos:line="37" pos:column="61"/></name><operator pos:line="37" pos:column="61">)<pos:position pos:line="37" pos:column="62"/></operator></expr>)<pos:position pos:line="37" pos:column="63"/></condition><then pos:line="37" pos:column="63"> <block pos:line="37" pos:column="64">{
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">ssnprintf<pos:position pos:line="38" pos:column="16"/></name><argument_list pos:line="38" pos:column="16">(<argument><expr><name><name pos:line="38" pos:column="17">g_configuration<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">-&gt;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="34">file_prefix<pos:position pos:line="38" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="47">DATA_MAX_NAME_LEN<pos:position pos:line="38" pos:column="64"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="39" pos:column="17">"/var/run/.%s_config"<pos:position pos:line="39" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="40">child<pos:position pos:line="39" pos:column="45"/></name><operator pos:line="39" pos:column="45">-&gt;<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="47">values<pos:position pos:line="39" pos:column="53"/></name><index pos:line="39" pos:column="53">[<expr><literal type="number" pos:line="39" pos:column="54">0<pos:position pos:line="39" pos:column="55"/></literal></expr>]<pos:position pos:line="39" pos:column="56"/></index></name><operator pos:line="39" pos:column="56">.<pos:position pos:line="39" pos:column="57"/></operator><name><name pos:line="39" pos:column="57">value<pos:position pos:line="39" pos:column="62"/></name><operator pos:line="39" pos:column="62">.<pos:position pos:line="39" pos:column="63"/></operator><name pos:line="39" pos:column="63">string<pos:position pos:line="39" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">DEBUG<pos:position pos:line="40" pos:column="12"/></name><argument_list pos:line="40" pos:column="12">(<argument><expr><literal type="string" pos:line="40" pos:column="13">"dpdkstat: file prefix %s "<pos:position pos:line="40" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="42">g_configuration<pos:position pos:line="40" pos:column="57"/></name><operator pos:line="40" pos:column="57">-&gt;<pos:position pos:line="40" pos:column="62"/></operator><name pos:line="40" pos:column="59">file_prefix<pos:position pos:line="40" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if></elseif> <elseif pos:line="41" pos:column="7">else <if pos:line="41" pos:column="12">if <condition pos:line="41" pos:column="15">(<expr><operator pos:line="41" pos:column="16">(<pos:position pos:line="41" pos:column="17"/></operator><call><name pos:line="41" pos:column="17">strcasecmp<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><literal type="string" pos:line="41" pos:column="28">"EnabledPortMask"<pos:position pos:line="41" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="47">child<pos:position pos:line="41" pos:column="52"/></name><operator pos:line="41" pos:column="52">-&gt;<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="54">key<pos:position pos:line="41" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call> <operator pos:line="41" pos:column="59">==<pos:position pos:line="41" pos:column="61"/></operator> <literal type="number" pos:line="41" pos:column="62">0<pos:position pos:line="41" pos:column="63"/></literal><operator pos:line="41" pos:column="63">)<pos:position pos:line="41" pos:column="64"/></operator> <operator pos:line="41" pos:column="65">&amp;&amp;<pos:position pos:line="41" pos:column="75"/></operator>
               <operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><name><name pos:line="42" pos:column="17">child<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">-&gt;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="24">values<pos:position pos:line="42" pos:column="30"/></name><index pos:line="42" pos:column="30">[<expr><literal type="number" pos:line="42" pos:column="31">0<pos:position pos:line="42" pos:column="32"/></literal></expr>]<pos:position pos:line="42" pos:column="33"/></index></name><operator pos:line="42" pos:column="33">.<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="34">type<pos:position pos:line="42" pos:column="38"/></name> <operator pos:line="42" pos:column="39">==<pos:position pos:line="42" pos:column="41"/></operator> <name pos:line="42" pos:column="42">OCONFIG_TYPE_NUMBER<pos:position pos:line="42" pos:column="61"/></name><operator pos:line="42" pos:column="61">)<pos:position pos:line="42" pos:column="62"/></operator></expr>)<pos:position pos:line="42" pos:column="63"/></condition><then pos:line="42" pos:column="63"> <block pos:line="42" pos:column="64">{
      <expr_stmt><expr><name><name pos:line="43" pos:column="7">g_configuration<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">-&gt;<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="24">enabled_port_mask<pos:position pos:line="43" pos:column="41"/></name></name> <operator pos:line="43" pos:column="42">=<pos:position pos:line="43" pos:column="43"/></operator>
          <operator pos:line="44" pos:column="11">(<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="12">uint32_t<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">)<pos:position pos:line="44" pos:column="21"/></operator><name><name pos:line="44" pos:column="21">child<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">-&gt;<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="28">values<pos:position pos:line="44" pos:column="34"/></name><index pos:line="44" pos:column="34">[<expr><literal type="number" pos:line="44" pos:column="35">0<pos:position pos:line="44" pos:column="36"/></literal></expr>]<pos:position pos:line="44" pos:column="37"/></index></name><operator pos:line="44" pos:column="37">.<pos:position pos:line="44" pos:column="38"/></operator><name><name pos:line="44" pos:column="38">value<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">.<pos:position pos:line="44" pos:column="44"/></operator><name pos:line="44" pos:column="44">number<pos:position pos:line="44" pos:column="50"/></name></name></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">DEBUG<pos:position pos:line="45" pos:column="12"/></name><argument_list pos:line="45" pos:column="12">(<argument><expr><literal type="string" pos:line="45" pos:column="13">"dpdkstat: Enabled Port Mask %u"<pos:position pos:line="45" pos:column="45"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="46" pos:column="13">g_configuration<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">-&gt;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="30">enabled_port_mask<pos:position pos:line="46" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if></elseif> <elseif pos:line="47" pos:column="7">else <if pos:line="47" pos:column="12">if <condition pos:line="47" pos:column="15">(<expr><call><name pos:line="47" pos:column="16">strcasecmp<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><literal type="string" pos:line="47" pos:column="27">"PortName"<pos:position pos:line="47" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="39">child<pos:position pos:line="47" pos:column="44"/></name><operator pos:line="47" pos:column="44">-&gt;<pos:position pos:line="47" pos:column="49"/></operator><name pos:line="47" pos:column="46">key<pos:position pos:line="47" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></call> <operator pos:line="47" pos:column="51">==<pos:position pos:line="47" pos:column="53"/></operator> <literal type="number" pos:line="47" pos:column="54">0<pos:position pos:line="47" pos:column="55"/></literal></expr>)<pos:position pos:line="47" pos:column="56"/></condition><then pos:line="47" pos:column="56"> <block pos:line="47" pos:column="57">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">cf_util_get_string_buffer<pos:position pos:line="48" pos:column="32"/></name><argument_list pos:line="48" pos:column="32">(
          <argument><expr><name pos:line="49" pos:column="11">child<pos:position pos:line="49" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="18">g_configuration<pos:position pos:line="49" pos:column="33"/></name><operator pos:line="49" pos:column="33">-&gt;<pos:position pos:line="49" pos:column="38"/></operator><name pos:line="49" pos:column="35">port_name<pos:position pos:line="49" pos:column="44"/></name><index pos:line="49" pos:column="44">[<expr><name pos:line="49" pos:column="45">port_counter<pos:position pos:line="49" pos:column="57"/></name></expr>]<pos:position pos:line="49" pos:column="58"/></index></name></expr></argument>,
          <argument><expr><sizeof pos:line="50" pos:column="11">sizeof<argument_list pos:line="50" pos:column="17">(<argument><expr><name><name pos:line="50" pos:column="18">g_configuration<pos:position pos:line="50" pos:column="33"/></name><operator pos:line="50" pos:column="33">-&gt;<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="35">port_name<pos:position pos:line="50" pos:column="44"/></name><index pos:line="50" pos:column="44">[<expr><name pos:line="50" pos:column="45">port_counter<pos:position pos:line="50" pos:column="57"/></name></expr>]<pos:position pos:line="50" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">DEBUG<pos:position pos:line="51" pos:column="12"/></name><argument_list pos:line="51" pos:column="12">(<argument><expr><literal type="string" pos:line="51" pos:column="13">"dpdkstat: Port %d Name: %s "<pos:position pos:line="51" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="44">port_counter<pos:position pos:line="51" pos:column="56"/></name></expr></argument>,
            <argument><expr><name><name pos:line="52" pos:column="13">g_configuration<pos:position pos:line="52" pos:column="28"/></name><operator pos:line="52" pos:column="28">-&gt;<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="30">port_name<pos:position pos:line="52" pos:column="39"/></name><index pos:line="52" pos:column="39">[<expr><name pos:line="52" pos:column="40">port_counter<pos:position pos:line="52" pos:column="52"/></name></expr>]<pos:position pos:line="52" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="52" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="53" pos:column="7">port_counter<pos:position pos:line="53" pos:column="19"/></name><operator pos:line="53" pos:column="19">++<pos:position pos:line="53" pos:column="21"/></operator></expr>;<pos:position pos:line="53" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if></elseif> <else pos:line="54" pos:column="7">else <block pos:line="54" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">WARNING<pos:position pos:line="55" pos:column="14"/></name><argument_list pos:line="55" pos:column="14">(<argument><expr><literal type="string" pos:line="55" pos:column="15">"dpdkstat: The config option \"%s\" is unknown."<pos:position pos:line="55" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="65">child<pos:position pos:line="55" pos:column="70"/></name><operator pos:line="55" pos:column="70">-&gt;<pos:position pos:line="55" pos:column="75"/></operator><name pos:line="55" pos:column="72">key<pos:position pos:line="55" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></else></if>
  }<pos:position pos:line="57" pos:column="4"/></block></for>                 <comment type="block" pos:line="57" pos:column="21">/* End for (int i = 0; i &lt; ci-&gt;children_num; i++)*/</comment>
  <expr_stmt><expr><name pos:line="58" pos:column="3">g_configured<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <literal type="number" pos:line="58" pos:column="18">1<pos:position pos:line="58" pos:column="19"/></literal></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt> <comment type="block" pos:line="58" pos:column="21">/* Bypass configuration in dpdk_shm_init(). */</comment>

  <return pos:line="60" pos:column="3">return <expr><literal type="number" pos:line="60" pos:column="10">0<pos:position pos:line="60" pos:column="11"/></literal></expr>;<pos:position pos:line="60" pos:column="12"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

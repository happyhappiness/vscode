<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_214_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name> <parameter_list pos:line="1" pos:column="10">(<parameter><decl><type><name pos:line="1" pos:column="11">int<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">argc<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier><modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">argv<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list> <block pos:line="1" pos:column="34">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">address<pos:position pos:line="2" pos:column="15"/></name><index pos:line="2" pos:column="15">[<expr><literal type="number" pos:line="2" pos:column="16">1024<pos:position pos:line="2" pos:column="20"/></literal></expr>]<pos:position pos:line="2" pos:column="21"/></index></name> <init pos:line="2" pos:column="22">= <expr><literal type="string" pos:line="2" pos:column="24">"unix:"<pos:position pos:line="2" pos:column="31"/></literal><name pos:line="2" pos:column="31">DEFAULT_SOCK<pos:position pos:line="2" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="44"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="4" pos:column="3">lcc_connection_t<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">c<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <while pos:line="8" pos:column="3">while <condition pos:line="8" pos:column="9">(<expr><literal type="number" pos:line="8" pos:column="10">42<pos:position pos:line="8" pos:column="12"/></literal></expr>)<pos:position pos:line="8" pos:column="13"/></condition> <block pos:line="8" pos:column="14">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">opt<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">opt<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <call><name pos:line="11" pos:column="11">getopt<pos:position pos:line="11" pos:column="17"/></name> <argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">argc<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="25">argv<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="31">"s:h"<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">opt<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">==<pos:position pos:line="13" pos:column="15"/></operator> <operator pos:line="13" pos:column="16">-<pos:position pos:line="13" pos:column="17"/></operator><literal type="number" pos:line="13" pos:column="17">1<pos:position pos:line="13" pos:column="18"/></literal></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19">
      <block type="pseudo"><break pos:line="14" pos:column="7">break;<pos:position pos:line="14" pos:column="13"/></break></block></then></if>

    <switch pos:line="16" pos:column="5">switch <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">opt<pos:position pos:line="16" pos:column="16"/></name></expr>)<pos:position pos:line="16" pos:column="17"/></condition> <block pos:line="16" pos:column="18">{
      <case pos:line="17" pos:column="7">case <expr><literal type="char" pos:line="17" pos:column="12">'s'<pos:position pos:line="17" pos:column="15"/></literal></expr>:<pos:position pos:line="17" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">snprintf<pos:position pos:line="18" pos:column="17"/></name> <argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">address<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="28">sizeof <argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">address<pos:position pos:line="18" pos:column="43"/></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="46">"unix:%s"<pos:position pos:line="18" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="57">optarg<pos:position pos:line="18" pos:column="63"/></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">address<pos:position pos:line="19" pos:column="16"/></name><index pos:line="19" pos:column="16">[<expr><sizeof pos:line="19" pos:column="17">sizeof <argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">address<pos:position pos:line="19" pos:column="32"/></name></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></sizeof> <operator pos:line="19" pos:column="34">-<pos:position pos:line="19" pos:column="35"/></operator> <literal type="number" pos:line="19" pos:column="36">1<pos:position pos:line="19" pos:column="37"/></literal></expr>]<pos:position pos:line="19" pos:column="38"/></index></name> <operator pos:line="19" pos:column="39">=<pos:position pos:line="19" pos:column="40"/></operator> <literal type="char" pos:line="19" pos:column="41">'\0'<pos:position pos:line="19" pos:column="45"/></literal></expr>;<pos:position pos:line="19" pos:column="46"/></expr_stmt>
        <break pos:line="20" pos:column="9">break;<pos:position pos:line="20" pos:column="15"/></break>
      <case pos:line="21" pos:column="7">case <expr><literal type="char" pos:line="21" pos:column="12">'h'<pos:position pos:line="21" pos:column="15"/></literal></expr>:<pos:position pos:line="21" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">exit_usage<pos:position pos:line="22" pos:column="19"/></name> <argument_list pos:line="22" pos:column="20">(<argument><expr><name><name pos:line="22" pos:column="21">argv<pos:position pos:line="22" pos:column="25"/></name><index pos:line="22" pos:column="25">[<expr><literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr>]<pos:position pos:line="22" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="30">0<pos:position pos:line="22" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
      <default pos:line="23" pos:column="7">default:<pos:position pos:line="23" pos:column="15"/></default>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">exit_usage<pos:position pos:line="24" pos:column="19"/></name> <argument_list pos:line="24" pos:column="20">(<argument><expr><name><name pos:line="24" pos:column="21">argv<pos:position pos:line="24" pos:column="25"/></name><index pos:line="24" pos:column="25">[<expr><literal type="number" pos:line="24" pos:column="26">0<pos:position pos:line="24" pos:column="27"/></literal></expr>]<pos:position pos:line="24" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="30">1<pos:position pos:line="24" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></switch>
  }<pos:position pos:line="26" pos:column="4"/></block></while>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">optind<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">&gt;=<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="17">argc<pos:position pos:line="28" pos:column="21"/></name></expr>)<pos:position pos:line="28" pos:column="22"/></condition><then pos:line="28" pos:column="22"> <block pos:line="28" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">fprintf<pos:position pos:line="29" pos:column="12"/></name> <argument_list pos:line="29" pos:column="13">(<argument><expr><name pos:line="29" pos:column="14">stderr<pos:position pos:line="29" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="22">"%s: missing command\n"<pos:position pos:line="29" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="47">argv<pos:position pos:line="29" pos:column="51"/></name><index pos:line="29" pos:column="51">[<expr><literal type="number" pos:line="29" pos:column="52">0<pos:position pos:line="29" pos:column="53"/></literal></expr>]<pos:position pos:line="29" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">exit_usage<pos:position pos:line="30" pos:column="15"/></name> <argument_list pos:line="30" pos:column="16">(<argument><expr><name><name pos:line="30" pos:column="17">argv<pos:position pos:line="30" pos:column="21"/></name><index pos:line="30" pos:column="21">[<expr><literal type="number" pos:line="30" pos:column="22">0<pos:position pos:line="30" pos:column="23"/></literal></expr>]<pos:position pos:line="30" pos:column="24"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="26">1<pos:position pos:line="30" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="33" pos:column="3">c<pos:position pos:line="33" pos:column="4"/></name> <operator pos:line="33" pos:column="5">=<pos:position pos:line="33" pos:column="6"/></operator> <name pos:line="33" pos:column="7">NULL<pos:position pos:line="33" pos:column="11"/></name></expr>;<pos:position pos:line="33" pos:column="12"/></expr_stmt>
  <expr_stmt><expr><name pos:line="34" pos:column="3">status<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <call><name pos:line="34" pos:column="12">lcc_connect<pos:position pos:line="34" pos:column="23"/></name> <argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">address<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="34">&amp;<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="35">c<pos:position pos:line="34" pos:column="36"/></name></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">status<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">!=<pos:position pos:line="35" pos:column="16"/></operator> <literal type="number" pos:line="35" pos:column="17">0<pos:position pos:line="35" pos:column="18"/></literal></expr>)<pos:position pos:line="35" pos:column="19"/></condition><then pos:line="35" pos:column="19"> <block pos:line="35" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">fprintf<pos:position pos:line="36" pos:column="12"/></name> <argument_list pos:line="36" pos:column="13">(<argument><expr><name pos:line="36" pos:column="14">stderr<pos:position pos:line="36" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="22">"ERROR: Failed to connect to daemon at %s: %s.\n"<pos:position pos:line="36" pos:column="71"/></literal></expr></argument>,
        <argument><expr><name pos:line="37" pos:column="9">address<pos:position pos:line="37" pos:column="16"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="18">strerror<pos:position pos:line="37" pos:column="26"/></name> <argument_list pos:line="37" pos:column="27">(<argument><expr><name pos:line="37" pos:column="28">errno<pos:position pos:line="37" pos:column="33"/></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><operator pos:line="38" pos:column="12">(<pos:position pos:line="38" pos:column="13"/></operator><literal type="number" pos:line="38" pos:column="13">1<pos:position pos:line="38" pos:column="14"/></literal><operator pos:line="38" pos:column="14">)<pos:position pos:line="38" pos:column="15"/></operator></expr>;<pos:position pos:line="38" pos:column="16"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><call><name pos:line="41" pos:column="7">strcasecmp<pos:position pos:line="41" pos:column="17"/></name> <argument_list pos:line="41" pos:column="18">(<argument><expr><name><name pos:line="41" pos:column="19">argv<pos:position pos:line="41" pos:column="23"/></name><index pos:line="41" pos:column="23">[<expr><name pos:line="41" pos:column="24">optind<pos:position pos:line="41" pos:column="30"/></name></expr>]<pos:position pos:line="41" pos:column="31"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="33">"getval"<pos:position pos:line="41" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call> <operator pos:line="41" pos:column="43">==<pos:position pos:line="41" pos:column="45"/></operator> <literal type="number" pos:line="41" pos:column="46">0<pos:position pos:line="41" pos:column="47"/></literal></expr>)<pos:position pos:line="41" pos:column="48"/></condition><then pos:line="41" pos:column="48">
    <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="5">status<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">getval<pos:position pos:line="42" pos:column="20"/></name> <argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">c<pos:position pos:line="42" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="25">argc<pos:position pos:line="42" pos:column="29"/></name> <operator pos:line="42" pos:column="30">-<pos:position pos:line="42" pos:column="31"/></operator> <name pos:line="42" pos:column="32">optind<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="40">argv<pos:position pos:line="42" pos:column="44"/></name> <operator pos:line="42" pos:column="45">+<pos:position pos:line="42" pos:column="46"/></operator> <name pos:line="42" pos:column="47">optind<pos:position pos:line="42" pos:column="53"/></name></expr></argument>)<pos:position pos:line="42" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="55"/></expr_stmt></block></then>
  <elseif pos:line="43" pos:column="3">else <if pos:line="43" pos:column="8">if <condition pos:line="43" pos:column="11">(<expr><call><name pos:line="43" pos:column="12">strcasecmp<pos:position pos:line="43" pos:column="22"/></name> <argument_list pos:line="43" pos:column="23">(<argument><expr><name><name pos:line="43" pos:column="24">argv<pos:position pos:line="43" pos:column="28"/></name><index pos:line="43" pos:column="28">[<expr><name pos:line="43" pos:column="29">optind<pos:position pos:line="43" pos:column="35"/></name></expr>]<pos:position pos:line="43" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="38">"flush"<pos:position pos:line="43" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call> <operator pos:line="43" pos:column="47">==<pos:position pos:line="43" pos:column="49"/></operator> <literal type="number" pos:line="43" pos:column="50">0<pos:position pos:line="43" pos:column="51"/></literal></expr>)<pos:position pos:line="43" pos:column="52"/></condition><then pos:line="43" pos:column="52">
    <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="5">status<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <call><name pos:line="44" pos:column="14">flush<pos:position pos:line="44" pos:column="19"/></name> <argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">c<pos:position pos:line="44" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="24">argc<pos:position pos:line="44" pos:column="28"/></name> <operator pos:line="44" pos:column="29">-<pos:position pos:line="44" pos:column="30"/></operator> <name pos:line="44" pos:column="31">optind<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="39">argv<pos:position pos:line="44" pos:column="43"/></name> <operator pos:line="44" pos:column="44">+<pos:position pos:line="44" pos:column="45"/></operator> <name pos:line="44" pos:column="46">optind<pos:position pos:line="44" pos:column="52"/></name></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="54"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="45" pos:column="3">else <if pos:line="45" pos:column="8">if <condition pos:line="45" pos:column="11">(<expr><call><name pos:line="45" pos:column="12">strcasecmp<pos:position pos:line="45" pos:column="22"/></name> <argument_list pos:line="45" pos:column="23">(<argument><expr><name><name pos:line="45" pos:column="24">argv<pos:position pos:line="45" pos:column="28"/></name><index pos:line="45" pos:column="28">[<expr><name pos:line="45" pos:column="29">optind<pos:position pos:line="45" pos:column="35"/></name></expr>]<pos:position pos:line="45" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="38">"listval"<pos:position pos:line="45" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call> <operator pos:line="45" pos:column="49">==<pos:position pos:line="45" pos:column="51"/></operator> <literal type="number" pos:line="45" pos:column="52">0<pos:position pos:line="45" pos:column="53"/></literal></expr>)<pos:position pos:line="45" pos:column="54"/></condition><then pos:line="45" pos:column="54">
    <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="5">status<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">listval<pos:position pos:line="46" pos:column="21"/></name> <argument_list pos:line="46" pos:column="22">(<argument><expr><name pos:line="46" pos:column="23">c<pos:position pos:line="46" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="26">argc<pos:position pos:line="46" pos:column="30"/></name> <operator pos:line="46" pos:column="31">-<pos:position pos:line="46" pos:column="32"/></operator> <name pos:line="46" pos:column="33">optind<pos:position pos:line="46" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="41">argv<pos:position pos:line="46" pos:column="45"/></name> <operator pos:line="46" pos:column="46">+<pos:position pos:line="46" pos:column="47"/></operator> <name pos:line="46" pos:column="48">optind<pos:position pos:line="46" pos:column="54"/></name></expr></argument>)<pos:position pos:line="46" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="56"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="47" pos:column="3">else <if pos:line="47" pos:column="8">if <condition pos:line="47" pos:column="11">(<expr><call><name pos:line="47" pos:column="12">strcasecmp<pos:position pos:line="47" pos:column="22"/></name> <argument_list pos:line="47" pos:column="23">(<argument><expr><name><name pos:line="47" pos:column="24">argv<pos:position pos:line="47" pos:column="28"/></name><index pos:line="47" pos:column="28">[<expr><name pos:line="47" pos:column="29">optind<pos:position pos:line="47" pos:column="35"/></name></expr>]<pos:position pos:line="47" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="38">"putval"<pos:position pos:line="47" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="47"/></argument_list></call> <operator pos:line="47" pos:column="48">==<pos:position pos:line="47" pos:column="50"/></operator> <literal type="number" pos:line="47" pos:column="51">0<pos:position pos:line="47" pos:column="52"/></literal></expr>)<pos:position pos:line="47" pos:column="53"/></condition><then pos:line="47" pos:column="53">
    <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="5">status<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <call><name pos:line="48" pos:column="14">putval<pos:position pos:line="48" pos:column="20"/></name> <argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">c<pos:position pos:line="48" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="25">argc<pos:position pos:line="48" pos:column="29"/></name> <operator pos:line="48" pos:column="30">-<pos:position pos:line="48" pos:column="31"/></operator> <name pos:line="48" pos:column="32">optind<pos:position pos:line="48" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="40">argv<pos:position pos:line="48" pos:column="44"/></name> <operator pos:line="48" pos:column="45">+<pos:position pos:line="48" pos:column="46"/></operator> <name pos:line="48" pos:column="47">optind<pos:position pos:line="48" pos:column="53"/></name></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="55"/></expr_stmt></block></then></if></elseif>
  <else pos:line="49" pos:column="3">else <block pos:line="49" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">fprintf<pos:position pos:line="50" pos:column="12"/></name> <argument_list pos:line="50" pos:column="13">(<argument><expr><name pos:line="50" pos:column="14">stderr<pos:position pos:line="50" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="22">"%s: invalid command: %s\n"<pos:position pos:line="50" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="51">argv<pos:position pos:line="50" pos:column="55"/></name><index pos:line="50" pos:column="55">[<expr><literal type="number" pos:line="50" pos:column="56">0<pos:position pos:line="50" pos:column="57"/></literal></expr>]<pos:position pos:line="50" pos:column="58"/></index></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="60">argv<pos:position pos:line="50" pos:column="64"/></name><index pos:line="50" pos:column="64">[<expr><name pos:line="50" pos:column="65">optind<pos:position pos:line="50" pos:column="71"/></name></expr>]<pos:position pos:line="50" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="74"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><literal type="number" pos:line="51" pos:column="13">1<pos:position pos:line="51" pos:column="14"/></literal><operator pos:line="51" pos:column="14">)<pos:position pos:line="51" pos:column="15"/></operator></expr>;<pos:position pos:line="51" pos:column="16"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="54" pos:column="3">LCC_DESTROY<pos:position pos:line="54" pos:column="14"/></name> <argument_list pos:line="54" pos:column="15">(<argument><expr><name pos:line="54" pos:column="16">c<pos:position pos:line="54" pos:column="17"/></name></expr></argument>)<pos:position pos:line="54" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="19"/></expr_stmt>

  <if pos:line="56" pos:column="3">if <condition pos:line="56" pos:column="6">(<expr><name pos:line="56" pos:column="7">status<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">!=<pos:position pos:line="56" pos:column="16"/></operator> <literal type="number" pos:line="56" pos:column="17">0<pos:position pos:line="56" pos:column="18"/></literal></expr>)<pos:position pos:line="56" pos:column="19"/></condition><then pos:line="56" pos:column="19">
    <block type="pseudo"><return pos:line="57" pos:column="5">return <expr><operator pos:line="57" pos:column="12">(<pos:position pos:line="57" pos:column="13"/></operator><name pos:line="57" pos:column="13">status<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">)<pos:position pos:line="57" pos:column="20"/></operator></expr>;<pos:position pos:line="57" pos:column="21"/></return></block></then></if>
  <return pos:line="58" pos:column="3">return <expr><operator pos:line="58" pos:column="10">(<pos:position pos:line="58" pos:column="11"/></operator><literal type="number" pos:line="58" pos:column="11">0<pos:position pos:line="58" pos:column="12"/></literal><operator pos:line="58" pos:column="12">)<pos:position pos:line="58" pos:column="13"/></operator></expr>;<pos:position pos:line="58" pos:column="14"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_65_collectd-4.4.2.cpp" pos:tabs="8"><function_decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">load_deplibs<pos:position pos:line="2" pos:column="13"/></name> <parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">handle<pos:position pos:line="2" pos:column="21"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="23">deplibs<pos:position pos:line="2" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
     <decl_stmt><decl><type><name pos:line="3" pos:column="6">lt_dlhandle<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">handle<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">char<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">deplibs<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
<block pos:line="5" pos:column="1">{
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">LTDL_DLOPEN_DEPLIBS<pos:position pos:line="6" pos:column="24"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name>	<modifier pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></modifier></type><name pos:line="7" pos:column="10">p<pos:position pos:line="7" pos:column="11"/></name></decl>, <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="14">save_search_path<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><literal type="number" pos:line="7" pos:column="33">0<pos:position pos:line="7" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type>   <name pos:line="8" pos:column="9">depcount<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type>	<name pos:line="9" pos:column="9">i<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name>	<modifier pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></modifier><modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">names<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type>	<name pos:line="12" pos:column="9">errors<pos:position pos:line="12" pos:column="15"/></name> <init pos:line="12" pos:column="16">= <expr><literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="14" pos:column="3">handle<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">depcount<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <literal type="number" pos:line="14" pos:column="22">0<pos:position pos:line="14" pos:column="23"/></literal></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>

<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><name pos:line="16" pos:column="5">LTDL_DLOPEN_DEPLIBS<pos:position pos:line="16" pos:column="24"/></name></expr></cpp:if>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">!<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">deplibs<pos:position pos:line="17" pos:column="15"/></name></expr>)<pos:position pos:line="17" pos:column="16"/></condition><then pos:line="17" pos:column="16">
    <block pos:line="18" pos:column="5">{
      <return pos:line="19" pos:column="7">return <expr><name pos:line="19" pos:column="14">errors<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
  <expr_stmt><expr><operator pos:line="21" pos:column="3">++<pos:position pos:line="21" pos:column="5"/></operator><name pos:line="21" pos:column="5">errors<pos:position pos:line="21" pos:column="11"/></name></expr>;<pos:position pos:line="21" pos:column="12"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">LT_DLMUTEX_LOCK<pos:position pos:line="23" pos:column="18"/></name> <argument_list pos:line="23" pos:column="19">()<pos:position pos:line="23" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">user_search_path<pos:position pos:line="24" pos:column="23"/></name></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24">
    <block pos:line="25" pos:column="5">{
      <expr_stmt><expr><name pos:line="26" pos:column="7">save_search_path<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <call><name pos:line="26" pos:column="26">lt_estrdup<pos:position pos:line="26" pos:column="36"/></name> <argument_list pos:line="26" pos:column="37">(<argument><expr><name pos:line="26" pos:column="38">user_search_path<pos:position pos:line="26" pos:column="54"/></name></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="56"/></expr_stmt>
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><operator pos:line="27" pos:column="11">!<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">save_search_path<pos:position pos:line="27" pos:column="28"/></name></expr>)<pos:position pos:line="27" pos:column="29"/></condition><then pos:line="27" pos:column="29">
	<block type="pseudo"><goto pos:line="28" pos:column="9">goto <name pos:line="28" pos:column="14">cleanup<pos:position pos:line="28" pos:column="21"/></name>;<pos:position pos:line="28" pos:column="22"/></goto></block></then></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* extract search paths and count deplibs */</comment>
  <expr_stmt><expr><name pos:line="32" pos:column="3">p<pos:position pos:line="32" pos:column="4"/></name> <operator pos:line="32" pos:column="5">=<pos:position pos:line="32" pos:column="6"/></operator> <name pos:line="32" pos:column="7">deplibs<pos:position pos:line="32" pos:column="14"/></name></expr>;<pos:position pos:line="32" pos:column="15"/></expr_stmt>
  <while pos:line="33" pos:column="3">while <condition pos:line="33" pos:column="9">(<expr><operator pos:line="33" pos:column="10">*<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="11">p<pos:position pos:line="33" pos:column="12"/></name></expr>)<pos:position pos:line="33" pos:column="13"/></condition>
    <block pos:line="34" pos:column="5">{
      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><operator pos:line="35" pos:column="11">!<pos:position pos:line="35" pos:column="12"/></operator><call><name pos:line="35" pos:column="12">isspace<pos:position pos:line="35" pos:column="19"/></name> <argument_list pos:line="35" pos:column="20">(<argument><expr><operator pos:line="35" pos:column="21">(<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">int<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">)<pos:position pos:line="35" pos:column="26"/></operator> <operator pos:line="35" pos:column="27">*<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="28">p<pos:position pos:line="35" pos:column="29"/></name></expr></argument>)<pos:position pos:line="35" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="31"/></condition><then pos:line="35" pos:column="31">
	<block pos:line="36" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="37" pos:column="11">char<pos:position pos:line="37" pos:column="15"/></name> <modifier pos:line="37" pos:column="16">*<pos:position pos:line="37" pos:column="17"/></modifier></type><name pos:line="37" pos:column="17">end<pos:position pos:line="37" pos:column="20"/></name> <init pos:line="37" pos:column="21">= <expr><name pos:line="37" pos:column="23">p<pos:position pos:line="37" pos:column="24"/></name><operator pos:line="37" pos:column="24">+<pos:position pos:line="37" pos:column="25"/></operator><literal type="number" pos:line="37" pos:column="25">1<pos:position pos:line="37" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="37" pos:column="27"/></decl_stmt>
	  <while pos:line="38" pos:column="11">while <condition pos:line="38" pos:column="17">(<expr><operator pos:line="38" pos:column="18">*<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">end<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">&amp;&amp;<pos:position pos:line="38" pos:column="33"/></operator> <operator pos:line="38" pos:column="26">!<pos:position pos:line="38" pos:column="27"/></operator><call><name pos:line="38" pos:column="27">isspace<pos:position pos:line="38" pos:column="34"/></name><argument_list pos:line="38" pos:column="34">(<argument><expr><operator pos:line="38" pos:column="35">(<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="36">int<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">)<pos:position pos:line="38" pos:column="40"/></operator> <operator pos:line="38" pos:column="41">*<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="42">end<pos:position pos:line="38" pos:column="45"/></name></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="47"/></condition>
	    <block pos:line="39" pos:column="13">{
	      <expr_stmt><expr><operator pos:line="40" pos:column="15">++<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">end<pos:position pos:line="40" pos:column="20"/></name></expr>;<pos:position pos:line="40" pos:column="21"/></expr_stmt>
	    }<pos:position pos:line="41" pos:column="14"/></block></while>

	  <if pos:line="43" pos:column="11">if <condition pos:line="43" pos:column="14">(<expr><call><name pos:line="43" pos:column="15">strncmp<pos:position pos:line="43" pos:column="22"/></name><argument_list pos:line="43" pos:column="22">(<argument><expr><name pos:line="43" pos:column="23">p<pos:position pos:line="43" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="26">"-L"<pos:position pos:line="43" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="32">2<pos:position pos:line="43" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call> <operator pos:line="43" pos:column="35">==<pos:position pos:line="43" pos:column="37"/></operator> <literal type="number" pos:line="43" pos:column="38">0<pos:position pos:line="43" pos:column="39"/></literal> <operator pos:line="43" pos:column="40">||<pos:position pos:line="43" pos:column="42"/></operator> <call><name pos:line="43" pos:column="43">strncmp<pos:position pos:line="43" pos:column="50"/></name><argument_list pos:line="43" pos:column="50">(<argument><expr><name pos:line="43" pos:column="51">p<pos:position pos:line="43" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="54">"-R"<pos:position pos:line="43" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="60">2<pos:position pos:line="43" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call> <operator pos:line="43" pos:column="63">==<pos:position pos:line="43" pos:column="65"/></operator> <literal type="number" pos:line="43" pos:column="66">0<pos:position pos:line="43" pos:column="67"/></literal></expr>)<pos:position pos:line="43" pos:column="68"/></condition><then pos:line="43" pos:column="68">
	    <block pos:line="44" pos:column="13">{
	      <decl_stmt><decl><type><name pos:line="45" pos:column="15">char<pos:position pos:line="45" pos:column="19"/></name></type> <name pos:line="45" pos:column="20">save<pos:position pos:line="45" pos:column="24"/></name> <init pos:line="45" pos:column="25">= <expr><operator pos:line="45" pos:column="27">*<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="28">end<pos:position pos:line="45" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="45" pos:column="32"/></decl_stmt>
	      <expr_stmt><expr><operator pos:line="46" pos:column="15">*<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">end<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <literal type="number" pos:line="46" pos:column="22">0<pos:position pos:line="46" pos:column="23"/></literal></expr>;<pos:position pos:line="46" pos:column="24"/></expr_stmt> <comment type="block" pos:line="46" pos:column="25">/* set a temporary string terminator */</comment>
	      <if pos:line="47" pos:column="15">if <condition pos:line="47" pos:column="18">(<expr><call><name pos:line="47" pos:column="19">lt_dladdsearchdir<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">p<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">+<pos:position pos:line="47" pos:column="39"/></operator><literal type="number" pos:line="47" pos:column="39">2<pos:position pos:line="47" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="42"/></condition><then pos:line="47" pos:column="42">
		<block pos:line="48" pos:column="17">{
		  <goto pos:line="49" pos:column="19">goto <name pos:line="49" pos:column="24">cleanup<pos:position pos:line="49" pos:column="31"/></name>;<pos:position pos:line="49" pos:column="32"/></goto>
		}<pos:position pos:line="50" pos:column="18"/></block></then></if>
	      <expr_stmt><expr><operator pos:line="51" pos:column="15">*<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="16">end<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <name pos:line="51" pos:column="22">save<pos:position pos:line="51" pos:column="26"/></name></expr>;<pos:position pos:line="51" pos:column="27"/></expr_stmt>
	    }<pos:position pos:line="52" pos:column="14"/></block></then>
	  <else pos:line="53" pos:column="11">else
	    <block pos:line="54" pos:column="13">{
	      <expr_stmt><expr><operator pos:line="55" pos:column="15">++<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="17">depcount<pos:position pos:line="55" pos:column="25"/></name></expr>;<pos:position pos:line="55" pos:column="26"/></expr_stmt>
	    }<pos:position pos:line="56" pos:column="14"/></block></else></if>

	  <expr_stmt><expr><name pos:line="58" pos:column="11">p<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <name pos:line="58" pos:column="15">end<pos:position pos:line="58" pos:column="18"/></name></expr>;<pos:position pos:line="58" pos:column="19"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></then>
      <else pos:line="60" pos:column="7">else
	<block pos:line="61" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="62" pos:column="11">++<pos:position pos:line="62" pos:column="13"/></operator><name pos:line="62" pos:column="13">p<pos:position pos:line="62" pos:column="14"/></name></expr>;<pos:position pos:line="62" pos:column="15"/></expr_stmt>
	}<pos:position pos:line="63" pos:column="10"/></block></else></if>
    }<pos:position pos:line="64" pos:column="6"/></block></while>

  <if pos:line="66" pos:column="3">if <condition pos:line="66" pos:column="6">(<expr><operator pos:line="66" pos:column="7">!<pos:position pos:line="66" pos:column="8"/></operator><name pos:line="66" pos:column="8">depcount<pos:position pos:line="66" pos:column="16"/></name></expr>)<pos:position pos:line="66" pos:column="17"/></condition><then pos:line="66" pos:column="17">
    <block pos:line="67" pos:column="5">{
      <expr_stmt><expr><name pos:line="68" pos:column="7">errors<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">=<pos:position pos:line="68" pos:column="15"/></operator> <literal type="number" pos:line="68" pos:column="16">0<pos:position pos:line="68" pos:column="17"/></literal></expr>;<pos:position pos:line="68" pos:column="18"/></expr_stmt>
      <goto pos:line="69" pos:column="7">goto <name pos:line="69" pos:column="12">cleanup<pos:position pos:line="69" pos:column="19"/></name>;<pos:position pos:line="69" pos:column="20"/></goto>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name pos:line="72" pos:column="3">names<pos:position pos:line="72" pos:column="8"/></name> <operator pos:line="72" pos:column="9">=<pos:position pos:line="72" pos:column="10"/></operator> <call><name pos:line="72" pos:column="11">LT_EMALLOC<pos:position pos:line="72" pos:column="21"/></name> <argument_list pos:line="72" pos:column="22">(<argument><expr><name pos:line="72" pos:column="23">char<pos:position pos:line="72" pos:column="27"/></name> <operator pos:line="72" pos:column="28">*<pos:position pos:line="72" pos:column="29"/></operator></expr></argument>, <argument><expr><name pos:line="72" pos:column="31">depcount<pos:position pos:line="72" pos:column="39"/></name> <operator pos:line="72" pos:column="40">*<pos:position pos:line="72" pos:column="41"/></operator> <sizeof pos:line="72" pos:column="42">sizeof <argument_list pos:line="72" pos:column="49">(<argument><expr><name pos:line="72" pos:column="50">char<pos:position pos:line="72" pos:column="54"/></name><operator pos:line="72" pos:column="54">*<pos:position pos:line="72" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="72" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="72" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="58"/></expr_stmt>
  <if pos:line="73" pos:column="3">if <condition pos:line="73" pos:column="6">(<expr><operator pos:line="73" pos:column="7">!<pos:position pos:line="73" pos:column="8"/></operator><name pos:line="73" pos:column="8">names<pos:position pos:line="73" pos:column="13"/></name></expr>)<pos:position pos:line="73" pos:column="14"/></condition><then pos:line="73" pos:column="14">
    <block type="pseudo"><goto pos:line="74" pos:column="5">goto <name pos:line="74" pos:column="10">cleanup<pos:position pos:line="74" pos:column="17"/></name>;<pos:position pos:line="74" pos:column="18"/></goto></block></then></if>

  <comment type="block" pos:line="76" pos:column="3">/* now only extract the actual deplibs */</comment>
  <expr_stmt><expr><name pos:line="77" pos:column="3">depcount<pos:position pos:line="77" pos:column="11"/></name> <operator pos:line="77" pos:column="12">=<pos:position pos:line="77" pos:column="13"/></operator> <literal type="number" pos:line="77" pos:column="14">0<pos:position pos:line="77" pos:column="15"/></literal></expr>;<pos:position pos:line="77" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="78" pos:column="3">p<pos:position pos:line="78" pos:column="4"/></name> <operator pos:line="78" pos:column="5">=<pos:position pos:line="78" pos:column="6"/></operator> <name pos:line="78" pos:column="7">deplibs<pos:position pos:line="78" pos:column="14"/></name></expr>;<pos:position pos:line="78" pos:column="15"/></expr_stmt>
  <while pos:line="79" pos:column="3">while <condition pos:line="79" pos:column="9">(<expr><operator pos:line="79" pos:column="10">*<pos:position pos:line="79" pos:column="11"/></operator><name pos:line="79" pos:column="11">p<pos:position pos:line="79" pos:column="12"/></name></expr>)<pos:position pos:line="79" pos:column="13"/></condition>
    <block pos:line="80" pos:column="5">{
      <if pos:line="81" pos:column="7">if <condition pos:line="81" pos:column="10">(<expr><call><name pos:line="81" pos:column="11">isspace<pos:position pos:line="81" pos:column="18"/></name> <argument_list pos:line="81" pos:column="19">(<argument><expr><operator pos:line="81" pos:column="20">(<pos:position pos:line="81" pos:column="21"/></operator><name pos:line="81" pos:column="21">int<pos:position pos:line="81" pos:column="24"/></name><operator pos:line="81" pos:column="24">)<pos:position pos:line="81" pos:column="25"/></operator> <operator pos:line="81" pos:column="26">*<pos:position pos:line="81" pos:column="27"/></operator><name pos:line="81" pos:column="27">p<pos:position pos:line="81" pos:column="28"/></name></expr></argument>)<pos:position pos:line="81" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="30"/></condition><then pos:line="81" pos:column="30">
	<block pos:line="82" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="83" pos:column="11">++<pos:position pos:line="83" pos:column="13"/></operator><name pos:line="83" pos:column="13">p<pos:position pos:line="83" pos:column="14"/></name></expr>;<pos:position pos:line="83" pos:column="15"/></expr_stmt>
	}<pos:position pos:line="84" pos:column="10"/></block></then>
      <else pos:line="85" pos:column="7">else
	<block pos:line="86" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="87" pos:column="11">char<pos:position pos:line="87" pos:column="15"/></name> <modifier pos:line="87" pos:column="16">*<pos:position pos:line="87" pos:column="17"/></modifier></type><name pos:line="87" pos:column="17">end<pos:position pos:line="87" pos:column="20"/></name> <init pos:line="87" pos:column="21">= <expr><name pos:line="87" pos:column="23">p<pos:position pos:line="87" pos:column="24"/></name><operator pos:line="87" pos:column="24">+<pos:position pos:line="87" pos:column="25"/></operator><literal type="number" pos:line="87" pos:column="25">1<pos:position pos:line="87" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="87" pos:column="27"/></decl_stmt>
	  <while pos:line="88" pos:column="11">while <condition pos:line="88" pos:column="17">(<expr><operator pos:line="88" pos:column="18">*<pos:position pos:line="88" pos:column="19"/></operator><name pos:line="88" pos:column="19">end<pos:position pos:line="88" pos:column="22"/></name> <operator pos:line="88" pos:column="23">&amp;&amp;<pos:position pos:line="88" pos:column="33"/></operator> <operator pos:line="88" pos:column="26">!<pos:position pos:line="88" pos:column="27"/></operator><call><name pos:line="88" pos:column="27">isspace<pos:position pos:line="88" pos:column="34"/></name> <argument_list pos:line="88" pos:column="35">(<argument><expr><operator pos:line="88" pos:column="36">(<pos:position pos:line="88" pos:column="37"/></operator><name pos:line="88" pos:column="37">int<pos:position pos:line="88" pos:column="40"/></name><operator pos:line="88" pos:column="40">)<pos:position pos:line="88" pos:column="41"/></operator> <operator pos:line="88" pos:column="42">*<pos:position pos:line="88" pos:column="43"/></operator><name pos:line="88" pos:column="43">end<pos:position pos:line="88" pos:column="46"/></name></expr></argument>)<pos:position pos:line="88" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="48"/></condition>
	    <block pos:line="89" pos:column="13">{
	      <expr_stmt><expr><operator pos:line="90" pos:column="15">++<pos:position pos:line="90" pos:column="17"/></operator><name pos:line="90" pos:column="17">end<pos:position pos:line="90" pos:column="20"/></name></expr>;<pos:position pos:line="90" pos:column="21"/></expr_stmt>
	    }<pos:position pos:line="91" pos:column="14"/></block></while>

	  <if pos:line="93" pos:column="11">if <condition pos:line="93" pos:column="14">(<expr><call><name pos:line="93" pos:column="15">strncmp<pos:position pos:line="93" pos:column="22"/></name><argument_list pos:line="93" pos:column="22">(<argument><expr><name pos:line="93" pos:column="23">p<pos:position pos:line="93" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="26">"-L"<pos:position pos:line="93" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="32">2<pos:position pos:line="93" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="34"/></argument_list></call> <operator pos:line="93" pos:column="35">!=<pos:position pos:line="93" pos:column="37"/></operator> <literal type="number" pos:line="93" pos:column="38">0<pos:position pos:line="93" pos:column="39"/></literal> <operator pos:line="93" pos:column="40">&amp;&amp;<pos:position pos:line="93" pos:column="50"/></operator> <call><name pos:line="93" pos:column="43">strncmp<pos:position pos:line="93" pos:column="50"/></name><argument_list pos:line="93" pos:column="50">(<argument><expr><name pos:line="93" pos:column="51">p<pos:position pos:line="93" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="54">"-R"<pos:position pos:line="93" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="60">2<pos:position pos:line="93" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="62"/></argument_list></call> <operator pos:line="93" pos:column="63">!=<pos:position pos:line="93" pos:column="65"/></operator> <literal type="number" pos:line="93" pos:column="66">0<pos:position pos:line="93" pos:column="67"/></literal></expr>)<pos:position pos:line="93" pos:column="68"/></condition><then pos:line="93" pos:column="68">
	    <block pos:line="94" pos:column="13">{
	      <decl_stmt><decl><type><name pos:line="95" pos:column="15">char<pos:position pos:line="95" pos:column="19"/></name> <modifier pos:line="95" pos:column="20">*<pos:position pos:line="95" pos:column="21"/></modifier></type><name pos:line="95" pos:column="21">name<pos:position pos:line="95" pos:column="25"/></name></decl>;<pos:position pos:line="95" pos:column="26"/></decl_stmt>
	      <decl_stmt><decl><type><name pos:line="96" pos:column="15">char<pos:position pos:line="96" pos:column="19"/></name></type> <name pos:line="96" pos:column="20">save<pos:position pos:line="96" pos:column="24"/></name> <init pos:line="96" pos:column="25">= <expr><operator pos:line="96" pos:column="27">*<pos:position pos:line="96" pos:column="28"/></operator><name pos:line="96" pos:column="28">end<pos:position pos:line="96" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="96" pos:column="32"/></decl_stmt>
	      <expr_stmt><expr><operator pos:line="97" pos:column="15">*<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="16">end<pos:position pos:line="97" pos:column="19"/></name> <operator pos:line="97" pos:column="20">=<pos:position pos:line="97" pos:column="21"/></operator> <literal type="number" pos:line="97" pos:column="22">0<pos:position pos:line="97" pos:column="23"/></literal></expr>;<pos:position pos:line="97" pos:column="24"/></expr_stmt> <comment type="block" pos:line="97" pos:column="25">/* set a temporary string terminator */</comment>
	      <if pos:line="98" pos:column="15">if <condition pos:line="98" pos:column="18">(<expr><call><name pos:line="98" pos:column="19">strncmp<pos:position pos:line="98" pos:column="26"/></name><argument_list pos:line="98" pos:column="26">(<argument><expr><name pos:line="98" pos:column="27">p<pos:position pos:line="98" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="30">"-l"<pos:position pos:line="98" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="98" pos:column="36">2<pos:position pos:line="98" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="38"/></argument_list></call> <operator pos:line="98" pos:column="39">==<pos:position pos:line="98" pos:column="41"/></operator> <literal type="number" pos:line="98" pos:column="42">0<pos:position pos:line="98" pos:column="43"/></literal></expr>)<pos:position pos:line="98" pos:column="44"/></condition><then pos:line="98" pos:column="44">
		<block pos:line="99" pos:column="17">{
		  <decl_stmt><decl><type><name pos:line="100" pos:column="19">size_t<pos:position pos:line="100" pos:column="25"/></name></type> <name pos:line="100" pos:column="26">name_len<pos:position pos:line="100" pos:column="34"/></name> <init pos:line="100" pos:column="35">= <expr><literal type="number" pos:line="100" pos:column="37">3<pos:position pos:line="100" pos:column="38"/></literal><operator pos:line="100" pos:column="38">+<pos:position pos:line="100" pos:column="39"/></operator> <comment type="block" pos:line="100" pos:column="40">/* "lib" */</comment> <call><name pos:line="100" pos:column="52">LT_STRLEN<pos:position pos:line="100" pos:column="61"/></name> <argument_list pos:line="100" pos:column="62">(<argument><expr><name pos:line="100" pos:column="63">p<pos:position pos:line="100" pos:column="64"/></name> <operator pos:line="100" pos:column="65">+<pos:position pos:line="100" pos:column="66"/></operator> <literal type="number" pos:line="100" pos:column="67">2<pos:position pos:line="100" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="100" pos:column="70"/></decl_stmt>
		  <expr_stmt><expr><name pos:line="101" pos:column="19">name<pos:position pos:line="101" pos:column="23"/></name> <operator pos:line="101" pos:column="24">=<pos:position pos:line="101" pos:column="25"/></operator> <call><name pos:line="101" pos:column="26">LT_EMALLOC<pos:position pos:line="101" pos:column="36"/></name> <argument_list pos:line="101" pos:column="37">(<argument><expr><name pos:line="101" pos:column="38">char<pos:position pos:line="101" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="44">1<pos:position pos:line="101" pos:column="45"/></literal><operator pos:line="101" pos:column="45">+<pos:position pos:line="101" pos:column="46"/></operator> <name pos:line="101" pos:column="47">name_len<pos:position pos:line="101" pos:column="55"/></name></expr></argument>)<pos:position pos:line="101" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="57"/></expr_stmt>
		  <if pos:line="102" pos:column="19">if <condition pos:line="102" pos:column="22">(<expr><name pos:line="102" pos:column="23">name<pos:position pos:line="102" pos:column="27"/></name></expr>)<pos:position pos:line="102" pos:column="28"/></condition><then pos:line="102" pos:column="28">
		    <block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="21">sprintf<pos:position pos:line="103" pos:column="28"/></name> <argument_list pos:line="103" pos:column="29">(<argument><expr><name pos:line="103" pos:column="30">name<pos:position pos:line="103" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="36">"lib%s"<pos:position pos:line="103" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="45">p<pos:position pos:line="103" pos:column="46"/></name><operator pos:line="103" pos:column="46">+<pos:position pos:line="103" pos:column="47"/></operator><literal type="number" pos:line="103" pos:column="47">2<pos:position pos:line="103" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="50"/></expr_stmt></block></then></if>
		}<pos:position pos:line="104" pos:column="18"/></block></then>
	      <else pos:line="105" pos:column="15">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="106" pos:column="17">name<pos:position pos:line="106" pos:column="21"/></name> <operator pos:line="106" pos:column="22">=<pos:position pos:line="106" pos:column="23"/></operator> <call><name pos:line="106" pos:column="24">lt_estrdup<pos:position pos:line="106" pos:column="34"/></name><argument_list pos:line="106" pos:column="34">(<argument><expr><name pos:line="106" pos:column="35">p<pos:position pos:line="106" pos:column="36"/></name></expr></argument>)<pos:position pos:line="106" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="38"/></expr_stmt></block></else></if>

	      <if pos:line="108" pos:column="15">if <condition pos:line="108" pos:column="18">(<expr><operator pos:line="108" pos:column="19">!<pos:position pos:line="108" pos:column="20"/></operator><name pos:line="108" pos:column="20">name<pos:position pos:line="108" pos:column="24"/></name></expr>)<pos:position pos:line="108" pos:column="25"/></condition><then pos:line="108" pos:column="25">
		<block type="pseudo"><goto pos:line="109" pos:column="17">goto <name pos:line="109" pos:column="22">cleanup_names<pos:position pos:line="109" pos:column="35"/></name>;<pos:position pos:line="109" pos:column="36"/></goto></block></then></if>

	      <expr_stmt><expr><name><name pos:line="111" pos:column="15">names<pos:position pos:line="111" pos:column="20"/></name><index pos:line="111" pos:column="20">[<expr><name pos:line="111" pos:column="21">depcount<pos:position pos:line="111" pos:column="29"/></name><operator pos:line="111" pos:column="29">++<pos:position pos:line="111" pos:column="31"/></operator></expr>]<pos:position pos:line="111" pos:column="32"/></index></name> <operator pos:line="111" pos:column="33">=<pos:position pos:line="111" pos:column="34"/></operator> <name pos:line="111" pos:column="35">name<pos:position pos:line="111" pos:column="39"/></name></expr>;<pos:position pos:line="111" pos:column="40"/></expr_stmt>
	      <expr_stmt><expr><operator pos:line="112" pos:column="15">*<pos:position pos:line="112" pos:column="16"/></operator><name pos:line="112" pos:column="16">end<pos:position pos:line="112" pos:column="19"/></name> <operator pos:line="112" pos:column="20">=<pos:position pos:line="112" pos:column="21"/></operator> <name pos:line="112" pos:column="22">save<pos:position pos:line="112" pos:column="26"/></name></expr>;<pos:position pos:line="112" pos:column="27"/></expr_stmt>
	    }<pos:position pos:line="113" pos:column="14"/></block></then></if>
	  <expr_stmt><expr><name pos:line="114" pos:column="11">p<pos:position pos:line="114" pos:column="12"/></name> <operator pos:line="114" pos:column="13">=<pos:position pos:line="114" pos:column="14"/></operator> <name pos:line="114" pos:column="15">end<pos:position pos:line="114" pos:column="18"/></name></expr>;<pos:position pos:line="114" pos:column="19"/></expr_stmt>
	}<pos:position pos:line="115" pos:column="10"/></block></else></if>
    }<pos:position pos:line="116" pos:column="6"/></block></while>

  <comment type="block" pos:line="118" pos:column="3">/* load the deplibs (in reverse order)
     At this stage, don't worry if the deplibs do not load correctly,
     they may already be statically linked into the loading application
     for instance.  There will be a more enlightening error message
     later on if the loaded module cannot resolve all of its symbols.  */</comment>
  <if pos:line="123" pos:column="3">if <condition pos:line="123" pos:column="6">(<expr><name pos:line="123" pos:column="7">depcount<pos:position pos:line="123" pos:column="15"/></name></expr>)<pos:position pos:line="123" pos:column="16"/></condition><then pos:line="123" pos:column="16">
    <block pos:line="124" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="125" pos:column="7">int<pos:position pos:line="125" pos:column="10"/></name></type>	<name pos:line="125" pos:column="17">j<pos:position pos:line="125" pos:column="18"/></name> <init pos:line="125" pos:column="19">= <expr><literal type="number" pos:line="125" pos:column="21">0<pos:position pos:line="125" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="125" pos:column="23"/></decl_stmt>

      <expr_stmt><expr><name><name pos:line="127" pos:column="7">handle<pos:position pos:line="127" pos:column="13"/></name><operator pos:line="127" pos:column="13">-&gt;<pos:position pos:line="127" pos:column="18"/></operator><name pos:line="127" pos:column="15">deplibs<pos:position pos:line="127" pos:column="22"/></name></name> <operator pos:line="127" pos:column="23">=<pos:position pos:line="127" pos:column="24"/></operator> <operator pos:line="127" pos:column="25">(<pos:position pos:line="127" pos:column="26"/></operator><name pos:line="127" pos:column="26">lt_dlhandle<pos:position pos:line="127" pos:column="37"/></name><operator pos:line="127" pos:column="37">*<pos:position pos:line="127" pos:column="38"/></operator><operator pos:line="127" pos:column="38">)<pos:position pos:line="127" pos:column="39"/></operator> <call><name pos:line="127" pos:column="40">LT_EMALLOC<pos:position pos:line="127" pos:column="50"/></name> <argument_list pos:line="127" pos:column="51">(<argument><expr><name pos:line="127" pos:column="52">lt_dlhandle<pos:position pos:line="127" pos:column="63"/></name> <operator pos:line="127" pos:column="64">*<pos:position pos:line="127" pos:column="65"/></operator></expr></argument>, <argument><expr><name pos:line="127" pos:column="67">depcount<pos:position pos:line="127" pos:column="75"/></name></expr></argument>)<pos:position pos:line="127" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="77"/></expr_stmt>
      <if pos:line="128" pos:column="7">if <condition pos:line="128" pos:column="10">(<expr><operator pos:line="128" pos:column="11">!<pos:position pos:line="128" pos:column="12"/></operator><name><name pos:line="128" pos:column="12">handle<pos:position pos:line="128" pos:column="18"/></name><operator pos:line="128" pos:column="18">-&gt;<pos:position pos:line="128" pos:column="23"/></operator><name pos:line="128" pos:column="20">deplibs<pos:position pos:line="128" pos:column="27"/></name></name></expr>)<pos:position pos:line="128" pos:column="28"/></condition><then pos:line="128" pos:column="28">
	<block type="pseudo"><goto pos:line="129" pos:column="9">goto <name pos:line="129" pos:column="14">cleanup_names<pos:position pos:line="129" pos:column="27"/></name>;<pos:position pos:line="129" pos:column="28"/></goto></block></then></if>

      <for pos:line="131" pos:column="7">for <control pos:line="131" pos:column="11">(<init><expr><name pos:line="131" pos:column="12">i<pos:position pos:line="131" pos:column="13"/></name> <operator pos:line="131" pos:column="14">=<pos:position pos:line="131" pos:column="15"/></operator> <literal type="number" pos:line="131" pos:column="16">0<pos:position pos:line="131" pos:column="17"/></literal></expr>;<pos:position pos:line="131" pos:column="18"/></init> <condition><expr><name pos:line="131" pos:column="19">i<pos:position pos:line="131" pos:column="20"/></name> <operator pos:line="131" pos:column="21">&lt;<pos:position pos:line="131" pos:column="25"/></operator> <name pos:line="131" pos:column="23">depcount<pos:position pos:line="131" pos:column="31"/></name></expr>;<pos:position pos:line="131" pos:column="32"/></condition> <incr><expr><operator pos:line="131" pos:column="33">++<pos:position pos:line="131" pos:column="35"/></operator><name pos:line="131" pos:column="35">i<pos:position pos:line="131" pos:column="36"/></name></expr></incr>)<pos:position pos:line="131" pos:column="37"/></control>
	<block pos:line="132" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="133" pos:column="11">handle<pos:position pos:line="133" pos:column="17"/></name><operator pos:line="133" pos:column="17">-&gt;<pos:position pos:line="133" pos:column="22"/></operator><name pos:line="133" pos:column="19">deplibs<pos:position pos:line="133" pos:column="26"/></name><index pos:line="133" pos:column="26">[<expr><name pos:line="133" pos:column="27">j<pos:position pos:line="133" pos:column="28"/></name></expr>]<pos:position pos:line="133" pos:column="29"/></index></name> <operator pos:line="133" pos:column="30">=<pos:position pos:line="133" pos:column="31"/></operator> <call><name pos:line="133" pos:column="32">lt_dlopenext<pos:position pos:line="133" pos:column="44"/></name><argument_list pos:line="133" pos:column="44">(<argument><expr><name><name pos:line="133" pos:column="45">names<pos:position pos:line="133" pos:column="50"/></name><index pos:line="133" pos:column="50">[<expr><name pos:line="133" pos:column="51">depcount<pos:position pos:line="133" pos:column="59"/></name><operator pos:line="133" pos:column="59">-<pos:position pos:line="133" pos:column="60"/></operator><literal type="number" pos:line="133" pos:column="60">1<pos:position pos:line="133" pos:column="61"/></literal><operator pos:line="133" pos:column="61">-<pos:position pos:line="133" pos:column="62"/></operator><name pos:line="133" pos:column="62">i<pos:position pos:line="133" pos:column="63"/></name></expr>]<pos:position pos:line="133" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="133" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="66"/></expr_stmt>
	  <if pos:line="134" pos:column="11">if <condition pos:line="134" pos:column="14">(<expr><name><name pos:line="134" pos:column="15">handle<pos:position pos:line="134" pos:column="21"/></name><operator pos:line="134" pos:column="21">-&gt;<pos:position pos:line="134" pos:column="26"/></operator><name pos:line="134" pos:column="23">deplibs<pos:position pos:line="134" pos:column="30"/></name><index pos:line="134" pos:column="30">[<expr><name pos:line="134" pos:column="31">j<pos:position pos:line="134" pos:column="32"/></name></expr>]<pos:position pos:line="134" pos:column="33"/></index></name></expr>)<pos:position pos:line="134" pos:column="34"/></condition><then pos:line="134" pos:column="34">
	    <block pos:line="135" pos:column="13">{
	      <expr_stmt><expr><operator pos:line="136" pos:column="15">++<pos:position pos:line="136" pos:column="17"/></operator><name pos:line="136" pos:column="17">j<pos:position pos:line="136" pos:column="18"/></name></expr>;<pos:position pos:line="136" pos:column="19"/></expr_stmt>
	    }<pos:position pos:line="137" pos:column="14"/></block></then></if>
	}<pos:position pos:line="138" pos:column="10"/></block></for>

      <expr_stmt><expr><name><name pos:line="140" pos:column="7">handle<pos:position pos:line="140" pos:column="13"/></name><operator pos:line="140" pos:column="13">-&gt;<pos:position pos:line="140" pos:column="18"/></operator><name pos:line="140" pos:column="15">depcount<pos:position pos:line="140" pos:column="23"/></name></name>	<operator pos:line="140" pos:column="25">=<pos:position pos:line="140" pos:column="26"/></operator> <name pos:line="140" pos:column="27">j<pos:position pos:line="140" pos:column="28"/></name></expr>;<pos:position pos:line="140" pos:column="29"/></expr_stmt>	<comment type="block" pos:line="140" pos:column="33">/* Number of successfully loaded deplibs */</comment>
      <expr_stmt><expr><name pos:line="141" pos:column="7">errors<pos:position pos:line="141" pos:column="13"/></name>		<operator pos:line="141" pos:column="25">=<pos:position pos:line="141" pos:column="26"/></operator> <literal type="number" pos:line="141" pos:column="27">0<pos:position pos:line="141" pos:column="28"/></literal></expr>;<pos:position pos:line="141" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="142" pos:column="6"/></block></then></if>

 <label><name pos:line="144" pos:column="2">cleanup_names<pos:position pos:line="144" pos:column="15"/></name>:<pos:position pos:line="144" pos:column="16"/></label>
  <for pos:line="145" pos:column="3">for <control pos:line="145" pos:column="7">(<init><expr><name pos:line="145" pos:column="8">i<pos:position pos:line="145" pos:column="9"/></name> <operator pos:line="145" pos:column="10">=<pos:position pos:line="145" pos:column="11"/></operator> <literal type="number" pos:line="145" pos:column="12">0<pos:position pos:line="145" pos:column="13"/></literal></expr>;<pos:position pos:line="145" pos:column="14"/></init> <condition><expr><name pos:line="145" pos:column="15">i<pos:position pos:line="145" pos:column="16"/></name> <operator pos:line="145" pos:column="17">&lt;<pos:position pos:line="145" pos:column="21"/></operator> <name pos:line="145" pos:column="19">depcount<pos:position pos:line="145" pos:column="27"/></name></expr>;<pos:position pos:line="145" pos:column="28"/></condition> <incr><expr><operator pos:line="145" pos:column="29">++<pos:position pos:line="145" pos:column="31"/></operator><name pos:line="145" pos:column="31">i<pos:position pos:line="145" pos:column="32"/></name></expr></incr>)<pos:position pos:line="145" pos:column="33"/></control>
    <block pos:line="146" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="147" pos:column="7">LT_DLFREE<pos:position pos:line="147" pos:column="16"/></name> <argument_list pos:line="147" pos:column="17">(<argument><expr><name><name pos:line="147" pos:column="18">names<pos:position pos:line="147" pos:column="23"/></name><index pos:line="147" pos:column="23">[<expr><name pos:line="147" pos:column="24">i<pos:position pos:line="147" pos:column="25"/></name></expr>]<pos:position pos:line="147" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="147" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="148" pos:column="6"/></block></for>

 <label><name pos:line="150" pos:column="2">cleanup<pos:position pos:line="150" pos:column="9"/></name>:<pos:position pos:line="150" pos:column="10"/></label>
  <expr_stmt><expr><call><name pos:line="151" pos:column="3">LT_DLFREE<pos:position pos:line="151" pos:column="12"/></name> <argument_list pos:line="151" pos:column="13">(<argument><expr><name pos:line="151" pos:column="14">names<pos:position pos:line="151" pos:column="19"/></name></expr></argument>)<pos:position pos:line="151" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="21"/></expr_stmt>
  <comment type="block" pos:line="152" pos:column="3">/* restore the old search path */</comment>
  <if pos:line="153" pos:column="3">if <condition pos:line="153" pos:column="6">(<expr><name pos:line="153" pos:column="7">user_search_path<pos:position pos:line="153" pos:column="23"/></name></expr>)<pos:position pos:line="153" pos:column="24"/></condition><then pos:line="153" pos:column="24"> <block pos:line="153" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="154" pos:column="5">LT_DLFREE<pos:position pos:line="154" pos:column="14"/></name> <argument_list pos:line="154" pos:column="15">(<argument><expr><name pos:line="154" pos:column="16">user_search_path<pos:position pos:line="154" pos:column="32"/></name></expr></argument>)<pos:position pos:line="154" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="155" pos:column="5">user_search_path<pos:position pos:line="155" pos:column="21"/></name> <operator pos:line="155" pos:column="22">=<pos:position pos:line="155" pos:column="23"/></operator> <name pos:line="155" pos:column="24">save_search_path<pos:position pos:line="155" pos:column="40"/></name></expr>;<pos:position pos:line="155" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="156" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="157" pos:column="3">LT_DLMUTEX_UNLOCK<pos:position pos:line="157" pos:column="20"/></name> <argument_list pos:line="157" pos:column="21">()<pos:position pos:line="157" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="24"/></expr_stmt>

<cpp:endif pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">endif<pos:position pos:line="159" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="161" pos:column="3">return <expr><name pos:line="161" pos:column="10">errors<pos:position pos:line="161" pos:column="16"/></name></expr>;<pos:position pos:line="161" pos:column="17"/></return>
}<pos:position pos:line="162" pos:column="2"/></block></function_decl></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_976_collectd-4.5.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">rule_head<pos:position pos:line="1" pos:column="24"/></name></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">iptcc_get_rule_num<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name><name pos:line="1" pos:column="45">struct<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">chain_head<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">c<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
					    <parameter><decl><type><name pos:line="2" pos:column="45">unsigned<pos:position pos:line="2" pos:column="53"/></name> <name pos:line="2" pos:column="54">int<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">rulenum<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">rule_head<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">r<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">num<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><literal type="number" pos:line="5" pos:column="28">0<pos:position pos:line="5" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

	<macro><name pos:line="7" pos:column="9">list_for_each_entry<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument pos:line="7" pos:column="29">r<pos:position pos:line="7" pos:column="30"/></argument>, <argument pos:line="7" pos:column="32">&amp;c-&gt;rules<pos:position pos:line="7" pos:column="41"/></argument>, <argument pos:line="7" pos:column="43">list<pos:position pos:line="7" pos:column="47"/></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></macro> <block pos:line="7" pos:column="49">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">num<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">++<pos:position pos:line="8" pos:column="22"/></operator></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">num<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">==<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">rulenum<pos:position pos:line="9" pos:column="35"/></name></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><name pos:line="10" pos:column="32">r<pos:position pos:line="10" pos:column="33"/></name></expr>;<pos:position pos:line="10" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="11" pos:column="10"/></block>
	<return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">NULL<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

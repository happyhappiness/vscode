<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_418_collectd-4.8.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cjni_config_add_jvm_arg<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">oconfig_item_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">ci<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <comment type="block" pos:line="1" pos:column="57">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier><modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">tmp<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">(<pos:position pos:line="5" pos:column="8"/></operator><name><name pos:line="5" pos:column="8">ci<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">values_num<pos:position pos:line="5" pos:column="22"/></name></name> <operator pos:line="5" pos:column="23">!=<pos:position pos:line="5" pos:column="25"/></operator> <literal type="number" pos:line="5" pos:column="26">1<pos:position pos:line="5" pos:column="27"/></literal><operator pos:line="5" pos:column="27">)<pos:position pos:line="5" pos:column="28"/></operator> <operator pos:line="5" pos:column="29">||<pos:position pos:line="5" pos:column="31"/></operator> <operator pos:line="5" pos:column="32">(<pos:position pos:line="5" pos:column="33"/></operator><name><name pos:line="5" pos:column="33">ci<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">values<pos:position pos:line="5" pos:column="43"/></name><index pos:line="5" pos:column="43">[<expr><literal type="number" pos:line="5" pos:column="44">0<pos:position pos:line="5" pos:column="45"/></literal></expr>]<pos:position pos:line="5" pos:column="46"/></index></name><operator pos:line="5" pos:column="46">.<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="47">type<pos:position pos:line="5" pos:column="51"/></name> <operator pos:line="5" pos:column="52">!=<pos:position pos:line="5" pos:column="54"/></operator> <name pos:line="5" pos:column="55">OCONFIG_TYPE_STRING<pos:position pos:line="5" pos:column="74"/></name><operator pos:line="5" pos:column="74">)<pos:position pos:line="5" pos:column="75"/></operator></expr>)<pos:position pos:line="5" pos:column="76"/></condition><then pos:line="5" pos:column="76">
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">WARNING<pos:position pos:line="7" pos:column="12"/></name> <argument_list pos:line="7" pos:column="13">(<argument><expr><literal type="string" pos:line="7" pos:column="14">"java plugin: `JVMArg' needs exactly one string argument."<pos:position pos:line="7" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="74"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><literal type="number" pos:line="8" pos:column="14">1<pos:position pos:line="8" pos:column="15"/></literal><operator pos:line="8" pos:column="15">)<pos:position pos:line="8" pos:column="16"/></operator></expr>;<pos:position pos:line="8" pos:column="17"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">jvm<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">!=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">NULL<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name> <argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="string" pos:line="13" pos:column="12">"java plugin: All `JVMArg' options MUST appear before all "<pos:position pos:line="13" pos:column="71"/></literal>
        <literal type="string" pos:line="14" pos:column="9">"`LoadPlugin' options! The JVM is already started and I have to "<pos:position pos:line="14" pos:column="74"/></literal>
        <literal type="string" pos:line="15" pos:column="9">"ignore this argument: %s"<pos:position pos:line="15" pos:column="35"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="16" pos:column="9">ci<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">values<pos:position pos:line="16" pos:column="19"/></name><index pos:line="16" pos:column="19">[<expr><literal type="number" pos:line="16" pos:column="20">0<pos:position pos:line="16" pos:column="21"/></literal></expr>]<pos:position pos:line="16" pos:column="22"/></index></name><operator pos:line="16" pos:column="22">.<pos:position pos:line="16" pos:column="23"/></operator><name><name pos:line="16" pos:column="23">value<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">.<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">string<pos:position pos:line="16" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">-<pos:position pos:line="17" pos:column="14"/></operator><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal><operator pos:line="17" pos:column="15">)<pos:position pos:line="17" pos:column="16"/></operator></expr>;<pos:position pos:line="17" pos:column="17"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="20" pos:column="3">tmp<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <operator pos:line="20" pos:column="9">(<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">char<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">*<pos:position pos:line="20" pos:column="16"/></operator><operator pos:line="20" pos:column="16">*<pos:position pos:line="20" pos:column="17"/></operator><operator pos:line="20" pos:column="17">)<pos:position pos:line="20" pos:column="18"/></operator> <call><name pos:line="20" pos:column="19">realloc<pos:position pos:line="20" pos:column="26"/></name> <argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">jvm_argv<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="38">sizeof <argument_list pos:line="20" pos:column="45">(<argument><expr><name pos:line="20" pos:column="46">char<pos:position pos:line="20" pos:column="50"/></name> <operator pos:line="20" pos:column="51">*<pos:position pos:line="20" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></sizeof> <operator pos:line="20" pos:column="54">*<pos:position pos:line="20" pos:column="55"/></operator> <operator pos:line="20" pos:column="56">(<pos:position pos:line="20" pos:column="57"/></operator><name pos:line="20" pos:column="57">jvm_argc<pos:position pos:line="20" pos:column="65"/></name> <operator pos:line="20" pos:column="66">+<pos:position pos:line="20" pos:column="67"/></operator> <literal type="number" pos:line="20" pos:column="68">1<pos:position pos:line="20" pos:column="69"/></literal><operator pos:line="20" pos:column="69">)<pos:position pos:line="20" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="72"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">tmp<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">==<pos:position pos:line="21" pos:column="13"/></operator> <name pos:line="21" pos:column="14">NULL<pos:position pos:line="21" pos:column="18"/></name></expr>)<pos:position pos:line="21" pos:column="19"/></condition><then pos:line="21" pos:column="19">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ERROR<pos:position pos:line="23" pos:column="10"/></name> <argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="string" pos:line="23" pos:column="12">"java plugin: realloc failed."<pos:position pos:line="23" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><operator pos:line="24" pos:column="13">-<pos:position pos:line="24" pos:column="14"/></operator><literal type="number" pos:line="24" pos:column="14">1<pos:position pos:line="24" pos:column="15"/></literal><operator pos:line="24" pos:column="15">)<pos:position pos:line="24" pos:column="16"/></operator></expr>;<pos:position pos:line="24" pos:column="17"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="26" pos:column="3">jvm_argv<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">tmp<pos:position pos:line="26" pos:column="17"/></name></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="28" pos:column="3">jvm_argv<pos:position pos:line="28" pos:column="11"/></name><index pos:line="28" pos:column="11">[<expr><name pos:line="28" pos:column="12">jvm_argc<pos:position pos:line="28" pos:column="20"/></name></expr>]<pos:position pos:line="28" pos:column="21"/></index></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <call><name pos:line="28" pos:column="24">strdup<pos:position pos:line="28" pos:column="30"/></name> <argument_list pos:line="28" pos:column="31">(<argument><expr><name><name pos:line="28" pos:column="32">ci<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">-&gt;<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="36">values<pos:position pos:line="28" pos:column="42"/></name><index pos:line="28" pos:column="42">[<expr><literal type="number" pos:line="28" pos:column="43">0<pos:position pos:line="28" pos:column="44"/></literal></expr>]<pos:position pos:line="28" pos:column="45"/></index></name><operator pos:line="28" pos:column="45">.<pos:position pos:line="28" pos:column="46"/></operator><name><name pos:line="28" pos:column="46">value<pos:position pos:line="28" pos:column="51"/></name><operator pos:line="28" pos:column="51">.<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="52">string<pos:position pos:line="28" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name><name pos:line="29" pos:column="7">jvm_argv<pos:position pos:line="29" pos:column="15"/></name><index pos:line="29" pos:column="15">[<expr><name pos:line="29" pos:column="16">jvm_argc<pos:position pos:line="29" pos:column="24"/></name></expr>]<pos:position pos:line="29" pos:column="25"/></index></name> <operator pos:line="29" pos:column="26">==<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="29">NULL<pos:position pos:line="29" pos:column="33"/></name></expr>)<pos:position pos:line="29" pos:column="34"/></condition><then pos:line="29" pos:column="34">
  <block pos:line="30" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ERROR<pos:position pos:line="31" pos:column="10"/></name> <argument_list pos:line="31" pos:column="11">(<argument><expr><literal type="string" pos:line="31" pos:column="12">"java plugin: strdup failed."<pos:position pos:line="31" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><operator pos:line="32" pos:column="13">-<pos:position pos:line="32" pos:column="14"/></operator><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal><operator pos:line="32" pos:column="15">)<pos:position pos:line="32" pos:column="16"/></operator></expr>;<pos:position pos:line="32" pos:column="17"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="34" pos:column="3">jvm_argc<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">++<pos:position pos:line="34" pos:column="13"/></operator></expr>;<pos:position pos:line="34" pos:column="14"/></expr_stmt>

  <return pos:line="36" pos:column="3">return <expr><operator pos:line="36" pos:column="10">(<pos:position pos:line="36" pos:column="11"/></operator><literal type="number" pos:line="36" pos:column="11">0<pos:position pos:line="36" pos:column="12"/></literal><operator pos:line="36" pos:column="12">)<pos:position pos:line="36" pos:column="13"/></operator></expr>;<pos:position pos:line="36" pos:column="14"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

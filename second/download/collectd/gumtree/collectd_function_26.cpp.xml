<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_function_26.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cf_callback_plugin<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">shortvar<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">var<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">arguments<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">value<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">lc_flags_t<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">flags<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">void<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">extra<pos:position pos:line="3" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="29"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">DEBUG_CALLBACK<pos:position pos:line="5" pos:column="23"/></name> <argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">shortvar<pos:position pos:line="5" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="35">var<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="40">arguments<pos:position pos:line="5" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="51">value<pos:position pos:line="5" pos:column="56"/></name></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="58"/></expr_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">flags<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">==<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">LC_FLAGS_SECTIONSTART<pos:position pos:line="7" pos:column="43"/></name></expr>)<pos:position pos:line="7" pos:column="44"/></condition><then pos:line="7" pos:column="44">
	<block pos:line="8" pos:column="9">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">nesting_depth<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">!=<pos:position pos:line="9" pos:column="37"/></operator> <literal type="number" pos:line="9" pos:column="38">0<pos:position pos:line="9" pos:column="39"/></literal></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40">
		<block pos:line="10" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">fprintf<pos:position pos:line="11" pos:column="32"/></name> <argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">stderr<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">ERR_NOT_NESTED<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
			<return pos:line="12" pos:column="25">return <expr><operator pos:line="12" pos:column="32">(<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">LC_CBRET_ERROR<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">)<pos:position pos:line="12" pos:column="48"/></operator></expr>;<pos:position pos:line="12" pos:column="49"/></return>
		}<pos:position pos:line="13" pos:column="18"/></block></then></if>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">arguments<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">==<pos:position pos:line="15" pos:column="33"/></operator> <name pos:line="15" pos:column="34">NULL<pos:position pos:line="15" pos:column="38"/></name></expr>)<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39">
		<block pos:line="16" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">fprintf<pos:position pos:line="17" pos:column="32"/></name> <argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">stderr<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">ERR_NEEDS_ARG<pos:position pos:line="17" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="57">shortvar<pos:position pos:line="17" pos:column="65"/></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>
			<return pos:line="18" pos:column="25">return <expr><operator pos:line="18" pos:column="32">(<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">LC_CBRET_ERROR<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">)<pos:position pos:line="18" pos:column="48"/></operator></expr>;<pos:position pos:line="18" pos:column="49"/></return>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>

		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><operator pos:line="21" pos:column="21">(<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">current_module<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">=<pos:position pos:line="21" pos:column="38"/></operator> <call><name pos:line="21" pos:column="39">strdup<pos:position pos:line="21" pos:column="45"/></name> <argument_list pos:line="21" pos:column="46">(<argument><expr><name pos:line="21" pos:column="47">arguments<pos:position pos:line="21" pos:column="56"/></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call><operator pos:line="21" pos:column="57">)<pos:position pos:line="21" pos:column="58"/></operator> <operator pos:line="21" pos:column="59">==<pos:position pos:line="21" pos:column="61"/></operator> <name pos:line="21" pos:column="62">NULL<pos:position pos:line="21" pos:column="66"/></name></expr>)<pos:position pos:line="21" pos:column="67"/></condition><then pos:line="21" pos:column="67">
		<block pos:line="22" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">perror<pos:position pos:line="23" pos:column="31"/></name> <argument_list pos:line="23" pos:column="32">(<argument><expr><literal type="string" pos:line="23" pos:column="33">"strdup"<pos:position pos:line="23" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
			<return pos:line="24" pos:column="25">return <expr><operator pos:line="24" pos:column="32">(<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">LC_CBRET_ERROR<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">)<pos:position pos:line="24" pos:column="48"/></operator></expr>;<pos:position pos:line="24" pos:column="49"/></return>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="27" pos:column="17">nesting_depth<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">++<pos:position pos:line="27" pos:column="32"/></operator></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>

		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">cf_search<pos:position pos:line="29" pos:column="30"/></name> <argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">current_module<pos:position pos:line="29" pos:column="46"/></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call> <operator pos:line="29" pos:column="48">!=<pos:position pos:line="29" pos:column="50"/></operator> <name pos:line="29" pos:column="51">NULL<pos:position pos:line="29" pos:column="55"/></name></expr>)<pos:position pos:line="29" pos:column="56"/></condition><then pos:line="29" pos:column="56">
			<block type="pseudo"><return pos:line="30" pos:column="25">return <expr><operator pos:line="30" pos:column="32">(<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="33">LC_CBRET_OKAY<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">)<pos:position pos:line="30" pos:column="47"/></operator></expr>;<pos:position pos:line="30" pos:column="48"/></return></block></then>
		<else pos:line="31" pos:column="17">else
			<block type="pseudo"><return pos:line="32" pos:column="25">return <expr><operator pos:line="32" pos:column="32">(<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="33">LC_CBRET_IGNORESECTION<pos:position pos:line="32" pos:column="55"/></name><operator pos:line="32" pos:column="55">)<pos:position pos:line="32" pos:column="56"/></operator></expr>;<pos:position pos:line="32" pos:column="57"/></return></block></else></if>
	}<pos:position pos:line="33" pos:column="10"/></block></then>
	<elseif pos:line="34" pos:column="9">else <if pos:line="34" pos:column="14">if <condition pos:line="34" pos:column="17">(<expr><name pos:line="34" pos:column="18">flags<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">==<pos:position pos:line="34" pos:column="26"/></operator> <name pos:line="34" pos:column="27">LC_FLAGS_SECTIONEND<pos:position pos:line="34" pos:column="46"/></name></expr>)<pos:position pos:line="34" pos:column="47"/></condition><then pos:line="34" pos:column="47">
	<block pos:line="35" pos:column="9">{
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">current_module<pos:position pos:line="36" pos:column="35"/></name> <operator pos:line="36" pos:column="36">!=<pos:position pos:line="36" pos:column="38"/></operator> <name pos:line="36" pos:column="39">NULL<pos:position pos:line="36" pos:column="43"/></name></expr>)<pos:position pos:line="36" pos:column="44"/></condition><then pos:line="36" pos:column="44">
		<block pos:line="37" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">free<pos:position pos:line="38" pos:column="29"/></name> <argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">current_module<pos:position pos:line="38" pos:column="45"/></name></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="39" pos:column="25">current_module<pos:position pos:line="39" pos:column="39"/></name> <operator pos:line="39" pos:column="40">=<pos:position pos:line="39" pos:column="41"/></operator> <name pos:line="39" pos:column="42">NULL<pos:position pos:line="39" pos:column="46"/></name></expr>;<pos:position pos:line="39" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="42" pos:column="17">nesting_depth<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">--<pos:position pos:line="42" pos:column="32"/></operator></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>

		<return pos:line="44" pos:column="17">return <expr><operator pos:line="44" pos:column="24">(<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="25">LC_CBRET_OKAY<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">)<pos:position pos:line="44" pos:column="39"/></operator></expr>;<pos:position pos:line="44" pos:column="40"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if></elseif>
	<else pos:line="46" pos:column="9">else
	<block pos:line="47" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">fprintf<pos:position pos:line="48" pos:column="24"/></name> <argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">stderr<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="34">ERR_SECTION_ONLY<pos:position pos:line="48" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="52">shortvar<pos:position pos:line="48" pos:column="60"/></name></expr></argument>)<pos:position pos:line="48" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="62"/></expr_stmt>
		<return pos:line="49" pos:column="17">return <expr><operator pos:line="49" pos:column="24">(<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="25">LC_CBRET_ERROR<pos:position pos:line="49" pos:column="39"/></name><operator pos:line="49" pos:column="39">)<pos:position pos:line="49" pos:column="40"/></operator></expr>;<pos:position pos:line="49" pos:column="41"/></return>
	}<pos:position pos:line="50" pos:column="10"/></block></else></if>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

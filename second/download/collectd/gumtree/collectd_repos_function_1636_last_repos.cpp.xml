<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1636_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">lcc_value_list_t<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">create_value_list<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">void<pos:position pos:line="1" pos:column="48"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">lcc_value_list_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">vl<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">host_num<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">vl<pos:position pos:line="6" pos:column="5"/></name> <operator pos:line="6" pos:column="6">=<pos:position pos:line="6" pos:column="7"/></operator> <call><name pos:line="6" pos:column="8">calloc<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">(<argument><expr><literal type="number" pos:line="6" pos:column="15">1<pos:position pos:line="6" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="18">sizeof<argument_list pos:line="6" pos:column="24">(<argument><expr><operator pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">vl<pos:position pos:line="6" pos:column="28"/></name></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">vl<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">==<pos:position pos:line="7" pos:column="12"/></operator> <name pos:line="7" pos:column="13">NULL<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18"> <block pos:line="7" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">fprintf<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">stderr<pos:position pos:line="8" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="21">"calloc failed.\n"<pos:position pos:line="8" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">NULL<pos:position pos:line="9" pos:column="16"/></name></expr>;<pos:position pos:line="9" pos:column="17"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="12" pos:column="3">vl<pos:position pos:line="12" pos:column="5"/></name><operator pos:line="12" pos:column="5">-&gt;<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="7">values<pos:position pos:line="12" pos:column="13"/></name></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">calloc<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<comment type="block" pos:line="12" pos:column="23">/* nmemb = */</comment> <argument><expr><literal type="number" pos:line="12" pos:column="37">1<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="40">sizeof<argument_list pos:line="12" pos:column="46">(<argument><expr><operator pos:line="12" pos:column="47">*<pos:position pos:line="12" pos:column="48"/></operator><name><name pos:line="12" pos:column="48">vl<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">-&gt;<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="52">values<pos:position pos:line="12" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="61"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name><name pos:line="13" pos:column="7">vl<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">values<pos:position pos:line="13" pos:column="17"/></name></name> <operator pos:line="13" pos:column="18">==<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">NULL<pos:position pos:line="13" pos:column="25"/></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <block pos:line="13" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">fprintf<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">stderr<pos:position pos:line="14" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="21">"calloc failed.\n"<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">free<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><name pos:line="15" pos:column="10">vl<pos:position pos:line="15" pos:column="12"/></name></expr></argument>)<pos:position pos:line="15" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="14"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">NULL<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="19" pos:column="3">vl<pos:position pos:line="19" pos:column="5"/></name><operator pos:line="19" pos:column="5">-&gt;<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="7">values_types<pos:position pos:line="19" pos:column="19"/></name></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <call><name pos:line="19" pos:column="22">calloc<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<comment type="block" pos:line="19" pos:column="29">/* nmemb = */</comment> <argument><expr><literal type="number" pos:line="19" pos:column="43">1<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="46">sizeof<argument_list pos:line="19" pos:column="52">(<argument><expr><operator pos:line="19" pos:column="53">*<pos:position pos:line="19" pos:column="54"/></operator><name><name pos:line="19" pos:column="54">vl<pos:position pos:line="19" pos:column="56"/></name><operator pos:line="19" pos:column="56">-&gt;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="58">values_types<pos:position pos:line="19" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="73"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name><name pos:line="20" pos:column="7">vl<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">values_types<pos:position pos:line="20" pos:column="23"/></name></name> <operator pos:line="20" pos:column="24">==<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">NULL<pos:position pos:line="20" pos:column="31"/></name></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32"> <block pos:line="20" pos:column="33">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">fprintf<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><name pos:line="21" pos:column="13">stderr<pos:position pos:line="21" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="21">"calloc failed.\n"<pos:position pos:line="21" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">free<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><name><name pos:line="22" pos:column="10">vl<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">values<pos:position pos:line="22" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">free<pos:position pos:line="23" pos:column="9"/></name><argument_list pos:line="23" pos:column="9">(<argument><expr><name pos:line="23" pos:column="10">vl<pos:position pos:line="23" pos:column="12"/></name></expr></argument>)<pos:position pos:line="23" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="14"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">NULL<pos:position pos:line="24" pos:column="16"/></name></expr>;<pos:position pos:line="24" pos:column="17"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="27" pos:column="3">vl<pos:position pos:line="27" pos:column="5"/></name><operator pos:line="27" pos:column="5">-&gt;<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="7">values_len<pos:position pos:line="27" pos:column="17"/></name></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <literal type="number" pos:line="27" pos:column="20">1<pos:position pos:line="27" pos:column="21"/></literal></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name pos:line="29" pos:column="3">host_num<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">get_boundet_random<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><literal type="number" pos:line="29" pos:column="33">0<pos:position pos:line="29" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="36">conf_num_hosts<pos:position pos:line="29" pos:column="50"/></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="31" pos:column="3">vl<pos:position pos:line="31" pos:column="5"/></name><operator pos:line="31" pos:column="5">-&gt;<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="7">interval<pos:position pos:line="31" pos:column="15"/></name></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">conf_interval<pos:position pos:line="31" pos:column="31"/></name></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">vl<pos:position pos:line="32" pos:column="5"/></name><operator pos:line="32" pos:column="5">-&gt;<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="7">time<pos:position pos:line="32" pos:column="11"/></name></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <literal type="number" pos:line="32" pos:column="14">1.0<pos:position pos:line="32" pos:column="17"/></literal> <operator pos:line="32" pos:column="18">+<pos:position pos:line="32" pos:column="19"/></operator> <call><name pos:line="32" pos:column="20">dtime<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">()<pos:position pos:line="32" pos:column="27"/></argument_list></call> <operator pos:line="32" pos:column="28">+<pos:position pos:line="32" pos:column="29"/></operator> <operator pos:line="32" pos:column="30">(<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="31">host_num<pos:position pos:line="32" pos:column="39"/></name> <operator pos:line="32" pos:column="40">%<pos:position pos:line="32" pos:column="41"/></operator> <operator pos:line="32" pos:column="42">(<pos:position pos:line="32" pos:column="43"/></operator><literal type="number" pos:line="32" pos:column="43">1<pos:position pos:line="32" pos:column="44"/></literal> <operator pos:line="32" pos:column="45">+<pos:position pos:line="32" pos:column="46"/></operator> <operator pos:line="32" pos:column="47">(<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="48">int<pos:position pos:line="32" pos:column="51"/></name><operator pos:line="32" pos:column="51">)<pos:position pos:line="32" pos:column="52"/></operator><name><name pos:line="32" pos:column="52">vl<pos:position pos:line="32" pos:column="54"/></name><operator pos:line="32" pos:column="54">-&gt;<pos:position pos:line="32" pos:column="59"/></operator><name pos:line="32" pos:column="56">interval<pos:position pos:line="32" pos:column="64"/></name></name><operator pos:line="32" pos:column="64">)<pos:position pos:line="32" pos:column="65"/></operator><operator pos:line="32" pos:column="65">)<pos:position pos:line="32" pos:column="66"/></operator></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt>

  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><call><name pos:line="34" pos:column="7">get_boundet_random<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><literal type="number" pos:line="34" pos:column="26">0<pos:position pos:line="34" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="29">2<pos:position pos:line="34" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></call> <operator pos:line="34" pos:column="32">==<pos:position pos:line="34" pos:column="34"/></operator> <literal type="number" pos:line="34" pos:column="35">0<pos:position pos:line="34" pos:column="36"/></literal></expr>)<pos:position pos:line="34" pos:column="37"/></condition><then pos:line="34" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="5">vl<pos:position pos:line="35" pos:column="7"/></name><operator pos:line="35" pos:column="7">-&gt;<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="9">values_types<pos:position pos:line="35" pos:column="21"/></name><index pos:line="35" pos:column="21">[<expr><literal type="number" pos:line="35" pos:column="22">0<pos:position pos:line="35" pos:column="23"/></literal></expr>]<pos:position pos:line="35" pos:column="24"/></index></name> <operator pos:line="35" pos:column="25">=<pos:position pos:line="35" pos:column="26"/></operator> <name pos:line="35" pos:column="27">LCC_TYPE_GAUGE<pos:position pos:line="35" pos:column="41"/></name></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt></block></then>
  <else pos:line="36" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="5">vl<pos:position pos:line="37" pos:column="7"/></name><operator pos:line="37" pos:column="7">-&gt;<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="9">values_types<pos:position pos:line="37" pos:column="21"/></name><index pos:line="37" pos:column="21">[<expr><literal type="number" pos:line="37" pos:column="22">0<pos:position pos:line="37" pos:column="23"/></literal></expr>]<pos:position pos:line="37" pos:column="24"/></index></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <name pos:line="37" pos:column="27">LCC_TYPE_DERIVE<pos:position pos:line="37" pos:column="42"/></name></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="39" pos:column="3">snprintf<pos:position pos:line="39" pos:column="11"/></name><argument_list pos:line="39" pos:column="11">(<argument><expr><name><name pos:line="39" pos:column="12">vl<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">-&gt;<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="16">identifier<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">.<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="27">host<pos:position pos:line="39" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="33">sizeof<argument_list pos:line="39" pos:column="39">(<argument><expr><name><name pos:line="39" pos:column="40">vl<pos:position pos:line="39" pos:column="42"/></name><operator pos:line="39" pos:column="42">-&gt;<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="44">identifier<pos:position pos:line="39" pos:column="54"/></name><operator pos:line="39" pos:column="54">.<pos:position pos:line="39" pos:column="55"/></operator><name pos:line="39" pos:column="55">host<pos:position pos:line="39" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="62">"host%04i"<pos:position pos:line="39" pos:column="72"/></literal></expr></argument>,
           <argument><expr><name pos:line="40" pos:column="12">host_num<pos:position pos:line="40" pos:column="20"/></name></expr></argument>)<pos:position pos:line="40" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">snprintf<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name><name pos:line="41" pos:column="12">vl<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">-&gt;<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="16">identifier<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">.<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">plugin<pos:position pos:line="41" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="35">sizeof<argument_list pos:line="41" pos:column="41">(<argument><expr><name><name pos:line="41" pos:column="42">vl<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">-&gt;<pos:position pos:line="41" pos:column="49"/></operator><name pos:line="41" pos:column="46">identifier<pos:position pos:line="41" pos:column="56"/></name><operator pos:line="41" pos:column="56">.<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="57">plugin<pos:position pos:line="41" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="66">"plugin%03i"<pos:position pos:line="41" pos:column="78"/></literal></expr></argument>,
           <argument><expr><call><name pos:line="42" pos:column="12">get_boundet_random<pos:position pos:line="42" pos:column="30"/></name><argument_list pos:line="42" pos:column="30">(<argument><expr><literal type="number" pos:line="42" pos:column="31">0<pos:position pos:line="42" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="34">conf_num_plugins<pos:position pos:line="42" pos:column="50"/></name></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">strncpy<pos:position pos:line="43" pos:column="10"/></name><argument_list pos:line="43" pos:column="10">(<argument><expr><name><name pos:line="43" pos:column="11">vl<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">identifier<pos:position pos:line="43" pos:column="25"/></name><operator pos:line="43" pos:column="25">.<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="26">type<pos:position pos:line="43" pos:column="30"/></name></name></expr></argument>,
          <argument><expr><ternary><condition><expr><operator pos:line="44" pos:column="11">(<pos:position pos:line="44" pos:column="12"/></operator><name><name pos:line="44" pos:column="12">vl<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">values_types<pos:position pos:line="44" pos:column="28"/></name><index pos:line="44" pos:column="28">[<expr><literal type="number" pos:line="44" pos:column="29">0<pos:position pos:line="44" pos:column="30"/></literal></expr>]<pos:position pos:line="44" pos:column="31"/></index></name> <operator pos:line="44" pos:column="32">==<pos:position pos:line="44" pos:column="34"/></operator> <name pos:line="44" pos:column="35">LCC_TYPE_GAUGE<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">)<pos:position pos:line="44" pos:column="50"/></operator></expr> ?<pos:position pos:line="44" pos:column="52"/></condition><then pos:line="44" pos:column="52"> <expr><literal type="string" pos:line="44" pos:column="53">"gauge"<pos:position pos:line="44" pos:column="60"/></literal></expr> <pos:position pos:line="44" pos:column="61"/></then><else pos:line="44" pos:column="61">: <expr><literal type="string" pos:line="44" pos:column="63">"derive"<pos:position pos:line="44" pos:column="71"/></literal></expr></else></ternary></expr></argument>,
          <argument><expr><sizeof pos:line="45" pos:column="11">sizeof<argument_list pos:line="45" pos:column="17">(<argument><expr><name><name pos:line="45" pos:column="18">vl<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">-&gt;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="22">identifier<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">.<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="33">type<pos:position pos:line="45" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="46" pos:column="3">vl<pos:position pos:line="46" pos:column="5"/></name><operator pos:line="46" pos:column="5">-&gt;<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="7">identifier<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">.<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">type<pos:position pos:line="46" pos:column="22"/></name><index pos:line="46" pos:column="22">[<expr><sizeof pos:line="46" pos:column="23">sizeof<argument_list pos:line="46" pos:column="29">(<argument><expr><name><name pos:line="46" pos:column="30">vl<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">-&gt;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="34">identifier<pos:position pos:line="46" pos:column="44"/></name><operator pos:line="46" pos:column="44">.<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="45">type<pos:position pos:line="46" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></sizeof> <operator pos:line="46" pos:column="51">-<pos:position pos:line="46" pos:column="52"/></operator> <literal type="number" pos:line="46" pos:column="53">1<pos:position pos:line="46" pos:column="54"/></literal></expr>]<pos:position pos:line="46" pos:column="55"/></index></name> <operator pos:line="46" pos:column="56">=<pos:position pos:line="46" pos:column="57"/></operator> <literal type="number" pos:line="46" pos:column="58">0<pos:position pos:line="46" pos:column="59"/></literal></expr>;<pos:position pos:line="46" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">snprintf<pos:position pos:line="47" pos:column="11"/></name><argument_list pos:line="47" pos:column="11">(<argument><expr><name><name pos:line="47" pos:column="12">vl<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">identifier<pos:position pos:line="47" pos:column="26"/></name><operator pos:line="47" pos:column="26">.<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="27">type_instance<pos:position pos:line="47" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="42">sizeof<argument_list pos:line="47" pos:column="48">(<argument><expr><name><name pos:line="47" pos:column="49">vl<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">-&gt;<pos:position pos:line="47" pos:column="56"/></operator><name pos:line="47" pos:column="53">identifier<pos:position pos:line="47" pos:column="63"/></name><operator pos:line="47" pos:column="63">.<pos:position pos:line="47" pos:column="64"/></operator><name pos:line="47" pos:column="64">type_instance<pos:position pos:line="47" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="78"/></argument_list></sizeof></expr></argument>,
           <argument><expr><literal type="string" pos:line="48" pos:column="12">"ti%li"<pos:position pos:line="48" pos:column="19"/></literal></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="21">random<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">()<pos:position pos:line="48" pos:column="29"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="31"/></expr_stmt>

  <return pos:line="50" pos:column="3">return <expr><name pos:line="50" pos:column="10">vl<pos:position pos:line="50" pos:column="12"/></name></expr>;<pos:position pos:line="50" pos:column="13"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

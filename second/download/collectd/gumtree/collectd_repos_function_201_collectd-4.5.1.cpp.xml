<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_201_collectd-4.5.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">battery_read_acpi<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">dir<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">name<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">void<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">user_data<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">double<pos:position pos:line="4" pos:column="15"/></name></type>  <name pos:line="4" pos:column="17">current<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">INVALID_VALUE<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">double<pos:position pos:line="5" pos:column="15"/></name></type>  <name pos:line="5" pos:column="17">voltage<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">INVALID_VALUE<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">double<pos:position pos:line="6" pos:column="15"/></name></type>  <name pos:line="6" pos:column="17">charge<pos:position pos:line="6" pos:column="23"/></name>  <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">INVALID_VALUE<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">double<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">valptr<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">charging<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name></type> <name><name pos:line="10" pos:column="14">filename<pos:position pos:line="10" pos:column="22"/></name><index pos:line="10" pos:column="22">[<expr><literal type="number" pos:line="10" pos:column="23">256<pos:position pos:line="10" pos:column="26"/></literal></expr>]<pos:position pos:line="10" pos:column="27"/></index></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">FILE<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">fh<pos:position pos:line="11" pos:column="17"/></name></decl>;<pos:position pos:line="11" pos:column="18"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name></type> <name><name pos:line="13" pos:column="14">buffer<pos:position pos:line="13" pos:column="20"/></name><index pos:line="13" pos:column="20">[<expr><literal type="number" pos:line="13" pos:column="21">1024<pos:position pos:line="13" pos:column="25"/></literal></expr>]<pos:position pos:line="13" pos:column="26"/></index></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name><name pos:line="14" pos:column="15">fields<pos:position pos:line="14" pos:column="21"/></name><index pos:line="14" pos:column="21">[<expr><literal type="number" pos:line="14" pos:column="22">8<pos:position pos:line="14" pos:column="23"/></literal></expr>]<pos:position pos:line="14" pos:column="24"/></index></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">numfields<pos:position pos:line="15" pos:column="22"/></name></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">endptr<pos:position pos:line="16" pos:column="21"/></name></decl>;<pos:position pos:line="16" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">len<pos:position pos:line="17" pos:column="16"/></name></decl>;<pos:position pos:line="17" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="19" pos:column="9">len<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">ssnprintf<pos:position pos:line="19" pos:column="24"/></name> <argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">filename<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="36">sizeof <argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">filename<pos:position pos:line="19" pos:column="52"/></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="55">"%s/%s/state"<pos:position pos:line="19" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="70">battery_acpi_dir<pos:position pos:line="19" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="88">name<pos:position pos:line="19" pos:column="92"/></name></expr></argument>)<pos:position pos:line="19" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="94"/></expr_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">len<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">&lt;<pos:position pos:line="21" pos:column="22"/></operator> <literal type="number" pos:line="21" pos:column="20">0<pos:position pos:line="21" pos:column="21"/></literal><operator pos:line="21" pos:column="21">)<pos:position pos:line="21" pos:column="22"/></operator> <operator pos:line="21" pos:column="23">||<pos:position pos:line="21" pos:column="25"/></operator> <operator pos:line="21" pos:column="26">(<pos:position pos:line="21" pos:column="27"/></operator><operator pos:line="21" pos:column="27">(<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">unsigned<pos:position pos:line="21" pos:column="36"/></name> <name pos:line="21" pos:column="37">int<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">)<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">len<pos:position pos:line="21" pos:column="44"/></name> <operator pos:line="21" pos:column="45">&gt;=<pos:position pos:line="21" pos:column="50"/></operator> <sizeof pos:line="21" pos:column="48">sizeof <argument_list pos:line="21" pos:column="55">(<argument><expr><name pos:line="21" pos:column="56">filename<pos:position pos:line="21" pos:column="64"/></name></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></sizeof><operator pos:line="21" pos:column="65">)<pos:position pos:line="21" pos:column="66"/></operator></expr>)<pos:position pos:line="21" pos:column="67"/></condition><then pos:line="21" pos:column="67">
		<block type="pseudo"><return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">-<pos:position pos:line="22" pos:column="25"/></operator><literal type="number" pos:line="22" pos:column="25">1<pos:position pos:line="22" pos:column="26"/></literal></expr>;<pos:position pos:line="22" pos:column="27"/></return></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">fh<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <call><name pos:line="24" pos:column="19">fopen<pos:position pos:line="24" pos:column="24"/></name> <argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">filename<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="36">"r"<pos:position pos:line="24" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call><operator pos:line="24" pos:column="40">)<pos:position pos:line="24" pos:column="41"/></operator> <operator pos:line="24" pos:column="42">==<pos:position pos:line="24" pos:column="44"/></operator> <name pos:line="24" pos:column="45">NULL<pos:position pos:line="24" pos:column="49"/></name></expr>)<pos:position pos:line="24" pos:column="50"/></condition><then pos:line="24" pos:column="50"> <block pos:line="24" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">char<pos:position pos:line="25" pos:column="21"/></name></type> <name><name pos:line="25" pos:column="22">errbuf<pos:position pos:line="25" pos:column="28"/></name><index pos:line="25" pos:column="28">[<expr><literal type="number" pos:line="25" pos:column="29">1024<pos:position pos:line="25" pos:column="33"/></literal></expr>]<pos:position pos:line="25" pos:column="34"/></index></name></decl>;<pos:position pos:line="25" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">ERROR<pos:position pos:line="26" pos:column="22"/></name> <argument_list pos:line="26" pos:column="23">(<argument><expr><literal type="string" pos:line="26" pos:column="24">"Cannot open `%s': %s"<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="48">filename<pos:position pos:line="26" pos:column="56"/></name></expr></argument>,
			<argument><expr><call><name pos:line="27" pos:column="25">sstrerror<pos:position pos:line="27" pos:column="34"/></name> <argument_list pos:line="27" pos:column="35">(<argument><expr><name pos:line="27" pos:column="36">errno<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="43">errbuf<pos:position pos:line="27" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="51">sizeof <argument_list pos:line="27" pos:column="58">(<argument><expr><name pos:line="27" pos:column="59">errbuf<pos:position pos:line="27" pos:column="65"/></name></expr></argument>)<pos:position pos:line="27" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="69"/></expr_stmt>
		<return pos:line="28" pos:column="17">return <expr><operator pos:line="28" pos:column="24">-<pos:position pos:line="28" pos:column="25"/></operator><literal type="number" pos:line="28" pos:column="25">1<pos:position pos:line="28" pos:column="26"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="31" pos:column="9">/*
	 * [11:00] &lt;@tokkee&gt; $ cat /proc/acpi/battery/BAT1/state
	 * [11:00] &lt;@tokkee&gt; present:                 yes
	 * [11:00] &lt;@tokkee&gt; capacity state:          ok
	 * [11:00] &lt;@tokkee&gt; charging state:          charging
	 * [11:00] &lt;@tokkee&gt; present rate:            1724 mA
	 * [11:00] &lt;@tokkee&gt; remaining capacity:      4136 mAh
	 * [11:00] &lt;@tokkee&gt; present voltage:         12428 mV
	 */</comment>
	<while pos:line="40" pos:column="9">while <condition pos:line="40" pos:column="15">(<expr><call><name pos:line="40" pos:column="16">fgets<pos:position pos:line="40" pos:column="21"/></name> <argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">buffer<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="31">sizeof <argument_list pos:line="40" pos:column="38">(<argument><expr><name pos:line="40" pos:column="39">buffer<pos:position pos:line="40" pos:column="45"/></name></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="40" pos:column="48">fh<pos:position pos:line="40" pos:column="50"/></name></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call> <operator pos:line="40" pos:column="52">!=<pos:position pos:line="40" pos:column="54"/></operator> <name pos:line="40" pos:column="55">NULL<pos:position pos:line="40" pos:column="59"/></name></expr>)<pos:position pos:line="40" pos:column="60"/></condition>
	<block pos:line="41" pos:column="9">{
		<expr_stmt><expr><name pos:line="42" pos:column="17">numfields<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">=<pos:position pos:line="42" pos:column="28"/></operator> <call><name pos:line="42" pos:column="29">strsplit<pos:position pos:line="42" pos:column="37"/></name> <argument_list pos:line="42" pos:column="38">(<argument><expr><name pos:line="42" pos:column="39">buffer<pos:position pos:line="42" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="47">fields<pos:position pos:line="42" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="55">8<pos:position pos:line="42" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="58"/></expr_stmt>

		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">numfields<pos:position pos:line="44" pos:column="30"/></name> <operator pos:line="44" pos:column="31">&lt;<pos:position pos:line="44" pos:column="35"/></operator> <literal type="number" pos:line="44" pos:column="33">3<pos:position pos:line="44" pos:column="34"/></literal></expr>)<pos:position pos:line="44" pos:column="35"/></condition><then pos:line="44" pos:column="35">
			<block type="pseudo"><continue pos:line="45" pos:column="25">continue;<pos:position pos:line="45" pos:column="34"/></continue></block></then></if>

		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><operator pos:line="47" pos:column="21">(<pos:position pos:line="47" pos:column="22"/></operator><call><name pos:line="47" pos:column="22">strcmp<pos:position pos:line="47" pos:column="28"/></name> <argument_list pos:line="47" pos:column="29">(<argument><expr><name><name pos:line="47" pos:column="30">fields<pos:position pos:line="47" pos:column="36"/></name><index pos:line="47" pos:column="36">[<expr><literal type="number" pos:line="47" pos:column="37">0<pos:position pos:line="47" pos:column="38"/></literal></expr>]<pos:position pos:line="47" pos:column="39"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="41">"charging"<pos:position pos:line="47" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call> <operator pos:line="47" pos:column="53">==<pos:position pos:line="47" pos:column="55"/></operator> <literal type="number" pos:line="47" pos:column="56">0<pos:position pos:line="47" pos:column="57"/></literal><operator pos:line="47" pos:column="57">)<pos:position pos:line="47" pos:column="58"/></operator>
				<operator pos:line="48" pos:column="33">&amp;&amp;<pos:position pos:line="48" pos:column="43"/></operator> <operator pos:line="48" pos:column="36">(<pos:position pos:line="48" pos:column="37"/></operator><call><name pos:line="48" pos:column="37">strcmp<pos:position pos:line="48" pos:column="43"/></name> <argument_list pos:line="48" pos:column="44">(<argument><expr><name><name pos:line="48" pos:column="45">fields<pos:position pos:line="48" pos:column="51"/></name><index pos:line="48" pos:column="51">[<expr><literal type="number" pos:line="48" pos:column="52">1<pos:position pos:line="48" pos:column="53"/></literal></expr>]<pos:position pos:line="48" pos:column="54"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="56">"state:"<pos:position pos:line="48" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></call> <operator pos:line="48" pos:column="66">==<pos:position pos:line="48" pos:column="68"/></operator> <literal type="number" pos:line="48" pos:column="69">0<pos:position pos:line="48" pos:column="70"/></literal><operator pos:line="48" pos:column="70">)<pos:position pos:line="48" pos:column="71"/></operator></expr>)<pos:position pos:line="48" pos:column="72"/></condition><then pos:line="48" pos:column="72">
		<block pos:line="49" pos:column="17">{
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><call><name pos:line="50" pos:column="29">strcmp<pos:position pos:line="50" pos:column="35"/></name> <argument_list pos:line="50" pos:column="36">(<argument><expr><name><name pos:line="50" pos:column="37">fields<pos:position pos:line="50" pos:column="43"/></name><index pos:line="50" pos:column="43">[<expr><literal type="number" pos:line="50" pos:column="44">2<pos:position pos:line="50" pos:column="45"/></literal></expr>]<pos:position pos:line="50" pos:column="46"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="48">"charging"<pos:position pos:line="50" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="59"/></argument_list></call> <operator pos:line="50" pos:column="60">==<pos:position pos:line="50" pos:column="62"/></operator> <literal type="number" pos:line="50" pos:column="63">0<pos:position pos:line="50" pos:column="64"/></literal></expr>)<pos:position pos:line="50" pos:column="65"/></condition><then pos:line="50" pos:column="65">
				<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="33">charging<pos:position pos:line="51" pos:column="41"/></name> <operator pos:line="51" pos:column="42">=<pos:position pos:line="51" pos:column="43"/></operator> <literal type="number" pos:line="51" pos:column="44">1<pos:position pos:line="51" pos:column="45"/></literal></expr>;<pos:position pos:line="51" pos:column="46"/></expr_stmt></block></then>
			<else pos:line="52" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="33">charging<pos:position pos:line="53" pos:column="41"/></name> <operator pos:line="53" pos:column="42">=<pos:position pos:line="53" pos:column="43"/></operator> <literal type="number" pos:line="53" pos:column="44">0<pos:position pos:line="53" pos:column="45"/></literal></expr>;<pos:position pos:line="53" pos:column="46"/></expr_stmt></block></else></if>
			<continue pos:line="54" pos:column="25">continue;<pos:position pos:line="54" pos:column="34"/></continue>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>

		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><operator pos:line="57" pos:column="21">(<pos:position pos:line="57" pos:column="22"/></operator><call><name pos:line="57" pos:column="22">strcmp<pos:position pos:line="57" pos:column="28"/></name> <argument_list pos:line="57" pos:column="29">(<argument><expr><name><name pos:line="57" pos:column="30">fields<pos:position pos:line="57" pos:column="36"/></name><index pos:line="57" pos:column="36">[<expr><literal type="number" pos:line="57" pos:column="37">0<pos:position pos:line="57" pos:column="38"/></literal></expr>]<pos:position pos:line="57" pos:column="39"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="41">"present"<pos:position pos:line="57" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="51"/></argument_list></call> <operator pos:line="57" pos:column="52">==<pos:position pos:line="57" pos:column="54"/></operator> <literal type="number" pos:line="57" pos:column="55">0<pos:position pos:line="57" pos:column="56"/></literal><operator pos:line="57" pos:column="56">)<pos:position pos:line="57" pos:column="57"/></operator>
				<operator pos:line="58" pos:column="33">&amp;&amp;<pos:position pos:line="58" pos:column="43"/></operator> <operator pos:line="58" pos:column="36">(<pos:position pos:line="58" pos:column="37"/></operator><call><name pos:line="58" pos:column="37">strcmp<pos:position pos:line="58" pos:column="43"/></name> <argument_list pos:line="58" pos:column="44">(<argument><expr><name><name pos:line="58" pos:column="45">fields<pos:position pos:line="58" pos:column="51"/></name><index pos:line="58" pos:column="51">[<expr><literal type="number" pos:line="58" pos:column="52">1<pos:position pos:line="58" pos:column="53"/></literal></expr>]<pos:position pos:line="58" pos:column="54"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="56">"rate:"<pos:position pos:line="58" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="64"/></argument_list></call> <operator pos:line="58" pos:column="65">==<pos:position pos:line="58" pos:column="67"/></operator> <literal type="number" pos:line="58" pos:column="68">0<pos:position pos:line="58" pos:column="69"/></literal><operator pos:line="58" pos:column="69">)<pos:position pos:line="58" pos:column="70"/></operator></expr>)<pos:position pos:line="58" pos:column="71"/></condition><then pos:line="58" pos:column="71">
			<block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="25">valptr<pos:position pos:line="59" pos:column="31"/></name> <operator pos:line="59" pos:column="32">=<pos:position pos:line="59" pos:column="33"/></operator> <operator pos:line="59" pos:column="34">&amp;<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="35">current<pos:position pos:line="59" pos:column="42"/></name></expr>;<pos:position pos:line="59" pos:column="43"/></expr_stmt></block></then>
		<elseif pos:line="60" pos:column="17">else <if pos:line="60" pos:column="22">if <condition pos:line="60" pos:column="25">(<expr><operator pos:line="60" pos:column="26">(<pos:position pos:line="60" pos:column="27"/></operator><call><name pos:line="60" pos:column="27">strcmp<pos:position pos:line="60" pos:column="33"/></name> <argument_list pos:line="60" pos:column="34">(<argument><expr><name><name pos:line="60" pos:column="35">fields<pos:position pos:line="60" pos:column="41"/></name><index pos:line="60" pos:column="41">[<expr><literal type="number" pos:line="60" pos:column="42">0<pos:position pos:line="60" pos:column="43"/></literal></expr>]<pos:position pos:line="60" pos:column="44"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="46">"remaining"<pos:position pos:line="60" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="58"/></argument_list></call> <operator pos:line="60" pos:column="59">==<pos:position pos:line="60" pos:column="61"/></operator> <literal type="number" pos:line="60" pos:column="62">0<pos:position pos:line="60" pos:column="63"/></literal><operator pos:line="60" pos:column="63">)<pos:position pos:line="60" pos:column="64"/></operator>
				<operator pos:line="61" pos:column="33">&amp;&amp;<pos:position pos:line="61" pos:column="43"/></operator> <operator pos:line="61" pos:column="36">(<pos:position pos:line="61" pos:column="37"/></operator><call><name pos:line="61" pos:column="37">strcmp<pos:position pos:line="61" pos:column="43"/></name> <argument_list pos:line="61" pos:column="44">(<argument><expr><name><name pos:line="61" pos:column="45">fields<pos:position pos:line="61" pos:column="51"/></name><index pos:line="61" pos:column="51">[<expr><literal type="number" pos:line="61" pos:column="52">1<pos:position pos:line="61" pos:column="53"/></literal></expr>]<pos:position pos:line="61" pos:column="54"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="56">"capacity:"<pos:position pos:line="61" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="68"/></argument_list></call> <operator pos:line="61" pos:column="69">==<pos:position pos:line="61" pos:column="71"/></operator> <literal type="number" pos:line="61" pos:column="72">0<pos:position pos:line="61" pos:column="73"/></literal><operator pos:line="61" pos:column="73">)<pos:position pos:line="61" pos:column="74"/></operator></expr>)<pos:position pos:line="61" pos:column="75"/></condition><then pos:line="61" pos:column="75">
			<block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="25">valptr<pos:position pos:line="62" pos:column="31"/></name> <operator pos:line="62" pos:column="32">=<pos:position pos:line="62" pos:column="33"/></operator> <operator pos:line="62" pos:column="34">&amp;<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="35">charge<pos:position pos:line="62" pos:column="41"/></name></expr>;<pos:position pos:line="62" pos:column="42"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="63" pos:column="17">else <if pos:line="63" pos:column="22">if <condition pos:line="63" pos:column="25">(<expr><operator pos:line="63" pos:column="26">(<pos:position pos:line="63" pos:column="27"/></operator><call><name pos:line="63" pos:column="27">strcmp<pos:position pos:line="63" pos:column="33"/></name> <argument_list pos:line="63" pos:column="34">(<argument><expr><name><name pos:line="63" pos:column="35">fields<pos:position pos:line="63" pos:column="41"/></name><index pos:line="63" pos:column="41">[<expr><literal type="number" pos:line="63" pos:column="42">0<pos:position pos:line="63" pos:column="43"/></literal></expr>]<pos:position pos:line="63" pos:column="44"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="46">"present"<pos:position pos:line="63" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="56"/></argument_list></call> <operator pos:line="63" pos:column="57">==<pos:position pos:line="63" pos:column="59"/></operator> <literal type="number" pos:line="63" pos:column="60">0<pos:position pos:line="63" pos:column="61"/></literal><operator pos:line="63" pos:column="61">)<pos:position pos:line="63" pos:column="62"/></operator>
				<operator pos:line="64" pos:column="33">&amp;&amp;<pos:position pos:line="64" pos:column="43"/></operator> <operator pos:line="64" pos:column="36">(<pos:position pos:line="64" pos:column="37"/></operator><call><name pos:line="64" pos:column="37">strcmp<pos:position pos:line="64" pos:column="43"/></name> <argument_list pos:line="64" pos:column="44">(<argument><expr><name><name pos:line="64" pos:column="45">fields<pos:position pos:line="64" pos:column="51"/></name><index pos:line="64" pos:column="51">[<expr><literal type="number" pos:line="64" pos:column="52">1<pos:position pos:line="64" pos:column="53"/></literal></expr>]<pos:position pos:line="64" pos:column="54"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="56">"voltage:"<pos:position pos:line="64" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="67"/></argument_list></call> <operator pos:line="64" pos:column="68">==<pos:position pos:line="64" pos:column="70"/></operator> <literal type="number" pos:line="64" pos:column="71">0<pos:position pos:line="64" pos:column="72"/></literal><operator pos:line="64" pos:column="72">)<pos:position pos:line="64" pos:column="73"/></operator></expr>)<pos:position pos:line="64" pos:column="74"/></condition><then pos:line="64" pos:column="74">
			<block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="25">valptr<pos:position pos:line="65" pos:column="31"/></name> <operator pos:line="65" pos:column="32">=<pos:position pos:line="65" pos:column="33"/></operator> <operator pos:line="65" pos:column="34">&amp;<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="35">voltage<pos:position pos:line="65" pos:column="42"/></name></expr>;<pos:position pos:line="65" pos:column="43"/></expr_stmt></block></then></if></elseif>
		<else pos:line="66" pos:column="17">else
			<block type="pseudo"><continue pos:line="67" pos:column="25">continue;<pos:position pos:line="67" pos:column="34"/></continue></block></else></if>

		<expr_stmt><expr><name pos:line="69" pos:column="17">endptr<pos:position pos:line="69" pos:column="23"/></name> <operator pos:line="69" pos:column="24">=<pos:position pos:line="69" pos:column="25"/></operator> <name pos:line="69" pos:column="26">NULL<pos:position pos:line="69" pos:column="30"/></name></expr>;<pos:position pos:line="69" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="70" pos:column="17">errno<pos:position pos:line="70" pos:column="22"/></name>  <operator pos:line="70" pos:column="24">=<pos:position pos:line="70" pos:column="25"/></operator> <literal type="number" pos:line="70" pos:column="26">0<pos:position pos:line="70" pos:column="27"/></literal></expr>;<pos:position pos:line="70" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="71" pos:column="17">*<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="18">valptr<pos:position pos:line="71" pos:column="24"/></name> <operator pos:line="71" pos:column="25">=<pos:position pos:line="71" pos:column="26"/></operator> <call><name pos:line="71" pos:column="27">strtod<pos:position pos:line="71" pos:column="33"/></name> <argument_list pos:line="71" pos:column="34">(<argument><expr><name><name pos:line="71" pos:column="35">fields<pos:position pos:line="71" pos:column="41"/></name><index pos:line="71" pos:column="41">[<expr><literal type="number" pos:line="71" pos:column="42">2<pos:position pos:line="71" pos:column="43"/></literal></expr>]<pos:position pos:line="71" pos:column="44"/></index></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="46">&amp;<pos:position pos:line="71" pos:column="51"/></operator><name pos:line="71" pos:column="47">endptr<pos:position pos:line="71" pos:column="53"/></name></expr></argument>)<pos:position pos:line="71" pos:column="54"/></argument_list></call> <operator pos:line="71" pos:column="55">/<pos:position pos:line="71" pos:column="56"/></operator> <literal type="number" pos:line="71" pos:column="57">1000.0<pos:position pos:line="71" pos:column="63"/></literal></expr>;<pos:position pos:line="71" pos:column="64"/></expr_stmt>

		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><operator pos:line="73" pos:column="21">(<pos:position pos:line="73" pos:column="22"/></operator><name><name pos:line="73" pos:column="22">fields<pos:position pos:line="73" pos:column="28"/></name><index pos:line="73" pos:column="28">[<expr><literal type="number" pos:line="73" pos:column="29">2<pos:position pos:line="73" pos:column="30"/></literal></expr>]<pos:position pos:line="73" pos:column="31"/></index></name> <operator pos:line="73" pos:column="32">==<pos:position pos:line="73" pos:column="34"/></operator> <name pos:line="73" pos:column="35">endptr<pos:position pos:line="73" pos:column="41"/></name><operator pos:line="73" pos:column="41">)<pos:position pos:line="73" pos:column="42"/></operator> <operator pos:line="73" pos:column="43">||<pos:position pos:line="73" pos:column="45"/></operator> <operator pos:line="73" pos:column="46">(<pos:position pos:line="73" pos:column="47"/></operator><name pos:line="73" pos:column="47">errno<pos:position pos:line="73" pos:column="52"/></name> <operator pos:line="73" pos:column="53">!=<pos:position pos:line="73" pos:column="55"/></operator> <literal type="number" pos:line="73" pos:column="56">0<pos:position pos:line="73" pos:column="57"/></literal><operator pos:line="73" pos:column="57">)<pos:position pos:line="73" pos:column="58"/></operator></expr>)<pos:position pos:line="73" pos:column="59"/></condition><then pos:line="73" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="74" pos:column="25">*<pos:position pos:line="74" pos:column="26"/></operator><name pos:line="74" pos:column="26">valptr<pos:position pos:line="74" pos:column="32"/></name> <operator pos:line="74" pos:column="33">=<pos:position pos:line="74" pos:column="34"/></operator> <name pos:line="74" pos:column="35">INVALID_VALUE<pos:position pos:line="74" pos:column="48"/></name></expr>;<pos:position pos:line="74" pos:column="49"/></expr_stmt></block></then></if>
	}<pos:position pos:line="75" pos:column="10"/></block></while> <comment type="block" pos:line="75" pos:column="11">/* while (fgets (buffer, sizeof (buffer), fh) != NULL) */</comment>

	<expr_stmt><expr><call><name pos:line="77" pos:column="9">fclose<pos:position pos:line="77" pos:column="15"/></name> <argument_list pos:line="77" pos:column="16">(<argument><expr><name pos:line="77" pos:column="17">fh<pos:position pos:line="77" pos:column="19"/></name></expr></argument>)<pos:position pos:line="77" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="21"/></expr_stmt>

	<if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><operator pos:line="79" pos:column="13">(<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="14">current<pos:position pos:line="79" pos:column="21"/></name> <operator pos:line="79" pos:column="22">!=<pos:position pos:line="79" pos:column="24"/></operator> <name pos:line="79" pos:column="25">INVALID_VALUE<pos:position pos:line="79" pos:column="38"/></name><operator pos:line="79" pos:column="38">)<pos:position pos:line="79" pos:column="39"/></operator> <operator pos:line="79" pos:column="40">&amp;&amp;<pos:position pos:line="79" pos:column="50"/></operator> <operator pos:line="79" pos:column="43">(<pos:position pos:line="79" pos:column="44"/></operator><name pos:line="79" pos:column="44">charging<pos:position pos:line="79" pos:column="52"/></name> <operator pos:line="79" pos:column="53">==<pos:position pos:line="79" pos:column="55"/></operator> <literal type="number" pos:line="79" pos:column="56">0<pos:position pos:line="79" pos:column="57"/></literal><operator pos:line="79" pos:column="57">)<pos:position pos:line="79" pos:column="58"/></operator></expr>)<pos:position pos:line="79" pos:column="59"/></condition><then pos:line="79" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="25">current<pos:position pos:line="80" pos:column="32"/></name> <operator pos:line="80" pos:column="33">*=<pos:position pos:line="80" pos:column="35"/></operator> <operator pos:line="80" pos:column="36">-<pos:position pos:line="80" pos:column="37"/></operator><literal type="number" pos:line="80" pos:column="37">1<pos:position pos:line="80" pos:column="38"/></literal></expr>;<pos:position pos:line="80" pos:column="39"/></expr_stmt></block></then></if>

	<if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name pos:line="82" pos:column="13">charge<pos:position pos:line="82" pos:column="19"/></name> <operator pos:line="82" pos:column="20">!=<pos:position pos:line="82" pos:column="22"/></operator> <name pos:line="82" pos:column="23">INVALID_VALUE<pos:position pos:line="82" pos:column="36"/></name></expr>)<pos:position pos:line="82" pos:column="37"/></condition><then pos:line="82" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="17">battery_submit<pos:position pos:line="83" pos:column="31"/></name> <argument_list pos:line="83" pos:column="32">(<argument><expr><literal type="string" pos:line="83" pos:column="33">"0"<pos:position pos:line="83" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="38">"charge"<pos:position pos:line="83" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="48">charge<pos:position pos:line="83" pos:column="54"/></name></expr></argument>)<pos:position pos:line="83" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="56"/></expr_stmt></block></then></if>
	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">current<pos:position pos:line="84" pos:column="20"/></name> <operator pos:line="84" pos:column="21">!=<pos:position pos:line="84" pos:column="23"/></operator> <name pos:line="84" pos:column="24">INVALID_VALUE<pos:position pos:line="84" pos:column="37"/></name></expr>)<pos:position pos:line="84" pos:column="38"/></condition><then pos:line="84" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="17">battery_submit<pos:position pos:line="85" pos:column="31"/></name> <argument_list pos:line="85" pos:column="32">(<argument><expr><literal type="string" pos:line="85" pos:column="33">"0"<pos:position pos:line="85" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="38">"current"<pos:position pos:line="85" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="49">current<pos:position pos:line="85" pos:column="56"/></name></expr></argument>)<pos:position pos:line="85" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="58"/></expr_stmt></block></then></if>
	<if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><name pos:line="86" pos:column="13">voltage<pos:position pos:line="86" pos:column="20"/></name> <operator pos:line="86" pos:column="21">!=<pos:position pos:line="86" pos:column="23"/></operator> <name pos:line="86" pos:column="24">INVALID_VALUE<pos:position pos:line="86" pos:column="37"/></name></expr>)<pos:position pos:line="86" pos:column="38"/></condition><then pos:line="86" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="17">battery_submit<pos:position pos:line="87" pos:column="31"/></name> <argument_list pos:line="87" pos:column="32">(<argument><expr><literal type="string" pos:line="87" pos:column="33">"0"<pos:position pos:line="87" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="38">"voltage"<pos:position pos:line="87" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="49">voltage<pos:position pos:line="87" pos:column="56"/></name></expr></argument>)<pos:position pos:line="87" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="58"/></expr_stmt></block></then></if>

	<return pos:line="89" pos:column="9">return <expr><literal type="number" pos:line="89" pos:column="16">0<pos:position pos:line="89" pos:column="17"/></literal></expr>;<pos:position pos:line="89" pos:column="18"/></return>
}<pos:position pos:line="90" pos:column="2"/></block></function></unit>

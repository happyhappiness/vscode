<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1129_collectd-4.5.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ping_send_one_ipv4<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">pingobj_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">obj<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">pinghost_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">ph<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">icmp<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">icmp4<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">buf<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><literal type="number" pos:line="6" pos:column="18">4096<pos:position pos:line="6" pos:column="22"/></literal></expr>]<pos:position pos:line="6" pos:column="23"/></index></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type>  <name pos:line="7" pos:column="14">buflen<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">data<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type>   <name pos:line="10" pos:column="15">datalen<pos:position pos:line="10" pos:column="22"/></name></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">dprintf<pos:position pos:line="12" pos:column="16"/></name> <argument_list pos:line="12" pos:column="17">(<argument><expr><literal type="string" pos:line="12" pos:column="18">"ph-&gt;hostname = %s\n"<pos:position pos:line="12" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="41">ph<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">hostname<pos:position pos:line="12" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">memset<pos:position pos:line="14" pos:column="15"/></name> <argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">buf<pos:position pos:line="14" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="22">'\0'<pos:position pos:line="14" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="28">sizeof <argument_list pos:line="14" pos:column="35">(<argument><expr><name pos:line="14" pos:column="36">buf<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">icmp4<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <operator pos:line="15" pos:column="17">(<pos:position pos:line="15" pos:column="18"/></operator>struct <name pos:line="15" pos:column="25">icmp<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">*<pos:position pos:line="15" pos:column="31"/></operator><operator pos:line="15" pos:column="31">)<pos:position pos:line="15" pos:column="32"/></operator> <name pos:line="15" pos:column="33">buf<pos:position pos:line="15" pos:column="36"/></name></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">data<pos:position pos:line="16" pos:column="13"/></name>  <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <operator pos:line="16" pos:column="17">(<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">char<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></operator><operator pos:line="16" pos:column="24">)<pos:position pos:line="16" pos:column="25"/></operator> <operator pos:line="16" pos:column="26">(<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">icmp4<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">+<pos:position pos:line="16" pos:column="34"/></operator> <literal type="number" pos:line="16" pos:column="35">1<pos:position pos:line="16" pos:column="36"/></literal><operator pos:line="16" pos:column="36">)<pos:position pos:line="16" pos:column="37"/></operator></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="18" pos:column="9">icmp4<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">icmp_type<pos:position pos:line="18" pos:column="25"/></name></name>  <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">ICMP_ECHO<pos:position pos:line="18" pos:column="38"/></name></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">icmp4<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">icmp_code<pos:position pos:line="19" pos:column="25"/></name></name>  <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <literal type="number" pos:line="19" pos:column="29">0<pos:position pos:line="19" pos:column="30"/></literal></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">icmp4<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">icmp_cksum<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <literal type="number" pos:line="20" pos:column="29">0<pos:position pos:line="20" pos:column="30"/></literal></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">icmp4<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">icmp_id<pos:position pos:line="21" pos:column="23"/></name></name>    <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <call><name pos:line="21" pos:column="29">htons<pos:position pos:line="21" pos:column="34"/></name> <argument_list pos:line="21" pos:column="35">(<argument><expr><name><name pos:line="21" pos:column="36">ph<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">ident<pos:position pos:line="21" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">icmp4<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">icmp_seq<pos:position pos:line="22" pos:column="24"/></name></name>   <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <call><name pos:line="22" pos:column="29">htons<pos:position pos:line="22" pos:column="34"/></name> <argument_list pos:line="22" pos:column="35">(<argument><expr><name><name pos:line="22" pos:column="36">ph<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">sequence<pos:position pos:line="22" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>

	<expr_stmt><expr><name pos:line="24" pos:column="9">buflen<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <literal type="number" pos:line="24" pos:column="18">4096<pos:position pos:line="24" pos:column="22"/></literal> <operator pos:line="24" pos:column="23">-<pos:position pos:line="24" pos:column="24"/></operator> <sizeof pos:line="24" pos:column="25">sizeof <argument_list pos:line="24" pos:column="32">(<argument><expr pos:line="24" pos:column="33">struct <name pos:line="24" pos:column="40">icmp<pos:position pos:line="24" pos:column="44"/></name></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></sizeof></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">strncpy<pos:position pos:line="25" pos:column="16"/></name> <argument_list pos:line="25" pos:column="17">(<argument><expr><name pos:line="25" pos:column="18">data<pos:position pos:line="25" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="24">ph<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">data<pos:position pos:line="25" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">buflen<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">datalen<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">strlen<pos:position pos:line="26" pos:column="25"/></name> <argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">data<pos:position pos:line="26" pos:column="31"/></name></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><name pos:line="28" pos:column="9">buflen<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <name pos:line="28" pos:column="18">datalen<pos:position pos:line="28" pos:column="25"/></name> <operator pos:line="28" pos:column="26">+<pos:position pos:line="28" pos:column="27"/></operator> <sizeof pos:line="28" pos:column="28">sizeof <argument_list pos:line="28" pos:column="35">(<argument><expr pos:line="28" pos:column="36">struct <name pos:line="28" pos:column="43">icmp<pos:position pos:line="28" pos:column="47"/></name></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></sizeof></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="30" pos:column="9">icmp4<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">icmp_cksum<pos:position pos:line="30" pos:column="26"/></name></name> <operator pos:line="30" pos:column="27">=<pos:position pos:line="30" pos:column="28"/></operator> <call><name pos:line="30" pos:column="29">ping_icmp4_checksum<pos:position pos:line="30" pos:column="48"/></name> <argument_list pos:line="30" pos:column="49">(<argument><expr><name pos:line="30" pos:column="50">buf<pos:position pos:line="30" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="55">buflen<pos:position pos:line="30" pos:column="61"/></name></expr></argument>)<pos:position pos:line="30" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="63"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">dprintf<pos:position pos:line="32" pos:column="16"/></name> <argument_list pos:line="32" pos:column="17">(<argument><expr><literal type="string" pos:line="32" pos:column="18">"Sending ICMPv4 package with ID 0x%04x\n"<pos:position pos:line="32" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="61">ph<pos:position pos:line="32" pos:column="63"/></name><operator pos:line="32" pos:column="63">-&gt;<pos:position pos:line="32" pos:column="68"/></operator><name pos:line="32" pos:column="65">ident<pos:position pos:line="32" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="72"/></expr_stmt>

	<expr_stmt><expr><name pos:line="34" pos:column="9">status<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">ping_sendto<pos:position pos:line="34" pos:column="29"/></name> <argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">obj<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="36">ph<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="40">buf<pos:position pos:line="34" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="45">buflen<pos:position pos:line="34" pos:column="51"/></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">status<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">&lt;<pos:position pos:line="35" pos:column="24"/></operator> <literal type="number" pos:line="35" pos:column="22">0<pos:position pos:line="35" pos:column="23"/></literal></expr>)<pos:position pos:line="35" pos:column="24"/></condition><then pos:line="35" pos:column="24">
	<block pos:line="36" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">perror<pos:position pos:line="37" pos:column="23"/></name> <argument_list pos:line="37" pos:column="24">(<argument><expr><literal type="string" pos:line="37" pos:column="25">"ping_sendto"<pos:position pos:line="37" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>
		<return pos:line="38" pos:column="17">return <expr><operator pos:line="38" pos:column="24">(<pos:position pos:line="38" pos:column="25"/></operator><operator pos:line="38" pos:column="25">-<pos:position pos:line="38" pos:column="26"/></operator><literal type="number" pos:line="38" pos:column="26">1<pos:position pos:line="38" pos:column="27"/></literal><operator pos:line="38" pos:column="27">)<pos:position pos:line="38" pos:column="28"/></operator></expr>;<pos:position pos:line="38" pos:column="29"/></return>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="41" pos:column="9">dprintf<pos:position pos:line="41" pos:column="16"/></name> <argument_list pos:line="41" pos:column="17">(<argument><expr><literal type="string" pos:line="41" pos:column="18">"sendto: status = %i\n"<pos:position pos:line="41" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="43">status<pos:position pos:line="41" pos:column="49"/></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>

	<return pos:line="43" pos:column="9">return <expr><operator pos:line="43" pos:column="16">(<pos:position pos:line="43" pos:column="17"/></operator><literal type="number" pos:line="43" pos:column="17">0<pos:position pos:line="43" pos:column="18"/></literal><operator pos:line="43" pos:column="18">)<pos:position pos:line="43" pos:column="19"/></operator></expr>;<pos:position pos:line="43" pos:column="20"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1324_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">marshal_ident<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">value_list_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">vl<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
                          <parameter><decl><type><name><name pos:line="2" pos:column="27">collectd<pos:position pos:line="2" pos:column="35"/></name><operator pos:line="2" pos:column="35">::<pos:position pos:line="2" pos:column="37"/></operator><name pos:line="2" pos:column="37">types<pos:position pos:line="2" pos:column="42"/></name><operator pos:line="2" pos:column="42">::<pos:position pos:line="2" pos:column="44"/></operator><name pos:line="2" pos:column="44">Identifier<pos:position pos:line="2" pos:column="54"/></name></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">msg<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list> <block pos:line="2" pos:column="61">{
  <expr_stmt><expr><call><name><name pos:line="3" pos:column="3">msg<pos:position pos:line="3" pos:column="6"/></name><operator pos:line="3" pos:column="6">-&gt;<pos:position pos:line="3" pos:column="11"/></operator><name pos:line="3" pos:column="8">set_host<pos:position pos:line="3" pos:column="16"/></name></name><argument_list pos:line="3" pos:column="16">(<argument><expr><name><name pos:line="3" pos:column="17">vl<pos:position pos:line="3" pos:column="19"/></name><operator pos:line="3" pos:column="19">-&gt;<pos:position pos:line="3" pos:column="24"/></operator><name pos:line="3" pos:column="21">host<pos:position pos:line="3" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="4" pos:column="3">msg<pos:position pos:line="4" pos:column="6"/></name><operator pos:line="4" pos:column="6">-&gt;<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="8">set_plugin<pos:position pos:line="4" pos:column="18"/></name></name><argument_list pos:line="4" pos:column="18">(<argument><expr><name><name pos:line="4" pos:column="19">vl<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">-&gt;<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="23">plugin<pos:position pos:line="4" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="31"/></expr_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name><name pos:line="5" pos:column="7">vl<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">-&gt;<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="11">plugin_instance<pos:position pos:line="5" pos:column="26"/></name><index pos:line="5" pos:column="26">[<expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr>]<pos:position pos:line="5" pos:column="29"/></index></name> <operator pos:line="5" pos:column="30">!=<pos:position pos:line="5" pos:column="32"/></operator> <literal type="char" pos:line="5" pos:column="33">'\0'<pos:position pos:line="5" pos:column="37"/></literal></expr>)<pos:position pos:line="5" pos:column="38"/></condition><then pos:line="5" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="6" pos:column="5">msg<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">-&gt;<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="10">set_plugin_instance<pos:position pos:line="6" pos:column="29"/></name></name><argument_list pos:line="6" pos:column="29">(<argument><expr><name><name pos:line="6" pos:column="30">vl<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">plugin_instance<pos:position pos:line="6" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="51"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name><name pos:line="7" pos:column="3">msg<pos:position pos:line="7" pos:column="6"/></name><operator pos:line="7" pos:column="6">-&gt;<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="8">set_type<pos:position pos:line="7" pos:column="16"/></name></name><argument_list pos:line="7" pos:column="16">(<argument><expr><name><name pos:line="7" pos:column="17">vl<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">type<pos:position pos:line="7" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">vl<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">type_instance<pos:position pos:line="8" pos:column="24"/></name><index pos:line="8" pos:column="24">[<expr><literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr>]<pos:position pos:line="8" pos:column="27"/></index></name> <operator pos:line="8" pos:column="28">!=<pos:position pos:line="8" pos:column="30"/></operator> <literal type="char" pos:line="8" pos:column="31">'\0'<pos:position pos:line="8" pos:column="35"/></literal></expr>)<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="9" pos:column="5">msg<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">-&gt;<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="10">set_type_instance<pos:position pos:line="9" pos:column="27"/></name></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name><name pos:line="9" pos:column="28">vl<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">type_instance<pos:position pos:line="9" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="47"/></expr_stmt></block></then></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

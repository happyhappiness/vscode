<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1587_collectd-4.8.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">iptcc_compile_chain_offsets<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">TC_HANDLE_T<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">h<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="55">struct<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">chain_head<pos:position pos:line="1" pos:column="72"/></name></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">c<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
				       <parameter><decl><type><name pos:line="2" pos:column="40">unsigned<pos:position pos:line="2" pos:column="48"/></name> <name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">offset<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">unsigned<pos:position pos:line="2" pos:column="70"/></name> <name pos:line="2" pos:column="71">int<pos:position pos:line="2" pos:column="74"/></name> <modifier pos:line="2" pos:column="75">*<pos:position pos:line="2" pos:column="76"/></modifier></type><name pos:line="2" pos:column="76">num<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">rule_head<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">r<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="6" pos:column="9">c<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">head_offset<pos:position pos:line="6" pos:column="23"/></name></name> <operator pos:line="6" pos:column="24">=<pos:position pos:line="6" pos:column="25"/></operator> <operator pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">offset<pos:position pos:line="6" pos:column="33"/></name></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">DEBUGP<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="string" pos:line="7" pos:column="16">"%s: chain_head %u, offset=%u\n"<pos:position pos:line="7" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="50">c<pos:position pos:line="7" pos:column="51"/></name><operator pos:line="7" pos:column="51">-&gt;<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="53">name<pos:position pos:line="7" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="59">*<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="60">num<pos:position pos:line="7" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="65">*<pos:position pos:line="7" pos:column="66"/></operator><name pos:line="7" pos:column="66">offset<pos:position pos:line="7" pos:column="72"/></name></expr></argument>)<pos:position pos:line="7" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="74"/></expr_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">iptcc_is_builtin<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">c<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34">  <block pos:line="9" pos:column="36">{
		<comment type="block" pos:line="10" pos:column="17">/* Chain has header */</comment>
		<expr_stmt><expr><operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">offset<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">+=<pos:position pos:line="11" pos:column="27"/></operator> <sizeof pos:line="11" pos:column="28">sizeof<argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">STRUCT_ENTRY<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></sizeof> 
			     <operator pos:line="12" pos:column="30">+<pos:position pos:line="12" pos:column="31"/></operator> <call><name pos:line="12" pos:column="32">ALIGN<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><sizeof pos:line="12" pos:column="38">sizeof<argument_list pos:line="12" pos:column="44">(<argument><expr pos:line="12" pos:column="45">struct <name pos:line="12" pos:column="52">ipt_error_target<pos:position pos:line="12" pos:column="68"/></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="13" pos:column="17">(<pos:position pos:line="13" pos:column="18"/></operator><operator pos:line="13" pos:column="18">*<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">num<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">)<pos:position pos:line="13" pos:column="23"/></operator><operator pos:line="13" pos:column="23">++<pos:position pos:line="13" pos:column="25"/></operator></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<macro><name pos:line="16" pos:column="9">list_for_each_entry<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument pos:line="16" pos:column="29">r<pos:position pos:line="16" pos:column="30"/></argument>, <argument pos:line="16" pos:column="32">&amp;c-&gt;rules<pos:position pos:line="16" pos:column="41"/></argument>, <argument pos:line="16" pos:column="43">list<pos:position pos:line="16" pos:column="47"/></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></macro> <block pos:line="16" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">DEBUGP<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><literal type="string" pos:line="17" pos:column="24">"rule %u, offset=%u, index=%u\n"<pos:position pos:line="17" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="58">*<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="59">num<pos:position pos:line="17" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="64">*<pos:position pos:line="17" pos:column="65"/></operator><name pos:line="17" pos:column="65">offset<pos:position pos:line="17" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="73">*<pos:position pos:line="17" pos:column="74"/></operator><name pos:line="17" pos:column="74">num<pos:position pos:line="17" pos:column="77"/></name></expr></argument>)<pos:position pos:line="17" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">r<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">offset<pos:position pos:line="18" pos:column="26"/></name></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <operator pos:line="18" pos:column="29">*<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">offset<pos:position pos:line="18" pos:column="36"/></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">r<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">index<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <operator pos:line="19" pos:column="28">*<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">num<pos:position pos:line="19" pos:column="32"/></name></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="20" pos:column="17">*<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">offset<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">+=<pos:position pos:line="20" pos:column="27"/></operator> <name><name pos:line="20" pos:column="28">r<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">size<pos:position pos:line="20" pos:column="35"/></name></name></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="21" pos:column="17">(<pos:position pos:line="21" pos:column="18"/></operator><operator pos:line="21" pos:column="18">*<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">num<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">)<pos:position pos:line="21" pos:column="23"/></operator><operator pos:line="21" pos:column="23">++<pos:position pos:line="21" pos:column="25"/></operator></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block>

	<expr_stmt><expr><call><name pos:line="24" pos:column="9">DEBUGP<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="string" pos:line="24" pos:column="16">"%s; chain_foot %u, offset=%u, index=%u\n"<pos:position pos:line="24" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="60">c<pos:position pos:line="24" pos:column="61"/></name><operator pos:line="24" pos:column="61">-&gt;<pos:position pos:line="24" pos:column="66"/></operator><name pos:line="24" pos:column="63">name<pos:position pos:line="24" pos:column="67"/></name></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="69">*<pos:position pos:line="24" pos:column="70"/></operator><name pos:line="24" pos:column="70">num<pos:position pos:line="24" pos:column="73"/></name></expr></argument>, 
		<argument><expr><operator pos:line="25" pos:column="17">*<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">offset<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="26">*<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="27">num<pos:position pos:line="25" pos:column="30"/></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">c<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">foot_offset<pos:position pos:line="26" pos:column="23"/></name></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <operator pos:line="26" pos:column="26">*<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="27">offset<pos:position pos:line="26" pos:column="33"/></name></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">c<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">foot_index<pos:position pos:line="27" pos:column="22"/></name></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <operator pos:line="27" pos:column="25">*<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">num<pos:position pos:line="27" pos:column="29"/></name></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="28" pos:column="9">*<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">offset<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">+=<pos:position pos:line="28" pos:column="19"/></operator> <sizeof pos:line="28" pos:column="20">sizeof<argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">STRUCT_ENTRY<pos:position pos:line="28" pos:column="39"/></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></sizeof>
		   <operator pos:line="29" pos:column="20">+<pos:position pos:line="29" pos:column="21"/></operator> <call><name pos:line="29" pos:column="22">ALIGN<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><sizeof pos:line="29" pos:column="28">sizeof<argument_list pos:line="29" pos:column="34">(<argument><expr><name pos:line="29" pos:column="35">STRUCT_STANDARD_TARGET<pos:position pos:line="29" pos:column="57"/></name></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><operator pos:line="30" pos:column="10">*<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">num<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">)<pos:position pos:line="30" pos:column="15"/></operator><operator pos:line="30" pos:column="15">++<pos:position pos:line="30" pos:column="17"/></operator></expr>;<pos:position pos:line="30" pos:column="18"/></expr_stmt>

	<return pos:line="32" pos:column="9">return <expr><literal type="number" pos:line="32" pos:column="16">1<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

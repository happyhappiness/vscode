<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_473_collectd-4.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cjni_create_jvm<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list> <comment type="block" pos:line="1" pos:column="35">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">JNIEnv<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">jvm_env<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">JavaVMInitArgs<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">vm_args<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">JavaVMOption<pos:position pos:line="5" pos:column="15"/></name></type> <name><name pos:line="5" pos:column="16">vm_options<pos:position pos:line="5" pos:column="26"/></name><index pos:line="5" pos:column="26">[<expr><name pos:line="5" pos:column="27">jvm_argc<pos:position pos:line="5" pos:column="35"/></name></expr>]<pos:position pos:line="5" pos:column="36"/></index></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">jvm<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">!=<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">NULL<pos:position pos:line="10" pos:column="18"/></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">0<pos:position pos:line="11" pos:column="14"/></literal><operator pos:line="11" pos:column="14">)<pos:position pos:line="11" pos:column="15"/></operator></expr>;<pos:position pos:line="11" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">status<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <call><name pos:line="13" pos:column="12">pthread_key_create<pos:position pos:line="13" pos:column="30"/></name> <argument_list pos:line="13" pos:column="31">(<argument><expr><operator pos:line="13" pos:column="32">&amp;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="33">jvm_env_key<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">cjni_jvm_env_destroy<pos:position pos:line="13" pos:column="66"/></name></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">status<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">!=<pos:position pos:line="14" pos:column="16"/></operator> <literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19">
  <block pos:line="15" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">ERROR<pos:position pos:line="16" pos:column="10"/></name> <argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="string" pos:line="16" pos:column="12">"java plugin: cjni_create_jvm: pthread_key_create failed "<pos:position pos:line="16" pos:column="70"/></literal>
        <literal type="string" pos:line="17" pos:column="9">"with status %i."<pos:position pos:line="17" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="28">status<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><operator pos:line="18" pos:column="13">-<pos:position pos:line="18" pos:column="14"/></operator><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal><operator pos:line="18" pos:column="15">)<pos:position pos:line="18" pos:column="16"/></operator></expr>;<pos:position pos:line="18" pos:column="17"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="21" pos:column="3">jvm_env<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">NULL<pos:position pos:line="21" pos:column="17"/></name></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">memset<pos:position pos:line="23" pos:column="9"/></name> <argument_list pos:line="23" pos:column="10">(<argument><expr><operator pos:line="23" pos:column="11">&amp;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="12">vm_args<pos:position pos:line="23" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="21">0<pos:position pos:line="23" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="24">sizeof <argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">vm_args<pos:position pos:line="23" pos:column="39"/></name></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">vm_args<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">.<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">version<pos:position pos:line="24" pos:column="18"/></name></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">JNI_VERSION_1_2<pos:position pos:line="24" pos:column="36"/></name></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">vm_args<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">.<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">options<pos:position pos:line="25" pos:column="18"/></name></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">vm_options<pos:position pos:line="25" pos:column="31"/></name></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">vm_args<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">.<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">nOptions<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <operator pos:line="26" pos:column="22">(<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">jint<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">)<pos:position pos:line="26" pos:column="28"/></operator> <name pos:line="26" pos:column="29">jvm_argc<pos:position pos:line="26" pos:column="37"/></name></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>

  <for pos:line="28" pos:column="3">for <control pos:line="28" pos:column="7">(<init><expr><name pos:line="28" pos:column="8">i<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></init> <condition><expr><name pos:line="28" pos:column="15">i<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">&lt;<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="19">jvm_argc<pos:position pos:line="28" pos:column="27"/></name></expr>;<pos:position pos:line="28" pos:column="28"/></condition> <incr><expr><name pos:line="28" pos:column="29">i<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">++<pos:position pos:line="28" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="33"/></control>
  <block pos:line="29" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">DEBUG<pos:position pos:line="30" pos:column="10"/></name> <argument_list pos:line="30" pos:column="11">(<argument><expr><literal type="string" pos:line="30" pos:column="12">"java plugin: cjni_create_jvm: jvm_argv[%zu] = %s"<pos:position pos:line="30" pos:column="62"/></literal></expr></argument>,
        <argument><expr><name pos:line="31" pos:column="9">i<pos:position pos:line="31" pos:column="10"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="12">jvm_argv<pos:position pos:line="31" pos:column="20"/></name><index pos:line="31" pos:column="20">[<expr><name pos:line="31" pos:column="21">i<pos:position pos:line="31" pos:column="22"/></name></expr>]<pos:position pos:line="31" pos:column="23"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">vm_args<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">.<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">options<pos:position pos:line="32" pos:column="20"/></name><index pos:line="32" pos:column="20">[<expr><name pos:line="32" pos:column="21">i<pos:position pos:line="32" pos:column="22"/></name></expr>]<pos:position pos:line="32" pos:column="23"/></index></name><operator pos:line="32" pos:column="23">.<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">optionString<pos:position pos:line="32" pos:column="36"/></name> <operator pos:line="32" pos:column="37">=<pos:position pos:line="32" pos:column="38"/></operator> <name><name pos:line="32" pos:column="39">jvm_argv<pos:position pos:line="32" pos:column="47"/></name><index pos:line="32" pos:column="47">[<expr><name pos:line="32" pos:column="48">i<pos:position pos:line="32" pos:column="49"/></name></expr>]<pos:position pos:line="32" pos:column="50"/></index></name></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="35" pos:column="3">status<pos:position pos:line="35" pos:column="9"/></name> <operator pos:line="35" pos:column="10">=<pos:position pos:line="35" pos:column="11"/></operator> <call><name pos:line="35" pos:column="12">JNI_CreateJavaVM<pos:position pos:line="35" pos:column="28"/></name> <argument_list pos:line="35" pos:column="29">(<argument><expr><operator pos:line="35" pos:column="30">&amp;<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="31">jvm<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="36">(<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="37">void<pos:position pos:line="35" pos:column="41"/></name> <operator pos:line="35" pos:column="42">*<pos:position pos:line="35" pos:column="43"/></operator><operator pos:line="35" pos:column="43">)<pos:position pos:line="35" pos:column="44"/></operator> <operator pos:line="35" pos:column="45">&amp;<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="46">jvm_env<pos:position pos:line="35" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="55">(<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="56">void<pos:position pos:line="35" pos:column="60"/></name> <operator pos:line="35" pos:column="61">*<pos:position pos:line="35" pos:column="62"/></operator><operator pos:line="35" pos:column="62">)<pos:position pos:line="35" pos:column="63"/></operator> <operator pos:line="35" pos:column="64">&amp;<pos:position pos:line="35" pos:column="69"/></operator><name pos:line="35" pos:column="65">vm_args<pos:position pos:line="35" pos:column="72"/></name></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="74"/></expr_stmt>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">status<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">!=<pos:position pos:line="36" pos:column="16"/></operator> <literal type="number" pos:line="36" pos:column="17">0<pos:position pos:line="36" pos:column="18"/></literal></expr>)<pos:position pos:line="36" pos:column="19"/></condition><then pos:line="36" pos:column="19">
  <block pos:line="37" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">ERROR<pos:position pos:line="38" pos:column="10"/></name> <argument_list pos:line="38" pos:column="11">(<argument><expr><literal type="string" pos:line="38" pos:column="12">"java plugin: cjni_create_jvm: "<pos:position pos:line="38" pos:column="44"/></literal>
        <literal type="string" pos:line="39" pos:column="9">"JNI_CreateJavaVM failed with status %i."<pos:position pos:line="39" pos:column="50"/></literal></expr></argument>,
	<argument><expr><name pos:line="40" pos:column="9">status<pos:position pos:line="40" pos:column="15"/></name></expr></argument>)<pos:position pos:line="40" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="17"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><operator pos:line="41" pos:column="13">-<pos:position pos:line="41" pos:column="14"/></operator><literal type="number" pos:line="41" pos:column="14">1<pos:position pos:line="41" pos:column="15"/></literal><operator pos:line="41" pos:column="15">)<pos:position pos:line="41" pos:column="16"/></operator></expr>;<pos:position pos:line="41" pos:column="17"/></return>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">assert<pos:position pos:line="43" pos:column="9"/></name> <argument_list pos:line="43" pos:column="10">(<argument><expr><name pos:line="43" pos:column="11">jvm<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">!=<pos:position pos:line="43" pos:column="17"/></operator> <name pos:line="43" pos:column="18">NULL<pos:position pos:line="43" pos:column="22"/></name></expr></argument>)<pos:position pos:line="43" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">assert<pos:position pos:line="44" pos:column="9"/></name> <argument_list pos:line="44" pos:column="10">(<argument><expr><name pos:line="44" pos:column="11">jvm_env<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">!=<pos:position pos:line="44" pos:column="21"/></operator> <name pos:line="44" pos:column="22">NULL<pos:position pos:line="44" pos:column="26"/></name></expr></argument>)<pos:position pos:line="44" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="46" pos:column="3">/* Call RegisterNatives */</comment>
  <expr_stmt><expr><name pos:line="47" pos:column="3">status<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">=<pos:position pos:line="47" pos:column="11"/></operator> <call><name pos:line="47" pos:column="12">cjni_init_native<pos:position pos:line="47" pos:column="28"/></name> <argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">jvm_env<pos:position pos:line="47" pos:column="37"/></name></expr></argument>)<pos:position pos:line="47" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="39"/></expr_stmt>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name pos:line="48" pos:column="7">status<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">!=<pos:position pos:line="48" pos:column="16"/></operator> <literal type="number" pos:line="48" pos:column="17">0<pos:position pos:line="48" pos:column="18"/></literal></expr>)<pos:position pos:line="48" pos:column="19"/></condition><then pos:line="48" pos:column="19">
  <block pos:line="49" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">ERROR<pos:position pos:line="50" pos:column="10"/></name> <argument_list pos:line="50" pos:column="11">(<argument><expr><literal type="string" pos:line="50" pos:column="12">"java plugin: cjni_create_jvm: cjni_init_native failed."<pos:position pos:line="50" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="70"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><operator pos:line="51" pos:column="13">-<pos:position pos:line="51" pos:column="14"/></operator><literal type="number" pos:line="51" pos:column="14">1<pos:position pos:line="51" pos:column="15"/></literal><operator pos:line="51" pos:column="15">)<pos:position pos:line="51" pos:column="16"/></operator></expr>;<pos:position pos:line="51" pos:column="17"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="54" pos:column="3">DEBUG<pos:position pos:line="54" pos:column="8"/></name> <argument_list pos:line="54" pos:column="9">(<argument><expr><literal type="string" pos:line="54" pos:column="10">"java plugin: The JVM has been created."<pos:position pos:line="54" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="52"/></expr_stmt>
  <return pos:line="55" pos:column="3">return <expr><operator pos:line="55" pos:column="10">(<pos:position pos:line="55" pos:column="11"/></operator><literal type="number" pos:line="55" pos:column="11">0<pos:position pos:line="55" pos:column="12"/></literal><operator pos:line="55" pos:column="12">)<pos:position pos:line="55" pos:column="13"/></operator></expr>;<pos:position pos:line="55" pos:column="14"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_249_collectd-4.5.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_shutdown<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">host_definition_t<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">host_this<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">host_definition_t<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">host_next<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">data_definition_t<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">data_this<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">data_definition_t<pos:position pos:line="7" pos:column="20"/></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">data_next<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">i<pos:position pos:line="9" pos:column="8"/></name></decl>;<pos:position pos:line="9" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">pthread_mutex_lock<pos:position pos:line="11" pos:column="21"/></name> <argument_list pos:line="11" pos:column="22">(<argument><expr><operator pos:line="11" pos:column="23">&amp;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="24">host_lock<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">do_shutdown<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <literal type="number" pos:line="12" pos:column="17">1<pos:position pos:line="12" pos:column="18"/></literal></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">pthread_cond_broadcast<pos:position pos:line="13" pos:column="25"/></name> <argument_list pos:line="13" pos:column="26">(<argument><expr><operator pos:line="13" pos:column="27">&amp;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="28">host_cond<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">pthread_mutex_unlock<pos:position pos:line="14" pos:column="23"/></name> <argument_list pos:line="14" pos:column="24">(<argument><expr><operator pos:line="14" pos:column="25">&amp;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="26">host_lock<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt>

  <for pos:line="16" pos:column="3">for <control pos:line="16" pos:column="7">(<init><expr><name pos:line="16" pos:column="8">i<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <literal type="number" pos:line="16" pos:column="12">0<pos:position pos:line="16" pos:column="13"/></literal></expr>;<pos:position pos:line="16" pos:column="14"/></init> <condition><expr><name pos:line="16" pos:column="15">i<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">&lt;<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="19">threads_num<pos:position pos:line="16" pos:column="30"/></name></expr>;<pos:position pos:line="16" pos:column="31"/></condition> <incr><expr><name pos:line="16" pos:column="32">i<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">++<pos:position pos:line="16" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="36"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="5">pthread_join<pos:position pos:line="17" pos:column="17"/></name> <argument_list pos:line="17" pos:column="18">(<argument><expr><name><name pos:line="17" pos:column="19">threads<pos:position pos:line="17" pos:column="26"/></name><index pos:line="17" pos:column="26">[<expr><name pos:line="17" pos:column="27">i<pos:position pos:line="17" pos:column="28"/></name></expr>]<pos:position pos:line="17" pos:column="29"/></index></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="31">NULL<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt></block></for>

  <comment type="block" pos:line="19" pos:column="3">/* Now that all the threads have exited, let's free all the global variables.
   * This isn't really neccessary, I guess, but I think it's good stile to do
   * so anyway. */</comment>
  <expr_stmt><expr><name pos:line="22" pos:column="3">host_this<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">host_head<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="23" pos:column="3">host_head<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">NULL<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
  <while pos:line="24" pos:column="3">while <condition pos:line="24" pos:column="9">(<expr><name pos:line="24" pos:column="10">host_this<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">!=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">NULL<pos:position pos:line="24" pos:column="27"/></name></expr>)<pos:position pos:line="24" pos:column="28"/></condition>
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><name pos:line="26" pos:column="5">host_next<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <name><name pos:line="26" pos:column="17">host_this<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">next<pos:position pos:line="26" pos:column="32"/></name></name></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">csnmp_host_close_session<pos:position pos:line="28" pos:column="29"/></name> <argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">host_this<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">sfree<pos:position pos:line="30" pos:column="10"/></name> <argument_list pos:line="30" pos:column="11">(<argument><expr><name><name pos:line="30" pos:column="12">host_this<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">-&gt;<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="23">name<pos:position pos:line="30" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">sfree<pos:position pos:line="31" pos:column="10"/></name> <argument_list pos:line="31" pos:column="11">(<argument><expr><name><name pos:line="31" pos:column="12">host_this<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">address<pos:position pos:line="31" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">sfree<pos:position pos:line="32" pos:column="10"/></name> <argument_list pos:line="32" pos:column="11">(<argument><expr><name><name pos:line="32" pos:column="12">host_this<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">community<pos:position pos:line="32" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">sfree<pos:position pos:line="33" pos:column="10"/></name> <argument_list pos:line="33" pos:column="11">(<argument><expr><name><name pos:line="33" pos:column="12">host_this<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">data_list<pos:position pos:line="33" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">sfree<pos:position pos:line="34" pos:column="10"/></name> <argument_list pos:line="34" pos:column="11">(<argument><expr><name pos:line="34" pos:column="12">host_this<pos:position pos:line="34" pos:column="21"/></name></expr></argument>)<pos:position pos:line="34" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name pos:line="36" pos:column="5">host_this<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <name pos:line="36" pos:column="17">host_next<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></while>

  <expr_stmt><expr><name pos:line="39" pos:column="3">data_this<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <name pos:line="39" pos:column="15">data_head<pos:position pos:line="39" pos:column="24"/></name></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="40" pos:column="3">data_head<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <name pos:line="40" pos:column="15">NULL<pos:position pos:line="40" pos:column="19"/></name></expr>;<pos:position pos:line="40" pos:column="20"/></expr_stmt>
  <while pos:line="41" pos:column="3">while <condition pos:line="41" pos:column="9">(<expr><name pos:line="41" pos:column="10">data_this<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">!=<pos:position pos:line="41" pos:column="22"/></operator> <name pos:line="41" pos:column="23">NULL<pos:position pos:line="41" pos:column="27"/></name></expr>)<pos:position pos:line="41" pos:column="28"/></condition>
  <block pos:line="42" pos:column="3">{
    <expr_stmt><expr><name pos:line="43" pos:column="5">data_next<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <name><name pos:line="43" pos:column="17">data_this<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">-&gt;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="28">next<pos:position pos:line="43" pos:column="32"/></name></name></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">sfree<pos:position pos:line="45" pos:column="10"/></name> <argument_list pos:line="45" pos:column="11">(<argument><expr><name><name pos:line="45" pos:column="12">data_this<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">name<pos:position pos:line="45" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">sfree<pos:position pos:line="46" pos:column="10"/></name> <argument_list pos:line="46" pos:column="11">(<argument><expr><name><name pos:line="46" pos:column="12">data_this<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">-&gt;<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="23">type<pos:position pos:line="46" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">sfree<pos:position pos:line="47" pos:column="10"/></name> <argument_list pos:line="47" pos:column="11">(<argument><expr><name><name pos:line="47" pos:column="12">data_this<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">-&gt;<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="23">values<pos:position pos:line="47" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">sfree<pos:position pos:line="48" pos:column="10"/></name> <argument_list pos:line="48" pos:column="11">(<argument><expr><name pos:line="48" pos:column="12">data_this<pos:position pos:line="48" pos:column="21"/></name></expr></argument>)<pos:position pos:line="48" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name pos:line="50" pos:column="5">data_this<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <name pos:line="50" pos:column="17">data_next<pos:position pos:line="50" pos:column="26"/></name></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></while>

  <return pos:line="53" pos:column="3">return <expr><operator pos:line="53" pos:column="10">(<pos:position pos:line="53" pos:column="11"/></operator><literal type="number" pos:line="53" pos:column="11">0<pos:position pos:line="53" pos:column="12"/></literal><operator pos:line="53" pos:column="12">)<pos:position pos:line="53" pos:column="13"/></operator></expr>;<pos:position pos:line="53" pos:column="14"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

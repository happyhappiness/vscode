<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_609_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">agg_config_aggregation<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">oconfig_item_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ci<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list> <comment type="block" pos:line="1" pos:column="56">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">aggregation_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">agg<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">_Bool<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">is_valid<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">agg<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">calloc<pos:position pos:line="7" pos:column="15"/></name> <argument_list pos:line="7" pos:column="16">(<argument><expr><literal type="number" pos:line="7" pos:column="17">1<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="20">sizeof <argument_list pos:line="7" pos:column="27">(<argument><expr><operator pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">agg<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">agg<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">==<pos:position pos:line="8" pos:column="13"/></operator> <name pos:line="8" pos:column="14">NULL<pos:position pos:line="8" pos:column="18"/></name></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name> <argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="string" pos:line="10" pos:column="12">"aggregation plugin: calloc failed."<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">sstrncpy<pos:position pos:line="14" pos:column="11"/></name> <argument_list pos:line="14" pos:column="12">(<argument><expr><name><name pos:line="14" pos:column="13">agg<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">ident<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">.<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">host<pos:position pos:line="14" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="30">"/.*/"<pos:position pos:line="14" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="38">sizeof <argument_list pos:line="14" pos:column="45">(<argument><expr><name><name pos:line="14" pos:column="46">agg<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">-&gt;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="51">ident<pos:position pos:line="14" pos:column="56"/></name><operator pos:line="14" pos:column="56">.<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="57">host<pos:position pos:line="14" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">sstrncpy<pos:position pos:line="15" pos:column="11"/></name> <argument_list pos:line="15" pos:column="12">(<argument><expr><name><name pos:line="15" pos:column="13">agg<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">ident<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">.<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">plugin<pos:position pos:line="15" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="32">"/.*/"<pos:position pos:line="15" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="40">sizeof <argument_list pos:line="15" pos:column="47">(<argument><expr><name><name pos:line="15" pos:column="48">agg<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">ident<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">.<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="59">plugin<pos:position pos:line="15" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">sstrncpy<pos:position pos:line="16" pos:column="11"/></name> <argument_list pos:line="16" pos:column="12">(<argument><expr><name><name pos:line="16" pos:column="13">agg<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">ident<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">.<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">plugin_instance<pos:position pos:line="16" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="41">"/.*/"<pos:position pos:line="16" pos:column="47"/></literal></expr></argument>,
      <argument><expr><sizeof pos:line="17" pos:column="7">sizeof <argument_list pos:line="17" pos:column="14">(<argument><expr><name><name pos:line="17" pos:column="15">agg<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">ident<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">.<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">plugin_instance<pos:position pos:line="17" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">sstrncpy<pos:position pos:line="18" pos:column="11"/></name> <argument_list pos:line="18" pos:column="12">(<argument><expr><name><name pos:line="18" pos:column="13">agg<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">ident<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">.<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="24">type<pos:position pos:line="18" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="30">"/.*/"<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="38">sizeof <argument_list pos:line="18" pos:column="45">(<argument><expr><name><name pos:line="18" pos:column="46">agg<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">ident<pos:position pos:line="18" pos:column="56"/></name><operator pos:line="18" pos:column="56">.<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="57">type<pos:position pos:line="18" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">sstrncpy<pos:position pos:line="19" pos:column="11"/></name> <argument_list pos:line="19" pos:column="12">(<argument><expr><name><name pos:line="19" pos:column="13">agg<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">ident<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">.<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">type_instance<pos:position pos:line="19" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="39">"/.*/"<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>,
      <argument><expr><sizeof pos:line="20" pos:column="7">sizeof <argument_list pos:line="20" pos:column="14">(<argument><expr><name><name pos:line="20" pos:column="15">agg<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">ident<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">.<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">type_instance<pos:position pos:line="20" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt>

  <for pos:line="22" pos:column="3">for <control pos:line="22" pos:column="7">(<init><decl><type><name pos:line="22" pos:column="8">int<pos:position pos:line="22" pos:column="11"/></name></type> <name pos:line="22" pos:column="12">i<pos:position pos:line="22" pos:column="13"/></name> <init pos:line="22" pos:column="14">= <expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="18"/></init> <condition><expr><name pos:line="22" pos:column="19">i<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">&lt;<pos:position pos:line="22" pos:column="25"/></operator> <name><name pos:line="22" pos:column="23">ci<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">-&gt;<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="27">children_num<pos:position pos:line="22" pos:column="39"/></name></name></expr>;<pos:position pos:line="22" pos:column="40"/></condition> <incr><expr><name pos:line="22" pos:column="41">i<pos:position pos:line="22" pos:column="42"/></name><operator pos:line="22" pos:column="42">++<pos:position pos:line="22" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="45"/></control>
  <block pos:line="23" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">oconfig_item_t<pos:position pos:line="24" pos:column="19"/></name> <modifier pos:line="24" pos:column="20">*<pos:position pos:line="24" pos:column="21"/></modifier></type><name pos:line="24" pos:column="21">child<pos:position pos:line="24" pos:column="26"/></name> <init pos:line="24" pos:column="27">= <expr><name><name pos:line="24" pos:column="29">ci<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">-&gt;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="33">children<pos:position pos:line="24" pos:column="41"/></name></name> <operator pos:line="24" pos:column="42">+<pos:position pos:line="24" pos:column="43"/></operator> <name pos:line="24" pos:column="44">i<pos:position pos:line="24" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="46"/></decl_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name pos:line="26" pos:column="9">strcasecmp<pos:position pos:line="26" pos:column="19"/></name> <argument_list pos:line="26" pos:column="20">(<argument><expr><literal type="string" pos:line="26" pos:column="21">"Host"<pos:position pos:line="26" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="29">child<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">-&gt;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="36">key<pos:position pos:line="26" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call> <operator pos:line="26" pos:column="41">==<pos:position pos:line="26" pos:column="43"/></operator> <literal type="number" pos:line="26" pos:column="44">0<pos:position pos:line="26" pos:column="45"/></literal></expr>)<pos:position pos:line="26" pos:column="46"/></condition><then pos:line="26" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="7">cf_util_get_string_buffer<pos:position pos:line="27" pos:column="32"/></name> <argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">child<pos:position pos:line="27" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="41">agg<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">-&gt;<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="46">ident<pos:position pos:line="27" pos:column="51"/></name><operator pos:line="27" pos:column="51">.<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="52">host<pos:position pos:line="27" pos:column="56"/></name></name></expr></argument>,
          <argument><expr><sizeof pos:line="28" pos:column="11">sizeof <argument_list pos:line="28" pos:column="18">(<argument><expr><name><name pos:line="28" pos:column="19">agg<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">ident<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">.<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">host<pos:position pos:line="28" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt></block></then>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><call><name pos:line="29" pos:column="14">strcasecmp<pos:position pos:line="29" pos:column="24"/></name> <argument_list pos:line="29" pos:column="25">(<argument><expr><literal type="string" pos:line="29" pos:column="26">"Plugin"<pos:position pos:line="29" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="36">child<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">-&gt;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="43">key<pos:position pos:line="29" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call> <operator pos:line="29" pos:column="48">==<pos:position pos:line="29" pos:column="50"/></operator> <literal type="number" pos:line="29" pos:column="51">0<pos:position pos:line="29" pos:column="52"/></literal></expr>)<pos:position pos:line="29" pos:column="53"/></condition><then pos:line="29" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="7">cf_util_get_string_buffer<pos:position pos:line="30" pos:column="32"/></name> <argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">child<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="41">agg<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">-&gt;<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="46">ident<pos:position pos:line="30" pos:column="51"/></name><operator pos:line="30" pos:column="51">.<pos:position pos:line="30" pos:column="52"/></operator><name pos:line="30" pos:column="52">plugin<pos:position pos:line="30" pos:column="58"/></name></name></expr></argument>,
          <argument><expr><sizeof pos:line="31" pos:column="11">sizeof <argument_list pos:line="31" pos:column="18">(<argument><expr><name><name pos:line="31" pos:column="19">agg<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">-&gt;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="24">ident<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">.<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="30">plugin<pos:position pos:line="31" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><call><name pos:line="32" pos:column="14">strcasecmp<pos:position pos:line="32" pos:column="24"/></name> <argument_list pos:line="32" pos:column="25">(<argument><expr><literal type="string" pos:line="32" pos:column="26">"PluginInstance"<pos:position pos:line="32" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="44">child<pos:position pos:line="32" pos:column="49"/></name><operator pos:line="32" pos:column="49">-&gt;<pos:position pos:line="32" pos:column="54"/></operator><name pos:line="32" pos:column="51">key<pos:position pos:line="32" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></call> <operator pos:line="32" pos:column="56">==<pos:position pos:line="32" pos:column="58"/></operator> <literal type="number" pos:line="32" pos:column="59">0<pos:position pos:line="32" pos:column="60"/></literal></expr>)<pos:position pos:line="32" pos:column="61"/></condition><then pos:line="32" pos:column="61">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="7">cf_util_get_string_buffer<pos:position pos:line="33" pos:column="32"/></name> <argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">child<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="41">agg<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">-&gt;<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="46">ident<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">.<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="52">plugin_instance<pos:position pos:line="33" pos:column="67"/></name></name></expr></argument>,
          <argument><expr><sizeof pos:line="34" pos:column="11">sizeof <argument_list pos:line="34" pos:column="18">(<argument><expr><name><name pos:line="34" pos:column="19">agg<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">ident<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">.<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="30">plugin_instance<pos:position pos:line="34" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="35" pos:column="5">else <if pos:line="35" pos:column="10">if <condition pos:line="35" pos:column="13">(<expr><call><name pos:line="35" pos:column="14">strcasecmp<pos:position pos:line="35" pos:column="24"/></name> <argument_list pos:line="35" pos:column="25">(<argument><expr><literal type="string" pos:line="35" pos:column="26">"Type"<pos:position pos:line="35" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="34">child<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">-&gt;<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="41">key<pos:position pos:line="35" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call> <operator pos:line="35" pos:column="46">==<pos:position pos:line="35" pos:column="48"/></operator> <literal type="number" pos:line="35" pos:column="49">0<pos:position pos:line="35" pos:column="50"/></literal></expr>)<pos:position pos:line="35" pos:column="51"/></condition><then pos:line="35" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="7">cf_util_get_string_buffer<pos:position pos:line="36" pos:column="32"/></name> <argument_list pos:line="36" pos:column="33">(<argument><expr><name pos:line="36" pos:column="34">child<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="41">agg<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">-&gt;<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="46">ident<pos:position pos:line="36" pos:column="51"/></name><operator pos:line="36" pos:column="51">.<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="52">type<pos:position pos:line="36" pos:column="56"/></name></name></expr></argument>,
          <argument><expr><sizeof pos:line="37" pos:column="11">sizeof <argument_list pos:line="37" pos:column="18">(<argument><expr><name><name pos:line="37" pos:column="19">agg<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">-&gt;<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="24">ident<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">.<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="30">type<pos:position pos:line="37" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><call><name pos:line="38" pos:column="14">strcasecmp<pos:position pos:line="38" pos:column="24"/></name> <argument_list pos:line="38" pos:column="25">(<argument><expr><literal type="string" pos:line="38" pos:column="26">"TypeInstance"<pos:position pos:line="38" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="42">child<pos:position pos:line="38" pos:column="47"/></name><operator pos:line="38" pos:column="47">-&gt;<pos:position pos:line="38" pos:column="52"/></operator><name pos:line="38" pos:column="49">key<pos:position pos:line="38" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call> <operator pos:line="38" pos:column="54">==<pos:position pos:line="38" pos:column="56"/></operator> <literal type="number" pos:line="38" pos:column="57">0<pos:position pos:line="38" pos:column="58"/></literal></expr>)<pos:position pos:line="38" pos:column="59"/></condition><then pos:line="38" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="7">cf_util_get_string_buffer<pos:position pos:line="39" pos:column="32"/></name> <argument_list pos:line="39" pos:column="33">(<argument><expr><name pos:line="39" pos:column="34">child<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="41">agg<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">-&gt;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="46">ident<pos:position pos:line="39" pos:column="51"/></name><operator pos:line="39" pos:column="51">.<pos:position pos:line="39" pos:column="52"/></operator><name pos:line="39" pos:column="52">type_instance<pos:position pos:line="39" pos:column="65"/></name></name></expr></argument>,
          <argument><expr><sizeof pos:line="40" pos:column="11">sizeof <argument_list pos:line="40" pos:column="18">(<argument><expr><name><name pos:line="40" pos:column="19">agg<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">-&gt;<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="24">ident<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">.<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="30">type_instance<pos:position pos:line="40" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><call><name pos:line="41" pos:column="14">strcasecmp<pos:position pos:line="41" pos:column="24"/></name> <argument_list pos:line="41" pos:column="25">(<argument><expr><literal type="string" pos:line="41" pos:column="26">"SetHost"<pos:position pos:line="41" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="37">child<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">-&gt;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="44">key<pos:position pos:line="41" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call> <operator pos:line="41" pos:column="49">==<pos:position pos:line="41" pos:column="51"/></operator> <literal type="number" pos:line="41" pos:column="52">0<pos:position pos:line="41" pos:column="53"/></literal></expr>)<pos:position pos:line="41" pos:column="54"/></condition><then pos:line="41" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="7">cf_util_get_string<pos:position pos:line="42" pos:column="25"/></name> <argument_list pos:line="42" pos:column="26">(<argument><expr><name pos:line="42" pos:column="27">child<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="34">&amp;<pos:position pos:line="42" pos:column="39"/></operator><name><name pos:line="42" pos:column="35">agg<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">-&gt;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="40">set_host<pos:position pos:line="42" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="50"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="43" pos:column="5">else <if pos:line="43" pos:column="10">if <condition pos:line="43" pos:column="13">(<expr><call><name pos:line="43" pos:column="14">strcasecmp<pos:position pos:line="43" pos:column="24"/></name> <argument_list pos:line="43" pos:column="25">(<argument><expr><literal type="string" pos:line="43" pos:column="26">"SetPlugin"<pos:position pos:line="43" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="39">child<pos:position pos:line="43" pos:column="44"/></name><operator pos:line="43" pos:column="44">-&gt;<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="46">key<pos:position pos:line="43" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call> <operator pos:line="43" pos:column="51">==<pos:position pos:line="43" pos:column="53"/></operator> <literal type="number" pos:line="43" pos:column="54">0<pos:position pos:line="43" pos:column="55"/></literal></expr>)<pos:position pos:line="43" pos:column="56"/></condition><then pos:line="43" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="7">cf_util_get_string<pos:position pos:line="44" pos:column="25"/></name> <argument_list pos:line="44" pos:column="26">(<argument><expr><name pos:line="44" pos:column="27">child<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="34">&amp;<pos:position pos:line="44" pos:column="39"/></operator><name><name pos:line="44" pos:column="35">agg<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">-&gt;<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="40">set_plugin<pos:position pos:line="44" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="52"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="45" pos:column="5">else <if pos:line="45" pos:column="10">if <condition pos:line="45" pos:column="13">(<expr><call><name pos:line="45" pos:column="14">strcasecmp<pos:position pos:line="45" pos:column="24"/></name> <argument_list pos:line="45" pos:column="25">(<argument><expr><literal type="string" pos:line="45" pos:column="26">"SetPluginInstance"<pos:position pos:line="45" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="47">child<pos:position pos:line="45" pos:column="52"/></name><operator pos:line="45" pos:column="52">-&gt;<pos:position pos:line="45" pos:column="57"/></operator><name pos:line="45" pos:column="54">key<pos:position pos:line="45" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call> <operator pos:line="45" pos:column="59">==<pos:position pos:line="45" pos:column="61"/></operator> <literal type="number" pos:line="45" pos:column="62">0<pos:position pos:line="45" pos:column="63"/></literal></expr>)<pos:position pos:line="45" pos:column="64"/></condition><then pos:line="45" pos:column="64">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="7">cf_util_get_string<pos:position pos:line="46" pos:column="25"/></name> <argument_list pos:line="46" pos:column="26">(<argument><expr><name pos:line="46" pos:column="27">child<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="34">&amp;<pos:position pos:line="46" pos:column="39"/></operator><name><name pos:line="46" pos:column="35">agg<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">-&gt;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="40">set_plugin_instance<pos:position pos:line="46" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="61"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="47" pos:column="5">else <if pos:line="47" pos:column="10">if <condition pos:line="47" pos:column="13">(<expr><call><name pos:line="47" pos:column="14">strcasecmp<pos:position pos:line="47" pos:column="24"/></name> <argument_list pos:line="47" pos:column="25">(<argument><expr><literal type="string" pos:line="47" pos:column="26">"SetTypeInstance"<pos:position pos:line="47" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="45">child<pos:position pos:line="47" pos:column="50"/></name><operator pos:line="47" pos:column="50">-&gt;<pos:position pos:line="47" pos:column="55"/></operator><name pos:line="47" pos:column="52">key<pos:position pos:line="47" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="56"/></argument_list></call> <operator pos:line="47" pos:column="57">==<pos:position pos:line="47" pos:column="59"/></operator> <literal type="number" pos:line="47" pos:column="60">0<pos:position pos:line="47" pos:column="61"/></literal></expr>)<pos:position pos:line="47" pos:column="62"/></condition><then pos:line="47" pos:column="62">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="7">cf_util_get_string<pos:position pos:line="48" pos:column="25"/></name> <argument_list pos:line="48" pos:column="26">(<argument><expr><name pos:line="48" pos:column="27">child<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="34">&amp;<pos:position pos:line="48" pos:column="39"/></operator><name><name pos:line="48" pos:column="35">agg<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">-&gt;<pos:position pos:line="48" pos:column="43"/></operator><name pos:line="48" pos:column="40">set_type_instance<pos:position pos:line="48" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="59"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="49" pos:column="5">else <if pos:line="49" pos:column="10">if <condition pos:line="49" pos:column="13">(<expr><call><name pos:line="49" pos:column="14">strcasecmp<pos:position pos:line="49" pos:column="24"/></name> <argument_list pos:line="49" pos:column="25">(<argument><expr><literal type="string" pos:line="49" pos:column="26">"GroupBy"<pos:position pos:line="49" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="37">child<pos:position pos:line="49" pos:column="42"/></name><operator pos:line="49" pos:column="42">-&gt;<pos:position pos:line="49" pos:column="47"/></operator><name pos:line="49" pos:column="44">key<pos:position pos:line="49" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></call> <operator pos:line="49" pos:column="49">==<pos:position pos:line="49" pos:column="51"/></operator> <literal type="number" pos:line="49" pos:column="52">0<pos:position pos:line="49" pos:column="53"/></literal></expr>)<pos:position pos:line="49" pos:column="54"/></condition><then pos:line="49" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="7">agg_config_handle_group_by<pos:position pos:line="50" pos:column="33"/></name> <argument_list pos:line="50" pos:column="34">(<argument><expr><name pos:line="50" pos:column="35">child<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="42">agg<pos:position pos:line="50" pos:column="45"/></name></expr></argument>)<pos:position pos:line="50" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="47"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="51" pos:column="5">else <if pos:line="51" pos:column="10">if <condition pos:line="51" pos:column="13">(<expr><call><name pos:line="51" pos:column="14">strcasecmp<pos:position pos:line="51" pos:column="24"/></name> <argument_list pos:line="51" pos:column="25">(<argument><expr><literal type="string" pos:line="51" pos:column="26">"CalculateNum"<pos:position pos:line="51" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="42">child<pos:position pos:line="51" pos:column="47"/></name><operator pos:line="51" pos:column="47">-&gt;<pos:position pos:line="51" pos:column="52"/></operator><name pos:line="51" pos:column="49">key<pos:position pos:line="51" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="53"/></argument_list></call> <operator pos:line="51" pos:column="54">==<pos:position pos:line="51" pos:column="56"/></operator> <literal type="number" pos:line="51" pos:column="57">0<pos:position pos:line="51" pos:column="58"/></literal></expr>)<pos:position pos:line="51" pos:column="59"/></condition><then pos:line="51" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="7">cf_util_get_boolean<pos:position pos:line="52" pos:column="26"/></name> <argument_list pos:line="52" pos:column="27">(<argument><expr><name pos:line="52" pos:column="28">child<pos:position pos:line="52" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="35">&amp;<pos:position pos:line="52" pos:column="40"/></operator><name><name pos:line="52" pos:column="36">agg<pos:position pos:line="52" pos:column="39"/></name><operator pos:line="52" pos:column="39">-&gt;<pos:position pos:line="52" pos:column="44"/></operator><name pos:line="52" pos:column="41">calc_num<pos:position pos:line="52" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="51"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="53" pos:column="5">else <if pos:line="53" pos:column="10">if <condition pos:line="53" pos:column="13">(<expr><call><name pos:line="53" pos:column="14">strcasecmp<pos:position pos:line="53" pos:column="24"/></name> <argument_list pos:line="53" pos:column="25">(<argument><expr><literal type="string" pos:line="53" pos:column="26">"CalculateSum"<pos:position pos:line="53" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="42">child<pos:position pos:line="53" pos:column="47"/></name><operator pos:line="53" pos:column="47">-&gt;<pos:position pos:line="53" pos:column="52"/></operator><name pos:line="53" pos:column="49">key<pos:position pos:line="53" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call> <operator pos:line="53" pos:column="54">==<pos:position pos:line="53" pos:column="56"/></operator> <literal type="number" pos:line="53" pos:column="57">0<pos:position pos:line="53" pos:column="58"/></literal></expr>)<pos:position pos:line="53" pos:column="59"/></condition><then pos:line="53" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="7">cf_util_get_boolean<pos:position pos:line="54" pos:column="26"/></name> <argument_list pos:line="54" pos:column="27">(<argument><expr><name pos:line="54" pos:column="28">child<pos:position pos:line="54" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="35">&amp;<pos:position pos:line="54" pos:column="40"/></operator><name><name pos:line="54" pos:column="36">agg<pos:position pos:line="54" pos:column="39"/></name><operator pos:line="54" pos:column="39">-&gt;<pos:position pos:line="54" pos:column="44"/></operator><name pos:line="54" pos:column="41">calc_sum<pos:position pos:line="54" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="51"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="55" pos:column="5">else <if pos:line="55" pos:column="10">if <condition pos:line="55" pos:column="13">(<expr><call><name pos:line="55" pos:column="14">strcasecmp<pos:position pos:line="55" pos:column="24"/></name> <argument_list pos:line="55" pos:column="25">(<argument><expr><literal type="string" pos:line="55" pos:column="26">"CalculateAverage"<pos:position pos:line="55" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="46">child<pos:position pos:line="55" pos:column="51"/></name><operator pos:line="55" pos:column="51">-&gt;<pos:position pos:line="55" pos:column="56"/></operator><name pos:line="55" pos:column="53">key<pos:position pos:line="55" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="57"/></argument_list></call> <operator pos:line="55" pos:column="58">==<pos:position pos:line="55" pos:column="60"/></operator> <literal type="number" pos:line="55" pos:column="61">0<pos:position pos:line="55" pos:column="62"/></literal></expr>)<pos:position pos:line="55" pos:column="63"/></condition><then pos:line="55" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="7">cf_util_get_boolean<pos:position pos:line="56" pos:column="26"/></name> <argument_list pos:line="56" pos:column="27">(<argument><expr><name pos:line="56" pos:column="28">child<pos:position pos:line="56" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="35">&amp;<pos:position pos:line="56" pos:column="40"/></operator><name><name pos:line="56" pos:column="36">agg<pos:position pos:line="56" pos:column="39"/></name><operator pos:line="56" pos:column="39">-&gt;<pos:position pos:line="56" pos:column="44"/></operator><name pos:line="56" pos:column="41">calc_average<pos:position pos:line="56" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="55"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="57" pos:column="5">else <if pos:line="57" pos:column="10">if <condition pos:line="57" pos:column="13">(<expr><call><name pos:line="57" pos:column="14">strcasecmp<pos:position pos:line="57" pos:column="24"/></name> <argument_list pos:line="57" pos:column="25">(<argument><expr><literal type="string" pos:line="57" pos:column="26">"CalculateMinimum"<pos:position pos:line="57" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="46">child<pos:position pos:line="57" pos:column="51"/></name><operator pos:line="57" pos:column="51">-&gt;<pos:position pos:line="57" pos:column="56"/></operator><name pos:line="57" pos:column="53">key<pos:position pos:line="57" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call> <operator pos:line="57" pos:column="58">==<pos:position pos:line="57" pos:column="60"/></operator> <literal type="number" pos:line="57" pos:column="61">0<pos:position pos:line="57" pos:column="62"/></literal></expr>)<pos:position pos:line="57" pos:column="63"/></condition><then pos:line="57" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="7">cf_util_get_boolean<pos:position pos:line="58" pos:column="26"/></name> <argument_list pos:line="58" pos:column="27">(<argument><expr><name pos:line="58" pos:column="28">child<pos:position pos:line="58" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="35">&amp;<pos:position pos:line="58" pos:column="40"/></operator><name><name pos:line="58" pos:column="36">agg<pos:position pos:line="58" pos:column="39"/></name><operator pos:line="58" pos:column="39">-&gt;<pos:position pos:line="58" pos:column="44"/></operator><name pos:line="58" pos:column="41">calc_min<pos:position pos:line="58" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="51"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="59" pos:column="5">else <if pos:line="59" pos:column="10">if <condition pos:line="59" pos:column="13">(<expr><call><name pos:line="59" pos:column="14">strcasecmp<pos:position pos:line="59" pos:column="24"/></name> <argument_list pos:line="59" pos:column="25">(<argument><expr><literal type="string" pos:line="59" pos:column="26">"CalculateMaximum"<pos:position pos:line="59" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="46">child<pos:position pos:line="59" pos:column="51"/></name><operator pos:line="59" pos:column="51">-&gt;<pos:position pos:line="59" pos:column="56"/></operator><name pos:line="59" pos:column="53">key<pos:position pos:line="59" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call> <operator pos:line="59" pos:column="58">==<pos:position pos:line="59" pos:column="60"/></operator> <literal type="number" pos:line="59" pos:column="61">0<pos:position pos:line="59" pos:column="62"/></literal></expr>)<pos:position pos:line="59" pos:column="63"/></condition><then pos:line="59" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="7">cf_util_get_boolean<pos:position pos:line="60" pos:column="26"/></name> <argument_list pos:line="60" pos:column="27">(<argument><expr><name pos:line="60" pos:column="28">child<pos:position pos:line="60" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="35">&amp;<pos:position pos:line="60" pos:column="40"/></operator><name><name pos:line="60" pos:column="36">agg<pos:position pos:line="60" pos:column="39"/></name><operator pos:line="60" pos:column="39">-&gt;<pos:position pos:line="60" pos:column="44"/></operator><name pos:line="60" pos:column="41">calc_max<pos:position pos:line="60" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="51"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="61" pos:column="5">else <if pos:line="61" pos:column="10">if <condition pos:line="61" pos:column="13">(<expr><call><name pos:line="61" pos:column="14">strcasecmp<pos:position pos:line="61" pos:column="24"/></name> <argument_list pos:line="61" pos:column="25">(<argument><expr><literal type="string" pos:line="61" pos:column="26">"CalculateStddev"<pos:position pos:line="61" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="45">child<pos:position pos:line="61" pos:column="50"/></name><operator pos:line="61" pos:column="50">-&gt;<pos:position pos:line="61" pos:column="55"/></operator><name pos:line="61" pos:column="52">key<pos:position pos:line="61" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="56"/></argument_list></call> <operator pos:line="61" pos:column="57">==<pos:position pos:line="61" pos:column="59"/></operator> <literal type="number" pos:line="61" pos:column="60">0<pos:position pos:line="61" pos:column="61"/></literal></expr>)<pos:position pos:line="61" pos:column="62"/></condition><then pos:line="61" pos:column="62">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="7">cf_util_get_boolean<pos:position pos:line="62" pos:column="26"/></name> <argument_list pos:line="62" pos:column="27">(<argument><expr><name pos:line="62" pos:column="28">child<pos:position pos:line="62" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="35">&amp;<pos:position pos:line="62" pos:column="40"/></operator><name><name pos:line="62" pos:column="36">agg<pos:position pos:line="62" pos:column="39"/></name><operator pos:line="62" pos:column="39">-&gt;<pos:position pos:line="62" pos:column="44"/></operator><name pos:line="62" pos:column="41">calc_stddev<pos:position pos:line="62" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <else pos:line="63" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="7">WARNING<pos:position pos:line="64" pos:column="14"/></name> <argument_list pos:line="64" pos:column="15">(<argument><expr><literal type="string" pos:line="64" pos:column="16">"aggregation plugin: The \"%s\" key is not allowed inside "<pos:position pos:line="64" pos:column="75"/></literal>
          <literal type="string" pos:line="65" pos:column="11">"&lt;Aggregation /&gt; blocks and will be ignored."<pos:position pos:line="65" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="58">child<pos:position pos:line="65" pos:column="63"/></name><operator pos:line="65" pos:column="63">-&gt;<pos:position pos:line="65" pos:column="68"/></operator><name pos:line="65" pos:column="65">key<pos:position pos:line="65" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="70"/></expr_stmt></block></else></if>
  }<pos:position pos:line="66" pos:column="4"/></block></for>

  <if pos:line="68" pos:column="3">if <condition pos:line="68" pos:column="6">(<expr><call><name pos:line="68" pos:column="7">agg_is_regex<pos:position pos:line="68" pos:column="19"/></name> <argument_list pos:line="68" pos:column="20">(<argument><expr><name><name pos:line="68" pos:column="21">agg<pos:position pos:line="68" pos:column="24"/></name><operator pos:line="68" pos:column="24">-&gt;<pos:position pos:line="68" pos:column="29"/></operator><name pos:line="68" pos:column="26">ident<pos:position pos:line="68" pos:column="31"/></name><operator pos:line="68" pos:column="31">.<pos:position pos:line="68" pos:column="32"/></operator><name pos:line="68" pos:column="32">host<pos:position pos:line="68" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="38"/></condition><then pos:line="68" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="69" pos:column="5">agg<pos:position pos:line="69" pos:column="8"/></name><operator pos:line="69" pos:column="8">-&gt;<pos:position pos:line="69" pos:column="13"/></operator><name pos:line="69" pos:column="10">regex_fields<pos:position pos:line="69" pos:column="22"/></name></name> <operator pos:line="69" pos:column="23">|=<pos:position pos:line="69" pos:column="25"/></operator> <name pos:line="69" pos:column="26">LU_GROUP_BY_HOST<pos:position pos:line="69" pos:column="42"/></name></expr>;<pos:position pos:line="69" pos:column="43"/></expr_stmt></block></then></if>
  <if pos:line="70" pos:column="3">if <condition pos:line="70" pos:column="6">(<expr><call><name pos:line="70" pos:column="7">agg_is_regex<pos:position pos:line="70" pos:column="19"/></name> <argument_list pos:line="70" pos:column="20">(<argument><expr><name><name pos:line="70" pos:column="21">agg<pos:position pos:line="70" pos:column="24"/></name><operator pos:line="70" pos:column="24">-&gt;<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="26">ident<pos:position pos:line="70" pos:column="31"/></name><operator pos:line="70" pos:column="31">.<pos:position pos:line="70" pos:column="32"/></operator><name pos:line="70" pos:column="32">plugin<pos:position pos:line="70" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="40"/></condition><then pos:line="70" pos:column="40">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="71" pos:column="5">agg<pos:position pos:line="71" pos:column="8"/></name><operator pos:line="71" pos:column="8">-&gt;<pos:position pos:line="71" pos:column="13"/></operator><name pos:line="71" pos:column="10">regex_fields<pos:position pos:line="71" pos:column="22"/></name></name> <operator pos:line="71" pos:column="23">|=<pos:position pos:line="71" pos:column="25"/></operator> <name pos:line="71" pos:column="26">LU_GROUP_BY_PLUGIN<pos:position pos:line="71" pos:column="44"/></name></expr>;<pos:position pos:line="71" pos:column="45"/></expr_stmt></block></then></if>
  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><call><name pos:line="72" pos:column="7">agg_is_regex<pos:position pos:line="72" pos:column="19"/></name> <argument_list pos:line="72" pos:column="20">(<argument><expr><name><name pos:line="72" pos:column="21">agg<pos:position pos:line="72" pos:column="24"/></name><operator pos:line="72" pos:column="24">-&gt;<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="26">ident<pos:position pos:line="72" pos:column="31"/></name><operator pos:line="72" pos:column="31">.<pos:position pos:line="72" pos:column="32"/></operator><name pos:line="72" pos:column="32">plugin_instance<pos:position pos:line="72" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="49"/></condition><then pos:line="72" pos:column="49">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="73" pos:column="5">agg<pos:position pos:line="73" pos:column="8"/></name><operator pos:line="73" pos:column="8">-&gt;<pos:position pos:line="73" pos:column="13"/></operator><name pos:line="73" pos:column="10">regex_fields<pos:position pos:line="73" pos:column="22"/></name></name> <operator pos:line="73" pos:column="23">|=<pos:position pos:line="73" pos:column="25"/></operator> <name pos:line="73" pos:column="26">LU_GROUP_BY_PLUGIN_INSTANCE<pos:position pos:line="73" pos:column="53"/></name></expr>;<pos:position pos:line="73" pos:column="54"/></expr_stmt></block></then></if>
  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><call><name pos:line="74" pos:column="7">agg_is_regex<pos:position pos:line="74" pos:column="19"/></name> <argument_list pos:line="74" pos:column="20">(<argument><expr><name><name pos:line="74" pos:column="21">agg<pos:position pos:line="74" pos:column="24"/></name><operator pos:line="74" pos:column="24">-&gt;<pos:position pos:line="74" pos:column="29"/></operator><name pos:line="74" pos:column="26">ident<pos:position pos:line="74" pos:column="31"/></name><operator pos:line="74" pos:column="31">.<pos:position pos:line="74" pos:column="32"/></operator><name pos:line="74" pos:column="32">type_instance<pos:position pos:line="74" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="47"/></condition><then pos:line="74" pos:column="47">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="75" pos:column="5">agg<pos:position pos:line="75" pos:column="8"/></name><operator pos:line="75" pos:column="8">-&gt;<pos:position pos:line="75" pos:column="13"/></operator><name pos:line="75" pos:column="10">regex_fields<pos:position pos:line="75" pos:column="22"/></name></name> <operator pos:line="75" pos:column="23">|=<pos:position pos:line="75" pos:column="25"/></operator> <name pos:line="75" pos:column="26">LU_GROUP_BY_TYPE_INSTANCE<pos:position pos:line="75" pos:column="51"/></name></expr>;<pos:position pos:line="75" pos:column="52"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="77" pos:column="3">/* Sanity checking */</comment>
  <expr_stmt><expr><name pos:line="78" pos:column="3">is_valid<pos:position pos:line="78" pos:column="11"/></name> <operator pos:line="78" pos:column="12">=<pos:position pos:line="78" pos:column="13"/></operator> <literal type="number" pos:line="78" pos:column="14">1<pos:position pos:line="78" pos:column="15"/></literal></expr>;<pos:position pos:line="78" pos:column="16"/></expr_stmt>
  <if pos:line="79" pos:column="3">if <condition pos:line="79" pos:column="6">(<expr><call><name pos:line="79" pos:column="7">strcmp<pos:position pos:line="79" pos:column="13"/></name> <argument_list pos:line="79" pos:column="14">(<argument><expr><literal type="string" pos:line="79" pos:column="15">"/.*/"<pos:position pos:line="79" pos:column="21"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="23">agg<pos:position pos:line="79" pos:column="26"/></name><operator pos:line="79" pos:column="26">-&gt;<pos:position pos:line="79" pos:column="31"/></operator><name pos:line="79" pos:column="28">ident<pos:position pos:line="79" pos:column="33"/></name><operator pos:line="79" pos:column="33">.<pos:position pos:line="79" pos:column="34"/></operator><name pos:line="79" pos:column="34">type<pos:position pos:line="79" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="39"/></argument_list></call> <operator pos:line="79" pos:column="40">==<pos:position pos:line="79" pos:column="42"/></operator> <literal type="number" pos:line="79" pos:column="43">0<pos:position pos:line="79" pos:column="44"/></literal></expr>)<pos:position pos:line="79" pos:column="45"/></condition><then pos:line="79" pos:column="45"> <comment type="block" pos:line="79" pos:column="46">/* {{{ */</comment>
  <block pos:line="80" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">ERROR<pos:position pos:line="81" pos:column="10"/></name> <argument_list pos:line="81" pos:column="11">(<argument><expr><literal type="string" pos:line="81" pos:column="12">"aggregation plugin: It appears you did not specify the required "<pos:position pos:line="81" pos:column="78"/></literal>
        <literal type="string" pos:line="82" pos:column="9">"\"Type\" option in this aggregation. "<pos:position pos:line="82" pos:column="48"/></literal>
        <literal type="string" pos:line="83" pos:column="9">"(Host \"%s\", Plugin \"%s\", PluginInstance \"%s\", "<pos:position pos:line="83" pos:column="63"/></literal>
        <literal type="string" pos:line="84" pos:column="9">"Type \"%s\", TypeInstance \"%s\")"<pos:position pos:line="84" pos:column="44"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="85" pos:column="9">agg<pos:position pos:line="85" pos:column="12"/></name><operator pos:line="85" pos:column="12">-&gt;<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="14">ident<pos:position pos:line="85" pos:column="19"/></name><operator pos:line="85" pos:column="19">.<pos:position pos:line="85" pos:column="20"/></operator><name pos:line="85" pos:column="20">host<pos:position pos:line="85" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="26">agg<pos:position pos:line="85" pos:column="29"/></name><operator pos:line="85" pos:column="29">-&gt;<pos:position pos:line="85" pos:column="34"/></operator><name pos:line="85" pos:column="31">ident<pos:position pos:line="85" pos:column="36"/></name><operator pos:line="85" pos:column="36">.<pos:position pos:line="85" pos:column="37"/></operator><name pos:line="85" pos:column="37">plugin<pos:position pos:line="85" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="45">agg<pos:position pos:line="85" pos:column="48"/></name><operator pos:line="85" pos:column="48">-&gt;<pos:position pos:line="85" pos:column="53"/></operator><name pos:line="85" pos:column="50">ident<pos:position pos:line="85" pos:column="55"/></name><operator pos:line="85" pos:column="55">.<pos:position pos:line="85" pos:column="56"/></operator><name pos:line="85" pos:column="56">plugin_instance<pos:position pos:line="85" pos:column="71"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="86" pos:column="9">agg<pos:position pos:line="86" pos:column="12"/></name><operator pos:line="86" pos:column="12">-&gt;<pos:position pos:line="86" pos:column="17"/></operator><name pos:line="86" pos:column="14">ident<pos:position pos:line="86" pos:column="19"/></name><operator pos:line="86" pos:column="19">.<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="20">type<pos:position pos:line="86" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="26">agg<pos:position pos:line="86" pos:column="29"/></name><operator pos:line="86" pos:column="29">-&gt;<pos:position pos:line="86" pos:column="34"/></operator><name pos:line="86" pos:column="31">ident<pos:position pos:line="86" pos:column="36"/></name><operator pos:line="86" pos:column="36">.<pos:position pos:line="86" pos:column="37"/></operator><name pos:line="86" pos:column="37">type_instance<pos:position pos:line="86" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="87" pos:column="5">is_valid<pos:position pos:line="87" pos:column="13"/></name> <operator pos:line="87" pos:column="14">=<pos:position pos:line="87" pos:column="15"/></operator> <literal type="number" pos:line="87" pos:column="16">0<pos:position pos:line="87" pos:column="17"/></literal></expr>;<pos:position pos:line="87" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="88" pos:column="4"/></block></then>
  <elseif pos:line="89" pos:column="3">else <if pos:line="89" pos:column="8">if <condition pos:line="89" pos:column="11">(<expr><call><name pos:line="89" pos:column="12">strchr<pos:position pos:line="89" pos:column="18"/></name> <argument_list pos:line="89" pos:column="19">(<argument><expr><name><name pos:line="89" pos:column="20">agg<pos:position pos:line="89" pos:column="23"/></name><operator pos:line="89" pos:column="23">-&gt;<pos:position pos:line="89" pos:column="28"/></operator><name pos:line="89" pos:column="25">ident<pos:position pos:line="89" pos:column="30"/></name><operator pos:line="89" pos:column="30">.<pos:position pos:line="89" pos:column="31"/></operator><name pos:line="89" pos:column="31">type<pos:position pos:line="89" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="89" pos:column="37">'/'<pos:position pos:line="89" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="41"/></argument_list></call> <operator pos:line="89" pos:column="42">!=<pos:position pos:line="89" pos:column="44"/></operator> <name pos:line="89" pos:column="45">NULL<pos:position pos:line="89" pos:column="49"/></name></expr>)<pos:position pos:line="89" pos:column="50"/></condition><then pos:line="89" pos:column="50">
  <block pos:line="90" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">ERROR<pos:position pos:line="91" pos:column="10"/></name> <argument_list pos:line="91" pos:column="11">(<argument><expr><literal type="string" pos:line="91" pos:column="12">"aggregation plugin: The \"Type\" may not contain the '/' "<pos:position pos:line="91" pos:column="71"/></literal>
        <literal type="string" pos:line="92" pos:column="9">"character. Especially, it may not be a regex. The current "<pos:position pos:line="92" pos:column="69"/></literal>
        <literal type="string" pos:line="93" pos:column="9">"value is \"%s\"."<pos:position pos:line="93" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="29">agg<pos:position pos:line="93" pos:column="32"/></name><operator pos:line="93" pos:column="32">-&gt;<pos:position pos:line="93" pos:column="37"/></operator><name pos:line="93" pos:column="34">ident<pos:position pos:line="93" pos:column="39"/></name><operator pos:line="93" pos:column="39">.<pos:position pos:line="93" pos:column="40"/></operator><name pos:line="93" pos:column="40">type<pos:position pos:line="93" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="94" pos:column="5">is_valid<pos:position pos:line="94" pos:column="13"/></name> <operator pos:line="94" pos:column="14">=<pos:position pos:line="94" pos:column="15"/></operator> <literal type="number" pos:line="94" pos:column="16">0<pos:position pos:line="94" pos:column="17"/></literal></expr>;<pos:position pos:line="94" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="95" pos:column="4"/></block></then></if></elseif></if> <comment type="block" pos:line="95" pos:column="5">/* }}} */</comment>

  <comment type="block" pos:line="97" pos:column="3">/* Check that there is at least one regex field without a grouping. {{{ */</comment>
  <if pos:line="98" pos:column="3">if <condition pos:line="98" pos:column="6">(<expr><operator pos:line="98" pos:column="7">(<pos:position pos:line="98" pos:column="8"/></operator><name><name pos:line="98" pos:column="8">agg<pos:position pos:line="98" pos:column="11"/></name><operator pos:line="98" pos:column="11">-&gt;<pos:position pos:line="98" pos:column="16"/></operator><name pos:line="98" pos:column="13">regex_fields<pos:position pos:line="98" pos:column="25"/></name></name> <operator pos:line="98" pos:column="26">&amp;<pos:position pos:line="98" pos:column="31"/></operator> <operator pos:line="98" pos:column="28">~<pos:position pos:line="98" pos:column="29"/></operator><name><name pos:line="98" pos:column="29">agg<pos:position pos:line="98" pos:column="32"/></name><operator pos:line="98" pos:column="32">-&gt;<pos:position pos:line="98" pos:column="37"/></operator><name pos:line="98" pos:column="34">group_by<pos:position pos:line="98" pos:column="42"/></name></name><operator pos:line="98" pos:column="42">)<pos:position pos:line="98" pos:column="43"/></operator> <operator pos:line="98" pos:column="44">==<pos:position pos:line="98" pos:column="46"/></operator> <literal type="number" pos:line="98" pos:column="47">0<pos:position pos:line="98" pos:column="48"/></literal></expr>)<pos:position pos:line="98" pos:column="49"/></condition><then pos:line="98" pos:column="49">
  <block pos:line="99" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="100" pos:column="5">ERROR<pos:position pos:line="100" pos:column="10"/></name> <argument_list pos:line="100" pos:column="11">(<argument><expr><literal type="string" pos:line="100" pos:column="12">"aggregation plugin: An aggregation must contain at least one "<pos:position pos:line="100" pos:column="75"/></literal>
        <literal type="string" pos:line="101" pos:column="9">"wildcard. This is achieved by leaving at least one of the \"Host\", "<pos:position pos:line="101" pos:column="79"/></literal>
        <literal type="string" pos:line="102" pos:column="9">"\"Plugin\", \"PluginInstance\" and \"TypeInstance\" options blank "<pos:position pos:line="102" pos:column="77"/></literal>
        <literal type="string" pos:line="103" pos:column="9">"or using a regular expression and not grouping by that field. "<pos:position pos:line="103" pos:column="73"/></literal>
        <literal type="string" pos:line="104" pos:column="9">"(Host \"%s\", Plugin \"%s\", PluginInstance \"%s\", "<pos:position pos:line="104" pos:column="63"/></literal>
        <literal type="string" pos:line="105" pos:column="9">"Type \"%s\", TypeInstance \"%s\")"<pos:position pos:line="105" pos:column="44"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="106" pos:column="9">agg<pos:position pos:line="106" pos:column="12"/></name><operator pos:line="106" pos:column="12">-&gt;<pos:position pos:line="106" pos:column="17"/></operator><name pos:line="106" pos:column="14">ident<pos:position pos:line="106" pos:column="19"/></name><operator pos:line="106" pos:column="19">.<pos:position pos:line="106" pos:column="20"/></operator><name pos:line="106" pos:column="20">host<pos:position pos:line="106" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="26">agg<pos:position pos:line="106" pos:column="29"/></name><operator pos:line="106" pos:column="29">-&gt;<pos:position pos:line="106" pos:column="34"/></operator><name pos:line="106" pos:column="31">ident<pos:position pos:line="106" pos:column="36"/></name><operator pos:line="106" pos:column="36">.<pos:position pos:line="106" pos:column="37"/></operator><name pos:line="106" pos:column="37">plugin<pos:position pos:line="106" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="45">agg<pos:position pos:line="106" pos:column="48"/></name><operator pos:line="106" pos:column="48">-&gt;<pos:position pos:line="106" pos:column="53"/></operator><name pos:line="106" pos:column="50">ident<pos:position pos:line="106" pos:column="55"/></name><operator pos:line="106" pos:column="55">.<pos:position pos:line="106" pos:column="56"/></operator><name pos:line="106" pos:column="56">plugin_instance<pos:position pos:line="106" pos:column="71"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="107" pos:column="9">agg<pos:position pos:line="107" pos:column="12"/></name><operator pos:line="107" pos:column="12">-&gt;<pos:position pos:line="107" pos:column="17"/></operator><name pos:line="107" pos:column="14">ident<pos:position pos:line="107" pos:column="19"/></name><operator pos:line="107" pos:column="19">.<pos:position pos:line="107" pos:column="20"/></operator><name pos:line="107" pos:column="20">type<pos:position pos:line="107" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="26">agg<pos:position pos:line="107" pos:column="29"/></name><operator pos:line="107" pos:column="29">-&gt;<pos:position pos:line="107" pos:column="34"/></operator><name pos:line="107" pos:column="31">ident<pos:position pos:line="107" pos:column="36"/></name><operator pos:line="107" pos:column="36">.<pos:position pos:line="107" pos:column="37"/></operator><name pos:line="107" pos:column="37">type_instance<pos:position pos:line="107" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="108" pos:column="5">is_valid<pos:position pos:line="108" pos:column="13"/></name> <operator pos:line="108" pos:column="14">=<pos:position pos:line="108" pos:column="15"/></operator> <literal type="number" pos:line="108" pos:column="16">0<pos:position pos:line="108" pos:column="17"/></literal></expr>;<pos:position pos:line="108" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="109" pos:column="4"/></block></then></if> <comment type="block" pos:line="109" pos:column="5">/* }}} */</comment>

  <comment type="block" pos:line="111" pos:column="3">/* Check that all grouping fields are regular expressions. {{{ */</comment>
  <if pos:line="112" pos:column="3">if <condition pos:line="112" pos:column="6">(<expr><name><name pos:line="112" pos:column="7">agg<pos:position pos:line="112" pos:column="10"/></name><operator pos:line="112" pos:column="10">-&gt;<pos:position pos:line="112" pos:column="15"/></operator><name pos:line="112" pos:column="12">group_by<pos:position pos:line="112" pos:column="20"/></name></name> <operator pos:line="112" pos:column="21">&amp;<pos:position pos:line="112" pos:column="26"/></operator> <operator pos:line="112" pos:column="23">~<pos:position pos:line="112" pos:column="24"/></operator><name><name pos:line="112" pos:column="24">agg<pos:position pos:line="112" pos:column="27"/></name><operator pos:line="112" pos:column="27">-&gt;<pos:position pos:line="112" pos:column="32"/></operator><name pos:line="112" pos:column="29">regex_fields<pos:position pos:line="112" pos:column="41"/></name></name></expr>)<pos:position pos:line="112" pos:column="42"/></condition><then pos:line="112" pos:column="42">
  <block pos:line="113" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="114" pos:column="5">ERROR<pos:position pos:line="114" pos:column="10"/></name> <argument_list pos:line="114" pos:column="11">(<argument><expr><literal type="string" pos:line="114" pos:column="12">"aggregation plugin: Only wildcard fields (fields for which a "<pos:position pos:line="114" pos:column="75"/></literal>
        <literal type="string" pos:line="115" pos:column="9">"regular expression is configured or which are left blank) can be "<pos:position pos:line="115" pos:column="76"/></literal>
        <literal type="string" pos:line="116" pos:column="9">"specified in the \"GroupBy\" option. "<pos:position pos:line="116" pos:column="48"/></literal>
        <literal type="string" pos:line="117" pos:column="9">"(Host \"%s\", Plugin \"%s\", PluginInstance \"%s\", "<pos:position pos:line="117" pos:column="63"/></literal>
        <literal type="string" pos:line="118" pos:column="9">"Type \"%s\", TypeInstance \"%s\")"<pos:position pos:line="118" pos:column="44"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="119" pos:column="9">agg<pos:position pos:line="119" pos:column="12"/></name><operator pos:line="119" pos:column="12">-&gt;<pos:position pos:line="119" pos:column="17"/></operator><name pos:line="119" pos:column="14">ident<pos:position pos:line="119" pos:column="19"/></name><operator pos:line="119" pos:column="19">.<pos:position pos:line="119" pos:column="20"/></operator><name pos:line="119" pos:column="20">host<pos:position pos:line="119" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="26">agg<pos:position pos:line="119" pos:column="29"/></name><operator pos:line="119" pos:column="29">-&gt;<pos:position pos:line="119" pos:column="34"/></operator><name pos:line="119" pos:column="31">ident<pos:position pos:line="119" pos:column="36"/></name><operator pos:line="119" pos:column="36">.<pos:position pos:line="119" pos:column="37"/></operator><name pos:line="119" pos:column="37">plugin<pos:position pos:line="119" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="45">agg<pos:position pos:line="119" pos:column="48"/></name><operator pos:line="119" pos:column="48">-&gt;<pos:position pos:line="119" pos:column="53"/></operator><name pos:line="119" pos:column="50">ident<pos:position pos:line="119" pos:column="55"/></name><operator pos:line="119" pos:column="55">.<pos:position pos:line="119" pos:column="56"/></operator><name pos:line="119" pos:column="56">plugin_instance<pos:position pos:line="119" pos:column="71"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="120" pos:column="9">agg<pos:position pos:line="120" pos:column="12"/></name><operator pos:line="120" pos:column="12">-&gt;<pos:position pos:line="120" pos:column="17"/></operator><name pos:line="120" pos:column="14">ident<pos:position pos:line="120" pos:column="19"/></name><operator pos:line="120" pos:column="19">.<pos:position pos:line="120" pos:column="20"/></operator><name pos:line="120" pos:column="20">type<pos:position pos:line="120" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="26">agg<pos:position pos:line="120" pos:column="29"/></name><operator pos:line="120" pos:column="29">-&gt;<pos:position pos:line="120" pos:column="34"/></operator><name pos:line="120" pos:column="31">ident<pos:position pos:line="120" pos:column="36"/></name><operator pos:line="120" pos:column="36">.<pos:position pos:line="120" pos:column="37"/></operator><name pos:line="120" pos:column="37">type_instance<pos:position pos:line="120" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="121" pos:column="5">is_valid<pos:position pos:line="121" pos:column="13"/></name> <operator pos:line="121" pos:column="14">=<pos:position pos:line="121" pos:column="15"/></operator> <literal type="number" pos:line="121" pos:column="16">0<pos:position pos:line="121" pos:column="17"/></literal></expr>;<pos:position pos:line="121" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="122" pos:column="4"/></block></then></if> <comment type="block" pos:line="122" pos:column="5">/* }}} */</comment>

  <if pos:line="124" pos:column="3">if <condition pos:line="124" pos:column="6">(<expr><operator pos:line="124" pos:column="7">!<pos:position pos:line="124" pos:column="8"/></operator><name><name pos:line="124" pos:column="8">agg<pos:position pos:line="124" pos:column="11"/></name><operator pos:line="124" pos:column="11">-&gt;<pos:position pos:line="124" pos:column="16"/></operator><name pos:line="124" pos:column="13">calc_num<pos:position pos:line="124" pos:column="21"/></name></name> <operator pos:line="124" pos:column="22">&amp;&amp;<pos:position pos:line="124" pos:column="32"/></operator> <operator pos:line="124" pos:column="25">!<pos:position pos:line="124" pos:column="26"/></operator><name><name pos:line="124" pos:column="26">agg<pos:position pos:line="124" pos:column="29"/></name><operator pos:line="124" pos:column="29">-&gt;<pos:position pos:line="124" pos:column="34"/></operator><name pos:line="124" pos:column="31">calc_sum<pos:position pos:line="124" pos:column="39"/></name></name> <operator pos:line="124" pos:column="40">&amp;&amp;<pos:position pos:line="124" pos:column="50"/></operator> <operator pos:line="124" pos:column="43">!<pos:position pos:line="124" pos:column="44"/></operator><name><name pos:line="124" pos:column="44">agg<pos:position pos:line="124" pos:column="47"/></name><operator pos:line="124" pos:column="47">-&gt;<pos:position pos:line="124" pos:column="52"/></operator><name pos:line="124" pos:column="49">calc_average<pos:position pos:line="124" pos:column="61"/></name></name> <comment type="block" pos:line="124" pos:column="62">/* {{{ */</comment>
      <operator pos:line="125" pos:column="7">&amp;&amp;<pos:position pos:line="125" pos:column="17"/></operator> <operator pos:line="125" pos:column="10">!<pos:position pos:line="125" pos:column="11"/></operator><name><name pos:line="125" pos:column="11">agg<pos:position pos:line="125" pos:column="14"/></name><operator pos:line="125" pos:column="14">-&gt;<pos:position pos:line="125" pos:column="19"/></operator><name pos:line="125" pos:column="16">calc_min<pos:position pos:line="125" pos:column="24"/></name></name> <operator pos:line="125" pos:column="25">&amp;&amp;<pos:position pos:line="125" pos:column="35"/></operator> <operator pos:line="125" pos:column="28">!<pos:position pos:line="125" pos:column="29"/></operator><name><name pos:line="125" pos:column="29">agg<pos:position pos:line="125" pos:column="32"/></name><operator pos:line="125" pos:column="32">-&gt;<pos:position pos:line="125" pos:column="37"/></operator><name pos:line="125" pos:column="34">calc_max<pos:position pos:line="125" pos:column="42"/></name></name> <operator pos:line="125" pos:column="43">&amp;&amp;<pos:position pos:line="125" pos:column="53"/></operator> <operator pos:line="125" pos:column="46">!<pos:position pos:line="125" pos:column="47"/></operator><name><name pos:line="125" pos:column="47">agg<pos:position pos:line="125" pos:column="50"/></name><operator pos:line="125" pos:column="50">-&gt;<pos:position pos:line="125" pos:column="55"/></operator><name pos:line="125" pos:column="52">calc_stddev<pos:position pos:line="125" pos:column="63"/></name></name></expr>)<pos:position pos:line="125" pos:column="64"/></condition><then pos:line="125" pos:column="64">
  <block pos:line="126" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="127" pos:column="5">ERROR<pos:position pos:line="127" pos:column="10"/></name> <argument_list pos:line="127" pos:column="11">(<argument><expr><literal type="string" pos:line="127" pos:column="12">"aggregation plugin: No aggregation function has been specified. "<pos:position pos:line="127" pos:column="78"/></literal>
        <literal type="string" pos:line="128" pos:column="9">"Without this, I don't know what I should be calculating. "<pos:position pos:line="128" pos:column="68"/></literal>
        <literal type="string" pos:line="129" pos:column="9">"(Host \"%s\", Plugin \"%s\", PluginInstance \"%s\", "<pos:position pos:line="129" pos:column="63"/></literal>
        <literal type="string" pos:line="130" pos:column="9">"Type \"%s\", TypeInstance \"%s\")"<pos:position pos:line="130" pos:column="44"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="131" pos:column="9">agg<pos:position pos:line="131" pos:column="12"/></name><operator pos:line="131" pos:column="12">-&gt;<pos:position pos:line="131" pos:column="17"/></operator><name pos:line="131" pos:column="14">ident<pos:position pos:line="131" pos:column="19"/></name><operator pos:line="131" pos:column="19">.<pos:position pos:line="131" pos:column="20"/></operator><name pos:line="131" pos:column="20">host<pos:position pos:line="131" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="26">agg<pos:position pos:line="131" pos:column="29"/></name><operator pos:line="131" pos:column="29">-&gt;<pos:position pos:line="131" pos:column="34"/></operator><name pos:line="131" pos:column="31">ident<pos:position pos:line="131" pos:column="36"/></name><operator pos:line="131" pos:column="36">.<pos:position pos:line="131" pos:column="37"/></operator><name pos:line="131" pos:column="37">plugin<pos:position pos:line="131" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="45">agg<pos:position pos:line="131" pos:column="48"/></name><operator pos:line="131" pos:column="48">-&gt;<pos:position pos:line="131" pos:column="53"/></operator><name pos:line="131" pos:column="50">ident<pos:position pos:line="131" pos:column="55"/></name><operator pos:line="131" pos:column="55">.<pos:position pos:line="131" pos:column="56"/></operator><name pos:line="131" pos:column="56">plugin_instance<pos:position pos:line="131" pos:column="71"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="132" pos:column="9">agg<pos:position pos:line="132" pos:column="12"/></name><operator pos:line="132" pos:column="12">-&gt;<pos:position pos:line="132" pos:column="17"/></operator><name pos:line="132" pos:column="14">ident<pos:position pos:line="132" pos:column="19"/></name><operator pos:line="132" pos:column="19">.<pos:position pos:line="132" pos:column="20"/></operator><name pos:line="132" pos:column="20">type<pos:position pos:line="132" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="26">agg<pos:position pos:line="132" pos:column="29"/></name><operator pos:line="132" pos:column="29">-&gt;<pos:position pos:line="132" pos:column="34"/></operator><name pos:line="132" pos:column="31">ident<pos:position pos:line="132" pos:column="36"/></name><operator pos:line="132" pos:column="36">.<pos:position pos:line="132" pos:column="37"/></operator><name pos:line="132" pos:column="37">type_instance<pos:position pos:line="132" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="133" pos:column="5">is_valid<pos:position pos:line="133" pos:column="13"/></name> <operator pos:line="133" pos:column="14">=<pos:position pos:line="133" pos:column="15"/></operator> <literal type="number" pos:line="133" pos:column="16">0<pos:position pos:line="133" pos:column="17"/></literal></expr>;<pos:position pos:line="133" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="134" pos:column="4"/></block></then></if> <comment type="block" pos:line="134" pos:column="5">/* }}} */</comment>

  <if pos:line="136" pos:column="3">if <condition pos:line="136" pos:column="6">(<expr><operator pos:line="136" pos:column="7">!<pos:position pos:line="136" pos:column="8"/></operator><name pos:line="136" pos:column="8">is_valid<pos:position pos:line="136" pos:column="16"/></name></expr>)<pos:position pos:line="136" pos:column="17"/></condition><then pos:line="136" pos:column="17"> <comment type="block" pos:line="136" pos:column="18">/* {{{ */</comment>
  <block pos:line="137" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="138" pos:column="5">sfree<pos:position pos:line="138" pos:column="10"/></name> <argument_list pos:line="138" pos:column="11">(<argument><expr><name pos:line="138" pos:column="12">agg<pos:position pos:line="138" pos:column="15"/></name></expr></argument>)<pos:position pos:line="138" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="17"/></expr_stmt>
    <return pos:line="139" pos:column="5">return <expr><operator pos:line="139" pos:column="12">(<pos:position pos:line="139" pos:column="13"/></operator><operator pos:line="139" pos:column="13">-<pos:position pos:line="139" pos:column="14"/></operator><literal type="number" pos:line="139" pos:column="14">1<pos:position pos:line="139" pos:column="15"/></literal><operator pos:line="139" pos:column="15">)<pos:position pos:line="139" pos:column="16"/></operator></expr>;<pos:position pos:line="139" pos:column="17"/></return>
  }<pos:position pos:line="140" pos:column="4"/></block></then></if> <comment type="block" pos:line="140" pos:column="5">/* }}} */</comment>

  <expr_stmt><expr><name pos:line="142" pos:column="3">status<pos:position pos:line="142" pos:column="9"/></name> <operator pos:line="142" pos:column="10">=<pos:position pos:line="142" pos:column="11"/></operator> <call><name pos:line="142" pos:column="12">lookup_add<pos:position pos:line="142" pos:column="22"/></name> <argument_list pos:line="142" pos:column="23">(<argument><expr><name pos:line="142" pos:column="24">lookup<pos:position pos:line="142" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="32">&amp;<pos:position pos:line="142" pos:column="37"/></operator><name><name pos:line="142" pos:column="33">agg<pos:position pos:line="142" pos:column="36"/></name><operator pos:line="142" pos:column="36">-&gt;<pos:position pos:line="142" pos:column="41"/></operator><name pos:line="142" pos:column="38">ident<pos:position pos:line="142" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="45">agg<pos:position pos:line="142" pos:column="48"/></name><operator pos:line="142" pos:column="48">-&gt;<pos:position pos:line="142" pos:column="53"/></operator><name pos:line="142" pos:column="50">group_by<pos:position pos:line="142" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="60">agg<pos:position pos:line="142" pos:column="63"/></name></expr></argument>)<pos:position pos:line="142" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="65"/></expr_stmt>
  <if pos:line="143" pos:column="3">if <condition pos:line="143" pos:column="6">(<expr><name pos:line="143" pos:column="7">status<pos:position pos:line="143" pos:column="13"/></name> <operator pos:line="143" pos:column="14">!=<pos:position pos:line="143" pos:column="16"/></operator> <literal type="number" pos:line="143" pos:column="17">0<pos:position pos:line="143" pos:column="18"/></literal></expr>)<pos:position pos:line="143" pos:column="19"/></condition><then pos:line="143" pos:column="19">
  <block pos:line="144" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="145" pos:column="5">ERROR<pos:position pos:line="145" pos:column="10"/></name> <argument_list pos:line="145" pos:column="11">(<argument><expr><literal type="string" pos:line="145" pos:column="12">"aggregation plugin: lookup_add failed with status %i."<pos:position pos:line="145" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="145" pos:column="69">status<pos:position pos:line="145" pos:column="75"/></name></expr></argument>)<pos:position pos:line="145" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="146" pos:column="5">sfree<pos:position pos:line="146" pos:column="10"/></name> <argument_list pos:line="146" pos:column="11">(<argument><expr><name pos:line="146" pos:column="12">agg<pos:position pos:line="146" pos:column="15"/></name></expr></argument>)<pos:position pos:line="146" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="17"/></expr_stmt>
    <return pos:line="147" pos:column="5">return <expr><operator pos:line="147" pos:column="12">(<pos:position pos:line="147" pos:column="13"/></operator><operator pos:line="147" pos:column="13">-<pos:position pos:line="147" pos:column="14"/></operator><literal type="number" pos:line="147" pos:column="14">1<pos:position pos:line="147" pos:column="15"/></literal><operator pos:line="147" pos:column="15">)<pos:position pos:line="147" pos:column="16"/></operator></expr>;<pos:position pos:line="147" pos:column="17"/></return>
  }<pos:position pos:line="148" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="150" pos:column="3">DEBUG<pos:position pos:line="150" pos:column="8"/></name> <argument_list pos:line="150" pos:column="9">(<argument><expr><literal type="string" pos:line="150" pos:column="10">"aggregation plugin: Successfully added aggregation: "<pos:position pos:line="150" pos:column="64"/></literal>
      <literal type="string" pos:line="151" pos:column="7">"(Host \"%s\", Plugin \"%s\", PluginInstance \"%s\", "<pos:position pos:line="151" pos:column="61"/></literal>
      <literal type="string" pos:line="152" pos:column="7">"Type \"%s\", TypeInstance \"%s\")"<pos:position pos:line="152" pos:column="42"/></literal></expr></argument>,
      <argument><expr><name><name pos:line="153" pos:column="7">agg<pos:position pos:line="153" pos:column="10"/></name><operator pos:line="153" pos:column="10">-&gt;<pos:position pos:line="153" pos:column="15"/></operator><name pos:line="153" pos:column="12">ident<pos:position pos:line="153" pos:column="17"/></name><operator pos:line="153" pos:column="17">.<pos:position pos:line="153" pos:column="18"/></operator><name pos:line="153" pos:column="18">host<pos:position pos:line="153" pos:column="22"/></name></name></expr></argument>, <argument><expr><name><name pos:line="153" pos:column="24">agg<pos:position pos:line="153" pos:column="27"/></name><operator pos:line="153" pos:column="27">-&gt;<pos:position pos:line="153" pos:column="32"/></operator><name pos:line="153" pos:column="29">ident<pos:position pos:line="153" pos:column="34"/></name><operator pos:line="153" pos:column="34">.<pos:position pos:line="153" pos:column="35"/></operator><name pos:line="153" pos:column="35">plugin<pos:position pos:line="153" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="153" pos:column="43">agg<pos:position pos:line="153" pos:column="46"/></name><operator pos:line="153" pos:column="46">-&gt;<pos:position pos:line="153" pos:column="51"/></operator><name pos:line="153" pos:column="48">ident<pos:position pos:line="153" pos:column="53"/></name><operator pos:line="153" pos:column="53">.<pos:position pos:line="153" pos:column="54"/></operator><name pos:line="153" pos:column="54">plugin_instance<pos:position pos:line="153" pos:column="69"/></name></name></expr></argument>,
      <argument><expr><name><name pos:line="154" pos:column="7">agg<pos:position pos:line="154" pos:column="10"/></name><operator pos:line="154" pos:column="10">-&gt;<pos:position pos:line="154" pos:column="15"/></operator><name pos:line="154" pos:column="12">ident<pos:position pos:line="154" pos:column="17"/></name><operator pos:line="154" pos:column="17">.<pos:position pos:line="154" pos:column="18"/></operator><name pos:line="154" pos:column="18">type<pos:position pos:line="154" pos:column="22"/></name></name></expr></argument>, <argument><expr><name><name pos:line="154" pos:column="24">agg<pos:position pos:line="154" pos:column="27"/></name><operator pos:line="154" pos:column="27">-&gt;<pos:position pos:line="154" pos:column="32"/></operator><name pos:line="154" pos:column="29">ident<pos:position pos:line="154" pos:column="34"/></name><operator pos:line="154" pos:column="34">.<pos:position pos:line="154" pos:column="35"/></operator><name pos:line="154" pos:column="35">type_instance<pos:position pos:line="154" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="154" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="50"/></expr_stmt>
  <return pos:line="155" pos:column="3">return <expr><operator pos:line="155" pos:column="10">(<pos:position pos:line="155" pos:column="11"/></operator><literal type="number" pos:line="155" pos:column="11">0<pos:position pos:line="155" pos:column="12"/></literal><operator pos:line="155" pos:column="12">)<pos:position pos:line="155" pos:column="13"/></operator></expr>;<pos:position pos:line="155" pos:column="14"/></return>
}<pos:position pos:line="156" pos:column="2"/></block></function></unit>

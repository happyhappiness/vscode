<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1491_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensor_list_add<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">c_ipmi_instance_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">st<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">ipmi_sensor_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">sensor<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list> <block pos:line="1" pos:column="74">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">ipmi_sensor_id_t<pos:position pos:line="2" pos:column="19"/></name></type> <name pos:line="2" pos:column="20">sensor_id<pos:position pos:line="2" pos:column="29"/></name></decl>;<pos:position pos:line="2" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">c_ipmi_sensor_list_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">list_item<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">c_ipmi_sensor_list_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">list_prev<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">buffer<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><name pos:line="6" pos:column="15">DATA_MAX_NAME_LEN<pos:position pos:line="6" pos:column="32"/></name></expr>]<pos:position pos:line="6" pos:column="33"/></index></name> <init pos:line="6" pos:column="34">= <expr><block pos:line="6" pos:column="36">{<expr><literal type="number" pos:line="6" pos:column="37">0<pos:position pos:line="6" pos:column="38"/></literal></expr>}<pos:position pos:line="6" pos:column="39"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">sensor_name_ptr<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name pos:line="7" pos:column="27">buffer<pos:position pos:line="7" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">sensor_type<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">type<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">sensor_id<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <call><name pos:line="11" pos:column="15">ipmi_sensor_convert_to_id<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">(<argument><expr><name pos:line="11" pos:column="41">sensor<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">sensor_get_name<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">sensor<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="27">buffer<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="35">sizeof<argument_list pos:line="12" pos:column="41">(<argument><expr><name pos:line="12" pos:column="42">buffer<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">DEBUG<pos:position pos:line="14" pos:column="8"/></name><argument_list pos:line="14" pos:column="8">(<argument><expr><literal type="string" pos:line="14" pos:column="9">"ipmi plugin: sensor_list_add: Found sensor `%s` of `%s`,"<pos:position pos:line="14" pos:column="67"/></literal>
        <literal type="string" pos:line="15" pos:column="9">" Type: %#x"<pos:position pos:line="15" pos:column="21"/></literal>
        <literal type="string" pos:line="16" pos:column="9">" Event reading type: %#x"<pos:position pos:line="16" pos:column="35"/></literal>
        <literal type="string" pos:line="17" pos:column="9">" Direction: %#x"<pos:position pos:line="17" pos:column="26"/></literal>
        <literal type="string" pos:line="18" pos:column="9">" Event support: %#x"<pos:position pos:line="18" pos:column="30"/></literal></expr></argument>,
        <argument><expr><name pos:line="19" pos:column="9">sensor_name_ptr<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="26">st<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">name<pos:position pos:line="19" pos:column="34"/></name></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="36">ipmi_sensor_get_sensor_type<pos:position pos:line="19" pos:column="63"/></name><argument_list pos:line="19" pos:column="63">(<argument><expr><name pos:line="19" pos:column="64">sensor<pos:position pos:line="19" pos:column="70"/></name></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></call></expr></argument>,
        <argument><expr><call><name pos:line="20" pos:column="9">ipmi_sensor_get_event_reading_type<pos:position pos:line="20" pos:column="43"/></name><argument_list pos:line="20" pos:column="43">(<argument><expr><name pos:line="20" pos:column="44">sensor<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr></argument>,
        <argument><expr><call><name pos:line="21" pos:column="9">ipmi_sensor_get_sensor_direction<pos:position pos:line="21" pos:column="41"/></name><argument_list pos:line="21" pos:column="41">(<argument><expr><name pos:line="21" pos:column="42">sensor<pos:position pos:line="21" pos:column="48"/></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr></argument>,
        <argument><expr><call><name pos:line="22" pos:column="9">ipmi_sensor_get_event_support<pos:position pos:line="22" pos:column="38"/></name><argument_list pos:line="22" pos:column="38">(<argument><expr><name pos:line="22" pos:column="39">sensor<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>

  <comment type="block" pos:line="24" pos:column="3">/* Both `ignorelist' and `sensor_name_ptr' may be NULL. */</comment>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><call><name pos:line="25" pos:column="7">ignorelist_match<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name><name pos:line="25" pos:column="24">st<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">ignorelist<pos:position pos:line="25" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="40">sensor_name_ptr<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call> <operator pos:line="25" pos:column="57">!=<pos:position pos:line="25" pos:column="59"/></operator> <literal type="number" pos:line="25" pos:column="60">0<pos:position pos:line="25" pos:column="61"/></literal></expr>)<pos:position pos:line="25" pos:column="62"/></condition><then pos:line="25" pos:column="62">
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><literal type="number" pos:line="26" pos:column="12">0<pos:position pos:line="26" pos:column="13"/></literal></expr>;<pos:position pos:line="26" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="28" pos:column="3">/* FIXME: Use rate unit or base unit to scale the value */</comment>

  <expr_stmt><expr><name pos:line="30" pos:column="3">sensor_type<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <call><name pos:line="30" pos:column="17">ipmi_sensor_get_sensor_type<pos:position pos:line="30" pos:column="44"/></name><argument_list pos:line="30" pos:column="44">(<argument><expr><name pos:line="30" pos:column="45">sensor<pos:position pos:line="30" pos:column="51"/></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>

  <comment type="block" pos:line="32" pos:column="3">/*
   * ipmitool/lib/ipmi_sdr.c sdr_sensor_has_analog_reading() has a notice
   * about 'Threshold sensors' and 'analog readings'. Discrete sensor may
   * have analog data, but discrete sensors support is not implemented
   * in Collectd yet.
   *
   * ipmi_sensor_id_get_reading() supports only 'Threshold' sensors.
   * See lib/sensor.c:4842, stand_ipmi_sensor_get_reading() for details.
   */</comment>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><operator pos:line="41" pos:column="7">!<pos:position pos:line="41" pos:column="8"/></operator><call><name pos:line="41" pos:column="8">ipmi_sensor_get_is_readable<pos:position pos:line="41" pos:column="35"/></name><argument_list pos:line="41" pos:column="35">(<argument><expr><name pos:line="41" pos:column="36">sensor<pos:position pos:line="41" pos:column="42"/></name></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="44"/></condition><then pos:line="41" pos:column="44"> <block pos:line="41" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">INFO<pos:position pos:line="42" pos:column="9"/></name><argument_list pos:line="42" pos:column="9">(<argument><expr><literal type="string" pos:line="42" pos:column="10">"ipmi plugin: sensor_list_add: Ignore sensor `%s` of `%s`, "<pos:position pos:line="42" pos:column="70"/></literal>
         <literal type="string" pos:line="43" pos:column="10">"because it isn't readable! Its type: (%#x, %s). "<pos:position pos:line="43" pos:column="60"/></literal></expr></argument>,
         <argument><expr><name pos:line="44" pos:column="10">sensor_name_ptr<pos:position pos:line="44" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="27">st<pos:position pos:line="44" pos:column="29"/></name><operator pos:line="44" pos:column="29">-&gt;<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="31">name<pos:position pos:line="44" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="37">sensor_type<pos:position pos:line="44" pos:column="48"/></name></expr></argument>,
         <argument><expr><call><name pos:line="45" pos:column="10">ipmi_sensor_get_sensor_type_string<pos:position pos:line="45" pos:column="44"/></name><argument_list pos:line="45" pos:column="44">(<argument><expr><name pos:line="45" pos:column="45">sensor<pos:position pos:line="45" pos:column="51"/></name></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="54"/></expr_stmt>
    <return pos:line="46" pos:column="5">return <expr><operator pos:line="46" pos:column="12">-<pos:position pos:line="46" pos:column="13"/></operator><literal type="number" pos:line="46" pos:column="13">1<pos:position pos:line="46" pos:column="14"/></literal></expr>;<pos:position pos:line="46" pos:column="15"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><call><name pos:line="49" pos:column="7">ipmi_sensor_get_event_reading_type<pos:position pos:line="49" pos:column="41"/></name><argument_list pos:line="49" pos:column="41">(<argument><expr><name pos:line="49" pos:column="42">sensor<pos:position pos:line="49" pos:column="48"/></name></expr></argument>)<pos:position pos:line="49" pos:column="49"/></argument_list></call> <operator pos:line="49" pos:column="50">!=<pos:position pos:line="49" pos:column="52"/></operator>
      <name pos:line="50" pos:column="7">IPMI_EVENT_READING_TYPE_THRESHOLD<pos:position pos:line="50" pos:column="40"/></name></expr>)<pos:position pos:line="50" pos:column="41"/></condition><then pos:line="50" pos:column="41"> <block pos:line="50" pos:column="42">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">INFO<pos:position pos:line="51" pos:column="9"/></name><argument_list pos:line="51" pos:column="9">(<argument><expr><literal type="string" pos:line="51" pos:column="10">"ipmi plugin: sensor_list_add: Ignore sensor `%s` of `%s`, "<pos:position pos:line="51" pos:column="70"/></literal>
         <literal type="string" pos:line="52" pos:column="10">"because it is discrete (%#x)! Its type: (%#x, %s). "<pos:position pos:line="52" pos:column="63"/></literal></expr></argument>,
         <argument><expr><name pos:line="53" pos:column="10">sensor_name_ptr<pos:position pos:line="53" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="27">st<pos:position pos:line="53" pos:column="29"/></name><operator pos:line="53" pos:column="29">-&gt;<pos:position pos:line="53" pos:column="34"/></operator><name pos:line="53" pos:column="31">name<pos:position pos:line="53" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="37">sensor_type<pos:position pos:line="53" pos:column="48"/></name></expr></argument>,
         <argument><expr><call><name pos:line="54" pos:column="10">ipmi_sensor_get_event_reading_type<pos:position pos:line="54" pos:column="44"/></name><argument_list pos:line="54" pos:column="44">(<argument><expr><name pos:line="54" pos:column="45">sensor<pos:position pos:line="54" pos:column="51"/></name></expr></argument>)<pos:position pos:line="54" pos:column="52"/></argument_list></call></expr></argument>,
         <argument><expr><call><name pos:line="55" pos:column="10">ipmi_sensor_get_sensor_type_string<pos:position pos:line="55" pos:column="44"/></name><argument_list pos:line="55" pos:column="44">(<argument><expr><name pos:line="55" pos:column="45">sensor<pos:position pos:line="55" pos:column="51"/></name></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="54"/></expr_stmt>
    <return pos:line="56" pos:column="5">return <expr><operator pos:line="56" pos:column="12">-<pos:position pos:line="56" pos:column="13"/></operator><literal type="number" pos:line="56" pos:column="13">1<pos:position pos:line="56" pos:column="14"/></literal></expr>;<pos:position pos:line="56" pos:column="15"/></return>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <switch pos:line="59" pos:column="3">switch <condition pos:line="59" pos:column="10">(<expr><name pos:line="59" pos:column="11">sensor_type<pos:position pos:line="59" pos:column="22"/></name></expr>)<pos:position pos:line="59" pos:column="23"/></condition> <block pos:line="59" pos:column="24">{
  <case pos:line="60" pos:column="3">case <expr><name pos:line="60" pos:column="8">IPMI_SENSOR_TYPE_TEMPERATURE<pos:position pos:line="60" pos:column="36"/></name></expr>:<pos:position pos:line="60" pos:column="37"/></case>
    <expr_stmt><expr><name pos:line="61" pos:column="5">type<pos:position pos:line="61" pos:column="9"/></name> <operator pos:line="61" pos:column="10">=<pos:position pos:line="61" pos:column="11"/></operator> <literal type="string" pos:line="61" pos:column="12">"temperature"<pos:position pos:line="61" pos:column="25"/></literal></expr>;<pos:position pos:line="61" pos:column="26"/></expr_stmt>
    <break pos:line="62" pos:column="5">break;<pos:position pos:line="62" pos:column="11"/></break>

  <case pos:line="64" pos:column="3">case <expr><name pos:line="64" pos:column="8">IPMI_SENSOR_TYPE_VOLTAGE<pos:position pos:line="64" pos:column="32"/></name></expr>:<pos:position pos:line="64" pos:column="33"/></case>
    <expr_stmt><expr><name pos:line="65" pos:column="5">type<pos:position pos:line="65" pos:column="9"/></name> <operator pos:line="65" pos:column="10">=<pos:position pos:line="65" pos:column="11"/></operator> <literal type="string" pos:line="65" pos:column="12">"voltage"<pos:position pos:line="65" pos:column="21"/></literal></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt>
    <break pos:line="66" pos:column="5">break;<pos:position pos:line="66" pos:column="11"/></break>

  <case pos:line="68" pos:column="3">case <expr><name pos:line="68" pos:column="8">IPMI_SENSOR_TYPE_CURRENT<pos:position pos:line="68" pos:column="32"/></name></expr>:<pos:position pos:line="68" pos:column="33"/></case>
    <expr_stmt><expr><name pos:line="69" pos:column="5">type<pos:position pos:line="69" pos:column="9"/></name> <operator pos:line="69" pos:column="10">=<pos:position pos:line="69" pos:column="11"/></operator> <literal type="string" pos:line="69" pos:column="12">"current"<pos:position pos:line="69" pos:column="21"/></literal></expr>;<pos:position pos:line="69" pos:column="22"/></expr_stmt>
    <break pos:line="70" pos:column="5">break;<pos:position pos:line="70" pos:column="11"/></break>

  <case pos:line="72" pos:column="3">case <expr><name pos:line="72" pos:column="8">IPMI_SENSOR_TYPE_FAN<pos:position pos:line="72" pos:column="28"/></name></expr>:<pos:position pos:line="72" pos:column="29"/></case>
    <expr_stmt><expr><name pos:line="73" pos:column="5">type<pos:position pos:line="73" pos:column="9"/></name> <operator pos:line="73" pos:column="10">=<pos:position pos:line="73" pos:column="11"/></operator> <literal type="string" pos:line="73" pos:column="12">"fanspeed"<pos:position pos:line="73" pos:column="22"/></literal></expr>;<pos:position pos:line="73" pos:column="23"/></expr_stmt>
    <break pos:line="74" pos:column="5">break;<pos:position pos:line="74" pos:column="11"/></break>

  <case pos:line="76" pos:column="3">case <expr><name pos:line="76" pos:column="8">IPMI_SENSOR_TYPE_MEMORY<pos:position pos:line="76" pos:column="31"/></name></expr>:<pos:position pos:line="76" pos:column="32"/></case>
    <expr_stmt><expr><name pos:line="77" pos:column="5">type<pos:position pos:line="77" pos:column="9"/></name> <operator pos:line="77" pos:column="10">=<pos:position pos:line="77" pos:column="11"/></operator> <literal type="string" pos:line="77" pos:column="12">"memory"<pos:position pos:line="77" pos:column="20"/></literal></expr>;<pos:position pos:line="77" pos:column="21"/></expr_stmt>
    <break pos:line="78" pos:column="5">break;<pos:position pos:line="78" pos:column="11"/></break>

  <default pos:line="80" pos:column="3">default:<pos:position pos:line="80" pos:column="11"/></default> <block pos:line="80" pos:column="12">{
    <comment type="block" pos:line="81" pos:column="5">/* try to get collectd DB type based on sensor base unit type */</comment>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><operator pos:line="82" pos:column="9">(<pos:position pos:line="82" pos:column="10"/></operator><name pos:line="82" pos:column="10">type<pos:position pos:line="82" pos:column="14"/></name> <operator pos:line="82" pos:column="15">=<pos:position pos:line="82" pos:column="16"/></operator> <call><name pos:line="82" pos:column="17">sensor_unit_to_type<pos:position pos:line="82" pos:column="36"/></name><argument_list pos:line="82" pos:column="36">(<argument><expr><name pos:line="82" pos:column="37">sensor<pos:position pos:line="82" pos:column="43"/></name></expr></argument>)<pos:position pos:line="82" pos:column="44"/></argument_list></call><operator pos:line="82" pos:column="44">)<pos:position pos:line="82" pos:column="45"/></operator> <operator pos:line="82" pos:column="46">!=<pos:position pos:line="82" pos:column="48"/></operator> <name pos:line="82" pos:column="49">NULL<pos:position pos:line="82" pos:column="53"/></name></expr>)<pos:position pos:line="82" pos:column="54"/></condition><then pos:line="82" pos:column="54">
      <block type="pseudo"><break pos:line="83" pos:column="7">break;<pos:position pos:line="83" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><call><name pos:line="85" pos:column="5">INFO<pos:position pos:line="85" pos:column="9"/></name><argument_list pos:line="85" pos:column="9">(<argument><expr><literal type="string" pos:line="85" pos:column="10">"ipmi plugin: sensor_list_add: Ignore sensor `%s` of `%s`, "<pos:position pos:line="85" pos:column="70"/></literal>
         <literal type="string" pos:line="86" pos:column="10">"because I don't know how to handle its units (%#x, %#x, %#x). "<pos:position pos:line="86" pos:column="74"/></literal>
         <literal type="string" pos:line="87" pos:column="10">"Sensor type: (%#x, %s). If you need this sensor, please file "<pos:position pos:line="87" pos:column="73"/></literal>
         <literal type="string" pos:line="88" pos:column="10">"a bug report at http://collectd.org/."<pos:position pos:line="88" pos:column="49"/></literal></expr></argument>,
         <argument><expr><name pos:line="89" pos:column="10">sensor_name_ptr<pos:position pos:line="89" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="27">st<pos:position pos:line="89" pos:column="29"/></name><operator pos:line="89" pos:column="29">-&gt;<pos:position pos:line="89" pos:column="34"/></operator><name pos:line="89" pos:column="31">name<pos:position pos:line="89" pos:column="35"/></name></name></expr></argument>, <argument><expr><call><name pos:line="89" pos:column="37">ipmi_sensor_get_base_unit<pos:position pos:line="89" pos:column="62"/></name><argument_list pos:line="89" pos:column="62">(<argument><expr><name pos:line="89" pos:column="63">sensor<pos:position pos:line="89" pos:column="69"/></name></expr></argument>)<pos:position pos:line="89" pos:column="70"/></argument_list></call></expr></argument>,
         <argument><expr><call><name pos:line="90" pos:column="10">ipmi_sensor_get_modifier_unit<pos:position pos:line="90" pos:column="39"/></name><argument_list pos:line="90" pos:column="39">(<argument><expr><name pos:line="90" pos:column="40">sensor<pos:position pos:line="90" pos:column="46"/></name></expr></argument>)<pos:position pos:line="90" pos:column="47"/></argument_list></call></expr></argument>,
         <argument><expr><call><name pos:line="91" pos:column="10">ipmi_sensor_get_rate_unit<pos:position pos:line="91" pos:column="35"/></name><argument_list pos:line="91" pos:column="35">(<argument><expr><name pos:line="91" pos:column="36">sensor<pos:position pos:line="91" pos:column="42"/></name></expr></argument>)<pos:position pos:line="91" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="91" pos:column="45">sensor_type<pos:position pos:line="91" pos:column="56"/></name></expr></argument>,
         <argument><expr><call><name pos:line="92" pos:column="10">ipmi_sensor_get_sensor_type_string<pos:position pos:line="92" pos:column="44"/></name><argument_list pos:line="92" pos:column="44">(<argument><expr><name pos:line="92" pos:column="45">sensor<pos:position pos:line="92" pos:column="51"/></name></expr></argument>)<pos:position pos:line="92" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="92" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="54"/></expr_stmt>
    <return pos:line="93" pos:column="5">return <expr><operator pos:line="93" pos:column="12">-<pos:position pos:line="93" pos:column="13"/></operator><literal type="number" pos:line="93" pos:column="13">1<pos:position pos:line="93" pos:column="14"/></literal></expr>;<pos:position pos:line="93" pos:column="15"/></return>
  }<pos:position pos:line="94" pos:column="4"/></block>
  }<pos:position pos:line="95" pos:column="4"/></block></switch> <comment type="block" pos:line="95" pos:column="5">/* switch (sensor_type) */</comment>

  <expr_stmt><expr><call><name pos:line="97" pos:column="3">pthread_mutex_lock<pos:position pos:line="97" pos:column="21"/></name><argument_list pos:line="97" pos:column="21">(<argument><expr><operator pos:line="97" pos:column="22">&amp;<pos:position pos:line="97" pos:column="27"/></operator><name><name pos:line="97" pos:column="23">st<pos:position pos:line="97" pos:column="25"/></name><operator pos:line="97" pos:column="25">-&gt;<pos:position pos:line="97" pos:column="30"/></operator><name pos:line="97" pos:column="27">sensor_list_lock<pos:position pos:line="97" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><name pos:line="99" pos:column="3">list_prev<pos:position pos:line="99" pos:column="12"/></name> <operator pos:line="99" pos:column="13">=<pos:position pos:line="99" pos:column="14"/></operator> <name pos:line="99" pos:column="15">NULL<pos:position pos:line="99" pos:column="19"/></name></expr>;<pos:position pos:line="99" pos:column="20"/></expr_stmt>
  <for pos:line="100" pos:column="3">for <control pos:line="100" pos:column="7">(<init><expr><name pos:line="100" pos:column="8">list_item<pos:position pos:line="100" pos:column="17"/></name> <operator pos:line="100" pos:column="18">=<pos:position pos:line="100" pos:column="19"/></operator> <name><name pos:line="100" pos:column="20">st<pos:position pos:line="100" pos:column="22"/></name><operator pos:line="100" pos:column="22">-&gt;<pos:position pos:line="100" pos:column="27"/></operator><name pos:line="100" pos:column="24">sensor_list<pos:position pos:line="100" pos:column="35"/></name></name></expr>;<pos:position pos:line="100" pos:column="36"/></init> <condition><expr><name pos:line="100" pos:column="37">list_item<pos:position pos:line="100" pos:column="46"/></name> <operator pos:line="100" pos:column="47">!=<pos:position pos:line="100" pos:column="49"/></operator> <name pos:line="100" pos:column="50">NULL<pos:position pos:line="100" pos:column="54"/></name></expr>;<pos:position pos:line="100" pos:column="55"/></condition>
       <incr><expr><name pos:line="101" pos:column="8">list_item<pos:position pos:line="101" pos:column="17"/></name> <operator pos:line="101" pos:column="18">=<pos:position pos:line="101" pos:column="19"/></operator> <name><name pos:line="101" pos:column="20">list_item<pos:position pos:line="101" pos:column="29"/></name><operator pos:line="101" pos:column="29">-&gt;<pos:position pos:line="101" pos:column="34"/></operator><name pos:line="101" pos:column="31">next<pos:position pos:line="101" pos:column="35"/></name></name></expr></incr>)<pos:position pos:line="101" pos:column="36"/></control> <block pos:line="101" pos:column="37">{
    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><call><name pos:line="102" pos:column="9">ipmi_cmp_sensor_id<pos:position pos:line="102" pos:column="27"/></name><argument_list pos:line="102" pos:column="27">(<argument><expr><name pos:line="102" pos:column="28">sensor_id<pos:position pos:line="102" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="39">list_item<pos:position pos:line="102" pos:column="48"/></name><operator pos:line="102" pos:column="48">-&gt;<pos:position pos:line="102" pos:column="53"/></operator><name pos:line="102" pos:column="50">sensor_id<pos:position pos:line="102" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="60"/></argument_list></call> <operator pos:line="102" pos:column="61">==<pos:position pos:line="102" pos:column="63"/></operator> <literal type="number" pos:line="102" pos:column="64">0<pos:position pos:line="102" pos:column="65"/></literal></expr>)<pos:position pos:line="102" pos:column="66"/></condition><then pos:line="102" pos:column="66">
      <block type="pseudo"><break pos:line="103" pos:column="7">break;<pos:position pos:line="103" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="104" pos:column="5">list_prev<pos:position pos:line="104" pos:column="14"/></name> <operator pos:line="104" pos:column="15">=<pos:position pos:line="104" pos:column="16"/></operator> <name pos:line="104" pos:column="17">list_item<pos:position pos:line="104" pos:column="26"/></name></expr>;<pos:position pos:line="104" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="105" pos:column="4"/></block></for> <comment type="block" pos:line="105" pos:column="5">/* for (list_item) */</comment>

  <if pos:line="107" pos:column="3">if <condition pos:line="107" pos:column="6">(<expr><name pos:line="107" pos:column="7">list_item<pos:position pos:line="107" pos:column="16"/></name> <operator pos:line="107" pos:column="17">!=<pos:position pos:line="107" pos:column="19"/></operator> <name pos:line="107" pos:column="20">NULL<pos:position pos:line="107" pos:column="24"/></name></expr>)<pos:position pos:line="107" pos:column="25"/></condition><then pos:line="107" pos:column="25"> <block pos:line="107" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="108" pos:column="5">pthread_mutex_unlock<pos:position pos:line="108" pos:column="25"/></name><argument_list pos:line="108" pos:column="25">(<argument><expr><operator pos:line="108" pos:column="26">&amp;<pos:position pos:line="108" pos:column="31"/></operator><name><name pos:line="108" pos:column="27">st<pos:position pos:line="108" pos:column="29"/></name><operator pos:line="108" pos:column="29">-&gt;<pos:position pos:line="108" pos:column="34"/></operator><name pos:line="108" pos:column="31">sensor_list_lock<pos:position pos:line="108" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="49"/></expr_stmt>
    <return pos:line="109" pos:column="5">return <expr><literal type="number" pos:line="109" pos:column="12">0<pos:position pos:line="109" pos:column="13"/></literal></expr>;<pos:position pos:line="109" pos:column="14"/></return>
  }<pos:position pos:line="110" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="112" pos:column="3">list_item<pos:position pos:line="112" pos:column="12"/></name> <operator pos:line="112" pos:column="13">=<pos:position pos:line="112" pos:column="14"/></operator> <operator pos:line="112" pos:column="15">(<pos:position pos:line="112" pos:column="16"/></operator><name pos:line="112" pos:column="16">c_ipmi_sensor_list_t<pos:position pos:line="112" pos:column="36"/></name> <operator pos:line="112" pos:column="37">*<pos:position pos:line="112" pos:column="38"/></operator><operator pos:line="112" pos:column="38">)<pos:position pos:line="112" pos:column="39"/></operator><call><name pos:line="112" pos:column="39">calloc<pos:position pos:line="112" pos:column="45"/></name><argument_list pos:line="112" pos:column="45">(<argument><expr><literal type="number" pos:line="112" pos:column="46">1<pos:position pos:line="112" pos:column="47"/></literal></expr></argument>, <argument><expr><sizeof pos:line="112" pos:column="49">sizeof<argument_list pos:line="112" pos:column="55">(<argument><expr><name pos:line="112" pos:column="56">c_ipmi_sensor_list_t<pos:position pos:line="112" pos:column="76"/></name></expr></argument>)<pos:position pos:line="112" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="112" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="79"/></expr_stmt>
  <if pos:line="113" pos:column="3">if <condition pos:line="113" pos:column="6">(<expr><name pos:line="113" pos:column="7">list_item<pos:position pos:line="113" pos:column="16"/></name> <operator pos:line="113" pos:column="17">==<pos:position pos:line="113" pos:column="19"/></operator> <name pos:line="113" pos:column="20">NULL<pos:position pos:line="113" pos:column="24"/></name></expr>)<pos:position pos:line="113" pos:column="25"/></condition><then pos:line="113" pos:column="25"> <block pos:line="113" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="114" pos:column="5">pthread_mutex_unlock<pos:position pos:line="114" pos:column="25"/></name><argument_list pos:line="114" pos:column="25">(<argument><expr><operator pos:line="114" pos:column="26">&amp;<pos:position pos:line="114" pos:column="31"/></operator><name><name pos:line="114" pos:column="27">st<pos:position pos:line="114" pos:column="29"/></name><operator pos:line="114" pos:column="29">-&gt;<pos:position pos:line="114" pos:column="34"/></operator><name pos:line="114" pos:column="31">sensor_list_lock<pos:position pos:line="114" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="49"/></expr_stmt>
    <return pos:line="115" pos:column="5">return <expr><operator pos:line="115" pos:column="12">-<pos:position pos:line="115" pos:column="13"/></operator><literal type="number" pos:line="115" pos:column="13">1<pos:position pos:line="115" pos:column="14"/></literal></expr>;<pos:position pos:line="115" pos:column="15"/></return>
  }<pos:position pos:line="116" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="118" pos:column="3">list_item<pos:position pos:line="118" pos:column="12"/></name><operator pos:line="118" pos:column="12">-&gt;<pos:position pos:line="118" pos:column="17"/></operator><name pos:line="118" pos:column="14">instance<pos:position pos:line="118" pos:column="22"/></name></name> <operator pos:line="118" pos:column="23">=<pos:position pos:line="118" pos:column="24"/></operator> <name pos:line="118" pos:column="25">st<pos:position pos:line="118" pos:column="27"/></name></expr>;<pos:position pos:line="118" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="119" pos:column="3">list_item<pos:position pos:line="119" pos:column="12"/></name><operator pos:line="119" pos:column="12">-&gt;<pos:position pos:line="119" pos:column="17"/></operator><name pos:line="119" pos:column="14">sensor_id<pos:position pos:line="119" pos:column="23"/></name></name> <operator pos:line="119" pos:column="24">=<pos:position pos:line="119" pos:column="25"/></operator> <call><name pos:line="119" pos:column="26">ipmi_sensor_convert_to_id<pos:position pos:line="119" pos:column="51"/></name><argument_list pos:line="119" pos:column="51">(<argument><expr><name pos:line="119" pos:column="52">sensor<pos:position pos:line="119" pos:column="58"/></name></expr></argument>)<pos:position pos:line="119" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="60"/></expr_stmt>

  <if pos:line="121" pos:column="3">if <condition pos:line="121" pos:column="6">(<expr><name pos:line="121" pos:column="7">list_prev<pos:position pos:line="121" pos:column="16"/></name> <operator pos:line="121" pos:column="17">!=<pos:position pos:line="121" pos:column="19"/></operator> <name pos:line="121" pos:column="20">NULL<pos:position pos:line="121" pos:column="24"/></name></expr>)<pos:position pos:line="121" pos:column="25"/></condition><then pos:line="121" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="122" pos:column="5">list_prev<pos:position pos:line="122" pos:column="14"/></name><operator pos:line="122" pos:column="14">-&gt;<pos:position pos:line="122" pos:column="19"/></operator><name pos:line="122" pos:column="16">next<pos:position pos:line="122" pos:column="20"/></name></name> <operator pos:line="122" pos:column="21">=<pos:position pos:line="122" pos:column="22"/></operator> <name pos:line="122" pos:column="23">list_item<pos:position pos:line="122" pos:column="32"/></name></expr>;<pos:position pos:line="122" pos:column="33"/></expr_stmt></block></then>
  <else pos:line="123" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="124" pos:column="5">st<pos:position pos:line="124" pos:column="7"/></name><operator pos:line="124" pos:column="7">-&gt;<pos:position pos:line="124" pos:column="12"/></operator><name pos:line="124" pos:column="9">sensor_list<pos:position pos:line="124" pos:column="20"/></name></name> <operator pos:line="124" pos:column="21">=<pos:position pos:line="124" pos:column="22"/></operator> <name pos:line="124" pos:column="23">list_item<pos:position pos:line="124" pos:column="32"/></name></expr>;<pos:position pos:line="124" pos:column="33"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="126" pos:column="3">/* if sensor provides the percentage value, use "percent" collectd type
     and add the `percent` to the type instance of the reported value */</comment>
  <if pos:line="128" pos:column="3">if <condition pos:line="128" pos:column="6">(<expr><call><name pos:line="128" pos:column="7">ipmi_sensor_get_percentage<pos:position pos:line="128" pos:column="33"/></name><argument_list pos:line="128" pos:column="33">(<argument><expr><name pos:line="128" pos:column="34">sensor<pos:position pos:line="128" pos:column="40"/></name></expr></argument>)<pos:position pos:line="128" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="128" pos:column="42"/></condition><then pos:line="128" pos:column="42"> <block pos:line="128" pos:column="43">{
    <expr_stmt><expr><call><name pos:line="129" pos:column="5">snprintf<pos:position pos:line="129" pos:column="13"/></name><argument_list pos:line="129" pos:column="13">(<argument><expr><name><name pos:line="129" pos:column="14">list_item<pos:position pos:line="129" pos:column="23"/></name><operator pos:line="129" pos:column="23">-&gt;<pos:position pos:line="129" pos:column="28"/></operator><name pos:line="129" pos:column="25">type_instance<pos:position pos:line="129" pos:column="38"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="129" pos:column="40">sizeof<argument_list pos:line="129" pos:column="46">(<argument><expr><name><name pos:line="129" pos:column="47">list_item<pos:position pos:line="129" pos:column="56"/></name><operator pos:line="129" pos:column="56">-&gt;<pos:position pos:line="129" pos:column="61"/></operator><name pos:line="129" pos:column="58">type_instance<pos:position pos:line="129" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="72"/></argument_list></sizeof></expr></argument>,
             <argument><expr><literal type="string" pos:line="130" pos:column="14">"percent-%s"<pos:position pos:line="130" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="130" pos:column="28">sensor_name_ptr<pos:position pos:line="130" pos:column="43"/></name></expr></argument>)<pos:position pos:line="130" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name pos:line="131" pos:column="5">type<pos:position pos:line="131" pos:column="9"/></name> <operator pos:line="131" pos:column="10">=<pos:position pos:line="131" pos:column="11"/></operator> <literal type="string" pos:line="131" pos:column="12">"percent"<pos:position pos:line="131" pos:column="21"/></literal></expr>;<pos:position pos:line="131" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="132" pos:column="4"/></block></then> <else pos:line="132" pos:column="5">else <block pos:line="132" pos:column="10">{
    <comment type="block" pos:line="133" pos:column="5">/* use type instance as a name of the sensor */</comment>
    <expr_stmt><expr><call><name pos:line="134" pos:column="5">sstrncpy<pos:position pos:line="134" pos:column="13"/></name><argument_list pos:line="134" pos:column="13">(<argument><expr><name><name pos:line="134" pos:column="14">list_item<pos:position pos:line="134" pos:column="23"/></name><operator pos:line="134" pos:column="23">-&gt;<pos:position pos:line="134" pos:column="28"/></operator><name pos:line="134" pos:column="25">type_instance<pos:position pos:line="134" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="40">sensor_name_ptr<pos:position pos:line="134" pos:column="55"/></name></expr></argument>,
             <argument><expr><sizeof pos:line="135" pos:column="14">sizeof<argument_list pos:line="135" pos:column="20">(<argument><expr><name><name pos:line="135" pos:column="21">list_item<pos:position pos:line="135" pos:column="30"/></name><operator pos:line="135" pos:column="30">-&gt;<pos:position pos:line="135" pos:column="35"/></operator><name pos:line="135" pos:column="32">type_instance<pos:position pos:line="135" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="135" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="136" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="138" pos:column="3">sstrncpy<pos:position pos:line="138" pos:column="11"/></name><argument_list pos:line="138" pos:column="11">(<argument><expr><name><name pos:line="138" pos:column="12">list_item<pos:position pos:line="138" pos:column="21"/></name><operator pos:line="138" pos:column="21">-&gt;<pos:position pos:line="138" pos:column="26"/></operator><name pos:line="138" pos:column="23">sensor_name<pos:position pos:line="138" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="36">sensor_name_ptr<pos:position pos:line="138" pos:column="51"/></name></expr></argument>,
           <argument><expr><sizeof pos:line="139" pos:column="12">sizeof<argument_list pos:line="139" pos:column="18">(<argument><expr><name><name pos:line="139" pos:column="19">list_item<pos:position pos:line="139" pos:column="28"/></name><operator pos:line="139" pos:column="28">-&gt;<pos:position pos:line="139" pos:column="33"/></operator><name pos:line="139" pos:column="30">sensor_name<pos:position pos:line="139" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="139" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="139" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="140" pos:column="3">sstrncpy<pos:position pos:line="140" pos:column="11"/></name><argument_list pos:line="140" pos:column="11">(<argument><expr><name><name pos:line="140" pos:column="12">list_item<pos:position pos:line="140" pos:column="21"/></name><operator pos:line="140" pos:column="21">-&gt;<pos:position pos:line="140" pos:column="26"/></operator><name pos:line="140" pos:column="23">sensor_type<pos:position pos:line="140" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="36">type<pos:position pos:line="140" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="140" pos:column="42">sizeof<argument_list pos:line="140" pos:column="48">(<argument><expr><name><name pos:line="140" pos:column="49">list_item<pos:position pos:line="140" pos:column="58"/></name><operator pos:line="140" pos:column="58">-&gt;<pos:position pos:line="140" pos:column="63"/></operator><name pos:line="140" pos:column="60">sensor_type<pos:position pos:line="140" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="140" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="74"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="142" pos:column="3">pthread_mutex_unlock<pos:position pos:line="142" pos:column="23"/></name><argument_list pos:line="142" pos:column="23">(<argument><expr><operator pos:line="142" pos:column="24">&amp;<pos:position pos:line="142" pos:column="29"/></operator><name><name pos:line="142" pos:column="25">st<pos:position pos:line="142" pos:column="27"/></name><operator pos:line="142" pos:column="27">-&gt;<pos:position pos:line="142" pos:column="32"/></operator><name pos:line="142" pos:column="29">sensor_list_lock<pos:position pos:line="142" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="47"/></expr_stmt>

  <if pos:line="144" pos:column="3">if <condition pos:line="144" pos:column="6">(<expr><name><name pos:line="144" pos:column="7">st<pos:position pos:line="144" pos:column="9"/></name><operator pos:line="144" pos:column="9">-&gt;<pos:position pos:line="144" pos:column="14"/></operator><name pos:line="144" pos:column="11">notify_add<pos:position pos:line="144" pos:column="21"/></name></name> <operator pos:line="144" pos:column="22">&amp;&amp;<pos:position pos:line="144" pos:column="32"/></operator> <operator pos:line="144" pos:column="25">(<pos:position pos:line="144" pos:column="26"/></operator><name><name pos:line="144" pos:column="26">st<pos:position pos:line="144" pos:column="28"/></name><operator pos:line="144" pos:column="28">-&gt;<pos:position pos:line="144" pos:column="33"/></operator><name pos:line="144" pos:column="30">init_in_progress<pos:position pos:line="144" pos:column="46"/></name></name> <operator pos:line="144" pos:column="47">==<pos:position pos:line="144" pos:column="49"/></operator> <literal type="number" pos:line="144" pos:column="50">0<pos:position pos:line="144" pos:column="51"/></literal><operator pos:line="144" pos:column="51">)<pos:position pos:line="144" pos:column="52"/></operator></expr>)<pos:position pos:line="144" pos:column="53"/></condition><then pos:line="144" pos:column="53"> <block pos:line="144" pos:column="54">{
    <decl_stmt><decl><type><name pos:line="145" pos:column="5">notification_t<pos:position pos:line="145" pos:column="19"/></name></type> <name pos:line="145" pos:column="20">n<pos:position pos:line="145" pos:column="21"/></name> <init pos:line="145" pos:column="22">= <expr><call><name pos:line="145" pos:column="24">c_ipmi_notification_init<pos:position pos:line="145" pos:column="48"/></name><argument_list pos:line="145" pos:column="48">(<argument><expr><name pos:line="145" pos:column="49">st<pos:position pos:line="145" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="53">NOTIF_OKAY<pos:position pos:line="145" pos:column="63"/></name></expr></argument>)<pos:position pos:line="145" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="145" pos:column="65"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="147" pos:column="5">sstrncpy<pos:position pos:line="147" pos:column="13"/></name><argument_list pos:line="147" pos:column="13">(<argument><expr><name><name pos:line="147" pos:column="14">n<pos:position pos:line="147" pos:column="15"/></name><operator pos:line="147" pos:column="15">.<pos:position pos:line="147" pos:column="16"/></operator><name pos:line="147" pos:column="16">type_instance<pos:position pos:line="147" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="147" pos:column="31">list_item<pos:position pos:line="147" pos:column="40"/></name><operator pos:line="147" pos:column="40">-&gt;<pos:position pos:line="147" pos:column="45"/></operator><name pos:line="147" pos:column="42">type_instance<pos:position pos:line="147" pos:column="55"/></name></name></expr></argument>,
             <argument><expr><sizeof pos:line="148" pos:column="14">sizeof<argument_list pos:line="148" pos:column="20">(<argument><expr><name><name pos:line="148" pos:column="21">n<pos:position pos:line="148" pos:column="22"/></name><operator pos:line="148" pos:column="22">.<pos:position pos:line="148" pos:column="23"/></operator><name pos:line="148" pos:column="23">type_instance<pos:position pos:line="148" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="148" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="149" pos:column="5">sstrncpy<pos:position pos:line="149" pos:column="13"/></name><argument_list pos:line="149" pos:column="13">(<argument><expr><name><name pos:line="149" pos:column="14">n<pos:position pos:line="149" pos:column="15"/></name><operator pos:line="149" pos:column="15">.<pos:position pos:line="149" pos:column="16"/></operator><name pos:line="149" pos:column="16">type<pos:position pos:line="149" pos:column="20"/></name></name></expr></argument>, <argument><expr><name><name pos:line="149" pos:column="22">list_item<pos:position pos:line="149" pos:column="31"/></name><operator pos:line="149" pos:column="31">-&gt;<pos:position pos:line="149" pos:column="36"/></operator><name pos:line="149" pos:column="33">sensor_type<pos:position pos:line="149" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="149" pos:column="46">sizeof<argument_list pos:line="149" pos:column="52">(<argument><expr><name><name pos:line="149" pos:column="53">n<pos:position pos:line="149" pos:column="54"/></name><operator pos:line="149" pos:column="54">.<pos:position pos:line="149" pos:column="55"/></operator><name pos:line="149" pos:column="55">type<pos:position pos:line="149" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="149" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="149" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="150" pos:column="5">snprintf<pos:position pos:line="150" pos:column="13"/></name><argument_list pos:line="150" pos:column="13">(<argument><expr><name><name pos:line="150" pos:column="14">n<pos:position pos:line="150" pos:column="15"/></name><operator pos:line="150" pos:column="15">.<pos:position pos:line="150" pos:column="16"/></operator><name pos:line="150" pos:column="16">message<pos:position pos:line="150" pos:column="23"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="150" pos:column="25">sizeof<argument_list pos:line="150" pos:column="31">(<argument><expr><name><name pos:line="150" pos:column="32">n<pos:position pos:line="150" pos:column="33"/></name><operator pos:line="150" pos:column="33">.<pos:position pos:line="150" pos:column="34"/></operator><name pos:line="150" pos:column="34">message<pos:position pos:line="150" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="150" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="44">"sensor %s added"<pos:position pos:line="150" pos:column="61"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="151" pos:column="14">list_item<pos:position pos:line="151" pos:column="23"/></name><operator pos:line="151" pos:column="23">-&gt;<pos:position pos:line="151" pos:column="28"/></operator><name pos:line="151" pos:column="25">sensor_name<pos:position pos:line="151" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="153" pos:column="5">plugin_dispatch_notification<pos:position pos:line="153" pos:column="33"/></name><argument_list pos:line="153" pos:column="33">(<argument><expr><operator pos:line="153" pos:column="34">&amp;<pos:position pos:line="153" pos:column="39"/></operator><name pos:line="153" pos:column="35">n<pos:position pos:line="153" pos:column="36"/></name></expr></argument>)<pos:position pos:line="153" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="154" pos:column="4"/></block></then></if>

  <return pos:line="156" pos:column="3">return <expr><literal type="number" pos:line="156" pos:column="10">0<pos:position pos:line="156" pos:column="11"/></literal></expr>;<pos:position pos:line="156" pos:column="12"/></return>
}<pos:position pos:line="157" pos:column="2"/></block></function></unit>

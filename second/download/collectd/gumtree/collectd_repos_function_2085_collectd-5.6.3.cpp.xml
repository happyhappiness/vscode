<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2085_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">uuid_get_from_hal<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list> <block pos:line="1" pos:column="38">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">LibHalContext<pos:position pos:line="2" pos:column="16"/></name> <modifier pos:line="2" pos:column="17">*<pos:position pos:line="2" pos:column="18"/></modifier></type><name pos:line="2" pos:column="18">ctx<pos:position pos:line="2" pos:column="21"/></name></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="4" pos:column="3">DBusError<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">error<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">DBusConnection<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">con<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">dbus_error_init<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><operator pos:line="7" pos:column="19">&amp;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="20">error<pos:position pos:line="7" pos:column="25"/></name></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><operator pos:line="9" pos:column="8">(<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">con<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">dbus_bus_get<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">DBUS_BUS_SYSTEM<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="45">&amp;<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="46">error<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call><operator pos:line="9" pos:column="52">)<pos:position pos:line="9" pos:column="53"/></operator></expr>)<pos:position pos:line="9" pos:column="54"/></condition><then pos:line="9" pos:column="54">
    <block type="pseudo"><goto pos:line="10" pos:column="5">goto <name pos:line="10" pos:column="10">bailout_nobus<pos:position pos:line="10" pos:column="23"/></name>;<pos:position pos:line="10" pos:column="24"/></goto></block></then></if>

  <expr_stmt><expr><name pos:line="12" pos:column="3">ctx<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <call><name pos:line="12" pos:column="9">libhal_ctx_new<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">()<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">libhal_ctx_set_dbus_connection<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">ctx<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">con<pos:position pos:line="13" pos:column="42"/></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><call><name pos:line="15" pos:column="8">libhal_ctx_init<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">ctx<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="29">&amp;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="30">error<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="37"/></condition><then pos:line="15" pos:column="37">
    <block type="pseudo"><goto pos:line="16" pos:column="5">goto <name pos:line="16" pos:column="10">bailout<pos:position pos:line="16" pos:column="17"/></name>;<pos:position pos:line="16" pos:column="18"/></goto></block></then></if>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><call><name pos:line="18" pos:column="8">libhal_device_property_exists<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">ctx<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">UUID_PATH<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">UUID_PROPERTY<pos:position pos:line="18" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="69">&amp;<pos:position pos:line="18" pos:column="74"/></operator><name pos:line="18" pos:column="70">error<pos:position pos:line="18" pos:column="75"/></name></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="77"/></condition><then pos:line="18" pos:column="77">
    <block type="pseudo"><goto pos:line="19" pos:column="5">goto <name pos:line="19" pos:column="10">bailout<pos:position pos:line="19" pos:column="17"/></name>;<pos:position pos:line="19" pos:column="18"/></goto></block></then></if>

  <decl_stmt><decl><type><name pos:line="21" pos:column="3">char<pos:position pos:line="21" pos:column="7"/></name> <modifier pos:line="21" pos:column="8">*<pos:position pos:line="21" pos:column="9"/></modifier></type><name pos:line="21" pos:column="9">uuid<pos:position pos:line="21" pos:column="13"/></name> <init pos:line="21" pos:column="14">=
      <expr><call><name pos:line="22" pos:column="7">libhal_device_get_property_string<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><name pos:line="22" pos:column="41">ctx<pos:position pos:line="22" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="46">UUID_PATH<pos:position pos:line="22" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="57">UUID_PROPERTY<pos:position pos:line="22" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="72">&amp;<pos:position pos:line="22" pos:column="77"/></operator><name pos:line="22" pos:column="73">error<pos:position pos:line="22" pos:column="78"/></name></expr></argument>)<pos:position pos:line="22" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="80"/></decl_stmt>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><call><name pos:line="23" pos:column="7">looks_like_a_uuid<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">uuid<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31">
    <block type="pseudo"><return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">uuid<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">)<pos:position pos:line="24" pos:column="18"/></operator></expr>;<pos:position pos:line="24" pos:column="19"/></return></block></then></if>

<label><name pos:line="26" pos:column="1">bailout<pos:position pos:line="26" pos:column="8"/></name> :<pos:position pos:line="26" pos:column="10"/></label> <block pos:line="26" pos:column="11">{
  <decl_stmt><decl><type><name pos:line="27" pos:column="3">DBusError<pos:position pos:line="27" pos:column="12"/></name></type> <name pos:line="27" pos:column="13">ctxerror<pos:position pos:line="27" pos:column="21"/></name></decl>;<pos:position pos:line="27" pos:column="22"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">dbus_error_init<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><operator pos:line="28" pos:column="19">&amp;<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="20">ctxerror<pos:position pos:line="28" pos:column="28"/></name></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><operator pos:line="29" pos:column="7">!<pos:position pos:line="29" pos:column="8"/></operator><operator pos:line="29" pos:column="8">(<pos:position pos:line="29" pos:column="9"/></operator><call><name pos:line="29" pos:column="9">libhal_ctx_shutdown<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">ctx<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="34">&amp;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="35">ctxerror<pos:position pos:line="29" pos:column="43"/></name></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call><operator pos:line="29" pos:column="44">)<pos:position pos:line="29" pos:column="45"/></operator></expr>)<pos:position pos:line="29" pos:column="46"/></condition><then pos:line="29" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="5">dbus_error_free<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><operator pos:line="30" pos:column="21">&amp;<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="22">ctxerror<pos:position pos:line="30" pos:column="30"/></name></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt></block></then></if>
}<pos:position pos:line="31" pos:column="2"/></block>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">libhal_ctx_free<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><name pos:line="33" pos:column="19">ctx<pos:position pos:line="33" pos:column="22"/></name></expr></argument>)<pos:position pos:line="33" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>

<label><name pos:line="35" pos:column="1">bailout_nobus<pos:position pos:line="35" pos:column="14"/></name>:<pos:position pos:line="35" pos:column="15"/></label>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><call><name pos:line="36" pos:column="7">dbus_error_is_set<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><operator pos:line="36" pos:column="25">&amp;<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="26">error<pos:position pos:line="36" pos:column="31"/></name></expr></argument>)<pos:position pos:line="36" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="33"/></condition><then pos:line="36" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="5">dbus_error_free<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><operator pos:line="37" pos:column="21">&amp;<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="22">error<pos:position pos:line="37" pos:column="27"/></name></expr></argument>)<pos:position pos:line="37" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt></block></then></if>
  <return pos:line="38" pos:column="3">return <expr><operator pos:line="38" pos:column="10">(<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="11">NULL<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">)<pos:position pos:line="38" pos:column="16"/></operator></expr>;<pos:position pos:line="38" pos:column="17"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_754_collectd-4.3.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cipvs_submit_dest<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">pi<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">ip_vs_dest_entry<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">de<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list> <block pos:line="1" pos:column="71">{
	<decl_stmt><decl><type><name><name pos:line="2" pos:column="9">struct<pos:position pos:line="2" pos:column="15"/></name> <name pos:line="2" pos:column="16">ip_vs_stats_user<pos:position pos:line="2" pos:column="32"/></name></name></type> <name pos:line="2" pos:column="33">stats<pos:position pos:line="2" pos:column="38"/></name> <init pos:line="2" pos:column="39">= <expr><name><name pos:line="2" pos:column="41">de<pos:position pos:line="2" pos:column="43"/></name><operator pos:line="2" pos:column="43">-&gt;<pos:position pos:line="2" pos:column="48"/></operator><name pos:line="2" pos:column="45">stats<pos:position pos:line="2" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="2" pos:column="51"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">ti<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><name pos:line="4" pos:column="17">DATA_MAX_NAME_LEN<pos:position pos:line="4" pos:column="34"/></name></expr>]<pos:position pos:line="4" pos:column="35"/></index></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal> <operator pos:line="6" pos:column="15">!=<pos:position pos:line="6" pos:column="17"/></operator> <call><name pos:line="6" pos:column="18">get_ti<pos:position pos:line="6" pos:column="24"/></name> <argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">de<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="30">ti<pos:position pos:line="6" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="34">DATA_MAX_NAME_LEN<pos:position pos:line="6" pos:column="51"/></name></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="53"/></condition><then pos:line="6" pos:column="53">
		<block type="pseudo"><return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">cipvs_submit_connections<pos:position pos:line="9" pos:column="33"/></name> <argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">pi<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="39">ti<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="43">stats<pos:position pos:line="9" pos:column="48"/></name><operator pos:line="9" pos:column="48">.<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="49">conns<pos:position pos:line="9" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">cipvs_submit_if<pos:position pos:line="10" pos:column="24"/></name> <argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">pi<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="30">"if_packets"<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">ti<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="48">stats<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">.<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="54">inpkts<pos:position pos:line="10" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="62">stats<pos:position pos:line="10" pos:column="67"/></name><operator pos:line="10" pos:column="67">.<pos:position pos:line="10" pos:column="68"/></operator><name pos:line="10" pos:column="68">outpkts<pos:position pos:line="10" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="77"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">cipvs_submit_if<pos:position pos:line="11" pos:column="24"/></name> <argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">pi<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="30">"if_octets"<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">ti<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="47">stats<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">.<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="53">inbytes<pos:position pos:line="11" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="62">stats<pos:position pos:line="11" pos:column="67"/></name><operator pos:line="11" pos:column="67">.<pos:position pos:line="11" pos:column="68"/></operator><name pos:line="11" pos:column="68">outbytes<pos:position pos:line="11" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="78"/></expr_stmt>
	<return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1319_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mv_create<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">oconfig_item_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ci<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">void<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier><modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">user_data<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list> <comment type="block" pos:line="1" pos:column="66">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">mv_match_t<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">m<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">m<pos:position pos:line="6" pos:column="4"/></name> <operator pos:line="6" pos:column="5">=<pos:position pos:line="6" pos:column="6"/></operator> <call><name pos:line="6" pos:column="7">calloc<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><literal type="number" pos:line="6" pos:column="14">1<pos:position pos:line="6" pos:column="15"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="17">sizeof<argument_list pos:line="6" pos:column="23">(<argument><expr><operator pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">m<pos:position pos:line="6" pos:column="26"/></name></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">m<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">==<pos:position pos:line="7" pos:column="11"/></operator> <name pos:line="7" pos:column="12">NULL<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17"> <block pos:line="7" pos:column="18">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"mv_create: calloc failed."<pos:position pos:line="8" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">-<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">ENOMEM<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="12" pos:column="3">m<pos:position pos:line="12" pos:column="4"/></name><operator pos:line="12" pos:column="4">-&gt;<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="6">min<pos:position pos:line="12" pos:column="9"/></name></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <name pos:line="12" pos:column="12">NAN<pos:position pos:line="12" pos:column="15"/></name></expr>;<pos:position pos:line="12" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">m<pos:position pos:line="13" pos:column="4"/></name><operator pos:line="13" pos:column="4">-&gt;<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="6">max<pos:position pos:line="13" pos:column="9"/></name></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <name pos:line="13" pos:column="12">NAN<pos:position pos:line="13" pos:column="15"/></name></expr>;<pos:position pos:line="13" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">m<pos:position pos:line="14" pos:column="4"/></name><operator pos:line="14" pos:column="4">-&gt;<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="6">invert<pos:position pos:line="14" pos:column="12"/></name></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <literal type="number" pos:line="14" pos:column="15">0<pos:position pos:line="14" pos:column="16"/></literal></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">m<pos:position pos:line="15" pos:column="4"/></name><operator pos:line="15" pos:column="4">-&gt;<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="6">satisfy<pos:position pos:line="15" pos:column="13"/></name></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">SATISFY_ALL<pos:position pos:line="15" pos:column="27"/></name></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">m<pos:position pos:line="16" pos:column="4"/></name><operator pos:line="16" pos:column="4">-&gt;<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="6">data_sources<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">NULL<pos:position pos:line="16" pos:column="25"/></name></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">m<pos:position pos:line="17" pos:column="4"/></name><operator pos:line="17" pos:column="4">-&gt;<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="6">data_sources_num<pos:position pos:line="17" pos:column="22"/></name></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">status<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></expr_stmt>
  <for pos:line="20" pos:column="3">for <control pos:line="20" pos:column="7">(<init><decl><type><name pos:line="20" pos:column="8">int<pos:position pos:line="20" pos:column="11"/></name></type> <name pos:line="20" pos:column="12">i<pos:position pos:line="20" pos:column="13"/></name> <init pos:line="20" pos:column="14">= <expr><literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="18"/></init> <condition><expr><name pos:line="20" pos:column="19">i<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">&lt;<pos:position pos:line="20" pos:column="25"/></operator> <name><name pos:line="20" pos:column="23">ci<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">-&gt;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="27">children_num<pos:position pos:line="20" pos:column="39"/></name></name></expr>;<pos:position pos:line="20" pos:column="40"/></condition> <incr><expr><name pos:line="20" pos:column="41">i<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">++<pos:position pos:line="20" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="45"/></control> <block pos:line="20" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">oconfig_item_t<pos:position pos:line="21" pos:column="19"/></name> <modifier pos:line="21" pos:column="20">*<pos:position pos:line="21" pos:column="21"/></modifier></type><name pos:line="21" pos:column="21">child<pos:position pos:line="21" pos:column="26"/></name> <init pos:line="21" pos:column="27">= <expr><name><name pos:line="21" pos:column="29">ci<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">children<pos:position pos:line="21" pos:column="41"/></name></name> <operator pos:line="21" pos:column="42">+<pos:position pos:line="21" pos:column="43"/></operator> <name pos:line="21" pos:column="44">i<pos:position pos:line="21" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="46"/></decl_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">strcasecmp<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><literal type="string" pos:line="23" pos:column="20">"Min"<pos:position pos:line="23" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="27">child<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">-&gt;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="34">key<pos:position pos:line="23" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call> <operator pos:line="23" pos:column="39">==<pos:position pos:line="23" pos:column="41"/></operator> <literal type="number" pos:line="23" pos:column="42">0<pos:position pos:line="23" pos:column="43"/></literal></expr>)<pos:position pos:line="23" pos:column="44"/></condition><then pos:line="23" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="7">status<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">mv_config_add_gauge<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><operator pos:line="24" pos:column="36">&amp;<pos:position pos:line="24" pos:column="41"/></operator><name><name pos:line="24" pos:column="37">m<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">-&gt;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="40">min<pos:position pos:line="24" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="45">child<pos:position pos:line="24" pos:column="50"/></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt></block></then>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><call><name pos:line="25" pos:column="14">strcasecmp<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><literal type="string" pos:line="25" pos:column="25">"Max"<pos:position pos:line="25" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="32">child<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">-&gt;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="39">key<pos:position pos:line="25" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call> <operator pos:line="25" pos:column="44">==<pos:position pos:line="25" pos:column="46"/></operator> <literal type="number" pos:line="25" pos:column="47">0<pos:position pos:line="25" pos:column="48"/></literal></expr>)<pos:position pos:line="25" pos:column="49"/></condition><then pos:line="25" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">status<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">mv_config_add_gauge<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><operator pos:line="26" pos:column="36">&amp;<pos:position pos:line="26" pos:column="41"/></operator><name><name pos:line="26" pos:column="37">m<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">-&gt;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="40">max<pos:position pos:line="26" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">child<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><call><name pos:line="27" pos:column="14">strcasecmp<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><literal type="string" pos:line="27" pos:column="25">"Invert"<pos:position pos:line="27" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="35">child<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">-&gt;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="42">key<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call> <operator pos:line="27" pos:column="47">==<pos:position pos:line="27" pos:column="49"/></operator> <literal type="number" pos:line="27" pos:column="50">0<pos:position pos:line="27" pos:column="51"/></literal></expr>)<pos:position pos:line="27" pos:column="52"/></condition><then pos:line="27" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">status<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">mv_config_add_boolean<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><operator pos:line="28" pos:column="38">&amp;<pos:position pos:line="28" pos:column="43"/></operator><name><name pos:line="28" pos:column="39">m<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">-&gt;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="42">invert<pos:position pos:line="28" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="50">child<pos:position pos:line="28" pos:column="55"/></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="57"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><call><name pos:line="29" pos:column="14">strcasecmp<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><literal type="string" pos:line="29" pos:column="25">"Satisfy"<pos:position pos:line="29" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="36">child<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">-&gt;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="43">key<pos:position pos:line="29" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call> <operator pos:line="29" pos:column="48">==<pos:position pos:line="29" pos:column="50"/></operator> <literal type="number" pos:line="29" pos:column="51">0<pos:position pos:line="29" pos:column="52"/></literal></expr>)<pos:position pos:line="29" pos:column="53"/></condition><then pos:line="29" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="7">status<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">mv_config_add_satisfy<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><name pos:line="30" pos:column="38">m<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="41">child<pos:position pos:line="30" pos:column="46"/></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="48"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><call><name pos:line="31" pos:column="14">strcasecmp<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="string" pos:line="31" pos:column="25">"DataSource"<pos:position pos:line="31" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="39">child<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">-&gt;<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="46">key<pos:position pos:line="31" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call> <operator pos:line="31" pos:column="51">==<pos:position pos:line="31" pos:column="53"/></operator> <literal type="number" pos:line="31" pos:column="54">0<pos:position pos:line="31" pos:column="55"/></literal></expr>)<pos:position pos:line="31" pos:column="56"/></condition><then pos:line="31" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="7">status<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <call><name pos:line="32" pos:column="16">mv_config_add_data_source<pos:position pos:line="32" pos:column="41"/></name><argument_list pos:line="32" pos:column="41">(<argument><expr><name pos:line="32" pos:column="42">m<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="45">child<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt></block></then></if></elseif>
    <else pos:line="33" pos:column="5">else <block pos:line="33" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">ERROR<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><literal type="string" pos:line="34" pos:column="13">"`value' match: The `%s' configuration option is not "<pos:position pos:line="34" pos:column="67"/></literal>
            <literal type="string" pos:line="35" pos:column="13">"understood and will be ignored."<pos:position pos:line="35" pos:column="46"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="36" pos:column="13">child<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">-&gt;<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="20">key<pos:position pos:line="36" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="37" pos:column="7">status<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">status<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">!=<pos:position pos:line="40" pos:column="18"/></operator> <literal type="number" pos:line="40" pos:column="19">0<pos:position pos:line="40" pos:column="20"/></literal></expr>)<pos:position pos:line="40" pos:column="21"/></condition><then pos:line="40" pos:column="21">
      <block type="pseudo"><break pos:line="41" pos:column="7">break;<pos:position pos:line="41" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="42" pos:column="4"/></block></for>

  <comment type="block" pos:line="44" pos:column="3">/* Additional sanity-checking */</comment>
  <while pos:line="45" pos:column="3">while <condition pos:line="45" pos:column="9">(<expr><name pos:line="45" pos:column="10">status<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">==<pos:position pos:line="45" pos:column="19"/></operator> <literal type="number" pos:line="45" pos:column="20">0<pos:position pos:line="45" pos:column="21"/></literal></expr>)<pos:position pos:line="45" pos:column="22"/></condition> <block pos:line="45" pos:column="23">{
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">isnan<pos:position pos:line="46" pos:column="14"/></name><argument_list pos:line="46" pos:column="14">(<argument><expr><name><name pos:line="46" pos:column="15">m<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">min<pos:position pos:line="46" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="22"/></argument_list></call> <operator pos:line="46" pos:column="23">&amp;&amp;<pos:position pos:line="46" pos:column="33"/></operator> <call><name pos:line="46" pos:column="26">isnan<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><name><name pos:line="46" pos:column="32">m<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">-&gt;<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="35">max<pos:position pos:line="46" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="40"/></condition><then pos:line="46" pos:column="40"> <block pos:line="46" pos:column="41">{
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">ERROR<pos:position pos:line="47" pos:column="12"/></name><argument_list pos:line="47" pos:column="12">(<argument><expr><literal type="string" pos:line="47" pos:column="13">"`value' match: Neither minimum nor maximum are defined. "<pos:position pos:line="47" pos:column="71"/></literal>
            <literal type="string" pos:line="48" pos:column="13">"This match will be ignored."<pos:position pos:line="48" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name pos:line="49" pos:column="7">status<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <operator pos:line="49" pos:column="16">-<pos:position pos:line="49" pos:column="17"/></operator><literal type="number" pos:line="49" pos:column="17">1<pos:position pos:line="49" pos:column="18"/></literal></expr>;<pos:position pos:line="49" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <break pos:line="52" pos:column="5">break;<pos:position pos:line="52" pos:column="11"/></break>
  }<pos:position pos:line="53" pos:column="4"/></block></while>

  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><name pos:line="55" pos:column="7">status<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">!=<pos:position pos:line="55" pos:column="16"/></operator> <literal type="number" pos:line="55" pos:column="17">0<pos:position pos:line="55" pos:column="18"/></literal></expr>)<pos:position pos:line="55" pos:column="19"/></condition><then pos:line="55" pos:column="19"> <block pos:line="55" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">mv_free_match<pos:position pos:line="56" pos:column="18"/></name><argument_list pos:line="56" pos:column="18">(<argument><expr><name pos:line="56" pos:column="19">m<pos:position pos:line="56" pos:column="20"/></name></expr></argument>)<pos:position pos:line="56" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="22"/></expr_stmt>
    <return pos:line="57" pos:column="5">return <expr><name pos:line="57" pos:column="12">status<pos:position pos:line="57" pos:column="18"/></name></expr>;<pos:position pos:line="57" pos:column="19"/></return>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="60" pos:column="3">*<pos:position pos:line="60" pos:column="4"/></operator><name pos:line="60" pos:column="4">user_data<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">=<pos:position pos:line="60" pos:column="15"/></operator> <name pos:line="60" pos:column="16">m<pos:position pos:line="60" pos:column="17"/></name></expr>;<pos:position pos:line="60" pos:column="18"/></expr_stmt>
  <return pos:line="61" pos:column="3">return <expr><literal type="number" pos:line="61" pos:column="10">0<pos:position pos:line="61" pos:column="11"/></literal></expr>;<pos:position pos:line="61" pos:column="12"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

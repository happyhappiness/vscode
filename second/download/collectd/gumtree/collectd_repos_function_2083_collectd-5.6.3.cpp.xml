<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2083_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">uuid_get_from_sysctlbyname<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">name<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list> <block pos:line="1" pos:column="59">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">uuid<pos:position pos:line="2" pos:column="12"/></name><index pos:line="2" pos:column="12">[<expr><name pos:line="2" pos:column="13">UUID_PRINTABLE_NORMAL_LENGTH<pos:position pos:line="2" pos:column="41"/></name> <operator pos:line="2" pos:column="42">+<pos:position pos:line="2" pos:column="43"/></operator> <literal type="number" pos:line="2" pos:column="44">1<pos:position pos:line="2" pos:column="45"/></literal></expr>]<pos:position pos:line="2" pos:column="46"/></index></name></decl>;<pos:position pos:line="2" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">len<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><sizeof pos:line="3" pos:column="16">sizeof<argument_list pos:line="3" pos:column="22">(<argument><expr><name pos:line="3" pos:column="23">uuid<pos:position pos:line="3" pos:column="27"/></name></expr></argument>)<pos:position pos:line="3" pos:column="28"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><call><name pos:line="4" pos:column="7">sysctlbyname<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><name pos:line="4" pos:column="20">name<pos:position pos:line="4" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="26">&amp;<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="27">uuid<pos:position pos:line="4" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="33">&amp;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="34">len<pos:position pos:line="4" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="39">NULL<pos:position pos:line="4" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="45">0<pos:position pos:line="4" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></call> <operator pos:line="4" pos:column="48">==<pos:position pos:line="4" pos:column="50"/></operator> <operator pos:line="4" pos:column="51">-<pos:position pos:line="4" pos:column="52"/></operator><literal type="number" pos:line="4" pos:column="52">1<pos:position pos:line="4" pos:column="53"/></literal></expr>)<pos:position pos:line="4" pos:column="54"/></condition><then pos:line="4" pos:column="54">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><name pos:line="5" pos:column="12">NULL<pos:position pos:line="5" pos:column="16"/></name></expr>;<pos:position pos:line="5" pos:column="17"/></return></block></then></if>
  <return pos:line="6" pos:column="3">return <expr><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><call><name pos:line="6" pos:column="11">strdup<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">uuid<pos:position pos:line="6" pos:column="22"/></name></expr></argument>)<pos:position pos:line="6" pos:column="23"/></argument_list></call><operator pos:line="6" pos:column="23">)<pos:position pos:line="6" pos:column="24"/></operator></expr>;<pos:position pos:line="6" pos:column="25"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

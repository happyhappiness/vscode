<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1166_collectd-5.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lpar_config<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">key<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">value<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">strcasecmp<pos:position pos:line="3" pos:column="23"/></name> <argument_list pos:line="3" pos:column="24">(<argument><expr><literal type="string" pos:line="3" pos:column="25">"CpuPoolStats"<pos:position pos:line="3" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="41">key<pos:position pos:line="3" pos:column="44"/></name></expr></argument>)<pos:position pos:line="3" pos:column="45"/></argument_list></call> <operator pos:line="3" pos:column="46">==<pos:position pos:line="3" pos:column="48"/></operator> <literal type="number" pos:line="3" pos:column="49">0<pos:position pos:line="3" pos:column="50"/></literal></expr>)<pos:position pos:line="3" pos:column="51"/></condition><then pos:line="3" pos:column="51">
	<block pos:line="4" pos:column="9">{
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><call><name pos:line="5" pos:column="21">IS_TRUE<pos:position pos:line="5" pos:column="28"/></name> <argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">value<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="37"/></condition><then pos:line="5" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="25">pool_stats<pos:position pos:line="6" pos:column="35"/></name> <operator pos:line="6" pos:column="36">=<pos:position pos:line="6" pos:column="37"/></operator> <literal type="number" pos:line="6" pos:column="38">1<pos:position pos:line="6" pos:column="39"/></literal></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt></block></then>
		<else pos:line="7" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="25">pool_stats<pos:position pos:line="8" pos:column="35"/></name> <operator pos:line="8" pos:column="36">=<pos:position pos:line="8" pos:column="37"/></operator> <literal type="number" pos:line="8" pos:column="38">0<pos:position pos:line="8" pos:column="39"/></literal></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt></block></else></if>
	}<pos:position pos:line="9" pos:column="10"/></block></then>
	<elseif pos:line="10" pos:column="9">else <if pos:line="10" pos:column="14">if <condition pos:line="10" pos:column="17">(<expr><call><name pos:line="10" pos:column="18">strcasecmp<pos:position pos:line="10" pos:column="28"/></name> <argument_list pos:line="10" pos:column="29">(<argument><expr><literal type="string" pos:line="10" pos:column="30">"ReportBySerial"<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">key<pos:position pos:line="10" pos:column="51"/></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call> <operator pos:line="10" pos:column="53">==<pos:position pos:line="10" pos:column="55"/></operator> <literal type="number" pos:line="10" pos:column="56">0<pos:position pos:line="10" pos:column="57"/></literal></expr>)<pos:position pos:line="10" pos:column="58"/></condition><then pos:line="10" pos:column="58">
	<block pos:line="11" pos:column="9">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><call><name pos:line="12" pos:column="21">IS_TRUE<pos:position pos:line="12" pos:column="28"/></name> <argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">value<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">report_by_serial<pos:position pos:line="13" pos:column="41"/></name> <operator pos:line="13" pos:column="42">=<pos:position pos:line="13" pos:column="43"/></operator> <literal type="number" pos:line="13" pos:column="44">1<pos:position pos:line="13" pos:column="45"/></literal></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt></block></then>
		<else pos:line="14" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">report_by_serial<pos:position pos:line="15" pos:column="41"/></name> <operator pos:line="15" pos:column="42">=<pos:position pos:line="15" pos:column="43"/></operator> <literal type="number" pos:line="15" pos:column="44">0<pos:position pos:line="15" pos:column="45"/></literal></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt></block></else></if>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if></elseif>
	<else pos:line="17" pos:column="9">else
	<block pos:line="18" pos:column="9">{
		<return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><operator pos:line="19" pos:column="25">-<pos:position pos:line="19" pos:column="26"/></operator><literal type="number" pos:line="19" pos:column="26">1<pos:position pos:line="19" pos:column="27"/></literal><operator pos:line="19" pos:column="27">)<pos:position pos:line="19" pos:column="28"/></operator></expr>;<pos:position pos:line="19" pos:column="29"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></else></if>

	<return pos:line="22" pos:column="9">return <expr><operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal><operator pos:line="22" pos:column="18">)<pos:position pos:line="22" pos:column="19"/></operator></expr>;<pos:position pos:line="22" pos:column="20"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_699_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">cpy_common_repr<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">PyObject<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">s<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <block pos:line="1" pos:column="47">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">PyObject<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">ret<pos:position pos:line="2" pos:column="22"/></name></decl>, <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="25">tmp<pos:position pos:line="2" pos:column="28"/></name></decl>;<pos:position pos:line="2" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">PyObject<pos:position pos:line="3" pos:column="24"/></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">l_type<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name pos:line="3" pos:column="35">NULL<pos:position pos:line="3" pos:column="39"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="42">l_type_instance<pos:position pos:line="3" pos:column="57"/></name> <init pos:line="3" pos:column="58">= <expr><name pos:line="3" pos:column="60">NULL<pos:position pos:line="3" pos:column="64"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="66">*<pos:position pos:line="3" pos:column="67"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="67">l_plugin<pos:position pos:line="3" pos:column="75"/></name> <init pos:line="3" pos:column="76">= <expr><name pos:line="3" pos:column="78">NULL<pos:position pos:line="3" pos:column="82"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="84">*<pos:position pos:line="3" pos:column="85"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="85">l_plugin_instance<pos:position pos:line="3" pos:column="102"/></name> <init pos:line="3" pos:column="103">= <expr><name pos:line="3" pos:column="105">NULL<pos:position pos:line="3" pos:column="109"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="110"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">PyObject<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">l_host<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><name pos:line="4" pos:column="35">NULL<pos:position pos:line="4" pos:column="39"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="42">l_time<pos:position pos:line="4" pos:column="48"/></name> <init pos:line="4" pos:column="49">= <expr><name pos:line="4" pos:column="51">NULL<pos:position pos:line="4" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">PluginData<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">self<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><operator pos:line="5" pos:column="28">(<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">PluginData<pos:position pos:line="5" pos:column="39"/></name> <operator pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></operator><operator pos:line="5" pos:column="41">)<pos:position pos:line="5" pos:column="42"/></operator> <name pos:line="5" pos:column="43">s<pos:position pos:line="5" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
	
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">l_type<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">==<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">l_type<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <call><name pos:line="8" pos:column="26">cpy_string_to_unicode_or_bytes<pos:position pos:line="8" pos:column="56"/></name><argument_list pos:line="8" pos:column="56">(<argument><expr><literal type="string" pos:line="8" pos:column="57">"(type="<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="67"/></expr_stmt></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">l_type_instance<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">==<pos:position pos:line="9" pos:column="31"/></operator> <name pos:line="9" pos:column="32">NULL<pos:position pos:line="9" pos:column="36"/></name></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">l_type_instance<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">=<pos:position pos:line="10" pos:column="34"/></operator> <call><name pos:line="10" pos:column="35">cpy_string_to_unicode_or_bytes<pos:position pos:line="10" pos:column="65"/></name><argument_list pos:line="10" pos:column="65">(<argument><expr><literal type="string" pos:line="10" pos:column="66">",type_instance="<pos:position pos:line="10" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="85"/></expr_stmt></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">l_plugin<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">==<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">NULL<pos:position pos:line="11" pos:column="29"/></name></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">l_plugin<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <call><name pos:line="12" pos:column="28">cpy_string_to_unicode_or_bytes<pos:position pos:line="12" pos:column="58"/></name><argument_list pos:line="12" pos:column="58">(<argument><expr><literal type="string" pos:line="12" pos:column="59">",plugin="<pos:position pos:line="12" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">l_plugin_instance<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">==<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="34">NULL<pos:position pos:line="13" pos:column="38"/></name></expr>)<pos:position pos:line="13" pos:column="39"/></condition><then pos:line="13" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">l_plugin_instance<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">=<pos:position pos:line="14" pos:column="36"/></operator> <call><name pos:line="14" pos:column="37">cpy_string_to_unicode_or_bytes<pos:position pos:line="14" pos:column="67"/></name><argument_list pos:line="14" pos:column="67">(<argument><expr><literal type="string" pos:line="14" pos:column="68">",plugin_instance="<pos:position pos:line="14" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="89"/></expr_stmt></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">l_host<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">==<pos:position pos:line="15" pos:column="22"/></operator> <name pos:line="15" pos:column="23">NULL<pos:position pos:line="15" pos:column="27"/></name></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="17">l_host<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <call><name pos:line="16" pos:column="26">cpy_string_to_unicode_or_bytes<pos:position pos:line="16" pos:column="56"/></name><argument_list pos:line="16" pos:column="56">(<argument><expr><literal type="string" pos:line="16" pos:column="57">",host="<pos:position pos:line="16" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">l_time<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">==<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">NULL<pos:position pos:line="17" pos:column="27"/></name></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">l_time<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <call><name pos:line="18" pos:column="26">cpy_string_to_unicode_or_bytes<pos:position pos:line="18" pos:column="56"/></name><argument_list pos:line="18" pos:column="56">(<argument><expr><literal type="string" pos:line="18" pos:column="57">",time="<pos:position pos:line="18" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="67"/></expr_stmt></block></then></if>
	
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">l_type<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">||<pos:position pos:line="20" pos:column="23"/></operator> <operator pos:line="20" pos:column="24">!<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">l_type_instance<pos:position pos:line="20" pos:column="40"/></name> <operator pos:line="20" pos:column="41">||<pos:position pos:line="20" pos:column="43"/></operator> <operator pos:line="20" pos:column="44">!<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="45">l_plugin<pos:position pos:line="20" pos:column="53"/></name> <operator pos:line="20" pos:column="54">||<pos:position pos:line="20" pos:column="56"/></operator> <operator pos:line="20" pos:column="57">!<pos:position pos:line="20" pos:column="58"/></operator><name pos:line="20" pos:column="58">l_plugin_instance<pos:position pos:line="20" pos:column="75"/></name> <operator pos:line="20" pos:column="76">||<pos:position pos:line="20" pos:column="78"/></operator> <operator pos:line="20" pos:column="79">!<pos:position pos:line="20" pos:column="80"/></operator><name pos:line="20" pos:column="80">l_host<pos:position pos:line="20" pos:column="86"/></name> <operator pos:line="20" pos:column="87">||<pos:position pos:line="20" pos:column="89"/></operator> <operator pos:line="20" pos:column="90">!<pos:position pos:line="20" pos:column="91"/></operator><name pos:line="20" pos:column="91">l_time<pos:position pos:line="20" pos:column="97"/></name></expr>)<pos:position pos:line="20" pos:column="98"/></condition><then pos:line="20" pos:column="98">
		<block type="pseudo"><return pos:line="21" pos:column="17">return <expr><name pos:line="21" pos:column="24">NULL<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></return></block></then></if>
	
	<expr_stmt><expr><name pos:line="23" pos:column="9">ret<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">cpy_string_to_unicode_or_bytes<pos:position pos:line="23" pos:column="45"/></name><argument_list pos:line="23" pos:column="45">(<argument><expr><name><name pos:line="23" pos:column="46">s<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">-&gt;<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="49">ob_type<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">-&gt;<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="58">tp_name<pos:position pos:line="23" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">CPY_STRCAT<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><operator pos:line="25" pos:column="20">&amp;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="21">ret<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="26">l_type<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">tmp<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <call><name pos:line="26" pos:column="15">cpy_string_to_unicode_or_bytes<pos:position pos:line="26" pos:column="45"/></name><argument_list pos:line="26" pos:column="45">(<argument><expr><name><name pos:line="26" pos:column="46">self<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">-&gt;<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="52">type<pos:position pos:line="26" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">CPY_SUBSTITUTE<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">PyObject_Repr<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="39">tmp<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="44">tmp<pos:position pos:line="27" pos:column="47"/></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">CPY_STRCAT_AND_DEL<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><operator pos:line="28" pos:column="28">&amp;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="29">ret<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="34">tmp<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">self<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">type_instance<pos:position pos:line="30" pos:column="32"/></name><index pos:line="30" pos:column="32">[<expr><literal type="number" pos:line="30" pos:column="33">0<pos:position pos:line="30" pos:column="34"/></literal></expr>]<pos:position pos:line="30" pos:column="35"/></index></name> <operator pos:line="30" pos:column="36">!=<pos:position pos:line="30" pos:column="38"/></operator> <literal type="number" pos:line="30" pos:column="39">0<pos:position pos:line="30" pos:column="40"/></literal></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41"> <block pos:line="30" pos:column="42">{
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">CPY_STRCAT<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><operator pos:line="31" pos:column="28">&amp;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="29">ret<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">l_type_instance<pos:position pos:line="31" pos:column="49"/></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="32" pos:column="17">tmp<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <call><name pos:line="32" pos:column="23">cpy_string_to_unicode_or_bytes<pos:position pos:line="32" pos:column="53"/></name><argument_list pos:line="32" pos:column="53">(<argument><expr><name><name pos:line="32" pos:column="54">self<pos:position pos:line="32" pos:column="58"/></name><operator pos:line="32" pos:column="58">-&gt;<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="60">type_instance<pos:position pos:line="32" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">CPY_SUBSTITUTE<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">PyObject_Repr<pos:position pos:line="33" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="47">tmp<pos:position pos:line="33" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="52">tmp<pos:position pos:line="33" pos:column="55"/></name></expr></argument>)<pos:position pos:line="33" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">CPY_STRCAT_AND_DEL<pos:position pos:line="34" pos:column="35"/></name><argument_list pos:line="34" pos:column="35">(<argument><expr><operator pos:line="34" pos:column="36">&amp;<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="37">ret<pos:position pos:line="34" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="42">tmp<pos:position pos:line="34" pos:column="45"/></name></expr></argument>)<pos:position pos:line="34" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name><name pos:line="37" pos:column="13">self<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">-&gt;<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="19">plugin<pos:position pos:line="37" pos:column="25"/></name><index pos:line="37" pos:column="25">[<expr><literal type="number" pos:line="37" pos:column="26">0<pos:position pos:line="37" pos:column="27"/></literal></expr>]<pos:position pos:line="37" pos:column="28"/></index></name> <operator pos:line="37" pos:column="29">!=<pos:position pos:line="37" pos:column="31"/></operator> <literal type="number" pos:line="37" pos:column="32">0<pos:position pos:line="37" pos:column="33"/></literal></expr>)<pos:position pos:line="37" pos:column="34"/></condition><then pos:line="37" pos:column="34"> <block pos:line="37" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">CPY_STRCAT<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><operator pos:line="38" pos:column="28">&amp;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="29">ret<pos:position pos:line="38" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="34">l_plugin<pos:position pos:line="38" pos:column="42"/></name></expr></argument>)<pos:position pos:line="38" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="39" pos:column="17">tmp<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <call><name pos:line="39" pos:column="23">cpy_string_to_unicode_or_bytes<pos:position pos:line="39" pos:column="53"/></name><argument_list pos:line="39" pos:column="53">(<argument><expr><name><name pos:line="39" pos:column="54">self<pos:position pos:line="39" pos:column="58"/></name><operator pos:line="39" pos:column="58">-&gt;<pos:position pos:line="39" pos:column="63"/></operator><name pos:line="39" pos:column="60">plugin<pos:position pos:line="39" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">CPY_SUBSTITUTE<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">PyObject_Repr<pos:position pos:line="40" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="47">tmp<pos:position pos:line="40" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="52">tmp<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">CPY_STRCAT_AND_DEL<pos:position pos:line="41" pos:column="35"/></name><argument_list pos:line="41" pos:column="35">(<argument><expr><operator pos:line="41" pos:column="36">&amp;<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="37">ret<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="42">tmp<pos:position pos:line="41" pos:column="45"/></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name><name pos:line="44" pos:column="13">self<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">-&gt;<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="19">plugin_instance<pos:position pos:line="44" pos:column="34"/></name><index pos:line="44" pos:column="34">[<expr><literal type="number" pos:line="44" pos:column="35">0<pos:position pos:line="44" pos:column="36"/></literal></expr>]<pos:position pos:line="44" pos:column="37"/></index></name> <operator pos:line="44" pos:column="38">!=<pos:position pos:line="44" pos:column="40"/></operator> <literal type="number" pos:line="44" pos:column="41">0<pos:position pos:line="44" pos:column="42"/></literal></expr>)<pos:position pos:line="44" pos:column="43"/></condition><then pos:line="44" pos:column="43"> <block pos:line="44" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">CPY_STRCAT<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><operator pos:line="45" pos:column="28">&amp;<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="29">ret<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="34">l_plugin_instance<pos:position pos:line="45" pos:column="51"/></name></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="46" pos:column="17">tmp<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <call><name pos:line="46" pos:column="23">cpy_string_to_unicode_or_bytes<pos:position pos:line="46" pos:column="53"/></name><argument_list pos:line="46" pos:column="53">(<argument><expr><name><name pos:line="46" pos:column="54">self<pos:position pos:line="46" pos:column="58"/></name><operator pos:line="46" pos:column="58">-&gt;<pos:position pos:line="46" pos:column="63"/></operator><name pos:line="46" pos:column="60">plugin_instance<pos:position pos:line="46" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">CPY_SUBSTITUTE<pos:position pos:line="47" pos:column="31"/></name><argument_list pos:line="47" pos:column="31">(<argument><expr><name pos:line="47" pos:column="32">PyObject_Repr<pos:position pos:line="47" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="47">tmp<pos:position pos:line="47" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="52">tmp<pos:position pos:line="47" pos:column="55"/></name></expr></argument>)<pos:position pos:line="47" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">CPY_STRCAT_AND_DEL<pos:position pos:line="48" pos:column="35"/></name><argument_list pos:line="48" pos:column="35">(<argument><expr><operator pos:line="48" pos:column="36">&amp;<pos:position pos:line="48" pos:column="41"/></operator><name pos:line="48" pos:column="37">ret<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="42">tmp<pos:position pos:line="48" pos:column="45"/></name></expr></argument>)<pos:position pos:line="48" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name><name pos:line="51" pos:column="13">self<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">-&gt;<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="19">host<pos:position pos:line="51" pos:column="23"/></name><index pos:line="51" pos:column="23">[<expr><literal type="number" pos:line="51" pos:column="24">0<pos:position pos:line="51" pos:column="25"/></literal></expr>]<pos:position pos:line="51" pos:column="26"/></index></name> <operator pos:line="51" pos:column="27">!=<pos:position pos:line="51" pos:column="29"/></operator> <literal type="number" pos:line="51" pos:column="30">0<pos:position pos:line="51" pos:column="31"/></literal></expr>)<pos:position pos:line="51" pos:column="32"/></condition><then pos:line="51" pos:column="32"> <block pos:line="51" pos:column="33">{
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">CPY_STRCAT<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><operator pos:line="52" pos:column="28">&amp;<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="29">ret<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="34">l_host<pos:position pos:line="52" pos:column="40"/></name></expr></argument>)<pos:position pos:line="52" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="53" pos:column="17">tmp<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">=<pos:position pos:line="53" pos:column="22"/></operator> <call><name pos:line="53" pos:column="23">cpy_string_to_unicode_or_bytes<pos:position pos:line="53" pos:column="53"/></name><argument_list pos:line="53" pos:column="53">(<argument><expr><name><name pos:line="53" pos:column="54">self<pos:position pos:line="53" pos:column="58"/></name><operator pos:line="53" pos:column="58">-&gt;<pos:position pos:line="53" pos:column="63"/></operator><name pos:line="53" pos:column="60">host<pos:position pos:line="53" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">CPY_SUBSTITUTE<pos:position pos:line="54" pos:column="31"/></name><argument_list pos:line="54" pos:column="31">(<argument><expr><name pos:line="54" pos:column="32">PyObject_Repr<pos:position pos:line="54" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="47">tmp<pos:position pos:line="54" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="52">tmp<pos:position pos:line="54" pos:column="55"/></name></expr></argument>)<pos:position pos:line="54" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">CPY_STRCAT_AND_DEL<pos:position pos:line="55" pos:column="35"/></name><argument_list pos:line="55" pos:column="35">(<argument><expr><operator pos:line="55" pos:column="36">&amp;<pos:position pos:line="55" pos:column="41"/></operator><name pos:line="55" pos:column="37">ret<pos:position pos:line="55" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="42">tmp<pos:position pos:line="55" pos:column="45"/></name></expr></argument>)<pos:position pos:line="55" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>

	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">self<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">-&gt;<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="19">time<pos:position pos:line="58" pos:column="23"/></name></name> <operator pos:line="58" pos:column="24">!=<pos:position pos:line="58" pos:column="26"/></operator> <literal type="number" pos:line="58" pos:column="27">0<pos:position pos:line="58" pos:column="28"/></literal></expr>)<pos:position pos:line="58" pos:column="29"/></condition><then pos:line="58" pos:column="29"> <block pos:line="58" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">CPY_STRCAT<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><operator pos:line="59" pos:column="28">&amp;<pos:position pos:line="59" pos:column="33"/></operator><name pos:line="59" pos:column="29">ret<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">l_time<pos:position pos:line="59" pos:column="40"/></name></expr></argument>)<pos:position pos:line="59" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="60" pos:column="17">tmp<pos:position pos:line="60" pos:column="20"/></name> <operator pos:line="60" pos:column="21">=<pos:position pos:line="60" pos:column="22"/></operator> <call><name pos:line="60" pos:column="23">PyFloat_FromDouble<pos:position pos:line="60" pos:column="41"/></name><argument_list pos:line="60" pos:column="41">(<argument><expr><name><name pos:line="60" pos:column="42">self<pos:position pos:line="60" pos:column="46"/></name><operator pos:line="60" pos:column="46">-&gt;<pos:position pos:line="60" pos:column="51"/></operator><name pos:line="60" pos:column="48">time<pos:position pos:line="60" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="61" pos:column="17">CPY_SUBSTITUTE<pos:position pos:line="61" pos:column="31"/></name><argument_list pos:line="61" pos:column="31">(<argument><expr><name pos:line="61" pos:column="32">PyObject_Repr<pos:position pos:line="61" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="47">tmp<pos:position pos:line="61" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="52">tmp<pos:position pos:line="61" pos:column="55"/></name></expr></argument>)<pos:position pos:line="61" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">CPY_STRCAT_AND_DEL<pos:position pos:line="62" pos:column="35"/></name><argument_list pos:line="62" pos:column="35">(<argument><expr><operator pos:line="62" pos:column="36">&amp;<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="37">ret<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="42">tmp<pos:position pos:line="62" pos:column="45"/></name></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="63" pos:column="10"/></block></then></if>
	<return pos:line="64" pos:column="9">return <expr><name pos:line="64" pos:column="16">ret<pos:position pos:line="64" pos:column="19"/></name></expr>;<pos:position pos:line="64" pos:column="20"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

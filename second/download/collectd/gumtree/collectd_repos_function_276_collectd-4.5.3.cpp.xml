<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_276_collectd-4.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">c_psql_exec_query<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">c_psql_database_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">db<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">idx<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">c_psql_query_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">query<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">PGresult<pos:position pos:line="4" pos:column="17"/></name>       <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">res<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">rows<pos:position pos:line="6" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="19">cols<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">idx<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">&gt;=<pos:position pos:line="9" pos:column="22"/></operator> <name><name pos:line="9" pos:column="20">db<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">queries_num<pos:position pos:line="9" pos:column="35"/></name></name></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">query<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name><name pos:line="12" pos:column="17">db<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">queries<pos:position pos:line="12" pos:column="28"/></name><index pos:line="12" pos:column="28">[<expr><name pos:line="12" pos:column="29">idx<pos:position pos:line="12" pos:column="32"/></name></expr>]<pos:position pos:line="12" pos:column="33"/></index></name></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><literal type="number" pos:line="14" pos:column="13">3<pos:position pos:line="14" pos:column="14"/></literal> <operator pos:line="14" pos:column="15">&lt;=<pos:position pos:line="14" pos:column="20"/></operator> <name><name pos:line="14" pos:column="18">db<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">proto_version<pos:position pos:line="14" pos:column="35"/></name></name></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">res<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <call><name pos:line="15" pos:column="23">c_psql_exec_query_params<pos:position pos:line="15" pos:column="47"/></name> <argument_list pos:line="15" pos:column="48">(<argument><expr><name pos:line="15" pos:column="49">db<pos:position pos:line="15" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="53">query<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="60"/></expr_stmt></block></then>
	<elseif pos:line="16" pos:column="9">else <if pos:line="16" pos:column="14">if <condition pos:line="16" pos:column="17">(<expr><literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal> <operator pos:line="16" pos:column="20">==<pos:position pos:line="16" pos:column="22"/></operator> <name><name pos:line="16" pos:column="23">query<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">params_num<pos:position pos:line="16" pos:column="40"/></name></name></expr>)<pos:position pos:line="16" pos:column="41"/></condition><then pos:line="16" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">res<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <call><name pos:line="17" pos:column="23">c_psql_exec_query_noparams<pos:position pos:line="17" pos:column="49"/></name> <argument_list pos:line="17" pos:column="50">(<argument><expr><name pos:line="17" pos:column="51">db<pos:position pos:line="17" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="55">query<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt></block></then></if></elseif>
	<else pos:line="18" pos:column="9">else <block pos:line="18" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">log_err<pos:position pos:line="19" pos:column="24"/></name> <argument_list pos:line="19" pos:column="25">(<argument><expr><literal type="string" pos:line="19" pos:column="26">"Connection to database \"%s\" does not support parameters "<pos:position pos:line="19" pos:column="86"/></literal>
				<literal type="string" pos:line="20" pos:column="33">"(protocol version %d) - cannot execute query \"%s\"."<pos:position pos:line="20" pos:column="87"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="21" pos:column="33">db<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">database<pos:position pos:line="21" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="47">db<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">-&gt;<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="51">proto_version<pos:position pos:line="21" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="66">query<pos:position pos:line="21" pos:column="71"/></name><operator pos:line="21" pos:column="71">-&gt;<pos:position pos:line="21" pos:column="76"/></operator><name pos:line="21" pos:column="73">name<pos:position pos:line="21" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="79"/></expr_stmt>
		<return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">-<pos:position pos:line="22" pos:column="25"/></operator><literal type="number" pos:line="22" pos:column="25">1<pos:position pos:line="22" pos:column="26"/></literal></expr>;<pos:position pos:line="22" pos:column="27"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></else></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">PGRES_TUPLES_OK<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">!=<pos:position pos:line="25" pos:column="31"/></operator> <call><name pos:line="25" pos:column="32">PQresultStatus<pos:position pos:line="25" pos:column="46"/></name> <argument_list pos:line="25" pos:column="47">(<argument><expr><name pos:line="25" pos:column="48">res<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="53"/></condition><then pos:line="25" pos:column="53"> <block pos:line="25" pos:column="54">{
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">log_err<pos:position pos:line="26" pos:column="24"/></name> <argument_list pos:line="26" pos:column="25">(<argument><expr><literal type="string" pos:line="26" pos:column="26">"Failed to execute SQL query: %s"<pos:position pos:line="26" pos:column="59"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="27" pos:column="33">PQerrorMessage<pos:position pos:line="27" pos:column="47"/></name> <argument_list pos:line="27" pos:column="48">(<argument><expr><name><name pos:line="27" pos:column="49">db<pos:position pos:line="27" pos:column="51"/></name><operator pos:line="27" pos:column="51">-&gt;<pos:position pos:line="27" pos:column="56"/></operator><name pos:line="27" pos:column="53">conn<pos:position pos:line="27" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">log_info<pos:position pos:line="28" pos:column="25"/></name> <argument_list pos:line="28" pos:column="26">(<argument><expr><literal type="string" pos:line="28" pos:column="27">"SQL query was: %s"<pos:position pos:line="28" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="48">query<pos:position pos:line="28" pos:column="53"/></name><operator pos:line="28" pos:column="53">-&gt;<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="55">query<pos:position pos:line="28" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">PQclear<pos:position pos:line="29" pos:column="24"/></name> <argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">res<pos:position pos:line="29" pos:column="29"/></name></expr></argument>)<pos:position pos:line="29" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
		<return pos:line="30" pos:column="17">return <expr><operator pos:line="30" pos:column="24">-<pos:position pos:line="30" pos:column="25"/></operator><literal type="number" pos:line="30" pos:column="25">1<pos:position pos:line="30" pos:column="26"/></literal></expr>;<pos:position pos:line="30" pos:column="27"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="33" pos:column="9">rows<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">PQntuples<pos:position pos:line="33" pos:column="25"/></name> <argument_list pos:line="33" pos:column="26">(<argument><expr><name pos:line="33" pos:column="27">res<pos:position pos:line="33" pos:column="30"/></name></expr></argument>)<pos:position pos:line="33" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><literal type="number" pos:line="34" pos:column="13">1<pos:position pos:line="34" pos:column="14"/></literal> <operator pos:line="34" pos:column="15">&gt;<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="17">rows<pos:position pos:line="34" pos:column="21"/></name></expr>)<pos:position pos:line="34" pos:column="22"/></condition><then pos:line="34" pos:column="22"> <block pos:line="34" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">PQclear<pos:position pos:line="35" pos:column="24"/></name> <argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">res<pos:position pos:line="35" pos:column="29"/></name></expr></argument>)<pos:position pos:line="35" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
		<return pos:line="36" pos:column="17">return <expr><literal type="number" pos:line="36" pos:column="24">0<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></return>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="39" pos:column="9">cols<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">PQnfields<pos:position pos:line="39" pos:column="25"/></name> <argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">res<pos:position pos:line="39" pos:column="30"/></name></expr></argument>)<pos:position pos:line="39" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name><name pos:line="40" pos:column="13">query<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">-&gt;<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="20">cols_num<pos:position pos:line="40" pos:column="28"/></name></name> <operator pos:line="40" pos:column="29">!=<pos:position pos:line="40" pos:column="31"/></operator> <name pos:line="40" pos:column="32">cols<pos:position pos:line="40" pos:column="36"/></name></expr>)<pos:position pos:line="40" pos:column="37"/></condition><then pos:line="40" pos:column="37"> <block pos:line="40" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">log_err<pos:position pos:line="41" pos:column="24"/></name> <argument_list pos:line="41" pos:column="25">(<argument><expr><literal type="string" pos:line="41" pos:column="26">"SQL query returned wrong number of fields "<pos:position pos:line="41" pos:column="70"/></literal>
				<literal type="string" pos:line="42" pos:column="33">"(expected: %i, got: %i)"<pos:position pos:line="42" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="60">query<pos:position pos:line="42" pos:column="65"/></name><operator pos:line="42" pos:column="65">-&gt;<pos:position pos:line="42" pos:column="70"/></operator><name pos:line="42" pos:column="67">cols_num<pos:position pos:line="42" pos:column="75"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="77">cols<pos:position pos:line="42" pos:column="81"/></name></expr></argument>)<pos:position pos:line="42" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="83"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">log_info<pos:position pos:line="43" pos:column="25"/></name> <argument_list pos:line="43" pos:column="26">(<argument><expr><literal type="string" pos:line="43" pos:column="27">"SQL query was: %s"<pos:position pos:line="43" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="48">query<pos:position pos:line="43" pos:column="53"/></name><operator pos:line="43" pos:column="53">-&gt;<pos:position pos:line="43" pos:column="58"/></operator><name pos:line="43" pos:column="55">query<pos:position pos:line="43" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">PQclear<pos:position pos:line="44" pos:column="24"/></name> <argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">res<pos:position pos:line="44" pos:column="29"/></name></expr></argument>)<pos:position pos:line="44" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
		<return pos:line="45" pos:column="17">return <expr><operator pos:line="45" pos:column="24">-<pos:position pos:line="45" pos:column="25"/></operator><literal type="number" pos:line="45" pos:column="25">1<pos:position pos:line="45" pos:column="26"/></literal></expr>;<pos:position pos:line="45" pos:column="27"/></return>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>

	<for pos:line="48" pos:column="9">for <control pos:line="48" pos:column="13">(<init><expr><name pos:line="48" pos:column="14">i<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <literal type="number" pos:line="48" pos:column="18">0<pos:position pos:line="48" pos:column="19"/></literal></expr>;<pos:position pos:line="48" pos:column="20"/></init> <condition><expr><name pos:line="48" pos:column="21">i<pos:position pos:line="48" pos:column="22"/></name> <operator pos:line="48" pos:column="23">&lt;<pos:position pos:line="48" pos:column="27"/></operator> <name pos:line="48" pos:column="25">rows<pos:position pos:line="48" pos:column="29"/></name></expr>;<pos:position pos:line="48" pos:column="30"/></condition> <incr><expr><operator pos:line="48" pos:column="31">++<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="33">i<pos:position pos:line="48" pos:column="34"/></name></expr></incr>)<pos:position pos:line="48" pos:column="35"/></control> <block pos:line="48" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="49" pos:column="17">int<pos:position pos:line="49" pos:column="20"/></name></type> <name pos:line="49" pos:column="21">j<pos:position pos:line="49" pos:column="22"/></name></decl>;<pos:position pos:line="49" pos:column="23"/></decl_stmt>

		<for pos:line="51" pos:column="17">for <control pos:line="51" pos:column="21">(<init><expr><name pos:line="51" pos:column="22">j<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">=<pos:position pos:line="51" pos:column="25"/></operator> <literal type="number" pos:line="51" pos:column="26">0<pos:position pos:line="51" pos:column="27"/></literal></expr>;<pos:position pos:line="51" pos:column="28"/></init> <condition><expr><name pos:line="51" pos:column="29">j<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">&lt;<pos:position pos:line="51" pos:column="35"/></operator> <name pos:line="51" pos:column="33">cols<pos:position pos:line="51" pos:column="37"/></name></expr>;<pos:position pos:line="51" pos:column="38"/></condition> <incr><expr><operator pos:line="51" pos:column="39">++<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="41">j<pos:position pos:line="51" pos:column="42"/></name></expr></incr>)<pos:position pos:line="51" pos:column="43"/></control> <block pos:line="51" pos:column="44">{
			<decl_stmt><decl><type><name pos:line="52" pos:column="25">c_psql_col_t<pos:position pos:line="52" pos:column="37"/></name></type> <name pos:line="52" pos:column="38">col<pos:position pos:line="52" pos:column="41"/></name> <init pos:line="52" pos:column="42">= <expr><name><name pos:line="52" pos:column="44">query<pos:position pos:line="52" pos:column="49"/></name><operator pos:line="52" pos:column="49">-&gt;<pos:position pos:line="52" pos:column="54"/></operator><name pos:line="52" pos:column="51">cols<pos:position pos:line="52" pos:column="55"/></name><index pos:line="52" pos:column="55">[<expr><name pos:line="52" pos:column="56">j<pos:position pos:line="52" pos:column="57"/></name></expr>]<pos:position pos:line="52" pos:column="58"/></index></name></expr></init></decl>;<pos:position pos:line="52" pos:column="59"/></decl_stmt>

			<decl_stmt><decl><type><name pos:line="54" pos:column="25">char<pos:position pos:line="54" pos:column="29"/></name> <modifier pos:line="54" pos:column="30">*<pos:position pos:line="54" pos:column="31"/></modifier></type><name pos:line="54" pos:column="31">value<pos:position pos:line="54" pos:column="36"/></name> <init pos:line="54" pos:column="37">= <expr><call><name pos:line="54" pos:column="39">PQgetvalue<pos:position pos:line="54" pos:column="49"/></name> <argument_list pos:line="54" pos:column="50">(<argument><expr><name pos:line="54" pos:column="51">res<pos:position pos:line="54" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="56">i<pos:position pos:line="54" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="59">j<pos:position pos:line="54" pos:column="60"/></name></expr></argument>)<pos:position pos:line="54" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="54" pos:column="62"/></decl_stmt>

			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><name><name pos:line="56" pos:column="29">col<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">.<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="33">ds_type<pos:position pos:line="56" pos:column="40"/></name></name> <operator pos:line="56" pos:column="41">==<pos:position pos:line="56" pos:column="43"/></operator> <name pos:line="56" pos:column="44">DS_TYPE_COUNTER<pos:position pos:line="56" pos:column="59"/></name></expr>)<pos:position pos:line="56" pos:column="60"/></condition><then pos:line="56" pos:column="60">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="33">submit_counter<pos:position pos:line="57" pos:column="47"/></name> <argument_list pos:line="57" pos:column="48">(<argument><expr><name pos:line="57" pos:column="49">db<pos:position pos:line="57" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="53">col<pos:position pos:line="57" pos:column="56"/></name><operator pos:line="57" pos:column="56">.<pos:position pos:line="57" pos:column="57"/></operator><name pos:line="57" pos:column="57">type<pos:position pos:line="57" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="63">col<pos:position pos:line="57" pos:column="66"/></name><operator pos:line="57" pos:column="66">.<pos:position pos:line="57" pos:column="67"/></operator><name pos:line="57" pos:column="67">type_instance<pos:position pos:line="57" pos:column="80"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="82">value<pos:position pos:line="57" pos:column="87"/></name></expr></argument>)<pos:position pos:line="57" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="89"/></expr_stmt></block></then>
			<elseif pos:line="58" pos:column="25">else <if pos:line="58" pos:column="30">if <condition pos:line="58" pos:column="33">(<expr><name><name pos:line="58" pos:column="34">col<pos:position pos:line="58" pos:column="37"/></name><operator pos:line="58" pos:column="37">.<pos:position pos:line="58" pos:column="38"/></operator><name pos:line="58" pos:column="38">ds_type<pos:position pos:line="58" pos:column="45"/></name></name> <operator pos:line="58" pos:column="46">==<pos:position pos:line="58" pos:column="48"/></operator> <name pos:line="58" pos:column="49">DS_TYPE_GAUGE<pos:position pos:line="58" pos:column="62"/></name></expr>)<pos:position pos:line="58" pos:column="63"/></condition><then pos:line="58" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="33">submit_gauge<pos:position pos:line="59" pos:column="45"/></name> <argument_list pos:line="59" pos:column="46">(<argument><expr><name pos:line="59" pos:column="47">db<pos:position pos:line="59" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="51">col<pos:position pos:line="59" pos:column="54"/></name><operator pos:line="59" pos:column="54">.<pos:position pos:line="59" pos:column="55"/></operator><name pos:line="59" pos:column="55">type<pos:position pos:line="59" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="61">col<pos:position pos:line="59" pos:column="64"/></name><operator pos:line="59" pos:column="64">.<pos:position pos:line="59" pos:column="65"/></operator><name pos:line="59" pos:column="65">type_instance<pos:position pos:line="59" pos:column="78"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="80">value<pos:position pos:line="59" pos:column="85"/></name></expr></argument>)<pos:position pos:line="59" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="87"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="60" pos:column="18"/></block></for>
	}<pos:position pos:line="61" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">PQclear<pos:position pos:line="62" pos:column="16"/></name> <argument_list pos:line="62" pos:column="17">(<argument><expr><name pos:line="62" pos:column="18">res<pos:position pos:line="62" pos:column="21"/></name></expr></argument>)<pos:position pos:line="62" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="23"/></expr_stmt>
	<return pos:line="63" pos:column="9">return <expr><literal type="number" pos:line="63" pos:column="16">0<pos:position pos:line="63" pos:column="17"/></literal></expr>;<pos:position pos:line="63" pos:column="18"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

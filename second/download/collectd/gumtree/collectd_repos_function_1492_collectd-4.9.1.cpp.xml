<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1492_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ut_config_host<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">threshold_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">th_orig<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">oconfig_item_t<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">ci<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">threshold_t<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">th<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name><name pos:line="7" pos:column="8">ci<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">values_num<pos:position pos:line="7" pos:column="22"/></name></name> <operator pos:line="7" pos:column="23">!=<pos:position pos:line="7" pos:column="25"/></operator> <literal type="number" pos:line="7" pos:column="26">1<pos:position pos:line="7" pos:column="27"/></literal><operator pos:line="7" pos:column="27">)<pos:position pos:line="7" pos:column="28"/></operator>
      <operator pos:line="8" pos:column="7">||<pos:position pos:line="8" pos:column="9"/></operator> <operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name><name pos:line="8" pos:column="11">ci<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">values<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr>]<pos:position pos:line="8" pos:column="24"/></index></name><operator pos:line="8" pos:column="24">.<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">type<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">!=<pos:position pos:line="8" pos:column="32"/></operator> <name pos:line="8" pos:column="33">OCONFIG_TYPE_STRING<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">)<pos:position pos:line="8" pos:column="53"/></operator></expr>)<pos:position pos:line="8" pos:column="54"/></condition><then pos:line="8" pos:column="54">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">WARNING<pos:position pos:line="10" pos:column="12"/></name> <argument_list pos:line="10" pos:column="13">(<argument><expr><literal type="string" pos:line="10" pos:column="14">"threshold values: The `Host' block needs exactly one string "<pos:position pos:line="10" pos:column="76"/></literal>
	<literal type="string" pos:line="11" pos:column="9">"argument."<pos:position pos:line="11" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">ci<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">children_num<pos:position pos:line="15" pos:column="23"/></name></name> <operator pos:line="15" pos:column="24">&lt;<pos:position pos:line="15" pos:column="28"/></operator> <literal type="number" pos:line="15" pos:column="26">1<pos:position pos:line="15" pos:column="27"/></literal></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">WARNING<pos:position pos:line="17" pos:column="12"/></name> <argument_list pos:line="17" pos:column="13">(<argument><expr><literal type="string" pos:line="17" pos:column="14">"threshold values: The `Host' block needs at least one nested "<pos:position pos:line="17" pos:column="77"/></literal>
	<literal type="string" pos:line="18" pos:column="9">"block."<pos:position pos:line="18" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">memcpy<pos:position pos:line="22" pos:column="9"/></name> <argument_list pos:line="22" pos:column="10">(<argument><expr><operator pos:line="22" pos:column="11">&amp;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="12">th<pos:position pos:line="22" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="16">th_orig<pos:position pos:line="22" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="25">sizeof <argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">th<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">sstrncpy<pos:position pos:line="23" pos:column="11"/></name> <argument_list pos:line="23" pos:column="12">(<argument><expr><name><name pos:line="23" pos:column="13">th<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">.<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">host<pos:position pos:line="23" pos:column="20"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="22">ci<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">values<pos:position pos:line="23" pos:column="32"/></name><index pos:line="23" pos:column="32">[<expr><literal type="number" pos:line="23" pos:column="33">0<pos:position pos:line="23" pos:column="34"/></literal></expr>]<pos:position pos:line="23" pos:column="35"/></index></name><operator pos:line="23" pos:column="35">.<pos:position pos:line="23" pos:column="36"/></operator><name><name pos:line="23" pos:column="36">value<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">.<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="42">string<pos:position pos:line="23" pos:column="48"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="50">sizeof <argument_list pos:line="23" pos:column="57">(<argument><expr><name><name pos:line="23" pos:column="58">th<pos:position pos:line="23" pos:column="60"/></name><operator pos:line="23" pos:column="60">.<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="61">host<pos:position pos:line="23" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt>

  <for pos:line="25" pos:column="3">for <control pos:line="25" pos:column="7">(<init><expr><name pos:line="25" pos:column="8">i<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <literal type="number" pos:line="25" pos:column="12">0<pos:position pos:line="25" pos:column="13"/></literal></expr>;<pos:position pos:line="25" pos:column="14"/></init> <condition><expr><name pos:line="25" pos:column="15">i<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">&lt;<pos:position pos:line="25" pos:column="21"/></operator> <name><name pos:line="25" pos:column="19">ci<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">children_num<pos:position pos:line="25" pos:column="35"/></name></name></expr>;<pos:position pos:line="25" pos:column="36"/></condition> <incr><expr><name pos:line="25" pos:column="37">i<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">++<pos:position pos:line="25" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="41"/></control>
  <block pos:line="26" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">oconfig_item_t<pos:position pos:line="27" pos:column="19"/></name> <modifier pos:line="27" pos:column="20">*<pos:position pos:line="27" pos:column="21"/></modifier></type><name pos:line="27" pos:column="21">option<pos:position pos:line="27" pos:column="27"/></name> <init pos:line="27" pos:column="28">= <expr><name><name pos:line="27" pos:column="30">ci<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">children<pos:position pos:line="27" pos:column="42"/></name></name> <operator pos:line="27" pos:column="43">+<pos:position pos:line="27" pos:column="44"/></operator> <name pos:line="27" pos:column="45">i<pos:position pos:line="27" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="47"/></decl_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">status<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <literal type="number" pos:line="28" pos:column="14">0<pos:position pos:line="28" pos:column="15"/></literal></expr>;<pos:position pos:line="28" pos:column="16"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name pos:line="30" pos:column="9">strcasecmp<pos:position pos:line="30" pos:column="19"/></name> <argument_list pos:line="30" pos:column="20">(<argument><expr><literal type="string" pos:line="30" pos:column="21">"Type"<pos:position pos:line="30" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="29">option<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">key<pos:position pos:line="30" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call> <operator pos:line="30" pos:column="42">==<pos:position pos:line="30" pos:column="44"/></operator> <literal type="number" pos:line="30" pos:column="45">0<pos:position pos:line="30" pos:column="46"/></literal></expr>)<pos:position pos:line="30" pos:column="47"/></condition><then pos:line="30" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">status<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">ut_config_type<pos:position pos:line="31" pos:column="30"/></name> <argument_list pos:line="31" pos:column="31">(<argument><expr><operator pos:line="31" pos:column="32">&amp;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="33">th<pos:position pos:line="31" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="37">option<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="45"/></expr_stmt></block></then>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><call><name pos:line="32" pos:column="14">strcasecmp<pos:position pos:line="32" pos:column="24"/></name> <argument_list pos:line="32" pos:column="25">(<argument><expr><literal type="string" pos:line="32" pos:column="26">"Plugin"<pos:position pos:line="32" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="36">option<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">key<pos:position pos:line="32" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call> <operator pos:line="32" pos:column="49">==<pos:position pos:line="32" pos:column="51"/></operator> <literal type="number" pos:line="32" pos:column="52">0<pos:position pos:line="32" pos:column="53"/></literal></expr>)<pos:position pos:line="32" pos:column="54"/></condition><then pos:line="32" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">status<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">ut_config_plugin<pos:position pos:line="33" pos:column="32"/></name> <argument_list pos:line="33" pos:column="33">(<argument><expr><operator pos:line="33" pos:column="34">&amp;<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="35">th<pos:position pos:line="33" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">option<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt></block></then></if></elseif>
    <else pos:line="34" pos:column="5">else
    <block pos:line="35" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">WARNING<pos:position pos:line="36" pos:column="14"/></name> <argument_list pos:line="36" pos:column="15">(<argument><expr><literal type="string" pos:line="36" pos:column="16">"threshold values: Option `%s' not allowed inside a `Host' "<pos:position pos:line="36" pos:column="76"/></literal>
	  <literal type="string" pos:line="37" pos:column="11">"block."<pos:position pos:line="37" pos:column="19"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="21">option<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">-&gt;<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="29">key<pos:position pos:line="37" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name pos:line="38" pos:column="7">status<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <operator pos:line="38" pos:column="16">-<pos:position pos:line="38" pos:column="17"/></operator><literal type="number" pos:line="38" pos:column="17">1<pos:position pos:line="38" pos:column="18"/></literal></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></else></if>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">status<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">!=<pos:position pos:line="41" pos:column="18"/></operator> <literal type="number" pos:line="41" pos:column="19">0<pos:position pos:line="41" pos:column="20"/></literal></expr>)<pos:position pos:line="41" pos:column="21"/></condition><then pos:line="41" pos:column="21">
      <block type="pseudo"><break pos:line="42" pos:column="7">break;<pos:position pos:line="42" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="43" pos:column="4"/></block></for>

  <return pos:line="45" pos:column="3">return <expr><operator pos:line="45" pos:column="10">(<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">status<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">)<pos:position pos:line="45" pos:column="18"/></operator></expr>;<pos:position pos:line="45" pos:column="19"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

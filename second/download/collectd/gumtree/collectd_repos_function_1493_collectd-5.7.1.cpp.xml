<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1493_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">c_ipmi_init<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list> <block pos:line="1" pos:column="30">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">status<pos:position pos:line="2" pos:column="13"/></name></decl>;<pos:position pos:line="2" pos:column="14"/></decl_stmt>

  <comment type="block" pos:line="4" pos:column="3">/* Don't send `ADD' notifications during startup (~ 1 minute) */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">time_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">iv<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><call><name pos:line="5" pos:column="15">CDTIME_T_TO_TIME_T<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">(<argument><expr><call><name pos:line="5" pos:column="34">plugin_get_interval<pos:position pos:line="5" pos:column="53"/></name><argument_list pos:line="5" pos:column="53">()<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="57"/></decl_stmt>
  <expr_stmt><expr><name pos:line="6" pos:column="3">c_ipmi_init_in_progress<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">=<pos:position pos:line="6" pos:column="28"/></operator> <literal type="number" pos:line="6" pos:column="29">1<pos:position pos:line="6" pos:column="30"/></literal> <operator pos:line="6" pos:column="31">+<pos:position pos:line="6" pos:column="32"/></operator> <operator pos:line="6" pos:column="33">(<pos:position pos:line="6" pos:column="34"/></operator><literal type="number" pos:line="6" pos:column="34">60<pos:position pos:line="6" pos:column="36"/></literal> <operator pos:line="6" pos:column="37">/<pos:position pos:line="6" pos:column="38"/></operator> <name pos:line="6" pos:column="39">iv<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">)<pos:position pos:line="6" pos:column="42"/></operator></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">c_ipmi_active<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <literal type="number" pos:line="8" pos:column="19">1<pos:position pos:line="8" pos:column="20"/></literal></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">status<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">plugin_thread_create<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><operator pos:line="10" pos:column="33">&amp;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="34">thread_id<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <comment type="block" pos:line="10" pos:column="45">/* attr = */</comment> <argument><expr><name pos:line="10" pos:column="58">NULL<pos:position pos:line="10" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="64">thread_main<pos:position pos:line="10" pos:column="75"/></name></expr></argument>,
                                <comment type="block" pos:line="11" pos:column="33">/* user data = */</comment> <argument><expr><name pos:line="11" pos:column="51">NULL<pos:position pos:line="11" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="57">"ipmi"<pos:position pos:line="11" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">status<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">!=<pos:position pos:line="12" pos:column="16"/></operator> <literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19"> <block pos:line="12" pos:column="20">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">c_ipmi_active<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">thread_id<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <operator pos:line="14" pos:column="17">(<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">pthread_t<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator><literal type="number" pos:line="14" pos:column="28">0<pos:position pos:line="14" pos:column="29"/></literal></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ERROR<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><literal type="string" pos:line="15" pos:column="11">"ipmi plugin: pthread_create failed."<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-<pos:position pos:line="16" pos:column="14"/></operator><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal><operator pos:line="16" pos:column="15">)<pos:position pos:line="16" pos:column="16"/></operator></expr>;<pos:position pos:line="16" pos:column="17"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <return pos:line="19" pos:column="3">return <expr><operator pos:line="19" pos:column="10">(<pos:position pos:line="19" pos:column="11"/></operator><literal type="number" pos:line="19" pos:column="11">0<pos:position pos:line="19" pos:column="12"/></literal><operator pos:line="19" pos:column="12">)<pos:position pos:line="19" pos:column="13"/></operator></expr>;<pos:position pos:line="19" pos:column="14"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

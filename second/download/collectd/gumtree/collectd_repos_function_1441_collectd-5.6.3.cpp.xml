<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1441_collectd-5.6.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">cu_mount_t<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">cu_mount_getlist<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">cu_mount_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">list<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <block pos:line="1" pos:column="49">{
  <expr_stmt><expr><name pos:line="2" pos:column="3">cu_mount_t<pos:position pos:line="2" pos:column="13"/></name> <operator pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></operator><operator pos:line="2" pos:column="15">new<pos:position pos:line="2" pos:column="18"/></operator></expr>;<pos:position pos:line="2" pos:column="19"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cu_mount_t<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">first<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">NULL<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cu_mount_t<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">last<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">NULL<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">list<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">==<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">NULL<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">)<pos:position pos:line="7" pos:column="18"/></operator></expr>;<pos:position pos:line="7" pos:column="19"/></return></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">*<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">list<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">!=<pos:position pos:line="9" pos:column="15"/></operator> <name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">first<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <operator pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">list<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">last<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <name pos:line="11" pos:column="12">first<pos:position pos:line="11" pos:column="17"/></name></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt>
    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><name><name pos:line="12" pos:column="12">last<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">next<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">!=<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">NULL<pos:position pos:line="12" pos:column="30"/></name></expr>)<pos:position pos:line="12" pos:column="31"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="7">last<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <name><name pos:line="13" pos:column="14">last<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">next<pos:position pos:line="13" pos:column="24"/></name></name></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt></block></while>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><name pos:line="16" pos:column="5">HAVE_LISTMNTENT<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">&amp;&amp;<pos:position pos:line="16" pos:column="31"/></operator> <literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr></cpp:if>
  <expr_stmt><expr><operator pos:line="17" pos:column="3">new<pos:position pos:line="17" pos:column="6"/></operator> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">cu_mount_listmntent<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">()<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
<cpp:elif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">elif<pos:position pos:line="18" pos:column="6"/></cpp:directive> <expr><name pos:line="18" pos:column="7">HAVE_GETVFSSTAT<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">||<pos:position pos:line="18" pos:column="25"/></operator> <name pos:line="18" pos:column="26">HAVE_GETFSSTAT<pos:position pos:line="18" pos:column="40"/></name></expr></cpp:elif>
  <expr_stmt><expr><operator pos:line="19" pos:column="3">new<pos:position pos:line="19" pos:column="6"/></operator> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <call><name pos:line="19" pos:column="9">cu_mount_getfsstat<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">()<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
<cpp:elif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">elif<pos:position pos:line="20" pos:column="6"/></cpp:directive> <expr><name pos:line="20" pos:column="7">HAVE_TWO_GETMNTENT<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">||<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="29">HAVE_GEN_GETMNTENT<pos:position pos:line="20" pos:column="47"/></name> <operator pos:line="20" pos:column="48">||<pos:position pos:line="20" pos:column="50"/></operator> <name pos:line="20" pos:column="51">HAVE_SUN_GETMNTENT<pos:position pos:line="20" pos:column="69"/></name></expr></cpp:elif>
  <expr_stmt><expr><operator pos:line="21" pos:column="3">new<pos:position pos:line="21" pos:column="6"/></operator> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <call><name pos:line="21" pos:column="9">cu_mount_gen_getmntent<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">()<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
<cpp:elif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">elif<pos:position pos:line="22" pos:column="6"/></cpp:directive> <expr><name pos:line="22" pos:column="7">HAVE_SEQ_GETMNTENT<pos:position pos:line="22" pos:column="25"/></name></expr></cpp:elif>
<cpp:error pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">error<pos:position pos:line="23" pos:column="7"/></cpp:directive> <cpp:literal pos:line="23" pos:column="8">"This version of `getmntent' hat not yet been implemented!"<pos:position pos:line="23" pos:column="67"/></cpp:literal></cpp:error>
<cpp:elif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">elif<pos:position pos:line="24" pos:column="6"/></cpp:directive> <expr><name pos:line="24" pos:column="7">HAVE_ONE_GETMNTENT<pos:position pos:line="24" pos:column="25"/></name></expr></cpp:elif>
  <expr_stmt><expr><operator pos:line="25" pos:column="3">new<pos:position pos:line="25" pos:column="6"/></operator> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <call><name pos:line="25" pos:column="9">cu_mount_getmntent<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">()<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
<cpp:else pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">else<pos:position pos:line="26" pos:column="6"/></cpp:directive></cpp:else>
<cpp:error pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">error<pos:position pos:line="27" pos:column="7"/></cpp:directive> <cpp:literal pos:line="27" pos:column="8">"Could not determine how to find mountpoints."<pos:position pos:line="27" pos:column="54"/></cpp:literal></cpp:error>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">first<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">!=<pos:position pos:line="30" pos:column="15"/></operator> <name pos:line="30" pos:column="16">NULL<pos:position pos:line="30" pos:column="20"/></name></expr>)<pos:position pos:line="30" pos:column="21"/></condition><then pos:line="30" pos:column="21"> <block pos:line="30" pos:column="22">{
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">last<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">next<pos:position pos:line="31" pos:column="15"/></name></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <operator pos:line="31" pos:column="18">new<pos:position pos:line="31" pos:column="21"/></operator></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></then> <else pos:line="32" pos:column="5">else <block pos:line="32" pos:column="10">{
    <expr_stmt><expr><name pos:line="33" pos:column="5">first<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <operator pos:line="33" pos:column="13">new<pos:position pos:line="33" pos:column="16"/></operator></expr>;<pos:position pos:line="33" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">last<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <operator pos:line="34" pos:column="12">new<pos:position pos:line="34" pos:column="15"/></operator></expr>;<pos:position pos:line="34" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="35" pos:column="5">*<pos:position pos:line="35" pos:column="6"/></operator><name pos:line="35" pos:column="6">list<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <name pos:line="35" pos:column="13">first<pos:position pos:line="35" pos:column="18"/></name></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></else></if>

  <while pos:line="38" pos:column="3">while <condition pos:line="38" pos:column="9">(<expr><operator pos:line="38" pos:column="10">(<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="11">last<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">!=<pos:position pos:line="38" pos:column="18"/></operator> <name pos:line="38" pos:column="19">NULL<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">)<pos:position pos:line="38" pos:column="24"/></operator> <operator pos:line="38" pos:column="25">&amp;&amp;<pos:position pos:line="38" pos:column="35"/></operator> <operator pos:line="38" pos:column="28">(<pos:position pos:line="38" pos:column="29"/></operator><name><name pos:line="38" pos:column="29">last<pos:position pos:line="38" pos:column="33"/></name><operator pos:line="38" pos:column="33">-&gt;<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="35">next<pos:position pos:line="38" pos:column="39"/></name></name> <operator pos:line="38" pos:column="40">!=<pos:position pos:line="38" pos:column="42"/></operator> <name pos:line="38" pos:column="43">NULL<pos:position pos:line="38" pos:column="47"/></name><operator pos:line="38" pos:column="47">)<pos:position pos:line="38" pos:column="48"/></operator></expr>)<pos:position pos:line="38" pos:column="49"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="5">last<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <name><name pos:line="39" pos:column="12">last<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="18">next<pos:position pos:line="39" pos:column="22"/></name></name></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt></block></while>

  <return pos:line="41" pos:column="3">return <expr><operator pos:line="41" pos:column="10">(<pos:position pos:line="41" pos:column="11"/></operator><name pos:line="41" pos:column="11">last<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">)<pos:position pos:line="41" pos:column="16"/></operator></expr>;<pos:position pos:line="41" pos:column="17"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

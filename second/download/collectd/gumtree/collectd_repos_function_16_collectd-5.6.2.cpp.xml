<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_16_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">canonicalize_path<pos:position pos:line="2" pos:column="18"/></name> <parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">path<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier><modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">pcanonical<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">canonical<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name> <argument_list pos:line="6" pos:column="10">(<argument><expr><name pos:line="6" pos:column="11">path<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">&amp;&amp;<pos:position pos:line="6" pos:column="26"/></operator> <operator pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">path<pos:position pos:line="6" pos:column="24"/></name></expr></argument>)<pos:position pos:line="6" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">pcanonical<pos:position pos:line="7" pos:column="21"/></name></expr></argument>)<pos:position pos:line="7" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">canonical<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">MALLOC<pos:position pos:line="9" pos:column="21"/></name> <argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="29">1<pos:position pos:line="9" pos:column="30"/></literal><operator pos:line="9" pos:column="30">+<pos:position pos:line="9" pos:column="31"/></operator> <call><name pos:line="9" pos:column="32">LT_STRLEN<pos:position pos:line="9" pos:column="41"/></name> <argument_list pos:line="9" pos:column="42">(<argument><expr><name pos:line="9" pos:column="43">path<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">canonical<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">1<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return></block></then></if>

  <block pos:line="13" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">size_t<pos:position pos:line="14" pos:column="11"/></name></type> <name pos:line="14" pos:column="12">dest<pos:position pos:line="14" pos:column="16"/></name> <init pos:line="14" pos:column="17">= <expr><literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">size_t<pos:position pos:line="15" pos:column="11"/></name></type> <name pos:line="15" pos:column="12">src<pos:position pos:line="15" pos:column="15"/></name></decl>;<pos:position pos:line="15" pos:column="16"/></decl_stmt>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">src<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></init> <condition><expr><name><name pos:line="16" pos:column="19">path<pos:position pos:line="16" pos:column="23"/></name><index pos:line="16" pos:column="23">[<expr><name pos:line="16" pos:column="24">src<pos:position pos:line="16" pos:column="27"/></name></expr>]<pos:position pos:line="16" pos:column="28"/></index></name> <operator pos:line="16" pos:column="29">!=<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="32">LT_EOS_CHAR<pos:position pos:line="16" pos:column="43"/></name></expr>;<pos:position pos:line="16" pos:column="44"/></condition> <incr><expr><operator pos:line="16" pos:column="45">++<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="47">src<pos:position pos:line="16" pos:column="50"/></name></expr></incr>)<pos:position pos:line="16" pos:column="51"/></control>
      <block pos:line="17" pos:column="7">{
	<comment type="block" pos:line="18" pos:column="9">/* Path separators are not copied to the beginning or end of
	   the destination, or if another separator would follow
	   immediately.  */</comment>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">path<pos:position pos:line="21" pos:column="17"/></name><index pos:line="21" pos:column="17">[<expr><name pos:line="21" pos:column="18">src<pos:position pos:line="21" pos:column="21"/></name></expr>]<pos:position pos:line="21" pos:column="22"/></index></name> <operator pos:line="21" pos:column="23">==<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">LT_PATHSEP_CHAR<pos:position pos:line="21" pos:column="41"/></name></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42">
	  <block pos:line="22" pos:column="11">{
	    <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><operator pos:line="23" pos:column="17">(<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">dest<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">==<pos:position pos:line="23" pos:column="25"/></operator> <literal type="number" pos:line="23" pos:column="26">0<pos:position pos:line="23" pos:column="27"/></literal><operator pos:line="23" pos:column="27">)<pos:position pos:line="23" pos:column="28"/></operator>
		<operator pos:line="24" pos:column="17">||<pos:position pos:line="24" pos:column="19"/></operator> <operator pos:line="24" pos:column="20">(<pos:position pos:line="24" pos:column="21"/></operator><name><name pos:line="24" pos:column="21">path<pos:position pos:line="24" pos:column="25"/></name><index pos:line="24" pos:column="25">[<expr><literal type="number" pos:line="24" pos:column="26">1<pos:position pos:line="24" pos:column="27"/></literal><operator pos:line="24" pos:column="27">+<pos:position pos:line="24" pos:column="28"/></operator> <name pos:line="24" pos:column="29">src<pos:position pos:line="24" pos:column="32"/></name></expr>]<pos:position pos:line="24" pos:column="33"/></index></name> <operator pos:line="24" pos:column="34">==<pos:position pos:line="24" pos:column="36"/></operator> <name pos:line="24" pos:column="37">LT_PATHSEP_CHAR<pos:position pos:line="24" pos:column="52"/></name><operator pos:line="24" pos:column="52">)<pos:position pos:line="24" pos:column="53"/></operator>
		<operator pos:line="25" pos:column="17">||<pos:position pos:line="25" pos:column="19"/></operator> <operator pos:line="25" pos:column="20">(<pos:position pos:line="25" pos:column="21"/></operator><name><name pos:line="25" pos:column="21">path<pos:position pos:line="25" pos:column="25"/></name><index pos:line="25" pos:column="25">[<expr><literal type="number" pos:line="25" pos:column="26">1<pos:position pos:line="25" pos:column="27"/></literal><operator pos:line="25" pos:column="27">+<pos:position pos:line="25" pos:column="28"/></operator> <name pos:line="25" pos:column="29">src<pos:position pos:line="25" pos:column="32"/></name></expr>]<pos:position pos:line="25" pos:column="33"/></index></name> <operator pos:line="25" pos:column="34">==<pos:position pos:line="25" pos:column="36"/></operator> <name pos:line="25" pos:column="37">LT_EOS_CHAR<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">)<pos:position pos:line="25" pos:column="49"/></operator></expr>)<pos:position pos:line="25" pos:column="50"/></condition><then pos:line="25" pos:column="50">
	      <block type="pseudo"><continue pos:line="26" pos:column="15">continue;<pos:position pos:line="26" pos:column="24"/></continue></block></then></if>
	  }<pos:position pos:line="27" pos:column="12"/></block></then></if>

	<comment type="block" pos:line="29" pos:column="9">/* Anything other than a directory separator is copied verbatim.  */</comment>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">(<pos:position pos:line="30" pos:column="14"/></operator><name><name pos:line="30" pos:column="14">path<pos:position pos:line="30" pos:column="18"/></name><index pos:line="30" pos:column="18">[<expr><name pos:line="30" pos:column="19">src<pos:position pos:line="30" pos:column="22"/></name></expr>]<pos:position pos:line="30" pos:column="23"/></index></name> <operator pos:line="30" pos:column="24">!=<pos:position pos:line="30" pos:column="26"/></operator> <literal type="char" pos:line="30" pos:column="27">'/'<pos:position pos:line="30" pos:column="30"/></literal><operator pos:line="30" pos:column="30">)<pos:position pos:line="30" pos:column="31"/></operator>
<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><call><name pos:line="31" pos:column="5">defined<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><name pos:line="31" pos:column="13">LT_DIRSEP_CHAR<pos:position pos:line="31" pos:column="27"/></name></expr></argument>)<pos:position pos:line="31" pos:column="28"/></argument_list></call></expr></cpp:if>
	    <operator pos:line="32" pos:column="13">&amp;&amp;<pos:position pos:line="32" pos:column="23"/></operator> <operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><name><name pos:line="32" pos:column="17">path<pos:position pos:line="32" pos:column="21"/></name><index pos:line="32" pos:column="21">[<expr><name pos:line="32" pos:column="22">src<pos:position pos:line="32" pos:column="25"/></name></expr>]<pos:position pos:line="32" pos:column="26"/></index></name> <operator pos:line="32" pos:column="27">!=<pos:position pos:line="32" pos:column="29"/></operator> <name pos:line="32" pos:column="30">LT_DIRSEP_CHAR<pos:position pos:line="32" pos:column="44"/></name><operator pos:line="32" pos:column="44">)<pos:position pos:line="32" pos:column="45"/></operator></expr>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
	    )<pos:position pos:line="34" pos:column="14"/></condition><then pos:line="34" pos:column="14">
	  <block pos:line="35" pos:column="11">{
	    <expr_stmt><expr><name><name pos:line="36" pos:column="13">canonical<pos:position pos:line="36" pos:column="22"/></name><index pos:line="36" pos:column="22">[<expr><name pos:line="36" pos:column="23">dest<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">++<pos:position pos:line="36" pos:column="29"/></operator></expr>]<pos:position pos:line="36" pos:column="30"/></index></name> <operator pos:line="36" pos:column="31">=<pos:position pos:line="36" pos:column="32"/></operator> <name><name pos:line="36" pos:column="33">path<pos:position pos:line="36" pos:column="37"/></name><index pos:line="36" pos:column="37">[<expr><name pos:line="36" pos:column="38">src<pos:position pos:line="36" pos:column="41"/></name></expr>]<pos:position pos:line="36" pos:column="42"/></index></name></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>
	  }<pos:position pos:line="37" pos:column="12"/></block></then>
	<comment type="block" pos:line="38" pos:column="9">/* Directory separators are converted and copied only if they are
	   not at the end of a path -- i.e. before a path separator or
	   NULL terminator.  */</comment>
	<elseif pos:line="41" pos:column="9">else <if pos:line="41" pos:column="14">if <condition pos:line="41" pos:column="17">(<expr><operator pos:line="41" pos:column="18">(<pos:position pos:line="41" pos:column="19"/></operator><name><name pos:line="41" pos:column="19">path<pos:position pos:line="41" pos:column="23"/></name><index pos:line="41" pos:column="23">[<expr><literal type="number" pos:line="41" pos:column="24">1<pos:position pos:line="41" pos:column="25"/></literal><operator pos:line="41" pos:column="25">+<pos:position pos:line="41" pos:column="26"/></operator> <name pos:line="41" pos:column="27">src<pos:position pos:line="41" pos:column="30"/></name></expr>]<pos:position pos:line="41" pos:column="31"/></index></name> <operator pos:line="41" pos:column="32">!=<pos:position pos:line="41" pos:column="34"/></operator> <name pos:line="41" pos:column="35">LT_PATHSEP_CHAR<pos:position pos:line="41" pos:column="50"/></name><operator pos:line="41" pos:column="50">)<pos:position pos:line="41" pos:column="51"/></operator>
		 <operator pos:line="42" pos:column="18">&amp;&amp;<pos:position pos:line="42" pos:column="28"/></operator> <operator pos:line="42" pos:column="21">(<pos:position pos:line="42" pos:column="22"/></operator><name><name pos:line="42" pos:column="22">path<pos:position pos:line="42" pos:column="26"/></name><index pos:line="42" pos:column="26">[<expr><literal type="number" pos:line="42" pos:column="27">1<pos:position pos:line="42" pos:column="28"/></literal><operator pos:line="42" pos:column="28">+<pos:position pos:line="42" pos:column="29"/></operator> <name pos:line="42" pos:column="30">src<pos:position pos:line="42" pos:column="33"/></name></expr>]<pos:position pos:line="42" pos:column="34"/></index></name> <operator pos:line="42" pos:column="35">!=<pos:position pos:line="42" pos:column="37"/></operator> <name pos:line="42" pos:column="38">LT_EOS_CHAR<pos:position pos:line="42" pos:column="49"/></name><operator pos:line="42" pos:column="49">)<pos:position pos:line="42" pos:column="50"/></operator>
<cpp:if pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">if<pos:position pos:line="43" pos:column="4"/></cpp:directive> <expr><call><name pos:line="43" pos:column="5">defined<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><name pos:line="43" pos:column="13">LT_DIRSEP_CHAR<pos:position pos:line="43" pos:column="27"/></name></expr></argument>)<pos:position pos:line="43" pos:column="28"/></argument_list></call></expr></cpp:if>
		 <operator pos:line="44" pos:column="18">&amp;&amp;<pos:position pos:line="44" pos:column="28"/></operator> <operator pos:line="44" pos:column="21">(<pos:position pos:line="44" pos:column="22"/></operator><name><name pos:line="44" pos:column="22">path<pos:position pos:line="44" pos:column="26"/></name><index pos:line="44" pos:column="26">[<expr><literal type="number" pos:line="44" pos:column="27">1<pos:position pos:line="44" pos:column="28"/></literal><operator pos:line="44" pos:column="28">+<pos:position pos:line="44" pos:column="29"/></operator> <name pos:line="44" pos:column="30">src<pos:position pos:line="44" pos:column="33"/></name></expr>]<pos:position pos:line="44" pos:column="34"/></index></name> <operator pos:line="44" pos:column="35">!=<pos:position pos:line="44" pos:column="37"/></operator> <name pos:line="44" pos:column="38">LT_DIRSEP_CHAR<pos:position pos:line="44" pos:column="52"/></name><operator pos:line="44" pos:column="52">)<pos:position pos:line="44" pos:column="53"/></operator>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
		 <operator pos:line="46" pos:column="18">&amp;&amp;<pos:position pos:line="46" pos:column="28"/></operator> <operator pos:line="46" pos:column="21">(<pos:position pos:line="46" pos:column="22"/></operator><name><name pos:line="46" pos:column="22">path<pos:position pos:line="46" pos:column="26"/></name><index pos:line="46" pos:column="26">[<expr><literal type="number" pos:line="46" pos:column="27">1<pos:position pos:line="46" pos:column="28"/></literal><operator pos:line="46" pos:column="28">+<pos:position pos:line="46" pos:column="29"/></operator> <name pos:line="46" pos:column="30">src<pos:position pos:line="46" pos:column="33"/></name></expr>]<pos:position pos:line="46" pos:column="34"/></index></name> <operator pos:line="46" pos:column="35">!=<pos:position pos:line="46" pos:column="37"/></operator> <literal type="char" pos:line="46" pos:column="38">'/'<pos:position pos:line="46" pos:column="41"/></literal><operator pos:line="46" pos:column="41">)<pos:position pos:line="46" pos:column="42"/></operator></expr>)<pos:position pos:line="46" pos:column="43"/></condition><then pos:line="46" pos:column="43">
	  <block pos:line="47" pos:column="11">{
	    <expr_stmt><expr><name><name pos:line="48" pos:column="13">canonical<pos:position pos:line="48" pos:column="22"/></name><index pos:line="48" pos:column="22">[<expr><name pos:line="48" pos:column="23">dest<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">++<pos:position pos:line="48" pos:column="29"/></operator></expr>]<pos:position pos:line="48" pos:column="30"/></index></name> <operator pos:line="48" pos:column="31">=<pos:position pos:line="48" pos:column="32"/></operator> <literal type="char" pos:line="48" pos:column="33">'/'<pos:position pos:line="48" pos:column="36"/></literal></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>
	  }<pos:position pos:line="49" pos:column="12"/></block></then></if></elseif></if>
      }<pos:position pos:line="50" pos:column="8"/></block></for>

    <comment type="block" pos:line="52" pos:column="5">/* Add an end-of-string marker at the end.  */</comment>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">canonical<pos:position pos:line="53" pos:column="14"/></name><index pos:line="53" pos:column="14">[<expr><name pos:line="53" pos:column="15">dest<pos:position pos:line="53" pos:column="19"/></name></expr>]<pos:position pos:line="53" pos:column="20"/></index></name> <operator pos:line="53" pos:column="21">=<pos:position pos:line="53" pos:column="22"/></operator> <name pos:line="53" pos:column="23">LT_EOS_CHAR<pos:position pos:line="53" pos:column="34"/></name></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="54" pos:column="4"/></block>

  <comment type="block" pos:line="56" pos:column="3">/* Assign new value.  */</comment>
  <expr_stmt><expr><operator pos:line="57" pos:column="3">*<pos:position pos:line="57" pos:column="4"/></operator><name pos:line="57" pos:column="4">pcanonical<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">=<pos:position pos:line="57" pos:column="16"/></operator> <name pos:line="57" pos:column="17">canonical<pos:position pos:line="57" pos:column="26"/></name></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>

  <return pos:line="59" pos:column="3">return <expr><literal type="number" pos:line="59" pos:column="10">0<pos:position pos:line="59" pos:column="11"/></literal></expr>;<pos:position pos:line="59" pos:column="12"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

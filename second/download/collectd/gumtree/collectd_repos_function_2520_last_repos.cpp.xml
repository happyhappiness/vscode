<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2520_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">decrypt_aes256<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">buffer_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">b<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">void<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">iv<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">size_t<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">iv_size<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">password<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list> <block pos:line="2" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">gcry_cipher_hd_t<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">cipher<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">NULL<pos:position pos:line="3" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">gcry_cipher_open<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><operator pos:line="5" pos:column="24">&amp;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="25">cipher<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="33">GCRY_CIPHER_AES256<pos:position pos:line="5" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="53">GCRY_CIPHER_MODE_OFB<pos:position pos:line="5" pos:column="73"/></name></expr></argument>,
                       <comment type="block" pos:line="6" pos:column="24">/* flags = */</comment> <argument><expr><literal type="number" pos:line="6" pos:column="38">0<pos:position pos:line="6" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="41"/></condition><then pos:line="6" pos:column="41">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">-<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal></expr>;<pos:position pos:line="7" pos:column="15"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">uint8_t<pos:position pos:line="9" pos:column="10"/></name></type> <name><name pos:line="9" pos:column="11">pwhash<pos:position pos:line="9" pos:column="17"/></name><index pos:line="9" pos:column="17">[<expr><literal type="number" pos:line="9" pos:column="18">32<pos:position pos:line="9" pos:column="20"/></literal></expr>]<pos:position pos:line="9" pos:column="21"/></index></name> <init pos:line="9" pos:column="22">= <expr><block pos:line="9" pos:column="24">{<expr><literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal></expr>}<pos:position pos:line="9" pos:column="27"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">gcry_md_hash_buffer<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">GCRY_MD_SHA256<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">pwhash<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="47">password<pos:position pos:line="10" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="57">strlen<pos:position pos:line="10" pos:column="63"/></name><argument_list pos:line="10" pos:column="63">(<argument><expr><name pos:line="10" pos:column="64">password<pos:position pos:line="10" pos:column="72"/></name></expr></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="75"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">fprintf<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">stderr<pos:position pos:line="12" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="19">"sizeof(iv) = %zu\n"<pos:position pos:line="12" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="41">sizeof<argument_list pos:line="12" pos:column="47">(<argument><expr><name pos:line="12" pos:column="48">iv<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><call><name pos:line="13" pos:column="7">gcry_cipher_setkey<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">cipher<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">pwhash<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="42">sizeof<argument_list pos:line="13" pos:column="48">(<argument><expr><name pos:line="13" pos:column="49">pwhash<pos:position pos:line="13" pos:column="55"/></name></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call> <operator pos:line="13" pos:column="58">||<pos:position pos:line="13" pos:column="60"/></operator>
      <call><name pos:line="14" pos:column="7">gcry_cipher_setiv<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">cipher<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">iv<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="37">iv_size<pos:position pos:line="14" pos:column="44"/></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call> <operator pos:line="14" pos:column="46">||<pos:position pos:line="14" pos:column="48"/></operator>
      <call><name pos:line="15" pos:column="7">gcry_cipher_decrypt<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">cipher<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="35">b<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">data<pos:position pos:line="15" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="44">b<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">len<pos:position pos:line="15" pos:column="50"/></name></name></expr></argument>, <comment type="block" pos:line="15" pos:column="52">/* in = */</comment> <argument><expr><name pos:line="15" pos:column="63">NULL<pos:position pos:line="15" pos:column="67"/></name></expr></argument>,
                          <comment type="block" pos:line="16" pos:column="27">/* in_size = */</comment> <argument><expr><literal type="number" pos:line="16" pos:column="43">0<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46"> <block pos:line="16" pos:column="47">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">gcry_cipher_close<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">cipher<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">-<pos:position pos:line="18" pos:column="13"/></operator><literal type="number" pos:line="18" pos:column="13">1<pos:position pos:line="18" pos:column="14"/></literal></expr>;<pos:position pos:line="18" pos:column="15"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">gcry_cipher_close<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">cipher<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
  <return pos:line="22" pos:column="3">return <expr><literal type="number" pos:line="22" pos:column="10">0<pos:position pos:line="22" pos:column="11"/></literal></expr>;<pos:position pos:line="22" pos:column="12"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

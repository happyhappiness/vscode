<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_915_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">setup_all_buffers<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list> <block pos:line="1" pos:column="36">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">ret<pos:position pos:line="2" pos:column="10"/></name></decl>;<pos:position pos:line="2" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="4" pos:column="3">DO_OR_GOTO_ERR<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><call><name pos:line="4" pos:column="18">topology_probe<pos:position pos:line="4" pos:column="32"/></name><argument_list pos:line="4" pos:column="32">()<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">DO_OR_GOTO_ERR<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><call><name pos:line="5" pos:column="18">allocate_counters<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">(<argument><expr><operator pos:line="5" pos:column="36">&amp;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="37">thread_even<pos:position pos:line="5" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="50">&amp;<pos:position pos:line="5" pos:column="55"/></operator><name pos:line="5" pos:column="51">core_even<pos:position pos:line="5" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="62">&amp;<pos:position pos:line="5" pos:column="67"/></operator><name pos:line="5" pos:column="63">package_even<pos:position pos:line="5" pos:column="75"/></name></expr></argument>)<pos:position pos:line="5" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="78"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">DO_OR_GOTO_ERR<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><call><name pos:line="6" pos:column="18">allocate_counters<pos:position pos:line="6" pos:column="35"/></name><argument_list pos:line="6" pos:column="35">(<argument><expr><operator pos:line="6" pos:column="36">&amp;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="37">thread_odd<pos:position pos:line="6" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="49">&amp;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="50">core_odd<pos:position pos:line="6" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="60">&amp;<pos:position pos:line="6" pos:column="65"/></operator><name pos:line="6" pos:column="61">package_odd<pos:position pos:line="6" pos:column="72"/></name></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="75"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">DO_OR_GOTO_ERR<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><call><name pos:line="7" pos:column="18">allocate_counters<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><operator pos:line="7" pos:column="36">&amp;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="37">thread_delta<pos:position pos:line="7" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="51">&amp;<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="52">core_delta<pos:position pos:line="7" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="64">&amp;<pos:position pos:line="7" pos:column="69"/></operator><name pos:line="7" pos:column="65">package_delta<pos:position pos:line="7" pos:column="78"/></name></expr></argument>)<pos:position pos:line="7" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="81"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">initialize_counters<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">()<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">DO_OR_GOTO_ERR<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><call><name pos:line="9" pos:column="18">for_all_cpus<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">set_temperature_target<pos:position pos:line="9" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="55">EVEN_COUNTERS<pos:position pos:line="9" pos:column="68"/></name></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="71"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">DO_OR_GOTO_ERR<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><call><name pos:line="10" pos:column="18">for_all_cpus<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">set_temperature_target<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="55">ODD_COUNTERS<pos:position pos:line="10" pos:column="67"/></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="70"/></expr_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">allocated<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <literal type="number" pos:line="12" pos:column="15">1<pos:position pos:line="12" pos:column="16"/></literal></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>
  <return pos:line="13" pos:column="3">return <expr><literal type="number" pos:line="13" pos:column="10">0<pos:position pos:line="13" pos:column="11"/></literal></expr>;<pos:position pos:line="13" pos:column="12"/></return>
<label><name pos:line="14" pos:column="1">err<pos:position pos:line="14" pos:column="4"/></name>:<pos:position pos:line="14" pos:column="5"/></label>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">free_all_buffers<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">()<pos:position pos:line="15" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
  <return pos:line="16" pos:column="3">return <expr><name pos:line="16" pos:column="10">ret<pos:position pos:line="16" pos:column="13"/></name></expr>;<pos:position pos:line="16" pos:column="14"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

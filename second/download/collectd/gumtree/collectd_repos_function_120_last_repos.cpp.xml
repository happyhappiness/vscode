<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_120_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dpdk_stats_config<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">oconfig_item_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">ci<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <block pos:line="1" pos:column="50">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">DPDK_STATS_TRACE<pos:position pos:line="2" pos:column="19"/></name><argument_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="22"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">ret<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><call><name pos:line="4" pos:column="13">dpdk_stats_preinit<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">()<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">ret<pos:position pos:line="5" pos:column="10"/></name></expr>)<pos:position pos:line="5" pos:column="11"/></condition><then pos:line="5" pos:column="11"> <block pos:line="5" pos:column="12">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">g_state<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">DPDK_STAT_STATE_CFG_ERR<pos:position pos:line="6" pos:column="38"/></name></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">dpdk_stats_ctx_t<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">ctx<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><call><name pos:line="10" pos:column="27">DPDK_STATS_CTX_GET<pos:position pos:line="10" pos:column="45"/></name><argument_list pos:line="10" pos:column="45">(<argument><expr><name pos:line="10" pos:column="46">g_hc<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="52"/></decl_stmt>

  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init><decl><type><name pos:line="12" pos:column="8">int<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">i<pos:position pos:line="12" pos:column="13"/></name> <init pos:line="12" pos:column="14">= <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="18"/></init> <condition><expr><name pos:line="12" pos:column="19">i<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">&lt;<pos:position pos:line="12" pos:column="25"/></operator> <name><name pos:line="12" pos:column="23">ci<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">children_num<pos:position pos:line="12" pos:column="39"/></name></name></expr>;<pos:position pos:line="12" pos:column="40"/></condition> <incr><expr><name pos:line="12" pos:column="41">i<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">++<pos:position pos:line="12" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="45"/></control> <block pos:line="12" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">oconfig_item_t<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">child<pos:position pos:line="13" pos:column="26"/></name> <init pos:line="13" pos:column="27">= <expr><name><name pos:line="13" pos:column="29">ci<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">children<pos:position pos:line="13" pos:column="41"/></name></name> <operator pos:line="13" pos:column="42">+<pos:position pos:line="13" pos:column="43"/></operator> <name pos:line="13" pos:column="44">i<pos:position pos:line="13" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="46"/></decl_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">strcasecmp<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><literal type="string" pos:line="15" pos:column="20">"EnabledPortMask"<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="39">child<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">-&gt;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="46">key<pos:position pos:line="15" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call> <operator pos:line="15" pos:column="51">==<pos:position pos:line="15" pos:column="53"/></operator> <literal type="number" pos:line="15" pos:column="54">0<pos:position pos:line="15" pos:column="55"/></literal></expr>)<pos:position pos:line="15" pos:column="56"/></condition><then pos:line="15" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="7">ret<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <call><name pos:line="16" pos:column="13">cf_util_get_int<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">child<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="36">(<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="37">int<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">*<pos:position pos:line="16" pos:column="42"/></operator><operator pos:line="16" pos:column="42">)<pos:position pos:line="16" pos:column="43"/></operator><operator pos:line="16" pos:column="43">&amp;<pos:position pos:line="16" pos:column="48"/></operator><name><name pos:line="16" pos:column="44">ctx<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">-&gt;<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="49">config<pos:position pos:line="16" pos:column="55"/></name><operator pos:line="16" pos:column="55">.<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="56">enabled_port_mask<pos:position pos:line="16" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="75"/></expr_stmt></block></then>
    <elseif pos:line="17" pos:column="5">else <if pos:line="17" pos:column="10">if <condition pos:line="17" pos:column="13">(<expr><call><name pos:line="17" pos:column="14">strcasecmp<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><literal type="string" pos:line="17" pos:column="25">"SharedMemObj"<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="41">child<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">key<pos:position pos:line="17" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call> <operator pos:line="17" pos:column="53">==<pos:position pos:line="17" pos:column="55"/></operator> <literal type="number" pos:line="17" pos:column="56">0<pos:position pos:line="17" pos:column="57"/></literal></expr>)<pos:position pos:line="17" pos:column="58"/></condition><then pos:line="17" pos:column="58"> <block pos:line="17" pos:column="59">{
      <expr_stmt><expr><name pos:line="18" pos:column="7">ret<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">cf_util_get_string_buffer<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name pos:line="18" pos:column="39">child<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">g_shm_name<pos:position pos:line="18" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="58">sizeof<argument_list pos:line="18" pos:column="64">(<argument><expr><name pos:line="18" pos:column="65">g_shm_name<pos:position pos:line="18" pos:column="75"/></name></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="78"/></expr_stmt>
      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><name pos:line="19" pos:column="11">ret<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">==<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="9">ret<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">dpdk_stats_reinit_helper<pos:position pos:line="20" pos:column="39"/></name><argument_list pos:line="20" pos:column="39">()<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if></elseif> <elseif pos:line="21" pos:column="7">else <if pos:line="21" pos:column="12">if <condition pos:line="21" pos:column="15">(<expr><call><name pos:line="21" pos:column="16">strcasecmp<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><literal type="string" pos:line="21" pos:column="27">"EAL"<pos:position pos:line="21" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="34">child<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">-&gt;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="41">key<pos:position pos:line="21" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call> <operator pos:line="21" pos:column="46">==<pos:position pos:line="21" pos:column="48"/></operator> <literal type="number" pos:line="21" pos:column="49">0<pos:position pos:line="21" pos:column="50"/></literal></expr>)<pos:position pos:line="21" pos:column="51"/></condition><then pos:line="21" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="7">ret<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <call><name pos:line="22" pos:column="13">dpdk_helper_eal_config_parse<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">(<argument><expr><name pos:line="22" pos:column="42">g_hc<pos:position pos:line="22" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">child<pos:position pos:line="22" pos:column="53"/></name></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="55"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><call><name pos:line="23" pos:column="14">strcasecmp<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><literal type="string" pos:line="23" pos:column="25">"PortName"<pos:position pos:line="23" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="37">child<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">-&gt;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="44">key<pos:position pos:line="23" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call> <operator pos:line="23" pos:column="49">!=<pos:position pos:line="23" pos:column="51"/></operator> <literal type="number" pos:line="23" pos:column="52">0<pos:position pos:line="23" pos:column="53"/></literal></expr>)<pos:position pos:line="23" pos:column="54"/></condition><then pos:line="23" pos:column="54"> <block pos:line="23" pos:column="55">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">ERROR<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">DPDK_STATS_PLUGIN<pos:position pos:line="24" pos:column="30"/></name> <literal type="string" pos:line="24" pos:column="31">": unrecognized configuration option %s"<pos:position pos:line="24" pos:column="71"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="25" pos:column="13">child<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">key<pos:position pos:line="25" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="26" pos:column="7">ret<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <operator pos:line="26" pos:column="13">-<pos:position pos:line="26" pos:column="14"/></operator><literal type="number" pos:line="26" pos:column="14">1<pos:position pos:line="26" pos:column="15"/></literal></expr>;<pos:position pos:line="26" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">ret<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">!=<pos:position pos:line="29" pos:column="15"/></operator> <literal type="number" pos:line="29" pos:column="16">0<pos:position pos:line="29" pos:column="17"/></literal></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18"> <block pos:line="29" pos:column="19">{
      <expr_stmt><expr><name pos:line="30" pos:column="7">g_state<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <name pos:line="30" pos:column="17">DPDK_STAT_STATE_CFG_ERR<pos:position pos:line="30" pos:column="40"/></name></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
      <return pos:line="31" pos:column="7">return <expr><literal type="number" pos:line="31" pos:column="14">0<pos:position pos:line="31" pos:column="15"/></literal></expr>;<pos:position pos:line="31" pos:column="16"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
  }<pos:position pos:line="33" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="35" pos:column="3">DEBUG<pos:position pos:line="35" pos:column="8"/></name><argument_list pos:line="35" pos:column="8">(<argument><expr><name pos:line="35" pos:column="9">DPDK_STATS_PLUGIN<pos:position pos:line="35" pos:column="26"/></name> <literal type="string" pos:line="35" pos:column="27">": Enabled Port Mask 0x%X"<pos:position pos:line="35" pos:column="53"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="36" pos:column="9">ctx<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">config<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">.<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">enabled_port_mask<pos:position pos:line="36" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">DEBUG<pos:position pos:line="37" pos:column="8"/></name><argument_list pos:line="37" pos:column="8">(<argument><expr><name pos:line="37" pos:column="9">DPDK_STATS_PLUGIN<pos:position pos:line="37" pos:column="26"/></name> <literal type="string" pos:line="37" pos:column="27">": Shared memory object %s"<pos:position pos:line="37" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="56">g_shm_name<pos:position pos:line="37" pos:column="66"/></name></expr></argument>)<pos:position pos:line="37" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="68"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="39" pos:column="3">int<pos:position pos:line="39" pos:column="6"/></name></type> <name pos:line="39" pos:column="7">port_num<pos:position pos:line="39" pos:column="15"/></name> <init pos:line="39" pos:column="16">= <expr><literal type="number" pos:line="39" pos:column="18">0<pos:position pos:line="39" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="20"/></decl_stmt>

  <comment type="block" pos:line="41" pos:column="3">/* parse port names after EnabledPortMask was parsed */</comment>
  <for pos:line="42" pos:column="3">for <control pos:line="42" pos:column="7">(<init><decl><type><name pos:line="42" pos:column="8">int<pos:position pos:line="42" pos:column="11"/></name></type> <name pos:line="42" pos:column="12">i<pos:position pos:line="42" pos:column="13"/></name> <init pos:line="42" pos:column="14">= <expr><literal type="number" pos:line="42" pos:column="16">0<pos:position pos:line="42" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="42" pos:column="18"/></init> <condition><expr><name pos:line="42" pos:column="19">i<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">&lt;<pos:position pos:line="42" pos:column="25"/></operator> <name><name pos:line="42" pos:column="23">ci<pos:position pos:line="42" pos:column="25"/></name><operator pos:line="42" pos:column="25">-&gt;<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="27">children_num<pos:position pos:line="42" pos:column="39"/></name></name></expr>;<pos:position pos:line="42" pos:column="40"/></condition> <incr><expr><name pos:line="42" pos:column="41">i<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">++<pos:position pos:line="42" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="45"/></control> <block pos:line="42" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="43" pos:column="5">oconfig_item_t<pos:position pos:line="43" pos:column="19"/></name> <modifier pos:line="43" pos:column="20">*<pos:position pos:line="43" pos:column="21"/></modifier></type><name pos:line="43" pos:column="21">child<pos:position pos:line="43" pos:column="26"/></name> <init pos:line="43" pos:column="27">= <expr><name><name pos:line="43" pos:column="29">ci<pos:position pos:line="43" pos:column="31"/></name><operator pos:line="43" pos:column="31">-&gt;<pos:position pos:line="43" pos:column="36"/></operator><name pos:line="43" pos:column="33">children<pos:position pos:line="43" pos:column="41"/></name></name> <operator pos:line="43" pos:column="42">+<pos:position pos:line="43" pos:column="43"/></operator> <name pos:line="43" pos:column="44">i<pos:position pos:line="43" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="43" pos:column="46"/></decl_stmt>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><call><name pos:line="45" pos:column="9">strcasecmp<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">(<argument><expr><literal type="string" pos:line="45" pos:column="20">"PortName"<pos:position pos:line="45" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="32">child<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">-&gt;<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="39">key<pos:position pos:line="45" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call> <operator pos:line="45" pos:column="44">==<pos:position pos:line="45" pos:column="46"/></operator> <literal type="number" pos:line="45" pos:column="47">0<pos:position pos:line="45" pos:column="48"/></literal></expr>)<pos:position pos:line="45" pos:column="49"/></condition><then pos:line="45" pos:column="49"> <block pos:line="45" pos:column="50">{

      <while pos:line="47" pos:column="7">while <condition pos:line="47" pos:column="13">(<expr><operator pos:line="47" pos:column="14">!<pos:position pos:line="47" pos:column="15"/></operator><operator pos:line="47" pos:column="15">(<pos:position pos:line="47" pos:column="16"/></operator><name><name pos:line="47" pos:column="16">ctx<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">config<pos:position pos:line="47" pos:column="27"/></name><operator pos:line="47" pos:column="27">.<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="28">enabled_port_mask<pos:position pos:line="47" pos:column="45"/></name></name> <operator pos:line="47" pos:column="46">&amp;<pos:position pos:line="47" pos:column="51"/></operator> <operator pos:line="47" pos:column="48">(<pos:position pos:line="47" pos:column="49"/></operator><literal type="number" pos:line="47" pos:column="49">1<pos:position pos:line="47" pos:column="50"/></literal> <operator pos:line="47" pos:column="51">&lt;&lt;<pos:position pos:line="47" pos:column="59"/></operator> <name pos:line="47" pos:column="54">port_num<pos:position pos:line="47" pos:column="62"/></name><operator pos:line="47" pos:column="62">)<pos:position pos:line="47" pos:column="63"/></operator><operator pos:line="47" pos:column="63">)<pos:position pos:line="47" pos:column="64"/></operator></expr>)<pos:position pos:line="47" pos:column="65"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="9">port_num<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">++<pos:position pos:line="48" pos:column="19"/></operator></expr>;<pos:position pos:line="48" pos:column="20"/></expr_stmt></block></while>

      <if pos:line="50" pos:column="7">if <condition pos:line="50" pos:column="10">(<expr><call><name pos:line="50" pos:column="11">cf_util_get_string_buffer<pos:position pos:line="50" pos:column="36"/></name><argument_list pos:line="50" pos:column="36">(<argument><expr><name pos:line="50" pos:column="37">child<pos:position pos:line="50" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="44">ctx<pos:position pos:line="50" pos:column="47"/></name><operator pos:line="50" pos:column="47">-&gt;<pos:position pos:line="50" pos:column="52"/></operator><name pos:line="50" pos:column="49">config<pos:position pos:line="50" pos:column="55"/></name><operator pos:line="50" pos:column="55">.<pos:position pos:line="50" pos:column="56"/></operator><name pos:line="50" pos:column="56">port_name<pos:position pos:line="50" pos:column="65"/></name><index pos:line="50" pos:column="65">[<expr><name pos:line="50" pos:column="66">port_num<pos:position pos:line="50" pos:column="74"/></name></expr>]<pos:position pos:line="50" pos:column="75"/></index></name></expr></argument>,
                                    <argument><expr><sizeof pos:line="51" pos:column="37">sizeof<argument_list pos:line="51" pos:column="43">(<argument><expr><name><name pos:line="51" pos:column="44">ctx<pos:position pos:line="51" pos:column="47"/></name><operator pos:line="51" pos:column="47">-&gt;<pos:position pos:line="51" pos:column="52"/></operator><name pos:line="51" pos:column="49">config<pos:position pos:line="51" pos:column="55"/></name><operator pos:line="51" pos:column="55">.<pos:position pos:line="51" pos:column="56"/></operator><name pos:line="51" pos:column="56">port_name<pos:position pos:line="51" pos:column="65"/></name><index pos:line="51" pos:column="65">[<expr><name pos:line="51" pos:column="66">port_num<pos:position pos:line="51" pos:column="74"/></name></expr>]<pos:position pos:line="51" pos:column="75"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="78"/></condition><then pos:line="51" pos:column="78"> <block pos:line="51" pos:column="79">{
        <expr_stmt><expr><name pos:line="52" pos:column="9">g_state<pos:position pos:line="52" pos:column="16"/></name> <operator pos:line="52" pos:column="17">=<pos:position pos:line="52" pos:column="18"/></operator> <name pos:line="52" pos:column="19">DPDK_STAT_STATE_CFG_ERR<pos:position pos:line="52" pos:column="42"/></name></expr>;<pos:position pos:line="52" pos:column="43"/></expr_stmt>
        <return pos:line="53" pos:column="9">return <expr><literal type="number" pos:line="53" pos:column="16">0<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></return>
      }<pos:position pos:line="54" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="56" pos:column="7">DEBUG<pos:position pos:line="56" pos:column="12"/></name><argument_list pos:line="56" pos:column="12">(<argument><expr><name pos:line="56" pos:column="13">DPDK_STATS_PLUGIN<pos:position pos:line="56" pos:column="30"/></name> <literal type="string" pos:line="56" pos:column="31">": Port %d Name: %s"<pos:position pos:line="56" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="53">port_num<pos:position pos:line="56" pos:column="61"/></name></expr></argument>,
            <argument><expr><name><name pos:line="57" pos:column="13">ctx<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">-&gt;<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="18">config<pos:position pos:line="57" pos:column="24"/></name><operator pos:line="57" pos:column="24">.<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="25">port_name<pos:position pos:line="57" pos:column="34"/></name><index pos:line="57" pos:column="34">[<expr><name pos:line="57" pos:column="35">port_num<pos:position pos:line="57" pos:column="43"/></name></expr>]<pos:position pos:line="57" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="57" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="46"/></expr_stmt>

      <expr_stmt><expr><name pos:line="59" pos:column="7">port_num<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">++<pos:position pos:line="59" pos:column="17"/></operator></expr>;<pos:position pos:line="59" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
  }<pos:position pos:line="61" pos:column="4"/></block></for>

  <return pos:line="63" pos:column="3">return <expr><literal type="number" pos:line="63" pos:column="10">0<pos:position pos:line="63" pos:column="11"/></literal></expr>;<pos:position pos:line="63" pos:column="12"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_389_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sysfs_file_to_buffer<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">dir<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">power_supply<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">char<pos:position pos:line="3" pos:column="21"/></name> <specifier pos:line="3" pos:column="22">const<pos:position pos:line="3" pos:column="27"/></specifier> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">basename<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">buffer<pos:position pos:line="4" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="31">size_t<pos:position pos:line="4" pos:column="37"/></name></type> <name pos:line="4" pos:column="38">buffer_size<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="50"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">status<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">FILE<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">fp<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">filename<pos:position pos:line="8" pos:column="22"/></name><index pos:line="8" pos:column="22">[<expr><name pos:line="8" pos:column="23">PATH_MAX<pos:position pos:line="8" pos:column="31"/></name></expr>]<pos:position pos:line="8" pos:column="32"/></index></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">ssnprintf<pos:position pos:line="10" pos:column="18"/></name> <argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">filename<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="30">sizeof <argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">filename<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="49">"%s/%s/%s"<pos:position pos:line="10" pos:column="59"/></literal></expr></argument>,
			<argument><expr><name pos:line="11" pos:column="25">dir<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="30">power_supply<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="44">basename<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt>

	<comment type="block" pos:line="13" pos:column="9">/* No file isn't the end of the world -- not every system will be
	 * reporting the same set of statistics */</comment>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">access<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">filename<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">R_OK<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call> <operator pos:line="15" pos:column="37">!=<pos:position pos:line="15" pos:column="39"/></operator> <literal type="number" pos:line="15" pos:column="40">0<pos:position pos:line="15" pos:column="41"/></literal></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><name pos:line="16" pos:column="24">ENOENT<pos:position pos:line="16" pos:column="30"/></name></expr>;<pos:position pos:line="16" pos:column="31"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="18" pos:column="9">fp<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">fopen<pos:position pos:line="18" pos:column="19"/></name> <argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">filename<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="31">"r"<pos:position pos:line="18" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">fp<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">==<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">NULL<pos:position pos:line="19" pos:column="23"/></name></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24">
	<block pos:line="20" pos:column="9">{
		<expr_stmt><expr><name pos:line="21" pos:column="17">status<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">errno<pos:position pos:line="21" pos:column="31"/></name></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">status<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">!=<pos:position pos:line="22" pos:column="30"/></operator> <name pos:line="22" pos:column="31">ENOENT<pos:position pos:line="22" pos:column="37"/></name></expr>)<pos:position pos:line="22" pos:column="38"/></condition><then pos:line="22" pos:column="38">
		<block pos:line="23" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="24" pos:column="25">char<pos:position pos:line="24" pos:column="29"/></name></type> <name><name pos:line="24" pos:column="30">errbuf<pos:position pos:line="24" pos:column="36"/></name><index pos:line="24" pos:column="36">[<expr><literal type="number" pos:line="24" pos:column="37">1024<pos:position pos:line="24" pos:column="41"/></literal></expr>]<pos:position pos:line="24" pos:column="42"/></index></name></decl>;<pos:position pos:line="24" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">WARNING<pos:position pos:line="25" pos:column="32"/></name> <argument_list pos:line="25" pos:column="33">(<argument><expr><literal type="string" pos:line="25" pos:column="34">"battery plugin: fopen (%s) failed: %s"<pos:position pos:line="25" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="75">filename<pos:position pos:line="25" pos:column="83"/></name></expr></argument>,
					<argument><expr><call><name pos:line="26" pos:column="41">sstrerror<pos:position pos:line="26" pos:column="50"/></name> <argument_list pos:line="26" pos:column="51">(<argument><expr><name pos:line="26" pos:column="52">status<pos:position pos:line="26" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="60">errbuf<pos:position pos:line="26" pos:column="66"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="68">sizeof <argument_list pos:line="26" pos:column="75">(<argument><expr><name pos:line="26" pos:column="76">errbuf<pos:position pos:line="26" pos:column="82"/></name></expr></argument>)<pos:position pos:line="26" pos:column="83"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="86"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>
		<return pos:line="28" pos:column="17">return <expr><name pos:line="28" pos:column="24">status<pos:position pos:line="28" pos:column="30"/></name></expr>;<pos:position pos:line="28" pos:column="31"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">fgets<pos:position pos:line="31" pos:column="18"/></name> <argument_list pos:line="31" pos:column="19">(<argument><expr><name pos:line="31" pos:column="20">buffer<pos:position pos:line="31" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="28">buffer_size<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="41">fp<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call> <operator pos:line="31" pos:column="45">==<pos:position pos:line="31" pos:column="47"/></operator> <name pos:line="31" pos:column="48">NULL<pos:position pos:line="31" pos:column="52"/></name></expr>)<pos:position pos:line="31" pos:column="53"/></condition><then pos:line="31" pos:column="53">
	<block pos:line="32" pos:column="9">{
		<expr_stmt><expr><name pos:line="33" pos:column="17">status<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">errno<pos:position pos:line="33" pos:column="31"/></name></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">status<pos:position pos:line="34" pos:column="27"/></name> <operator pos:line="34" pos:column="28">!=<pos:position pos:line="34" pos:column="30"/></operator> <name pos:line="34" pos:column="31">ENODEV<pos:position pos:line="34" pos:column="37"/></name></expr>)<pos:position pos:line="34" pos:column="38"/></condition><then pos:line="34" pos:column="38">
		<block pos:line="35" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="36" pos:column="25">char<pos:position pos:line="36" pos:column="29"/></name></type> <name><name pos:line="36" pos:column="30">errbuf<pos:position pos:line="36" pos:column="36"/></name><index pos:line="36" pos:column="36">[<expr><literal type="number" pos:line="36" pos:column="37">1024<pos:position pos:line="36" pos:column="41"/></literal></expr>]<pos:position pos:line="36" pos:column="42"/></index></name></decl>;<pos:position pos:line="36" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">WARNING<pos:position pos:line="37" pos:column="32"/></name> <argument_list pos:line="37" pos:column="33">(<argument><expr><literal type="string" pos:line="37" pos:column="34">"battery plugin: fgets (%s) failed: %s"<pos:position pos:line="37" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="75">filename<pos:position pos:line="37" pos:column="83"/></name></expr></argument>,
					<argument><expr><call><name pos:line="38" pos:column="41">sstrerror<pos:position pos:line="38" pos:column="50"/></name> <argument_list pos:line="38" pos:column="51">(<argument><expr><name pos:line="38" pos:column="52">status<pos:position pos:line="38" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="60">errbuf<pos:position pos:line="38" pos:column="66"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="68">sizeof <argument_list pos:line="38" pos:column="75">(<argument><expr><name pos:line="38" pos:column="76">errbuf<pos:position pos:line="38" pos:column="82"/></name></expr></argument>)<pos:position pos:line="38" pos:column="83"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="86"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">fclose<pos:position pos:line="40" pos:column="23"/></name> <argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">fp<pos:position pos:line="40" pos:column="27"/></name></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
		<return pos:line="41" pos:column="17">return <expr><name pos:line="41" pos:column="24">status<pos:position pos:line="41" pos:column="30"/></name></expr>;<pos:position pos:line="41" pos:column="31"/></return>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="44" pos:column="9">strstripnewline<pos:position pos:line="44" pos:column="24"/></name> <argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">buffer<pos:position pos:line="44" pos:column="32"/></name></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="46" pos:column="9">fclose<pos:position pos:line="46" pos:column="15"/></name> <argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">fp<pos:position pos:line="46" pos:column="19"/></name></expr></argument>)<pos:position pos:line="46" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt>
	<return pos:line="47" pos:column="9">return <expr><literal type="number" pos:line="47" pos:column="16">0<pos:position pos:line="47" pos:column="17"/></literal></expr>;<pos:position pos:line="47" pos:column="18"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

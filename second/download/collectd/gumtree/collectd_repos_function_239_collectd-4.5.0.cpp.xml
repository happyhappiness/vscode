<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_239_collectd-4.5.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">value_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">csnmp_value_list_to_value<pos:position pos:line="1" pos:column="41"/></name> <parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">variable_list<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">vl<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">int<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">type<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="2" pos:column="5">double<pos:position pos:line="2" pos:column="11"/></name></type> <name pos:line="2" pos:column="12">scale<pos:position pos:line="2" pos:column="17"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="19">double<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">shift<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">value_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">ret<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">uint64_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">temp<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">defined<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">1<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name><name pos:line="8" pos:column="8">vl<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">type<pos:position pos:line="8" pos:column="16"/></name></name> <operator pos:line="8" pos:column="17">==<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">ASN_INTEGER<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">)<pos:position pos:line="8" pos:column="32"/></operator>
      <operator pos:line="9" pos:column="7">||<pos:position pos:line="9" pos:column="9"/></operator> <operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><name><name pos:line="9" pos:column="11">vl<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">type<pos:position pos:line="9" pos:column="19"/></name></name> <operator pos:line="9" pos:column="20">==<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="23">ASN_UINTEGER<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">)<pos:position pos:line="9" pos:column="36"/></operator>
      <operator pos:line="10" pos:column="7">||<pos:position pos:line="10" pos:column="9"/></operator> <operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator><name><name pos:line="10" pos:column="11">vl<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">type<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">==<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">ASN_COUNTER<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">)<pos:position pos:line="10" pos:column="35"/></operator>
<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">ASN_TIMETICKS<pos:position pos:line="11" pos:column="21"/></name></cpp:ifdef>
      <operator pos:line="12" pos:column="7">||<pos:position pos:line="12" pos:column="9"/></operator> <operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name><name pos:line="12" pos:column="11">vl<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">type<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">==<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">ASN_TIMETICKS<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">)<pos:position pos:line="12" pos:column="37"/></operator>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
      <operator pos:line="14" pos:column="7">||<pos:position pos:line="14" pos:column="9"/></operator> <operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><name><name pos:line="14" pos:column="11">vl<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">type<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">==<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">ASN_GAUGE<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">)<pos:position pos:line="14" pos:column="33"/></operator></expr>)<pos:position pos:line="14" pos:column="34"/></condition><then pos:line="14" pos:column="34">
  <block pos:line="15" pos:column="3">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">temp<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">uint32_t<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">)<pos:position pos:line="16" pos:column="22"/></operator> <operator pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></operator><name><name pos:line="16" pos:column="24">vl<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">val<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">.<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="32">integer<pos:position pos:line="16" pos:column="39"/></name></name></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">DEBUG<pos:position pos:line="17" pos:column="10"/></name> <argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="string" pos:line="17" pos:column="12">"snmp plugin: Parsed int32 value is %"<pos:position pos:line="17" pos:column="50"/></literal><name pos:line="17" pos:column="50">PRIu64<pos:position pos:line="17" pos:column="56"/></name><literal type="string" pos:line="17" pos:column="56">"."<pos:position pos:line="17" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="61">temp<pos:position pos:line="17" pos:column="65"/></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then>
  <elseif pos:line="19" pos:column="3">else <if pos:line="19" pos:column="8">if <condition pos:line="19" pos:column="11">(<expr><name><name pos:line="19" pos:column="12">vl<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">type<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">==<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="24">ASN_COUNTER64<pos:position pos:line="19" pos:column="37"/></name></expr>)<pos:position pos:line="19" pos:column="38"/></condition><then pos:line="19" pos:column="38">
  <block pos:line="20" pos:column="3">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">temp<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">uint32_t<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">)<pos:position pos:line="21" pos:column="22"/></operator> <name><name pos:line="21" pos:column="23">vl<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">val<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">.<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">counter64<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">-&gt;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="42">high<pos:position pos:line="21" pos:column="46"/></name></name></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">temp<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <name pos:line="22" pos:column="12">temp<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">&lt;&lt;<pos:position pos:line="22" pos:column="25"/></operator> <literal type="number" pos:line="22" pos:column="20">32<pos:position pos:line="22" pos:column="22"/></literal></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">temp<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">+=<pos:position pos:line="23" pos:column="12"/></operator> <operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">uint32_t<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">)<pos:position pos:line="23" pos:column="23"/></operator> <name><name pos:line="23" pos:column="24">vl<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">val<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">.<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">counter64<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">-&gt;<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="43">low<pos:position pos:line="23" pos:column="46"/></name></name></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">DEBUG<pos:position pos:line="24" pos:column="10"/></name> <argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="string" pos:line="24" pos:column="12">"snmp plugin: Parsed int64 value is %"<pos:position pos:line="24" pos:column="50"/></literal><name pos:line="24" pos:column="50">PRIu64<pos:position pos:line="24" pos:column="56"/></name><literal type="string" pos:line="24" pos:column="56">"."<pos:position pos:line="24" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">temp<pos:position pos:line="24" pos:column="65"/></name></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="67"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="26" pos:column="3">else <if pos:line="26" pos:column="8">if <condition pos:line="26" pos:column="11">(<expr><name><name pos:line="26" pos:column="12">vl<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">type<pos:position pos:line="26" pos:column="20"/></name></name> <operator pos:line="26" pos:column="21">==<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">ASN_OCTET_STR<pos:position pos:line="26" pos:column="37"/></name></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38">
  <block pos:line="27" pos:column="3">{
    <comment type="block" pos:line="28" pos:column="5">/* We'll handle this later.. */</comment>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if></elseif>
  <else pos:line="30" pos:column="3">else
  <block pos:line="31" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">WARNING<pos:position pos:line="32" pos:column="12"/></name> <argument_list pos:line="32" pos:column="13">(<argument><expr><literal type="string" pos:line="32" pos:column="14">"snmp plugin: I don't know the ASN type `%i'"<pos:position pos:line="32" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="61">(<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="62">int<pos:position pos:line="32" pos:column="65"/></name><operator pos:line="32" pos:column="65">)<pos:position pos:line="32" pos:column="66"/></operator> <name><name pos:line="32" pos:column="67">vl<pos:position pos:line="32" pos:column="69"/></name><operator pos:line="32" pos:column="69">-&gt;<pos:position pos:line="32" pos:column="74"/></operator><name pos:line="32" pos:column="71">type<pos:position pos:line="32" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">defined<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <literal type="number" pos:line="33" pos:column="15">0<pos:position pos:line="33" pos:column="16"/></literal></expr>;<pos:position pos:line="33" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="34" pos:column="4"/></block></else></if>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name><name pos:line="36" pos:column="7">vl<pos:position pos:line="36" pos:column="9"/></name><operator pos:line="36" pos:column="9">-&gt;<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="11">type<pos:position pos:line="36" pos:column="15"/></name></name> <operator pos:line="36" pos:column="16">==<pos:position pos:line="36" pos:column="18"/></operator> <name pos:line="36" pos:column="19">ASN_OCTET_STR<pos:position pos:line="36" pos:column="32"/></name></expr>)<pos:position pos:line="36" pos:column="33"/></condition><then pos:line="36" pos:column="33">
  <block pos:line="37" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">char<pos:position pos:line="38" pos:column="9"/></name> <modifier pos:line="38" pos:column="10">*<pos:position pos:line="38" pos:column="11"/></modifier></type><name pos:line="38" pos:column="11">string<pos:position pos:line="38" pos:column="17"/></name></decl>;<pos:position pos:line="38" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">char<pos:position pos:line="39" pos:column="9"/></name> <modifier pos:line="39" pos:column="10">*<pos:position pos:line="39" pos:column="11"/></modifier></type><name pos:line="39" pos:column="11">endptr<pos:position pos:line="39" pos:column="17"/></name></decl>;<pos:position pos:line="39" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name pos:line="41" pos:column="5">string<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <operator pos:line="41" pos:column="14">(<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">char<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">*<pos:position pos:line="41" pos:column="21"/></operator><operator pos:line="41" pos:column="21">)<pos:position pos:line="41" pos:column="22"/></operator> <name><name pos:line="41" pos:column="23">vl<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">-&gt;<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="27">val<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">.<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="31">string<pos:position pos:line="41" pos:column="37"/></name></name></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">endptr<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <name pos:line="42" pos:column="14">NULL<pos:position pos:line="42" pos:column="18"/></name></expr>;<pos:position pos:line="42" pos:column="19"/></expr_stmt>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">string<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">!=<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">NULL<pos:position pos:line="44" pos:column="23"/></name></expr>)<pos:position pos:line="44" pos:column="24"/></condition><then pos:line="44" pos:column="24">
    <block pos:line="45" pos:column="5">{
      <if pos:line="46" pos:column="7">if <condition pos:line="46" pos:column="10">(<expr><name pos:line="46" pos:column="11">type<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">==<pos:position pos:line="46" pos:column="18"/></operator> <name pos:line="46" pos:column="19">DS_TYPE_COUNTER<pos:position pos:line="46" pos:column="34"/></name></expr>)<pos:position pos:line="46" pos:column="35"/></condition><then pos:line="46" pos:column="35">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="9">ret<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">.<pos:position pos:line="47" pos:column="13"/></operator><name pos:line="47" pos:column="13">counter<pos:position pos:line="47" pos:column="20"/></name></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <operator pos:line="47" pos:column="23">(<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="24">counter_t<pos:position pos:line="47" pos:column="33"/></name><operator pos:line="47" pos:column="33">)<pos:position pos:line="47" pos:column="34"/></operator> <call><name pos:line="47" pos:column="35">strtoll<pos:position pos:line="47" pos:column="42"/></name> <argument_list pos:line="47" pos:column="43">(<argument><expr><name pos:line="47" pos:column="44">string<pos:position pos:line="47" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="52">&amp;<pos:position pos:line="47" pos:column="57"/></operator><name pos:line="47" pos:column="53">endptr<pos:position pos:line="47" pos:column="59"/></name></expr></argument>, <comment type="block" pos:line="47" pos:column="61">/* base = */</comment> <argument><expr><literal type="number" pos:line="47" pos:column="74">0<pos:position pos:line="47" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="77"/></expr_stmt></block></then>
      <elseif pos:line="48" pos:column="7">else <if pos:line="48" pos:column="12">if <condition pos:line="48" pos:column="15">(<expr><name pos:line="48" pos:column="16">type<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">==<pos:position pos:line="48" pos:column="23"/></operator> <name pos:line="48" pos:column="24">DS_TYPE_GAUGE<pos:position pos:line="48" pos:column="37"/></name></expr>)<pos:position pos:line="48" pos:column="38"/></condition><then pos:line="48" pos:column="38">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="49" pos:column="9">ret<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">.<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="13">gauge<pos:position pos:line="49" pos:column="18"/></name></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <operator pos:line="49" pos:column="21">(<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">gauge_t<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">)<pos:position pos:line="49" pos:column="30"/></operator> <call><name pos:line="49" pos:column="31">strtod<pos:position pos:line="49" pos:column="37"/></name> <argument_list pos:line="49" pos:column="38">(<argument><expr><name pos:line="49" pos:column="39">string<pos:position pos:line="49" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="47">&amp;<pos:position pos:line="49" pos:column="52"/></operator><name pos:line="49" pos:column="48">endptr<pos:position pos:line="49" pos:column="54"/></name></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="56"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="52" pos:column="5">/* Check if an error occurred */</comment>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><operator pos:line="53" pos:column="9">(<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">string<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">==<pos:position pos:line="53" pos:column="19"/></operator> <name pos:line="53" pos:column="20">NULL<pos:position pos:line="53" pos:column="24"/></name><operator pos:line="53" pos:column="24">)<pos:position pos:line="53" pos:column="25"/></operator> <operator pos:line="53" pos:column="26">||<pos:position pos:line="53" pos:column="28"/></operator> <operator pos:line="53" pos:column="29">(<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="30">endptr<pos:position pos:line="53" pos:column="36"/></name> <operator pos:line="53" pos:column="37">==<pos:position pos:line="53" pos:column="39"/></operator> <name pos:line="53" pos:column="40">string<pos:position pos:line="53" pos:column="46"/></name><operator pos:line="53" pos:column="46">)<pos:position pos:line="53" pos:column="47"/></operator></expr>)<pos:position pos:line="53" pos:column="48"/></condition><then pos:line="53" pos:column="48">
    <block pos:line="54" pos:column="5">{
      <if pos:line="55" pos:column="7">if <condition pos:line="55" pos:column="10">(<expr><name pos:line="55" pos:column="11">type<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">==<pos:position pos:line="55" pos:column="18"/></operator> <name pos:line="55" pos:column="19">DS_TYPE_COUNTER<pos:position pos:line="55" pos:column="34"/></name></expr>)<pos:position pos:line="55" pos:column="35"/></condition><then pos:line="55" pos:column="35">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="56" pos:column="9">ret<pos:position pos:line="56" pos:column="12"/></name><operator pos:line="56" pos:column="12">.<pos:position pos:line="56" pos:column="13"/></operator><name pos:line="56" pos:column="13">counter<pos:position pos:line="56" pos:column="20"/></name></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <literal type="number" pos:line="56" pos:column="23">0<pos:position pos:line="56" pos:column="24"/></literal></expr>;<pos:position pos:line="56" pos:column="25"/></expr_stmt></block></then>
      <elseif pos:line="57" pos:column="7">else <if pos:line="57" pos:column="12">if <condition pos:line="57" pos:column="15">(<expr><name pos:line="57" pos:column="16">type<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">==<pos:position pos:line="57" pos:column="23"/></operator> <name pos:line="57" pos:column="24">DS_TYPE_GAUGE<pos:position pos:line="57" pos:column="37"/></name></expr>)<pos:position pos:line="57" pos:column="38"/></condition><then pos:line="57" pos:column="38">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="9">ret<pos:position pos:line="58" pos:column="12"/></name><operator pos:line="58" pos:column="12">.<pos:position pos:line="58" pos:column="13"/></operator><name pos:line="58" pos:column="13">gauge<pos:position pos:line="58" pos:column="18"/></name></name> <operator pos:line="58" pos:column="19">=<pos:position pos:line="58" pos:column="20"/></operator> <name pos:line="58" pos:column="21">NAN<pos:position pos:line="58" pos:column="24"/></name></expr>;<pos:position pos:line="58" pos:column="25"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
  }<pos:position pos:line="60" pos:column="4"/></block></then>
  <elseif pos:line="61" pos:column="3">else <if pos:line="61" pos:column="8">if <condition pos:line="61" pos:column="11">(<expr><name pos:line="61" pos:column="12">type<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">==<pos:position pos:line="61" pos:column="19"/></operator> <name pos:line="61" pos:column="20">DS_TYPE_COUNTER<pos:position pos:line="61" pos:column="35"/></name></expr>)<pos:position pos:line="61" pos:column="36"/></condition><then pos:line="61" pos:column="36">
  <block pos:line="62" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">ret<pos:position pos:line="63" pos:column="8"/></name><operator pos:line="63" pos:column="8">.<pos:position pos:line="63" pos:column="9"/></operator><name pos:line="63" pos:column="9">counter<pos:position pos:line="63" pos:column="16"/></name></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <name pos:line="63" pos:column="19">temp<pos:position pos:line="63" pos:column="23"/></name></expr>;<pos:position pos:line="63" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="64" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="65" pos:column="3">else <if pos:line="65" pos:column="8">if <condition pos:line="65" pos:column="11">(<expr><name pos:line="65" pos:column="12">type<pos:position pos:line="65" pos:column="16"/></name> <operator pos:line="65" pos:column="17">==<pos:position pos:line="65" pos:column="19"/></operator> <name pos:line="65" pos:column="20">DS_TYPE_GAUGE<pos:position pos:line="65" pos:column="33"/></name></expr>)<pos:position pos:line="65" pos:column="34"/></condition><then pos:line="65" pos:column="34">
  <block pos:line="66" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">ret<pos:position pos:line="67" pos:column="8"/></name><operator pos:line="67" pos:column="8">.<pos:position pos:line="67" pos:column="9"/></operator><name pos:line="67" pos:column="9">gauge<pos:position pos:line="67" pos:column="14"/></name></name> <operator pos:line="67" pos:column="15">=<pos:position pos:line="67" pos:column="16"/></operator> <name pos:line="67" pos:column="17">NAN<pos:position pos:line="67" pos:column="20"/></name></expr>;<pos:position pos:line="67" pos:column="21"/></expr_stmt>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name pos:line="68" pos:column="9">defined<pos:position pos:line="68" pos:column="16"/></name> <operator pos:line="68" pos:column="17">!=<pos:position pos:line="68" pos:column="19"/></operator> <literal type="number" pos:line="68" pos:column="20">0<pos:position pos:line="68" pos:column="21"/></literal></expr>)<pos:position pos:line="68" pos:column="22"/></condition><then pos:line="68" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="69" pos:column="7">ret<pos:position pos:line="69" pos:column="10"/></name><operator pos:line="69" pos:column="10">.<pos:position pos:line="69" pos:column="11"/></operator><name pos:line="69" pos:column="11">gauge<pos:position pos:line="69" pos:column="16"/></name></name> <operator pos:line="69" pos:column="17">=<pos:position pos:line="69" pos:column="18"/></operator> <operator pos:line="69" pos:column="19">(<pos:position pos:line="69" pos:column="20"/></operator><name pos:line="69" pos:column="20">scale<pos:position pos:line="69" pos:column="25"/></name> <operator pos:line="69" pos:column="26">*<pos:position pos:line="69" pos:column="27"/></operator> <name pos:line="69" pos:column="28">temp<pos:position pos:line="69" pos:column="32"/></name><operator pos:line="69" pos:column="32">)<pos:position pos:line="69" pos:column="33"/></operator> <operator pos:line="69" pos:column="34">+<pos:position pos:line="69" pos:column="35"/></operator> <name pos:line="69" pos:column="36">shift<pos:position pos:line="69" pos:column="41"/></name></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt></block></then></if>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="72" pos:column="3">return <expr><operator pos:line="72" pos:column="10">(<pos:position pos:line="72" pos:column="11"/></operator><name pos:line="72" pos:column="11">ret<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">)<pos:position pos:line="72" pos:column="15"/></operator></expr>;<pos:position pos:line="72" pos:column="16"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_312_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cpu_commit<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list> <comment type="block" pos:line="1" pos:column="31">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">gauge_t<pos:position pos:line="3" pos:column="16"/></name></type> <name><name pos:line="3" pos:column="17">global_rates<pos:position pos:line="3" pos:column="29"/></name><index pos:line="3" pos:column="29">[<expr><name pos:line="3" pos:column="30">COLLECTD_CPU_STATE_MAX<pos:position pos:line="3" pos:column="52"/></name></expr>]<pos:position pos:line="3" pos:column="53"/></index></name> <init pos:line="3" pos:column="54">= <expr><block pos:line="3" pos:column="56">{
		<expr><name pos:line="4" pos:column="17">NAN<pos:position pos:line="4" pos:column="20"/></name></expr>, <expr><name pos:line="4" pos:column="22">NAN<pos:position pos:line="4" pos:column="25"/></name></expr>, <expr><name pos:line="4" pos:column="27">NAN<pos:position pos:line="4" pos:column="30"/></name></expr>, <expr><name pos:line="4" pos:column="32">NAN<pos:position pos:line="4" pos:column="35"/></name></expr>, <expr><name pos:line="4" pos:column="37">NAN<pos:position pos:line="4" pos:column="40"/></name></expr>, <expr><name pos:line="4" pos:column="42">NAN<pos:position pos:line="4" pos:column="45"/></name></expr>, <expr><name pos:line="4" pos:column="47">NAN<pos:position pos:line="4" pos:column="50"/></name></expr>, <expr><name pos:line="4" pos:column="52">NAN<pos:position pos:line="4" pos:column="55"/></name></expr>, <expr><name pos:line="4" pos:column="57">NAN<pos:position pos:line="4" pos:column="60"/></name></expr>, <expr><name pos:line="4" pos:column="62">NAN<pos:position pos:line="4" pos:column="65"/></name></expr> <comment type="block" pos:line="4" pos:column="66">/* Batman! */</comment>
	}<pos:position pos:line="5" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">report_num_cpu<pos:position pos:line="7" pos:column="27"/></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">cpu_commit_num_cpu<pos:position pos:line="8" pos:column="35"/></name> <argument_list pos:line="8" pos:column="36">(<argument><expr><operator pos:line="8" pos:column="37">(<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="38">gauge_t<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">)<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="47">global_cpu_num<pos:position pos:line="8" pos:column="61"/></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="63"/></expr_stmt></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">report_by_state<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">&amp;&amp;<pos:position pos:line="10" pos:column="39"/></operator> <name pos:line="10" pos:column="32">report_by_cpu<pos:position pos:line="10" pos:column="45"/></name> <operator pos:line="10" pos:column="46">&amp;&amp;<pos:position pos:line="10" pos:column="56"/></operator> <operator pos:line="10" pos:column="49">!<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="50">report_percent<pos:position pos:line="10" pos:column="64"/></name></expr>)<pos:position pos:line="10" pos:column="65"/></condition><then pos:line="10" pos:column="65">
	<block pos:line="11" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">cpu_commit_without_aggregation<pos:position pos:line="12" pos:column="47"/></name> <argument_list pos:line="12" pos:column="48">()<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
		<return pos:line="13" pos:column="17">return;<pos:position pos:line="13" pos:column="24"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">aggregate<pos:position pos:line="16" pos:column="18"/></name> <argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">global_rates<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">report_by_cpu<pos:position pos:line="18" pos:column="27"/></name></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28">
	<block pos:line="19" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">cpu_commit_one<pos:position pos:line="20" pos:column="31"/></name> <argument_list pos:line="20" pos:column="32">(<argument><expr><operator pos:line="20" pos:column="33">-<pos:position pos:line="20" pos:column="34"/></operator><literal type="number" pos:line="20" pos:column="34">1<pos:position pos:line="20" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="37">global_rates<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>
		<return pos:line="21" pos:column="17">return;<pos:position pos:line="21" pos:column="24"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><decl><type><name pos:line="24" pos:column="14">size_t<pos:position pos:line="24" pos:column="20"/></name></type> <name pos:line="24" pos:column="21">cpu_num<pos:position pos:line="24" pos:column="28"/></name> <init pos:line="24" pos:column="29">= <expr><literal type="number" pos:line="24" pos:column="31">0<pos:position pos:line="24" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="33"/></init> <condition><expr><name pos:line="24" pos:column="34">cpu_num<pos:position pos:line="24" pos:column="41"/></name> <operator pos:line="24" pos:column="42">&lt;<pos:position pos:line="24" pos:column="46"/></operator> <name pos:line="24" pos:column="44">global_cpu_num<pos:position pos:line="24" pos:column="58"/></name></expr>;<pos:position pos:line="24" pos:column="59"/></condition> <incr><expr><name pos:line="24" pos:column="60">cpu_num<pos:position pos:line="24" pos:column="67"/></name><operator pos:line="24" pos:column="67">++<pos:position pos:line="24" pos:column="69"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="70"/></control>
	<block pos:line="25" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">cpu_state_t<pos:position pos:line="26" pos:column="28"/></name> <modifier pos:line="26" pos:column="29">*<pos:position pos:line="26" pos:column="30"/></modifier></type><name pos:line="26" pos:column="30">this_cpu_states<pos:position pos:line="26" pos:column="45"/></name> <init pos:line="26" pos:column="46">= <expr><call><name pos:line="26" pos:column="48">get_cpu_state<pos:position pos:line="26" pos:column="61"/></name> <argument_list pos:line="26" pos:column="62">(<argument><expr><name pos:line="26" pos:column="63">cpu_num<pos:position pos:line="26" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="72">0<pos:position pos:line="26" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="75"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="27" pos:column="17">gauge_t<pos:position pos:line="27" pos:column="24"/></name></type> <name><name pos:line="27" pos:column="25">local_rates<pos:position pos:line="27" pos:column="36"/></name><index pos:line="27" pos:column="36">[<expr><name pos:line="27" pos:column="37">COLLECTD_CPU_STATE_MAX<pos:position pos:line="27" pos:column="59"/></name></expr>]<pos:position pos:line="27" pos:column="60"/></index></name> <init pos:line="27" pos:column="61">= <expr><block pos:line="27" pos:column="63">{
			<expr><name pos:line="28" pos:column="25">NAN<pos:position pos:line="28" pos:column="28"/></name></expr>, <expr><name pos:line="28" pos:column="30">NAN<pos:position pos:line="28" pos:column="33"/></name></expr>, <expr><name pos:line="28" pos:column="35">NAN<pos:position pos:line="28" pos:column="38"/></name></expr>, <expr><name pos:line="28" pos:column="40">NAN<pos:position pos:line="28" pos:column="43"/></name></expr>, <expr><name pos:line="28" pos:column="45">NAN<pos:position pos:line="28" pos:column="48"/></name></expr>, <expr><name pos:line="28" pos:column="50">NAN<pos:position pos:line="28" pos:column="53"/></name></expr>, <expr><name pos:line="28" pos:column="55">NAN<pos:position pos:line="28" pos:column="58"/></name></expr>, <expr><name pos:line="28" pos:column="60">NAN<pos:position pos:line="28" pos:column="63"/></name></expr>, <expr><name pos:line="28" pos:column="65">NAN<pos:position pos:line="28" pos:column="68"/></name></expr>, <expr><name pos:line="28" pos:column="70">NAN<pos:position pos:line="28" pos:column="73"/></name></expr>
		}<pos:position pos:line="29" pos:column="18"/></block></expr></init></decl>;<pos:position pos:line="29" pos:column="19"/></decl_stmt>

		<for pos:line="31" pos:column="17">for <control pos:line="31" pos:column="21">(<init><decl><type><name pos:line="31" pos:column="22">size_t<pos:position pos:line="31" pos:column="28"/></name></type> <name pos:line="31" pos:column="29">state<pos:position pos:line="31" pos:column="34"/></name> <init pos:line="31" pos:column="35">= <expr><literal type="number" pos:line="31" pos:column="37">0<pos:position pos:line="31" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="31" pos:column="39"/></init> <condition><expr><name pos:line="31" pos:column="40">state<pos:position pos:line="31" pos:column="45"/></name> <operator pos:line="31" pos:column="46">&lt;<pos:position pos:line="31" pos:column="50"/></operator> <name pos:line="31" pos:column="48">COLLECTD_CPU_STATE_MAX<pos:position pos:line="31" pos:column="70"/></name></expr>;<pos:position pos:line="31" pos:column="71"/></condition> <incr><expr><name pos:line="31" pos:column="72">state<pos:position pos:line="31" pos:column="77"/></name><operator pos:line="31" pos:column="77">++<pos:position pos:line="31" pos:column="79"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="80"/></control>
			<block type="pseudo"><if pos:line="32" pos:column="25">if <condition pos:line="32" pos:column="28">(<expr><name><name pos:line="32" pos:column="29">this_cpu_states<pos:position pos:line="32" pos:column="44"/></name><index pos:line="32" pos:column="44">[<expr><name pos:line="32" pos:column="45">state<pos:position pos:line="32" pos:column="50"/></name></expr>]<pos:position pos:line="32" pos:column="51"/></index></name><operator pos:line="32" pos:column="51">.<pos:position pos:line="32" pos:column="52"/></operator><name pos:line="32" pos:column="52">has_value<pos:position pos:line="32" pos:column="61"/></name></expr>)<pos:position pos:line="32" pos:column="62"/></condition><then pos:line="32" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="33">local_rates<pos:position pos:line="33" pos:column="44"/></name><index pos:line="33" pos:column="44">[<expr><name pos:line="33" pos:column="45">state<pos:position pos:line="33" pos:column="50"/></name></expr>]<pos:position pos:line="33" pos:column="51"/></index></name> <operator pos:line="33" pos:column="52">=<pos:position pos:line="33" pos:column="53"/></operator> <name><name pos:line="33" pos:column="54">this_cpu_states<pos:position pos:line="33" pos:column="69"/></name><index pos:line="33" pos:column="69">[<expr><name pos:line="33" pos:column="70">state<pos:position pos:line="33" pos:column="75"/></name></expr>]<pos:position pos:line="33" pos:column="76"/></index></name><operator pos:line="33" pos:column="76">.<pos:position pos:line="33" pos:column="77"/></operator><name pos:line="33" pos:column="77">rate<pos:position pos:line="33" pos:column="81"/></name></expr>;<pos:position pos:line="33" pos:column="82"/></expr_stmt></block></then></if></block></for>

		<expr_stmt><expr><call><name pos:line="35" pos:column="17">cpu_commit_one<pos:position pos:line="35" pos:column="31"/></name> <argument_list pos:line="35" pos:column="32">(<argument><expr><operator pos:line="35" pos:column="33">(<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">int<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">)<pos:position pos:line="35" pos:column="38"/></operator> <name pos:line="35" pos:column="39">cpu_num<pos:position pos:line="35" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="48">local_rates<pos:position pos:line="35" pos:column="59"/></name></expr></argument>)<pos:position pos:line="35" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></for>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

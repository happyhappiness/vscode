<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1703_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wg_write_messages<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">data_set_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ds<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">value_list_t<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">vl<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
        <parameter><decl><type><name><name pos:line="2" pos:column="9">struct<pos:position pos:line="2" pos:column="15"/></name> <name pos:line="2" pos:column="16">wg_callback<pos:position pos:line="2" pos:column="27"/></name></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">cb<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">key<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><literal type="number" pos:line="4" pos:column="14">10<pos:position pos:line="4" pos:column="16"/></literal><operator pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">DATA_MAX_NAME_LEN<pos:position pos:line="4" pos:column="34"/></name></expr>]<pos:position pos:line="4" pos:column="35"/></index></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">values<pos:position pos:line="5" pos:column="16"/></name><index pos:line="5" pos:column="16">[<expr><literal type="number" pos:line="5" pos:column="17">512<pos:position pos:line="5" pos:column="20"/></literal></expr>]<pos:position pos:line="5" pos:column="21"/></index></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">status<pos:position pos:line="7" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="17">i<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><literal type="number" pos:line="9" pos:column="9">0<pos:position pos:line="9" pos:column="10"/></literal> <operator pos:line="9" pos:column="11">!=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">strcmp<pos:position pos:line="9" pos:column="20"/></name> <argument_list pos:line="9" pos:column="21">(<argument><expr><name><name pos:line="9" pos:column="22">ds<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">type<pos:position pos:line="9" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="32">vl<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">type<pos:position pos:line="9" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="42"/></condition><then pos:line="9" pos:column="42">
    <block pos:line="10" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">ERROR<pos:position pos:line="11" pos:column="14"/></name> <argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="string" pos:line="11" pos:column="16">"write_graphite plugin: DS type does not match "<pos:position pos:line="11" pos:column="64"/></literal>
                <literal type="string" pos:line="12" pos:column="17">"value list type"<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><operator pos:line="13" pos:column="16">-<pos:position pos:line="13" pos:column="17"/></operator><literal type="number" pos:line="13" pos:column="17">1<pos:position pos:line="13" pos:column="18"/></literal></expr>;<pos:position pos:line="13" pos:column="19"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">i<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <literal type="number" pos:line="16" pos:column="14">0<pos:position pos:line="16" pos:column="15"/></literal></expr>;<pos:position pos:line="16" pos:column="16"/></init> <condition><expr><name pos:line="16" pos:column="17">i<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">&lt;<pos:position pos:line="16" pos:column="23"/></operator> <name><name pos:line="16" pos:column="21">ds<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">-&gt;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="25">ds_num<pos:position pos:line="16" pos:column="31"/></name></name></expr>;<pos:position pos:line="16" pos:column="32"/></condition> <incr><expr><name pos:line="16" pos:column="33">i<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">++<pos:position pos:line="16" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="37"/></control>
    <block pos:line="17" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">const<pos:position pos:line="18" pos:column="14"/></specifier> <name pos:line="18" pos:column="15">char<pos:position pos:line="18" pos:column="19"/></name> <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier></type><name pos:line="18" pos:column="21">ds_name<pos:position pos:line="18" pos:column="28"/></name> <init pos:line="18" pos:column="29">= <expr><name pos:line="18" pos:column="31">NULL<pos:position pos:line="18" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="36"/></decl_stmt>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">cb<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">always_append_ds<pos:position pos:line="20" pos:column="33"/></name></name> <operator pos:line="20" pos:column="34">||<pos:position pos:line="20" pos:column="36"/></operator> <operator pos:line="20" pos:column="37">(<pos:position pos:line="20" pos:column="38"/></operator><name><name pos:line="20" pos:column="38">ds<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">-&gt;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="42">ds_num<pos:position pos:line="20" pos:column="48"/></name></name> <operator pos:line="20" pos:column="49">&gt;<pos:position pos:line="20" pos:column="53"/></operator> <literal type="number" pos:line="20" pos:column="51">1<pos:position pos:line="20" pos:column="52"/></literal><operator pos:line="20" pos:column="52">)<pos:position pos:line="20" pos:column="53"/></operator></expr>)<pos:position pos:line="20" pos:column="54"/></condition><then pos:line="20" pos:column="54">
            <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="13">ds_name<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <name><name pos:line="21" pos:column="23">ds<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">ds<pos:position pos:line="21" pos:column="29"/></name><index pos:line="21" pos:column="29">[<expr><name pos:line="21" pos:column="30">i<pos:position pos:line="21" pos:column="31"/></name></expr>]<pos:position pos:line="21" pos:column="32"/></index></name><operator pos:line="21" pos:column="32">.<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">name<pos:position pos:line="21" pos:column="37"/></name></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="23" pos:column="9">/* Copy the identifier to `key' and escape it. */</comment>
        <expr_stmt><expr><name pos:line="24" pos:column="9">status<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <call><name pos:line="24" pos:column="18">wg_format_name<pos:position pos:line="24" pos:column="32"/></name> <argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">key<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="39">sizeof <argument_list pos:line="24" pos:column="46">(<argument><expr><name pos:line="24" pos:column="47">key<pos:position pos:line="24" pos:column="50"/></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">vl<pos:position pos:line="24" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="57">cb<pos:position pos:line="24" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">ds_name<pos:position pos:line="24" pos:column="68"/></name></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="70"/></expr_stmt>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">status<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">!=<pos:position pos:line="25" pos:column="22"/></operator> <literal type="number" pos:line="25" pos:column="23">0<pos:position pos:line="25" pos:column="24"/></literal></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25">
        <block pos:line="26" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">ERROR<pos:position pos:line="27" pos:column="18"/></name> <argument_list pos:line="27" pos:column="19">(<argument><expr><literal type="string" pos:line="27" pos:column="20">"write_graphite plugin: error with format_name"<pos:position pos:line="27" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="69"/></expr_stmt>
            <return pos:line="28" pos:column="13">return <expr><operator pos:line="28" pos:column="20">(<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">status<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">)<pos:position pos:line="28" pos:column="28"/></operator></expr>;<pos:position pos:line="28" pos:column="29"/></return>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="31" pos:column="9">escape_string<pos:position pos:line="31" pos:column="22"/></name> <argument_list pos:line="31" pos:column="23">(<argument><expr><name pos:line="31" pos:column="24">key<pos:position pos:line="31" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="29">sizeof <argument_list pos:line="31" pos:column="36">(<argument><expr><name pos:line="31" pos:column="37">key<pos:position pos:line="31" pos:column="40"/></name></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt>
        <comment type="block" pos:line="32" pos:column="9">/* Convert the values to an ASCII representation and put that into
         * `values'. */</comment>
        <expr_stmt><expr><name pos:line="34" pos:column="9">status<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">wg_format_values<pos:position pos:line="34" pos:column="34"/></name> <argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">values<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="44">sizeof <argument_list pos:line="34" pos:column="51">(<argument><expr><name pos:line="34" pos:column="52">values<pos:position pos:line="34" pos:column="58"/></name></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="34" pos:column="61">i<pos:position pos:line="34" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="64">ds<pos:position pos:line="34" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="68">vl<pos:position pos:line="34" pos:column="70"/></name></expr></argument>,
                    <argument><expr><name><name pos:line="35" pos:column="21">cb<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">store_rates<pos:position pos:line="35" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">status<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">!=<pos:position pos:line="36" pos:column="22"/></operator> <literal type="number" pos:line="36" pos:column="23">0<pos:position pos:line="36" pos:column="24"/></literal></expr>)<pos:position pos:line="36" pos:column="25"/></condition><then pos:line="36" pos:column="25">
        <block pos:line="37" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">ERROR<pos:position pos:line="38" pos:column="18"/></name> <argument_list pos:line="38" pos:column="19">(<argument><expr><literal type="string" pos:line="38" pos:column="20">"write_graphite plugin: error with "<pos:position pos:line="38" pos:column="56"/></literal>
                    <literal type="string" pos:line="39" pos:column="21">"wg_format_values"<pos:position pos:line="39" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>
            <return pos:line="40" pos:column="13">return <expr><operator pos:line="40" pos:column="20">(<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">status<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">)<pos:position pos:line="40" pos:column="28"/></operator></expr>;<pos:position pos:line="40" pos:column="29"/></return>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="43" pos:column="9">/* Send the message to graphite */</comment>
        <expr_stmt><expr><name pos:line="44" pos:column="9">status<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <call><name pos:line="44" pos:column="18">wg_send_message<pos:position pos:line="44" pos:column="33"/></name> <argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">key<pos:position pos:line="44" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="40">values<pos:position pos:line="44" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="48">vl<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">-&gt;<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="52">time<pos:position pos:line="44" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="58">cb<pos:position pos:line="44" pos:column="60"/></name></expr></argument>)<pos:position pos:line="44" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="62"/></expr_stmt>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">status<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">!=<pos:position pos:line="45" pos:column="22"/></operator> <literal type="number" pos:line="45" pos:column="23">0<pos:position pos:line="45" pos:column="24"/></literal></expr>)<pos:position pos:line="45" pos:column="25"/></condition><then pos:line="45" pos:column="25">
        <block pos:line="46" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">ERROR<pos:position pos:line="47" pos:column="18"/></name> <argument_list pos:line="47" pos:column="19">(<argument><expr><literal type="string" pos:line="47" pos:column="20">"write_graphite plugin: error with "<pos:position pos:line="47" pos:column="56"/></literal>
                    <literal type="string" pos:line="48" pos:column="21">"wg_send_message"<pos:position pos:line="48" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>
            <return pos:line="49" pos:column="13">return <expr><operator pos:line="49" pos:column="20">(<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="21">status<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">)<pos:position pos:line="49" pos:column="28"/></operator></expr>;<pos:position pos:line="49" pos:column="29"/></return>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>
    }<pos:position pos:line="51" pos:column="6"/></block></for>

    <return pos:line="53" pos:column="5">return <expr><operator pos:line="53" pos:column="12">(<pos:position pos:line="53" pos:column="13"/></operator><literal type="number" pos:line="53" pos:column="13">0<pos:position pos:line="53" pos:column="14"/></literal><operator pos:line="53" pos:column="14">)<pos:position pos:line="53" pos:column="15"/></operator></expr>;<pos:position pos:line="53" pos:column="16"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

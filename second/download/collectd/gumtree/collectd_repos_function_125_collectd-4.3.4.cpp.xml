<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_125_collectd-4.3.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">exec_read_one<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">arg<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list> <comment type="block" pos:line="1" pos:column="40">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">program_list_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">pl<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><operator pos:line="3" pos:column="24">(<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="25">program_list_t<pos:position pos:line="3" pos:column="39"/></name> <operator pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></operator><operator pos:line="3" pos:column="41">)<pos:position pos:line="3" pos:column="42"/></operator> <name pos:line="3" pos:column="43">arg<pos:position pos:line="3" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">fd<pos:position pos:line="4" pos:column="9"/></name></decl>;<pos:position pos:line="4" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">fh<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">buffer<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><literal type="number" pos:line="6" pos:column="15">1024<pos:position pos:line="6" pos:column="19"/></literal></expr>]<pos:position pos:line="6" pos:column="20"/></index></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">status<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <call><name pos:line="9" pos:column="12">fork_child<pos:position pos:line="9" pos:column="22"/></name> <argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">pl<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="28">NULL<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="34">&amp;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="35">fd<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">status<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">&lt;<pos:position pos:line="10" pos:column="18"/></operator> <literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">pthread_exit<pos:position pos:line="11" pos:column="17"/></name> <argument_list pos:line="11" pos:column="18">(<argument><expr><operator pos:line="11" pos:column="19">(<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">void<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">*<pos:position pos:line="11" pos:column="26"/></operator><operator pos:line="11" pos:column="26">)<pos:position pos:line="11" pos:column="27"/></operator> <literal type="number" pos:line="11" pos:column="28">1<pos:position pos:line="11" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">pl<pos:position pos:line="12" pos:column="5"/></name><operator pos:line="12" pos:column="5">-&gt;<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="7">pid<pos:position pos:line="12" pos:column="10"/></name></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">status<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">assert<pos:position pos:line="14" pos:column="9"/></name> <argument_list pos:line="14" pos:column="10">(<argument><expr><name><name pos:line="14" pos:column="11">pl<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">pid<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">!=<pos:position pos:line="14" pos:column="21"/></operator> <literal type="number" pos:line="14" pos:column="22">0<pos:position pos:line="14" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">fh<pos:position pos:line="16" pos:column="5"/></name> <operator pos:line="16" pos:column="6">=<pos:position pos:line="16" pos:column="7"/></operator> <call><name pos:line="16" pos:column="8">fdopen<pos:position pos:line="16" pos:column="14"/></name> <argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">fd<pos:position pos:line="16" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="20">"r"<pos:position pos:line="16" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">fh<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">==<pos:position pos:line="17" pos:column="12"/></operator> <name pos:line="17" pos:column="13">NULL<pos:position pos:line="17" pos:column="17"/></name></expr>)<pos:position pos:line="17" pos:column="18"/></condition><then pos:line="17" pos:column="18">
  <block pos:line="18" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name></type> <name><name pos:line="19" pos:column="10">errbuf<pos:position pos:line="19" pos:column="16"/></name><index pos:line="19" pos:column="16">[<expr><literal type="number" pos:line="19" pos:column="17">1024<pos:position pos:line="19" pos:column="21"/></literal></expr>]<pos:position pos:line="19" pos:column="22"/></index></name></decl>;<pos:position pos:line="19" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ERROR<pos:position pos:line="20" pos:column="10"/></name> <argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="string" pos:line="20" pos:column="12">"exec plugin: fdopen (%i) failed: %s"<pos:position pos:line="20" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">fd<pos:position pos:line="20" pos:column="53"/></name></expr></argument>,
	<argument><expr><call><name pos:line="21" pos:column="9">sstrerror<pos:position pos:line="21" pos:column="18"/></name> <argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">errno<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="27">errbuf<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="35">sizeof <argument_list pos:line="21" pos:column="42">(<argument><expr><name pos:line="21" pos:column="43">errbuf<pos:position pos:line="21" pos:column="49"/></name></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">kill<pos:position pos:line="22" pos:column="9"/></name> <argument_list pos:line="22" pos:column="10">(<argument><expr><name><name pos:line="22" pos:column="11">pl<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">pid<pos:position pos:line="22" pos:column="18"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="20">SIGTERM<pos:position pos:line="22" pos:column="27"/></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">pl<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">pid<pos:position pos:line="23" pos:column="12"/></name></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <literal type="number" pos:line="23" pos:column="15">0<pos:position pos:line="23" pos:column="16"/></literal></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">close<pos:position pos:line="24" pos:column="10"/></name> <argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">fd<pos:position pos:line="24" pos:column="14"/></name></expr></argument>)<pos:position pos:line="24" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">pthread_exit<pos:position pos:line="25" pos:column="17"/></name> <argument_list pos:line="25" pos:column="18">(<argument><expr><operator pos:line="25" pos:column="19">(<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">void<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">*<pos:position pos:line="25" pos:column="26"/></operator><operator pos:line="25" pos:column="26">)<pos:position pos:line="25" pos:column="27"/></operator> <literal type="number" pos:line="25" pos:column="28">1<pos:position pos:line="25" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="28" pos:column="3">buffer<pos:position pos:line="28" pos:column="9"/></name><index pos:line="28" pos:column="9">[<expr><literal type="number" pos:line="28" pos:column="10">0<pos:position pos:line="28" pos:column="11"/></literal></expr>]<pos:position pos:line="28" pos:column="12"/></index></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <literal type="char" pos:line="28" pos:column="15">'\0'<pos:position pos:line="28" pos:column="19"/></literal></expr>;<pos:position pos:line="28" pos:column="20"/></expr_stmt>
  <while pos:line="29" pos:column="3">while <condition pos:line="29" pos:column="9">(<expr><call><name pos:line="29" pos:column="10">fgets<pos:position pos:line="29" pos:column="15"/></name> <argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">buffer<pos:position pos:line="29" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="25">sizeof <argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">buffer<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">fh<pos:position pos:line="29" pos:column="44"/></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call> <operator pos:line="29" pos:column="46">!=<pos:position pos:line="29" pos:column="48"/></operator> <name pos:line="29" pos:column="49">NULL<pos:position pos:line="29" pos:column="53"/></name></expr>)<pos:position pos:line="29" pos:column="54"/></condition>
  <block pos:line="30" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">int<pos:position pos:line="31" pos:column="8"/></name></type> <name pos:line="31" pos:column="9">len<pos:position pos:line="31" pos:column="12"/></name></decl>;<pos:position pos:line="31" pos:column="13"/></decl_stmt>

    <expr_stmt><expr><name pos:line="33" pos:column="5">len<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">=<pos:position pos:line="33" pos:column="10"/></operator> <call><name pos:line="33" pos:column="11">strlen<pos:position pos:line="33" pos:column="17"/></name> <argument_list pos:line="33" pos:column="18">(<argument><expr><name pos:line="33" pos:column="19">buffer<pos:position pos:line="33" pos:column="25"/></name></expr></argument>)<pos:position pos:line="33" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* Remove newline from end. */</comment>
    <while pos:line="36" pos:column="5">while <condition pos:line="36" pos:column="11">(<expr><operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="13">len<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">&gt;<pos:position pos:line="36" pos:column="21"/></operator> <literal type="number" pos:line="36" pos:column="19">0<pos:position pos:line="36" pos:column="20"/></literal><operator pos:line="36" pos:column="20">)<pos:position pos:line="36" pos:column="21"/></operator> <operator pos:line="36" pos:column="22">&amp;&amp;<pos:position pos:line="36" pos:column="32"/></operator> <operator pos:line="36" pos:column="25">(<pos:position pos:line="36" pos:column="26"/></operator><operator pos:line="36" pos:column="26">(<pos:position pos:line="36" pos:column="27"/></operator><name><name pos:line="36" pos:column="27">buffer<pos:position pos:line="36" pos:column="33"/></name><index pos:line="36" pos:column="33">[<expr><name pos:line="36" pos:column="34">len<pos:position pos:line="36" pos:column="37"/></name> <operator pos:line="36" pos:column="38">-<pos:position pos:line="36" pos:column="39"/></operator> <literal type="number" pos:line="36" pos:column="40">1<pos:position pos:line="36" pos:column="41"/></literal></expr>]<pos:position pos:line="36" pos:column="42"/></index></name> <operator pos:line="36" pos:column="43">==<pos:position pos:line="36" pos:column="45"/></operator> <literal type="char" pos:line="36" pos:column="46">'\n'<pos:position pos:line="36" pos:column="50"/></literal><operator pos:line="36" pos:column="50">)<pos:position pos:line="36" pos:column="51"/></operator>
	  <operator pos:line="37" pos:column="11">||<pos:position pos:line="37" pos:column="13"/></operator> <operator pos:line="37" pos:column="14">(<pos:position pos:line="37" pos:column="15"/></operator><name><name pos:line="37" pos:column="15">buffer<pos:position pos:line="37" pos:column="21"/></name><index pos:line="37" pos:column="21">[<expr><name pos:line="37" pos:column="22">len<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">-<pos:position pos:line="37" pos:column="27"/></operator> <literal type="number" pos:line="37" pos:column="28">1<pos:position pos:line="37" pos:column="29"/></literal></expr>]<pos:position pos:line="37" pos:column="30"/></index></name> <operator pos:line="37" pos:column="31">==<pos:position pos:line="37" pos:column="33"/></operator> <literal type="char" pos:line="37" pos:column="34">'\r'<pos:position pos:line="37" pos:column="38"/></literal><operator pos:line="37" pos:column="38">)<pos:position pos:line="37" pos:column="39"/></operator><operator pos:line="37" pos:column="39">)<pos:position pos:line="37" pos:column="40"/></operator></expr>)<pos:position pos:line="37" pos:column="41"/></condition>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="7">buffer<pos:position pos:line="38" pos:column="13"/></name><index pos:line="38" pos:column="13">[<expr><operator pos:line="38" pos:column="14">--<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">len<pos:position pos:line="38" pos:column="19"/></name></expr>]<pos:position pos:line="38" pos:column="20"/></index></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <literal type="char" pos:line="38" pos:column="23">'\0'<pos:position pos:line="38" pos:column="27"/></literal></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt></block></while>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">DEBUG<pos:position pos:line="40" pos:column="10"/></name> <argument_list pos:line="40" pos:column="11">(<argument><expr><literal type="string" pos:line="40" pos:column="12">"exec plugin: exec_read_one: buffer = %s"<pos:position pos:line="40" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="55">buffer<pos:position pos:line="40" pos:column="61"/></name></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="42" pos:column="5">parse_line<pos:position pos:line="42" pos:column="15"/></name> <argument_list pos:line="42" pos:column="16">(<argument><expr><name pos:line="42" pos:column="17">buffer<pos:position pos:line="42" pos:column="23"/></name></expr></argument>)<pos:position pos:line="42" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></while> <comment type="block" pos:line="43" pos:column="5">/* while (fgets) */</comment>

  <expr_stmt><expr><call><name pos:line="45" pos:column="3">fclose<pos:position pos:line="45" pos:column="9"/></name> <argument_list pos:line="45" pos:column="10">(<argument><expr><name pos:line="45" pos:column="11">fh<pos:position pos:line="45" pos:column="13"/></name></expr></argument>)<pos:position pos:line="45" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="15"/></expr_stmt>

  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><call><name pos:line="47" pos:column="7">waitpid<pos:position pos:line="47" pos:column="14"/></name> <argument_list pos:line="47" pos:column="15">(<argument><expr><name><name pos:line="47" pos:column="16">pl<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">-&gt;<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="20">pid<pos:position pos:line="47" pos:column="23"/></name></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="25">&amp;<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="26">status<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="34">0<pos:position pos:line="47" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call> <operator pos:line="47" pos:column="37">&gt;<pos:position pos:line="47" pos:column="41"/></operator> <literal type="number" pos:line="47" pos:column="39">0<pos:position pos:line="47" pos:column="40"/></literal></expr>)<pos:position pos:line="47" pos:column="41"/></condition><then pos:line="47" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="48" pos:column="5">pl<pos:position pos:line="48" pos:column="7"/></name><operator pos:line="48" pos:column="7">-&gt;<pos:position pos:line="48" pos:column="12"/></operator><name pos:line="48" pos:column="9">status<pos:position pos:line="48" pos:column="15"/></name></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <name pos:line="48" pos:column="18">status<pos:position pos:line="48" pos:column="24"/></name></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="50" pos:column="3">DEBUG<pos:position pos:line="50" pos:column="8"/></name> <argument_list pos:line="50" pos:column="9">(<argument><expr><literal type="string" pos:line="50" pos:column="10">"exec plugin: Child %i exited with status %i."<pos:position pos:line="50" pos:column="56"/></literal></expr></argument>,
      <argument><expr><operator pos:line="51" pos:column="7">(<pos:position pos:line="51" pos:column="8"/></operator><name pos:line="51" pos:column="8">int<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">)<pos:position pos:line="51" pos:column="12"/></operator> <name><name pos:line="51" pos:column="13">pl<pos:position pos:line="51" pos:column="15"/></name><operator pos:line="51" pos:column="15">-&gt;<pos:position pos:line="51" pos:column="20"/></operator><name pos:line="51" pos:column="17">pid<pos:position pos:line="51" pos:column="20"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="22">pl<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">-&gt;<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="26">status<pos:position pos:line="51" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="53" pos:column="3">pl<pos:position pos:line="53" pos:column="5"/></name><operator pos:line="53" pos:column="5">-&gt;<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="7">pid<pos:position pos:line="53" pos:column="10"/></name></name> <operator pos:line="53" pos:column="11">=<pos:position pos:line="53" pos:column="12"/></operator> <literal type="number" pos:line="53" pos:column="13">0<pos:position pos:line="53" pos:column="14"/></literal></expr>;<pos:position pos:line="53" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="55" pos:column="3">pthread_mutex_lock<pos:position pos:line="55" pos:column="21"/></name> <argument_list pos:line="55" pos:column="22">(<argument><expr><operator pos:line="55" pos:column="23">&amp;<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="24">pl_lock<pos:position pos:line="55" pos:column="31"/></name></expr></argument>)<pos:position pos:line="55" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="56" pos:column="3">pl<pos:position pos:line="56" pos:column="5"/></name><operator pos:line="56" pos:column="5">-&gt;<pos:position pos:line="56" pos:column="10"/></operator><name pos:line="56" pos:column="7">flags<pos:position pos:line="56" pos:column="12"/></name></name> <operator pos:line="56" pos:column="13">&amp;=<pos:position pos:line="56" pos:column="19"/></operator> <operator pos:line="56" pos:column="16">~<pos:position pos:line="56" pos:column="17"/></operator><name pos:line="56" pos:column="17">PL_RUNNING<pos:position pos:line="56" pos:column="27"/></name></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">pthread_mutex_unlock<pos:position pos:line="57" pos:column="23"/></name> <argument_list pos:line="57" pos:column="24">(<argument><expr><operator pos:line="57" pos:column="25">&amp;<pos:position pos:line="57" pos:column="30"/></operator><name pos:line="57" pos:column="26">pl_lock<pos:position pos:line="57" pos:column="33"/></name></expr></argument>)<pos:position pos:line="57" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="59" pos:column="3">pthread_exit<pos:position pos:line="59" pos:column="15"/></name> <argument_list pos:line="59" pos:column="16">(<argument><expr><operator pos:line="59" pos:column="17">(<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="18">void<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">*<pos:position pos:line="59" pos:column="24"/></operator><operator pos:line="59" pos:column="24">)<pos:position pos:line="59" pos:column="25"/></operator> <literal type="number" pos:line="59" pos:column="26">0<pos:position pos:line="59" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="29"/></expr_stmt>
  <return pos:line="60" pos:column="3">return <expr><operator pos:line="60" pos:column="10">(<pos:position pos:line="60" pos:column="11"/></operator><name pos:line="60" pos:column="11">NULL<pos:position pos:line="60" pos:column="15"/></name><operator pos:line="60" pos:column="15">)<pos:position pos:line="60" pos:column="16"/></operator></expr>;<pos:position pos:line="60" pos:column="17"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

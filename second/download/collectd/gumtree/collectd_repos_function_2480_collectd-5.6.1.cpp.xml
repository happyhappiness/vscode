<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2480_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dispatch_value_typesdb<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">oconfig_item_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ci<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">assert<pos:position pos:line="3" pos:column="15"/></name> <argument_list pos:line="3" pos:column="16">(<argument><expr><call><name pos:line="3" pos:column="17">strcasecmp<pos:position pos:line="3" pos:column="27"/></name> <argument_list pos:line="3" pos:column="28">(<argument><expr><name><name pos:line="3" pos:column="29">ci<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">-&gt;<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="33">key<pos:position pos:line="3" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="38">"TypesDB"<pos:position pos:line="3" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="48"/></argument_list></call> <operator pos:line="3" pos:column="49">==<pos:position pos:line="3" pos:column="51"/></operator> <literal type="number" pos:line="3" pos:column="52">0<pos:position pos:line="3" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="55"/></expr_stmt>

	<expr_stmt><expr><name pos:line="5" pos:column="9">cf_default_typesdb<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">=<pos:position pos:line="5" pos:column="29"/></operator> <literal type="number" pos:line="5" pos:column="30">0<pos:position pos:line="5" pos:column="31"/></literal></expr>;<pos:position pos:line="5" pos:column="32"/></expr_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">ci<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">values_num<pos:position pos:line="7" pos:column="27"/></name></name> <operator pos:line="7" pos:column="28">&lt;<pos:position pos:line="7" pos:column="32"/></operator> <literal type="number" pos:line="7" pos:column="30">1<pos:position pos:line="7" pos:column="31"/></literal></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32"> <block pos:line="7" pos:column="33">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">ERROR<pos:position pos:line="8" pos:column="22"/></name> <argument_list pos:line="8" pos:column="23">(<argument><expr><literal type="string" pos:line="8" pos:column="24">"configfile: `TypesDB' needs at least one argument."<pos:position pos:line="8" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="78"/></expr_stmt>
		<return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><operator pos:line="9" pos:column="25">-<pos:position pos:line="9" pos:column="26"/></operator><literal type="number" pos:line="9" pos:column="26">1<pos:position pos:line="9" pos:column="27"/></literal><operator pos:line="9" pos:column="27">)<pos:position pos:line="9" pos:column="28"/></operator></expr>;<pos:position pos:line="9" pos:column="29"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><decl><type><name pos:line="12" pos:column="14">int<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">i<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><literal type="number" pos:line="12" pos:column="22">0<pos:position pos:line="12" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="24"/></init> <condition><expr><name pos:line="12" pos:column="25">i<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">&lt;<pos:position pos:line="12" pos:column="31"/></operator> <name><name pos:line="12" pos:column="29">ci<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">values_num<pos:position pos:line="12" pos:column="43"/></name></name></expr>;<pos:position pos:line="12" pos:column="44"/></condition> <incr><expr><operator pos:line="12" pos:column="45">++<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="47">i<pos:position pos:line="12" pos:column="48"/></name></expr></incr>)<pos:position pos:line="12" pos:column="49"/></control>
	<block pos:line="13" pos:column="9">{
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">OCONFIG_TYPE_STRING<pos:position pos:line="14" pos:column="40"/></name> <operator pos:line="14" pos:column="41">!=<pos:position pos:line="14" pos:column="43"/></operator> <name><name pos:line="14" pos:column="44">ci<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">-&gt;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="48">values<pos:position pos:line="14" pos:column="54"/></name><index pos:line="14" pos:column="54">[<expr><name pos:line="14" pos:column="55">i<pos:position pos:line="14" pos:column="56"/></name></expr>]<pos:position pos:line="14" pos:column="57"/></index></name><operator pos:line="14" pos:column="57">.<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="58">type<pos:position pos:line="14" pos:column="62"/></name></expr>)<pos:position pos:line="14" pos:column="63"/></condition><then pos:line="14" pos:column="63"> <block pos:line="14" pos:column="64">{
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">WARNING<pos:position pos:line="15" pos:column="32"/></name> <argument_list pos:line="15" pos:column="33">(<argument><expr><literal type="string" pos:line="15" pos:column="34">"configfile: TypesDB: Skipping %i. argument which "<pos:position pos:line="15" pos:column="85"/></literal>
					<literal type="string" pos:line="16" pos:column="41">"is not a string."<pos:position pos:line="16" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="61">i<pos:position pos:line="16" pos:column="62"/></name> <operator pos:line="16" pos:column="63">+<pos:position pos:line="16" pos:column="64"/></operator> <literal type="number" pos:line="16" pos:column="65">1<pos:position pos:line="16" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt>
			<continue pos:line="17" pos:column="25">continue;<pos:position pos:line="17" pos:column="34"/></continue>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="20" pos:column="17">read_types_list<pos:position pos:line="20" pos:column="32"/></name> <argument_list pos:line="20" pos:column="33">(<argument><expr><name><name pos:line="20" pos:column="34">ci<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">-&gt;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="38">values<pos:position pos:line="20" pos:column="44"/></name><index pos:line="20" pos:column="44">[<expr><name pos:line="20" pos:column="45">i<pos:position pos:line="20" pos:column="46"/></name></expr>]<pos:position pos:line="20" pos:column="47"/></index></name><operator pos:line="20" pos:column="47">.<pos:position pos:line="20" pos:column="48"/></operator><name><name pos:line="20" pos:column="48">value<pos:position pos:line="20" pos:column="53"/></name><operator pos:line="20" pos:column="53">.<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="54">string<pos:position pos:line="20" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></for>
	<return pos:line="22" pos:column="9">return <expr><operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal><operator pos:line="22" pos:column="18">)<pos:position pos:line="22" pos:column="19"/></operator></expr>;<pos:position pos:line="22" pos:column="20"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

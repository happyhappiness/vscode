<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_375_collectd-4.2.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">xs_init<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">pTHX<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">HV<pos:position pos:line="3" pos:column="11"/></name>   <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">stash<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">NULL<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">file<pos:position pos:line="4" pos:column="19"/></name>  <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">__FILE__<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">dXSUB_SYS<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* enable usage of Perl modules using shared libraries */</comment>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">Perl_newXS<pos:position pos:line="11" pos:column="19"/></name> <argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">perl<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="27">"DynaLoader::boot_DynaLoader"<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="58">boot_DynaLoader<pos:position pos:line="11" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="75">file<pos:position pos:line="11" pos:column="79"/></name></expr></argument>)<pos:position pos:line="11" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="81"/></expr_stmt>

	<comment type="block" pos:line="13" pos:column="9">/* register API */</comment>
	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">i<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>;<pos:position pos:line="14" pos:column="20"/></init> <condition><expr><name pos:line="14" pos:column="21">NULL<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">!=<pos:position pos:line="14" pos:column="28"/></operator> <name><name pos:line="14" pos:column="29">api<pos:position pos:line="14" pos:column="32"/></name><index pos:line="14" pos:column="32">[<expr><name pos:line="14" pos:column="33">i<pos:position pos:line="14" pos:column="34"/></name></expr>]<pos:position pos:line="14" pos:column="35"/></index></name><operator pos:line="14" pos:column="35">.<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="36">f<pos:position pos:line="14" pos:column="37"/></name></expr>;<pos:position pos:line="14" pos:column="38"/></condition> <incr><expr><operator pos:line="14" pos:column="39">++<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="41">i<pos:position pos:line="14" pos:column="42"/></name></expr></incr>)<pos:position pos:line="14" pos:column="43"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">Perl_newXS<pos:position pos:line="15" pos:column="27"/></name> <argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">perl<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="35">api<pos:position pos:line="15" pos:column="38"/></name><index pos:line="15" pos:column="38">[<expr><name pos:line="15" pos:column="39">i<pos:position pos:line="15" pos:column="40"/></name></expr>]<pos:position pos:line="15" pos:column="41"/></index></name><operator pos:line="15" pos:column="41">.<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="42">name<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="48">api<pos:position pos:line="15" pos:column="51"/></name><index pos:line="15" pos:column="51">[<expr><name pos:line="15" pos:column="52">i<pos:position pos:line="15" pos:column="53"/></name></expr>]<pos:position pos:line="15" pos:column="54"/></index></name><operator pos:line="15" pos:column="54">.<pos:position pos:line="15" pos:column="55"/></operator><name pos:line="15" pos:column="55">f<pos:position pos:line="15" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="58">file<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt></block></for>

	<expr_stmt><expr><name pos:line="17" pos:column="9">stash<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <call><name pos:line="17" pos:column="17">Perl_gv_stashpv<pos:position pos:line="17" pos:column="32"/></name> <argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">perl<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="40">"Collectd"<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="52">1<pos:position pos:line="17" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>

	<comment type="block" pos:line="19" pos:column="9">/* export "constants" */</comment>
	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">i<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></init> <condition><expr><literal type="char" pos:line="20" pos:column="21">'\0'<pos:position pos:line="20" pos:column="25"/></literal> <operator pos:line="20" pos:column="26">!=<pos:position pos:line="20" pos:column="28"/></operator> <name><name pos:line="20" pos:column="29">constants<pos:position pos:line="20" pos:column="38"/></name><index pos:line="20" pos:column="38">[<expr><name pos:line="20" pos:column="39">i<pos:position pos:line="20" pos:column="40"/></name></expr>]<pos:position pos:line="20" pos:column="41"/></index></name><operator pos:line="20" pos:column="41">.<pos:position pos:line="20" pos:column="42"/></operator><name><name pos:line="20" pos:column="42">name<pos:position pos:line="20" pos:column="46"/></name><index pos:line="20" pos:column="46">[<expr><literal type="number" pos:line="20" pos:column="47">0<pos:position pos:line="20" pos:column="48"/></literal></expr>]<pos:position pos:line="20" pos:column="49"/></index></name></expr>;<pos:position pos:line="20" pos:column="50"/></condition> <incr><expr><operator pos:line="20" pos:column="51">++<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="53">i<pos:position pos:line="20" pos:column="54"/></name></expr></incr>)<pos:position pos:line="20" pos:column="55"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">Perl_newCONSTSUB<pos:position pos:line="21" pos:column="33"/></name> <argument_list pos:line="21" pos:column="34">(<argument><expr><name pos:line="21" pos:column="35">perl<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">stash<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="48">constants<pos:position pos:line="21" pos:column="57"/></name><index pos:line="21" pos:column="57">[<expr><name pos:line="21" pos:column="58">i<pos:position pos:line="21" pos:column="59"/></name></expr>]<pos:position pos:line="21" pos:column="60"/></index></name><operator pos:line="21" pos:column="60">.<pos:position pos:line="21" pos:column="61"/></operator><name pos:line="21" pos:column="61">name<pos:position pos:line="21" pos:column="65"/></name></expr></argument>,
				<argument><expr><call><name pos:line="22" pos:column="33">Perl_newSViv<pos:position pos:line="22" pos:column="45"/></name> <argument_list pos:line="22" pos:column="46">(<argument><expr><name pos:line="22" pos:column="47">perl<pos:position pos:line="22" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="53">constants<pos:position pos:line="22" pos:column="62"/></name><index pos:line="22" pos:column="62">[<expr><name pos:line="22" pos:column="63">i<pos:position pos:line="22" pos:column="64"/></name></expr>]<pos:position pos:line="22" pos:column="65"/></index></name><operator pos:line="22" pos:column="65">.<pos:position pos:line="22" pos:column="66"/></operator><name pos:line="22" pos:column="66">value<pos:position pos:line="22" pos:column="71"/></name></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="74"/></expr_stmt></block></for>
	<return pos:line="23" pos:column="9">return;<pos:position pos:line="23" pos:column="16"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

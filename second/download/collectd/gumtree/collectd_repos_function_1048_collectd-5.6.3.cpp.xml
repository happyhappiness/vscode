<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1048_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mbmon_config<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">key<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">value<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list> <block pos:line="1" pos:column="61">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><call><name pos:line="2" pos:column="7">strcasecmp<pos:position pos:line="2" pos:column="17"/></name><argument_list pos:line="2" pos:column="17">(<argument><expr><name pos:line="2" pos:column="18">key<pos:position pos:line="2" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="2" pos:column="23">"host"<pos:position pos:line="2" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="2" pos:column="30"/></argument_list></call> <operator pos:line="2" pos:column="31">==<pos:position pos:line="2" pos:column="33"/></operator> <literal type="number" pos:line="2" pos:column="34">0<pos:position pos:line="2" pos:column="35"/></literal></expr>)<pos:position pos:line="2" pos:column="36"/></condition><then pos:line="2" pos:column="36"> <block pos:line="2" pos:column="37">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">mbmon_host<pos:position pos:line="3" pos:column="19"/></name> <operator pos:line="3" pos:column="20">!=<pos:position pos:line="3" pos:column="22"/></operator> <name pos:line="3" pos:column="23">NULL<pos:position pos:line="3" pos:column="27"/></name></expr>)<pos:position pos:line="3" pos:column="28"/></condition><then pos:line="3" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="7">free<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">mbmon_host<pos:position pos:line="4" pos:column="22"/></name></expr></argument>)<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="5" pos:column="5">mbmon_host<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <call><name pos:line="5" pos:column="18">strdup<pos:position pos:line="5" pos:column="24"/></name><argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">value<pos:position pos:line="5" pos:column="30"/></name></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="6" pos:column="4"/></block></then> <elseif pos:line="6" pos:column="5">else <if pos:line="6" pos:column="10">if <condition pos:line="6" pos:column="13">(<expr><call><name pos:line="6" pos:column="14">strcasecmp<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">key<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="30">"port"<pos:position pos:line="6" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call> <operator pos:line="6" pos:column="38">==<pos:position pos:line="6" pos:column="40"/></operator> <literal type="number" pos:line="6" pos:column="41">0<pos:position pos:line="6" pos:column="42"/></literal></expr>)<pos:position pos:line="6" pos:column="43"/></condition><then pos:line="6" pos:column="43"> <block pos:line="6" pos:column="44">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">mbmon_port<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">!=<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="7">free<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">mbmon_port<pos:position pos:line="8" pos:column="22"/></name></expr></argument>)<pos:position pos:line="8" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="9" pos:column="5">mbmon_port<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <call><name pos:line="9" pos:column="18">strdup<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">value<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if></elseif> <else pos:line="10" pos:column="5">else <block pos:line="10" pos:column="10">{
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></else></if>

  <return pos:line="14" pos:column="3">return <expr><operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><literal type="number" pos:line="14" pos:column="11">0<pos:position pos:line="14" pos:column="12"/></literal><operator pos:line="14" pos:column="12">)<pos:position pos:line="14" pos:column="13"/></operator></expr>;<pos:position pos:line="14" pos:column="14"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

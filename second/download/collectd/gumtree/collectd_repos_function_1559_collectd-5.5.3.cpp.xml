<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1559_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cconn_close<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">cconn<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">io<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><name><name pos:line="3" pos:column="5">io<pos:position pos:line="3" pos:column="7"/></name><operator pos:line="3" pos:column="7">-&gt;<pos:position pos:line="3" pos:column="12"/></operator><name pos:line="3" pos:column="9">state<pos:position pos:line="3" pos:column="14"/></name></name> <operator pos:line="3" pos:column="15">=<pos:position pos:line="3" pos:column="16"/></operator> <name pos:line="3" pos:column="17">CSTATE_UNCONNECTED<pos:position pos:line="3" pos:column="35"/></name></expr>;<pos:position pos:line="3" pos:column="36"/></expr_stmt>
    <if pos:line="4" pos:column="5">if<condition pos:line="4" pos:column="7">(<expr><name><name pos:line="4" pos:column="8">io<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">-&gt;<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="12">asok<pos:position pos:line="4" pos:column="16"/></name></name> <operator pos:line="4" pos:column="17">!=<pos:position pos:line="4" pos:column="19"/></operator> <operator pos:line="4" pos:column="20">-<pos:position pos:line="4" pos:column="21"/></operator><literal type="number" pos:line="4" pos:column="21">1<pos:position pos:line="4" pos:column="22"/></literal></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23">
    <block pos:line="5" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">res<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">RETRY_ON_EINTR<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">res<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="29">close<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><name><name pos:line="7" pos:column="35">io<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">asok<pos:position pos:line="7" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">io<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">asok<pos:position pos:line="9" pos:column="13"/></name></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <operator pos:line="9" pos:column="16">-<pos:position pos:line="9" pos:column="17"/></operator><literal type="number" pos:line="9" pos:column="17">1<pos:position pos:line="9" pos:column="18"/></literal></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">io<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">amt<pos:position pos:line="10" pos:column="12"/></name></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <literal type="number" pos:line="10" pos:column="15">0<pos:position pos:line="10" pos:column="16"/></literal></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">io<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">-&gt;<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="9">json_len<pos:position pos:line="11" pos:column="17"/></name></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">sfree<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name><name pos:line="12" pos:column="11">io<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">json<pos:position pos:line="12" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">io<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">json<pos:position pos:line="13" pos:column="13"/></name></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

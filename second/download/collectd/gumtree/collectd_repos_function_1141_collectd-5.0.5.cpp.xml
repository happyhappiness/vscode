<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1141_collectd-5.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">cu_mount_t<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">cu_mount_gen_getmntent<pos:position pos:line="1" pos:column="42"/></name> <parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">void<pos:position pos:line="1" pos:column="48"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">mnttab<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">mt<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">FILE<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">fp<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">cu_mount_t<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">first<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">NULL<pos:position pos:line="6" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">cu_mount_t<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">last<pos:position pos:line="7" pos:column="25"/></name>  <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">NULL<pos:position pos:line="7" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">cu_mount_t<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></operator><operator pos:line="8" pos:column="21">new<pos:position pos:line="8" pos:column="24"/></operator>   <operator pos:line="8" pos:column="27">=<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="29">NULL<pos:position pos:line="8" pos:column="33"/></name></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">DEBUG<pos:position pos:line="10" pos:column="14"/></name> <argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="string" pos:line="10" pos:column="16">"utils_mount: (void); COLLECTD_MNTTAB = %s"<pos:position pos:line="10" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="61">COLLECTD_MNTTAB<pos:position pos:line="10" pos:column="76"/></name></expr></argument>)<pos:position pos:line="10" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="78"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">fp<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <call><name pos:line="12" pos:column="19">fopen<pos:position pos:line="12" pos:column="24"/></name> <argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">COLLECTD_MNTTAB<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="43">"r"<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call><operator pos:line="12" pos:column="47">)<pos:position pos:line="12" pos:column="48"/></operator> <operator pos:line="12" pos:column="49">==<pos:position pos:line="12" pos:column="51"/></operator> <name pos:line="12" pos:column="52">NULL<pos:position pos:line="12" pos:column="56"/></name></expr>)<pos:position pos:line="12" pos:column="57"/></condition><then pos:line="12" pos:column="57">
	<block pos:line="13" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">char<pos:position pos:line="14" pos:column="21"/></name></type> <name><name pos:line="14" pos:column="22">errbuf<pos:position pos:line="14" pos:column="28"/></name><index pos:line="14" pos:column="28">[<expr><literal type="number" pos:line="14" pos:column="29">1024<pos:position pos:line="14" pos:column="33"/></literal></expr>]<pos:position pos:line="14" pos:column="34"/></index></name></decl>;<pos:position pos:line="14" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">ERROR<pos:position pos:line="15" pos:column="22"/></name> <argument_list pos:line="15" pos:column="23">(<argument><expr><literal type="string" pos:line="15" pos:column="24">"fopen (%s): %s"<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">COLLECTD_MNTTAB<pos:position pos:line="15" pos:column="57"/></name></expr></argument>,
				<argument><expr><call><name pos:line="16" pos:column="33">sstrerror<pos:position pos:line="16" pos:column="42"/></name> <argument_list pos:line="16" pos:column="43">(<argument><expr><name pos:line="16" pos:column="44">errno<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="51">errbuf<pos:position pos:line="16" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="59">sizeof <argument_list pos:line="16" pos:column="66">(<argument><expr><name pos:line="16" pos:column="67">errbuf<pos:position pos:line="16" pos:column="73"/></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="77"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">NULL<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">)<pos:position pos:line="17" pos:column="30"/></operator></expr>;<pos:position pos:line="17" pos:column="31"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<while pos:line="20" pos:column="9">while <condition pos:line="20" pos:column="15">(<expr><call><name pos:line="20" pos:column="16">getmntent<pos:position pos:line="20" pos:column="25"/></name> <argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">fp<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="31">&amp;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="32">mt<pos:position pos:line="20" pos:column="34"/></name></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call> <operator pos:line="20" pos:column="36">==<pos:position pos:line="20" pos:column="38"/></operator> <literal type="number" pos:line="20" pos:column="39">0<pos:position pos:line="20" pos:column="40"/></literal></expr>)<pos:position pos:line="20" pos:column="41"/></condition>
	<block pos:line="21" pos:column="9">{
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">(<pos:position pos:line="22" pos:column="22"/></operator><operator pos:line="22" pos:column="22">new<pos:position pos:line="22" pos:column="25"/></operator> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <call><name pos:line="22" pos:column="28">malloc<pos:position pos:line="22" pos:column="34"/></name> <argument_list pos:line="22" pos:column="35">(<argument><expr><sizeof pos:line="22" pos:column="36">sizeof <argument_list pos:line="22" pos:column="43">(<argument><expr><name pos:line="22" pos:column="44">cu_mount_t<pos:position pos:line="22" pos:column="54"/></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call><operator pos:line="22" pos:column="56">)<pos:position pos:line="22" pos:column="57"/></operator> <operator pos:line="22" pos:column="58">==<pos:position pos:line="22" pos:column="60"/></operator> <name pos:line="22" pos:column="61">NULL<pos:position pos:line="22" pos:column="65"/></name></expr>)<pos:position pos:line="22" pos:column="66"/></condition><then pos:line="22" pos:column="66">
			<block type="pseudo"><break pos:line="23" pos:column="25">break;<pos:position pos:line="23" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">memset<pos:position pos:line="24" pos:column="23"/></name> <argument_list pos:line="24" pos:column="24">(<argument><expr><operator pos:line="24" pos:column="25">new<pos:position pos:line="24" pos:column="28"/></operator></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="30">'\0'<pos:position pos:line="24" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="36">sizeof <argument_list pos:line="24" pos:column="43">(<argument><expr><name pos:line="24" pos:column="44">cu_mount_t<pos:position pos:line="24" pos:column="54"/></name></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt>
		
		<comment type="block" pos:line="26" pos:column="17">/* Copy values from `struct mnttab' */</comment>
		<expr_stmt><expr><operator pos:line="27" pos:column="17">new<pos:position pos:line="27" pos:column="20"/></operator><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">dir<pos:position pos:line="27" pos:column="25"/></name>         <operator pos:line="27" pos:column="34">=<pos:position pos:line="27" pos:column="35"/></operator> <call><name pos:line="27" pos:column="36">sstrdup<pos:position pos:line="27" pos:column="43"/></name> <argument_list pos:line="27" pos:column="44">(<argument><expr><name><name pos:line="27" pos:column="45">mt<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">.<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="48">mnt_mountp<pos:position pos:line="27" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="28" pos:column="17">new<pos:position pos:line="28" pos:column="20"/></operator><operator pos:line="28" pos:column="20">-&gt;<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="22">spec_device<pos:position pos:line="28" pos:column="33"/></name> <operator pos:line="28" pos:column="34">=<pos:position pos:line="28" pos:column="35"/></operator> <call><name pos:line="28" pos:column="36">sstrdup<pos:position pos:line="28" pos:column="43"/></name> <argument_list pos:line="28" pos:column="44">(<argument><expr><name><name pos:line="28" pos:column="45">mt<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">.<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="48">mnt_special<pos:position pos:line="28" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="29" pos:column="17">new<pos:position pos:line="29" pos:column="20"/></operator><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">type<pos:position pos:line="29" pos:column="26"/></name>        <operator pos:line="29" pos:column="34">=<pos:position pos:line="29" pos:column="35"/></operator> <call><name pos:line="29" pos:column="36">sstrdup<pos:position pos:line="29" pos:column="43"/></name> <argument_list pos:line="29" pos:column="44">(<argument><expr><name><name pos:line="29" pos:column="45">mt<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">.<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="48">mnt_fstype<pos:position pos:line="29" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="30" pos:column="17">new<pos:position pos:line="30" pos:column="20"/></operator><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">options<pos:position pos:line="30" pos:column="29"/></name>     <operator pos:line="30" pos:column="34">=<pos:position pos:line="30" pos:column="35"/></operator> <call><name pos:line="30" pos:column="36">sstrdup<pos:position pos:line="30" pos:column="43"/></name> <argument_list pos:line="30" pos:column="44">(<argument><expr><name><name pos:line="30" pos:column="45">mt<pos:position pos:line="30" pos:column="47"/></name><operator pos:line="30" pos:column="47">.<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="48">mnt_mntopts<pos:position pos:line="30" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="31" pos:column="17">new<pos:position pos:line="31" pos:column="20"/></operator><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">device<pos:position pos:line="31" pos:column="28"/></name>      <operator pos:line="31" pos:column="34">=<pos:position pos:line="31" pos:column="35"/></operator> <call><name pos:line="31" pos:column="36">get_device_name<pos:position pos:line="31" pos:column="51"/></name> <argument_list pos:line="31" pos:column="52">(<argument><expr><operator pos:line="31" pos:column="53">new<pos:position pos:line="31" pos:column="56"/></operator><operator pos:line="31" pos:column="56">-&gt;<pos:position pos:line="31" pos:column="61"/></operator><name pos:line="31" pos:column="58">options<pos:position pos:line="31" pos:column="65"/></name></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="32" pos:column="17">new<pos:position pos:line="32" pos:column="20"/></operator><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">next<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">=<pos:position pos:line="32" pos:column="28"/></operator> <name pos:line="32" pos:column="29">NULL<pos:position pos:line="32" pos:column="33"/></name></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>

		<comment type="block" pos:line="34" pos:column="17">/* Append to list */</comment>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">first<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">==<pos:position pos:line="35" pos:column="29"/></operator> <name pos:line="35" pos:column="30">NULL<pos:position pos:line="35" pos:column="34"/></name></expr>)<pos:position pos:line="35" pos:column="35"/></condition><then pos:line="35" pos:column="35">
		<block pos:line="36" pos:column="17">{
			<expr_stmt><expr><name pos:line="37" pos:column="25">first<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">=<pos:position pos:line="37" pos:column="32"/></operator> <operator pos:line="37" pos:column="33">new<pos:position pos:line="37" pos:column="36"/></operator></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="38" pos:column="25">last<pos:position pos:line="38" pos:column="29"/></name>  <operator pos:line="38" pos:column="31">=<pos:position pos:line="38" pos:column="32"/></operator> <operator pos:line="38" pos:column="33">new<pos:position pos:line="38" pos:column="36"/></operator></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></then>
		<else pos:line="40" pos:column="17">else
		<block pos:line="41" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="42" pos:column="25">last<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">-&gt;<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="31">next<pos:position pos:line="42" pos:column="35"/></name></name> <operator pos:line="42" pos:column="36">=<pos:position pos:line="42" pos:column="37"/></operator> <operator pos:line="42" pos:column="38">new<pos:position pos:line="42" pos:column="41"/></operator></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="43" pos:column="25">last<pos:position pos:line="43" pos:column="29"/></name>       <operator pos:line="43" pos:column="36">=<pos:position pos:line="43" pos:column="37"/></operator> <operator pos:line="43" pos:column="38">new<pos:position pos:line="43" pos:column="41"/></operator></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></else></if>
	}<pos:position pos:line="45" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="47" pos:column="9">fclose<pos:position pos:line="47" pos:column="15"/></name> <argument_list pos:line="47" pos:column="16">(<argument><expr><name pos:line="47" pos:column="17">fp<pos:position pos:line="47" pos:column="19"/></name></expr></argument>)<pos:position pos:line="47" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="21"/></expr_stmt>

	<return pos:line="49" pos:column="9">return <expr><operator pos:line="49" pos:column="16">(<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="17">first<pos:position pos:line="49" pos:column="22"/></name><operator pos:line="49" pos:column="22">)<pos:position pos:line="49" pos:column="23"/></operator></expr>;<pos:position pos:line="49" pos:column="24"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

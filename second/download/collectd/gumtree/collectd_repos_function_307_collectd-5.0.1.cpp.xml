<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_307_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">camqp_subscribe_thread<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">void<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">user_data<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <comment type="block" pos:line="1" pos:column="55">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">camqp_config_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">conf<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name pos:line="3" pos:column="28">user_data<pos:position pos:line="3" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">status<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><name pos:line="6" pos:column="12">subscriber_threads_running<pos:position pos:line="6" pos:column="38"/></name></expr>)<pos:position pos:line="6" pos:column="39"/></condition>
    <block pos:line="7" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">amqp_frame_t<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">frame<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>

        <expr_stmt><expr><name pos:line="10" pos:column="9">status<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <call><name pos:line="10" pos:column="18">camqp_connect<pos:position pos:line="10" pos:column="31"/></name> <argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">conf<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">status<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">!=<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
        <block pos:line="12" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">ERROR<pos:position pos:line="13" pos:column="18"/></name> <argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="string" pos:line="13" pos:column="20">"amqp plugin: camqp_connect failed. "<pos:position pos:line="13" pos:column="57"/></literal>
                    <literal type="string" pos:line="14" pos:column="21">"Will sleep for %i seconds."<pos:position pos:line="14" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">interval_g<pos:position pos:line="14" pos:column="61"/></name></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">sleep<pos:position pos:line="15" pos:column="18"/></name> <argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">interval_g<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
            <continue pos:line="16" pos:column="13">continue;<pos:position pos:line="16" pos:column="22"/></continue>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="19" pos:column="9">status<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">amqp_simple_wait_frame<pos:position pos:line="19" pos:column="40"/></name> <argument_list pos:line="19" pos:column="41">(<argument><expr><name><name pos:line="19" pos:column="42">conf<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">-&gt;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="48">connection<pos:position pos:line="19" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="60">&amp;<pos:position pos:line="19" pos:column="65"/></operator><name pos:line="19" pos:column="61">frame<pos:position pos:line="19" pos:column="66"/></name></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">status<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">&lt;<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="22">0<pos:position pos:line="20" pos:column="23"/></literal></expr>)<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24">
        <block pos:line="21" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">ERROR<pos:position pos:line="22" pos:column="18"/></name> <argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="string" pos:line="22" pos:column="20">"amqp plugin: amqp_simple_wait_frame failed. "<pos:position pos:line="22" pos:column="66"/></literal>
                    <literal type="string" pos:line="23" pos:column="21">"Will sleep for %i seconds."<pos:position pos:line="23" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="51">interval_g<pos:position pos:line="23" pos:column="61"/></name></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">camqp_close_connection<pos:position pos:line="24" pos:column="35"/></name> <argument_list pos:line="24" pos:column="36">(<argument><expr><name pos:line="24" pos:column="37">conf<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">sleep<pos:position pos:line="25" pos:column="18"/></name> <argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">interval_g<pos:position pos:line="25" pos:column="30"/></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
            <continue pos:line="26" pos:column="13">continue;<pos:position pos:line="26" pos:column="22"/></continue>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>

        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name><name pos:line="29" pos:column="13">frame<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">.<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">frame_type<pos:position pos:line="29" pos:column="29"/></name></name> <operator pos:line="29" pos:column="30">!=<pos:position pos:line="29" pos:column="32"/></operator> <name pos:line="29" pos:column="33">AMQP_FRAME_METHOD<pos:position pos:line="29" pos:column="50"/></name></expr>)<pos:position pos:line="29" pos:column="51"/></condition><then pos:line="29" pos:column="51">
        <block pos:line="30" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">DEBUG<pos:position pos:line="31" pos:column="18"/></name> <argument_list pos:line="31" pos:column="19">(<argument><expr><literal type="string" pos:line="31" pos:column="20">"amqp plugin: Unexpected frame type: %#"<pos:position pos:line="31" pos:column="60"/></literal><name pos:line="31" pos:column="60">PRIx8<pos:position pos:line="31" pos:column="65"/></name></expr></argument>,
                    <argument><expr><name><name pos:line="32" pos:column="21">frame<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">.<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="27">frame_type<pos:position pos:line="32" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
            <continue pos:line="33" pos:column="13">continue;<pos:position pos:line="33" pos:column="22"/></continue>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">frame<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">.<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="19">payload<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">.<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">method<pos:position pos:line="36" pos:column="33"/></name><operator pos:line="36" pos:column="33">.<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="34">id<pos:position pos:line="36" pos:column="36"/></name></name> <operator pos:line="36" pos:column="37">!=<pos:position pos:line="36" pos:column="39"/></operator> <name pos:line="36" pos:column="40">AMQP_BASIC_DELIVER_METHOD<pos:position pos:line="36" pos:column="65"/></name></expr>)<pos:position pos:line="36" pos:column="66"/></condition><then pos:line="36" pos:column="66">
        <block pos:line="37" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">DEBUG<pos:position pos:line="38" pos:column="18"/></name> <argument_list pos:line="38" pos:column="19">(<argument><expr><literal type="string" pos:line="38" pos:column="20">"amqp plugin: Unexpected method id: %#"<pos:position pos:line="38" pos:column="59"/></literal><name pos:line="38" pos:column="59">PRIx32<pos:position pos:line="38" pos:column="65"/></name></expr></argument>,
                    <argument><expr><name><name pos:line="39" pos:column="21">frame<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">.<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="27">payload<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">.<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="35">method<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">.<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="42">id<pos:position pos:line="39" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt>
            <continue pos:line="40" pos:column="13">continue;<pos:position pos:line="40" pos:column="22"/></continue>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="43" pos:column="9">status<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <call><name pos:line="43" pos:column="18">camqp_read_header<pos:position pos:line="43" pos:column="35"/></name> <argument_list pos:line="43" pos:column="36">(<argument><expr><name pos:line="43" pos:column="37">conf<pos:position pos:line="43" pos:column="41"/></name></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="45" pos:column="9">amqp_maybe_release_buffers<pos:position pos:line="45" pos:column="35"/></name> <argument_list pos:line="45" pos:column="36">(<argument><expr><name><name pos:line="45" pos:column="37">conf<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">-&gt;<pos:position pos:line="45" pos:column="46"/></operator><name pos:line="45" pos:column="43">connection<pos:position pos:line="45" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></while> <comment type="block" pos:line="46" pos:column="7">/* while (subscriber_threads_running) */</comment>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">camqp_config_free<pos:position pos:line="48" pos:column="22"/></name> <argument_list pos:line="48" pos:column="23">(<argument><expr><name pos:line="48" pos:column="24">conf<pos:position pos:line="48" pos:column="28"/></name></expr></argument>)<pos:position pos:line="48" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">pthread_exit<pos:position pos:line="49" pos:column="17"/></name> <argument_list pos:line="49" pos:column="18">(<argument><expr><name pos:line="49" pos:column="19">NULL<pos:position pos:line="49" pos:column="23"/></name></expr></argument>)<pos:position pos:line="49" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="25"/></expr_stmt>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

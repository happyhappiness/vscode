<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1788_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dpdk_helper_check_pipe<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">dpdk_helper_ctx_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">phc<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list> <block pos:line="1" pos:column="60">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">buf<pos:position pos:line="2" pos:column="11"/></name><index pos:line="2" pos:column="11">[<expr><name pos:line="2" pos:column="12">DPDK_MAX_BUFFER_SIZE<pos:position pos:line="2" pos:column="32"/></name></expr>]<pos:position pos:line="2" pos:column="33"/></index></name></decl>;<pos:position pos:line="2" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">out<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">DPDK_MAX_BUFFER_SIZE<pos:position pos:line="3" pos:column="32"/></name></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* non blocking check on helper logging pipe */</comment>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">pollfd<pos:position pos:line="6" pos:column="16"/></name></name></type> <name pos:line="6" pos:column="17">fds<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><block pos:line="6" pos:column="23">{
      <expr><operator pos:line="7" pos:column="7">.<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">fd<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <name><name pos:line="7" pos:column="13">phc<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">pipes<pos:position pos:line="7" pos:column="23"/></name><index pos:line="7" pos:column="23">[<expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>]<pos:position pos:line="7" pos:column="26"/></index></name></expr>, <expr><operator pos:line="7" pos:column="28">.<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">events<pos:position pos:line="7" pos:column="35"/></name> <operator pos:line="7" pos:column="36">=<pos:position pos:line="7" pos:column="37"/></operator> <name pos:line="7" pos:column="38">POLLIN<pos:position pos:line="7" pos:column="44"/></name></expr>,
  }<pos:position pos:line="8" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="5"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">data_avail<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><call><name pos:line="9" pos:column="20">poll<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><operator pos:line="9" pos:column="25">&amp;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="26">fds<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="31">1<pos:position pos:line="9" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="34">0<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">DEBUG<pos:position pos:line="10" pos:column="8"/></name><argument_list pos:line="10" pos:column="8">(<argument><expr><literal type="string" pos:line="10" pos:column="9">"%s:dpdk_helper_check_pipe: poll data_avail=%d"<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="58">phc<pos:position pos:line="10" pos:column="61"/></name><operator pos:line="10" pos:column="61">-&gt;<pos:position pos:line="10" pos:column="66"/></operator><name pos:line="10" pos:column="63">shm_name<pos:position pos:line="10" pos:column="71"/></name></name></expr></argument>,
        <argument><expr><name pos:line="11" pos:column="9">data_avail<pos:position pos:line="11" pos:column="19"/></name></expr></argument>)<pos:position pos:line="11" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">data_avail<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">&lt;<pos:position pos:line="12" pos:column="22"/></operator> <literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr>)<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22"> <block pos:line="12" pos:column="23">{
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">errno<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">!=<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">EINTR<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">||<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">errno<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">!=<pos:position pos:line="13" pos:column="35"/></operator> <name pos:line="13" pos:column="36">EAGAIN<pos:position pos:line="13" pos:column="42"/></name></expr>)<pos:position pos:line="13" pos:column="43"/></condition><then pos:line="13" pos:column="43"> <block pos:line="13" pos:column="44">{
      <decl_stmt><decl><type><name pos:line="14" pos:column="7">char<pos:position pos:line="14" pos:column="11"/></name></type> <name><name pos:line="14" pos:column="12">errbuf<pos:position pos:line="14" pos:column="18"/></name><index pos:line="14" pos:column="18">[<expr><name pos:line="14" pos:column="19">ERR_BUF_SIZE<pos:position pos:line="14" pos:column="31"/></name></expr>]<pos:position pos:line="14" pos:column="32"/></index></name></decl>;<pos:position pos:line="14" pos:column="33"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">ERROR<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><literal type="string" pos:line="15" pos:column="13">"%s: poll(2) failed: %s"<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="39">phc<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">-&gt;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="44">shm_name<pos:position pos:line="15" pos:column="52"/></name></name></expr></argument>,
            <argument><expr><call><name pos:line="16" pos:column="13">sstrerror<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">errno<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="30">errbuf<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="38">sizeof<argument_list pos:line="16" pos:column="44">(<argument><expr><name pos:line="16" pos:column="45">errbuf<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>
  <while pos:line="19" pos:column="3">while <condition pos:line="19" pos:column="9">(<expr><name pos:line="19" pos:column="10">data_avail<pos:position pos:line="19" pos:column="20"/></name></expr>)<pos:position pos:line="19" pos:column="21"/></condition> <block pos:line="19" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">nbytes<pos:position pos:line="20" pos:column="15"/></name> <init pos:line="20" pos:column="16">= <expr><call><name pos:line="20" pos:column="18">read<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name><name pos:line="20" pos:column="23">phc<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">pipes<pos:position pos:line="20" pos:column="33"/></name><index pos:line="20" pos:column="33">[<expr><literal type="number" pos:line="20" pos:column="34">0<pos:position pos:line="20" pos:column="35"/></literal></expr>]<pos:position pos:line="20" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">buf<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="43">(<pos:position pos:line="20" pos:column="44"/></operator><sizeof pos:line="20" pos:column="44">sizeof<argument_list pos:line="20" pos:column="50">(<argument><expr><name pos:line="20" pos:column="51">buf<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></sizeof> <operator pos:line="20" pos:column="56">-<pos:position pos:line="20" pos:column="57"/></operator> <literal type="number" pos:line="20" pos:column="58">1<pos:position pos:line="20" pos:column="59"/></literal><operator pos:line="20" pos:column="59">)<pos:position pos:line="20" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="62"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">DEBUG<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><literal type="string" pos:line="21" pos:column="11">"%s:dpdk_helper_check_pipe: read nbytes=%d"<pos:position pos:line="21" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="56">phc<pos:position pos:line="21" pos:column="59"/></name><operator pos:line="21" pos:column="59">-&gt;<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="61">shm_name<pos:position pos:line="21" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="71">nbytes<pos:position pos:line="21" pos:column="77"/></name></expr></argument>)<pos:position pos:line="21" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="79"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">nbytes<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">&lt;=<pos:position pos:line="22" pos:column="21"/></operator> <literal type="number" pos:line="22" pos:column="19">0<pos:position pos:line="22" pos:column="20"/></literal></expr>)<pos:position pos:line="22" pos:column="21"/></condition><then pos:line="22" pos:column="21">
      <block type="pseudo"><break pos:line="23" pos:column="7">break;<pos:position pos:line="23" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">buf<pos:position pos:line="24" pos:column="8"/></name><index pos:line="24" pos:column="8">[<expr><name pos:line="24" pos:column="9">nbytes<pos:position pos:line="24" pos:column="15"/></name></expr>]<pos:position pos:line="24" pos:column="16"/></index></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <literal type="char" pos:line="24" pos:column="19">'\0'<pos:position pos:line="24" pos:column="23"/></literal></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">sstrncpy<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">out<pos:position pos:line="25" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="19">buf<pos:position pos:line="25" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="24">sizeof<argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">out<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">DEBUG<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><literal type="string" pos:line="26" pos:column="11">"%s: helper process:\n%s"<pos:position pos:line="26" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="38">phc<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">shm_name<pos:position pos:line="26" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="53">out<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></while>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

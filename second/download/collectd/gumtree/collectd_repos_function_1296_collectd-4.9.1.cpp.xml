<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1296_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mysql_config_set_boolean<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ret_boolean<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="56">/* {{{ */</comment>
				<parameter><decl><type><name pos:line="2" pos:column="33">oconfig_item_t<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">ci<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">ci<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">values_num<pos:position pos:line="6" pos:column="27"/></name></name> <operator pos:line="6" pos:column="28">!=<pos:position pos:line="6" pos:column="30"/></operator> <literal type="number" pos:line="6" pos:column="31">1<pos:position pos:line="6" pos:column="32"/></literal></expr>)<pos:position pos:line="6" pos:column="33"/></condition><then pos:line="6" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">status<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">=<pos:position pos:line="7" pos:column="25"/></operator> <operator pos:line="7" pos:column="26">-<pos:position pos:line="7" pos:column="27"/></operator><literal type="number" pos:line="7" pos:column="27">1<pos:position pos:line="7" pos:column="28"/></literal></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt></block></then></if>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">status<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">==<pos:position pos:line="9" pos:column="22"/></operator> <literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25">
	<block pos:line="10" pos:column="9">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name><name pos:line="11" pos:column="21">ci<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">values<pos:position pos:line="11" pos:column="31"/></name><index pos:line="11" pos:column="31">[<expr><literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal></expr>]<pos:position pos:line="11" pos:column="34"/></index></name><operator pos:line="11" pos:column="34">.<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="35">type<pos:position pos:line="11" pos:column="39"/></name> <operator pos:line="11" pos:column="40">==<pos:position pos:line="11" pos:column="42"/></operator> <name pos:line="11" pos:column="43">OCONFIG_TYPE_BOOLEAN<pos:position pos:line="11" pos:column="63"/></name></expr>)<pos:position pos:line="11" pos:column="64"/></condition><then pos:line="11" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="12" pos:column="25">*<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">ret_boolean<pos:position pos:line="12" pos:column="37"/></name> <operator pos:line="12" pos:column="38">=<pos:position pos:line="12" pos:column="39"/></operator> <name><name pos:line="12" pos:column="40">ci<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">values<pos:position pos:line="12" pos:column="50"/></name><index pos:line="12" pos:column="50">[<expr><literal type="number" pos:line="12" pos:column="51">0<pos:position pos:line="12" pos:column="52"/></literal></expr>]<pos:position pos:line="12" pos:column="53"/></index></name><operator pos:line="12" pos:column="53">.<pos:position pos:line="12" pos:column="54"/></operator><name><name pos:line="12" pos:column="54">value<pos:position pos:line="12" pos:column="59"/></name><operator pos:line="12" pos:column="59">.<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="60">boolean<pos:position pos:line="12" pos:column="67"/></name></name></expr>;<pos:position pos:line="12" pos:column="68"/></expr_stmt></block></then>
		<elseif pos:line="13" pos:column="17">else <if pos:line="13" pos:column="22">if <condition pos:line="13" pos:column="25">(<expr><name><name pos:line="13" pos:column="26">ci<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">values<pos:position pos:line="13" pos:column="36"/></name><index pos:line="13" pos:column="36">[<expr><literal type="number" pos:line="13" pos:column="37">0<pos:position pos:line="13" pos:column="38"/></literal></expr>]<pos:position pos:line="13" pos:column="39"/></index></name><operator pos:line="13" pos:column="39">.<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="40">type<pos:position pos:line="13" pos:column="44"/></name> <operator pos:line="13" pos:column="45">==<pos:position pos:line="13" pos:column="47"/></operator> <name pos:line="13" pos:column="48">OCONFIG_TYPE_STRING<pos:position pos:line="13" pos:column="67"/></name></expr>)<pos:position pos:line="13" pos:column="68"/></condition><then pos:line="13" pos:column="68">
		<block pos:line="14" pos:column="17">{
			<if pos:line="15" pos:column="25">if <condition pos:line="15" pos:column="28">(<expr><call><name pos:line="15" pos:column="29">IS_TRUE<pos:position pos:line="15" pos:column="36"/></name> <argument_list pos:line="15" pos:column="37">(<argument><expr><name><name pos:line="15" pos:column="38">ci<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">values<pos:position pos:line="15" pos:column="48"/></name><index pos:line="15" pos:column="48">[<expr><literal type="number" pos:line="15" pos:column="49">0<pos:position pos:line="15" pos:column="50"/></literal></expr>]<pos:position pos:line="15" pos:column="51"/></index></name><operator pos:line="15" pos:column="51">.<pos:position pos:line="15" pos:column="52"/></operator><name><name pos:line="15" pos:column="52">value<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">.<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="58">string<pos:position pos:line="15" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="66"/></condition><then pos:line="15" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="16" pos:column="33">*<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="34">ret_boolean<pos:position pos:line="16" pos:column="45"/></name> <operator pos:line="16" pos:column="46">=<pos:position pos:line="16" pos:column="47"/></operator> <literal type="number" pos:line="16" pos:column="48">1<pos:position pos:line="16" pos:column="49"/></literal></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt></block></then>
			<elseif pos:line="17" pos:column="25">else <if pos:line="17" pos:column="30">if <condition pos:line="17" pos:column="33">(<expr><call><name pos:line="17" pos:column="34">IS_FALSE<pos:position pos:line="17" pos:column="42"/></name> <argument_list pos:line="17" pos:column="43">(<argument><expr><name><name pos:line="17" pos:column="44">ci<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">values<pos:position pos:line="17" pos:column="54"/></name><index pos:line="17" pos:column="54">[<expr><literal type="number" pos:line="17" pos:column="55">0<pos:position pos:line="17" pos:column="56"/></literal></expr>]<pos:position pos:line="17" pos:column="57"/></index></name><operator pos:line="17" pos:column="57">.<pos:position pos:line="17" pos:column="58"/></operator><name><name pos:line="17" pos:column="58">value<pos:position pos:line="17" pos:column="63"/></name><operator pos:line="17" pos:column="63">.<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="64">string<pos:position pos:line="17" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="72"/></condition><then pos:line="17" pos:column="72">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="18" pos:column="33">*<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="34">ret_boolean<pos:position pos:line="18" pos:column="45"/></name> <operator pos:line="18" pos:column="46">=<pos:position pos:line="18" pos:column="47"/></operator> <literal type="number" pos:line="18" pos:column="48">0<pos:position pos:line="18" pos:column="49"/></literal></expr>;<pos:position pos:line="18" pos:column="50"/></expr_stmt></block></then></if></elseif>
			<else pos:line="19" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="33">status<pos:position pos:line="20" pos:column="39"/></name> <operator pos:line="20" pos:column="40">=<pos:position pos:line="20" pos:column="41"/></operator> <operator pos:line="20" pos:column="42">-<pos:position pos:line="20" pos:column="43"/></operator><literal type="number" pos:line="20" pos:column="43">1<pos:position pos:line="20" pos:column="44"/></literal></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt></block></else></if>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if></elseif>
		<else pos:line="22" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="25">status<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">=<pos:position pos:line="23" pos:column="33"/></operator> <operator pos:line="23" pos:column="34">-<pos:position pos:line="23" pos:column="35"/></operator><literal type="number" pos:line="23" pos:column="35">1<pos:position pos:line="23" pos:column="36"/></literal></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt></block></else></if>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">status<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">!=<pos:position pos:line="26" pos:column="22"/></operator> <literal type="number" pos:line="26" pos:column="23">0<pos:position pos:line="26" pos:column="24"/></literal></expr>)<pos:position pos:line="26" pos:column="25"/></condition><then pos:line="26" pos:column="25">
	<block pos:line="27" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">WARNING<pos:position pos:line="28" pos:column="24"/></name> <argument_list pos:line="28" pos:column="25">(<argument><expr><literal type="string" pos:line="28" pos:column="26">"mysql plugin: The `%s' config option "<pos:position pos:line="28" pos:column="65"/></literal>
			<literal type="string" pos:line="29" pos:column="25">"needs exactly one boolean argument."<pos:position pos:line="29" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="64">ci<pos:position pos:line="29" pos:column="66"/></name><operator pos:line="29" pos:column="66">-&gt;<pos:position pos:line="29" pos:column="71"/></operator><name pos:line="29" pos:column="68">key<pos:position pos:line="29" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="73"/></expr_stmt>
		<return pos:line="30" pos:column="17">return <expr><operator pos:line="30" pos:column="24">(<pos:position pos:line="30" pos:column="25"/></operator><operator pos:line="30" pos:column="25">-<pos:position pos:line="30" pos:column="26"/></operator><literal type="number" pos:line="30" pos:column="26">1<pos:position pos:line="30" pos:column="27"/></literal><operator pos:line="30" pos:column="27">)<pos:position pos:line="30" pos:column="28"/></operator></expr>;<pos:position pos:line="30" pos:column="29"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>
	<return pos:line="32" pos:column="9">return <expr><operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><literal type="number" pos:line="32" pos:column="17">0<pos:position pos:line="32" pos:column="18"/></literal><operator pos:line="32" pos:column="18">)<pos:position pos:line="32" pos:column="19"/></operator></expr>;<pos:position pos:line="32" pos:column="20"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_303_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">camqp_create_exchange<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">camqp_config_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conf<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <comment type="block" pos:line="1" pos:column="57">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">amqp_exchange_declare_ok_t<pos:position pos:line="3" pos:column="31"/></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">ed_ret<pos:position pos:line="3" pos:column="39"/></name></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">amqp_table_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">argument_table<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">amqp_table_entry_t_<pos:position pos:line="5" pos:column="31"/></name></name></type> <name><name pos:line="5" pos:column="32">argument_table_entries<pos:position pos:line="5" pos:column="54"/></name><index pos:line="5" pos:column="54">[<expr><literal type="number" pos:line="5" pos:column="55">1<pos:position pos:line="5" pos:column="56"/></literal></expr>]<pos:position pos:line="5" pos:column="57"/></index></name></decl>;<pos:position pos:line="5" pos:column="58"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">conf<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">exchange_type<pos:position pos:line="7" pos:column="28"/></name></name> <operator pos:line="7" pos:column="29">==<pos:position pos:line="7" pos:column="31"/></operator> <name pos:line="7" pos:column="32">NULL<pos:position pos:line="7" pos:column="36"/></name></expr>)<pos:position pos:line="7" pos:column="37"/></condition><then pos:line="7" pos:column="37">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal><operator pos:line="8" pos:column="18">)<pos:position pos:line="8" pos:column="19"/></operator></expr>;<pos:position pos:line="8" pos:column="20"/></return></block></then></if>

    <comment type="block" pos:line="10" pos:column="5">/* Valid arguments: "auto_delete", "internal" */</comment>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">argument_table<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">.<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">num_entries<pos:position pos:line="11" pos:column="31"/></name></name> <operator pos:line="11" pos:column="32">=<pos:position pos:line="11" pos:column="33"/></operator> <call><name pos:line="11" pos:column="34">STATIC_ARRAY_SIZE<pos:position pos:line="11" pos:column="51"/></name> <argument_list pos:line="11" pos:column="52">(<argument><expr><name pos:line="11" pos:column="53">argument_table_entries<pos:position pos:line="11" pos:column="75"/></name></expr></argument>)<pos:position pos:line="11" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">argument_table<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">.<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">entries<pos:position pos:line="12" pos:column="27"/></name></name> <operator pos:line="12" pos:column="28">=<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="30">argument_table_entries<pos:position pos:line="12" pos:column="52"/></name></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">argument_table_entries<pos:position pos:line="13" pos:column="27"/></name><index pos:line="13" pos:column="27">[<expr><literal type="number" pos:line="13" pos:column="28">0<pos:position pos:line="13" pos:column="29"/></literal></expr>]<pos:position pos:line="13" pos:column="30"/></index></name><operator pos:line="13" pos:column="30">.<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">key<pos:position pos:line="13" pos:column="34"/></name> <operator pos:line="13" pos:column="35">=<pos:position pos:line="13" pos:column="36"/></operator> <call><name pos:line="13" pos:column="37">amqp_cstring_bytes<pos:position pos:line="13" pos:column="55"/></name> <argument_list pos:line="13" pos:column="56">(<argument><expr><literal type="string" pos:line="13" pos:column="57">"auto_delete"<pos:position pos:line="13" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">argument_table_entries<pos:position pos:line="14" pos:column="27"/></name><index pos:line="14" pos:column="27">[<expr><literal type="number" pos:line="14" pos:column="28">0<pos:position pos:line="14" pos:column="29"/></literal></expr>]<pos:position pos:line="14" pos:column="30"/></index></name><operator pos:line="14" pos:column="30">.<pos:position pos:line="14" pos:column="31"/></operator><name><name pos:line="14" pos:column="31">value<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">.<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">kind<pos:position pos:line="14" pos:column="41"/></name></name> <operator pos:line="14" pos:column="42">=<pos:position pos:line="14" pos:column="43"/></operator> <name pos:line="14" pos:column="44">AMQP_FIELD_KIND_BOOLEAN<pos:position pos:line="14" pos:column="67"/></name></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">argument_table_entries<pos:position pos:line="15" pos:column="27"/></name><index pos:line="15" pos:column="27">[<expr><literal type="number" pos:line="15" pos:column="28">0<pos:position pos:line="15" pos:column="29"/></literal></expr>]<pos:position pos:line="15" pos:column="30"/></index></name><operator pos:line="15" pos:column="30">.<pos:position pos:line="15" pos:column="31"/></operator><name><name pos:line="15" pos:column="31">value<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">.<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="37">value<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">.<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">boolean<pos:position pos:line="15" pos:column="50"/></name></name> <operator pos:line="15" pos:column="51">=<pos:position pos:line="15" pos:column="52"/></operator> <literal type="number" pos:line="15" pos:column="53">1<pos:position pos:line="15" pos:column="54"/></literal></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">ed_ret<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">amqp_exchange_declare<pos:position pos:line="17" pos:column="35"/></name> <argument_list pos:line="17" pos:column="36">(<argument><expr><name><name pos:line="17" pos:column="37">conf<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">connection<pos:position pos:line="17" pos:column="53"/></name></name></expr></argument>,
            <comment type="block" pos:line="18" pos:column="13">/* channel     = */</comment> <argument><expr><name pos:line="18" pos:column="33">CAMQP_CHANNEL<pos:position pos:line="18" pos:column="46"/></name></expr></argument>,
            <comment type="block" pos:line="19" pos:column="13">/* exchange    = */</comment> <argument><expr><call><name pos:line="19" pos:column="33">amqp_cstring_bytes<pos:position pos:line="19" pos:column="51"/></name> <argument_list pos:line="19" pos:column="52">(<argument><expr><name><name pos:line="19" pos:column="53">conf<pos:position pos:line="19" pos:column="57"/></name><operator pos:line="19" pos:column="57">-&gt;<pos:position pos:line="19" pos:column="62"/></operator><name pos:line="19" pos:column="59">exchange<pos:position pos:line="19" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr></argument>,
            <comment type="block" pos:line="20" pos:column="13">/* type        = */</comment> <argument><expr><call><name pos:line="20" pos:column="33">amqp_cstring_bytes<pos:position pos:line="20" pos:column="51"/></name> <argument_list pos:line="20" pos:column="52">(<argument><expr><name><name pos:line="20" pos:column="53">conf<pos:position pos:line="20" pos:column="57"/></name><operator pos:line="20" pos:column="57">-&gt;<pos:position pos:line="20" pos:column="62"/></operator><name pos:line="20" pos:column="59">exchange_type<pos:position pos:line="20" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr></argument>,
            <comment type="block" pos:line="21" pos:column="13">/* passive     = */</comment> <argument><expr><literal type="number" pos:line="21" pos:column="33">0<pos:position pos:line="21" pos:column="34"/></literal></expr></argument>,
            <comment type="block" pos:line="22" pos:column="13">/* durable     = */</comment> <argument><expr><literal type="number" pos:line="22" pos:column="33">0<pos:position pos:line="22" pos:column="34"/></literal></expr></argument>,
            <comment type="block" pos:line="23" pos:column="13">/* arguments   = */</comment> <argument><expr><name pos:line="23" pos:column="33">argument_table<pos:position pos:line="23" pos:column="47"/></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">ed_ret<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">==<pos:position pos:line="24" pos:column="19"/></operator> <name pos:line="24" pos:column="20">NULL<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">)<pos:position pos:line="24" pos:column="25"/></operator> <operator pos:line="24" pos:column="26">&amp;&amp;<pos:position pos:line="24" pos:column="36"/></operator> <call><name pos:line="24" pos:column="29">camqp_is_error<pos:position pos:line="24" pos:column="43"/></name> <argument_list pos:line="24" pos:column="44">(<argument><expr><name pos:line="24" pos:column="45">conf<pos:position pos:line="24" pos:column="49"/></name></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="51"/></condition><then pos:line="24" pos:column="51">
    <block pos:line="25" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">char<pos:position pos:line="26" pos:column="13"/></name></type> <name><name pos:line="26" pos:column="14">errbuf<pos:position pos:line="26" pos:column="20"/></name><index pos:line="26" pos:column="20">[<expr><literal type="number" pos:line="26" pos:column="21">1024<pos:position pos:line="26" pos:column="25"/></literal></expr>]<pos:position pos:line="26" pos:column="26"/></index></name></decl>;<pos:position pos:line="26" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">ERROR<pos:position pos:line="27" pos:column="14"/></name> <argument_list pos:line="27" pos:column="15">(<argument><expr><literal type="string" pos:line="27" pos:column="16">"amqp plugin: amqp_exchange_declare failed: %s"<pos:position pos:line="27" pos:column="63"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="28" pos:column="17">camqp_strerror<pos:position pos:line="28" pos:column="31"/></name> <argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">conf<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="39">errbuf<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="47">sizeof <argument_list pos:line="28" pos:column="54">(<argument><expr><name pos:line="28" pos:column="55">errbuf<pos:position pos:line="28" pos:column="61"/></name></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">camqp_close_connection<pos:position pos:line="29" pos:column="31"/></name> <argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">conf<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
        <return pos:line="30" pos:column="9">return <expr><operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><operator pos:line="30" pos:column="17">-<pos:position pos:line="30" pos:column="18"/></operator><literal type="number" pos:line="30" pos:column="18">1<pos:position pos:line="30" pos:column="19"/></literal><operator pos:line="30" pos:column="19">)<pos:position pos:line="30" pos:column="20"/></operator></expr>;<pos:position pos:line="30" pos:column="21"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">INFO<pos:position pos:line="33" pos:column="9"/></name> <argument_list pos:line="33" pos:column="10">(<argument><expr><literal type="string" pos:line="33" pos:column="11">"amqp plugin: Successfully created exchange \"%s\" "<pos:position pos:line="33" pos:column="63"/></literal>
            <literal type="string" pos:line="34" pos:column="13">"with type \"%s\"."<pos:position pos:line="34" pos:column="32"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="35" pos:column="13">conf<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">-&gt;<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="19">exchange<pos:position pos:line="35" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="29">conf<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">-&gt;<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="35">exchange_type<pos:position pos:line="35" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt>

    <return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><literal type="number" pos:line="37" pos:column="13">0<pos:position pos:line="37" pos:column="14"/></literal><operator pos:line="37" pos:column="14">)<pos:position pos:line="37" pos:column="15"/></operator></expr>;<pos:position pos:line="37" pos:column="16"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

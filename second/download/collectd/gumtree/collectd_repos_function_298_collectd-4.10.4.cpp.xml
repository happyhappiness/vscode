<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_298_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">get_via_io_power_sources<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">double<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">ret_charge<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">double<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">ret_current<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">double<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">ret_voltage<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="37"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">CFTypeRef<pos:position pos:line="5" pos:column="18"/></name></type>       <name pos:line="5" pos:column="25">ps_raw<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">CFArrayRef<pos:position pos:line="6" pos:column="19"/></name></type>      <name pos:line="6" pos:column="25">ps_array<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type>             <name pos:line="7" pos:column="25">ps_array_len<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">CFDictionaryRef<pos:position pos:line="8" pos:column="24"/></name></type> <name pos:line="8" pos:column="25">ps_dict<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">CFTypeRef<pos:position pos:line="9" pos:column="18"/></name></type>       <name pos:line="9" pos:column="25">ps_obj<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="11" pos:column="9">double<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">temp_double<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">i<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">ps_raw<pos:position pos:line="14" pos:column="15"/></name>       <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <call><name pos:line="14" pos:column="24">IOPSCopyPowerSourcesInfo<pos:position pos:line="14" pos:column="48"/></name> <argument_list pos:line="14" pos:column="49">()<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">ps_array<pos:position pos:line="15" pos:column="17"/></name>     <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <call><name pos:line="15" pos:column="24">IOPSCopyPowerSourcesList<pos:position pos:line="15" pos:column="48"/></name> <argument_list pos:line="15" pos:column="49">(<argument><expr><name pos:line="15" pos:column="50">ps_raw<pos:position pos:line="15" pos:column="56"/></name></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">ps_array_len<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <call><name pos:line="16" pos:column="24">CFArrayGetCount<pos:position pos:line="16" pos:column="39"/></name> <argument_list pos:line="16" pos:column="40">(<argument><expr><name pos:line="16" pos:column="41">ps_array<pos:position pos:line="16" pos:column="49"/></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="51"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">DEBUG<pos:position pos:line="18" pos:column="14"/></name> <argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="string" pos:line="18" pos:column="16">"ps_array_len == %i"<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">ps_array_len<pos:position pos:line="18" pos:column="50"/></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>

	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">i<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></init> <condition><expr><name pos:line="20" pos:column="21">i<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="25">ps_array_len<pos:position pos:line="20" pos:column="37"/></name></expr>;<pos:position pos:line="20" pos:column="38"/></condition> <incr><expr><name pos:line="20" pos:column="39">i<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">++<pos:position pos:line="20" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="43"/></control>
	<block pos:line="21" pos:column="9">{
		<expr_stmt><expr><name pos:line="22" pos:column="17">ps_obj<pos:position pos:line="22" pos:column="23"/></name>  <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <call><name pos:line="22" pos:column="27">CFArrayGetValueAtIndex<pos:position pos:line="22" pos:column="49"/></name> <argument_list pos:line="22" pos:column="50">(<argument><expr><name pos:line="22" pos:column="51">ps_array<pos:position pos:line="22" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="61">i<pos:position pos:line="22" pos:column="62"/></name></expr></argument>)<pos:position pos:line="22" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">ps_dict<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <call><name pos:line="23" pos:column="27">IOPSGetPowerSourceDescription<pos:position pos:line="23" pos:column="56"/></name> <argument_list pos:line="23" pos:column="57">(<argument><expr><name pos:line="23" pos:column="58">ps_raw<pos:position pos:line="23" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="66">ps_obj<pos:position pos:line="23" pos:column="72"/></name></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="74"/></expr_stmt>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">ps_dict<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">==<pos:position pos:line="25" pos:column="31"/></operator> <name pos:line="25" pos:column="32">NULL<pos:position pos:line="25" pos:column="36"/></name></expr>)<pos:position pos:line="25" pos:column="37"/></condition><then pos:line="25" pos:column="37">
		<block pos:line="26" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">DEBUG<pos:position pos:line="27" pos:column="30"/></name> <argument_list pos:line="27" pos:column="31">(<argument><expr><literal type="string" pos:line="27" pos:column="32">"IOPSGetPowerSourceDescription failed."<pos:position pos:line="27" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="73"/></expr_stmt>
			<continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">CFGetTypeID<pos:position pos:line="31" pos:column="32"/></name> <argument_list pos:line="31" pos:column="33">(<argument><expr><name pos:line="31" pos:column="34">ps_dict<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call> <operator pos:line="31" pos:column="43">!=<pos:position pos:line="31" pos:column="45"/></operator> <call><name pos:line="31" pos:column="46">CFDictionaryGetTypeID<pos:position pos:line="31" pos:column="67"/></name> <argument_list pos:line="31" pos:column="68">()<pos:position pos:line="31" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="71"/></condition><then pos:line="31" pos:column="71">
		<block pos:line="32" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">DEBUG<pos:position pos:line="33" pos:column="30"/></name> <argument_list pos:line="33" pos:column="31">(<argument><expr><literal type="string" pos:line="33" pos:column="32">"IOPSGetPowerSourceDescription did not return a CFDictionaryRef"<pos:position pos:line="33" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="98"/></expr_stmt>
			<continue pos:line="34" pos:column="25">continue;<pos:position pos:line="34" pos:column="34"/></continue>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="37" pos:column="17">/* FIXME: Check if this is really an internal battery */</comment>

		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">*<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">ret_charge<pos:position pos:line="39" pos:column="32"/></name> <operator pos:line="39" pos:column="33">==<pos:position pos:line="39" pos:column="35"/></operator> <name pos:line="39" pos:column="36">INVALID_VALUE<pos:position pos:line="39" pos:column="49"/></name></expr>)<pos:position pos:line="39" pos:column="50"/></condition><then pos:line="39" pos:column="50">
		<block pos:line="40" pos:column="17">{
			<comment type="block" pos:line="41" pos:column="25">/* This is the charge in percent. */</comment>
			<expr_stmt><expr><name pos:line="42" pos:column="25">temp_double<pos:position pos:line="42" pos:column="36"/></name> <operator pos:line="42" pos:column="37">=<pos:position pos:line="42" pos:column="38"/></operator> <call><name pos:line="42" pos:column="39">dict_get_double<pos:position pos:line="42" pos:column="54"/></name> <argument_list pos:line="42" pos:column="55">(<argument><expr><name pos:line="42" pos:column="56">ps_dict<pos:position pos:line="42" pos:column="63"/></name></expr></argument>,
					<argument><expr><name pos:line="43" pos:column="41">kIOPSCurrentCapacityKey<pos:position pos:line="43" pos:column="64"/></name></expr></argument>)<pos:position pos:line="43" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="66"/></expr_stmt>
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><operator pos:line="44" pos:column="29">(<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="30">temp_double<pos:position pos:line="44" pos:column="41"/></name> <operator pos:line="44" pos:column="42">!=<pos:position pos:line="44" pos:column="44"/></operator> <name pos:line="44" pos:column="45">INVALID_VALUE<pos:position pos:line="44" pos:column="58"/></name><operator pos:line="44" pos:column="58">)<pos:position pos:line="44" pos:column="59"/></operator>
					<operator pos:line="45" pos:column="41">&amp;&amp;<pos:position pos:line="45" pos:column="51"/></operator> <operator pos:line="45" pos:column="44">(<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="45">temp_double<pos:position pos:line="45" pos:column="56"/></name> <operator pos:line="45" pos:column="57">&gt;=<pos:position pos:line="45" pos:column="62"/></operator> <literal type="number" pos:line="45" pos:column="60">0.0<pos:position pos:line="45" pos:column="63"/></literal><operator pos:line="45" pos:column="63">)<pos:position pos:line="45" pos:column="64"/></operator>
					<operator pos:line="46" pos:column="41">&amp;&amp;<pos:position pos:line="46" pos:column="51"/></operator> <operator pos:line="46" pos:column="44">(<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="45">temp_double<pos:position pos:line="46" pos:column="56"/></name> <operator pos:line="46" pos:column="57">&lt;=<pos:position pos:line="46" pos:column="62"/></operator> <literal type="number" pos:line="46" pos:column="60">100.0<pos:position pos:line="46" pos:column="65"/></literal><operator pos:line="46" pos:column="65">)<pos:position pos:line="46" pos:column="66"/></operator></expr>)<pos:position pos:line="46" pos:column="67"/></condition><then pos:line="46" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="47" pos:column="33">*<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="34">ret_charge<pos:position pos:line="47" pos:column="44"/></name> <operator pos:line="47" pos:column="45">=<pos:position pos:line="47" pos:column="46"/></operator> <name pos:line="47" pos:column="47">temp_double<pos:position pos:line="47" pos:column="58"/></name></expr>;<pos:position pos:line="47" pos:column="59"/></expr_stmt></block></then></if>
		}<pos:position pos:line="48" pos:column="18"/></block></then></if>

		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><operator pos:line="50" pos:column="21">*<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="22">ret_current<pos:position pos:line="50" pos:column="33"/></name> <operator pos:line="50" pos:column="34">==<pos:position pos:line="50" pos:column="36"/></operator> <name pos:line="50" pos:column="37">INVALID_VALUE<pos:position pos:line="50" pos:column="50"/></name></expr>)<pos:position pos:line="50" pos:column="51"/></condition><then pos:line="50" pos:column="51">
		<block pos:line="51" pos:column="17">{
			<expr_stmt><expr><name pos:line="52" pos:column="25">temp_double<pos:position pos:line="52" pos:column="36"/></name> <operator pos:line="52" pos:column="37">=<pos:position pos:line="52" pos:column="38"/></operator> <call><name pos:line="52" pos:column="39">dict_get_double<pos:position pos:line="52" pos:column="54"/></name> <argument_list pos:line="52" pos:column="55">(<argument><expr><name pos:line="52" pos:column="56">ps_dict<pos:position pos:line="52" pos:column="63"/></name></expr></argument>,
					<argument><expr><name pos:line="53" pos:column="41">kIOPSCurrentKey<pos:position pos:line="53" pos:column="56"/></name></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="58"/></expr_stmt>
			<if pos:line="54" pos:column="25">if <condition pos:line="54" pos:column="28">(<expr><name pos:line="54" pos:column="29">temp_double<pos:position pos:line="54" pos:column="40"/></name> <operator pos:line="54" pos:column="41">!=<pos:position pos:line="54" pos:column="43"/></operator> <name pos:line="54" pos:column="44">INVALID_VALUE<pos:position pos:line="54" pos:column="57"/></name></expr>)<pos:position pos:line="54" pos:column="58"/></condition><then pos:line="54" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="55" pos:column="33">*<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="34">ret_current<pos:position pos:line="55" pos:column="45"/></name> <operator pos:line="55" pos:column="46">=<pos:position pos:line="55" pos:column="47"/></operator> <name pos:line="55" pos:column="48">temp_double<pos:position pos:line="55" pos:column="59"/></name> <operator pos:line="55" pos:column="60">/<pos:position pos:line="55" pos:column="61"/></operator> <literal type="number" pos:line="55" pos:column="62">1000.0<pos:position pos:line="55" pos:column="68"/></literal></expr>;<pos:position pos:line="55" pos:column="69"/></expr_stmt></block></then></if>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if>

		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><operator pos:line="58" pos:column="21">*<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="22">ret_voltage<pos:position pos:line="58" pos:column="33"/></name> <operator pos:line="58" pos:column="34">==<pos:position pos:line="58" pos:column="36"/></operator> <name pos:line="58" pos:column="37">INVALID_VALUE<pos:position pos:line="58" pos:column="50"/></name></expr>)<pos:position pos:line="58" pos:column="51"/></condition><then pos:line="58" pos:column="51">
		<block pos:line="59" pos:column="17">{
			<expr_stmt><expr><name pos:line="60" pos:column="25">temp_double<pos:position pos:line="60" pos:column="36"/></name> <operator pos:line="60" pos:column="37">=<pos:position pos:line="60" pos:column="38"/></operator> <call><name pos:line="60" pos:column="39">dict_get_double<pos:position pos:line="60" pos:column="54"/></name> <argument_list pos:line="60" pos:column="55">(<argument><expr><name pos:line="60" pos:column="56">ps_dict<pos:position pos:line="60" pos:column="63"/></name></expr></argument>,
					<argument><expr><name pos:line="61" pos:column="41">kIOPSVoltageKey<pos:position pos:line="61" pos:column="56"/></name></expr></argument>)<pos:position pos:line="61" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="58"/></expr_stmt>
			<if pos:line="62" pos:column="25">if <condition pos:line="62" pos:column="28">(<expr><name pos:line="62" pos:column="29">temp_double<pos:position pos:line="62" pos:column="40"/></name> <operator pos:line="62" pos:column="41">!=<pos:position pos:line="62" pos:column="43"/></operator> <name pos:line="62" pos:column="44">INVALID_VALUE<pos:position pos:line="62" pos:column="57"/></name></expr>)<pos:position pos:line="62" pos:column="58"/></condition><then pos:line="62" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="63" pos:column="33">*<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="34">ret_voltage<pos:position pos:line="63" pos:column="45"/></name> <operator pos:line="63" pos:column="46">=<pos:position pos:line="63" pos:column="47"/></operator> <name pos:line="63" pos:column="48">temp_double<pos:position pos:line="63" pos:column="59"/></name> <operator pos:line="63" pos:column="60">/<pos:position pos:line="63" pos:column="61"/></operator> <literal type="number" pos:line="63" pos:column="62">1000.0<pos:position pos:line="63" pos:column="68"/></literal></expr>;<pos:position pos:line="63" pos:column="69"/></expr_stmt></block></then></if>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if>
	}<pos:position pos:line="65" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="67" pos:column="9">CFRelease<pos:position pos:line="67" pos:column="18"/></name><argument_list pos:line="67" pos:column="18">(<argument><expr><name pos:line="67" pos:column="19">ps_array<pos:position pos:line="67" pos:column="27"/></name></expr></argument>)<pos:position pos:line="67" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">CFRelease<pos:position pos:line="68" pos:column="18"/></name><argument_list pos:line="68" pos:column="18">(<argument><expr><name pos:line="68" pos:column="19">ps_raw<pos:position pos:line="68" pos:column="25"/></name></expr></argument>)<pos:position pos:line="68" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="27"/></expr_stmt>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

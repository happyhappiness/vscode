<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_574_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dpdk_event_keep_alive_shm_open<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">void<pos:position pos:line="1" pos:column="47"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <block pos:line="1" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">dpdk_events_ctx_t<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">ec<pos:position pos:line="2" pos:column="24"/></name> <init pos:line="2" pos:column="25">= <expr><call><name pos:line="2" pos:column="27">DPDK_EVENTS_CTX_GET<pos:position pos:line="2" pos:column="46"/></name><argument_list pos:line="2" pos:column="46">(<argument><expr><name pos:line="2" pos:column="47">g_hc<pos:position pos:line="2" pos:column="51"/></name></expr></argument>)<pos:position pos:line="2" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">shm_name<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">strlen<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><name><name pos:line="5" pos:column="14">ec<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">-&gt;<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="18">config<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">.<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">keep_alive<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">.<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="36">shm_name<pos:position pos:line="5" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="46"/></condition><then pos:line="5" pos:column="46"> <block pos:line="5" pos:column="47">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">shm_name<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <name><name pos:line="6" pos:column="16">ec<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">config<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">.<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">keep_alive<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">.<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">shm_name<pos:position pos:line="6" pos:column="46"/></name></name></expr>;<pos:position pos:line="6" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="7" pos:column="4"/></block></then> <else pos:line="7" pos:column="5">else <block pos:line="7" pos:column="10">{
    <expr_stmt><expr><name pos:line="8" pos:column="5">shm_name<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">RTE_KEEPALIVE_SHM_NAME<pos:position pos:line="8" pos:column="38"/></name></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">WARNING<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">DPDK_EVENTS_PLUGIN<pos:position pos:line="9" pos:column="31"/></name> <literal type="string" pos:line="9" pos:column="32">": Keep alive shared memory identifier is not "<pos:position pos:line="9" pos:column="79"/></literal>
                               <literal type="string" pos:line="10" pos:column="32">"specified, using default one: %s"<pos:position pos:line="10" pos:column="66"/></literal></expr></argument>,
            <argument><expr><name pos:line="11" pos:column="13">shm_name<pos:position pos:line="11" pos:column="21"/></name></expr></argument>)<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></else></if>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name></type> <name><name pos:line="14" pos:column="8">errbuf<pos:position pos:line="14" pos:column="14"/></name><index pos:line="14" pos:column="14">[<expr><name pos:line="14" pos:column="15">ERR_BUF_SIZE<pos:position pos:line="14" pos:column="27"/></name></expr>]<pos:position pos:line="14" pos:column="28"/></index></name></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">fd<pos:position pos:line="15" pos:column="9"/></name> <init pos:line="15" pos:column="10">= <expr><call><name pos:line="15" pos:column="12">shm_open<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">shm_name<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">O_RDONLY<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="41">0<pos:position pos:line="15" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="44"/></decl_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">fd<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">&lt;<pos:position pos:line="16" pos:column="14"/></operator> <literal type="number" pos:line="16" pos:column="12">0<pos:position pos:line="16" pos:column="13"/></literal></expr>)<pos:position pos:line="16" pos:column="14"/></condition><then pos:line="16" pos:column="14"> <block pos:line="16" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ERROR<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><name pos:line="17" pos:column="11">DPDK_EVENTS_PLUGIN<pos:position pos:line="17" pos:column="29"/></name> <literal type="string" pos:line="17" pos:column="30">": Failed to open %s as SHM:%s. Is DPDK KA "<pos:position pos:line="17" pos:column="74"/></literal>
                             <literal type="string" pos:line="18" pos:column="30">"primary application running?"<pos:position pos:line="18" pos:column="60"/></literal></expr></argument>,
          <argument><expr><name pos:line="19" pos:column="11">shm_name<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="21">sstrerror<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">errno<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">errbuf<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="46">sizeof<argument_list pos:line="19" pos:column="52">(<argument><expr><name pos:line="19" pos:column="53">errbuf<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">errno<pos:position pos:line="20" pos:column="17"/></name></expr>;<pos:position pos:line="20" pos:column="18"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name><name pos:line="23" pos:column="7">ec<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">config<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">.<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">keep_alive<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">.<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">fd<pos:position pos:line="23" pos:column="31"/></name></name> <operator pos:line="23" pos:column="32">!=<pos:position pos:line="23" pos:column="34"/></operator> <operator pos:line="23" pos:column="35">-<pos:position pos:line="23" pos:column="36"/></operator><literal type="number" pos:line="23" pos:column="36">1<pos:position pos:line="23" pos:column="37"/></literal></expr>)<pos:position pos:line="23" pos:column="38"/></condition><then pos:line="23" pos:column="38"> <block pos:line="23" pos:column="39">{
    <decl_stmt><decl><type><name><name pos:line="24" pos:column="5">struct<pos:position pos:line="24" pos:column="11"/></name> <name pos:line="24" pos:column="12">stat<pos:position pos:line="24" pos:column="16"/></name></name></type> <name pos:line="24" pos:column="17">stat_old<pos:position pos:line="24" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="24" pos:column="27">stat_new<pos:position pos:line="24" pos:column="35"/></name></decl>;<pos:position pos:line="24" pos:column="36"/></decl_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name pos:line="26" pos:column="9">fstat<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><name><name pos:line="26" pos:column="15">ec<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">config<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">.<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="26">keep_alive<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">.<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="37">fd<pos:position pos:line="26" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="41">&amp;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="42">stat_old<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call> <operator pos:line="26" pos:column="52">||<pos:position pos:line="26" pos:column="54"/></operator> <call><name pos:line="26" pos:column="55">fstat<pos:position pos:line="26" pos:column="60"/></name><argument_list pos:line="26" pos:column="60">(<argument><expr><name pos:line="26" pos:column="61">fd<pos:position pos:line="26" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="65">&amp;<pos:position pos:line="26" pos:column="70"/></operator><name pos:line="26" pos:column="66">stat_new<pos:position pos:line="26" pos:column="74"/></name></expr></argument>)<pos:position pos:line="26" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="76"/></condition><then pos:line="26" pos:column="76"> <block pos:line="26" pos:column="77">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">ERROR<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">DPDK_EVENTS_PLUGIN<pos:position pos:line="27" pos:column="31"/></name> <literal type="string" pos:line="27" pos:column="32">": failed to get information about a file"<pos:position pos:line="27" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="76"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">close<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><name pos:line="28" pos:column="13">fd<pos:position pos:line="28" pos:column="15"/></name></expr></argument>)<pos:position pos:line="28" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="17"/></expr_stmt>
      <return pos:line="29" pos:column="7">return <expr><operator pos:line="29" pos:column="14">-<pos:position pos:line="29" pos:column="15"/></operator><literal type="number" pos:line="29" pos:column="15">1<pos:position pos:line="29" pos:column="16"/></literal></expr>;<pos:position pos:line="29" pos:column="17"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="32" pos:column="5">/* Check if inode number has changed. If yes, then create a new mapping */</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">stat_old<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">.<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">st_ino<pos:position pos:line="33" pos:column="24"/></name></name> <operator pos:line="33" pos:column="25">==<pos:position pos:line="33" pos:column="27"/></operator> <name><name pos:line="33" pos:column="28">stat_new<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">.<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="37">st_ino<pos:position pos:line="33" pos:column="43"/></name></name></expr>)<pos:position pos:line="33" pos:column="44"/></condition><then pos:line="33" pos:column="44"> <block pos:line="33" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">close<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">fd<pos:position pos:line="34" pos:column="15"/></name></expr></argument>)<pos:position pos:line="34" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="17"/></expr_stmt>
      <return pos:line="35" pos:column="7">return <expr><literal type="number" pos:line="35" pos:column="14">0<pos:position pos:line="35" pos:column="15"/></literal></expr>;<pos:position pos:line="35" pos:column="16"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><call><name pos:line="38" pos:column="9">munmap<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><name><name pos:line="38" pos:column="16">ec<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">-&gt;<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="20">config<pos:position pos:line="38" pos:column="26"/></name><operator pos:line="38" pos:column="26">.<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="27">keep_alive<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">.<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="38">shm<pos:position pos:line="38" pos:column="41"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="43">sizeof<argument_list pos:line="38" pos:column="49">(<argument><expr><name pos:line="38" pos:column="50">dpdk_keepalive_shm_t<pos:position pos:line="38" pos:column="70"/></name></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="72"/></argument_list></call> <operator pos:line="38" pos:column="73">!=<pos:position pos:line="38" pos:column="75"/></operator> <literal type="number" pos:line="38" pos:column="76">0<pos:position pos:line="38" pos:column="77"/></literal></expr>)<pos:position pos:line="38" pos:column="78"/></condition><then pos:line="38" pos:column="78"> <block pos:line="38" pos:column="79">{
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">ERROR<pos:position pos:line="39" pos:column="12"/></name><argument_list pos:line="39" pos:column="12">(<argument><expr><name pos:line="39" pos:column="13">DPDK_EVENTS_PLUGIN<pos:position pos:line="39" pos:column="31"/></name> <literal type="string" pos:line="39" pos:column="32">": munmap KA monitor failed"<pos:position pos:line="39" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">close<pos:position pos:line="40" pos:column="12"/></name><argument_list pos:line="40" pos:column="12">(<argument><expr><name pos:line="40" pos:column="13">fd<pos:position pos:line="40" pos:column="15"/></name></expr></argument>)<pos:position pos:line="40" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="17"/></expr_stmt>
      <return pos:line="41" pos:column="7">return <expr><operator pos:line="41" pos:column="14">-<pos:position pos:line="41" pos:column="15"/></operator><literal type="number" pos:line="41" pos:column="15">1<pos:position pos:line="41" pos:column="16"/></literal></expr>;<pos:position pos:line="41" pos:column="17"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">close<pos:position pos:line="44" pos:column="10"/></name><argument_list pos:line="44" pos:column="10">(<argument><expr><name><name pos:line="44" pos:column="11">ec<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">-&gt;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="15">config<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">.<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">keep_alive<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">.<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="33">fd<pos:position pos:line="44" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">ec<pos:position pos:line="45" pos:column="7"/></name><operator pos:line="45" pos:column="7">-&gt;<pos:position pos:line="45" pos:column="12"/></operator><name pos:line="45" pos:column="9">config<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">.<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="16">keep_alive<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">.<pos:position pos:line="45" pos:column="27"/></operator><name pos:line="45" pos:column="27">fd<pos:position pos:line="45" pos:column="29"/></name></name> <operator pos:line="45" pos:column="30">=<pos:position pos:line="45" pos:column="31"/></operator> <operator pos:line="45" pos:column="32">-<pos:position pos:line="45" pos:column="33"/></operator><literal type="number" pos:line="45" pos:column="33">1<pos:position pos:line="45" pos:column="34"/></literal></expr>;<pos:position pos:line="45" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="48" pos:column="3">ec<pos:position pos:line="48" pos:column="5"/></name><operator pos:line="48" pos:column="5">-&gt;<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="7">config<pos:position pos:line="48" pos:column="13"/></name><operator pos:line="48" pos:column="13">.<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">keep_alive<pos:position pos:line="48" pos:column="24"/></name><operator pos:line="48" pos:column="24">.<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="25">shm<pos:position pos:line="48" pos:column="28"/></name></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <operator pos:line="48" pos:column="31">(<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="32">dpdk_keepalive_shm_t<pos:position pos:line="48" pos:column="52"/></name> <operator pos:line="48" pos:column="53">*<pos:position pos:line="48" pos:column="54"/></operator><operator pos:line="48" pos:column="54">)<pos:position pos:line="48" pos:column="55"/></operator><call><name pos:line="48" pos:column="55">mmap<pos:position pos:line="48" pos:column="59"/></name><argument_list pos:line="48" pos:column="59">(
      <argument><expr><literal type="number" pos:line="49" pos:column="7">0<pos:position pos:line="49" pos:column="8"/></literal></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="10">sizeof<argument_list pos:line="49" pos:column="16">(<argument><expr><operator pos:line="49" pos:column="17">*<pos:position pos:line="49" pos:column="18"/></operator><operator pos:line="49" pos:column="18">(<pos:position pos:line="49" pos:column="19"/></operator><name><name pos:line="49" pos:column="19">ec<pos:position pos:line="49" pos:column="21"/></name><operator pos:line="49" pos:column="21">-&gt;<pos:position pos:line="49" pos:column="26"/></operator><name pos:line="49" pos:column="23">config<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">.<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="30">keep_alive<pos:position pos:line="49" pos:column="40"/></name><operator pos:line="49" pos:column="40">.<pos:position pos:line="49" pos:column="41"/></operator><name pos:line="49" pos:column="41">shm<pos:position pos:line="49" pos:column="44"/></name></name><operator pos:line="49" pos:column="44">)<pos:position pos:line="49" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="49" pos:column="48">PROT_READ<pos:position pos:line="49" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="59">MAP_SHARED<pos:position pos:line="49" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="71">fd<pos:position pos:line="49" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="75">0<pos:position pos:line="49" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="78"/></expr_stmt>
  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name><name pos:line="50" pos:column="7">ec<pos:position pos:line="50" pos:column="9"/></name><operator pos:line="50" pos:column="9">-&gt;<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="11">config<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">.<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">keep_alive<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">.<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="29">shm<pos:position pos:line="50" pos:column="32"/></name></name> <operator pos:line="50" pos:column="33">==<pos:position pos:line="50" pos:column="35"/></operator> <name pos:line="50" pos:column="36">MAP_FAILED<pos:position pos:line="50" pos:column="46"/></name></expr>)<pos:position pos:line="50" pos:column="47"/></condition><then pos:line="50" pos:column="47"> <block pos:line="50" pos:column="48">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">ERROR<pos:position pos:line="51" pos:column="10"/></name><argument_list pos:line="51" pos:column="10">(<argument><expr><name pos:line="51" pos:column="11">DPDK_EVENTS_PLUGIN<pos:position pos:line="51" pos:column="29"/></name> <literal type="string" pos:line="51" pos:column="30">": Failed to mmap KA SHM:%s"<pos:position pos:line="51" pos:column="58"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="52" pos:column="11">sstrerror<pos:position pos:line="52" pos:column="20"/></name><argument_list pos:line="52" pos:column="20">(<argument><expr><name pos:line="52" pos:column="21">errno<pos:position pos:line="52" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="28">errbuf<pos:position pos:line="52" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="36">sizeof<argument_list pos:line="52" pos:column="42">(<argument><expr><name pos:line="52" pos:column="43">errbuf<pos:position pos:line="52" pos:column="49"/></name></expr></argument>)<pos:position pos:line="52" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">close<pos:position pos:line="53" pos:column="10"/></name><argument_list pos:line="53" pos:column="10">(<argument><expr><name pos:line="53" pos:column="11">fd<pos:position pos:line="53" pos:column="13"/></name></expr></argument>)<pos:position pos:line="53" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="15"/></expr_stmt>
    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">errno<pos:position pos:line="54" pos:column="17"/></name></expr>;<pos:position pos:line="54" pos:column="18"/></return>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="56" pos:column="3">ec<pos:position pos:line="56" pos:column="5"/></name><operator pos:line="56" pos:column="5">-&gt;<pos:position pos:line="56" pos:column="10"/></operator><name pos:line="56" pos:column="7">config<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">.<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">keep_alive<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">.<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="25">fd<pos:position pos:line="56" pos:column="27"/></name></name> <operator pos:line="56" pos:column="28">=<pos:position pos:line="56" pos:column="29"/></operator> <name pos:line="56" pos:column="30">fd<pos:position pos:line="56" pos:column="32"/></name></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt>

  <return pos:line="58" pos:column="3">return <expr><literal type="number" pos:line="58" pos:column="10">0<pos:position pos:line="58" pos:column="11"/></literal></expr>;<pos:position pos:line="58" pos:column="12"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

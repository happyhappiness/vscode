<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_868_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">Notification_setstring<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">PyObject<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">self<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">PyObject<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">value<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">void<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">data<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list> <block pos:line="1" pos:column="80">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">old<pos:position pos:line="2" pos:column="12"/></name></decl>;<pos:position pos:line="2" pos:column="13"/></decl_stmt>
  <expr_stmt><expr><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <operator pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></operator><operator pos:line="3" pos:column="15">new<pos:position pos:line="3" pos:column="18"/></operator></expr>;<pos:position pos:line="3" pos:column="19"/></expr_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">value<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">==<pos:position pos:line="5" pos:column="15"/></operator> <name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21"> <block pos:line="5" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">PyErr_SetString<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">PyExc_TypeError<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="38">"Cannot delete this attribute"<pos:position pos:line="6" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="70"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">-<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal></expr>;<pos:position pos:line="7" pos:column="15"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">Py_INCREF<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">value<pos:position pos:line="9" pos:column="18"/></name></expr></argument>)<pos:position pos:line="9" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="10" pos:column="3">new<pos:position pos:line="10" pos:column="6"/></operator> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">cpy_unicode_or_bytes_to_string<pos:position pos:line="10" pos:column="39"/></name><argument_list pos:line="10" pos:column="39">(<argument><expr><operator pos:line="10" pos:column="40">&amp;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="41">value<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">new<pos:position pos:line="11" pos:column="10"/></operator> <operator pos:line="11" pos:column="11">==<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">NULL<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19"> <block pos:line="11" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">Py_DECREF<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">value<pos:position pos:line="12" pos:column="20"/></name></expr></argument>)<pos:position pos:line="12" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="15" pos:column="3">old<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">char<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></operator><operator pos:line="15" pos:column="17">)<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">self<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">)<pos:position pos:line="15" pos:column="23"/></operator> <operator pos:line="15" pos:column="24">+<pos:position pos:line="15" pos:column="25"/></operator> <operator pos:line="15" pos:column="26">(<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">intptr_t<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">)<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">data<pos:position pos:line="15" pos:column="40"/></name></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">sstrncpy<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">old<pos:position pos:line="16" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="17">new<pos:position pos:line="16" pos:column="20"/></operator></expr></argument>, <argument><expr><name pos:line="16" pos:column="22">NOTIF_MAX_MSG_LEN<pos:position pos:line="16" pos:column="39"/></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">Py_DECREF<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">value<pos:position pos:line="17" pos:column="18"/></name></expr></argument>)<pos:position pos:line="17" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
  <return pos:line="18" pos:column="3">return <expr><literal type="number" pos:line="18" pos:column="10">0<pos:position pos:line="18" pos:column="11"/></literal></expr>;<pos:position pos:line="18" pos:column="12"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

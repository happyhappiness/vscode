<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2357_collectd-5.6.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">uc_get_size<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list> <block pos:line="1" pos:column="26">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">size_t<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">size_arrays<pos:position pos:line="2" pos:column="21"/></name> <init pos:line="2" pos:column="22">= <expr><literal type="number" pos:line="2" pos:column="24">0<pos:position pos:line="2" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="26"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="4" pos:column="3">pthread_mutex_lock<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><operator pos:line="4" pos:column="22">&amp;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="23">cache_lock<pos:position pos:line="4" pos:column="33"/></name></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="5" pos:column="3">size_arrays<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">=<pos:position pos:line="5" pos:column="16"/></operator> <operator pos:line="5" pos:column="17">(<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">size_t<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">)<pos:position pos:line="5" pos:column="25"/></operator><call><name pos:line="5" pos:column="25">c_avl_size<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">(<argument><expr><name pos:line="5" pos:column="36">cache_tree<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">pthread_mutex_unlock<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><operator pos:line="6" pos:column="24">&amp;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="25">cache_lock<pos:position pos:line="6" pos:column="35"/></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt>

  <return pos:line="8" pos:column="3">return <expr><operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">size_arrays<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">)<pos:position pos:line="8" pos:column="23"/></operator></expr>;<pos:position pos:line="8" pos:column="24"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

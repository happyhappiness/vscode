<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_97_collectd-4.8.0.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">lt_user_data<pos:position pos:line="1" pos:column="13"/></name> <modifier pos:line="1" pos:column="14">*<pos:position pos:line="1" pos:column="15"/></modifier></type>
<name pos:line="2" pos:column="1">lt_dlloader_data<pos:position pos:line="2" pos:column="17"/></name> <argument_list pos:line="2" pos:column="18">(<argument><expr><name pos:line="2" pos:column="19">place<pos:position pos:line="2" pos:column="24"/></name></expr></argument>)<pos:position pos:line="2" pos:column="25"/></argument_list>
     <name pos:line="3" pos:column="6">lt_dlloader<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier><name pos:line="3" pos:column="19">place<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">lt_user_data<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">data<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">place<pos:position pos:line="7" pos:column="12"/></name></expr>)<pos:position pos:line="7" pos:column="13"/></condition><then pos:line="7" pos:column="13">
    <block pos:line="8" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="9" pos:column="7">LT_DLMUTEX_LOCK<pos:position pos:line="9" pos:column="22"/></name> <argument_list pos:line="9" pos:column="23">()<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name pos:line="10" pos:column="7">data<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <ternary><condition><expr><name pos:line="10" pos:column="14">place<pos:position pos:line="10" pos:column="19"/></name></expr> ?<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21"> <expr><operator pos:line="10" pos:column="22">&amp;<pos:position pos:line="10" pos:column="27"/></operator><operator pos:line="10" pos:column="23">(<pos:position pos:line="10" pos:column="24"/></operator><name><name pos:line="10" pos:column="24">place<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">dlloader_data<pos:position pos:line="10" pos:column="44"/></name></name><operator pos:line="10" pos:column="44">)<pos:position pos:line="10" pos:column="45"/></operator></expr> <pos:position pos:line="10" pos:column="46"/></then><else pos:line="10" pos:column="46">: <expr><literal type="number" pos:line="10" pos:column="48">0<pos:position pos:line="10" pos:column="49"/></literal></expr></else></ternary></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">LT_DLMUTEX_UNLOCK<pos:position pos:line="11" pos:column="24"/></name> <argument_list pos:line="11" pos:column="25">()<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then>
  <else pos:line="13" pos:column="3">else
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">LT_DLMUTEX_SETERROR<pos:position pos:line="15" pos:column="26"/></name> <argument_list pos:line="15" pos:column="27">(<argument><expr><call><name pos:line="15" pos:column="28">LT_DLSTRERROR<pos:position pos:line="15" pos:column="41"/></name> <argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">INVALID_LOADER<pos:position pos:line="15" pos:column="57"/></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></else></if>

  <return pos:line="18" pos:column="3">return <expr><name pos:line="18" pos:column="10">data<pos:position pos:line="18" pos:column="14"/></name></expr>;<pos:position pos:line="18" pos:column="15"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></unit>

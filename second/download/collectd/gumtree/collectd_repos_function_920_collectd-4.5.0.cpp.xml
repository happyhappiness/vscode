<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_920_collectd-4.5.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_flush<pos:position pos:line="1" pos:column="17"/></name> <parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">plugin<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">timeout<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">identifier<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <function_decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> (<modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier><name pos:line="3" pos:column="9">callback<pos:position pos:line="3" pos:column="17"/></name>) <parameter_list pos:line="3" pos:column="19">(<parameter><decl><type><name pos:line="3" pos:column="20">int<pos:position pos:line="3" pos:column="23"/></name></type> <name pos:line="3" pos:column="24">timeout<pos:position pos:line="3" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="33">const<pos:position pos:line="3" pos:column="38"/></specifier> <name pos:line="3" pos:column="39">char<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">identifier<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list>;<pos:position pos:line="3" pos:column="57"/></function_decl>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">llentry_t<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">le<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">list_flush<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">==<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr>)<pos:position pos:line="6" pos:column="26"/></condition><then pos:line="6" pos:column="26">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">0<pos:position pos:line="7" pos:column="14"/></literal><operator pos:line="7" pos:column="14">)<pos:position pos:line="7" pos:column="15"/></operator></expr>;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="9" pos:column="3">le<pos:position pos:line="9" pos:column="5"/></name> <operator pos:line="9" pos:column="6">=<pos:position pos:line="9" pos:column="7"/></operator> <call><name pos:line="9" pos:column="8">llist_head<pos:position pos:line="9" pos:column="18"/></name> <argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">list_flush<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
  <while pos:line="10" pos:column="3">while <condition pos:line="10" pos:column="9">(<expr><name pos:line="10" pos:column="10">le<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">!=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition>
  <block pos:line="11" pos:column="3">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">plugin<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">!=<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">NULL<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">)<pos:position pos:line="12" pos:column="25"/></operator>
        <operator pos:line="13" pos:column="9">&amp;&amp;<pos:position pos:line="13" pos:column="19"/></operator> <operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><call><name pos:line="13" pos:column="13">strcmp<pos:position pos:line="13" pos:column="19"/></name> <argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">plugin<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="29">le<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">key<pos:position pos:line="13" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call> <operator pos:line="13" pos:column="38">!=<pos:position pos:line="13" pos:column="40"/></operator> <literal type="number" pos:line="13" pos:column="41">0<pos:position pos:line="13" pos:column="42"/></literal><operator pos:line="13" pos:column="42">)<pos:position pos:line="13" pos:column="43"/></operator></expr>)<pos:position pos:line="13" pos:column="44"/></condition><then pos:line="13" pos:column="44">
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><name pos:line="15" pos:column="7">le<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <name><name pos:line="15" pos:column="12">le<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">next<pos:position pos:line="15" pos:column="20"/></name></name></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
      <continue pos:line="16" pos:column="7">continue;<pos:position pos:line="16" pos:column="16"/></continue>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="19" pos:column="5">callback<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><call><call><name pos:line="19" pos:column="17">int<pos:position pos:line="19" pos:column="20"/></name> <argument_list pos:line="19" pos:column="21">(<argument><expr><operator pos:line="19" pos:column="22">*<pos:position pos:line="19" pos:column="23"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="24"/></argument_list></call> <argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">int<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><specifier pos:line="19" pos:column="31">const<pos:position pos:line="19" pos:column="36"/></specifier> <name pos:line="19" pos:column="37">char<pos:position pos:line="19" pos:column="41"/></name> <operator pos:line="19" pos:column="42">*<pos:position pos:line="19" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call><operator pos:line="19" pos:column="44">)<pos:position pos:line="19" pos:column="45"/></operator> <name><name pos:line="19" pos:column="46">le<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">-&gt;<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="50">value<pos:position pos:line="19" pos:column="55"/></name></name></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call pos:line="20" pos:column="5">(<modifier pos:line="20" pos:column="6">*<pos:position pos:line="20" pos:column="7"/></modifier><name pos:line="20" pos:column="7">callback<pos:position pos:line="20" pos:column="15"/></name>) <argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">timeout<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="27">identifier<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">le<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <name><name pos:line="22" pos:column="10">le<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">next<pos:position pos:line="22" pos:column="18"/></name></name></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></while>
  <return pos:line="24" pos:column="3">return <expr><operator pos:line="24" pos:column="10">(<pos:position pos:line="24" pos:column="11"/></operator><literal type="number" pos:line="24" pos:column="11">0<pos:position pos:line="24" pos:column="12"/></literal><operator pos:line="24" pos:column="12">)<pos:position pos:line="24" pos:column="13"/></operator></expr>;<pos:position pos:line="24" pos:column="14"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_54_collectd-4.3.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">lt_dlexit<pos:position pos:line="2" pos:column="10"/></name> <parameter_list pos:line="2" pos:column="11">()<pos:position pos:line="2" pos:column="13"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* shut down libltdl */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">lt_dlloader<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">loader<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type>	       <name pos:line="6" pos:column="16">errors<pos:position pos:line="6" pos:column="22"/></name>   <init pos:line="6" pos:column="25">= <expr><literal type="number" pos:line="6" pos:column="27">0<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">LT_DLMUTEX_LOCK<pos:position pos:line="8" pos:column="18"/></name> <argument_list pos:line="8" pos:column="19">()<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">loader<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <name pos:line="9" pos:column="12">loaders<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">initialized<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20">
    <block pos:line="12" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">LT_DLMUTEX_SETERROR<pos:position pos:line="13" pos:column="26"/></name> <argument_list pos:line="13" pos:column="27">(<argument><expr><call><name pos:line="13" pos:column="28">LT_DLSTRERROR<pos:position pos:line="13" pos:column="41"/></name> <argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">SHUTDOWN<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="14" pos:column="7">++<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">errors<pos:position pos:line="14" pos:column="15"/></name></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
      <goto pos:line="15" pos:column="7">goto <name pos:line="15" pos:column="12">done<pos:position pos:line="15" pos:column="16"/></name>;<pos:position pos:line="15" pos:column="17"/></goto>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="18" pos:column="3">/* shut down only at last call. */</comment>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">--<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">initialized<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">==<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>)<pos:position pos:line="19" pos:column="26"/></condition><then pos:line="19" pos:column="26">
    <block pos:line="20" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="21" pos:column="7">int<pos:position pos:line="21" pos:column="10"/></name></type>	<name pos:line="21" pos:column="17">level<pos:position pos:line="21" pos:column="22"/></name></decl>;<pos:position pos:line="21" pos:column="23"/></decl_stmt>

      <while pos:line="23" pos:column="7">while <condition pos:line="23" pos:column="13">(<expr><name pos:line="23" pos:column="14">handles<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">&amp;&amp;<pos:position pos:line="23" pos:column="32"/></operator> <call><name pos:line="23" pos:column="25">LT_DLIS_RESIDENT<pos:position pos:line="23" pos:column="41"/></name> <argument_list pos:line="23" pos:column="42">(<argument><expr><name pos:line="23" pos:column="43">handles<pos:position pos:line="23" pos:column="50"/></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="52"/></condition>
	<block pos:line="24" pos:column="9">{
	  <expr_stmt><expr><name pos:line="25" pos:column="11">handles<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <name><name pos:line="25" pos:column="21">handles<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">next<pos:position pos:line="25" pos:column="34"/></name></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></while>

      <comment type="block" pos:line="28" pos:column="7">/* close all modules */</comment>
      <for pos:line="29" pos:column="7">for <control pos:line="29" pos:column="11">(<init><expr><name pos:line="29" pos:column="12">level<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <literal type="number" pos:line="29" pos:column="20">1<pos:position pos:line="29" pos:column="21"/></literal></expr>;<pos:position pos:line="29" pos:column="22"/></init> <condition><expr><name pos:line="29" pos:column="23">handles<pos:position pos:line="29" pos:column="30"/></name></expr>;<pos:position pos:line="29" pos:column="31"/></condition> <incr><expr><operator pos:line="29" pos:column="32">++<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="34">level<pos:position pos:line="29" pos:column="39"/></name></expr></incr>)<pos:position pos:line="29" pos:column="40"/></control>
	<block pos:line="30" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="31" pos:column="11">lt_dlhandle<pos:position pos:line="31" pos:column="22"/></name></type> <name pos:line="31" pos:column="23">cur<pos:position pos:line="31" pos:column="26"/></name> <init pos:line="31" pos:column="27">= <expr><name pos:line="31" pos:column="29">handles<pos:position pos:line="31" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="37"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="32" pos:column="11">int<pos:position pos:line="32" pos:column="14"/></name></type> <name pos:line="32" pos:column="15">saw_nonresident<pos:position pos:line="32" pos:column="30"/></name> <init pos:line="32" pos:column="31">= <expr><literal type="number" pos:line="32" pos:column="33">0<pos:position pos:line="32" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="35"/></decl_stmt>

	  <while pos:line="34" pos:column="11">while <condition pos:line="34" pos:column="17">(<expr><name pos:line="34" pos:column="18">cur<pos:position pos:line="34" pos:column="21"/></name></expr>)<pos:position pos:line="34" pos:column="22"/></condition>
	    <block pos:line="35" pos:column="13">{
	      <decl_stmt><decl><type><name pos:line="36" pos:column="15">lt_dlhandle<pos:position pos:line="36" pos:column="26"/></name></type> <name pos:line="36" pos:column="27">tmp<pos:position pos:line="36" pos:column="30"/></name> <init pos:line="36" pos:column="31">= <expr><name pos:line="36" pos:column="33">cur<pos:position pos:line="36" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="36" pos:column="37"/></decl_stmt>
	      <expr_stmt><expr><name pos:line="37" pos:column="15">cur<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <name><name pos:line="37" pos:column="21">cur<pos:position pos:line="37" pos:column="24"/></name><operator pos:line="37" pos:column="24">-&gt;<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="26">next<pos:position pos:line="37" pos:column="30"/></name></name></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
	      <if pos:line="38" pos:column="15">if <condition pos:line="38" pos:column="18">(<expr><operator pos:line="38" pos:column="19">!<pos:position pos:line="38" pos:column="20"/></operator><call><name pos:line="38" pos:column="20">LT_DLIS_RESIDENT<pos:position pos:line="38" pos:column="36"/></name> <argument_list pos:line="38" pos:column="37">(<argument><expr><name pos:line="38" pos:column="38">tmp<pos:position pos:line="38" pos:column="41"/></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="43"/></condition><then pos:line="38" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="17">saw_nonresident<pos:position pos:line="39" pos:column="32"/></name> <operator pos:line="39" pos:column="33">=<pos:position pos:line="39" pos:column="34"/></operator> <literal type="number" pos:line="39" pos:column="35">1<pos:position pos:line="39" pos:column="36"/></literal></expr>;<pos:position pos:line="39" pos:column="37"/></expr_stmt></block></then></if>
	      <if pos:line="40" pos:column="15">if <condition pos:line="40" pos:column="18">(<expr><operator pos:line="40" pos:column="19">!<pos:position pos:line="40" pos:column="20"/></operator><call><name pos:line="40" pos:column="20">LT_DLIS_RESIDENT<pos:position pos:line="40" pos:column="36"/></name> <argument_list pos:line="40" pos:column="37">(<argument><expr><name pos:line="40" pos:column="38">tmp<pos:position pos:line="40" pos:column="41"/></name></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call> <operator pos:line="40" pos:column="43">&amp;&amp;<pos:position pos:line="40" pos:column="53"/></operator> <name><name pos:line="40" pos:column="46">tmp<pos:position pos:line="40" pos:column="49"/></name><operator pos:line="40" pos:column="49">-&gt;<pos:position pos:line="40" pos:column="54"/></operator><name pos:line="40" pos:column="51">info<pos:position pos:line="40" pos:column="55"/></name><operator pos:line="40" pos:column="55">.<pos:position pos:line="40" pos:column="56"/></operator><name pos:line="40" pos:column="56">ref_count<pos:position pos:line="40" pos:column="65"/></name></name> <operator pos:line="40" pos:column="66">&lt;=<pos:position pos:line="40" pos:column="71"/></operator> <name pos:line="40" pos:column="69">level<pos:position pos:line="40" pos:column="74"/></name></expr>)<pos:position pos:line="40" pos:column="75"/></condition><then pos:line="40" pos:column="75">
		<block pos:line="41" pos:column="17">{
		  <if pos:line="42" pos:column="19">if <condition pos:line="42" pos:column="22">(<expr><call><name pos:line="42" pos:column="23">lt_dlclose<pos:position pos:line="42" pos:column="33"/></name> <argument_list pos:line="42" pos:column="34">(<argument><expr><name pos:line="42" pos:column="35">tmp<pos:position pos:line="42" pos:column="38"/></name></expr></argument>)<pos:position pos:line="42" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="40"/></condition><then pos:line="42" pos:column="40">
		    <block pos:line="43" pos:column="21">{
		      <expr_stmt><expr><operator pos:line="44" pos:column="23">++<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="25">errors<pos:position pos:line="44" pos:column="31"/></name></expr>;<pos:position pos:line="44" pos:column="32"/></expr_stmt>
		    }<pos:position pos:line="45" pos:column="22"/></block></then></if>
		  <comment type="block" pos:line="46" pos:column="19">/* Make sure that the handle pointed to by 'cur' still exists.
		     lt_dlclose recursively closes dependent libraries which removes
		     them from the linked list.  One of these might be the one
		     pointed to by 'cur'.  */</comment>
		  <if pos:line="50" pos:column="19">if <condition pos:line="50" pos:column="22">(<expr><name pos:line="50" pos:column="23">cur<pos:position pos:line="50" pos:column="26"/></name></expr>)<pos:position pos:line="50" pos:column="27"/></condition><then pos:line="50" pos:column="27">
		    <block pos:line="51" pos:column="21">{
		      <for pos:line="52" pos:column="23">for <control pos:line="52" pos:column="27">(<init><expr><name pos:line="52" pos:column="28">tmp<pos:position pos:line="52" pos:column="31"/></name> <operator pos:line="52" pos:column="32">=<pos:position pos:line="52" pos:column="33"/></operator> <name pos:line="52" pos:column="34">handles<pos:position pos:line="52" pos:column="41"/></name></expr>;<pos:position pos:line="52" pos:column="42"/></init> <condition><expr><name pos:line="52" pos:column="43">tmp<pos:position pos:line="52" pos:column="46"/></name></expr>;<pos:position pos:line="52" pos:column="47"/></condition> <incr><expr><name pos:line="52" pos:column="48">tmp<pos:position pos:line="52" pos:column="51"/></name> <operator pos:line="52" pos:column="52">=<pos:position pos:line="52" pos:column="53"/></operator> <name><name pos:line="52" pos:column="54">tmp<pos:position pos:line="52" pos:column="57"/></name><operator pos:line="52" pos:column="57">-&gt;<pos:position pos:line="52" pos:column="62"/></operator><name pos:line="52" pos:column="59">next<pos:position pos:line="52" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="52" pos:column="64"/></control>
			<block type="pseudo"><if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><name pos:line="53" pos:column="29">tmp<pos:position pos:line="53" pos:column="32"/></name> <operator pos:line="53" pos:column="33">==<pos:position pos:line="53" pos:column="35"/></operator> <name pos:line="53" pos:column="36">cur<pos:position pos:line="53" pos:column="39"/></name></expr>)<pos:position pos:line="53" pos:column="40"/></condition><then pos:line="53" pos:column="40">
			  <block type="pseudo"><break pos:line="54" pos:column="27">break;<pos:position pos:line="54" pos:column="33"/></break></block></then></if></block></for>
		      <if pos:line="55" pos:column="23">if <condition pos:line="55" pos:column="26">(<expr><operator pos:line="55" pos:column="27">!<pos:position pos:line="55" pos:column="28"/></operator> <name pos:line="55" pos:column="29">tmp<pos:position pos:line="55" pos:column="32"/></name></expr>)<pos:position pos:line="55" pos:column="33"/></condition><then pos:line="55" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="25">cur<pos:position pos:line="56" pos:column="28"/></name> <operator pos:line="56" pos:column="29">=<pos:position pos:line="56" pos:column="30"/></operator> <name pos:line="56" pos:column="31">handles<pos:position pos:line="56" pos:column="38"/></name></expr>;<pos:position pos:line="56" pos:column="39"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="57" pos:column="22"/></block></then></if>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if>
	    }<pos:position pos:line="59" pos:column="14"/></block></while>
	  <comment type="block" pos:line="60" pos:column="11">/* done if only resident modules are left */</comment>
	  <if pos:line="61" pos:column="11">if <condition pos:line="61" pos:column="14">(<expr><operator pos:line="61" pos:column="15">!<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="16">saw_nonresident<pos:position pos:line="61" pos:column="31"/></name></expr>)<pos:position pos:line="61" pos:column="32"/></condition><then pos:line="61" pos:column="32">
	    <block type="pseudo"><break pos:line="62" pos:column="13">break;<pos:position pos:line="62" pos:column="19"/></break></block></then></if>
	}<pos:position pos:line="63" pos:column="10"/></block></for>

      <comment type="block" pos:line="65" pos:column="7">/* close all loaders */</comment>
      <while pos:line="66" pos:column="7">while <condition pos:line="66" pos:column="13">(<expr><name pos:line="66" pos:column="14">loader<pos:position pos:line="66" pos:column="20"/></name></expr>)<pos:position pos:line="66" pos:column="21"/></condition>
	<block pos:line="67" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="68" pos:column="11">lt_dlloader<pos:position pos:line="68" pos:column="22"/></name> <modifier pos:line="68" pos:column="23">*<pos:position pos:line="68" pos:column="24"/></modifier></type><name pos:line="68" pos:column="24">next<pos:position pos:line="68" pos:column="28"/></name> <init pos:line="68" pos:column="29">= <expr><name><name pos:line="68" pos:column="31">loader<pos:position pos:line="68" pos:column="37"/></name><operator pos:line="68" pos:column="37">-&gt;<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="39">next<pos:position pos:line="68" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="68" pos:column="44"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="69" pos:column="11">lt_user_data<pos:position pos:line="69" pos:column="23"/></name></type> <name pos:line="69" pos:column="24">data<pos:position pos:line="69" pos:column="28"/></name> <init pos:line="69" pos:column="29">= <expr><name><name pos:line="69" pos:column="31">loader<pos:position pos:line="69" pos:column="37"/></name><operator pos:line="69" pos:column="37">-&gt;<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="39">dlloader_data<pos:position pos:line="69" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="69" pos:column="53"/></decl_stmt>
	  <if pos:line="70" pos:column="11">if <condition pos:line="70" pos:column="14">(<expr><name><name pos:line="70" pos:column="15">loader<pos:position pos:line="70" pos:column="21"/></name><operator pos:line="70" pos:column="21">-&gt;<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="23">dlloader_exit<pos:position pos:line="70" pos:column="36"/></name></name> <operator pos:line="70" pos:column="37">&amp;&amp;<pos:position pos:line="70" pos:column="47"/></operator> <call><name><name pos:line="70" pos:column="40">loader<pos:position pos:line="70" pos:column="46"/></name><operator pos:line="70" pos:column="46">-&gt;<pos:position pos:line="70" pos:column="51"/></operator><name pos:line="70" pos:column="48">dlloader_exit<pos:position pos:line="70" pos:column="61"/></name></name> <argument_list pos:line="70" pos:column="62">(<argument><expr><name pos:line="70" pos:column="63">data<pos:position pos:line="70" pos:column="67"/></name></expr></argument>)<pos:position pos:line="70" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="69"/></condition><then pos:line="70" pos:column="69">
	    <block pos:line="71" pos:column="13">{
	      <expr_stmt><expr><operator pos:line="72" pos:column="15">++<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="17">errors<pos:position pos:line="72" pos:column="23"/></name></expr>;<pos:position pos:line="72" pos:column="24"/></expr_stmt>
	    }<pos:position pos:line="73" pos:column="14"/></block></then></if>

	  <expr_stmt><expr><call><name pos:line="75" pos:column="11">LT_DLMEM_REASSIGN<pos:position pos:line="75" pos:column="28"/></name> <argument_list pos:line="75" pos:column="29">(<argument><expr><name pos:line="75" pos:column="30">loader<pos:position pos:line="75" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="38">next<pos:position pos:line="75" pos:column="42"/></name></expr></argument>)<pos:position pos:line="75" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="76" pos:column="10"/></block></while>
      <expr_stmt><expr><name pos:line="77" pos:column="7">loaders<pos:position pos:line="77" pos:column="14"/></name> <operator pos:line="77" pos:column="15">=<pos:position pos:line="77" pos:column="16"/></operator> <literal type="number" pos:line="77" pos:column="17">0<pos:position pos:line="77" pos:column="18"/></literal></expr>;<pos:position pos:line="77" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>

 <label><name pos:line="80" pos:column="2">done<pos:position pos:line="80" pos:column="6"/></name>:<pos:position pos:line="80" pos:column="7"/></label>
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">LT_DLMUTEX_UNLOCK<pos:position pos:line="81" pos:column="20"/></name> <argument_list pos:line="81" pos:column="21">()<pos:position pos:line="81" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="24"/></expr_stmt>
  <return pos:line="82" pos:column="3">return <expr><name pos:line="82" pos:column="10">errors<pos:position pos:line="82" pos:column="16"/></name></expr>;<pos:position pos:line="82" pos:column="17"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1768_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">olsrd_cb_topology<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">lineno<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="42">/* {{{ */</comment>
                             <parameter><decl><type><name pos:line="2" pos:column="30">size_t<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">fields_num<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier><modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">fields<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list> <block pos:line="2" pos:column="64">{
  <comment type="block" pos:line="3" pos:column="3">/* Fields:
   *  0 = Dest. IP
   *  1 = Last hop IP
   *  2 = LQ
   *  3 = NLQ
   *  4 = Cost */</comment>

  <decl_stmt><decl><specifier pos:line="10" pos:column="3">static<pos:position pos:line="10" pos:column="9"/></specifier> <type><name pos:line="10" pos:column="10">double<pos:position pos:line="10" pos:column="16"/></name></type> <name pos:line="10" pos:column="17">lq_sum<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="11" pos:column="3">static<pos:position pos:line="11" pos:column="9"/></specifier> <type><name pos:line="11" pos:column="10">uint32_t<pos:position pos:line="11" pos:column="18"/></name></type> <name pos:line="11" pos:column="19">lq_num<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>

  <decl_stmt><decl><specifier pos:line="13" pos:column="3">static<pos:position pos:line="13" pos:column="9"/></specifier> <type><name pos:line="13" pos:column="10">uint32_t<pos:position pos:line="13" pos:column="18"/></name></type> <name pos:line="13" pos:column="19">links_num<pos:position pos:line="13" pos:column="28"/></name></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="15" pos:column="3">double<pos:position pos:line="15" pos:column="9"/></name></type> <name pos:line="15" pos:column="10">lq<pos:position pos:line="15" pos:column="12"/></name></decl>;<pos:position pos:line="15" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name> <modifier pos:line="16" pos:column="8">*<pos:position pos:line="16" pos:column="9"/></modifier></type><name pos:line="16" pos:column="9">endptr<pos:position pos:line="16" pos:column="15"/></name></decl>;<pos:position pos:line="16" pos:column="16"/></decl_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">config_want_topology<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">==<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">OLSRD_WANT_NOT<pos:position pos:line="18" pos:column="45"/></name></expr>)<pos:position pos:line="18" pos:column="46"/></condition><then pos:line="18" pos:column="46">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><literal type="number" pos:line="19" pos:column="13">0<pos:position pos:line="19" pos:column="14"/></literal><operator pos:line="19" pos:column="14">)<pos:position pos:line="19" pos:column="15"/></operator></expr>;<pos:position pos:line="19" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="21" pos:column="3">/* Special handling of the first line */</comment>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">lineno<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">&lt;=<pos:position pos:line="22" pos:column="19"/></operator> <literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19"> <block pos:line="22" pos:column="20">{
    <expr_stmt><expr><name pos:line="23" pos:column="5">lq_sum<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <literal type="number" pos:line="23" pos:column="14">0.0<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">lq_num<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">links_num<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <literal type="number" pos:line="25" pos:column="17">0<pos:position pos:line="25" pos:column="18"/></literal></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>

    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><literal type="number" pos:line="27" pos:column="13">0<pos:position pos:line="27" pos:column="14"/></literal><operator pos:line="27" pos:column="14">)<pos:position pos:line="27" pos:column="15"/></operator></expr>;<pos:position pos:line="27" pos:column="16"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/* Special handling after the last line */</comment>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">fields_num<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">==<pos:position pos:line="31" pos:column="20"/></operator> <literal type="number" pos:line="31" pos:column="21">0<pos:position pos:line="31" pos:column="22"/></literal></expr>)<pos:position pos:line="31" pos:column="23"/></condition><then pos:line="31" pos:column="23"> <block pos:line="31" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">DEBUG<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><literal type="string" pos:line="32" pos:column="11">"olsrd plugin: topology: Number of links: %"<pos:position pos:line="32" pos:column="55"/></literal> <name pos:line="32" pos:column="56">PRIu32<pos:position pos:line="32" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="64">links_num<pos:position pos:line="32" pos:column="73"/></name></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">olsrd_submit<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<comment type="block" pos:line="33" pos:column="18">/* p.-inst = */</comment> <argument><expr><literal type="string" pos:line="33" pos:column="34">"topology"<pos:position pos:line="33" pos:column="44"/></literal></expr></argument>, <comment type="block" pos:line="33" pos:column="46">/* type = */</comment> <argument><expr><literal type="string" pos:line="33" pos:column="59">"links"<pos:position pos:line="33" pos:column="66"/></literal></expr></argument>,
                 <comment type="block" pos:line="34" pos:column="18">/* t.-inst = */</comment> <argument><expr><name pos:line="34" pos:column="34">NULL<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="40">(<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="41">gauge_t<pos:position pos:line="34" pos:column="48"/></name><operator pos:line="34" pos:column="48">)<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="49">links_num<pos:position pos:line="34" pos:column="58"/></name></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><name pos:line="36" pos:column="5">lq<pos:position pos:line="36" pos:column="7"/></name> <operator pos:line="36" pos:column="8">=<pos:position pos:line="36" pos:column="9"/></operator> <name pos:line="36" pos:column="10">NAN<pos:position pos:line="36" pos:column="13"/></name></expr>;<pos:position pos:line="36" pos:column="14"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">lq_num<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">&gt;<pos:position pos:line="37" pos:column="20"/></operator> <literal type="number" pos:line="37" pos:column="18">0<pos:position pos:line="37" pos:column="19"/></literal></expr>)<pos:position pos:line="37" pos:column="20"/></condition><then pos:line="37" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="7">lq<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <name pos:line="38" pos:column="12">lq_sum<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">/<pos:position pos:line="38" pos:column="20"/></operator> <operator pos:line="38" pos:column="21">(<pos:position pos:line="38" pos:column="22"/></operator><operator pos:line="38" pos:column="22">(<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="23">double<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">)<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="30">lq_sum<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">)<pos:position pos:line="38" pos:column="37"/></operator></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">DEBUG<pos:position pos:line="39" pos:column="10"/></name><argument_list pos:line="39" pos:column="10">(<argument><expr><literal type="string" pos:line="39" pos:column="11">"olsrd plugin: topology: Average link quality: %g"<pos:position pos:line="39" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="63">lq<pos:position pos:line="39" pos:column="65"/></name></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">olsrd_submit<pos:position pos:line="40" pos:column="17"/></name><argument_list pos:line="40" pos:column="17">(<comment type="block" pos:line="40" pos:column="18">/* p.-inst = */</comment> <argument><expr><literal type="string" pos:line="40" pos:column="34">"topology"<pos:position pos:line="40" pos:column="44"/></literal></expr></argument>, <comment type="block" pos:line="40" pos:column="46">/* type = */</comment> <argument><expr><literal type="string" pos:line="40" pos:column="59">"signal_quality"<pos:position pos:line="40" pos:column="75"/></literal></expr></argument>,
                 <comment type="block" pos:line="41" pos:column="18">/* t.-inst = */</comment> <argument><expr><literal type="string" pos:line="41" pos:column="34">"average"<pos:position pos:line="41" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="45">lq<pos:position pos:line="41" pos:column="47"/></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="49"/></expr_stmt>

    <return pos:line="43" pos:column="5">return <expr><operator pos:line="43" pos:column="12">(<pos:position pos:line="43" pos:column="13"/></operator><literal type="number" pos:line="43" pos:column="13">0<pos:position pos:line="43" pos:column="14"/></literal><operator pos:line="43" pos:column="14">)<pos:position pos:line="43" pos:column="15"/></operator></expr>;<pos:position pos:line="43" pos:column="16"/></return>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">fields_num<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">!=<pos:position pos:line="46" pos:column="20"/></operator> <literal type="number" pos:line="46" pos:column="21">5<pos:position pos:line="46" pos:column="22"/></literal></expr>)<pos:position pos:line="46" pos:column="23"/></condition><then pos:line="46" pos:column="23">
    <block type="pseudo"><return pos:line="47" pos:column="5">return <expr><operator pos:line="47" pos:column="12">(<pos:position pos:line="47" pos:column="13"/></operator><operator pos:line="47" pos:column="13">-<pos:position pos:line="47" pos:column="14"/></operator><literal type="number" pos:line="47" pos:column="14">1<pos:position pos:line="47" pos:column="15"/></literal><operator pos:line="47" pos:column="15">)<pos:position pos:line="47" pos:column="16"/></operator></expr>;<pos:position pos:line="47" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="49" pos:column="3">links_num<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">++<pos:position pos:line="49" pos:column="14"/></operator></expr>;<pos:position pos:line="49" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><name pos:line="51" pos:column="3">errno<pos:position pos:line="51" pos:column="8"/></name> <operator pos:line="51" pos:column="9">=<pos:position pos:line="51" pos:column="10"/></operator> <literal type="number" pos:line="51" pos:column="11">0<pos:position pos:line="51" pos:column="12"/></literal></expr>;<pos:position pos:line="51" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="52" pos:column="3">endptr<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <name pos:line="52" pos:column="12">NULL<pos:position pos:line="52" pos:column="16"/></name></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="53" pos:column="3">lq<pos:position pos:line="53" pos:column="5"/></name> <operator pos:line="53" pos:column="6">=<pos:position pos:line="53" pos:column="7"/></operator> <call><name pos:line="53" pos:column="8">strtod<pos:position pos:line="53" pos:column="14"/></name><argument_list pos:line="53" pos:column="14">(<argument><expr><name><name pos:line="53" pos:column="15">fields<pos:position pos:line="53" pos:column="21"/></name><index pos:line="53" pos:column="21">[<expr><literal type="number" pos:line="53" pos:column="22">2<pos:position pos:line="53" pos:column="23"/></literal></expr>]<pos:position pos:line="53" pos:column="24"/></index></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="26">&amp;<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="27">endptr<pos:position pos:line="53" pos:column="33"/></name></expr></argument>)<pos:position pos:line="53" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><operator pos:line="54" pos:column="7">(<pos:position pos:line="54" pos:column="8"/></operator><name pos:line="54" pos:column="8">errno<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">!=<pos:position pos:line="54" pos:column="16"/></operator> <literal type="number" pos:line="54" pos:column="17">0<pos:position pos:line="54" pos:column="18"/></literal><operator pos:line="54" pos:column="18">)<pos:position pos:line="54" pos:column="19"/></operator> <operator pos:line="54" pos:column="20">||<pos:position pos:line="54" pos:column="22"/></operator> <operator pos:line="54" pos:column="23">(<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="24">endptr<pos:position pos:line="54" pos:column="30"/></name> <operator pos:line="54" pos:column="31">==<pos:position pos:line="54" pos:column="33"/></operator> <name><name pos:line="54" pos:column="34">fields<pos:position pos:line="54" pos:column="40"/></name><index pos:line="54" pos:column="40">[<expr><literal type="number" pos:line="54" pos:column="41">2<pos:position pos:line="54" pos:column="42"/></literal></expr>]<pos:position pos:line="54" pos:column="43"/></index></name><operator pos:line="54" pos:column="43">)<pos:position pos:line="54" pos:column="44"/></operator></expr>)<pos:position pos:line="54" pos:column="45"/></condition><then pos:line="54" pos:column="45"> <block pos:line="54" pos:column="46">{
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">ERROR<pos:position pos:line="55" pos:column="10"/></name><argument_list pos:line="55" pos:column="10">(<argument><expr><literal type="string" pos:line="55" pos:column="11">"olsrd plugin: Unable to parse LQ: %s"<pos:position pos:line="55" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="51">fields<pos:position pos:line="55" pos:column="57"/></name><index pos:line="55" pos:column="57">[<expr><literal type="number" pos:line="55" pos:column="58">2<pos:position pos:line="55" pos:column="59"/></literal></expr>]<pos:position pos:line="55" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="55" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="62"/></expr_stmt>
  }<pos:position pos:line="56" pos:column="4"/></block></then> <else pos:line="56" pos:column="5">else <block pos:line="56" pos:column="10">{
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">!<pos:position pos:line="57" pos:column="10"/></operator><call><name pos:line="57" pos:column="10">isnan<pos:position pos:line="57" pos:column="15"/></name><argument_list pos:line="57" pos:column="15">(<argument><expr><name pos:line="57" pos:column="16">lq<pos:position pos:line="57" pos:column="18"/></name></expr></argument>)<pos:position pos:line="57" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="20"/></condition><then pos:line="57" pos:column="20"> <block pos:line="57" pos:column="21">{
      <expr_stmt><expr><name pos:line="58" pos:column="7">lq_sum<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">+=<pos:position pos:line="58" pos:column="16"/></operator> <name pos:line="58" pos:column="17">lq<pos:position pos:line="58" pos:column="19"/></name></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="59" pos:column="7">lq_num<pos:position pos:line="59" pos:column="13"/></name><operator pos:line="59" pos:column="13">++<pos:position pos:line="59" pos:column="15"/></operator></expr>;<pos:position pos:line="59" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">config_want_topology<pos:position pos:line="62" pos:column="29"/></name> <operator pos:line="62" pos:column="30">==<pos:position pos:line="62" pos:column="32"/></operator> <name pos:line="62" pos:column="33">OLSRD_WANT_DETAIL<pos:position pos:line="62" pos:column="50"/></name></expr>)<pos:position pos:line="62" pos:column="51"/></condition><then pos:line="62" pos:column="51"> <block pos:line="62" pos:column="52">{
      <decl_stmt><decl><type><name pos:line="63" pos:column="7">char<pos:position pos:line="63" pos:column="11"/></name></type> <name><name pos:line="63" pos:column="12">type_instance<pos:position pos:line="63" pos:column="25"/></name><index pos:line="63" pos:column="25">[<expr><name pos:line="63" pos:column="26">DATA_MAX_NAME_LEN<pos:position pos:line="63" pos:column="43"/></name></expr>]<pos:position pos:line="63" pos:column="44"/></index></name> <init pos:line="63" pos:column="45">= <expr><block pos:line="63" pos:column="47">{<expr><literal type="number" pos:line="63" pos:column="48">0<pos:position pos:line="63" pos:column="49"/></literal></expr>}<pos:position pos:line="63" pos:column="50"/></block></expr></init></decl>;<pos:position pos:line="63" pos:column="51"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="65" pos:column="7">ssnprintf<pos:position pos:line="65" pos:column="16"/></name><argument_list pos:line="65" pos:column="16">(<argument><expr><name pos:line="65" pos:column="17">type_instance<pos:position pos:line="65" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="32">sizeof<argument_list pos:line="65" pos:column="38">(<argument><expr><name pos:line="65" pos:column="39">type_instance<pos:position pos:line="65" pos:column="52"/></name></expr></argument>)<pos:position pos:line="65" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="55">"%s-%s-lq"<pos:position pos:line="65" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="67">fields<pos:position pos:line="65" pos:column="73"/></name><index pos:line="65" pos:column="73">[<expr><literal type="number" pos:line="65" pos:column="74">0<pos:position pos:line="65" pos:column="75"/></literal></expr>]<pos:position pos:line="65" pos:column="76"/></index></name></expr></argument>,
                <argument><expr><name><name pos:line="66" pos:column="17">fields<pos:position pos:line="66" pos:column="23"/></name><index pos:line="66" pos:column="23">[<expr><literal type="number" pos:line="66" pos:column="24">1<pos:position pos:line="66" pos:column="25"/></literal></expr>]<pos:position pos:line="66" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="66" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">DEBUG<pos:position pos:line="67" pos:column="12"/></name><argument_list pos:line="67" pos:column="12">(<argument><expr><literal type="string" pos:line="67" pos:column="13">"olsrd plugin: type_instance = %s; lq = %g;"<pos:position pos:line="67" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="59">type_instance<pos:position pos:line="67" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="74">lq<pos:position pos:line="67" pos:column="76"/></name></expr></argument>)<pos:position pos:line="67" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="78"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="68" pos:column="7">olsrd_submit<pos:position pos:line="68" pos:column="19"/></name><argument_list pos:line="68" pos:column="19">(<comment type="block" pos:line="68" pos:column="20">/* p.-inst = */</comment> <argument><expr><literal type="string" pos:line="68" pos:column="36">"topology"<pos:position pos:line="68" pos:column="46"/></literal></expr></argument>, <comment type="block" pos:line="68" pos:column="48">/* type = */</comment> <argument><expr><literal type="string" pos:line="68" pos:column="61">"signal_quality"<pos:position pos:line="68" pos:column="77"/></literal></expr></argument>,
                   <argument><expr><name pos:line="69" pos:column="20">type_instance<pos:position pos:line="69" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="35">lq<pos:position pos:line="69" pos:column="37"/></name></expr></argument>)<pos:position pos:line="69" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>
  }<pos:position pos:line="71" pos:column="4"/></block></else></if>

  <if pos:line="73" pos:column="3">if <condition pos:line="73" pos:column="6">(<expr><name pos:line="73" pos:column="7">config_want_topology<pos:position pos:line="73" pos:column="27"/></name> <operator pos:line="73" pos:column="28">==<pos:position pos:line="73" pos:column="30"/></operator> <name pos:line="73" pos:column="31">OLSRD_WANT_DETAIL<pos:position pos:line="73" pos:column="48"/></name></expr>)<pos:position pos:line="73" pos:column="49"/></condition><then pos:line="73" pos:column="49"> <block pos:line="73" pos:column="50">{
    <decl_stmt><decl><type><name pos:line="74" pos:column="5">double<pos:position pos:line="74" pos:column="11"/></name></type> <name pos:line="74" pos:column="12">nlq<pos:position pos:line="74" pos:column="15"/></name></decl>;<pos:position pos:line="74" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="76" pos:column="5">errno<pos:position pos:line="76" pos:column="10"/></name> <operator pos:line="76" pos:column="11">=<pos:position pos:line="76" pos:column="12"/></operator> <literal type="number" pos:line="76" pos:column="13">0<pos:position pos:line="76" pos:column="14"/></literal></expr>;<pos:position pos:line="76" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="77" pos:column="5">endptr<pos:position pos:line="77" pos:column="11"/></name> <operator pos:line="77" pos:column="12">=<pos:position pos:line="77" pos:column="13"/></operator> <name pos:line="77" pos:column="14">NULL<pos:position pos:line="77" pos:column="18"/></name></expr>;<pos:position pos:line="77" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="78" pos:column="5">nlq<pos:position pos:line="78" pos:column="8"/></name> <operator pos:line="78" pos:column="9">=<pos:position pos:line="78" pos:column="10"/></operator> <call><name pos:line="78" pos:column="11">strtod<pos:position pos:line="78" pos:column="17"/></name><argument_list pos:line="78" pos:column="17">(<argument><expr><name><name pos:line="78" pos:column="18">fields<pos:position pos:line="78" pos:column="24"/></name><index pos:line="78" pos:column="24">[<expr><literal type="number" pos:line="78" pos:column="25">3<pos:position pos:line="78" pos:column="26"/></literal></expr>]<pos:position pos:line="78" pos:column="27"/></index></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="29">&amp;<pos:position pos:line="78" pos:column="34"/></operator><name pos:line="78" pos:column="30">endptr<pos:position pos:line="78" pos:column="36"/></name></expr></argument>)<pos:position pos:line="78" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="38"/></expr_stmt>
    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><operator pos:line="79" pos:column="9">(<pos:position pos:line="79" pos:column="10"/></operator><name pos:line="79" pos:column="10">errno<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">!=<pos:position pos:line="79" pos:column="18"/></operator> <literal type="number" pos:line="79" pos:column="19">0<pos:position pos:line="79" pos:column="20"/></literal><operator pos:line="79" pos:column="20">)<pos:position pos:line="79" pos:column="21"/></operator> <operator pos:line="79" pos:column="22">||<pos:position pos:line="79" pos:column="24"/></operator> <operator pos:line="79" pos:column="25">(<pos:position pos:line="79" pos:column="26"/></operator><name pos:line="79" pos:column="26">endptr<pos:position pos:line="79" pos:column="32"/></name> <operator pos:line="79" pos:column="33">==<pos:position pos:line="79" pos:column="35"/></operator> <name><name pos:line="79" pos:column="36">fields<pos:position pos:line="79" pos:column="42"/></name><index pos:line="79" pos:column="42">[<expr><literal type="number" pos:line="79" pos:column="43">3<pos:position pos:line="79" pos:column="44"/></literal></expr>]<pos:position pos:line="79" pos:column="45"/></index></name><operator pos:line="79" pos:column="45">)<pos:position pos:line="79" pos:column="46"/></operator></expr>)<pos:position pos:line="79" pos:column="47"/></condition><then pos:line="79" pos:column="47"> <block pos:line="79" pos:column="48">{
      <expr_stmt><expr><call><name pos:line="80" pos:column="7">ERROR<pos:position pos:line="80" pos:column="12"/></name><argument_list pos:line="80" pos:column="12">(<argument><expr><literal type="string" pos:line="80" pos:column="13">"olsrd plugin: Unable to parse NLQ: %s"<pos:position pos:line="80" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="54">fields<pos:position pos:line="80" pos:column="60"/></name><index pos:line="80" pos:column="60">[<expr><literal type="number" pos:line="80" pos:column="61">3<pos:position pos:line="80" pos:column="62"/></literal></expr>]<pos:position pos:line="80" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="80" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></then> <else pos:line="81" pos:column="7">else <block pos:line="81" pos:column="12">{
      <decl_stmt><decl><type><name pos:line="82" pos:column="7">char<pos:position pos:line="82" pos:column="11"/></name></type> <name><name pos:line="82" pos:column="12">type_instance<pos:position pos:line="82" pos:column="25"/></name><index pos:line="82" pos:column="25">[<expr><name pos:line="82" pos:column="26">DATA_MAX_NAME_LEN<pos:position pos:line="82" pos:column="43"/></name></expr>]<pos:position pos:line="82" pos:column="44"/></index></name> <init pos:line="82" pos:column="45">= <expr><block pos:line="82" pos:column="47">{<expr><literal type="number" pos:line="82" pos:column="48">0<pos:position pos:line="82" pos:column="49"/></literal></expr>}<pos:position pos:line="82" pos:column="50"/></block></expr></init></decl>;<pos:position pos:line="82" pos:column="51"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="84" pos:column="7">ssnprintf<pos:position pos:line="84" pos:column="16"/></name><argument_list pos:line="84" pos:column="16">(<argument><expr><name pos:line="84" pos:column="17">type_instance<pos:position pos:line="84" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="32">sizeof<argument_list pos:line="84" pos:column="38">(<argument><expr><name pos:line="84" pos:column="39">type_instance<pos:position pos:line="84" pos:column="52"/></name></expr></argument>)<pos:position pos:line="84" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="55">"%s-%s-nlq"<pos:position pos:line="84" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="68">fields<pos:position pos:line="84" pos:column="74"/></name><index pos:line="84" pos:column="74">[<expr><literal type="number" pos:line="84" pos:column="75">0<pos:position pos:line="84" pos:column="76"/></literal></expr>]<pos:position pos:line="84" pos:column="77"/></index></name></expr></argument>,
                <argument><expr><name><name pos:line="85" pos:column="17">fields<pos:position pos:line="85" pos:column="23"/></name><index pos:line="85" pos:column="23">[<expr><literal type="number" pos:line="85" pos:column="24">1<pos:position pos:line="85" pos:column="25"/></literal></expr>]<pos:position pos:line="85" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="85" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="86" pos:column="7">DEBUG<pos:position pos:line="86" pos:column="12"/></name><argument_list pos:line="86" pos:column="12">(<argument><expr><literal type="string" pos:line="86" pos:column="13">"olsrd plugin: type_instance = %s; nlq = %g;"<pos:position pos:line="86" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="60">type_instance<pos:position pos:line="86" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="75">nlq<pos:position pos:line="86" pos:column="78"/></name></expr></argument>)<pos:position pos:line="86" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="80"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="87" pos:column="7">olsrd_submit<pos:position pos:line="87" pos:column="19"/></name><argument_list pos:line="87" pos:column="19">(<comment type="block" pos:line="87" pos:column="20">/* p.-inst = */</comment> <argument><expr><literal type="string" pos:line="87" pos:column="36">"topology"<pos:position pos:line="87" pos:column="46"/></literal></expr></argument>, <comment type="block" pos:line="87" pos:column="48">/* type = */</comment> <argument><expr><literal type="string" pos:line="87" pos:column="61">"signal_quality"<pos:position pos:line="87" pos:column="77"/></literal></expr></argument>,
                   <argument><expr><name pos:line="88" pos:column="20">type_instance<pos:position pos:line="88" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="35">nlq<pos:position pos:line="88" pos:column="38"/></name></expr></argument>)<pos:position pos:line="88" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="89" pos:column="6"/></block></else></if>
  }<pos:position pos:line="90" pos:column="4"/></block></then></if>

  <return pos:line="92" pos:column="3">return <expr><operator pos:line="92" pos:column="10">(<pos:position pos:line="92" pos:column="11"/></operator><literal type="number" pos:line="92" pos:column="11">0<pos:position pos:line="92" pos:column="12"/></literal><operator pos:line="92" pos:column="12">)<pos:position pos:line="92" pos:column="13"/></operator></expr>;<pos:position pos:line="92" pos:column="14"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

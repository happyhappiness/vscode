<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1704_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wh_flush_nolock<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">cdtime_t<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">timeout<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">wh_callback_t<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">cb<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list> <comment type="block" pos:line="1" pos:column="66">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
        <decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">status<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="5" pos:column="9">DEBUG<pos:position pos:line="5" pos:column="14"/></name> <argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="string" pos:line="5" pos:column="16">"write_http plugin: wh_flush_nolock: timeout = %.3f; "<pos:position pos:line="5" pos:column="70"/></literal>
                        <literal type="string" pos:line="6" pos:column="25">"send_buffer_fill = %zu;"<pos:position pos:line="6" pos:column="50"/></literal></expr></argument>,
                        <argument><expr><call><name pos:line="7" pos:column="25">CDTIME_T_TO_DOUBLE<pos:position pos:line="7" pos:column="43"/></name> <argument_list pos:line="7" pos:column="44">(<argument><expr><name pos:line="7" pos:column="45">timeout<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr></argument>,
                        <argument><expr><name><name pos:line="8" pos:column="25">cb<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">send_buffer_fill<pos:position pos:line="8" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>

        <comment type="block" pos:line="10" pos:column="9">/* timeout == 0  =&gt; flush unconditionally */</comment>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">timeout<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&gt;<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
        <block pos:line="12" pos:column="9">{
                <decl_stmt><decl><type><name pos:line="13" pos:column="17">cdtime_t<pos:position pos:line="13" pos:column="25"/></name></type> <name pos:line="13" pos:column="26">now<pos:position pos:line="13" pos:column="29"/></name></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>

                <expr_stmt><expr><name pos:line="15" pos:column="17">now<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <call><name pos:line="15" pos:column="23">cdtime<pos:position pos:line="15" pos:column="29"/></name> <argument_list pos:line="15" pos:column="30">()<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
                <if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">(<pos:position pos:line="16" pos:column="22"/></operator><name><name pos:line="16" pos:column="22">cb<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">send_buffer_init_time<pos:position pos:line="16" pos:column="47"/></name></name> <operator pos:line="16" pos:column="48">+<pos:position pos:line="16" pos:column="49"/></operator> <name pos:line="16" pos:column="50">timeout<pos:position pos:line="16" pos:column="57"/></name><operator pos:line="16" pos:column="57">)<pos:position pos:line="16" pos:column="58"/></operator> <operator pos:line="16" pos:column="59">&gt;<pos:position pos:line="16" pos:column="63"/></operator> <name pos:line="16" pos:column="61">now<pos:position pos:line="16" pos:column="64"/></name></expr>)<pos:position pos:line="16" pos:column="65"/></condition><then pos:line="16" pos:column="65">
                        <block type="pseudo"><return pos:line="17" pos:column="25">return <expr><operator pos:line="17" pos:column="32">(<pos:position pos:line="17" pos:column="33"/></operator><literal type="number" pos:line="17" pos:column="33">0<pos:position pos:line="17" pos:column="34"/></literal><operator pos:line="17" pos:column="34">)<pos:position pos:line="17" pos:column="35"/></operator></expr>;<pos:position pos:line="17" pos:column="36"/></return></block></then></if>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">cb<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">format<pos:position pos:line="20" pos:column="23"/></name></name> <operator pos:line="20" pos:column="24">==<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">WH_FORMAT_COMMAND<pos:position pos:line="20" pos:column="44"/></name></expr>)<pos:position pos:line="20" pos:column="45"/></condition><then pos:line="20" pos:column="45">
        <block pos:line="21" pos:column="9">{
                <if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">cb<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">send_buffer_fill<pos:position pos:line="22" pos:column="41"/></name></name> <operator pos:line="22" pos:column="42">==<pos:position pos:line="22" pos:column="44"/></operator> <literal type="number" pos:line="22" pos:column="45">0<pos:position pos:line="22" pos:column="46"/></literal></expr>)<pos:position pos:line="22" pos:column="47"/></condition><then pos:line="22" pos:column="47">
                <block pos:line="23" pos:column="17">{
                        <expr_stmt><expr><name><name pos:line="24" pos:column="25">cb<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">send_buffer_init_time<pos:position pos:line="24" pos:column="50"/></name></name> <operator pos:line="24" pos:column="51">=<pos:position pos:line="24" pos:column="52"/></operator> <call><name pos:line="24" pos:column="53">cdtime<pos:position pos:line="24" pos:column="59"/></name> <argument_list pos:line="24" pos:column="60">()<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>
                        <return pos:line="25" pos:column="25">return <expr><operator pos:line="25" pos:column="32">(<pos:position pos:line="25" pos:column="33"/></operator><literal type="number" pos:line="25" pos:column="33">0<pos:position pos:line="25" pos:column="34"/></literal><operator pos:line="25" pos:column="34">)<pos:position pos:line="25" pos:column="35"/></operator></expr>;<pos:position pos:line="25" pos:column="36"/></return>
                }<pos:position pos:line="26" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="28" pos:column="17">status<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <call><name pos:line="28" pos:column="26">wh_post_nolock<pos:position pos:line="28" pos:column="40"/></name> <argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">cb<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="46">cb<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">-&gt;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="50">send_buffer<pos:position pos:line="28" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">wh_reset_buffer<pos:position pos:line="29" pos:column="32"/></name> <argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">cb<pos:position pos:line="29" pos:column="36"/></name></expr></argument>)<pos:position pos:line="29" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then>
        <elseif pos:line="31" pos:column="9">else <if pos:line="31" pos:column="14">if <condition pos:line="31" pos:column="17">(<expr><name><name pos:line="31" pos:column="18">cb<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">format<pos:position pos:line="31" pos:column="28"/></name></name> <operator pos:line="31" pos:column="29">==<pos:position pos:line="31" pos:column="31"/></operator> <name pos:line="31" pos:column="32">WH_FORMAT_JSON<pos:position pos:line="31" pos:column="46"/></name> <operator pos:line="31" pos:column="47">||<pos:position pos:line="31" pos:column="49"/></operator> <name><name pos:line="31" pos:column="50">cb<pos:position pos:line="31" pos:column="52"/></name><operator pos:line="31" pos:column="52">-&gt;<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="54">format<pos:position pos:line="31" pos:column="60"/></name></name> <operator pos:line="31" pos:column="61">==<pos:position pos:line="31" pos:column="63"/></operator> <name pos:line="31" pos:column="64">WH_FORMAT_KAIROSDB<pos:position pos:line="31" pos:column="82"/></name></expr>)<pos:position pos:line="31" pos:column="83"/></condition><then pos:line="31" pos:column="83">
        <block pos:line="32" pos:column="9">{
                <if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name><name pos:line="33" pos:column="21">cb<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">-&gt;<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="25">send_buffer_fill<pos:position pos:line="33" pos:column="41"/></name></name> <operator pos:line="33" pos:column="42">&lt;=<pos:position pos:line="33" pos:column="47"/></operator> <literal type="number" pos:line="33" pos:column="45">2<pos:position pos:line="33" pos:column="46"/></literal></expr>)<pos:position pos:line="33" pos:column="47"/></condition><then pos:line="33" pos:column="47">
                <block pos:line="34" pos:column="17">{
                        <expr_stmt><expr><name><name pos:line="35" pos:column="25">cb<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">send_buffer_init_time<pos:position pos:line="35" pos:column="50"/></name></name> <operator pos:line="35" pos:column="51">=<pos:position pos:line="35" pos:column="52"/></operator> <call><name pos:line="35" pos:column="53">cdtime<pos:position pos:line="35" pos:column="59"/></name> <argument_list pos:line="35" pos:column="60">()<pos:position pos:line="35" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="63"/></expr_stmt>
                        <return pos:line="36" pos:column="25">return <expr><operator pos:line="36" pos:column="32">(<pos:position pos:line="36" pos:column="33"/></operator><literal type="number" pos:line="36" pos:column="33">0<pos:position pos:line="36" pos:column="34"/></literal><operator pos:line="36" pos:column="34">)<pos:position pos:line="36" pos:column="35"/></operator></expr>;<pos:position pos:line="36" pos:column="36"/></return>
                }<pos:position pos:line="37" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="39" pos:column="17">status<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <call><name pos:line="39" pos:column="26">format_json_finalize<pos:position pos:line="39" pos:column="46"/></name> <argument_list pos:line="39" pos:column="47">(<argument><expr><name><name pos:line="39" pos:column="48">cb<pos:position pos:line="39" pos:column="50"/></name><operator pos:line="39" pos:column="50">-&gt;<pos:position pos:line="39" pos:column="55"/></operator><name pos:line="39" pos:column="52">send_buffer<pos:position pos:line="39" pos:column="63"/></name></name></expr></argument>,
                                <argument><expr><operator pos:line="40" pos:column="33">&amp;<pos:position pos:line="40" pos:column="38"/></operator><name><name pos:line="40" pos:column="34">cb<pos:position pos:line="40" pos:column="36"/></name><operator pos:line="40" pos:column="36">-&gt;<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="38">send_buffer_fill<pos:position pos:line="40" pos:column="54"/></name></name></expr></argument>,
                                <argument><expr><operator pos:line="41" pos:column="33">&amp;<pos:position pos:line="41" pos:column="38"/></operator><name><name pos:line="41" pos:column="34">cb<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">-&gt;<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="38">send_buffer_free<pos:position pos:line="41" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="56"/></expr_stmt>
                <if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">status<pos:position pos:line="42" pos:column="27"/></name> <operator pos:line="42" pos:column="28">!=<pos:position pos:line="42" pos:column="30"/></operator> <literal type="number" pos:line="42" pos:column="31">0<pos:position pos:line="42" pos:column="32"/></literal></expr>)<pos:position pos:line="42" pos:column="33"/></condition><then pos:line="42" pos:column="33">
                <block pos:line="43" pos:column="17">{
                        <expr_stmt><expr><call><name pos:line="44" pos:column="25">ERROR<pos:position pos:line="44" pos:column="30"/></name> <argument_list pos:line="44" pos:column="31">(<argument><expr><literal type="string" pos:line="44" pos:column="32">"write_http: wh_flush_nolock: "<pos:position pos:line="44" pos:column="63"/></literal>
                                        <literal type="string" pos:line="45" pos:column="41">"format_json_finalize failed."<pos:position pos:line="45" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="73"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="46" pos:column="25">wh_reset_buffer<pos:position pos:line="46" pos:column="40"/></name> <argument_list pos:line="46" pos:column="41">(<argument><expr><name pos:line="46" pos:column="42">cb<pos:position pos:line="46" pos:column="44"/></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="46"/></expr_stmt>
                        <return pos:line="47" pos:column="25">return <expr><operator pos:line="47" pos:column="32">(<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="33">status<pos:position pos:line="47" pos:column="39"/></name><operator pos:line="47" pos:column="39">)<pos:position pos:line="47" pos:column="40"/></operator></expr>;<pos:position pos:line="47" pos:column="41"/></return>
                }<pos:position pos:line="48" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="50" pos:column="17">status<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">=<pos:position pos:line="50" pos:column="25"/></operator> <call><name pos:line="50" pos:column="26">wh_post_nolock<pos:position pos:line="50" pos:column="40"/></name> <argument_list pos:line="50" pos:column="41">(<argument><expr><name pos:line="50" pos:column="42">cb<pos:position pos:line="50" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="46">cb<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">-&gt;<pos:position pos:line="50" pos:column="53"/></operator><name pos:line="50" pos:column="50">send_buffer<pos:position pos:line="50" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="51" pos:column="17">wh_reset_buffer<pos:position pos:line="51" pos:column="32"/></name> <argument_list pos:line="51" pos:column="33">(<argument><expr><name pos:line="51" pos:column="34">cb<pos:position pos:line="51" pos:column="36"/></name></expr></argument>)<pos:position pos:line="51" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if></elseif>
        <else pos:line="53" pos:column="9">else
        <block pos:line="54" pos:column="9">{
                <expr_stmt><expr><call><name pos:line="55" pos:column="17">ERROR<pos:position pos:line="55" pos:column="22"/></name> <argument_list pos:line="55" pos:column="23">(<argument><expr><literal type="string" pos:line="55" pos:column="24">"write_http: wh_flush_nolock: "<pos:position pos:line="55" pos:column="55"/></literal>
                                <literal type="string" pos:line="56" pos:column="33">"Unknown format: %i"<pos:position pos:line="56" pos:column="53"/></literal></expr></argument>,
                                <argument><expr><name><name pos:line="57" pos:column="33">cb<pos:position pos:line="57" pos:column="35"/></name><operator pos:line="57" pos:column="35">-&gt;<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="37">format<pos:position pos:line="57" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="45"/></expr_stmt>
                <return pos:line="58" pos:column="17">return <expr><operator pos:line="58" pos:column="24">(<pos:position pos:line="58" pos:column="25"/></operator><operator pos:line="58" pos:column="25">-<pos:position pos:line="58" pos:column="26"/></operator><literal type="number" pos:line="58" pos:column="26">1<pos:position pos:line="58" pos:column="27"/></literal><operator pos:line="58" pos:column="27">)<pos:position pos:line="58" pos:column="28"/></operator></expr>;<pos:position pos:line="58" pos:column="29"/></return>
        }<pos:position pos:line="59" pos:column="10"/></block></else></if>

        <return pos:line="61" pos:column="9">return <expr><operator pos:line="61" pos:column="16">(<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="17">status<pos:position pos:line="61" pos:column="23"/></name><operator pos:line="61" pos:column="23">)<pos:position pos:line="61" pos:column="24"/></operator></expr>;<pos:position pos:line="61" pos:column="25"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

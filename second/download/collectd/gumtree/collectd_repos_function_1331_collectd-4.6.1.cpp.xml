<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1331_collectd-4.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">lcc_listval<pos:position pos:line="1" pos:column="16"/></name> <parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">lcc_connection_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">c<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="39">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">lcc_identifier_t<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier><modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">ret_ident<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">size_t<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">ret_ident_num<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">lcc_response_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">res<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">i<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">lcc_identifier_t<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">ident<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">ident_num<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">c<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">==<pos:position pos:line="11" pos:column="11"/></operator> <name pos:line="11" pos:column="12">NULL<pos:position pos:line="11" pos:column="16"/></name></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">(<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">ret_ident<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">==<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">NULL<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">)<pos:position pos:line="14" pos:column="26"/></operator> <operator pos:line="14" pos:column="27">||<pos:position pos:line="14" pos:column="29"/></operator> <operator pos:line="14" pos:column="30">(<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="31">ret_ident_num<pos:position pos:line="14" pos:column="44"/></name> <operator pos:line="14" pos:column="45">==<pos:position pos:line="14" pos:column="47"/></operator> <name pos:line="14" pos:column="48">NULL<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">)<pos:position pos:line="14" pos:column="53"/></operator></expr>)<pos:position pos:line="14" pos:column="54"/></condition><then pos:line="14" pos:column="54">
  <block pos:line="15" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">lcc_set_errno<pos:position pos:line="16" pos:column="18"/></name> <argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">c<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="23">EINVAL<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">-<pos:position pos:line="17" pos:column="14"/></operator><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal><operator pos:line="17" pos:column="15">)<pos:position pos:line="17" pos:column="16"/></operator></expr>;<pos:position pos:line="17" pos:column="17"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="20" pos:column="3">status<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <call><name pos:line="20" pos:column="12">lcc_sendreceive<pos:position pos:line="20" pos:column="27"/></name> <argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">c<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="32">"LISTVAL"<pos:position pos:line="20" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="43">&amp;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="44">res<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">status<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">!=<pos:position pos:line="21" pos:column="16"/></operator> <literal type="number" pos:line="21" pos:column="17">0<pos:position pos:line="21" pos:column="18"/></literal></expr>)<pos:position pos:line="21" pos:column="19"/></condition><then pos:line="21" pos:column="19">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">status<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">)<pos:position pos:line="22" pos:column="20"/></operator></expr>;<pos:position pos:line="22" pos:column="21"/></return></block></then></if>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name><name pos:line="24" pos:column="7">res<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">.<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">status<pos:position pos:line="24" pos:column="17"/></name></name> <operator pos:line="24" pos:column="18">!=<pos:position pos:line="24" pos:column="20"/></operator> <literal type="number" pos:line="24" pos:column="21">0<pos:position pos:line="24" pos:column="22"/></literal></expr>)<pos:position pos:line="24" pos:column="23"/></condition><then pos:line="24" pos:column="23">
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">LCC_SET_ERRSTR<pos:position pos:line="26" pos:column="19"/></name> <argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">c<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="24">"Server error: %s"<pos:position pos:line="26" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="44">res<pos:position pos:line="26" pos:column="47"/></name><operator pos:line="26" pos:column="47">.<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="48">message<pos:position pos:line="26" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">lcc_response_free<pos:position pos:line="27" pos:column="22"/></name> <argument_list pos:line="27" pos:column="23">(<argument><expr><operator pos:line="27" pos:column="24">&amp;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="25">res<pos:position pos:line="27" pos:column="28"/></name></expr></argument>)<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><operator pos:line="28" pos:column="13">-<pos:position pos:line="28" pos:column="14"/></operator><literal type="number" pos:line="28" pos:column="14">1<pos:position pos:line="28" pos:column="15"/></literal><operator pos:line="28" pos:column="15">)<pos:position pos:line="28" pos:column="16"/></operator></expr>;<pos:position pos:line="28" pos:column="17"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="31" pos:column="3">ident_num<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <name><name pos:line="31" pos:column="15">res<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">.<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">lines_num<pos:position pos:line="31" pos:column="28"/></name></name></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="32" pos:column="3">ident<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <operator pos:line="32" pos:column="11">(<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">lcc_identifier_t<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">*<pos:position pos:line="32" pos:column="30"/></operator><operator pos:line="32" pos:column="30">)<pos:position pos:line="32" pos:column="31"/></operator> <call><name pos:line="32" pos:column="32">malloc<pos:position pos:line="32" pos:column="38"/></name> <argument_list pos:line="32" pos:column="39">(<argument><expr><name pos:line="32" pos:column="40">ident_num<pos:position pos:line="32" pos:column="49"/></name> <operator pos:line="32" pos:column="50">*<pos:position pos:line="32" pos:column="51"/></operator> <sizeof pos:line="32" pos:column="52">sizeof <argument_list pos:line="32" pos:column="59">(<argument><expr><operator pos:line="32" pos:column="60">*<pos:position pos:line="32" pos:column="61"/></operator><name pos:line="32" pos:column="61">ident<pos:position pos:line="32" pos:column="66"/></name></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="69"/></expr_stmt>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name pos:line="33" pos:column="7">ident<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">==<pos:position pos:line="33" pos:column="15"/></operator> <name pos:line="33" pos:column="16">NULL<pos:position pos:line="33" pos:column="20"/></name></expr>)<pos:position pos:line="33" pos:column="21"/></condition><then pos:line="33" pos:column="21">
  <block pos:line="34" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">lcc_response_free<pos:position pos:line="35" pos:column="22"/></name> <argument_list pos:line="35" pos:column="23">(<argument><expr><operator pos:line="35" pos:column="24">&amp;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="25">res<pos:position pos:line="35" pos:column="28"/></name></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">lcc_set_errno<pos:position pos:line="36" pos:column="18"/></name> <argument_list pos:line="36" pos:column="19">(<argument><expr><name pos:line="36" pos:column="20">c<pos:position pos:line="36" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="23">ENOMEM<pos:position pos:line="36" pos:column="29"/></name></expr></argument>)<pos:position pos:line="36" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><operator pos:line="37" pos:column="13">-<pos:position pos:line="37" pos:column="14"/></operator><literal type="number" pos:line="37" pos:column="14">1<pos:position pos:line="37" pos:column="15"/></literal><operator pos:line="37" pos:column="15">)<pos:position pos:line="37" pos:column="16"/></operator></expr>;<pos:position pos:line="37" pos:column="17"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <for pos:line="40" pos:column="3">for <control pos:line="40" pos:column="7">(<init><expr><name pos:line="40" pos:column="8">i<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <literal type="number" pos:line="40" pos:column="12">0<pos:position pos:line="40" pos:column="13"/></literal></expr>;<pos:position pos:line="40" pos:column="14"/></init> <condition><expr><name pos:line="40" pos:column="15">i<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">&lt;<pos:position pos:line="40" pos:column="21"/></operator> <name><name pos:line="40" pos:column="19">res<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">.<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="23">lines_num<pos:position pos:line="40" pos:column="32"/></name></name></expr>;<pos:position pos:line="40" pos:column="33"/></condition> <incr><expr><name pos:line="40" pos:column="34">i<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">++<pos:position pos:line="40" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="38"/></control>
  <block pos:line="41" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="42" pos:column="5">char<pos:position pos:line="42" pos:column="9"/></name> <modifier pos:line="42" pos:column="10">*<pos:position pos:line="42" pos:column="11"/></modifier></type><name pos:line="42" pos:column="11">time_str<pos:position pos:line="42" pos:column="19"/></name></decl>;<pos:position pos:line="42" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="43" pos:column="5">char<pos:position pos:line="43" pos:column="9"/></name> <modifier pos:line="43" pos:column="10">*<pos:position pos:line="43" pos:column="11"/></modifier></type><name pos:line="43" pos:column="11">ident_str<pos:position pos:line="43" pos:column="20"/></name></decl>;<pos:position pos:line="43" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="45" pos:column="5">/* First field is the time. */</comment>
    <expr_stmt><expr><name pos:line="46" pos:column="5">time_str<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <name><name pos:line="46" pos:column="16">res<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">.<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="20">lines<pos:position pos:line="46" pos:column="25"/></name><index pos:line="46" pos:column="25">[<expr><name pos:line="46" pos:column="26">i<pos:position pos:line="46" pos:column="27"/></name></expr>]<pos:position pos:line="46" pos:column="28"/></index></name></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="48" pos:column="5">/* Set `ident_str' to the beginning of the second field. */</comment>
    <expr_stmt><expr><name pos:line="49" pos:column="5">ident_str<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">=<pos:position pos:line="49" pos:column="16"/></operator> <name pos:line="49" pos:column="17">time_str<pos:position pos:line="49" pos:column="25"/></name></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt>
    <while pos:line="50" pos:column="5">while <condition pos:line="50" pos:column="11">(<expr><operator pos:line="50" pos:column="12">(<pos:position pos:line="50" pos:column="13"/></operator><operator pos:line="50" pos:column="13">*<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">ident_str<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">!=<pos:position pos:line="50" pos:column="26"/></operator> <literal type="char" pos:line="50" pos:column="27">' '<pos:position pos:line="50" pos:column="30"/></literal><operator pos:line="50" pos:column="30">)<pos:position pos:line="50" pos:column="31"/></operator> <operator pos:line="50" pos:column="32">&amp;&amp;<pos:position pos:line="50" pos:column="42"/></operator> <operator pos:line="50" pos:column="35">(<pos:position pos:line="50" pos:column="36"/></operator><operator pos:line="50" pos:column="36">*<pos:position pos:line="50" pos:column="37"/></operator><name pos:line="50" pos:column="37">ident_str<pos:position pos:line="50" pos:column="46"/></name> <operator pos:line="50" pos:column="47">!=<pos:position pos:line="50" pos:column="49"/></operator> <literal type="char" pos:line="50" pos:column="50">'\t'<pos:position pos:line="50" pos:column="54"/></literal><operator pos:line="50" pos:column="54">)<pos:position pos:line="50" pos:column="55"/></operator> <operator pos:line="50" pos:column="56">&amp;&amp;<pos:position pos:line="50" pos:column="66"/></operator> <operator pos:line="50" pos:column="59">(<pos:position pos:line="50" pos:column="60"/></operator><operator pos:line="50" pos:column="60">*<pos:position pos:line="50" pos:column="61"/></operator><name pos:line="50" pos:column="61">ident_str<pos:position pos:line="50" pos:column="70"/></name> <operator pos:line="50" pos:column="71">!=<pos:position pos:line="50" pos:column="73"/></operator> <literal type="number" pos:line="50" pos:column="74">0<pos:position pos:line="50" pos:column="75"/></literal><operator pos:line="50" pos:column="75">)<pos:position pos:line="50" pos:column="76"/></operator></expr>)<pos:position pos:line="50" pos:column="77"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="7">ident_str<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">++<pos:position pos:line="51" pos:column="18"/></operator></expr>;<pos:position pos:line="51" pos:column="19"/></expr_stmt></block></while>
    <while pos:line="52" pos:column="5">while <condition pos:line="52" pos:column="11">(<expr><operator pos:line="52" pos:column="12">(<pos:position pos:line="52" pos:column="13"/></operator><operator pos:line="52" pos:column="13">*<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="14">ident_str<pos:position pos:line="52" pos:column="23"/></name> <operator pos:line="52" pos:column="24">==<pos:position pos:line="52" pos:column="26"/></operator> <literal type="char" pos:line="52" pos:column="27">' '<pos:position pos:line="52" pos:column="30"/></literal><operator pos:line="52" pos:column="30">)<pos:position pos:line="52" pos:column="31"/></operator> <operator pos:line="52" pos:column="32">||<pos:position pos:line="52" pos:column="34"/></operator> <operator pos:line="52" pos:column="35">(<pos:position pos:line="52" pos:column="36"/></operator><operator pos:line="52" pos:column="36">*<pos:position pos:line="52" pos:column="37"/></operator><name pos:line="52" pos:column="37">ident_str<pos:position pos:line="52" pos:column="46"/></name> <operator pos:line="52" pos:column="47">==<pos:position pos:line="52" pos:column="49"/></operator> <literal type="char" pos:line="52" pos:column="50">'\t'<pos:position pos:line="52" pos:column="54"/></literal><operator pos:line="52" pos:column="54">)<pos:position pos:line="52" pos:column="55"/></operator></expr>)<pos:position pos:line="52" pos:column="56"/></condition>
    <block pos:line="53" pos:column="5">{
      <expr_stmt><expr><operator pos:line="54" pos:column="7">*<pos:position pos:line="54" pos:column="8"/></operator><name pos:line="54" pos:column="8">ident_str<pos:position pos:line="54" pos:column="17"/></name> <operator pos:line="54" pos:column="18">=<pos:position pos:line="54" pos:column="19"/></operator> <literal type="number" pos:line="54" pos:column="20">0<pos:position pos:line="54" pos:column="21"/></literal></expr>;<pos:position pos:line="54" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="55" pos:column="7">ident_str<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">++<pos:position pos:line="55" pos:column="18"/></operator></expr>;<pos:position pos:line="55" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></while>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">*<pos:position pos:line="58" pos:column="10"/></operator><name pos:line="58" pos:column="10">ident_str<pos:position pos:line="58" pos:column="19"/></name> <operator pos:line="58" pos:column="20">==<pos:position pos:line="58" pos:column="22"/></operator> <literal type="number" pos:line="58" pos:column="23">0<pos:position pos:line="58" pos:column="24"/></literal></expr>)<pos:position pos:line="58" pos:column="25"/></condition><then pos:line="58" pos:column="25">
    <block pos:line="59" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">lcc_set_errno<pos:position pos:line="60" pos:column="20"/></name> <argument_list pos:line="60" pos:column="21">(<argument><expr><name pos:line="60" pos:column="22">c<pos:position pos:line="60" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="25">EILSEQ<pos:position pos:line="60" pos:column="31"/></name></expr></argument>)<pos:position pos:line="60" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name pos:line="61" pos:column="7">status<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator> <operator pos:line="61" pos:column="16">-<pos:position pos:line="61" pos:column="17"/></operator><literal type="number" pos:line="61" pos:column="17">1<pos:position pos:line="61" pos:column="18"/></literal></expr>;<pos:position pos:line="61" pos:column="19"/></expr_stmt>
      <break pos:line="62" pos:column="7">break;<pos:position pos:line="62" pos:column="13"/></break>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="65" pos:column="5">status<pos:position pos:line="65" pos:column="11"/></name> <operator pos:line="65" pos:column="12">=<pos:position pos:line="65" pos:column="13"/></operator> <call><name pos:line="65" pos:column="14">lcc_string_to_identifier<pos:position pos:line="65" pos:column="38"/></name> <argument_list pos:line="65" pos:column="39">(<argument><expr><name pos:line="65" pos:column="40">c<pos:position pos:line="65" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="43">ident<pos:position pos:line="65" pos:column="48"/></name> <operator pos:line="65" pos:column="49">+<pos:position pos:line="65" pos:column="50"/></operator> <name pos:line="65" pos:column="51">i<pos:position pos:line="65" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="54">ident_str<pos:position pos:line="65" pos:column="63"/></name></expr></argument>)<pos:position pos:line="65" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="65"/></expr_stmt>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">status<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">!=<pos:position pos:line="66" pos:column="18"/></operator> <literal type="number" pos:line="66" pos:column="19">0<pos:position pos:line="66" pos:column="20"/></literal></expr>)<pos:position pos:line="66" pos:column="21"/></condition><then pos:line="66" pos:column="21">
      <block type="pseudo"><break pos:line="67" pos:column="7">break;<pos:position pos:line="67" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="68" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="70" pos:column="3">lcc_response_free<pos:position pos:line="70" pos:column="20"/></name> <argument_list pos:line="70" pos:column="21">(<argument><expr><operator pos:line="70" pos:column="22">&amp;<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="23">res<pos:position pos:line="70" pos:column="26"/></name></expr></argument>)<pos:position pos:line="70" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="28"/></expr_stmt>

  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><name pos:line="72" pos:column="7">status<pos:position pos:line="72" pos:column="13"/></name> <operator pos:line="72" pos:column="14">!=<pos:position pos:line="72" pos:column="16"/></operator> <literal type="number" pos:line="72" pos:column="17">0<pos:position pos:line="72" pos:column="18"/></literal></expr>)<pos:position pos:line="72" pos:column="19"/></condition><then pos:line="72" pos:column="19">
  <block pos:line="73" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">free<pos:position pos:line="74" pos:column="9"/></name> <argument_list pos:line="74" pos:column="10">(<argument><expr><name pos:line="74" pos:column="11">ident<pos:position pos:line="74" pos:column="16"/></name></expr></argument>)<pos:position pos:line="74" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="18"/></expr_stmt>
    <return pos:line="75" pos:column="5">return <expr><operator pos:line="75" pos:column="12">(<pos:position pos:line="75" pos:column="13"/></operator><operator pos:line="75" pos:column="13">-<pos:position pos:line="75" pos:column="14"/></operator><literal type="number" pos:line="75" pos:column="14">1<pos:position pos:line="75" pos:column="15"/></literal><operator pos:line="75" pos:column="15">)<pos:position pos:line="75" pos:column="16"/></operator></expr>;<pos:position pos:line="75" pos:column="17"/></return>
  }<pos:position pos:line="76" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="78" pos:column="3">*<pos:position pos:line="78" pos:column="4"/></operator><name pos:line="78" pos:column="4">ret_ident<pos:position pos:line="78" pos:column="13"/></name> <operator pos:line="78" pos:column="14">=<pos:position pos:line="78" pos:column="15"/></operator> <name pos:line="78" pos:column="16">ident<pos:position pos:line="78" pos:column="21"/></name></expr>;<pos:position pos:line="78" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="79" pos:column="3">*<pos:position pos:line="79" pos:column="4"/></operator><name pos:line="79" pos:column="4">ret_ident_num<pos:position pos:line="79" pos:column="17"/></name> <operator pos:line="79" pos:column="18">=<pos:position pos:line="79" pos:column="19"/></operator> <name pos:line="79" pos:column="20">ident_num<pos:position pos:line="79" pos:column="29"/></name></expr>;<pos:position pos:line="79" pos:column="30"/></expr_stmt>

  <return pos:line="81" pos:column="3">return <expr><operator pos:line="81" pos:column="10">(<pos:position pos:line="81" pos:column="11"/></operator><literal type="number" pos:line="81" pos:column="11">0<pos:position pos:line="81" pos:column="12"/></literal><operator pos:line="81" pos:column="12">)<pos:position pos:line="81" pos:column="13"/></operator></expr>;<pos:position pos:line="81" pos:column="14"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

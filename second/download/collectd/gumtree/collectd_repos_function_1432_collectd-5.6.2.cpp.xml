<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1432_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">get_spec_by_x<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">n<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">t<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <block pos:line="1" pos:column="50">{
  <decl_stmt><decl><type><name><name pos:line="2" pos:column="3">struct<pos:position pos:line="2" pos:column="9"/></name> <name pos:line="2" pos:column="10">uuidCache_s<pos:position pos:line="2" pos:column="21"/></name></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">uc<pos:position pos:line="2" pos:column="25"/></name></decl>;<pos:position pos:line="2" pos:column="26"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="4" pos:column="3">uuidcache_init<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">()<pos:position pos:line="4" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="5" pos:column="3">uc<pos:position pos:line="5" pos:column="5"/></name> <operator pos:line="5" pos:column="6">=<pos:position pos:line="5" pos:column="7"/></operator> <name pos:line="5" pos:column="8">uuidCache<pos:position pos:line="5" pos:column="17"/></name></expr>;<pos:position pos:line="5" pos:column="18"/></expr_stmt>

  <while pos:line="7" pos:column="3">while <condition pos:line="7" pos:column="9">(<expr><name pos:line="7" pos:column="10">uc<pos:position pos:line="7" pos:column="12"/></name></expr>)<pos:position pos:line="7" pos:column="13"/></condition> <block pos:line="7" pos:column="14">{
    <switch pos:line="8" pos:column="5">switch <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">n<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition> <block pos:line="8" pos:column="16">{
    <case pos:line="9" pos:column="5">case <expr><name pos:line="9" pos:column="10">UUID<pos:position pos:line="9" pos:column="14"/></name></expr>:<pos:position pos:line="9" pos:column="15"/></case>
      <if pos:line="10" pos:column="7">if <condition pos:line="10" pos:column="10">(<expr><operator pos:line="10" pos:column="11">!<pos:position pos:line="10" pos:column="12"/></operator><call><name pos:line="10" pos:column="12">memcmp<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">t<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="22">uc<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">uuid<pos:position pos:line="10" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="32">sizeof<argument_list pos:line="10" pos:column="38">(<argument><expr><name><name pos:line="10" pos:column="39">uc<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">uuid<pos:position pos:line="10" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="50"/></condition><then pos:line="10" pos:column="50"> <block pos:line="10" pos:column="51">{
        <return pos:line="11" pos:column="9">return <expr><call><name pos:line="11" pos:column="16">sstrdup<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name><name pos:line="11" pos:column="24">uc<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">device<pos:position pos:line="11" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></return>
      }<pos:position pos:line="12" pos:column="8"/></block></then></if>
      <break pos:line="13" pos:column="7">break;<pos:position pos:line="13" pos:column="13"/></break>
    <case pos:line="14" pos:column="5">case <expr><name pos:line="14" pos:column="10">VOL<pos:position pos:line="14" pos:column="13"/></name></expr>:<pos:position pos:line="14" pos:column="14"/></case>
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><operator pos:line="15" pos:column="11">!<pos:position pos:line="15" pos:column="12"/></operator><call><name pos:line="15" pos:column="12">strcmp<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">t<pos:position pos:line="15" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="22">uc<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">label<pos:position pos:line="15" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <block pos:line="15" pos:column="34">{
        <return pos:line="16" pos:column="9">return <expr><call><name pos:line="16" pos:column="16">sstrdup<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name><name pos:line="16" pos:column="24">uc<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">device<pos:position pos:line="16" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></return>
      }<pos:position pos:line="17" pos:column="8"/></block></then></if>
      <break pos:line="18" pos:column="7">break;<pos:position pos:line="18" pos:column="13"/></break>
    }<pos:position pos:line="19" pos:column="6"/></block></switch>
    <expr_stmt><expr><name pos:line="20" pos:column="5">uc<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <name><name pos:line="20" pos:column="10">uc<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">next<pos:position pos:line="20" pos:column="18"/></name></name></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></while>
  <return pos:line="22" pos:column="3">return <expr><name pos:line="22" pos:column="10">NULL<pos:position pos:line="22" pos:column="14"/></name></expr>;<pos:position pos:line="22" pos:column="15"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

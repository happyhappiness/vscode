<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1549_collectd-4.8.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">lcc_putval<pos:position pos:line="1" pos:column="15"/></name> <parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">lcc_connection_t<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">c<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">lcc_value_list_t<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">vl<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list> <comment type="block" pos:line="1" pos:column="66">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">ident_str<pos:position pos:line="3" pos:column="17"/></name><index pos:line="3" pos:column="17">[<expr><literal type="number" pos:line="3" pos:column="18">6<pos:position pos:line="3" pos:column="19"/></literal> <operator pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></operator> <name pos:line="3" pos:column="22">LCC_NAME_LEN<pos:position pos:line="3" pos:column="34"/></name></expr>]<pos:position pos:line="3" pos:column="35"/></index></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">ident_esc<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><literal type="number" pos:line="4" pos:column="18">12<pos:position pos:line="4" pos:column="20"/></literal> <operator pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></operator> <name pos:line="4" pos:column="23">LCC_NAME_LEN<pos:position pos:line="4" pos:column="35"/></name></expr>]<pos:position pos:line="4" pos:column="36"/></index></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">command<pos:position pos:line="5" pos:column="15"/></name><index pos:line="5" pos:column="15">[<expr><literal type="number" pos:line="5" pos:column="16">1024<pos:position pos:line="5" pos:column="20"/></literal></expr>]<pos:position pos:line="5" pos:column="21"/></index></name> <init pos:line="5" pos:column="22">= <expr><literal type="string" pos:line="5" pos:column="24">""<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">lcc_response_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">res<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">c<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">==<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">NULL<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">)<pos:position pos:line="10" pos:column="18"/></operator> <operator pos:line="10" pos:column="19">||<pos:position pos:line="10" pos:column="21"/></operator> <operator pos:line="10" pos:column="22">(<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">vl<pos:position pos:line="10" pos:column="25"/></name> <operator pos:line="10" pos:column="26">==<pos:position pos:line="10" pos:column="28"/></operator> <name pos:line="10" pos:column="29">NULL<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator> <operator pos:line="10" pos:column="35">||<pos:position pos:line="10" pos:column="37"/></operator> <operator pos:line="10" pos:column="38">(<pos:position pos:line="10" pos:column="39"/></operator><name><name pos:line="10" pos:column="39">vl<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">values_len<pos:position pos:line="10" pos:column="53"/></name></name> <operator pos:line="10" pos:column="54">&lt;<pos:position pos:line="10" pos:column="58"/></operator> <literal type="number" pos:line="10" pos:column="56">1<pos:position pos:line="10" pos:column="57"/></literal><operator pos:line="10" pos:column="57">)<pos:position pos:line="10" pos:column="58"/></operator>
      <operator pos:line="11" pos:column="7">||<pos:position pos:line="11" pos:column="9"/></operator> <operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name><name pos:line="11" pos:column="11">vl<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">values<pos:position pos:line="11" pos:column="21"/></name></name> <operator pos:line="11" pos:column="22">==<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">NULL<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">)<pos:position pos:line="11" pos:column="30"/></operator> <operator pos:line="11" pos:column="31">||<pos:position pos:line="11" pos:column="33"/></operator> <operator pos:line="11" pos:column="34">(<pos:position pos:line="11" pos:column="35"/></operator><name><name pos:line="11" pos:column="35">vl<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">values_types<pos:position pos:line="11" pos:column="51"/></name></name> <operator pos:line="11" pos:column="52">==<pos:position pos:line="11" pos:column="54"/></operator> <name pos:line="11" pos:column="55">NULL<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">)<pos:position pos:line="11" pos:column="60"/></operator></expr>)<pos:position pos:line="11" pos:column="61"/></condition><then pos:line="11" pos:column="61">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">lcc_set_errno<pos:position pos:line="13" pos:column="18"/></name> <argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">c<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="23">EINVAL<pos:position pos:line="13" pos:column="29"/></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">status<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <call><name pos:line="17" pos:column="12">lcc_identifier_to_string<pos:position pos:line="17" pos:column="36"/></name> <argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">c<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="41">ident_str<pos:position pos:line="17" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="52">sizeof <argument_list pos:line="17" pos:column="59">(<argument><expr><name pos:line="17" pos:column="60">ident_str<pos:position pos:line="17" pos:column="69"/></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></sizeof></expr></argument>,
      <argument><expr><operator pos:line="18" pos:column="7">&amp;<pos:position pos:line="18" pos:column="12"/></operator><name><name pos:line="18" pos:column="8">vl<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">identifier<pos:position pos:line="18" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">status<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">!=<pos:position pos:line="19" pos:column="16"/></operator> <literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19">
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">status<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">)<pos:position pos:line="20" pos:column="20"/></operator></expr>;<pos:position pos:line="20" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">SSTRCATF<pos:position pos:line="22" pos:column="11"/></name> <argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">command<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="22">"PUTVAL %s"<pos:position pos:line="22" pos:column="33"/></literal></expr></argument>,
      <argument><expr><call><name pos:line="23" pos:column="7">lcc_strescape<pos:position pos:line="23" pos:column="20"/></name> <argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">ident_esc<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="33">ident_str<pos:position pos:line="23" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="44">sizeof <argument_list pos:line="23" pos:column="51">(<argument><expr><name pos:line="23" pos:column="52">ident_esc<pos:position pos:line="23" pos:column="61"/></name></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="65"/></expr_stmt>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name><name pos:line="25" pos:column="7">vl<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">interval<pos:position pos:line="25" pos:column="19"/></name></name> <operator pos:line="25" pos:column="20">&gt;<pos:position pos:line="25" pos:column="24"/></operator> <literal type="number" pos:line="25" pos:column="22">0<pos:position pos:line="25" pos:column="23"/></literal></expr>)<pos:position pos:line="25" pos:column="24"/></condition><then pos:line="25" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="5">SSTRCATF<pos:position pos:line="26" pos:column="13"/></name> <argument_list pos:line="26" pos:column="14">(<argument><expr><name pos:line="26" pos:column="15">command<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="24">" interval=%i"<pos:position pos:line="26" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="40">vl<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">-&gt;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="44">interval<pos:position pos:line="26" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="54"/></expr_stmt></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name><name pos:line="28" pos:column="7">vl<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">-&gt;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="11">time<pos:position pos:line="28" pos:column="15"/></name></name> <operator pos:line="28" pos:column="16">&gt;<pos:position pos:line="28" pos:column="20"/></operator> <literal type="number" pos:line="28" pos:column="18">0<pos:position pos:line="28" pos:column="19"/></literal></expr>)<pos:position pos:line="28" pos:column="20"/></condition><then pos:line="28" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">SSTRCATF<pos:position pos:line="29" pos:column="13"/></name> <argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">command<pos:position pos:line="29" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="24">"%u"<pos:position pos:line="29" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="30">(<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="31">unsigned<pos:position pos:line="29" pos:column="39"/></name> <name pos:line="29" pos:column="40">int<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">)<pos:position pos:line="29" pos:column="44"/></operator> <name><name pos:line="29" pos:column="45">vl<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">-&gt;<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="49">time<pos:position pos:line="29" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt></block></then>
  <else pos:line="30" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="5">SSTRCAT<pos:position pos:line="31" pos:column="12"/></name> <argument_list pos:line="31" pos:column="13">(<argument><expr><name pos:line="31" pos:column="14">command<pos:position pos:line="31" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="23">"N"<pos:position pos:line="31" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt></block></else></if>

  <for pos:line="33" pos:column="3">for <control pos:line="33" pos:column="7">(<init><expr><name pos:line="33" pos:column="8">i<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <literal type="number" pos:line="33" pos:column="12">0<pos:position pos:line="33" pos:column="13"/></literal></expr>;<pos:position pos:line="33" pos:column="14"/></init> <condition><expr><name pos:line="33" pos:column="15">i<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">&lt;<pos:position pos:line="33" pos:column="21"/></operator> <name><name pos:line="33" pos:column="19">vl<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">values_len<pos:position pos:line="33" pos:column="33"/></name></name></expr>;<pos:position pos:line="33" pos:column="34"/></condition> <incr><expr><name pos:line="33" pos:column="35">i<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">++<pos:position pos:line="33" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="39"/></control>
  <block pos:line="34" pos:column="3">{
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name><name pos:line="35" pos:column="9">vl<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">-&gt;<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="13">values_types<pos:position pos:line="35" pos:column="25"/></name><index pos:line="35" pos:column="25">[<expr><name pos:line="35" pos:column="26">i<pos:position pos:line="35" pos:column="27"/></name></expr>]<pos:position pos:line="35" pos:column="28"/></index></name> <operator pos:line="35" pos:column="29">==<pos:position pos:line="35" pos:column="31"/></operator> <name pos:line="35" pos:column="32">LCC_TYPE_COUNTER<pos:position pos:line="35" pos:column="48"/></name></expr>)<pos:position pos:line="35" pos:column="49"/></condition><then pos:line="35" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="7">SSTRCATF<pos:position pos:line="36" pos:column="15"/></name> <argument_list pos:line="36" pos:column="16">(<argument><expr><name pos:line="36" pos:column="17">command<pos:position pos:line="36" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="26">":%"<pos:position pos:line="36" pos:column="30"/></literal><name pos:line="36" pos:column="30">PRIu64<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="38">vl<pos:position pos:line="36" pos:column="40"/></name><operator pos:line="36" pos:column="40">-&gt;<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="42">values<pos:position pos:line="36" pos:column="48"/></name><index pos:line="36" pos:column="48">[<expr><name pos:line="36" pos:column="49">i<pos:position pos:line="36" pos:column="50"/></name></expr>]<pos:position pos:line="36" pos:column="51"/></index></name><operator pos:line="36" pos:column="51">.<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="52">counter<pos:position pos:line="36" pos:column="59"/></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt></block></then>
    <elseif pos:line="37" pos:column="5">else <if pos:line="37" pos:column="10">if <condition pos:line="37" pos:column="13">(<expr><name><name pos:line="37" pos:column="14">vl<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">values_types<pos:position pos:line="37" pos:column="30"/></name><index pos:line="37" pos:column="30">[<expr><name pos:line="37" pos:column="31">i<pos:position pos:line="37" pos:column="32"/></name></expr>]<pos:position pos:line="37" pos:column="33"/></index></name> <operator pos:line="37" pos:column="34">==<pos:position pos:line="37" pos:column="36"/></operator> <name pos:line="37" pos:column="37">LCC_TYPE_GAUGE<pos:position pos:line="37" pos:column="51"/></name></expr>)<pos:position pos:line="37" pos:column="52"/></condition><then pos:line="37" pos:column="52">
    <block pos:line="38" pos:column="5">{
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><call><name pos:line="39" pos:column="11">isnan<pos:position pos:line="39" pos:column="16"/></name> <argument_list pos:line="39" pos:column="17">(<argument><expr><name><name pos:line="39" pos:column="18">vl<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">values<pos:position pos:line="39" pos:column="28"/></name><index pos:line="39" pos:column="28">[<expr><name pos:line="39" pos:column="29">i<pos:position pos:line="39" pos:column="30"/></name></expr>]<pos:position pos:line="39" pos:column="31"/></index></name><operator pos:line="39" pos:column="31">.<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="32">gauge<pos:position pos:line="39" pos:column="37"/></name></expr></argument>)<pos:position pos:line="39" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="39"/></condition><then pos:line="39" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="9">SSTRCPY<pos:position pos:line="40" pos:column="16"/></name> <argument_list pos:line="40" pos:column="17">(<argument><expr><name pos:line="40" pos:column="18">command<pos:position pos:line="40" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="27">":U"<pos:position pos:line="40" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt></block></then>
      <else pos:line="41" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="9">SSTRCATF<pos:position pos:line="42" pos:column="17"/></name> <argument_list pos:line="42" pos:column="18">(<argument><expr><name pos:line="42" pos:column="19">command<pos:position pos:line="42" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="28">":%g"<pos:position pos:line="42" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="35">vl<pos:position pos:line="42" pos:column="37"/></name><operator pos:line="42" pos:column="37">-&gt;<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="39">values<pos:position pos:line="42" pos:column="45"/></name><index pos:line="42" pos:column="45">[<expr><name pos:line="42" pos:column="46">i<pos:position pos:line="42" pos:column="47"/></name></expr>]<pos:position pos:line="42" pos:column="48"/></index></name><operator pos:line="42" pos:column="48">.<pos:position pos:line="42" pos:column="49"/></operator><name pos:line="42" pos:column="49">gauge<pos:position pos:line="42" pos:column="54"/></name></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="56"/></expr_stmt></block></else></if>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="44" pos:column="5">else <if pos:line="44" pos:column="10">if <condition pos:line="44" pos:column="13">(<expr><name><name pos:line="44" pos:column="14">vl<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">values_types<pos:position pos:line="44" pos:column="30"/></name><index pos:line="44" pos:column="30">[<expr><name pos:line="44" pos:column="31">i<pos:position pos:line="44" pos:column="32"/></name></expr>]<pos:position pos:line="44" pos:column="33"/></index></name> <operator pos:line="44" pos:column="34">==<pos:position pos:line="44" pos:column="36"/></operator> <name pos:line="44" pos:column="37">LCC_TYPE_DERIVE<pos:position pos:line="44" pos:column="52"/></name></expr>)<pos:position pos:line="44" pos:column="53"/></condition><then pos:line="44" pos:column="53">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="9">SSTRCATF<pos:position pos:line="45" pos:column="17"/></name> <argument_list pos:line="45" pos:column="18">(<argument><expr><name pos:line="45" pos:column="19">command<pos:position pos:line="45" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="28">":%"<pos:position pos:line="45" pos:column="32"/></literal><name pos:line="45" pos:column="32">PRIu64<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="40">vl<pos:position pos:line="45" pos:column="42"/></name><operator pos:line="45" pos:column="42">-&gt;<pos:position pos:line="45" pos:column="47"/></operator><name pos:line="45" pos:column="44">values<pos:position pos:line="45" pos:column="50"/></name><index pos:line="45" pos:column="50">[<expr><name pos:line="45" pos:column="51">i<pos:position pos:line="45" pos:column="52"/></name></expr>]<pos:position pos:line="45" pos:column="53"/></index></name><operator pos:line="45" pos:column="53">.<pos:position pos:line="45" pos:column="54"/></operator><name pos:line="45" pos:column="54">derive<pos:position pos:line="45" pos:column="60"/></name></expr></argument>)<pos:position pos:line="45" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="62"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><name><name pos:line="46" pos:column="14">vl<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">values_types<pos:position pos:line="46" pos:column="30"/></name><index pos:line="46" pos:column="30">[<expr><name pos:line="46" pos:column="31">i<pos:position pos:line="46" pos:column="32"/></name></expr>]<pos:position pos:line="46" pos:column="33"/></index></name> <operator pos:line="46" pos:column="34">==<pos:position pos:line="46" pos:column="36"/></operator> <name pos:line="46" pos:column="37">LCC_TYPE_ABSOLUTE<pos:position pos:line="46" pos:column="54"/></name></expr>)<pos:position pos:line="46" pos:column="55"/></condition><then pos:line="46" pos:column="55">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="9">SSTRCATF<pos:position pos:line="47" pos:column="17"/></name> <argument_list pos:line="47" pos:column="18">(<argument><expr><name pos:line="47" pos:column="19">command<pos:position pos:line="47" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="28">":%"<pos:position pos:line="47" pos:column="32"/></literal><name pos:line="47" pos:column="32">PRIu64<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="40">vl<pos:position pos:line="47" pos:column="42"/></name><operator pos:line="47" pos:column="42">-&gt;<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="44">values<pos:position pos:line="47" pos:column="50"/></name><index pos:line="47" pos:column="50">[<expr><name pos:line="47" pos:column="51">i<pos:position pos:line="47" pos:column="52"/></name></expr>]<pos:position pos:line="47" pos:column="53"/></index></name><operator pos:line="47" pos:column="53">.<pos:position pos:line="47" pos:column="54"/></operator><name pos:line="47" pos:column="54">absolute<pos:position pos:line="47" pos:column="62"/></name></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="64"/></expr_stmt></block></then></if></elseif></if>

  }<pos:position pos:line="49" pos:column="4"/></block></for> <comment type="block" pos:line="49" pos:column="5">/* for (i = 0; i &lt; vl-&gt;values_len; i++) */</comment>

  <expr_stmt><expr><name pos:line="51" pos:column="3">status<pos:position pos:line="51" pos:column="9"/></name> <operator pos:line="51" pos:column="10">=<pos:position pos:line="51" pos:column="11"/></operator> <call><name pos:line="51" pos:column="12">lcc_sendreceive<pos:position pos:line="51" pos:column="27"/></name> <argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">c<pos:position pos:line="51" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="32">command<pos:position pos:line="51" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="41">&amp;<pos:position pos:line="51" pos:column="46"/></operator><name pos:line="51" pos:column="42">res<pos:position pos:line="51" pos:column="45"/></name></expr></argument>)<pos:position pos:line="51" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt>
  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><name pos:line="52" pos:column="7">status<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">!=<pos:position pos:line="52" pos:column="16"/></operator> <literal type="number" pos:line="52" pos:column="17">0<pos:position pos:line="52" pos:column="18"/></literal></expr>)<pos:position pos:line="52" pos:column="19"/></condition><then pos:line="52" pos:column="19">
    <block type="pseudo"><return pos:line="53" pos:column="5">return <expr><operator pos:line="53" pos:column="12">(<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="13">status<pos:position pos:line="53" pos:column="19"/></name><operator pos:line="53" pos:column="19">)<pos:position pos:line="53" pos:column="20"/></operator></expr>;<pos:position pos:line="53" pos:column="21"/></return></block></then></if>

  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><name><name pos:line="55" pos:column="7">res<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">.<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="11">status<pos:position pos:line="55" pos:column="17"/></name></name> <operator pos:line="55" pos:column="18">!=<pos:position pos:line="55" pos:column="20"/></operator> <literal type="number" pos:line="55" pos:column="21">0<pos:position pos:line="55" pos:column="22"/></literal></expr>)<pos:position pos:line="55" pos:column="23"/></condition><then pos:line="55" pos:column="23">
  <block pos:line="56" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">LCC_SET_ERRSTR<pos:position pos:line="57" pos:column="19"/></name> <argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">c<pos:position pos:line="57" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="24">"Server error: %s"<pos:position pos:line="57" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="44">res<pos:position pos:line="57" pos:column="47"/></name><operator pos:line="57" pos:column="47">.<pos:position pos:line="57" pos:column="48"/></operator><name pos:line="57" pos:column="48">message<pos:position pos:line="57" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">lcc_response_free<pos:position pos:line="58" pos:column="22"/></name> <argument_list pos:line="58" pos:column="23">(<argument><expr><operator pos:line="58" pos:column="24">&amp;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="25">res<pos:position pos:line="58" pos:column="28"/></name></expr></argument>)<pos:position pos:line="58" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="30"/></expr_stmt>
    <return pos:line="59" pos:column="5">return <expr><operator pos:line="59" pos:column="12">(<pos:position pos:line="59" pos:column="13"/></operator><operator pos:line="59" pos:column="13">-<pos:position pos:line="59" pos:column="14"/></operator><literal type="number" pos:line="59" pos:column="14">1<pos:position pos:line="59" pos:column="15"/></literal><operator pos:line="59" pos:column="15">)<pos:position pos:line="59" pos:column="16"/></operator></expr>;<pos:position pos:line="59" pos:column="17"/></return>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="62" pos:column="3">lcc_response_free<pos:position pos:line="62" pos:column="20"/></name> <argument_list pos:line="62" pos:column="21">(<argument><expr><operator pos:line="62" pos:column="22">&amp;<pos:position pos:line="62" pos:column="27"/></operator><name pos:line="62" pos:column="23">res<pos:position pos:line="62" pos:column="26"/></name></expr></argument>)<pos:position pos:line="62" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
  <return pos:line="63" pos:column="3">return <expr><operator pos:line="63" pos:column="10">(<pos:position pos:line="63" pos:column="11"/></operator><literal type="number" pos:line="63" pos:column="11">0<pos:position pos:line="63" pos:column="12"/></literal><operator pos:line="63" pos:column="12">)<pos:position pos:line="63" pos:column="13"/></operator></expr>;<pos:position pos:line="63" pos:column="14"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

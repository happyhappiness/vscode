<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1354_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">procfs_iterate<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">int<pos:position pos:line="2" pos:column="19"/></name></type> <name pos:line="2" pos:column="20">sk<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buffer<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">1024<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">device<pos:position pos:line="5" pos:column="21"/></name></decl>, <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="24">dummy<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">FILE<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">fh<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">status<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">num_success<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">num_fail<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
	
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">fh<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <call><name pos:line="11" pos:column="19">fopen<pos:position pos:line="11" pos:column="24"/></name> <argument_list pos:line="11" pos:column="25">(<argument><expr><literal type="string" pos:line="11" pos:column="26">"/proc/net/dev"<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="43">"r"<pos:position pos:line="11" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call><operator pos:line="11" pos:column="47">)<pos:position pos:line="11" pos:column="48"/></operator> <operator pos:line="11" pos:column="49">==<pos:position pos:line="11" pos:column="51"/></operator> <name pos:line="11" pos:column="52">NULL<pos:position pos:line="11" pos:column="56"/></name></expr>)<pos:position pos:line="11" pos:column="57"/></condition><then pos:line="11" pos:column="57">
	<block pos:line="12" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">WARNING<pos:position pos:line="13" pos:column="24"/></name> <argument_list pos:line="13" pos:column="25">(<argument><expr><literal type="string" pos:line="13" pos:column="26">"madwifi plugin: opening /proc/net/dev failed"<pos:position pos:line="13" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="74"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="17" pos:column="9">num_success<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <literal type="number" pos:line="17" pos:column="23">0<pos:position pos:line="17" pos:column="24"/></literal></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">num_fail<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <literal type="number" pos:line="18" pos:column="20">0<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
	<while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><call><name pos:line="19" pos:column="16">fgets<pos:position pos:line="19" pos:column="21"/></name> <argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">buffer<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="31">sizeof <argument_list pos:line="19" pos:column="38">(<argument><expr><name pos:line="19" pos:column="39">buffer<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="19" pos:column="48">fh<pos:position pos:line="19" pos:column="50"/></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call> <operator pos:line="19" pos:column="52">!=<pos:position pos:line="19" pos:column="54"/></operator> <name pos:line="19" pos:column="55">NULL<pos:position pos:line="19" pos:column="59"/></name></expr>)<pos:position pos:line="19" pos:column="60"/></condition>
	<block pos:line="20" pos:column="9">{
		<expr_stmt><expr><name pos:line="21" pos:column="17">dummy<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <call><name pos:line="21" pos:column="25">strchr<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">buffer<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="40">':'<pos:position pos:line="21" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">dummy<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">==<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="30">NULL<pos:position pos:line="22" pos:column="34"/></name></expr>)<pos:position pos:line="22" pos:column="35"/></condition><then pos:line="22" pos:column="35">
			<block type="pseudo"><continue pos:line="23" pos:column="25">continue;<pos:position pos:line="23" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name><name pos:line="24" pos:column="17">dummy<pos:position pos:line="24" pos:column="22"/></name><index pos:line="24" pos:column="22">[<expr><literal type="number" pos:line="24" pos:column="23">0<pos:position pos:line="24" pos:column="24"/></literal></expr>]<pos:position pos:line="24" pos:column="25"/></index></name> <operator pos:line="24" pos:column="26">=<pos:position pos:line="24" pos:column="27"/></operator> <literal type="number" pos:line="24" pos:column="28">0<pos:position pos:line="24" pos:column="29"/></literal></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>

		<expr_stmt><expr><name pos:line="26" pos:column="17">device<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <name pos:line="26" pos:column="26">buffer<pos:position pos:line="26" pos:column="32"/></name></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>
		<while pos:line="27" pos:column="17">while <condition pos:line="27" pos:column="23">(<expr><name><name pos:line="27" pos:column="24">device<pos:position pos:line="27" pos:column="30"/></name><index pos:line="27" pos:column="30">[<expr><literal type="number" pos:line="27" pos:column="31">0<pos:position pos:line="27" pos:column="32"/></literal></expr>]<pos:position pos:line="27" pos:column="33"/></index></name> <operator pos:line="27" pos:column="34">==<pos:position pos:line="27" pos:column="36"/></operator> <literal type="char" pos:line="27" pos:column="37">' '<pos:position pos:line="27" pos:column="40"/></literal></expr>)<pos:position pos:line="27" pos:column="41"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="25">device<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">++<pos:position pos:line="28" pos:column="33"/></operator></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt></block></while>

		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name><name pos:line="30" pos:column="21">device<pos:position pos:line="30" pos:column="27"/></name><index pos:line="30" pos:column="27">[<expr><literal type="number" pos:line="30" pos:column="28">0<pos:position pos:line="30" pos:column="29"/></literal></expr>]<pos:position pos:line="30" pos:column="30"/></index></name> <operator pos:line="30" pos:column="31">==<pos:position pos:line="30" pos:column="33"/></operator> <literal type="number" pos:line="30" pos:column="34">0<pos:position pos:line="30" pos:column="35"/></literal></expr>)<pos:position pos:line="30" pos:column="36"/></condition><then pos:line="30" pos:column="36">
			<block type="pseudo"><continue pos:line="31" pos:column="25">continue;<pos:position pos:line="31" pos:column="34"/></continue></block></then></if>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><call><name pos:line="33" pos:column="21">ignorelist_match<pos:position pos:line="33" pos:column="37"/></name> <argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">ignorelist<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">device<pos:position pos:line="33" pos:column="57"/></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call> <operator pos:line="33" pos:column="59">!=<pos:position pos:line="33" pos:column="61"/></operator> <literal type="number" pos:line="33" pos:column="62">0<pos:position pos:line="33" pos:column="63"/></literal></expr>)<pos:position pos:line="33" pos:column="64"/></condition><then pos:line="33" pos:column="64">
			<block type="pseudo"><continue pos:line="34" pos:column="25">continue;<pos:position pos:line="34" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="36" pos:column="17">status<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <call><name pos:line="36" pos:column="26">process_device<pos:position pos:line="36" pos:column="40"/></name> <argument_list pos:line="36" pos:column="41">(<argument><expr><name pos:line="36" pos:column="42">sk<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="46">device<pos:position pos:line="36" pos:column="52"/></name></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="54"/></expr_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">status<pos:position pos:line="37" pos:column="27"/></name> <operator pos:line="37" pos:column="28">!=<pos:position pos:line="37" pos:column="30"/></operator> <literal type="number" pos:line="37" pos:column="31">0<pos:position pos:line="37" pos:column="32"/></literal></expr>)<pos:position pos:line="37" pos:column="33"/></condition><then pos:line="37" pos:column="33">
		<block pos:line="38" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">ERROR<pos:position pos:line="39" pos:column="30"/></name> <argument_list pos:line="39" pos:column="31">(<argument><expr><literal type="string" pos:line="39" pos:column="32">"madwifi plugin: Processing interface "<pos:position pos:line="39" pos:column="71"/></literal>
					<literal type="string" pos:line="40" pos:column="41">"%s failed."<pos:position pos:line="40" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="55">device<pos:position pos:line="40" pos:column="61"/></name></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><name pos:line="41" pos:column="25">num_fail<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">++<pos:position pos:line="41" pos:column="35"/></operator></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="42" pos:column="18"/></block></then>
		<else pos:line="43" pos:column="17">else
		<block pos:line="44" pos:column="17">{
			<expr_stmt><expr><name pos:line="45" pos:column="25">num_success<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">++<pos:position pos:line="45" pos:column="38"/></operator></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="46" pos:column="18"/></block></else></if>
	}<pos:position pos:line="47" pos:column="10"/></block></while> <comment type="block" pos:line="47" pos:column="11">/* while (fgets) */</comment>

	<expr_stmt><expr><call><name pos:line="49" pos:column="9">fclose<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">fh<pos:position pos:line="49" pos:column="18"/></name></expr></argument>)<pos:position pos:line="49" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="20"/></expr_stmt>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">(<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">num_success<pos:position pos:line="51" pos:column="25"/></name> <operator pos:line="51" pos:column="26">==<pos:position pos:line="51" pos:column="28"/></operator> <literal type="number" pos:line="51" pos:column="29">0<pos:position pos:line="51" pos:column="30"/></literal><operator pos:line="51" pos:column="30">)<pos:position pos:line="51" pos:column="31"/></operator> <operator pos:line="51" pos:column="32">&amp;&amp;<pos:position pos:line="51" pos:column="42"/></operator> <operator pos:line="51" pos:column="35">(<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="36">num_fail<pos:position pos:line="51" pos:column="44"/></name> <operator pos:line="51" pos:column="45">!=<pos:position pos:line="51" pos:column="47"/></operator> <literal type="number" pos:line="51" pos:column="48">0<pos:position pos:line="51" pos:column="49"/></literal><operator pos:line="51" pos:column="49">)<pos:position pos:line="51" pos:column="50"/></operator></expr>)<pos:position pos:line="51" pos:column="51"/></condition><then pos:line="51" pos:column="51">
		<block type="pseudo"><return pos:line="52" pos:column="17">return <expr><operator pos:line="52" pos:column="24">(<pos:position pos:line="52" pos:column="25"/></operator><operator pos:line="52" pos:column="25">-<pos:position pos:line="52" pos:column="26"/></operator><literal type="number" pos:line="52" pos:column="26">1<pos:position pos:line="52" pos:column="27"/></literal><operator pos:line="52" pos:column="27">)<pos:position pos:line="52" pos:column="28"/></operator></expr>;<pos:position pos:line="52" pos:column="29"/></return></block></then></if>
	<return pos:line="53" pos:column="9">return <expr><literal type="number" pos:line="53" pos:column="16">0<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

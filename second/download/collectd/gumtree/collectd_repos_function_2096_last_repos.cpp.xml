<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2096_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">mb_data_t<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">data_get_by_name<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">mb_data_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">src<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="52">/* {{{ */</comment>
                                   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">name<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list> <block pos:line="2" pos:column="54">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">name<pos:position pos:line="3" pos:column="11"/></name> <operator pos:line="3" pos:column="12">==<pos:position pos:line="3" pos:column="14"/></operator> <name pos:line="3" pos:column="15">NULL<pos:position pos:line="3" pos:column="19"/></name></expr>)<pos:position pos:line="3" pos:column="20"/></condition><then pos:line="3" pos:column="20">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><name pos:line="4" pos:column="12">NULL<pos:position pos:line="4" pos:column="16"/></name></expr>;<pos:position pos:line="4" pos:column="17"/></return></block></then></if>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><decl><type><name pos:line="6" pos:column="8">mb_data_t<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">ptr<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><name pos:line="6" pos:column="25">src<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></init> <condition><expr><name pos:line="6" pos:column="30">ptr<pos:position pos:line="6" pos:column="33"/></name> <operator pos:line="6" pos:column="34">!=<pos:position pos:line="6" pos:column="36"/></operator> <name pos:line="6" pos:column="37">NULL<pos:position pos:line="6" pos:column="41"/></name></expr>;<pos:position pos:line="6" pos:column="42"/></condition> <incr><expr><name pos:line="6" pos:column="43">ptr<pos:position pos:line="6" pos:column="46"/></name> <operator pos:line="6" pos:column="47">=<pos:position pos:line="6" pos:column="48"/></operator> <name><name pos:line="6" pos:column="49">ptr<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">-&gt;<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="54">next<pos:position pos:line="6" pos:column="58"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="59"/></control>
    <block type="pseudo"><if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">strcasecmp<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name><name pos:line="7" pos:column="20">ptr<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">name<pos:position pos:line="7" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="31">name<pos:position pos:line="7" pos:column="35"/></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call> <operator pos:line="7" pos:column="37">==<pos:position pos:line="7" pos:column="39"/></operator> <literal type="number" pos:line="7" pos:column="40">0<pos:position pos:line="7" pos:column="41"/></literal></expr>)<pos:position pos:line="7" pos:column="42"/></condition><then pos:line="7" pos:column="42">
      <block type="pseudo"><return pos:line="8" pos:column="7">return <expr><name pos:line="8" pos:column="14">ptr<pos:position pos:line="8" pos:column="17"/></name></expr>;<pos:position pos:line="8" pos:column="18"/></return></block></then></if></block></for>

  <return pos:line="10" pos:column="3">return <expr><name pos:line="10" pos:column="10">NULL<pos:position pos:line="10" pos:column="14"/></name></expr>;<pos:position pos:line="10" pos:column="15"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

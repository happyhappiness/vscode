<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1346_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">swap_config<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">oconfig_item_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">ci<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list> <comment type="block" pos:line="1" pos:column="44">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <for pos:line="3" pos:column="3">for <control pos:line="3" pos:column="7">(<init><decl><type><name pos:line="3" pos:column="8">int<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">i<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><literal type="number" pos:line="3" pos:column="16">0<pos:position pos:line="3" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></init> <condition><expr><name pos:line="3" pos:column="19">i<pos:position pos:line="3" pos:column="20"/></name> <operator pos:line="3" pos:column="21">&lt;<pos:position pos:line="3" pos:column="25"/></operator> <name><name pos:line="3" pos:column="23">ci<pos:position pos:line="3" pos:column="25"/></name><operator pos:line="3" pos:column="25">-&gt;<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="27">children_num<pos:position pos:line="3" pos:column="39"/></name></name></expr>;<pos:position pos:line="3" pos:column="40"/></condition> <incr><expr><name pos:line="3" pos:column="41">i<pos:position pos:line="3" pos:column="42"/></name><operator pos:line="3" pos:column="42">++<pos:position pos:line="3" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="3" pos:column="45"/></control> <block pos:line="3" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">oconfig_item_t<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">child<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name><name pos:line="4" pos:column="29">ci<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">children<pos:position pos:line="4" pos:column="41"/></name></name> <operator pos:line="4" pos:column="42">+<pos:position pos:line="4" pos:column="43"/></operator> <name pos:line="4" pos:column="44">i<pos:position pos:line="4" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">strcasecmp<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">(<argument><expr><literal type="string" pos:line="5" pos:column="20">"ReportBytes"<pos:position pos:line="5" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="35">child<pos:position pos:line="5" pos:column="40"/></name><operator pos:line="5" pos:column="40">-&gt;<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="42">key<pos:position pos:line="5" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call> <operator pos:line="5" pos:column="47">==<pos:position pos:line="5" pos:column="49"/></operator> <literal type="number" pos:line="5" pos:column="50">0<pos:position pos:line="5" pos:column="51"/></literal></expr>)<pos:position pos:line="5" pos:column="52"/></condition><then pos:line="5" pos:column="52">
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">KERNEL_LINUX<pos:position pos:line="6" pos:column="17"/></name></expr></cpp:if>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="7">cf_util_get_boolean<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">child<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="34">&amp;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="35">report_bytes<pos:position pos:line="7" pos:column="47"/></name></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="49"/></expr_stmt></block></then></if>
<cpp:else pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">else<pos:position pos:line="8" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="9" pos:column="7">WARNING<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><literal type="string" pos:line="9" pos:column="15">"swap plugin: The \"ReportBytes\" option "<pos:position pos:line="9" pos:column="57"/></literal>
              <literal type="string" pos:line="10" pos:column="15">"is only valid under Linux. "<pos:position pos:line="10" pos:column="44"/></literal>
              <literal type="string" pos:line="11" pos:column="15">"The option is going to be ignored."<pos:position pos:line="11" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
    <elseif pos:line="13" pos:column="5">else <if pos:line="13" pos:column="10">if <condition pos:line="13" pos:column="13">(<expr><call><name pos:line="13" pos:column="14">strcasecmp<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><literal type="string" pos:line="13" pos:column="25">"ReportByDevice"<pos:position pos:line="13" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="43">child<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">-&gt;<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="50">key<pos:position pos:line="13" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call> <operator pos:line="13" pos:column="55">==<pos:position pos:line="13" pos:column="57"/></operator> <literal type="number" pos:line="13" pos:column="58">0<pos:position pos:line="13" pos:column="59"/></literal></expr>)<pos:position pos:line="13" pos:column="60"/></condition><then pos:line="13" pos:column="60">
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">SWAP_HAVE_REPORT_BY_DEVICE<pos:position pos:line="14" pos:column="31"/></name></expr></cpp:if>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="7">cf_util_get_boolean<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">child<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="34">&amp;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="35">report_by_device<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt></block></then></if></elseif>
<cpp:else pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">else<pos:position pos:line="16" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">WARNING<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><literal type="string" pos:line="17" pos:column="15">"swap plugin: The \"ReportByDevice\" option "<pos:position pos:line="17" pos:column="60"/></literal>
              <literal type="string" pos:line="18" pos:column="15">"is not supported on this platform. "<pos:position pos:line="18" pos:column="52"/></literal>
              <literal type="string" pos:line="19" pos:column="15">"The option is going to be ignored."<pos:position pos:line="19" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="20" pos:column="8">/* SWAP_HAVE_REPORT_BY_DEVICE */</comment>
    <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><call><name pos:line="21" pos:column="14">strcasecmp<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><literal type="string" pos:line="21" pos:column="25">"ValuesAbsolute"<pos:position pos:line="21" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="43">child<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">-&gt;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="50">key<pos:position pos:line="21" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call> <operator pos:line="21" pos:column="55">==<pos:position pos:line="21" pos:column="57"/></operator> <literal type="number" pos:line="21" pos:column="58">0<pos:position pos:line="21" pos:column="59"/></literal></expr>)<pos:position pos:line="21" pos:column="60"/></condition><then pos:line="21" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="7">cf_util_get_boolean<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">child<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="34">&amp;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="35">values_absolute<pos:position pos:line="22" pos:column="50"/></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><call><name pos:line="23" pos:column="14">strcasecmp<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><literal type="string" pos:line="23" pos:column="25">"ValuesPercentage"<pos:position pos:line="23" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="45">child<pos:position pos:line="23" pos:column="50"/></name><operator pos:line="23" pos:column="50">-&gt;<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="52">key<pos:position pos:line="23" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call> <operator pos:line="23" pos:column="57">==<pos:position pos:line="23" pos:column="59"/></operator> <literal type="number" pos:line="23" pos:column="60">0<pos:position pos:line="23" pos:column="61"/></literal></expr>)<pos:position pos:line="23" pos:column="62"/></condition><then pos:line="23" pos:column="62">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="7">cf_util_get_boolean<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">child<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="34">&amp;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="35">values_percentage<pos:position pos:line="24" pos:column="52"/></name></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <else pos:line="25" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="7">WARNING<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><literal type="string" pos:line="26" pos:column="15">"swap plugin: Unknown config option: \"%s\""<pos:position pos:line="26" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="61">child<pos:position pos:line="26" pos:column="66"/></name><operator pos:line="26" pos:column="66">-&gt;<pos:position pos:line="26" pos:column="71"/></operator><name pos:line="26" pos:column="68">key<pos:position pos:line="26" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="73"/></expr_stmt></block></else>
  }<pos:position pos:line="27" pos:column="4"/></block></for>

  <return pos:line="29" pos:column="3">return <expr><operator pos:line="29" pos:column="10">(<pos:position pos:line="29" pos:column="11"/></operator><literal type="number" pos:line="29" pos:column="11">0<pos:position pos:line="29" pos:column="12"/></literal><operator pos:line="29" pos:column="12">)<pos:position pos:line="29" pos:column="13"/></operator></expr>;<pos:position pos:line="29" pos:column="14"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

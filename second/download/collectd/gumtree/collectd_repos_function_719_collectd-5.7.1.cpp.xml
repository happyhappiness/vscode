<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_719_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cjni_match_target_create<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">oconfig_item_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">ci<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="63">/* {{{ */</comment>
                                    <parameter><decl><type><name pos:line="2" pos:column="37">void<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier><modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">user_data<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list> <block pos:line="2" pos:column="55">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">JNIEnv<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">jvm_env<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cjni_callback_info_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">cbi_ret<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">cjni_callback_info_t<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">cbi_factory<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">name<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">jobject<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">o_ci<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">jobject<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">o_tmp<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">type<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">cbi_ret<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">NULL<pos:position pos:line="11" pos:column="17"/></name></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">o_ci<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <name pos:line="12" pos:column="10">NULL<pos:position pos:line="12" pos:column="14"/></name></expr>;<pos:position pos:line="12" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">jvm_env<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <name pos:line="13" pos:column="13">NULL<pos:position pos:line="13" pos:column="17"/></name></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>

<cpp:define pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">define<pos:position pos:line="15" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="15" pos:column="9">BAIL_OUT<pos:position pos:line="15" pos:column="17"/></name><parameter_list pos:line="15" pos:column="17">(<parameter><type><name pos:line="15" pos:column="18">status<pos:position pos:line="15" pos:column="24"/></name></type></parameter>)<pos:position pos:line="15" pos:column="25"/></parameter_list></cpp:macro>                                                       \
  <cpp:value pos:line="16" pos:column="3">if (cbi_ret != NULL) {                                                       \
    free(cbi_ret-&gt;name);                                                       \
    if ((jvm_env != NULL) &amp;&amp; (cbi_ret-&gt;object != NULL))                        \
      (*jvm_env)-&gt;DeleteLocalRef(jvm_env, cbi_ret-&gt;object);                    \
  }                                                                            \
  free(cbi_ret);                                                               \
  if (o_ci != NULL)                                                            \
    (*jvm_env)-&gt;DeleteLocalRef(jvm_env, o_ci);                                 \
  cjni_thread_detach();                                                        \
  return (status)<pos:position pos:line="25" pos:column="18"/></cpp:value></cpp:define>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">jvm<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">==<pos:position pos:line="27" pos:column="13"/></operator> <name pos:line="27" pos:column="14">NULL<pos:position pos:line="27" pos:column="18"/></name></expr>)<pos:position pos:line="27" pos:column="19"/></condition><then pos:line="27" pos:column="19"> <block pos:line="27" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ERROR<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><literal type="string" pos:line="28" pos:column="11">"java plugin: cjni_read: jvm == NULL"<pos:position pos:line="28" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><operator pos:line="29" pos:column="13">-<pos:position pos:line="29" pos:column="14"/></operator><literal type="number" pos:line="29" pos:column="14">1<pos:position pos:line="29" pos:column="15"/></literal><operator pos:line="29" pos:column="15">)<pos:position pos:line="29" pos:column="16"/></operator></expr>;<pos:position pos:line="29" pos:column="17"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="32" pos:column="3">jvm_env<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <call><name pos:line="32" pos:column="13">cjni_thread_attach<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">()<pos:position pos:line="32" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name pos:line="33" pos:column="7">jvm_env<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">==<pos:position pos:line="33" pos:column="17"/></operator> <name pos:line="33" pos:column="18">NULL<pos:position pos:line="33" pos:column="22"/></name></expr>)<pos:position pos:line="33" pos:column="23"/></condition><then pos:line="33" pos:column="23">
    <block type="pseudo"><return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><operator pos:line="34" pos:column="13">-<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal><operator pos:line="34" pos:column="15">)<pos:position pos:line="34" pos:column="16"/></operator></expr>;<pos:position pos:line="34" pos:column="17"/></return></block></then></if>

  <comment type="block" pos:line="36" pos:column="3">/* Find out whether to create a match or a target. */</comment>
  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><call><name pos:line="37" pos:column="7">strcasecmp<pos:position pos:line="37" pos:column="17"/></name><argument_list pos:line="37" pos:column="17">(<argument><expr><literal type="string" pos:line="37" pos:column="18">"Match"<pos:position pos:line="37" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="27">ci<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">-&gt;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="31">key<pos:position pos:line="37" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></call> <operator pos:line="37" pos:column="36">==<pos:position pos:line="37" pos:column="38"/></operator> <literal type="number" pos:line="37" pos:column="39">0<pos:position pos:line="37" pos:column="40"/></literal></expr>)<pos:position pos:line="37" pos:column="41"/></condition><then pos:line="37" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="5">type<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <name pos:line="38" pos:column="12">CB_TYPE_MATCH<pos:position pos:line="38" pos:column="25"/></name></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt></block></then>
  <elseif pos:line="39" pos:column="3">else <if pos:line="39" pos:column="8">if <condition pos:line="39" pos:column="11">(<expr><call><name pos:line="39" pos:column="12">strcasecmp<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><literal type="string" pos:line="39" pos:column="23">"Target"<pos:position pos:line="39" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="33">ci<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">-&gt;<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="37">key<pos:position pos:line="39" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call> <operator pos:line="39" pos:column="42">==<pos:position pos:line="39" pos:column="44"/></operator> <literal type="number" pos:line="39" pos:column="45">0<pos:position pos:line="39" pos:column="46"/></literal></expr>)<pos:position pos:line="39" pos:column="47"/></condition><then pos:line="39" pos:column="47">
    <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="5">type<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <name pos:line="40" pos:column="12">CB_TYPE_TARGET<pos:position pos:line="40" pos:column="26"/></name></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt></block></then></if></elseif>
  <else pos:line="41" pos:column="3">else <block pos:line="41" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">ERROR<pos:position pos:line="42" pos:column="10"/></name><argument_list pos:line="42" pos:column="10">(<argument><expr><literal type="string" pos:line="42" pos:column="11">"java plugin: cjni_match_target_create: Can't figure out whether "<pos:position pos:line="42" pos:column="77"/></literal>
          <literal type="string" pos:line="43" pos:column="11">"to create a match or a target."<pos:position pos:line="43" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">BAIL_OUT<pos:position pos:line="44" pos:column="13"/></name><argument_list pos:line="44" pos:column="13">(<argument><expr><operator pos:line="44" pos:column="14">-<pos:position pos:line="44" pos:column="15"/></operator><literal type="number" pos:line="44" pos:column="15">1<pos:position pos:line="44" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="47" pos:column="3">/* This is the name of the match we should create. */</comment>
  <expr_stmt><expr><name pos:line="48" pos:column="3">name<pos:position pos:line="48" pos:column="7"/></name> <operator pos:line="48" pos:column="8">=<pos:position pos:line="48" pos:column="9"/></operator> <name><name pos:line="48" pos:column="10">ci<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">values<pos:position pos:line="48" pos:column="20"/></name><index pos:line="48" pos:column="20">[<expr><literal type="number" pos:line="48" pos:column="21">0<pos:position pos:line="48" pos:column="22"/></literal></expr>]<pos:position pos:line="48" pos:column="23"/></index></name><operator pos:line="48" pos:column="23">.<pos:position pos:line="48" pos:column="24"/></operator><name><name pos:line="48" pos:column="24">value<pos:position pos:line="48" pos:column="29"/></name><operator pos:line="48" pos:column="29">.<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="30">string<pos:position pos:line="48" pos:column="36"/></name></name></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="50" pos:column="3">/* Lets see if we have a matching factory here.. */</comment>
  <expr_stmt><expr><name pos:line="51" pos:column="3">cbi_factory<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">=<pos:position pos:line="51" pos:column="16"/></operator> <name pos:line="51" pos:column="17">NULL<pos:position pos:line="51" pos:column="21"/></name></expr>;<pos:position pos:line="51" pos:column="22"/></expr_stmt>
  <for pos:line="52" pos:column="3">for <control pos:line="52" pos:column="7">(<init><decl><type><name pos:line="52" pos:column="8">size_t<pos:position pos:line="52" pos:column="14"/></name></type> <name pos:line="52" pos:column="15">i<pos:position pos:line="52" pos:column="16"/></name> <init pos:line="52" pos:column="17">= <expr><literal type="number" pos:line="52" pos:column="19">0<pos:position pos:line="52" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="52" pos:column="21"/></init> <condition><expr><name pos:line="52" pos:column="22">i<pos:position pos:line="52" pos:column="23"/></name> <operator pos:line="52" pos:column="24">&lt;<pos:position pos:line="52" pos:column="28"/></operator> <name pos:line="52" pos:column="26">java_callbacks_num<pos:position pos:line="52" pos:column="44"/></name></expr>;<pos:position pos:line="52" pos:column="45"/></condition> <incr><expr><name pos:line="52" pos:column="46">i<pos:position pos:line="52" pos:column="47"/></name><operator pos:line="52" pos:column="47">++<pos:position pos:line="52" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="52" pos:column="50"/></control> <block pos:line="52" pos:column="51">{
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name><name pos:line="53" pos:column="9">java_callbacks<pos:position pos:line="53" pos:column="23"/></name><index pos:line="53" pos:column="23">[<expr><name pos:line="53" pos:column="24">i<pos:position pos:line="53" pos:column="25"/></name></expr>]<pos:position pos:line="53" pos:column="26"/></index></name><operator pos:line="53" pos:column="26">.<pos:position pos:line="53" pos:column="27"/></operator><name pos:line="53" pos:column="27">type<pos:position pos:line="53" pos:column="31"/></name> <operator pos:line="53" pos:column="32">!=<pos:position pos:line="53" pos:column="34"/></operator> <name pos:line="53" pos:column="35">type<pos:position pos:line="53" pos:column="39"/></name></expr>)<pos:position pos:line="53" pos:column="40"/></condition><then pos:line="53" pos:column="40">
      <block type="pseudo"><continue pos:line="54" pos:column="7">continue;<pos:position pos:line="54" pos:column="16"/></continue></block></then></if>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><call><name pos:line="56" pos:column="9">strcmp<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">(<argument><expr><name pos:line="56" pos:column="16">name<pos:position pos:line="56" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="22">java_callbacks<pos:position pos:line="56" pos:column="36"/></name><index pos:line="56" pos:column="36">[<expr><name pos:line="56" pos:column="37">i<pos:position pos:line="56" pos:column="38"/></name></expr>]<pos:position pos:line="56" pos:column="39"/></index></name><operator pos:line="56" pos:column="39">.<pos:position pos:line="56" pos:column="40"/></operator><name pos:line="56" pos:column="40">name<pos:position pos:line="56" pos:column="44"/></name></expr></argument>)<pos:position pos:line="56" pos:column="45"/></argument_list></call> <operator pos:line="56" pos:column="46">!=<pos:position pos:line="56" pos:column="48"/></operator> <literal type="number" pos:line="56" pos:column="49">0<pos:position pos:line="56" pos:column="50"/></literal></expr>)<pos:position pos:line="56" pos:column="51"/></condition><then pos:line="56" pos:column="51">
      <block type="pseudo"><continue pos:line="57" pos:column="7">continue;<pos:position pos:line="57" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="59" pos:column="5">cbi_factory<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <name pos:line="59" pos:column="19">java_callbacks<pos:position pos:line="59" pos:column="33"/></name> <operator pos:line="59" pos:column="34">+<pos:position pos:line="59" pos:column="35"/></operator> <name pos:line="59" pos:column="36">i<pos:position pos:line="59" pos:column="37"/></name></expr>;<pos:position pos:line="59" pos:column="38"/></expr_stmt>
    <break pos:line="60" pos:column="5">break;<pos:position pos:line="60" pos:column="11"/></break>
  }<pos:position pos:line="61" pos:column="4"/></block></for>

  <comment type="block" pos:line="63" pos:column="3">/* Nope, no factory for that name.. */</comment>
  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><name pos:line="64" pos:column="7">cbi_factory<pos:position pos:line="64" pos:column="18"/></name> <operator pos:line="64" pos:column="19">==<pos:position pos:line="64" pos:column="21"/></operator> <name pos:line="64" pos:column="22">NULL<pos:position pos:line="64" pos:column="26"/></name></expr>)<pos:position pos:line="64" pos:column="27"/></condition><then pos:line="64" pos:column="27"> <block pos:line="64" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">ERROR<pos:position pos:line="65" pos:column="10"/></name><argument_list pos:line="65" pos:column="10">(<argument><expr><literal type="string" pos:line="65" pos:column="11">"java plugin: cjni_match_target_create: "<pos:position pos:line="65" pos:column="52"/></literal>
          <literal type="string" pos:line="66" pos:column="11">"No such match factory registered: %s"<pos:position pos:line="66" pos:column="49"/></literal></expr></argument>,
          <argument><expr><name pos:line="67" pos:column="11">name<pos:position pos:line="67" pos:column="15"/></name></expr></argument>)<pos:position pos:line="67" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">BAIL_OUT<pos:position pos:line="68" pos:column="13"/></name><argument_list pos:line="68" pos:column="13">(<argument><expr><operator pos:line="68" pos:column="14">-<pos:position pos:line="68" pos:column="15"/></operator><literal type="number" pos:line="68" pos:column="15">1<pos:position pos:line="68" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="71" pos:column="3">/* We convert `ci' to its Java equivalent.. */</comment>
  <expr_stmt><expr><name pos:line="72" pos:column="3">o_ci<pos:position pos:line="72" pos:column="7"/></name> <operator pos:line="72" pos:column="8">=<pos:position pos:line="72" pos:column="9"/></operator> <call><name pos:line="72" pos:column="10">ctoj_oconfig_item<pos:position pos:line="72" pos:column="27"/></name><argument_list pos:line="72" pos:column="27">(<argument><expr><name pos:line="72" pos:column="28">jvm_env<pos:position pos:line="72" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="37">ci<pos:position pos:line="72" pos:column="39"/></name></expr></argument>)<pos:position pos:line="72" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="41"/></expr_stmt>
  <if pos:line="73" pos:column="3">if <condition pos:line="73" pos:column="6">(<expr><name pos:line="73" pos:column="7">o_ci<pos:position pos:line="73" pos:column="11"/></name> <operator pos:line="73" pos:column="12">==<pos:position pos:line="73" pos:column="14"/></operator> <name pos:line="73" pos:column="15">NULL<pos:position pos:line="73" pos:column="19"/></name></expr>)<pos:position pos:line="73" pos:column="20"/></condition><then pos:line="73" pos:column="20"> <block pos:line="73" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">ERROR<pos:position pos:line="74" pos:column="10"/></name><argument_list pos:line="74" pos:column="10">(<argument><expr><literal type="string" pos:line="74" pos:column="11">"java plugin: cjni_match_target_create: "<pos:position pos:line="74" pos:column="52"/></literal>
          <literal type="string" pos:line="75" pos:column="11">"ctoj_oconfig_item failed."<pos:position pos:line="75" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">BAIL_OUT<pos:position pos:line="76" pos:column="13"/></name><argument_list pos:line="76" pos:column="13">(<argument><expr><operator pos:line="76" pos:column="14">-<pos:position pos:line="76" pos:column="15"/></operator><literal type="number" pos:line="76" pos:column="15">1<pos:position pos:line="76" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="77" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="79" pos:column="3">/* Allocate a new callback info structure. This is going to be our user_data
   * pointer. */</comment>
  <expr_stmt><expr><name pos:line="81" pos:column="3">cbi_ret<pos:position pos:line="81" pos:column="10"/></name> <operator pos:line="81" pos:column="11">=<pos:position pos:line="81" pos:column="12"/></operator> <call><name pos:line="81" pos:column="13">calloc<pos:position pos:line="81" pos:column="19"/></name><argument_list pos:line="81" pos:column="19">(<argument><expr><literal type="number" pos:line="81" pos:column="20">1<pos:position pos:line="81" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="81" pos:column="23">sizeof<argument_list pos:line="81" pos:column="29">(<argument><expr><operator pos:line="81" pos:column="30">*<pos:position pos:line="81" pos:column="31"/></operator><name pos:line="81" pos:column="31">cbi_ret<pos:position pos:line="81" pos:column="38"/></name></expr></argument>)<pos:position pos:line="81" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="81" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="41"/></expr_stmt>
  <if pos:line="82" pos:column="3">if <condition pos:line="82" pos:column="6">(<expr><name pos:line="82" pos:column="7">cbi_ret<pos:position pos:line="82" pos:column="14"/></name> <operator pos:line="82" pos:column="15">==<pos:position pos:line="82" pos:column="17"/></operator> <name pos:line="82" pos:column="18">NULL<pos:position pos:line="82" pos:column="22"/></name></expr>)<pos:position pos:line="82" pos:column="23"/></condition><then pos:line="82" pos:column="23"> <block pos:line="82" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">ERROR<pos:position pos:line="83" pos:column="10"/></name><argument_list pos:line="83" pos:column="10">(<argument><expr><literal type="string" pos:line="83" pos:column="11">"java plugin: cjni_match_target_create: calloc failed."<pos:position pos:line="83" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">BAIL_OUT<pos:position pos:line="84" pos:column="13"/></name><argument_list pos:line="84" pos:column="13">(<argument><expr><operator pos:line="84" pos:column="14">-<pos:position pos:line="84" pos:column="15"/></operator><literal type="number" pos:line="84" pos:column="15">1<pos:position pos:line="84" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="85" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="87" pos:column="3">cbi_ret<pos:position pos:line="87" pos:column="10"/></name><operator pos:line="87" pos:column="10">-&gt;<pos:position pos:line="87" pos:column="15"/></operator><name pos:line="87" pos:column="12">object<pos:position pos:line="87" pos:column="18"/></name></name> <operator pos:line="87" pos:column="19">=<pos:position pos:line="87" pos:column="20"/></operator> <name pos:line="87" pos:column="21">NULL<pos:position pos:line="87" pos:column="25"/></name></expr>;<pos:position pos:line="87" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="88" pos:column="3">cbi_ret<pos:position pos:line="88" pos:column="10"/></name><operator pos:line="88" pos:column="10">-&gt;<pos:position pos:line="88" pos:column="15"/></operator><name pos:line="88" pos:column="12">type<pos:position pos:line="88" pos:column="16"/></name></name> <operator pos:line="88" pos:column="17">=<pos:position pos:line="88" pos:column="18"/></operator> <name pos:line="88" pos:column="19">type<pos:position pos:line="88" pos:column="23"/></name></expr>;<pos:position pos:line="88" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="90" pos:column="3">/* Lets fill the callback info structure.. First, the name: */</comment>
  <expr_stmt><expr><name><name pos:line="91" pos:column="3">cbi_ret<pos:position pos:line="91" pos:column="10"/></name><operator pos:line="91" pos:column="10">-&gt;<pos:position pos:line="91" pos:column="15"/></operator><name pos:line="91" pos:column="12">name<pos:position pos:line="91" pos:column="16"/></name></name> <operator pos:line="91" pos:column="17">=<pos:position pos:line="91" pos:column="18"/></operator> <call><name pos:line="91" pos:column="19">strdup<pos:position pos:line="91" pos:column="25"/></name><argument_list pos:line="91" pos:column="25">(<argument><expr><name pos:line="91" pos:column="26">name<pos:position pos:line="91" pos:column="30"/></name></expr></argument>)<pos:position pos:line="91" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="32"/></expr_stmt>
  <if pos:line="92" pos:column="3">if <condition pos:line="92" pos:column="6">(<expr><name><name pos:line="92" pos:column="7">cbi_ret<pos:position pos:line="92" pos:column="14"/></name><operator pos:line="92" pos:column="14">-&gt;<pos:position pos:line="92" pos:column="19"/></operator><name pos:line="92" pos:column="16">name<pos:position pos:line="92" pos:column="20"/></name></name> <operator pos:line="92" pos:column="21">==<pos:position pos:line="92" pos:column="23"/></operator> <name pos:line="92" pos:column="24">NULL<pos:position pos:line="92" pos:column="28"/></name></expr>)<pos:position pos:line="92" pos:column="29"/></condition><then pos:line="92" pos:column="29"> <block pos:line="92" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">ERROR<pos:position pos:line="93" pos:column="10"/></name><argument_list pos:line="93" pos:column="10">(<argument><expr><literal type="string" pos:line="93" pos:column="11">"java plugin: cjni_match_target_create: strdup failed."<pos:position pos:line="93" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="94" pos:column="5">BAIL_OUT<pos:position pos:line="94" pos:column="13"/></name><argument_list pos:line="94" pos:column="13">(<argument><expr><operator pos:line="94" pos:column="14">-<pos:position pos:line="94" pos:column="15"/></operator><literal type="number" pos:line="94" pos:column="15">1<pos:position pos:line="94" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="95" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="97" pos:column="3">/* Then call the factory method so it creates a new object for us. */</comment>
  <expr_stmt><expr><name pos:line="98" pos:column="3">o_tmp<pos:position pos:line="98" pos:column="8"/></name> <operator pos:line="98" pos:column="9">=<pos:position pos:line="98" pos:column="10"/></operator> <call><name><operator pos:line="98" pos:column="11">(<pos:position pos:line="98" pos:column="12"/></operator><operator pos:line="98" pos:column="12">*<pos:position pos:line="98" pos:column="13"/></operator><name pos:line="98" pos:column="13">jvm_env<pos:position pos:line="98" pos:column="20"/></name><operator pos:line="98" pos:column="20">)<pos:position pos:line="98" pos:column="21"/></operator><operator pos:line="98" pos:column="21">-&gt;<pos:position pos:line="98" pos:column="26"/></operator><name pos:line="98" pos:column="23">CallObjectMethod<pos:position pos:line="98" pos:column="39"/></name></name><argument_list pos:line="98" pos:column="39">(<argument><expr><name pos:line="98" pos:column="40">jvm_env<pos:position pos:line="98" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="49">cbi_factory<pos:position pos:line="98" pos:column="60"/></name><operator pos:line="98" pos:column="60">-&gt;<pos:position pos:line="98" pos:column="65"/></operator><name pos:line="98" pos:column="62">object<pos:position pos:line="98" pos:column="68"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="99" pos:column="40">cbi_factory<pos:position pos:line="99" pos:column="51"/></name><operator pos:line="99" pos:column="51">-&gt;<pos:position pos:line="99" pos:column="56"/></operator><name pos:line="99" pos:column="53">method<pos:position pos:line="99" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="61">o_ci<pos:position pos:line="99" pos:column="65"/></name></expr></argument>)<pos:position pos:line="99" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="67"/></expr_stmt>
  <if pos:line="100" pos:column="3">if <condition pos:line="100" pos:column="6">(<expr><name pos:line="100" pos:column="7">o_tmp<pos:position pos:line="100" pos:column="12"/></name> <operator pos:line="100" pos:column="13">==<pos:position pos:line="100" pos:column="15"/></operator> <name pos:line="100" pos:column="16">NULL<pos:position pos:line="100" pos:column="20"/></name></expr>)<pos:position pos:line="100" pos:column="21"/></condition><then pos:line="100" pos:column="21"> <block pos:line="100" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">ERROR<pos:position pos:line="101" pos:column="10"/></name><argument_list pos:line="101" pos:column="10">(<argument><expr><literal type="string" pos:line="101" pos:column="11">"java plugin: cjni_match_target_create: CallObjectMethod failed."<pos:position pos:line="101" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="102" pos:column="5">BAIL_OUT<pos:position pos:line="102" pos:column="13"/></name><argument_list pos:line="102" pos:column="13">(<argument><expr><operator pos:line="102" pos:column="14">-<pos:position pos:line="102" pos:column="15"/></operator><literal type="number" pos:line="102" pos:column="15">1<pos:position pos:line="102" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="103" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="105" pos:column="3">cbi_ret<pos:position pos:line="105" pos:column="10"/></name><operator pos:line="105" pos:column="10">-&gt;<pos:position pos:line="105" pos:column="15"/></operator><name pos:line="105" pos:column="12">object<pos:position pos:line="105" pos:column="18"/></name></name> <operator pos:line="105" pos:column="19">=<pos:position pos:line="105" pos:column="20"/></operator> <call><name><operator pos:line="105" pos:column="21">(<pos:position pos:line="105" pos:column="22"/></operator><operator pos:line="105" pos:column="22">*<pos:position pos:line="105" pos:column="23"/></operator><name pos:line="105" pos:column="23">jvm_env<pos:position pos:line="105" pos:column="30"/></name><operator pos:line="105" pos:column="30">)<pos:position pos:line="105" pos:column="31"/></operator><operator pos:line="105" pos:column="31">-&gt;<pos:position pos:line="105" pos:column="36"/></operator><name pos:line="105" pos:column="33">NewGlobalRef<pos:position pos:line="105" pos:column="45"/></name></name><argument_list pos:line="105" pos:column="45">(<argument><expr><name pos:line="105" pos:column="46">jvm_env<pos:position pos:line="105" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="55">o_tmp<pos:position pos:line="105" pos:column="60"/></name></expr></argument>)<pos:position pos:line="105" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="62"/></expr_stmt>
  <if pos:line="106" pos:column="3">if <condition pos:line="106" pos:column="6">(<expr><name pos:line="106" pos:column="7">o_tmp<pos:position pos:line="106" pos:column="12"/></name> <operator pos:line="106" pos:column="13">==<pos:position pos:line="106" pos:column="15"/></operator> <name pos:line="106" pos:column="16">NULL<pos:position pos:line="106" pos:column="20"/></name></expr>)<pos:position pos:line="106" pos:column="21"/></condition><then pos:line="106" pos:column="21"> <block pos:line="106" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="107" pos:column="5">ERROR<pos:position pos:line="107" pos:column="10"/></name><argument_list pos:line="107" pos:column="10">(<argument><expr><literal type="string" pos:line="107" pos:column="11">"java plugin: cjni_match_target_create: NewGlobalRef failed."<pos:position pos:line="107" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="108" pos:column="5">BAIL_OUT<pos:position pos:line="108" pos:column="13"/></name><argument_list pos:line="108" pos:column="13">(<argument><expr><operator pos:line="108" pos:column="14">-<pos:position pos:line="108" pos:column="15"/></operator><literal type="number" pos:line="108" pos:column="15">1<pos:position pos:line="108" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="109" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="111" pos:column="3">/* This is the class of the match. It is possibly different from the class of
   * the match-factory! */</comment>
  <expr_stmt><expr><name><name pos:line="113" pos:column="3">cbi_ret<pos:position pos:line="113" pos:column="10"/></name><operator pos:line="113" pos:column="10">-&gt;<pos:position pos:line="113" pos:column="15"/></operator><name pos:line="113" pos:column="12">class<pos:position pos:line="113" pos:column="17"/></name></name> <operator pos:line="113" pos:column="18">=<pos:position pos:line="113" pos:column="19"/></operator> <call><name><operator pos:line="113" pos:column="20">(<pos:position pos:line="113" pos:column="21"/></operator><operator pos:line="113" pos:column="21">*<pos:position pos:line="113" pos:column="22"/></operator><name pos:line="113" pos:column="22">jvm_env<pos:position pos:line="113" pos:column="29"/></name><operator pos:line="113" pos:column="29">)<pos:position pos:line="113" pos:column="30"/></operator><operator pos:line="113" pos:column="30">-&gt;<pos:position pos:line="113" pos:column="35"/></operator><name pos:line="113" pos:column="32">GetObjectClass<pos:position pos:line="113" pos:column="46"/></name></name><argument_list pos:line="113" pos:column="46">(<argument><expr><name pos:line="113" pos:column="47">jvm_env<pos:position pos:line="113" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="56">cbi_ret<pos:position pos:line="113" pos:column="63"/></name><operator pos:line="113" pos:column="63">-&gt;<pos:position pos:line="113" pos:column="68"/></operator><name pos:line="113" pos:column="65">object<pos:position pos:line="113" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="73"/></expr_stmt>
  <if pos:line="114" pos:column="3">if <condition pos:line="114" pos:column="6">(<expr><name><name pos:line="114" pos:column="7">cbi_ret<pos:position pos:line="114" pos:column="14"/></name><operator pos:line="114" pos:column="14">-&gt;<pos:position pos:line="114" pos:column="19"/></operator><name pos:line="114" pos:column="16">class<pos:position pos:line="114" pos:column="21"/></name></name> <operator pos:line="114" pos:column="22">==<pos:position pos:line="114" pos:column="24"/></operator> <name pos:line="114" pos:column="25">NULL<pos:position pos:line="114" pos:column="29"/></name></expr>)<pos:position pos:line="114" pos:column="30"/></condition><then pos:line="114" pos:column="30"> <block pos:line="114" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="115" pos:column="5">ERROR<pos:position pos:line="115" pos:column="10"/></name><argument_list pos:line="115" pos:column="10">(<argument><expr><literal type="string" pos:line="115" pos:column="11">"java plugin: cjni_match_target_create: GetObjectClass failed."<pos:position pos:line="115" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="116" pos:column="5">BAIL_OUT<pos:position pos:line="116" pos:column="13"/></name><argument_list pos:line="116" pos:column="13">(<argument><expr><operator pos:line="116" pos:column="14">-<pos:position pos:line="116" pos:column="15"/></operator><literal type="number" pos:line="116" pos:column="15">1<pos:position pos:line="116" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="117" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="119" pos:column="3">/* Lookup the `int match (DataSet, ValueList)' method. */</comment>
  <expr_stmt><expr><name><name pos:line="120" pos:column="3">cbi_ret<pos:position pos:line="120" pos:column="10"/></name><operator pos:line="120" pos:column="10">-&gt;<pos:position pos:line="120" pos:column="15"/></operator><name pos:line="120" pos:column="12">method<pos:position pos:line="120" pos:column="18"/></name></name> <operator pos:line="120" pos:column="19">=<pos:position pos:line="120" pos:column="20"/></operator> <call><name><operator pos:line="120" pos:column="21">(<pos:position pos:line="120" pos:column="22"/></operator><operator pos:line="120" pos:column="22">*<pos:position pos:line="120" pos:column="23"/></operator><name pos:line="120" pos:column="23">jvm_env<pos:position pos:line="120" pos:column="30"/></name><operator pos:line="120" pos:column="30">)<pos:position pos:line="120" pos:column="31"/></operator><operator pos:line="120" pos:column="31">-&gt;<pos:position pos:line="120" pos:column="36"/></operator><name pos:line="120" pos:column="33">GetMethodID<pos:position pos:line="120" pos:column="44"/></name></name><argument_list pos:line="120" pos:column="44">(
      <argument><expr><name pos:line="121" pos:column="7">jvm_env<pos:position pos:line="121" pos:column="14"/></name></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="16">cbi_ret<pos:position pos:line="121" pos:column="23"/></name><operator pos:line="121" pos:column="23">-&gt;<pos:position pos:line="121" pos:column="28"/></operator><name pos:line="121" pos:column="25">class<pos:position pos:line="121" pos:column="30"/></name></name></expr></argument>,
      <comment type="block" pos:line="122" pos:column="7">/* method name = */</comment> <argument><expr><ternary><condition><expr><operator pos:line="122" pos:column="27">(<pos:position pos:line="122" pos:column="28"/></operator><name pos:line="122" pos:column="28">type<pos:position pos:line="122" pos:column="32"/></name> <operator pos:line="122" pos:column="33">==<pos:position pos:line="122" pos:column="35"/></operator> <name pos:line="122" pos:column="36">CB_TYPE_MATCH<pos:position pos:line="122" pos:column="49"/></name><operator pos:line="122" pos:column="49">)<pos:position pos:line="122" pos:column="50"/></operator></expr> ?<pos:position pos:line="122" pos:column="52"/></condition><then pos:line="122" pos:column="52"> <expr><literal type="string" pos:line="122" pos:column="53">"match"<pos:position pos:line="122" pos:column="60"/></literal></expr> <pos:position pos:line="122" pos:column="61"/></then><else pos:line="122" pos:column="61">: <expr><literal type="string" pos:line="122" pos:column="63">"invoke"<pos:position pos:line="122" pos:column="71"/></literal></expr></else></ternary></expr></argument>,
      <argument><expr><literal type="string" pos:line="123" pos:column="7">"(Lorg/collectd/api/DataSet;Lorg/collectd/api/ValueList;)I"<pos:position pos:line="123" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="68"/></expr_stmt>
  <if pos:line="124" pos:column="3">if <condition pos:line="124" pos:column="6">(<expr><name><name pos:line="124" pos:column="7">cbi_ret<pos:position pos:line="124" pos:column="14"/></name><operator pos:line="124" pos:column="14">-&gt;<pos:position pos:line="124" pos:column="19"/></operator><name pos:line="124" pos:column="16">method<pos:position pos:line="124" pos:column="22"/></name></name> <operator pos:line="124" pos:column="23">==<pos:position pos:line="124" pos:column="25"/></operator> <name pos:line="124" pos:column="26">NULL<pos:position pos:line="124" pos:column="30"/></name></expr>)<pos:position pos:line="124" pos:column="31"/></condition><then pos:line="124" pos:column="31"> <block pos:line="124" pos:column="32">{
    <expr_stmt><expr><call><name pos:line="125" pos:column="5">ERROR<pos:position pos:line="125" pos:column="10"/></name><argument_list pos:line="125" pos:column="10">(<argument><expr><literal type="string" pos:line="125" pos:column="11">"java plugin: cjni_match_target_create: GetMethodID failed."<pos:position pos:line="125" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="126" pos:column="5">BAIL_OUT<pos:position pos:line="126" pos:column="13"/></name><argument_list pos:line="126" pos:column="13">(<argument><expr><operator pos:line="126" pos:column="14">-<pos:position pos:line="126" pos:column="15"/></operator><literal type="number" pos:line="126" pos:column="15">1<pos:position pos:line="126" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="127" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="129" pos:column="3">/* Return the newly created match via the user_data pointer. */</comment>
  <expr_stmt><expr><operator pos:line="130" pos:column="3">*<pos:position pos:line="130" pos:column="4"/></operator><name pos:line="130" pos:column="4">user_data<pos:position pos:line="130" pos:column="13"/></name> <operator pos:line="130" pos:column="14">=<pos:position pos:line="130" pos:column="15"/></operator> <operator pos:line="130" pos:column="16">(<pos:position pos:line="130" pos:column="17"/></operator><name pos:line="130" pos:column="17">void<pos:position pos:line="130" pos:column="21"/></name> <operator pos:line="130" pos:column="22">*<pos:position pos:line="130" pos:column="23"/></operator><operator pos:line="130" pos:column="23">)<pos:position pos:line="130" pos:column="24"/></operator><name pos:line="130" pos:column="24">cbi_ret<pos:position pos:line="130" pos:column="31"/></name></expr>;<pos:position pos:line="130" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="132" pos:column="3">cjni_thread_detach<pos:position pos:line="132" pos:column="21"/></name><argument_list pos:line="132" pos:column="21">()<pos:position pos:line="132" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="134" pos:column="3">DEBUG<pos:position pos:line="134" pos:column="8"/></name><argument_list pos:line="134" pos:column="8">(<argument><expr><literal type="string" pos:line="134" pos:column="9">"java plugin: cjni_match_target_create: "<pos:position pos:line="134" pos:column="50"/></literal>
        <literal type="string" pos:line="135" pos:column="9">"Successfully created a `%s' %s."<pos:position pos:line="135" pos:column="42"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="136" pos:column="9">cbi_ret<pos:position pos:line="136" pos:column="16"/></name><operator pos:line="136" pos:column="16">-&gt;<pos:position pos:line="136" pos:column="21"/></operator><name pos:line="136" pos:column="18">name<pos:position pos:line="136" pos:column="22"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="136" pos:column="24">(<pos:position pos:line="136" pos:column="25"/></operator><name pos:line="136" pos:column="25">type<pos:position pos:line="136" pos:column="29"/></name> <operator pos:line="136" pos:column="30">==<pos:position pos:line="136" pos:column="32"/></operator> <name pos:line="136" pos:column="33">CB_TYPE_MATCH<pos:position pos:line="136" pos:column="46"/></name><operator pos:line="136" pos:column="46">)<pos:position pos:line="136" pos:column="47"/></operator></expr> ?<pos:position pos:line="136" pos:column="49"/></condition><then pos:line="136" pos:column="49"> <expr><literal type="string" pos:line="136" pos:column="50">"match"<pos:position pos:line="136" pos:column="57"/></literal></expr> <pos:position pos:line="136" pos:column="58"/></then><else pos:line="136" pos:column="58">: <expr><literal type="string" pos:line="136" pos:column="60">"target"<pos:position pos:line="136" pos:column="68"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="136" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="70"/></expr_stmt>

  <comment type="block" pos:line="138" pos:column="3">/* Success! */</comment>
  <return pos:line="139" pos:column="3">return <expr><operator pos:line="139" pos:column="10">(<pos:position pos:line="139" pos:column="11"/></operator><literal type="number" pos:line="139" pos:column="11">0<pos:position pos:line="139" pos:column="12"/></literal><operator pos:line="139" pos:column="12">)<pos:position pos:line="139" pos:column="13"/></operator></expr>;<pos:position pos:line="139" pos:column="14"/></return>
<cpp:undef pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">undef<pos:position pos:line="140" pos:column="7"/></cpp:directive> <name pos:line="140" pos:column="8">BAIL_OUT<pos:position pos:line="140" pos:column="16"/></name></cpp:undef>
}<pos:position pos:line="141" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2388_collectd-5.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">get_kstat<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">kstat_t<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier><modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">ksp_ptr<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">module<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">instance<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">name<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list> <block pos:line="1" pos:column="74">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">ident<pos:position pos:line="2" pos:column="13"/></name><index pos:line="2" pos:column="13">[<expr><literal type="number" pos:line="2" pos:column="14">128<pos:position pos:line="2" pos:column="17"/></literal></expr>]<pos:position pos:line="2" pos:column="18"/></index></name></decl>;<pos:position pos:line="2" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="4" pos:column="3">*<pos:position pos:line="4" pos:column="4"/></operator><name pos:line="4" pos:column="4">ksp_ptr<pos:position pos:line="4" pos:column="11"/></name> <operator pos:line="4" pos:column="12">=<pos:position pos:line="4" pos:column="13"/></operator> <name pos:line="4" pos:column="14">NULL<pos:position pos:line="4" pos:column="18"/></name></expr>;<pos:position pos:line="4" pos:column="19"/></expr_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">kc<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">==<pos:position pos:line="6" pos:column="12"/></operator> <name pos:line="6" pos:column="13">NULL<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition><then pos:line="6" pos:column="18">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><operator pos:line="7" pos:column="13">-<pos:position pos:line="7" pos:column="14"/></operator><literal type="number" pos:line="7" pos:column="14">1<pos:position pos:line="7" pos:column="15"/></literal><operator pos:line="7" pos:column="15">)<pos:position pos:line="7" pos:column="16"/></operator></expr>;<pos:position pos:line="7" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">ssnprintf<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">ident<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="20">sizeof<argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">ident<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="35">"%s,%i,%s"<pos:position pos:line="9" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="47">module<pos:position pos:line="9" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="55">instance<pos:position pos:line="9" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="65">name<pos:position pos:line="9" pos:column="69"/></name></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="71"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="11" pos:column="3">*<pos:position pos:line="11" pos:column="4"/></operator><name pos:line="11" pos:column="4">ksp_ptr<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">kstat_lookup<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">kc<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="31">module<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="39">instance<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">name<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="55"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">*<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">ksp_ptr<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">==<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">NULL<pos:position pos:line="12" pos:column="23"/></name></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24"> <block pos:line="12" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><literal type="string" pos:line="13" pos:column="11">"get_kstat: Cound not find kstat %s"<pos:position pos:line="13" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="49">ident<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><operator pos:line="17" pos:column="8">*<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">ksp_ptr<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">)<pos:position pos:line="17" pos:column="17"/></operator><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">ks_type<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">!=<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">KSTAT_TYPE_NAMED<pos:position pos:line="17" pos:column="46"/></name></expr>)<pos:position pos:line="17" pos:column="47"/></condition><then pos:line="17" pos:column="47"> <block pos:line="17" pos:column="48">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ERROR<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><literal type="string" pos:line="18" pos:column="11">"get_kstat: kstat %s has wrong type"<pos:position pos:line="18" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">ident<pos:position pos:line="18" pos:column="54"/></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="19" pos:column="5">*<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">ksp_ptr<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">NULL<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><operator pos:line="20" pos:column="13">-<pos:position pos:line="20" pos:column="14"/></operator><literal type="number" pos:line="20" pos:column="14">1<pos:position pos:line="20" pos:column="15"/></literal><operator pos:line="20" pos:column="15">)<pos:position pos:line="20" pos:column="16"/></operator></expr>;<pos:position pos:line="20" pos:column="17"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">ifdef<pos:position pos:line="23" pos:column="7"/></cpp:directive> <name pos:line="23" pos:column="8">assert<pos:position pos:line="23" pos:column="14"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">assert<pos:position pos:line="24" pos:column="9"/></name><argument_list pos:line="24" pos:column="9">(<argument><expr><operator pos:line="24" pos:column="10">*<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">ksp_ptr<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">!=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">NULL<pos:position pos:line="24" pos:column="26"/></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">assert<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">(<argument><expr><name><operator pos:line="25" pos:column="10">(<pos:position pos:line="25" pos:column="11"/></operator><operator pos:line="25" pos:column="11">*<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="12">ksp_ptr<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">)<pos:position pos:line="25" pos:column="20"/></operator><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">ks_type<pos:position pos:line="25" pos:column="29"/></name></name> <operator pos:line="25" pos:column="30">==<pos:position pos:line="25" pos:column="32"/></operator> <name pos:line="25" pos:column="33">KSTAT_TYPE_NAMED<pos:position pos:line="25" pos:column="49"/></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><call><name pos:line="28" pos:column="7">kstat_read<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">(<argument><expr><name pos:line="28" pos:column="18">kc<pos:position pos:line="28" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="22">*<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">ksp_ptr<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="32">NULL<pos:position pos:line="28" pos:column="36"/></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call> <operator pos:line="28" pos:column="38">==<pos:position pos:line="28" pos:column="40"/></operator> <operator pos:line="28" pos:column="41">-<pos:position pos:line="28" pos:column="42"/></operator><literal type="number" pos:line="28" pos:column="42">1<pos:position pos:line="28" pos:column="43"/></literal></expr>)<pos:position pos:line="28" pos:column="44"/></condition><then pos:line="28" pos:column="44"> <block pos:line="28" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">ERROR<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><literal type="string" pos:line="29" pos:column="11">"get_kstat: kstat %s could not be read"<pos:position pos:line="29" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="52">ident<pos:position pos:line="29" pos:column="57"/></name></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><operator pos:line="30" pos:column="13">-<pos:position pos:line="30" pos:column="14"/></operator><literal type="number" pos:line="30" pos:column="14">1<pos:position pos:line="30" pos:column="15"/></literal><operator pos:line="30" pos:column="15">)<pos:position pos:line="30" pos:column="16"/></operator></expr>;<pos:position pos:line="30" pos:column="17"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name><operator pos:line="33" pos:column="7">(<pos:position pos:line="33" pos:column="8"/></operator><operator pos:line="33" pos:column="8">*<pos:position pos:line="33" pos:column="9"/></operator><name pos:line="33" pos:column="9">ksp_ptr<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">)<pos:position pos:line="33" pos:column="17"/></operator><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">ks_type<pos:position pos:line="33" pos:column="26"/></name></name> <operator pos:line="33" pos:column="27">!=<pos:position pos:line="33" pos:column="29"/></operator> <name pos:line="33" pos:column="30">KSTAT_TYPE_NAMED<pos:position pos:line="33" pos:column="46"/></name></expr>)<pos:position pos:line="33" pos:column="47"/></condition><then pos:line="33" pos:column="47"> <block pos:line="33" pos:column="48">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ERROR<pos:position pos:line="34" pos:column="10"/></name><argument_list pos:line="34" pos:column="10">(<argument><expr><literal type="string" pos:line="34" pos:column="11">"get_kstat: kstat %s has wrong type"<pos:position pos:line="34" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">ident<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="56"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">(<pos:position pos:line="35" pos:column="13"/></operator><operator pos:line="35" pos:column="13">-<pos:position pos:line="35" pos:column="14"/></operator><literal type="number" pos:line="35" pos:column="14">1<pos:position pos:line="35" pos:column="15"/></literal><operator pos:line="35" pos:column="15">)<pos:position pos:line="35" pos:column="16"/></operator></expr>;<pos:position pos:line="35" pos:column="17"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <return pos:line="38" pos:column="3">return <expr><operator pos:line="38" pos:column="10">(<pos:position pos:line="38" pos:column="11"/></operator><literal type="number" pos:line="38" pos:column="11">0<pos:position pos:line="38" pos:column="12"/></literal><operator pos:line="38" pos:column="12">)<pos:position pos:line="38" pos:column="13"/></operator></expr>;<pos:position pos:line="38" pos:column="14"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

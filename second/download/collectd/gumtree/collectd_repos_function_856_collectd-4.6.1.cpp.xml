<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_856_collectd-4.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cf_include_all<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">oconfig_item_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">root<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">depth<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr>;<pos:position pos:line="5" pos:column="20"/></init> <condition><expr><name pos:line="5" pos:column="21">i<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&lt;<pos:position pos:line="5" pos:column="27"/></operator> <name><name pos:line="5" pos:column="25">root<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">children_num<pos:position pos:line="5" pos:column="43"/></name></name></expr>;<pos:position pos:line="5" pos:column="44"/></condition> <incr><expr><name pos:line="5" pos:column="45">i<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">++<pos:position pos:line="5" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="49"/></control>
	<block pos:line="6" pos:column="9">{
		<expr_stmt><expr><name pos:line="7" pos:column="17">oconfig_item_t<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></operator><operator pos:line="7" pos:column="33">new<pos:position pos:line="7" pos:column="36"/></operator></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">oconfig_item_t<pos:position pos:line="8" pos:column="31"/></name> <modifier pos:line="8" pos:column="32">*<pos:position pos:line="8" pos:column="33"/></modifier></type><name pos:line="8" pos:column="33">old<pos:position pos:line="8" pos:column="36"/></name></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>

		<comment type="block" pos:line="10" pos:column="17">/* Ignore all blocks, including `Include' blocks. */</comment>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name><name pos:line="11" pos:column="21">root<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">children<pos:position pos:line="11" pos:column="35"/></name><index pos:line="11" pos:column="35">[<expr><name pos:line="11" pos:column="36">i<pos:position pos:line="11" pos:column="37"/></name></expr>]<pos:position pos:line="11" pos:column="38"/></index></name><operator pos:line="11" pos:column="38">.<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">children_num<pos:position pos:line="11" pos:column="51"/></name> <operator pos:line="11" pos:column="52">!=<pos:position pos:line="11" pos:column="54"/></operator> <literal type="number" pos:line="11" pos:column="55">0<pos:position pos:line="11" pos:column="56"/></literal></expr>)<pos:position pos:line="11" pos:column="57"/></condition><then pos:line="11" pos:column="57">
			<block type="pseudo"><continue pos:line="12" pos:column="25">continue;<pos:position pos:line="12" pos:column="34"/></continue></block></then></if>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><call><name pos:line="14" pos:column="21">strcasecmp<pos:position pos:line="14" pos:column="31"/></name> <argument_list pos:line="14" pos:column="32">(<argument><expr><name><name pos:line="14" pos:column="33">root<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">-&gt;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="39">children<pos:position pos:line="14" pos:column="47"/></name><index pos:line="14" pos:column="47">[<expr><name pos:line="14" pos:column="48">i<pos:position pos:line="14" pos:column="49"/></name></expr>]<pos:position pos:line="14" pos:column="50"/></index></name><operator pos:line="14" pos:column="50">.<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="51">key<pos:position pos:line="14" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="56">"Include"<pos:position pos:line="14" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call> <operator pos:line="14" pos:column="67">!=<pos:position pos:line="14" pos:column="69"/></operator> <literal type="number" pos:line="14" pos:column="70">0<pos:position pos:line="14" pos:column="71"/></literal></expr>)<pos:position pos:line="14" pos:column="72"/></condition><then pos:line="14" pos:column="72">
			<block type="pseudo"><continue pos:line="15" pos:column="25">continue;<pos:position pos:line="15" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="17" pos:column="17">old<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <name><name pos:line="17" pos:column="23">root<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">-&gt;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="29">children<pos:position pos:line="17" pos:column="37"/></name></name> <operator pos:line="17" pos:column="38">+<pos:position pos:line="17" pos:column="39"/></operator> <name pos:line="17" pos:column="40">i<pos:position pos:line="17" pos:column="41"/></name></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>

		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">(<pos:position pos:line="19" pos:column="22"/></operator><name><name pos:line="19" pos:column="22">old<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">values_num<pos:position pos:line="19" pos:column="37"/></name></name> <operator pos:line="19" pos:column="38">!=<pos:position pos:line="19" pos:column="40"/></operator> <literal type="number" pos:line="19" pos:column="41">1<pos:position pos:line="19" pos:column="42"/></literal><operator pos:line="19" pos:column="42">)<pos:position pos:line="19" pos:column="43"/></operator>
				<operator pos:line="20" pos:column="33">||<pos:position pos:line="20" pos:column="35"/></operator> <operator pos:line="20" pos:column="36">(<pos:position pos:line="20" pos:column="37"/></operator><name><name pos:line="20" pos:column="37">old<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">-&gt;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="42">values<pos:position pos:line="20" pos:column="48"/></name><index pos:line="20" pos:column="48">[<expr><literal type="number" pos:line="20" pos:column="49">0<pos:position pos:line="20" pos:column="50"/></literal></expr>]<pos:position pos:line="20" pos:column="51"/></index></name><operator pos:line="20" pos:column="51">.<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="52">type<pos:position pos:line="20" pos:column="56"/></name> <operator pos:line="20" pos:column="57">!=<pos:position pos:line="20" pos:column="59"/></operator> <name pos:line="20" pos:column="60">OCONFIG_TYPE_STRING<pos:position pos:line="20" pos:column="79"/></name><operator pos:line="20" pos:column="79">)<pos:position pos:line="20" pos:column="80"/></operator></expr>)<pos:position pos:line="20" pos:column="81"/></condition><then pos:line="20" pos:column="81">
		<block pos:line="21" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">ERROR<pos:position pos:line="22" pos:column="30"/></name> <argument_list pos:line="22" pos:column="31">(<argument><expr><literal type="string" pos:line="22" pos:column="32">"configfile: `Include' needs exactly one string argument."<pos:position pos:line="22" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="92"/></expr_stmt>
			<continue pos:line="23" pos:column="25">continue;<pos:position pos:line="23" pos:column="34"/></continue>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>

		<expr_stmt><expr><operator pos:line="26" pos:column="17">new<pos:position pos:line="26" pos:column="20"/></operator> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <call><name pos:line="26" pos:column="23">cf_read_generic<pos:position pos:line="26" pos:column="38"/></name> <argument_list pos:line="26" pos:column="39">(<argument><expr><name><name pos:line="26" pos:column="40">old<pos:position pos:line="26" pos:column="43"/></name><operator pos:line="26" pos:column="43">-&gt;<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="45">values<pos:position pos:line="26" pos:column="51"/></name><index pos:line="26" pos:column="51">[<expr><literal type="number" pos:line="26" pos:column="52">0<pos:position pos:line="26" pos:column="53"/></literal></expr>]<pos:position pos:line="26" pos:column="54"/></index></name><operator pos:line="26" pos:column="54">.<pos:position pos:line="26" pos:column="55"/></operator><name><name pos:line="26" pos:column="55">value<pos:position pos:line="26" pos:column="60"/></name><operator pos:line="26" pos:column="60">.<pos:position pos:line="26" pos:column="61"/></operator><name pos:line="26" pos:column="61">string<pos:position pos:line="26" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="69">depth<pos:position pos:line="26" pos:column="74"/></name> <operator pos:line="26" pos:column="75">+<pos:position pos:line="26" pos:column="76"/></operator> <literal type="number" pos:line="26" pos:column="77">1<pos:position pos:line="26" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="80"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">new<pos:position pos:line="27" pos:column="24"/></operator> <operator pos:line="27" pos:column="25">==<pos:position pos:line="27" pos:column="27"/></operator> <name pos:line="27" pos:column="28">NULL<pos:position pos:line="27" pos:column="32"/></name></expr>)<pos:position pos:line="27" pos:column="33"/></condition><then pos:line="27" pos:column="33">
			<block type="pseudo"><continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="30" pos:column="17">/* Now replace the i'th child in `root' with `new'. */</comment>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">cf_ci_replace_child<pos:position pos:line="31" pos:column="36"/></name> <argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">root<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="44">new<pos:position pos:line="31" pos:column="47"/></operator></expr></argument>, <argument><expr><name pos:line="31" pos:column="49">i<pos:position pos:line="31" pos:column="50"/></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="33" pos:column="17">sfree<pos:position pos:line="33" pos:column="22"/></name> <argument_list pos:line="33" pos:column="23">(<argument><expr><operator pos:line="33" pos:column="24">new<pos:position pos:line="33" pos:column="27"/></operator><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">values<pos:position pos:line="33" pos:column="35"/></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">sfree<pos:position pos:line="34" pos:column="22"/></name> <argument_list pos:line="34" pos:column="23">(<argument><expr><operator pos:line="34" pos:column="24">new<pos:position pos:line="34" pos:column="27"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></for> <comment type="block" pos:line="35" pos:column="11">/* for (i = 0; i &lt; root-&gt;children_num; i++) */</comment>

	<return pos:line="37" pos:column="9">return <expr><operator pos:line="37" pos:column="16">(<pos:position pos:line="37" pos:column="17"/></operator><literal type="number" pos:line="37" pos:column="17">0<pos:position pos:line="37" pos:column="18"/></literal><operator pos:line="37" pos:column="18">)<pos:position pos:line="37" pos:column="19"/></operator></expr>;<pos:position pos:line="37" pos:column="20"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

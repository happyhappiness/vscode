<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1785_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">uint32_t<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">ntpd_get_refclock_id<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name><name pos:line="2" pos:column="22">struct<pos:position pos:line="2" pos:column="28"/></name> <name pos:line="2" pos:column="29">info_peer_summary<pos:position pos:line="2" pos:column="46"/></name></name> <specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">peer_info<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list> <block pos:line="2" pos:column="65">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">uint32_t<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">addr<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">ntohl<pos:position pos:line="3" pos:column="24"/></name><argument_list pos:line="3" pos:column="24">(<argument><expr><name><name pos:line="3" pos:column="25">peer_info<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">-&gt;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="36">srcadr<pos:position pos:line="3" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">uint32_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">refclock_id<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">addr<pos:position pos:line="4" pos:column="31"/></name> <operator pos:line="4" pos:column="32">&gt;&gt;<pos:position pos:line="4" pos:column="37"/></operator> <literal type="number" pos:line="4" pos:column="35">8<pos:position pos:line="4" pos:column="36"/></literal><operator pos:line="4" pos:column="36">)<pos:position pos:line="4" pos:column="37"/></operator> <operator pos:line="4" pos:column="38">&amp;<pos:position pos:line="4" pos:column="43"/></operator> <literal type="number" pos:line="4" pos:column="40">0x00FF<pos:position pos:line="4" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>

  <return pos:line="6" pos:column="3">return <expr><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">refclock_id<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">)<pos:position pos:line="6" pos:column="23"/></operator></expr>;<pos:position pos:line="6" pos:column="24"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

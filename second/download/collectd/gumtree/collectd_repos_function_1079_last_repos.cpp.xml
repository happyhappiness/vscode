<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1079_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">socket_receive<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">socket_adapter_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">self<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">FILE<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier><modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">pp_file<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list> <block pos:line="1" pos:column="67">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">res<pos:position pos:line="2" pos:column="10"/></name> <init pos:line="2" pos:column="11">= <expr><operator pos:line="2" pos:column="13">-<pos:position pos:line="2" pos:column="14"/></operator><literal type="number" pos:line="2" pos:column="14">1<pos:position pos:line="2" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">pthread_rwlock_rdlock<pos:position pos:line="3" pos:column="24"/></name><argument_list pos:line="3" pos:column="24">(<argument><expr><operator pos:line="3" pos:column="25">&amp;<pos:position pos:line="3" pos:column="30"/></operator><name><name pos:line="3" pos:column="26">self<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">-&gt;<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="32">lock<pos:position pos:line="3" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="38"/></expr_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">pollfd<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">poll_fd<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><block pos:line="4" pos:column="27">{
      <expr><operator pos:line="5" pos:column="7">.<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">fd<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <name><name pos:line="5" pos:column="13">self<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">sock_fd<pos:position pos:line="5" pos:column="26"/></name></name></expr>, <expr><operator pos:line="5" pos:column="28">.<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">events<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">=<pos:position pos:line="5" pos:column="37"/></operator> <name pos:line="5" pos:column="38">POLLIN<pos:position pos:line="5" pos:column="44"/></name> <operator pos:line="5" pos:column="45">|<pos:position pos:line="5" pos:column="46"/></operator> <name pos:line="5" pos:column="47">POLLPRI<pos:position pos:line="5" pos:column="54"/></name></expr>,
  }<pos:position pos:line="6" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="5"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">res<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">poll<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><operator pos:line="8" pos:column="19">&amp;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="20">poll_fd<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="29">1<pos:position pos:line="8" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="32">MCELOG_POLL_TIMEOUT<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call><operator pos:line="8" pos:column="52">)<pos:position pos:line="8" pos:column="53"/></operator> <operator pos:line="8" pos:column="54">&lt;=<pos:position pos:line="8" pos:column="59"/></operator> <literal type="number" pos:line="8" pos:column="57">0<pos:position pos:line="8" pos:column="58"/></literal></expr>)<pos:position pos:line="8" pos:column="59"/></condition><then pos:line="8" pos:column="59"> <block pos:line="8" pos:column="60">{
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">res<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">!=<pos:position pos:line="9" pos:column="15"/></operator> <literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal> <operator pos:line="9" pos:column="18">&amp;&amp;<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="21">errno<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">!=<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">EINTR<pos:position pos:line="9" pos:column="35"/></name></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36"> <block pos:line="9" pos:column="37">{
      <decl_stmt><decl><type><name pos:line="10" pos:column="7">char<pos:position pos:line="10" pos:column="11"/></name></type> <name><name pos:line="10" pos:column="12">errbuf<pos:position pos:line="10" pos:column="18"/></name><index pos:line="10" pos:column="18">[<expr><name pos:line="10" pos:column="19">MCELOG_BUFF_SIZE<pos:position pos:line="10" pos:column="35"/></name></expr>]<pos:position pos:line="10" pos:column="36"/></index></name></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">ERROR<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><literal type="string" pos:line="11" pos:column="13">"mcelog: poll failed: %s"<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="12" pos:column="13">sstrerror<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">errno<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="30">errbuf<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="38">sizeof<argument_list pos:line="12" pos:column="44">(<argument><expr><name pos:line="12" pos:column="45">errbuf<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">pthread_rwlock_unlock<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><operator pos:line="14" pos:column="27">&amp;<pos:position pos:line="14" pos:column="32"/></operator><name><name pos:line="14" pos:column="28">self<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">lock<pos:position pos:line="14" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">res<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name><name pos:line="18" pos:column="7">poll_fd<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">.<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">revents<pos:position pos:line="18" pos:column="22"/></name></name> <operator pos:line="18" pos:column="23">&amp;<pos:position pos:line="18" pos:column="28"/></operator> <operator pos:line="18" pos:column="25">(<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">POLLERR<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">|<pos:position pos:line="18" pos:column="35"/></operator> <name pos:line="18" pos:column="36">POLLHUP<pos:position pos:line="18" pos:column="43"/></name> <operator pos:line="18" pos:column="44">|<pos:position pos:line="18" pos:column="45"/></operator> <name pos:line="18" pos:column="46">POLLNVAL<pos:position pos:line="18" pos:column="54"/></name><operator pos:line="18" pos:column="54">)<pos:position pos:line="18" pos:column="55"/></operator></expr>)<pos:position pos:line="18" pos:column="56"/></condition><then pos:line="18" pos:column="56"> <block pos:line="18" pos:column="57">{
    <comment type="block" pos:line="19" pos:column="5">/* connection is broken */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ERROR<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><name pos:line="20" pos:column="11">MCELOG_PLUGIN<pos:position pos:line="20" pos:column="24"/></name> <literal type="string" pos:line="20" pos:column="25">": Connection to socket is broken"<pos:position pos:line="20" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">poll_fd<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">.<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">revents<pos:position pos:line="21" pos:column="24"/></name></name> <operator pos:line="21" pos:column="25">&amp;<pos:position pos:line="21" pos:column="30"/></operator> <operator pos:line="21" pos:column="27">(<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">POLLERR<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">|<pos:position pos:line="21" pos:column="37"/></operator> <name pos:line="21" pos:column="38">POLLHUP<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">)<pos:position pos:line="21" pos:column="46"/></operator></expr>)<pos:position pos:line="21" pos:column="47"/></condition><then pos:line="21" pos:column="47"> <block pos:line="21" pos:column="48">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">mcelog_dispatch_notification<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(
          <argument><expr><operator pos:line="23" pos:column="11">&amp;<pos:position pos:line="23" pos:column="16"/></operator><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">notification_t<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">)<pos:position pos:line="23" pos:column="28"/></operator><block pos:line="23" pos:column="28">{<expr><operator pos:line="23" pos:column="29">.<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">severity<pos:position pos:line="23" pos:column="38"/></name> <operator pos:line="23" pos:column="39">=<pos:position pos:line="23" pos:column="40"/></operator> <name pos:line="23" pos:column="41">NOTIF_FAILURE<pos:position pos:line="23" pos:column="54"/></name></expr>,
                            <expr><operator pos:line="24" pos:column="29">.<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">time<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">=<pos:position pos:line="24" pos:column="36"/></operator> <call><name pos:line="24" pos:column="37">cdtime<pos:position pos:line="24" pos:column="43"/></name><argument_list pos:line="24" pos:column="43">()<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr>,
                            <expr><operator pos:line="25" pos:column="29">.<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">message<pos:position pos:line="25" pos:column="37"/></name> <operator pos:line="25" pos:column="38">=<pos:position pos:line="25" pos:column="39"/></operator> <literal type="string" pos:line="25" pos:column="40">"Connection to mcelog socket is broken."<pos:position pos:line="25" pos:column="80"/></literal></expr>,
                            <expr><operator pos:line="26" pos:column="29">.<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">plugin<pos:position pos:line="26" pos:column="36"/></name> <operator pos:line="26" pos:column="37">=<pos:position pos:line="26" pos:column="38"/></operator> <name pos:line="26" pos:column="39">MCELOG_PLUGIN<pos:position pos:line="26" pos:column="52"/></name></expr>,
                            <expr><operator pos:line="27" pos:column="29">.<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">type_instance<pos:position pos:line="27" pos:column="43"/></name> <operator pos:line="27" pos:column="44">=<pos:position pos:line="27" pos:column="45"/></operator> <literal type="string" pos:line="27" pos:column="46">"mcelog_status"<pos:position pos:line="27" pos:column="61"/></literal></expr>}<pos:position pos:line="27" pos:column="62"/></block></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">pthread_rwlock_unlock<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><operator pos:line="29" pos:column="27">&amp;<pos:position pos:line="29" pos:column="32"/></operator><name><name pos:line="29" pos:column="28">self<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">-&gt;<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="34">lock<pos:position pos:line="29" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">-<pos:position pos:line="30" pos:column="13"/></operator><literal type="number" pos:line="30" pos:column="13">1<pos:position pos:line="30" pos:column="14"/></literal></expr>;<pos:position pos:line="30" pos:column="15"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><operator pos:line="33" pos:column="7">!<pos:position pos:line="33" pos:column="8"/></operator><operator pos:line="33" pos:column="8">(<pos:position pos:line="33" pos:column="9"/></operator><name><name pos:line="33" pos:column="9">poll_fd<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">.<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">revents<pos:position pos:line="33" pos:column="24"/></name></name> <operator pos:line="33" pos:column="25">&amp;<pos:position pos:line="33" pos:column="30"/></operator> <operator pos:line="33" pos:column="27">(<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="28">POLLIN<pos:position pos:line="33" pos:column="34"/></name> <operator pos:line="33" pos:column="35">|<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="37">POLLPRI<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">)<pos:position pos:line="33" pos:column="45"/></operator><operator pos:line="33" pos:column="45">)<pos:position pos:line="33" pos:column="46"/></operator></expr>)<pos:position pos:line="33" pos:column="47"/></condition><then pos:line="33" pos:column="47"> <block pos:line="33" pos:column="48">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">INFO<pos:position pos:line="34" pos:column="9"/></name><argument_list pos:line="34" pos:column="9">(<argument><expr><name pos:line="34" pos:column="10">MCELOG_PLUGIN<pos:position pos:line="34" pos:column="23"/></name> <literal type="string" pos:line="34" pos:column="24">": No data to read"<pos:position pos:line="34" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">pthread_rwlock_unlock<pos:position pos:line="35" pos:column="26"/></name><argument_list pos:line="35" pos:column="26">(<argument><expr><operator pos:line="35" pos:column="27">&amp;<pos:position pos:line="35" pos:column="32"/></operator><name><name pos:line="35" pos:column="28">self<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">-&gt;<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="34">lock<pos:position pos:line="35" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><literal type="number" pos:line="36" pos:column="12">0<pos:position pos:line="36" pos:column="13"/></literal></expr>;<pos:position pos:line="36" pos:column="14"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><operator pos:line="39" pos:column="7">(<pos:position pos:line="39" pos:column="8"/></operator><operator pos:line="39" pos:column="8">*<pos:position pos:line="39" pos:column="9"/></operator><name pos:line="39" pos:column="9">pp_file<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <call><name pos:line="39" pos:column="19">fdopen<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><call><name pos:line="39" pos:column="26">dup<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><name><name pos:line="39" pos:column="30">self<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">-&gt;<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="36">sock_fd<pos:position pos:line="39" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="46">"r"<pos:position pos:line="39" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></call><operator pos:line="39" pos:column="50">)<pos:position pos:line="39" pos:column="51"/></operator> <operator pos:line="39" pos:column="52">==<pos:position pos:line="39" pos:column="54"/></operator> <name pos:line="39" pos:column="55">NULL<pos:position pos:line="39" pos:column="59"/></name></expr>)<pos:position pos:line="39" pos:column="60"/></condition><then pos:line="39" pos:column="60">
    <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="5">res<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">=<pos:position pos:line="40" pos:column="10"/></operator> <operator pos:line="40" pos:column="11">-<pos:position pos:line="40" pos:column="12"/></operator><literal type="number" pos:line="40" pos:column="12">1<pos:position pos:line="40" pos:column="13"/></literal></expr>;<pos:position pos:line="40" pos:column="14"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="42" pos:column="3">pthread_rwlock_unlock<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><operator pos:line="42" pos:column="25">&amp;<pos:position pos:line="42" pos:column="30"/></operator><name><name pos:line="42" pos:column="26">self<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">-&gt;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="32">lock<pos:position pos:line="42" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>
  <return pos:line="43" pos:column="3">return <expr><name pos:line="43" pos:column="10">res<pos:position pos:line="43" pos:column="13"/></name></expr>;<pos:position pos:line="43" pos:column="14"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

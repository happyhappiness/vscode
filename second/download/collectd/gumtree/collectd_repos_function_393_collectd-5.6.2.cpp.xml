<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_393_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_sysfs_callback<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">dir<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="49">/* {{{ */</comment>
                               <parameter><decl><type><name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">power_supply<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">void<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">user_data<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list> <block pos:line="2" pos:column="75">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name> <modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type><name pos:line="3" pos:column="8">battery_index<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><name pos:line="3" pos:column="24">user_data<pos:position pos:line="3" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <specifier pos:line="5" pos:column="8">const<pos:position pos:line="5" pos:column="13"/></specifier> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">plugin_instance<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">buffer<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><literal type="number" pos:line="6" pos:column="15">32<pos:position pos:line="6" pos:column="17"/></literal></expr>]<pos:position pos:line="6" pos:column="18"/></index></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">gauge_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">v<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><name pos:line="7" pos:column="15">NAN<pos:position pos:line="7" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">_Bool<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">discharging<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">status<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* Ignore non-battery directories, such as AC power. */</comment>
  <expr_stmt><expr><name pos:line="12" pos:column="3">status<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator>
      <call><name pos:line="13" pos:column="7">sysfs_file_to_buffer<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">dir<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">power_supply<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="47">"type"<pos:position pos:line="13" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="55">buffer<pos:position pos:line="13" pos:column="61"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="63">sizeof<argument_list pos:line="13" pos:column="69">(<argument><expr><name pos:line="13" pos:column="70">buffer<pos:position pos:line="13" pos:column="76"/></name></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="79"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">status<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">!=<pos:position pos:line="14" pos:column="16"/></operator> <literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><literal type="number" pos:line="15" pos:column="13">0<pos:position pos:line="15" pos:column="14"/></literal><operator pos:line="15" pos:column="14">)<pos:position pos:line="15" pos:column="15"/></operator></expr>;<pos:position pos:line="15" pos:column="16"/></return></block></then></if>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><call><name pos:line="16" pos:column="7">strcasecmp<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><literal type="string" pos:line="16" pos:column="18">"Battery"<pos:position pos:line="16" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="29">buffer<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call> <operator pos:line="16" pos:column="37">!=<pos:position pos:line="16" pos:column="39"/></operator> <literal type="number" pos:line="16" pos:column="40">0<pos:position pos:line="16" pos:column="41"/></literal></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">0<pos:position pos:line="17" pos:column="14"/></literal><operator pos:line="17" pos:column="14">)<pos:position pos:line="17" pos:column="15"/></operator></expr>;<pos:position pos:line="17" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><operator pos:line="19" pos:column="3">(<pos:position pos:line="19" pos:column="4"/></operator><name pos:line="19" pos:column="4">void<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">)<pos:position pos:line="19" pos:column="9"/></operator><call><name pos:line="19" pos:column="9">sysfs_file_to_buffer<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">dir<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="35">power_supply<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="49">"status"<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">buffer<pos:position pos:line="19" pos:column="65"/></name></expr></argument>,
                             <argument><expr><sizeof pos:line="20" pos:column="30">sizeof<argument_list pos:line="20" pos:column="36">(<argument><expr><name pos:line="20" pos:column="37">buffer<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><call><name pos:line="21" pos:column="7">strcasecmp<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><literal type="string" pos:line="21" pos:column="18">"Discharging"<pos:position pos:line="21" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">buffer<pos:position pos:line="21" pos:column="39"/></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call> <operator pos:line="21" pos:column="41">==<pos:position pos:line="21" pos:column="43"/></operator> <literal type="number" pos:line="21" pos:column="44">0<pos:position pos:line="21" pos:column="45"/></literal></expr>)<pos:position pos:line="21" pos:column="46"/></condition><then pos:line="21" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="5">discharging<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <literal type="number" pos:line="22" pos:column="19">1<pos:position pos:line="22" pos:column="20"/></literal></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* FIXME: This is a dirty hack for backwards compatibility: The battery
   * plugin, for a very long time, has had the plugin_instance
   * hard-coded to "0". So, to keep backwards compatibility, we'll use
   * "0" for the first battery we find and the power_supply name for all
   * following. This should be reverted in a future major version. */</comment>
  <expr_stmt><expr><name pos:line="29" pos:column="3">plugin_instance<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <ternary><condition><expr><operator pos:line="29" pos:column="21">(<pos:position pos:line="29" pos:column="22"/></operator><operator pos:line="29" pos:column="22">*<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="23">battery_index<pos:position pos:line="29" pos:column="36"/></name> <operator pos:line="29" pos:column="37">==<pos:position pos:line="29" pos:column="39"/></operator> <literal type="number" pos:line="29" pos:column="40">0<pos:position pos:line="29" pos:column="41"/></literal><operator pos:line="29" pos:column="41">)<pos:position pos:line="29" pos:column="42"/></operator></expr> ?<pos:position pos:line="29" pos:column="44"/></condition><then pos:line="29" pos:column="44"> <expr><literal type="string" pos:line="29" pos:column="45">"0"<pos:position pos:line="29" pos:column="48"/></literal></expr> <pos:position pos:line="29" pos:column="49"/></then><else pos:line="29" pos:column="49">: <expr><name pos:line="29" pos:column="51">power_supply<pos:position pos:line="29" pos:column="63"/></name></expr></else></ternary></expr>;<pos:position pos:line="29" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="30" pos:column="3">(<pos:position pos:line="30" pos:column="4"/></operator><operator pos:line="30" pos:column="4">*<pos:position pos:line="30" pos:column="5"/></operator><name pos:line="30" pos:column="5">battery_index<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">)<pos:position pos:line="30" pos:column="19"/></operator><operator pos:line="30" pos:column="19">++<pos:position pos:line="30" pos:column="21"/></operator></expr>;<pos:position pos:line="30" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">read_sysfs_capacity<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">dir<pos:position pos:line="32" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="28">power_supply<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">plugin_instance<pos:position pos:line="32" pos:column="57"/></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>

  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><call><name pos:line="34" pos:column="7">sysfs_file_to_gauge<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">dir<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="32">power_supply<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="46">"power_now"<pos:position pos:line="34" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="59">&amp;<pos:position pos:line="34" pos:column="64"/></operator><name pos:line="34" pos:column="60">v<pos:position pos:line="34" pos:column="61"/></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call> <operator pos:line="34" pos:column="63">==<pos:position pos:line="34" pos:column="65"/></operator> <literal type="number" pos:line="34" pos:column="66">0<pos:position pos:line="34" pos:column="67"/></literal></expr>)<pos:position pos:line="34" pos:column="68"/></condition><then pos:line="34" pos:column="68"> <block pos:line="34" pos:column="69">{
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">discharging<pos:position pos:line="35" pos:column="20"/></name></expr>)<pos:position pos:line="35" pos:column="21"/></condition><then pos:line="35" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">v<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">*=<pos:position pos:line="36" pos:column="11"/></operator> <operator pos:line="36" pos:column="12">-<pos:position pos:line="36" pos:column="13"/></operator><literal type="number" pos:line="36" pos:column="13">1.0<pos:position pos:line="36" pos:column="16"/></literal></expr>;<pos:position pos:line="36" pos:column="17"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">battery_submit<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><name pos:line="37" pos:column="20">plugin_instance<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="37">"power"<pos:position pos:line="37" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="46">v<pos:position pos:line="37" pos:column="47"/></name> <operator pos:line="37" pos:column="48">*<pos:position pos:line="37" pos:column="49"/></operator> <name pos:line="37" pos:column="50">SYSFS_FACTOR<pos:position pos:line="37" pos:column="62"/></name></expr></argument>)<pos:position pos:line="37" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><call><name pos:line="39" pos:column="7">sysfs_file_to_gauge<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">dir<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">power_supply<pos:position pos:line="39" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="46">"current_now"<pos:position pos:line="39" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="39" pos:column="61">&amp;<pos:position pos:line="39" pos:column="66"/></operator><name pos:line="39" pos:column="62">v<pos:position pos:line="39" pos:column="63"/></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call> <operator pos:line="39" pos:column="65">==<pos:position pos:line="39" pos:column="67"/></operator> <literal type="number" pos:line="39" pos:column="68">0<pos:position pos:line="39" pos:column="69"/></literal></expr>)<pos:position pos:line="39" pos:column="70"/></condition><then pos:line="39" pos:column="70"> <block pos:line="39" pos:column="71">{
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">discharging<pos:position pos:line="40" pos:column="20"/></name></expr>)<pos:position pos:line="40" pos:column="21"/></condition><then pos:line="40" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="7">v<pos:position pos:line="41" pos:column="8"/></name> <operator pos:line="41" pos:column="9">*=<pos:position pos:line="41" pos:column="11"/></operator> <operator pos:line="41" pos:column="12">-<pos:position pos:line="41" pos:column="13"/></operator><literal type="number" pos:line="41" pos:column="13">1.0<pos:position pos:line="41" pos:column="16"/></literal></expr>;<pos:position pos:line="41" pos:column="17"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">battery_submit<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><name pos:line="42" pos:column="20">plugin_instance<pos:position pos:line="42" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="37">"current"<pos:position pos:line="42" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="48">v<pos:position pos:line="42" pos:column="49"/></name> <operator pos:line="42" pos:column="50">*<pos:position pos:line="42" pos:column="51"/></operator> <name pos:line="42" pos:column="52">SYSFS_FACTOR<pos:position pos:line="42" pos:column="64"/></name></expr></argument>)<pos:position pos:line="42" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="66"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><call><name pos:line="45" pos:column="7">sysfs_file_to_gauge<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><name pos:line="45" pos:column="27">dir<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="32">power_supply<pos:position pos:line="45" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="46">"voltage_now"<pos:position pos:line="45" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="45" pos:column="61">&amp;<pos:position pos:line="45" pos:column="66"/></operator><name pos:line="45" pos:column="62">v<pos:position pos:line="45" pos:column="63"/></name></expr></argument>)<pos:position pos:line="45" pos:column="64"/></argument_list></call> <operator pos:line="45" pos:column="65">==<pos:position pos:line="45" pos:column="67"/></operator> <literal type="number" pos:line="45" pos:column="68">0<pos:position pos:line="45" pos:column="69"/></literal></expr>)<pos:position pos:line="45" pos:column="70"/></condition><then pos:line="45" pos:column="70">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="5">battery_submit<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><name pos:line="46" pos:column="20">plugin_instance<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="37">"voltage"<pos:position pos:line="46" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="48">v<pos:position pos:line="46" pos:column="49"/></name> <operator pos:line="46" pos:column="50">*<pos:position pos:line="46" pos:column="51"/></operator> <name pos:line="46" pos:column="52">SYSFS_FACTOR<pos:position pos:line="46" pos:column="64"/></name></expr></argument>)<pos:position pos:line="46" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="66"/></expr_stmt></block></then></if>

  <return pos:line="48" pos:column="3">return <expr><operator pos:line="48" pos:column="10">(<pos:position pos:line="48" pos:column="11"/></operator><literal type="number" pos:line="48" pos:column="11">0<pos:position pos:line="48" pos:column="12"/></literal><operator pos:line="48" pos:column="12">)<pos:position pos:line="48" pos:column="13"/></operator></expr>;<pos:position pos:line="48" pos:column="14"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

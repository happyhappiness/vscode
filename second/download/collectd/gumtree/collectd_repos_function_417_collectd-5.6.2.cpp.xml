<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_417_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">disk_read<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list> <block pos:line="1" pos:column="28">{
<cpp:if pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">if<pos:position pos:line="2" pos:column="4"/></cpp:directive> <expr><name pos:line="2" pos:column="5">HAVE_IOKIT_IOKITLIB_H<pos:position pos:line="2" pos:column="26"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">io_registry_entry_t<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">disk<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">io_registry_entry_t<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">disk_child<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">io_iterator_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">disk_list<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CFMutableDictionaryRef<pos:position pos:line="6" pos:column="25"/></name></type> <name pos:line="6" pos:column="26">props_dict<pos:position pos:line="6" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="38">child_dict<pos:position pos:line="6" pos:column="48"/></name></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CFDictionaryRef<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">stats_dict<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CFStringRef<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">tmp_cf_string_ref<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">kern_return_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">status<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">signed<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">long<pos:position pos:line="11" pos:column="14"/></name> <name pos:line="11" pos:column="15">long<pos:position pos:line="11" pos:column="19"/></name></type> <name pos:line="11" pos:column="20">read_ops<pos:position pos:line="11" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="30">read_byt<pos:position pos:line="11" pos:column="38"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="40">read_tme<pos:position pos:line="11" pos:column="48"/></name></decl>;<pos:position pos:line="11" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">signed<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">long<pos:position pos:line="12" pos:column="14"/></name> <name pos:line="12" pos:column="15">long<pos:position pos:line="12" pos:column="19"/></name></type> <name pos:line="12" pos:column="20">write_ops<pos:position pos:line="12" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="31">write_byt<pos:position pos:line="12" pos:column="40"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="42">write_tme<pos:position pos:line="12" pos:column="51"/></name></decl>;<pos:position pos:line="12" pos:column="52"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">disk_major<pos:position pos:line="14" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="19">disk_minor<pos:position pos:line="14" pos:column="29"/></name></decl>;<pos:position pos:line="14" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">char<pos:position pos:line="15" pos:column="7"/></name></type> <name><name pos:line="15" pos:column="8">disk_name<pos:position pos:line="15" pos:column="17"/></name><index pos:line="15" pos:column="17">[<expr><name pos:line="15" pos:column="18">DATA_MAX_NAME_LEN<pos:position pos:line="15" pos:column="35"/></name></expr>]<pos:position pos:line="15" pos:column="36"/></index></name></decl>;<pos:position pos:line="15" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name></type> <name><name pos:line="16" pos:column="8">child_disk_name_bsd<pos:position pos:line="16" pos:column="27"/></name><index pos:line="16" pos:column="27">[<expr><name pos:line="16" pos:column="28">DATA_MAX_NAME_LEN<pos:position pos:line="16" pos:column="45"/></name></expr>]<pos:position pos:line="16" pos:column="46"/></index></name></decl>,
      <decl><type ref="prev"/><name><name pos:line="17" pos:column="7">props_disk_name_bsd<pos:position pos:line="17" pos:column="26"/></name><index pos:line="17" pos:column="26">[<expr><name pos:line="17" pos:column="27">DATA_MAX_NAME_LEN<pos:position pos:line="17" pos:column="44"/></name></expr>]<pos:position pos:line="17" pos:column="45"/></index></name></decl>;<pos:position pos:line="17" pos:column="46"/></decl_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* Get the list of all disk objects. */</comment>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><call><name pos:line="20" pos:column="7">IOServiceGetMatchingServices<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(
          <argument><expr><name pos:line="21" pos:column="11">io_master_port<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="27">IOServiceMatching<pos:position pos:line="21" pos:column="44"/></name><argument_list pos:line="21" pos:column="44">(<argument><expr><name pos:line="21" pos:column="45">kIOBlockStorageDriverClass<pos:position pos:line="21" pos:column="71"/></name></expr></argument>)<pos:position pos:line="21" pos:column="72"/></argument_list></call></expr></argument>,
          <argument><expr><operator pos:line="22" pos:column="11">&amp;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="12">disk_list<pos:position pos:line="22" pos:column="21"/></name></expr></argument>)<pos:position pos:line="22" pos:column="22"/></argument_list></call> <operator pos:line="22" pos:column="23">!=<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">kIOReturnSuccess<pos:position pos:line="22" pos:column="42"/></name></expr>)<pos:position pos:line="22" pos:column="43"/></condition><then pos:line="22" pos:column="43"> <block pos:line="22" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ERROR<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><literal type="string" pos:line="23" pos:column="11">"disk plugin: IOServiceGetMatchingServices failed."<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><operator pos:line="24" pos:column="13">-<pos:position pos:line="24" pos:column="14"/></operator><literal type="number" pos:line="24" pos:column="14">1<pos:position pos:line="24" pos:column="15"/></literal><operator pos:line="24" pos:column="15">)<pos:position pos:line="24" pos:column="16"/></operator></expr>;<pos:position pos:line="24" pos:column="17"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <while pos:line="27" pos:column="3">while <condition pos:line="27" pos:column="9">(<expr><operator pos:line="27" pos:column="10">(<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="11">disk<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <call><name pos:line="27" pos:column="18">IOIteratorNext<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">disk_list<pos:position pos:line="27" pos:column="42"/></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call><operator pos:line="27" pos:column="43">)<pos:position pos:line="27" pos:column="44"/></operator> <operator pos:line="27" pos:column="45">!=<pos:position pos:line="27" pos:column="47"/></operator> <literal type="number" pos:line="27" pos:column="48">0<pos:position pos:line="27" pos:column="49"/></literal></expr>)<pos:position pos:line="27" pos:column="50"/></condition> <block pos:line="27" pos:column="51">{
    <expr_stmt><expr><name pos:line="28" pos:column="5">props_dict<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <name pos:line="28" pos:column="18">NULL<pos:position pos:line="28" pos:column="22"/></name></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">stats_dict<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">NULL<pos:position pos:line="29" pos:column="22"/></name></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">child_dict<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">NULL<pos:position pos:line="30" pos:column="22"/></name></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="32" pos:column="5">/* get child of disk entry and corresponding property dictionary */</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">(<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">status<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <call><name pos:line="33" pos:column="19">IORegistryEntryGetChildEntry<pos:position pos:line="33" pos:column="47"/></name><argument_list pos:line="33" pos:column="47">(
             <argument><expr><name pos:line="34" pos:column="14">disk<pos:position pos:line="34" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="20">kIOServicePlane<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="37">&amp;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="38">disk_child<pos:position pos:line="34" pos:column="48"/></name></expr></argument>)<pos:position pos:line="34" pos:column="49"/></argument_list></call><operator pos:line="34" pos:column="49">)<pos:position pos:line="34" pos:column="50"/></operator> <operator pos:line="34" pos:column="51">!=<pos:position pos:line="34" pos:column="53"/></operator> <name pos:line="34" pos:column="54">kIOReturnSuccess<pos:position pos:line="34" pos:column="70"/></name></expr>)<pos:position pos:line="34" pos:column="71"/></condition><then pos:line="34" pos:column="71"> <block pos:line="34" pos:column="72">{
      <comment type="block" pos:line="35" pos:column="7">/* This fails for example for DVD/CD drives, which we want to ignore
       * anyway */</comment>
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">DEBUG<pos:position pos:line="37" pos:column="12"/></name><argument_list pos:line="37" pos:column="12">(<argument><expr><literal type="string" pos:line="37" pos:column="13">"IORegistryEntryGetChildEntry (disk) failed: 0x%08x"<pos:position pos:line="37" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="67">status<pos:position pos:line="37" pos:column="73"/></name></expr></argument>)<pos:position pos:line="37" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="75"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">IOObjectRelease<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><name pos:line="38" pos:column="23">disk<pos:position pos:line="38" pos:column="27"/></name></expr></argument>)<pos:position pos:line="38" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
      <continue pos:line="39" pos:column="7">continue;<pos:position pos:line="39" pos:column="16"/></continue>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><call><name pos:line="41" pos:column="9">IORegistryEntryCreateCFProperties<pos:position pos:line="41" pos:column="42"/></name><argument_list pos:line="41" pos:column="42">(
            <argument><expr><name pos:line="42" pos:column="13">disk_child<pos:position pos:line="42" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="25">(<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="26">CFMutableDictionaryRef<pos:position pos:line="42" pos:column="48"/></name> <operator pos:line="42" pos:column="49">*<pos:position pos:line="42" pos:column="50"/></operator><operator pos:line="42" pos:column="50">)<pos:position pos:line="42" pos:column="51"/></operator><operator pos:line="42" pos:column="51">&amp;<pos:position pos:line="42" pos:column="56"/></operator><name pos:line="42" pos:column="52">child_dict<pos:position pos:line="42" pos:column="62"/></name></expr></argument>,
            <argument><expr><name pos:line="43" pos:column="13">kCFAllocatorDefault<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="34">kNilOptions<pos:position pos:line="43" pos:column="45"/></name></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call> <operator pos:line="43" pos:column="47">!=<pos:position pos:line="43" pos:column="49"/></operator> <name pos:line="43" pos:column="50">kIOReturnSuccess<pos:position pos:line="43" pos:column="66"/></name> <operator pos:line="43" pos:column="67">||<pos:position pos:line="43" pos:column="69"/></operator>
        <name pos:line="44" pos:column="9">child_dict<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">==<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">NULL<pos:position pos:line="44" pos:column="27"/></name></expr>)<pos:position pos:line="44" pos:column="28"/></condition><then pos:line="44" pos:column="28"> <block pos:line="44" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">ERROR<pos:position pos:line="45" pos:column="12"/></name><argument_list pos:line="45" pos:column="12">(<argument><expr><literal type="string" pos:line="45" pos:column="13">"disk plugin: IORegistryEntryCreateCFProperties (disk_child) "<pos:position pos:line="45" pos:column="75"/></literal>
            <literal type="string" pos:line="46" pos:column="13">"failed."<pos:position pos:line="46" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">IOObjectRelease<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">(<argument><expr><name pos:line="47" pos:column="23">disk_child<pos:position pos:line="47" pos:column="33"/></name></expr></argument>)<pos:position pos:line="47" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">IOObjectRelease<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><name pos:line="48" pos:column="23">disk<pos:position pos:line="48" pos:column="27"/></name></expr></argument>)<pos:position pos:line="48" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt>
      <continue pos:line="49" pos:column="7">continue;<pos:position pos:line="49" pos:column="16"/></continue>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="52" pos:column="5">/* extract name and major/minor numbers */</comment>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">memset<pos:position pos:line="53" pos:column="11"/></name><argument_list pos:line="53" pos:column="11">(<argument><expr><name pos:line="53" pos:column="12">child_disk_name_bsd<pos:position pos:line="53" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="33">0<pos:position pos:line="53" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="36">sizeof<argument_list pos:line="53" pos:column="42">(<argument><expr><name pos:line="53" pos:column="43">child_disk_name_bsd<pos:position pos:line="53" pos:column="62"/></name></expr></argument>)<pos:position pos:line="53" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name pos:line="54" pos:column="5">tmp_cf_string_ref<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">=<pos:position pos:line="54" pos:column="24"/></operator>
        <operator pos:line="55" pos:column="9">(<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">CFStringRef<pos:position pos:line="55" pos:column="21"/></name><operator pos:line="55" pos:column="21">)<pos:position pos:line="55" pos:column="22"/></operator><call><name pos:line="55" pos:column="22">CFDictionaryGetValue<pos:position pos:line="55" pos:column="42"/></name><argument_list pos:line="55" pos:column="42">(<argument><expr><name pos:line="55" pos:column="43">child_dict<pos:position pos:line="55" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="55">CFSTR<pos:position pos:line="55" pos:column="60"/></name><argument_list pos:line="55" pos:column="60">(<argument><expr><name pos:line="55" pos:column="61">kIOBSDNameKey<pos:position pos:line="55" pos:column="74"/></name></expr></argument>)<pos:position pos:line="55" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="77"/></expr_stmt>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">tmp_cf_string_ref<pos:position pos:line="56" pos:column="26"/></name></expr>)<pos:position pos:line="56" pos:column="27"/></condition><then pos:line="56" pos:column="27"> <block pos:line="56" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">assert<pos:position pos:line="57" pos:column="13"/></name><argument_list pos:line="57" pos:column="13">(<argument><expr><call><name pos:line="57" pos:column="14">CFGetTypeID<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name pos:line="57" pos:column="26">tmp_cf_string_ref<pos:position pos:line="57" pos:column="43"/></name></expr></argument>)<pos:position pos:line="57" pos:column="44"/></argument_list></call> <operator pos:line="57" pos:column="45">==<pos:position pos:line="57" pos:column="47"/></operator> <call><name pos:line="57" pos:column="48">CFStringGetTypeID<pos:position pos:line="57" pos:column="65"/></name><argument_list pos:line="57" pos:column="65">()<pos:position pos:line="57" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="69"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">CFStringGetCString<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><name pos:line="58" pos:column="26">tmp_cf_string_ref<pos:position pos:line="58" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="45">child_disk_name_bsd<pos:position pos:line="58" pos:column="64"/></name></expr></argument>,
                         <argument><expr><sizeof pos:line="59" pos:column="26">sizeof<argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">child_disk_name_bsd<pos:position pos:line="59" pos:column="52"/></name></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="59" pos:column="55">kCFStringEncodingUTF8<pos:position pos:line="59" pos:column="76"/></name></expr></argument>)<pos:position pos:line="59" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="61" pos:column="5">disk_major<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <operator pos:line="61" pos:column="18">(<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="19">int<pos:position pos:line="61" pos:column="22"/></name><operator pos:line="61" pos:column="22">)<pos:position pos:line="61" pos:column="23"/></operator><call><name pos:line="61" pos:column="23">dict_get_value<pos:position pos:line="61" pos:column="37"/></name><argument_list pos:line="61" pos:column="37">(<argument><expr><name pos:line="61" pos:column="38">child_dict<pos:position pos:line="61" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="50">kIOBSDMajorKey<pos:position pos:line="61" pos:column="64"/></name></expr></argument>)<pos:position pos:line="61" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name pos:line="62" pos:column="5">disk_minor<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <operator pos:line="62" pos:column="18">(<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="19">int<pos:position pos:line="62" pos:column="22"/></name><operator pos:line="62" pos:column="22">)<pos:position pos:line="62" pos:column="23"/></operator><call><name pos:line="62" pos:column="23">dict_get_value<pos:position pos:line="62" pos:column="37"/></name><argument_list pos:line="62" pos:column="37">(<argument><expr><name pos:line="62" pos:column="38">child_dict<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="50">kIOBSDMinorKey<pos:position pos:line="62" pos:column="64"/></name></expr></argument>)<pos:position pos:line="62" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">DEBUG<pos:position pos:line="63" pos:column="10"/></name><argument_list pos:line="63" pos:column="10">(<argument><expr><literal type="string" pos:line="63" pos:column="11">"disk plugin: child_disk_name_bsd=\"%s\" major=%d minor=%d"<pos:position pos:line="63" pos:column="70"/></literal></expr></argument>,
          <argument><expr><name pos:line="64" pos:column="11">child_disk_name_bsd<pos:position pos:line="64" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="32">disk_major<pos:position pos:line="64" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="44">disk_minor<pos:position pos:line="64" pos:column="54"/></name></expr></argument>)<pos:position pos:line="64" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">CFRelease<pos:position pos:line="65" pos:column="14"/></name><argument_list pos:line="65" pos:column="14">(<argument><expr><name pos:line="65" pos:column="15">child_dict<pos:position pos:line="65" pos:column="25"/></name></expr></argument>)<pos:position pos:line="65" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">IOObjectRelease<pos:position pos:line="66" pos:column="20"/></name><argument_list pos:line="66" pos:column="20">(<argument><expr><name pos:line="66" pos:column="21">disk_child<pos:position pos:line="66" pos:column="31"/></name></expr></argument>)<pos:position pos:line="66" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="68" pos:column="5">/* get property dictionary of the disk entry itself */</comment>
    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><call><name pos:line="69" pos:column="9">IORegistryEntryCreateCFProperties<pos:position pos:line="69" pos:column="42"/></name><argument_list pos:line="69" pos:column="42">(
            <argument><expr><name pos:line="70" pos:column="13">disk<pos:position pos:line="70" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="19">(<pos:position pos:line="70" pos:column="20"/></operator><name pos:line="70" pos:column="20">CFMutableDictionaryRef<pos:position pos:line="70" pos:column="42"/></name> <operator pos:line="70" pos:column="43">*<pos:position pos:line="70" pos:column="44"/></operator><operator pos:line="70" pos:column="44">)<pos:position pos:line="70" pos:column="45"/></operator><operator pos:line="70" pos:column="45">&amp;<pos:position pos:line="70" pos:column="50"/></operator><name pos:line="70" pos:column="46">props_dict<pos:position pos:line="70" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="58">kCFAllocatorDefault<pos:position pos:line="70" pos:column="77"/></name></expr></argument>,
            <argument><expr><name pos:line="71" pos:column="13">kNilOptions<pos:position pos:line="71" pos:column="24"/></name></expr></argument>)<pos:position pos:line="71" pos:column="25"/></argument_list></call> <operator pos:line="71" pos:column="26">!=<pos:position pos:line="71" pos:column="28"/></operator> <name pos:line="71" pos:column="29">kIOReturnSuccess<pos:position pos:line="71" pos:column="45"/></name> <operator pos:line="71" pos:column="46">||<pos:position pos:line="71" pos:column="48"/></operator>
        <name pos:line="72" pos:column="9">props_dict<pos:position pos:line="72" pos:column="19"/></name> <operator pos:line="72" pos:column="20">==<pos:position pos:line="72" pos:column="22"/></operator> <name pos:line="72" pos:column="23">NULL<pos:position pos:line="72" pos:column="27"/></name></expr>)<pos:position pos:line="72" pos:column="28"/></condition><then pos:line="72" pos:column="28"> <block pos:line="72" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">ERROR<pos:position pos:line="73" pos:column="12"/></name><argument_list pos:line="73" pos:column="12">(<argument><expr><literal type="string" pos:line="73" pos:column="13">"disk-plugin: IORegistryEntryCreateCFProperties failed."<pos:position pos:line="73" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="74" pos:column="7">IOObjectRelease<pos:position pos:line="74" pos:column="22"/></name><argument_list pos:line="74" pos:column="22">(<argument><expr><name pos:line="74" pos:column="23">disk<pos:position pos:line="74" pos:column="27"/></name></expr></argument>)<pos:position pos:line="74" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="29"/></expr_stmt>
      <continue pos:line="75" pos:column="7">continue;<pos:position pos:line="75" pos:column="16"/></continue>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="78" pos:column="5">/* extract name and stats dictionary */</comment>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">memset<pos:position pos:line="79" pos:column="11"/></name><argument_list pos:line="79" pos:column="11">(<argument><expr><name pos:line="79" pos:column="12">props_disk_name_bsd<pos:position pos:line="79" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="33">0<pos:position pos:line="79" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="36">sizeof<argument_list pos:line="79" pos:column="42">(<argument><expr><name pos:line="79" pos:column="43">props_disk_name_bsd<pos:position pos:line="79" pos:column="62"/></name></expr></argument>)<pos:position pos:line="79" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="79" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name pos:line="80" pos:column="5">tmp_cf_string_ref<pos:position pos:line="80" pos:column="22"/></name> <operator pos:line="80" pos:column="23">=<pos:position pos:line="80" pos:column="24"/></operator>
        <operator pos:line="81" pos:column="9">(<pos:position pos:line="81" pos:column="10"/></operator><name pos:line="81" pos:column="10">CFStringRef<pos:position pos:line="81" pos:column="21"/></name><operator pos:line="81" pos:column="21">)<pos:position pos:line="81" pos:column="22"/></operator><call><name pos:line="81" pos:column="22">CFDictionaryGetValue<pos:position pos:line="81" pos:column="42"/></name><argument_list pos:line="81" pos:column="42">(<argument><expr><name pos:line="81" pos:column="43">props_dict<pos:position pos:line="81" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="81" pos:column="55">CFSTR<pos:position pos:line="81" pos:column="60"/></name><argument_list pos:line="81" pos:column="60">(<argument><expr><name pos:line="81" pos:column="61">kIOBSDNameKey<pos:position pos:line="81" pos:column="74"/></name></expr></argument>)<pos:position pos:line="81" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="77"/></expr_stmt>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><name pos:line="82" pos:column="9">tmp_cf_string_ref<pos:position pos:line="82" pos:column="26"/></name></expr>)<pos:position pos:line="82" pos:column="27"/></condition><then pos:line="82" pos:column="27"> <block pos:line="82" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="83" pos:column="7">assert<pos:position pos:line="83" pos:column="13"/></name><argument_list pos:line="83" pos:column="13">(<argument><expr><call><name pos:line="83" pos:column="14">CFGetTypeID<pos:position pos:line="83" pos:column="25"/></name><argument_list pos:line="83" pos:column="25">(<argument><expr><name pos:line="83" pos:column="26">tmp_cf_string_ref<pos:position pos:line="83" pos:column="43"/></name></expr></argument>)<pos:position pos:line="83" pos:column="44"/></argument_list></call> <operator pos:line="83" pos:column="45">==<pos:position pos:line="83" pos:column="47"/></operator> <call><name pos:line="83" pos:column="48">CFStringGetTypeID<pos:position pos:line="83" pos:column="65"/></name><argument_list pos:line="83" pos:column="65">()<pos:position pos:line="83" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="69"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="84" pos:column="7">CFStringGetCString<pos:position pos:line="84" pos:column="25"/></name><argument_list pos:line="84" pos:column="25">(<argument><expr><name pos:line="84" pos:column="26">tmp_cf_string_ref<pos:position pos:line="84" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="45">props_disk_name_bsd<pos:position pos:line="84" pos:column="64"/></name></expr></argument>,
                         <argument><expr><sizeof pos:line="85" pos:column="26">sizeof<argument_list pos:line="85" pos:column="32">(<argument><expr><name pos:line="85" pos:column="33">props_disk_name_bsd<pos:position pos:line="85" pos:column="52"/></name></expr></argument>)<pos:position pos:line="85" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="85" pos:column="55">kCFStringEncodingUTF8<pos:position pos:line="85" pos:column="76"/></name></expr></argument>)<pos:position pos:line="85" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="87" pos:column="5">stats_dict<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">=<pos:position pos:line="87" pos:column="17"/></operator> <operator pos:line="87" pos:column="18">(<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="19">CFDictionaryRef<pos:position pos:line="87" pos:column="34"/></name><operator pos:line="87" pos:column="34">)<pos:position pos:line="87" pos:column="35"/></operator><call><name pos:line="87" pos:column="35">CFDictionaryGetValue<pos:position pos:line="87" pos:column="55"/></name><argument_list pos:line="87" pos:column="55">(
        <argument><expr><name pos:line="88" pos:column="9">props_dict<pos:position pos:line="88" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="88" pos:column="21">CFSTR<pos:position pos:line="88" pos:column="26"/></name><argument_list pos:line="88" pos:column="26">(<argument><expr><name pos:line="88" pos:column="27">kIOBlockStorageDriverStatisticsKey<pos:position pos:line="88" pos:column="61"/></name></expr></argument>)<pos:position pos:line="88" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="88" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="64"/></expr_stmt>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><name pos:line="89" pos:column="9">stats_dict<pos:position pos:line="89" pos:column="19"/></name> <operator pos:line="89" pos:column="20">==<pos:position pos:line="89" pos:column="22"/></operator> <name pos:line="89" pos:column="23">NULL<pos:position pos:line="89" pos:column="27"/></name></expr>)<pos:position pos:line="89" pos:column="28"/></condition><then pos:line="89" pos:column="28"> <block pos:line="89" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="90" pos:column="7">ERROR<pos:position pos:line="90" pos:column="12"/></name><argument_list pos:line="90" pos:column="12">(<argument><expr><literal type="string" pos:line="90" pos:column="13">"disk plugin: CFDictionaryGetValue (%s) failed."<pos:position pos:line="90" pos:column="61"/></literal></expr></argument>,
            <argument><expr><name pos:line="91" pos:column="13">kIOBlockStorageDriverStatisticsKey<pos:position pos:line="91" pos:column="47"/></name></expr></argument>)<pos:position pos:line="91" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="92" pos:column="7">CFRelease<pos:position pos:line="92" pos:column="16"/></name><argument_list pos:line="92" pos:column="16">(<argument><expr><name pos:line="92" pos:column="17">props_dict<pos:position pos:line="92" pos:column="27"/></name></expr></argument>)<pos:position pos:line="92" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="93" pos:column="7">IOObjectRelease<pos:position pos:line="93" pos:column="22"/></name><argument_list pos:line="93" pos:column="22">(<argument><expr><name pos:line="93" pos:column="23">disk<pos:position pos:line="93" pos:column="27"/></name></expr></argument>)<pos:position pos:line="93" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="29"/></expr_stmt>
      <continue pos:line="94" pos:column="7">continue;<pos:position pos:line="94" pos:column="16"/></continue>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="96" pos:column="5">DEBUG<pos:position pos:line="96" pos:column="10"/></name><argument_list pos:line="96" pos:column="10">(<argument><expr><literal type="string" pos:line="96" pos:column="11">"disk plugin: props_disk_name_bsd=\"%s\""<pos:position pos:line="96" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="54">props_disk_name_bsd<pos:position pos:line="96" pos:column="73"/></name></expr></argument>)<pos:position pos:line="96" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="75"/></expr_stmt>

    <comment type="block" pos:line="98" pos:column="5">/* choose name */</comment>
    <if pos:line="99" pos:column="5">if <condition pos:line="99" pos:column="8">(<expr><name pos:line="99" pos:column="9">use_bsd_name<pos:position pos:line="99" pos:column="21"/></name></expr>)<pos:position pos:line="99" pos:column="22"/></condition><then pos:line="99" pos:column="22"> <block pos:line="99" pos:column="23">{
      <if pos:line="100" pos:column="7">if <condition pos:line="100" pos:column="10">(<expr><name><name pos:line="100" pos:column="11">child_disk_name_bsd<pos:position pos:line="100" pos:column="30"/></name><index pos:line="100" pos:column="30">[<expr><literal type="number" pos:line="100" pos:column="31">0<pos:position pos:line="100" pos:column="32"/></literal></expr>]<pos:position pos:line="100" pos:column="33"/></index></name> <operator pos:line="100" pos:column="34">!=<pos:position pos:line="100" pos:column="36"/></operator> <literal type="number" pos:line="100" pos:column="37">0<pos:position pos:line="100" pos:column="38"/></literal></expr>)<pos:position pos:line="100" pos:column="39"/></condition><then pos:line="100" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="101" pos:column="9">sstrncpy<pos:position pos:line="101" pos:column="17"/></name><argument_list pos:line="101" pos:column="17">(<argument><expr><name pos:line="101" pos:column="18">disk_name<pos:position pos:line="101" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="29">child_disk_name_bsd<pos:position pos:line="101" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="101" pos:column="50">sizeof<argument_list pos:line="101" pos:column="56">(<argument><expr><name pos:line="101" pos:column="57">disk_name<pos:position pos:line="101" pos:column="66"/></name></expr></argument>)<pos:position pos:line="101" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="101" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="69"/></expr_stmt></block></then>
      <elseif pos:line="102" pos:column="7">else <if pos:line="102" pos:column="12">if <condition pos:line="102" pos:column="15">(<expr><name><name pos:line="102" pos:column="16">props_disk_name_bsd<pos:position pos:line="102" pos:column="35"/></name><index pos:line="102" pos:column="35">[<expr><literal type="number" pos:line="102" pos:column="36">0<pos:position pos:line="102" pos:column="37"/></literal></expr>]<pos:position pos:line="102" pos:column="38"/></index></name> <operator pos:line="102" pos:column="39">!=<pos:position pos:line="102" pos:column="41"/></operator> <literal type="number" pos:line="102" pos:column="42">0<pos:position pos:line="102" pos:column="43"/></literal></expr>)<pos:position pos:line="102" pos:column="44"/></condition><then pos:line="102" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="9">sstrncpy<pos:position pos:line="103" pos:column="17"/></name><argument_list pos:line="103" pos:column="17">(<argument><expr><name pos:line="103" pos:column="18">disk_name<pos:position pos:line="103" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="29">props_disk_name_bsd<pos:position pos:line="103" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="103" pos:column="50">sizeof<argument_list pos:line="103" pos:column="56">(<argument><expr><name pos:line="103" pos:column="57">disk_name<pos:position pos:line="103" pos:column="66"/></name></expr></argument>)<pos:position pos:line="103" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="103" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="69"/></expr_stmt></block></then></if></elseif>
      <else pos:line="104" pos:column="7">else <block pos:line="104" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="105" pos:column="9">ERROR<pos:position pos:line="105" pos:column="14"/></name><argument_list pos:line="105" pos:column="14">(<argument><expr><literal type="string" pos:line="105" pos:column="15">"disk plugin: can't find bsd disk name."<pos:position pos:line="105" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="106" pos:column="9">ssnprintf<pos:position pos:line="106" pos:column="18"/></name><argument_list pos:line="106" pos:column="18">(<argument><expr><name pos:line="106" pos:column="19">disk_name<pos:position pos:line="106" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="106" pos:column="30">sizeof<argument_list pos:line="106" pos:column="36">(<argument><expr><name pos:line="106" pos:column="37">disk_name<pos:position pos:line="106" pos:column="46"/></name></expr></argument>)<pos:position pos:line="106" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="49">"%i-%i"<pos:position pos:line="106" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="58">disk_major<pos:position pos:line="106" pos:column="68"/></name></expr></argument>,
                  <argument><expr><name pos:line="107" pos:column="19">disk_minor<pos:position pos:line="107" pos:column="29"/></name></expr></argument>)<pos:position pos:line="107" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="108" pos:column="8"/></block></else></if>
    }<pos:position pos:line="109" pos:column="6"/></block></then> <else pos:line="109" pos:column="7">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="7">ssnprintf<pos:position pos:line="110" pos:column="16"/></name><argument_list pos:line="110" pos:column="16">(<argument><expr><name pos:line="110" pos:column="17">disk_name<pos:position pos:line="110" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="110" pos:column="28">sizeof<argument_list pos:line="110" pos:column="34">(<argument><expr><name pos:line="110" pos:column="35">disk_name<pos:position pos:line="110" pos:column="44"/></name></expr></argument>)<pos:position pos:line="110" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="47">"%i-%i"<pos:position pos:line="110" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="110" pos:column="56">disk_major<pos:position pos:line="110" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="68">disk_minor<pos:position pos:line="110" pos:column="78"/></name></expr></argument>)<pos:position pos:line="110" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="80"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="112" pos:column="5">DEBUG<pos:position pos:line="112" pos:column="10"/></name><argument_list pos:line="112" pos:column="10">(<argument><expr><literal type="string" pos:line="112" pos:column="11">"disk plugin: disk_name = \"%s\""<pos:position pos:line="112" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="46">disk_name<pos:position pos:line="112" pos:column="55"/></name></expr></argument>)<pos:position pos:line="112" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="114" pos:column="5">/* check the name against ignore list */</comment>
    <if pos:line="115" pos:column="5">if <condition pos:line="115" pos:column="8">(<expr><call><name pos:line="115" pos:column="9">ignorelist_match<pos:position pos:line="115" pos:column="25"/></name><argument_list pos:line="115" pos:column="25">(<argument><expr><name pos:line="115" pos:column="26">ignorelist<pos:position pos:line="115" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="38">disk_name<pos:position pos:line="115" pos:column="47"/></name></expr></argument>)<pos:position pos:line="115" pos:column="48"/></argument_list></call> <operator pos:line="115" pos:column="49">!=<pos:position pos:line="115" pos:column="51"/></operator> <literal type="number" pos:line="115" pos:column="52">0<pos:position pos:line="115" pos:column="53"/></literal></expr>)<pos:position pos:line="115" pos:column="54"/></condition><then pos:line="115" pos:column="54"> <block pos:line="115" pos:column="55">{
      <expr_stmt><expr><call><name pos:line="116" pos:column="7">CFRelease<pos:position pos:line="116" pos:column="16"/></name><argument_list pos:line="116" pos:column="16">(<argument><expr><name pos:line="116" pos:column="17">props_dict<pos:position pos:line="116" pos:column="27"/></name></expr></argument>)<pos:position pos:line="116" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="117" pos:column="7">IOObjectRelease<pos:position pos:line="117" pos:column="22"/></name><argument_list pos:line="117" pos:column="22">(<argument><expr><name pos:line="117" pos:column="23">disk<pos:position pos:line="117" pos:column="27"/></name></expr></argument>)<pos:position pos:line="117" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="29"/></expr_stmt>
      <continue pos:line="118" pos:column="7">continue;<pos:position pos:line="118" pos:column="16"/></continue>
    }<pos:position pos:line="119" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="121" pos:column="5">/* extract the stats */</comment>
    <expr_stmt><expr><name pos:line="122" pos:column="5">read_ops<pos:position pos:line="122" pos:column="13"/></name> <operator pos:line="122" pos:column="14">=<pos:position pos:line="122" pos:column="15"/></operator>
        <call><name pos:line="123" pos:column="9">dict_get_value<pos:position pos:line="123" pos:column="23"/></name><argument_list pos:line="123" pos:column="23">(<argument><expr><name pos:line="123" pos:column="24">stats_dict<pos:position pos:line="123" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="36">kIOBlockStorageDriverStatisticsReadsKey<pos:position pos:line="123" pos:column="75"/></name></expr></argument>)<pos:position pos:line="123" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><name pos:line="124" pos:column="5">read_byt<pos:position pos:line="124" pos:column="13"/></name> <operator pos:line="124" pos:column="14">=<pos:position pos:line="124" pos:column="15"/></operator>
        <call><name pos:line="125" pos:column="9">dict_get_value<pos:position pos:line="125" pos:column="23"/></name><argument_list pos:line="125" pos:column="23">(<argument><expr><name pos:line="125" pos:column="24">stats_dict<pos:position pos:line="125" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="36">kIOBlockStorageDriverStatisticsBytesReadKey<pos:position pos:line="125" pos:column="79"/></name></expr></argument>)<pos:position pos:line="125" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><name pos:line="126" pos:column="5">read_tme<pos:position pos:line="126" pos:column="13"/></name> <operator pos:line="126" pos:column="14">=<pos:position pos:line="126" pos:column="15"/></operator> <call><name pos:line="126" pos:column="16">dict_get_value<pos:position pos:line="126" pos:column="30"/></name><argument_list pos:line="126" pos:column="30">(<argument><expr><name pos:line="126" pos:column="31">stats_dict<pos:position pos:line="126" pos:column="41"/></name></expr></argument>,
                              <argument><expr><name pos:line="127" pos:column="31">kIOBlockStorageDriverStatisticsTotalReadTimeKey<pos:position pos:line="127" pos:column="78"/></name></expr></argument>)<pos:position pos:line="127" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name pos:line="128" pos:column="5">write_ops<pos:position pos:line="128" pos:column="14"/></name> <operator pos:line="128" pos:column="15">=<pos:position pos:line="128" pos:column="16"/></operator>
        <call><name pos:line="129" pos:column="9">dict_get_value<pos:position pos:line="129" pos:column="23"/></name><argument_list pos:line="129" pos:column="23">(<argument><expr><name pos:line="129" pos:column="24">stats_dict<pos:position pos:line="129" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="36">kIOBlockStorageDriverStatisticsWritesKey<pos:position pos:line="129" pos:column="76"/></name></expr></argument>)<pos:position pos:line="129" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><name pos:line="130" pos:column="5">write_byt<pos:position pos:line="130" pos:column="14"/></name> <operator pos:line="130" pos:column="15">=<pos:position pos:line="130" pos:column="16"/></operator> <call><name pos:line="130" pos:column="17">dict_get_value<pos:position pos:line="130" pos:column="31"/></name><argument_list pos:line="130" pos:column="31">(<argument><expr><name pos:line="130" pos:column="32">stats_dict<pos:position pos:line="130" pos:column="42"/></name></expr></argument>,
                               <argument><expr><name pos:line="131" pos:column="32">kIOBlockStorageDriverStatisticsBytesWrittenKey<pos:position pos:line="131" pos:column="78"/></name></expr></argument>)<pos:position pos:line="131" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name pos:line="132" pos:column="5">write_tme<pos:position pos:line="132" pos:column="14"/></name> <operator pos:line="132" pos:column="15">=<pos:position pos:line="132" pos:column="16"/></operator> <call><name pos:line="132" pos:column="17">dict_get_value<pos:position pos:line="132" pos:column="31"/></name><argument_list pos:line="132" pos:column="31">(
        <argument><expr><name pos:line="133" pos:column="9">stats_dict<pos:position pos:line="133" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="21">kIOBlockStorageDriverStatisticsTotalWriteTimeKey<pos:position pos:line="133" pos:column="69"/></name></expr></argument>)<pos:position pos:line="133" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="134" pos:column="5">CFRelease<pos:position pos:line="134" pos:column="14"/></name><argument_list pos:line="134" pos:column="14">(<argument><expr><name pos:line="134" pos:column="15">props_dict<pos:position pos:line="134" pos:column="25"/></name></expr></argument>)<pos:position pos:line="134" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="135" pos:column="5">IOObjectRelease<pos:position pos:line="135" pos:column="20"/></name><argument_list pos:line="135" pos:column="20">(<argument><expr><name pos:line="135" pos:column="21">disk<pos:position pos:line="135" pos:column="25"/></name></expr></argument>)<pos:position pos:line="135" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="137" pos:column="5">/* and submit */</comment>
    <if pos:line="138" pos:column="5">if <condition pos:line="138" pos:column="8">(<expr><operator pos:line="138" pos:column="9">(<pos:position pos:line="138" pos:column="10"/></operator><name pos:line="138" pos:column="10">read_byt<pos:position pos:line="138" pos:column="18"/></name> <operator pos:line="138" pos:column="19">!=<pos:position pos:line="138" pos:column="21"/></operator> <operator pos:line="138" pos:column="22">-<pos:position pos:line="138" pos:column="23"/></operator><literal type="number" pos:line="138" pos:column="23">1LL<pos:position pos:line="138" pos:column="26"/></literal><operator pos:line="138" pos:column="26">)<pos:position pos:line="138" pos:column="27"/></operator> <operator pos:line="138" pos:column="28">||<pos:position pos:line="138" pos:column="30"/></operator> <operator pos:line="138" pos:column="31">(<pos:position pos:line="138" pos:column="32"/></operator><name pos:line="138" pos:column="32">write_byt<pos:position pos:line="138" pos:column="41"/></name> <operator pos:line="138" pos:column="42">!=<pos:position pos:line="138" pos:column="44"/></operator> <operator pos:line="138" pos:column="45">-<pos:position pos:line="138" pos:column="46"/></operator><literal type="number" pos:line="138" pos:column="46">1LL<pos:position pos:line="138" pos:column="49"/></literal><operator pos:line="138" pos:column="49">)<pos:position pos:line="138" pos:column="50"/></operator></expr>)<pos:position pos:line="138" pos:column="51"/></condition><then pos:line="138" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="139" pos:column="7">disk_submit<pos:position pos:line="139" pos:column="18"/></name><argument_list pos:line="139" pos:column="18">(<argument><expr><name pos:line="139" pos:column="19">disk_name<pos:position pos:line="139" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="30">"disk_octets"<pos:position pos:line="139" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="139" pos:column="45">read_byt<pos:position pos:line="139" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="55">write_byt<pos:position pos:line="139" pos:column="64"/></name></expr></argument>)<pos:position pos:line="139" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="66"/></expr_stmt></block></then></if>
    <if pos:line="140" pos:column="5">if <condition pos:line="140" pos:column="8">(<expr><operator pos:line="140" pos:column="9">(<pos:position pos:line="140" pos:column="10"/></operator><name pos:line="140" pos:column="10">read_ops<pos:position pos:line="140" pos:column="18"/></name> <operator pos:line="140" pos:column="19">!=<pos:position pos:line="140" pos:column="21"/></operator> <operator pos:line="140" pos:column="22">-<pos:position pos:line="140" pos:column="23"/></operator><literal type="number" pos:line="140" pos:column="23">1LL<pos:position pos:line="140" pos:column="26"/></literal><operator pos:line="140" pos:column="26">)<pos:position pos:line="140" pos:column="27"/></operator> <operator pos:line="140" pos:column="28">||<pos:position pos:line="140" pos:column="30"/></operator> <operator pos:line="140" pos:column="31">(<pos:position pos:line="140" pos:column="32"/></operator><name pos:line="140" pos:column="32">write_ops<pos:position pos:line="140" pos:column="41"/></name> <operator pos:line="140" pos:column="42">!=<pos:position pos:line="140" pos:column="44"/></operator> <operator pos:line="140" pos:column="45">-<pos:position pos:line="140" pos:column="46"/></operator><literal type="number" pos:line="140" pos:column="46">1LL<pos:position pos:line="140" pos:column="49"/></literal><operator pos:line="140" pos:column="49">)<pos:position pos:line="140" pos:column="50"/></operator></expr>)<pos:position pos:line="140" pos:column="51"/></condition><then pos:line="140" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="141" pos:column="7">disk_submit<pos:position pos:line="141" pos:column="18"/></name><argument_list pos:line="141" pos:column="18">(<argument><expr><name pos:line="141" pos:column="19">disk_name<pos:position pos:line="141" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="30">"disk_ops"<pos:position pos:line="141" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="141" pos:column="42">read_ops<pos:position pos:line="141" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="52">write_ops<pos:position pos:line="141" pos:column="61"/></name></expr></argument>)<pos:position pos:line="141" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="63"/></expr_stmt></block></then></if>
    <if pos:line="142" pos:column="5">if <condition pos:line="142" pos:column="8">(<expr><operator pos:line="142" pos:column="9">(<pos:position pos:line="142" pos:column="10"/></operator><name pos:line="142" pos:column="10">read_tme<pos:position pos:line="142" pos:column="18"/></name> <operator pos:line="142" pos:column="19">!=<pos:position pos:line="142" pos:column="21"/></operator> <operator pos:line="142" pos:column="22">-<pos:position pos:line="142" pos:column="23"/></operator><literal type="number" pos:line="142" pos:column="23">1LL<pos:position pos:line="142" pos:column="26"/></literal><operator pos:line="142" pos:column="26">)<pos:position pos:line="142" pos:column="27"/></operator> <operator pos:line="142" pos:column="28">||<pos:position pos:line="142" pos:column="30"/></operator> <operator pos:line="142" pos:column="31">(<pos:position pos:line="142" pos:column="32"/></operator><name pos:line="142" pos:column="32">write_tme<pos:position pos:line="142" pos:column="41"/></name> <operator pos:line="142" pos:column="42">!=<pos:position pos:line="142" pos:column="44"/></operator> <operator pos:line="142" pos:column="45">-<pos:position pos:line="142" pos:column="46"/></operator><literal type="number" pos:line="142" pos:column="46">1LL<pos:position pos:line="142" pos:column="49"/></literal><operator pos:line="142" pos:column="49">)<pos:position pos:line="142" pos:column="50"/></operator></expr>)<pos:position pos:line="142" pos:column="51"/></condition><then pos:line="142" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="143" pos:column="7">disk_submit<pos:position pos:line="143" pos:column="18"/></name><argument_list pos:line="143" pos:column="18">(<argument><expr><name pos:line="143" pos:column="19">disk_name<pos:position pos:line="143" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="30">"disk_time"<pos:position pos:line="143" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="143" pos:column="43">read_tme<pos:position pos:line="143" pos:column="51"/></name> <operator pos:line="143" pos:column="52">/<pos:position pos:line="143" pos:column="53"/></operator> <literal type="number" pos:line="143" pos:column="54">1000<pos:position pos:line="143" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="143" pos:column="60">write_tme<pos:position pos:line="143" pos:column="69"/></name> <operator pos:line="143" pos:column="70">/<pos:position pos:line="143" pos:column="71"/></operator> <literal type="number" pos:line="143" pos:column="72">1000<pos:position pos:line="143" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="78"/></expr_stmt></block></then></if>
  }<pos:position pos:line="144" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="145" pos:column="3">IOObjectRelease<pos:position pos:line="145" pos:column="18"/></name><argument_list pos:line="145" pos:column="18">(<argument><expr><name pos:line="145" pos:column="19">disk_list<pos:position pos:line="145" pos:column="28"/></name></expr></argument>)<pos:position pos:line="145" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="30"/></expr_stmt>
<comment type="block" pos:line="146" pos:column="1">/* #endif HAVE_IOKIT_IOKITLIB_H */</comment>

<cpp:elif pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">elif<pos:position pos:line="148" pos:column="6"/></cpp:directive> <expr><name pos:line="148" pos:column="7">KERNEL_FREEBSD<pos:position pos:line="148" pos:column="21"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="149" pos:column="3">int<pos:position pos:line="149" pos:column="6"/></name></type> <name pos:line="149" pos:column="7">retry<pos:position pos:line="149" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="149" pos:column="14">dirty<pos:position pos:line="149" pos:column="19"/></name></decl>;<pos:position pos:line="149" pos:column="20"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="151" pos:column="3">void<pos:position pos:line="151" pos:column="7"/></name> <modifier pos:line="151" pos:column="8">*<pos:position pos:line="151" pos:column="9"/></modifier></type><name pos:line="151" pos:column="9">snap<pos:position pos:line="151" pos:column="13"/></name> <init pos:line="151" pos:column="14">= <expr><name pos:line="151" pos:column="16">NULL<pos:position pos:line="151" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="151" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="152" pos:column="3">struct<pos:position pos:line="152" pos:column="9"/></name> <name pos:line="152" pos:column="10">devstat<pos:position pos:line="152" pos:column="17"/></name></name> <modifier pos:line="152" pos:column="18">*<pos:position pos:line="152" pos:column="19"/></modifier></type><name pos:line="152" pos:column="19">snap_iter<pos:position pos:line="152" pos:column="28"/></name></decl>;<pos:position pos:line="152" pos:column="29"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="154" pos:column="3">struct<pos:position pos:line="154" pos:column="9"/></name> <name pos:line="154" pos:column="10">gident<pos:position pos:line="154" pos:column="16"/></name></name> <modifier pos:line="154" pos:column="17">*<pos:position pos:line="154" pos:column="18"/></modifier></type><name pos:line="154" pos:column="18">geom_id<pos:position pos:line="154" pos:column="25"/></name></decl>;<pos:position pos:line="154" pos:column="26"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="156" pos:column="3">const<pos:position pos:line="156" pos:column="8"/></specifier> <name pos:line="156" pos:column="9">char<pos:position pos:line="156" pos:column="13"/></name> <modifier pos:line="156" pos:column="14">*<pos:position pos:line="156" pos:column="15"/></modifier></type><name pos:line="156" pos:column="15">disk_name<pos:position pos:line="156" pos:column="24"/></name></decl>;<pos:position pos:line="156" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="157" pos:column="3">long<pos:position pos:line="157" pos:column="7"/></name> <name pos:line="157" pos:column="8">double<pos:position pos:line="157" pos:column="14"/></name></type> <name pos:line="157" pos:column="15">read_time<pos:position pos:line="157" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="157" pos:column="26">write_time<pos:position pos:line="157" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="157" pos:column="38">busy_time<pos:position pos:line="157" pos:column="47"/></name></decl>, <decl><type ref="prev"/><name pos:line="157" pos:column="49">total_duration<pos:position pos:line="157" pos:column="63"/></name></decl>;<pos:position pos:line="157" pos:column="64"/></decl_stmt>

  <for pos:line="159" pos:column="3">for <control pos:line="159" pos:column="7">(<init><expr><name pos:line="159" pos:column="8">retry<pos:position pos:line="159" pos:column="13"/></name> <operator pos:line="159" pos:column="14">=<pos:position pos:line="159" pos:column="15"/></operator> <literal type="number" pos:line="159" pos:column="16">0<pos:position pos:line="159" pos:column="17"/></literal></expr><operator pos:line="159" pos:column="17">,<pos:position pos:line="159" pos:column="18"/></operator> <expr><name pos:line="159" pos:column="19">dirty<pos:position pos:line="159" pos:column="24"/></name> <operator pos:line="159" pos:column="25">=<pos:position pos:line="159" pos:column="26"/></operator> <literal type="number" pos:line="159" pos:column="27">1<pos:position pos:line="159" pos:column="28"/></literal></expr>;<pos:position pos:line="159" pos:column="29"/></init> <condition><expr><name pos:line="159" pos:column="30">retry<pos:position pos:line="159" pos:column="35"/></name> <operator pos:line="159" pos:column="36">&lt;<pos:position pos:line="159" pos:column="40"/></operator> <literal type="number" pos:line="159" pos:column="38">5<pos:position pos:line="159" pos:column="39"/></literal> <operator pos:line="159" pos:column="40">&amp;&amp;<pos:position pos:line="159" pos:column="50"/></operator> <name pos:line="159" pos:column="43">dirty<pos:position pos:line="159" pos:column="48"/></name> <operator pos:line="159" pos:column="49">==<pos:position pos:line="159" pos:column="51"/></operator> <literal type="number" pos:line="159" pos:column="52">1<pos:position pos:line="159" pos:column="53"/></literal></expr>;<pos:position pos:line="159" pos:column="54"/></condition> <incr><expr><name pos:line="159" pos:column="55">retry<pos:position pos:line="159" pos:column="60"/></name><operator pos:line="159" pos:column="60">++<pos:position pos:line="159" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="159" pos:column="63"/></control> <block pos:line="159" pos:column="64">{
    <if pos:line="160" pos:column="5">if <condition pos:line="160" pos:column="8">(<expr><name pos:line="160" pos:column="9">snap<pos:position pos:line="160" pos:column="13"/></name> <operator pos:line="160" pos:column="14">!=<pos:position pos:line="160" pos:column="16"/></operator> <name pos:line="160" pos:column="17">NULL<pos:position pos:line="160" pos:column="21"/></name></expr>)<pos:position pos:line="160" pos:column="22"/></condition><then pos:line="160" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="161" pos:column="7">geom_stats_snapshot_free<pos:position pos:line="161" pos:column="31"/></name><argument_list pos:line="161" pos:column="31">(<argument><expr><name pos:line="161" pos:column="32">snap<pos:position pos:line="161" pos:column="36"/></name></expr></argument>)<pos:position pos:line="161" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="38"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="163" pos:column="5">/* Get a fresh copy of stats snapshot */</comment>
    <expr_stmt><expr><name pos:line="164" pos:column="5">snap<pos:position pos:line="164" pos:column="9"/></name> <operator pos:line="164" pos:column="10">=<pos:position pos:line="164" pos:column="11"/></operator> <call><name pos:line="164" pos:column="12">geom_stats_snapshot_get<pos:position pos:line="164" pos:column="35"/></name><argument_list pos:line="164" pos:column="35">()<pos:position pos:line="164" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="38"/></expr_stmt>
    <if pos:line="165" pos:column="5">if <condition pos:line="165" pos:column="8">(<expr><name pos:line="165" pos:column="9">snap<pos:position pos:line="165" pos:column="13"/></name> <operator pos:line="165" pos:column="14">==<pos:position pos:line="165" pos:column="16"/></operator> <name pos:line="165" pos:column="17">NULL<pos:position pos:line="165" pos:column="21"/></name></expr>)<pos:position pos:line="165" pos:column="22"/></condition><then pos:line="165" pos:column="22"> <block pos:line="165" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="166" pos:column="7">ERROR<pos:position pos:line="166" pos:column="12"/></name><argument_list pos:line="166" pos:column="12">(<argument><expr><literal type="string" pos:line="166" pos:column="13">"disk plugin: geom_stats_snapshot_get() failed."<pos:position pos:line="166" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="63"/></expr_stmt>
      <return pos:line="167" pos:column="7">return <expr><operator pos:line="167" pos:column="14">(<pos:position pos:line="167" pos:column="15"/></operator><operator pos:line="167" pos:column="15">-<pos:position pos:line="167" pos:column="16"/></operator><literal type="number" pos:line="167" pos:column="16">1<pos:position pos:line="167" pos:column="17"/></literal><operator pos:line="167" pos:column="17">)<pos:position pos:line="167" pos:column="18"/></operator></expr>;<pos:position pos:line="167" pos:column="19"/></return>
    }<pos:position pos:line="168" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="170" pos:column="5">/* Check if we have dirty read from this snapshot */</comment>
    <expr_stmt><expr><name pos:line="171" pos:column="5">dirty<pos:position pos:line="171" pos:column="10"/></name> <operator pos:line="171" pos:column="11">=<pos:position pos:line="171" pos:column="12"/></operator> <literal type="number" pos:line="171" pos:column="13">0<pos:position pos:line="171" pos:column="14"/></literal></expr>;<pos:position pos:line="171" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="172" pos:column="5">geom_stats_snapshot_reset<pos:position pos:line="172" pos:column="30"/></name><argument_list pos:line="172" pos:column="30">(<argument><expr><name pos:line="172" pos:column="31">snap<pos:position pos:line="172" pos:column="35"/></name></expr></argument>)<pos:position pos:line="172" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="37"/></expr_stmt>
    <while pos:line="173" pos:column="5">while <condition pos:line="173" pos:column="11">(<expr><operator pos:line="173" pos:column="12">(<pos:position pos:line="173" pos:column="13"/></operator><name pos:line="173" pos:column="13">snap_iter<pos:position pos:line="173" pos:column="22"/></name> <operator pos:line="173" pos:column="23">=<pos:position pos:line="173" pos:column="24"/></operator> <call><name pos:line="173" pos:column="25">geom_stats_snapshot_next<pos:position pos:line="173" pos:column="49"/></name><argument_list pos:line="173" pos:column="49">(<argument><expr><name pos:line="173" pos:column="50">snap<pos:position pos:line="173" pos:column="54"/></name></expr></argument>)<pos:position pos:line="173" pos:column="55"/></argument_list></call><operator pos:line="173" pos:column="55">)<pos:position pos:line="173" pos:column="56"/></operator> <operator pos:line="173" pos:column="57">!=<pos:position pos:line="173" pos:column="59"/></operator> <name pos:line="173" pos:column="60">NULL<pos:position pos:line="173" pos:column="64"/></name></expr>)<pos:position pos:line="173" pos:column="65"/></condition> <block pos:line="173" pos:column="66">{
      <if pos:line="174" pos:column="7">if <condition pos:line="174" pos:column="10">(<expr><name><name pos:line="174" pos:column="11">snap_iter<pos:position pos:line="174" pos:column="20"/></name><operator pos:line="174" pos:column="20">-&gt;<pos:position pos:line="174" pos:column="25"/></operator><name pos:line="174" pos:column="22">id<pos:position pos:line="174" pos:column="24"/></name></name> <operator pos:line="174" pos:column="25">==<pos:position pos:line="174" pos:column="27"/></operator> <name pos:line="174" pos:column="28">NULL<pos:position pos:line="174" pos:column="32"/></name></expr>)<pos:position pos:line="174" pos:column="33"/></condition><then pos:line="174" pos:column="33">
        <block type="pseudo"><continue pos:line="175" pos:column="9">continue;<pos:position pos:line="175" pos:column="18"/></continue></block></then></if>
      <expr_stmt><expr><name pos:line="176" pos:column="7">geom_id<pos:position pos:line="176" pos:column="14"/></name> <operator pos:line="176" pos:column="15">=<pos:position pos:line="176" pos:column="16"/></operator> <call><name pos:line="176" pos:column="17">geom_lookupid<pos:position pos:line="176" pos:column="30"/></name><argument_list pos:line="176" pos:column="30">(<argument><expr><operator pos:line="176" pos:column="31">&amp;<pos:position pos:line="176" pos:column="36"/></operator><name pos:line="176" pos:column="32">geom_tree<pos:position pos:line="176" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="43">snap_iter<pos:position pos:line="176" pos:column="52"/></name><operator pos:line="176" pos:column="52">-&gt;<pos:position pos:line="176" pos:column="57"/></operator><name pos:line="176" pos:column="54">id<pos:position pos:line="176" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="176" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="58"/></expr_stmt>

      <comment type="block" pos:line="178" pos:column="7">/* New device? refresh GEOM tree */</comment>
      <if pos:line="179" pos:column="7">if <condition pos:line="179" pos:column="10">(<expr><name pos:line="179" pos:column="11">geom_id<pos:position pos:line="179" pos:column="18"/></name> <operator pos:line="179" pos:column="19">==<pos:position pos:line="179" pos:column="21"/></operator> <name pos:line="179" pos:column="22">NULL<pos:position pos:line="179" pos:column="26"/></name></expr>)<pos:position pos:line="179" pos:column="27"/></condition><then pos:line="179" pos:column="27"> <block pos:line="179" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="180" pos:column="9">geom_deletetree<pos:position pos:line="180" pos:column="24"/></name><argument_list pos:line="180" pos:column="24">(<argument><expr><operator pos:line="180" pos:column="25">&amp;<pos:position pos:line="180" pos:column="30"/></operator><name pos:line="180" pos:column="26">geom_tree<pos:position pos:line="180" pos:column="35"/></name></expr></argument>)<pos:position pos:line="180" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="37"/></expr_stmt>
        <if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><call><name pos:line="181" pos:column="13">geom_gettree<pos:position pos:line="181" pos:column="25"/></name><argument_list pos:line="181" pos:column="25">(<argument><expr><operator pos:line="181" pos:column="26">&amp;<pos:position pos:line="181" pos:column="31"/></operator><name pos:line="181" pos:column="27">geom_tree<pos:position pos:line="181" pos:column="36"/></name></expr></argument>)<pos:position pos:line="181" pos:column="37"/></argument_list></call> <operator pos:line="181" pos:column="38">!=<pos:position pos:line="181" pos:column="40"/></operator> <literal type="number" pos:line="181" pos:column="41">0<pos:position pos:line="181" pos:column="42"/></literal></expr>)<pos:position pos:line="181" pos:column="43"/></condition><then pos:line="181" pos:column="43"> <block pos:line="181" pos:column="44">{
          <expr_stmt><expr><call><name pos:line="182" pos:column="11">ERROR<pos:position pos:line="182" pos:column="16"/></name><argument_list pos:line="182" pos:column="16">(<argument><expr><literal type="string" pos:line="182" pos:column="17">"disk plugin: geom_gettree() failed"<pos:position pos:line="182" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="55"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="183" pos:column="11">geom_stats_snapshot_free<pos:position pos:line="183" pos:column="35"/></name><argument_list pos:line="183" pos:column="35">(<argument><expr><name pos:line="183" pos:column="36">snap<pos:position pos:line="183" pos:column="40"/></name></expr></argument>)<pos:position pos:line="183" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="42"/></expr_stmt>
          <return pos:line="184" pos:column="11">return <expr><operator pos:line="184" pos:column="18">(<pos:position pos:line="184" pos:column="19"/></operator><operator pos:line="184" pos:column="19">-<pos:position pos:line="184" pos:column="20"/></operator><literal type="number" pos:line="184" pos:column="20">1<pos:position pos:line="184" pos:column="21"/></literal><operator pos:line="184" pos:column="21">)<pos:position pos:line="184" pos:column="22"/></operator></expr>;<pos:position pos:line="184" pos:column="23"/></return>
        }<pos:position pos:line="185" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="186" pos:column="9">geom_id<pos:position pos:line="186" pos:column="16"/></name> <operator pos:line="186" pos:column="17">=<pos:position pos:line="186" pos:column="18"/></operator> <call><name pos:line="186" pos:column="19">geom_lookupid<pos:position pos:line="186" pos:column="32"/></name><argument_list pos:line="186" pos:column="32">(<argument><expr><operator pos:line="186" pos:column="33">&amp;<pos:position pos:line="186" pos:column="38"/></operator><name pos:line="186" pos:column="34">geom_tree<pos:position pos:line="186" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="186" pos:column="45">snap_iter<pos:position pos:line="186" pos:column="54"/></name><operator pos:line="186" pos:column="54">-&gt;<pos:position pos:line="186" pos:column="59"/></operator><name pos:line="186" pos:column="56">id<pos:position pos:line="186" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="186" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="187" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="188" pos:column="7">/*
       * This should be rare: the device come right before we take the
       * snapshot and went away right after it.  We will handle this
       * case later, so don't mark dirty but silently ignore it.
       */</comment>
      <if pos:line="193" pos:column="7">if <condition pos:line="193" pos:column="10">(<expr><name pos:line="193" pos:column="11">geom_id<pos:position pos:line="193" pos:column="18"/></name> <operator pos:line="193" pos:column="19">==<pos:position pos:line="193" pos:column="21"/></operator> <name pos:line="193" pos:column="22">NULL<pos:position pos:line="193" pos:column="26"/></name></expr>)<pos:position pos:line="193" pos:column="27"/></condition><then pos:line="193" pos:column="27">
        <block type="pseudo"><continue pos:line="194" pos:column="9">continue;<pos:position pos:line="194" pos:column="18"/></continue></block></then></if>

      <comment type="block" pos:line="196" pos:column="7">/* Only collect PROVIDER data */</comment>
      <if pos:line="197" pos:column="7">if <condition pos:line="197" pos:column="10">(<expr><name><name pos:line="197" pos:column="11">geom_id<pos:position pos:line="197" pos:column="18"/></name><operator pos:line="197" pos:column="18">-&gt;<pos:position pos:line="197" pos:column="23"/></operator><name pos:line="197" pos:column="20">lg_what<pos:position pos:line="197" pos:column="27"/></name></name> <operator pos:line="197" pos:column="28">!=<pos:position pos:line="197" pos:column="30"/></operator> <name pos:line="197" pos:column="31">ISPROVIDER<pos:position pos:line="197" pos:column="41"/></name></expr>)<pos:position pos:line="197" pos:column="42"/></condition><then pos:line="197" pos:column="42">
        <block type="pseudo"><continue pos:line="198" pos:column="9">continue;<pos:position pos:line="198" pos:column="18"/></continue></block></then></if>

      <comment type="block" pos:line="200" pos:column="7">/* Only collect data when rank is 1 (physical devices) */</comment>
      <if pos:line="201" pos:column="7">if <condition pos:line="201" pos:column="10">(<expr><operator pos:line="201" pos:column="11">(<pos:position pos:line="201" pos:column="12"/></operator><operator pos:line="201" pos:column="12">(<pos:position pos:line="201" pos:column="13"/></operator>struct <name pos:line="201" pos:column="20">gprovider<pos:position pos:line="201" pos:column="29"/></name> <operator pos:line="201" pos:column="30">*<pos:position pos:line="201" pos:column="31"/></operator><operator pos:line="201" pos:column="31">)<pos:position pos:line="201" pos:column="32"/></operator><operator pos:line="201" pos:column="32">(<pos:position pos:line="201" pos:column="33"/></operator><name><name pos:line="201" pos:column="33">geom_id<pos:position pos:line="201" pos:column="40"/></name><operator pos:line="201" pos:column="40">-&gt;<pos:position pos:line="201" pos:column="45"/></operator><name pos:line="201" pos:column="42">lg_ptr<pos:position pos:line="201" pos:column="48"/></name></name><operator pos:line="201" pos:column="48">)<pos:position pos:line="201" pos:column="49"/></operator><operator pos:line="201" pos:column="49">)<pos:position pos:line="201" pos:column="50"/></operator><operator pos:line="201" pos:column="50">-&gt;<pos:position pos:line="201" pos:column="55"/></operator><name><name pos:line="201" pos:column="52">lg_geom<pos:position pos:line="201" pos:column="59"/></name><operator pos:line="201" pos:column="59">-&gt;<pos:position pos:line="201" pos:column="64"/></operator><name pos:line="201" pos:column="61">lg_rank<pos:position pos:line="201" pos:column="68"/></name></name> <operator pos:line="201" pos:column="69">!=<pos:position pos:line="201" pos:column="71"/></operator> <literal type="number" pos:line="201" pos:column="72">1<pos:position pos:line="201" pos:column="73"/></literal></expr>)<pos:position pos:line="201" pos:column="74"/></condition><then pos:line="201" pos:column="74">
        <block type="pseudo"><continue pos:line="202" pos:column="9">continue;<pos:position pos:line="202" pos:column="18"/></continue></block></then></if>

      <comment type="block" pos:line="204" pos:column="7">/* Check if this is a dirty read quit for another try */</comment>
      <if pos:line="205" pos:column="7">if <condition pos:line="205" pos:column="10">(<expr><name><name pos:line="205" pos:column="11">snap_iter<pos:position pos:line="205" pos:column="20"/></name><operator pos:line="205" pos:column="20">-&gt;<pos:position pos:line="205" pos:column="25"/></operator><name pos:line="205" pos:column="22">sequence0<pos:position pos:line="205" pos:column="31"/></name></name> <operator pos:line="205" pos:column="32">!=<pos:position pos:line="205" pos:column="34"/></operator> <name><name pos:line="205" pos:column="35">snap_iter<pos:position pos:line="205" pos:column="44"/></name><operator pos:line="205" pos:column="44">-&gt;<pos:position pos:line="205" pos:column="49"/></operator><name pos:line="205" pos:column="46">sequence1<pos:position pos:line="205" pos:column="55"/></name></name></expr>)<pos:position pos:line="205" pos:column="56"/></condition><then pos:line="205" pos:column="56"> <block pos:line="205" pos:column="57">{
        <expr_stmt><expr><name pos:line="206" pos:column="9">dirty<pos:position pos:line="206" pos:column="14"/></name> <operator pos:line="206" pos:column="15">=<pos:position pos:line="206" pos:column="16"/></operator> <literal type="number" pos:line="206" pos:column="17">1<pos:position pos:line="206" pos:column="18"/></literal></expr>;<pos:position pos:line="206" pos:column="19"/></expr_stmt>
        <break pos:line="207" pos:column="9">break;<pos:position pos:line="207" pos:column="15"/></break>
      }<pos:position pos:line="208" pos:column="8"/></block></then></if>
    }<pos:position pos:line="209" pos:column="6"/></block></while>
  }<pos:position pos:line="210" pos:column="4"/></block></for>

  <comment type="block" pos:line="212" pos:column="3">/* Reset iterator */</comment>
  <expr_stmt><expr><call><name pos:line="213" pos:column="3">geom_stats_snapshot_reset<pos:position pos:line="213" pos:column="28"/></name><argument_list pos:line="213" pos:column="28">(<argument><expr><name pos:line="213" pos:column="29">snap<pos:position pos:line="213" pos:column="33"/></name></expr></argument>)<pos:position pos:line="213" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="35"/></expr_stmt>
  <for pos:line="214" pos:column="3">for <control pos:line="214" pos:column="7">(<init pos:line="214" pos:column="8">;<pos:position pos:line="214" pos:column="9"/></init><condition pos:line="214" pos:column="9">;<pos:position pos:line="214" pos:column="10"/></condition><incr/>)<pos:position pos:line="214" pos:column="11"/></control> <block pos:line="214" pos:column="12">{
    <expr_stmt><expr><name pos:line="215" pos:column="5">snap_iter<pos:position pos:line="215" pos:column="14"/></name> <operator pos:line="215" pos:column="15">=<pos:position pos:line="215" pos:column="16"/></operator> <call><name pos:line="215" pos:column="17">geom_stats_snapshot_next<pos:position pos:line="215" pos:column="41"/></name><argument_list pos:line="215" pos:column="41">(<argument><expr><name pos:line="215" pos:column="42">snap<pos:position pos:line="215" pos:column="46"/></name></expr></argument>)<pos:position pos:line="215" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="48"/></expr_stmt>
    <if pos:line="216" pos:column="5">if <condition pos:line="216" pos:column="8">(<expr><name pos:line="216" pos:column="9">snap_iter<pos:position pos:line="216" pos:column="18"/></name> <operator pos:line="216" pos:column="19">==<pos:position pos:line="216" pos:column="21"/></operator> <name pos:line="216" pos:column="22">NULL<pos:position pos:line="216" pos:column="26"/></name></expr>)<pos:position pos:line="216" pos:column="27"/></condition><then pos:line="216" pos:column="27">
      <block type="pseudo"><break pos:line="217" pos:column="7">break;<pos:position pos:line="217" pos:column="13"/></break></block></then></if>

    <if pos:line="219" pos:column="5">if <condition pos:line="219" pos:column="8">(<expr><name><name pos:line="219" pos:column="9">snap_iter<pos:position pos:line="219" pos:column="18"/></name><operator pos:line="219" pos:column="18">-&gt;<pos:position pos:line="219" pos:column="23"/></operator><name pos:line="219" pos:column="20">id<pos:position pos:line="219" pos:column="22"/></name></name> <operator pos:line="219" pos:column="23">==<pos:position pos:line="219" pos:column="25"/></operator> <name pos:line="219" pos:column="26">NULL<pos:position pos:line="219" pos:column="30"/></name></expr>)<pos:position pos:line="219" pos:column="31"/></condition><then pos:line="219" pos:column="31">
      <block type="pseudo"><continue pos:line="220" pos:column="7">continue;<pos:position pos:line="220" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><name pos:line="221" pos:column="5">geom_id<pos:position pos:line="221" pos:column="12"/></name> <operator pos:line="221" pos:column="13">=<pos:position pos:line="221" pos:column="14"/></operator> <call><name pos:line="221" pos:column="15">geom_lookupid<pos:position pos:line="221" pos:column="28"/></name><argument_list pos:line="221" pos:column="28">(<argument><expr><operator pos:line="221" pos:column="29">&amp;<pos:position pos:line="221" pos:column="34"/></operator><name pos:line="221" pos:column="30">geom_tree<pos:position pos:line="221" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="221" pos:column="41">snap_iter<pos:position pos:line="221" pos:column="50"/></name><operator pos:line="221" pos:column="50">-&gt;<pos:position pos:line="221" pos:column="55"/></operator><name pos:line="221" pos:column="52">id<pos:position pos:line="221" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="221" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="56"/></expr_stmt>
    <if pos:line="222" pos:column="5">if <condition pos:line="222" pos:column="8">(<expr><name pos:line="222" pos:column="9">geom_id<pos:position pos:line="222" pos:column="16"/></name> <operator pos:line="222" pos:column="17">==<pos:position pos:line="222" pos:column="19"/></operator> <name pos:line="222" pos:column="20">NULL<pos:position pos:line="222" pos:column="24"/></name></expr>)<pos:position pos:line="222" pos:column="25"/></condition><then pos:line="222" pos:column="25">
      <block type="pseudo"><continue pos:line="223" pos:column="7">continue;<pos:position pos:line="223" pos:column="16"/></continue></block></then></if>
    <if pos:line="224" pos:column="5">if <condition pos:line="224" pos:column="8">(<expr><name><name pos:line="224" pos:column="9">geom_id<pos:position pos:line="224" pos:column="16"/></name><operator pos:line="224" pos:column="16">-&gt;<pos:position pos:line="224" pos:column="21"/></operator><name pos:line="224" pos:column="18">lg_what<pos:position pos:line="224" pos:column="25"/></name></name> <operator pos:line="224" pos:column="26">!=<pos:position pos:line="224" pos:column="28"/></operator> <name pos:line="224" pos:column="29">ISPROVIDER<pos:position pos:line="224" pos:column="39"/></name></expr>)<pos:position pos:line="224" pos:column="40"/></condition><then pos:line="224" pos:column="40">
      <block type="pseudo"><continue pos:line="225" pos:column="7">continue;<pos:position pos:line="225" pos:column="16"/></continue></block></then></if>
    <if pos:line="226" pos:column="5">if <condition pos:line="226" pos:column="8">(<expr><operator pos:line="226" pos:column="9">(<pos:position pos:line="226" pos:column="10"/></operator><operator pos:line="226" pos:column="10">(<pos:position pos:line="226" pos:column="11"/></operator>struct <name pos:line="226" pos:column="18">gprovider<pos:position pos:line="226" pos:column="27"/></name> <operator pos:line="226" pos:column="28">*<pos:position pos:line="226" pos:column="29"/></operator><operator pos:line="226" pos:column="29">)<pos:position pos:line="226" pos:column="30"/></operator><operator pos:line="226" pos:column="30">(<pos:position pos:line="226" pos:column="31"/></operator><name><name pos:line="226" pos:column="31">geom_id<pos:position pos:line="226" pos:column="38"/></name><operator pos:line="226" pos:column="38">-&gt;<pos:position pos:line="226" pos:column="43"/></operator><name pos:line="226" pos:column="40">lg_ptr<pos:position pos:line="226" pos:column="46"/></name></name><operator pos:line="226" pos:column="46">)<pos:position pos:line="226" pos:column="47"/></operator><operator pos:line="226" pos:column="47">)<pos:position pos:line="226" pos:column="48"/></operator><operator pos:line="226" pos:column="48">-&gt;<pos:position pos:line="226" pos:column="53"/></operator><name><name pos:line="226" pos:column="50">lg_geom<pos:position pos:line="226" pos:column="57"/></name><operator pos:line="226" pos:column="57">-&gt;<pos:position pos:line="226" pos:column="62"/></operator><name pos:line="226" pos:column="59">lg_rank<pos:position pos:line="226" pos:column="66"/></name></name> <operator pos:line="226" pos:column="67">!=<pos:position pos:line="226" pos:column="69"/></operator> <literal type="number" pos:line="226" pos:column="70">1<pos:position pos:line="226" pos:column="71"/></literal></expr>)<pos:position pos:line="226" pos:column="72"/></condition><then pos:line="226" pos:column="72">
      <block type="pseudo"><continue pos:line="227" pos:column="7">continue;<pos:position pos:line="227" pos:column="16"/></continue></block></then></if>
    <comment type="block" pos:line="228" pos:column="5">/* Skip dirty reads, if present */</comment>
    <if pos:line="229" pos:column="5">if <condition pos:line="229" pos:column="8">(<expr><name pos:line="229" pos:column="9">dirty<pos:position pos:line="229" pos:column="14"/></name> <operator pos:line="229" pos:column="15">&amp;&amp;<pos:position pos:line="229" pos:column="25"/></operator> <operator pos:line="229" pos:column="18">(<pos:position pos:line="229" pos:column="19"/></operator><name><name pos:line="229" pos:column="19">snap_iter<pos:position pos:line="229" pos:column="28"/></name><operator pos:line="229" pos:column="28">-&gt;<pos:position pos:line="229" pos:column="33"/></operator><name pos:line="229" pos:column="30">sequence0<pos:position pos:line="229" pos:column="39"/></name></name> <operator pos:line="229" pos:column="40">!=<pos:position pos:line="229" pos:column="42"/></operator> <name><name pos:line="229" pos:column="43">snap_iter<pos:position pos:line="229" pos:column="52"/></name><operator pos:line="229" pos:column="52">-&gt;<pos:position pos:line="229" pos:column="57"/></operator><name pos:line="229" pos:column="54">sequence1<pos:position pos:line="229" pos:column="63"/></name></name><operator pos:line="229" pos:column="63">)<pos:position pos:line="229" pos:column="64"/></operator></expr>)<pos:position pos:line="229" pos:column="65"/></condition><then pos:line="229" pos:column="65">
      <block type="pseudo"><continue pos:line="230" pos:column="7">continue;<pos:position pos:line="230" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="232" pos:column="5">disk_name<pos:position pos:line="232" pos:column="14"/></name> <operator pos:line="232" pos:column="15">=<pos:position pos:line="232" pos:column="16"/></operator> <operator pos:line="232" pos:column="17">(<pos:position pos:line="232" pos:column="18"/></operator><operator pos:line="232" pos:column="18">(<pos:position pos:line="232" pos:column="19"/></operator>struct <name pos:line="232" pos:column="26">gprovider<pos:position pos:line="232" pos:column="35"/></name> <operator pos:line="232" pos:column="36">*<pos:position pos:line="232" pos:column="37"/></operator><operator pos:line="232" pos:column="37">)<pos:position pos:line="232" pos:column="38"/></operator><name><name pos:line="232" pos:column="38">geom_id<pos:position pos:line="232" pos:column="45"/></name><operator pos:line="232" pos:column="45">-&gt;<pos:position pos:line="232" pos:column="50"/></operator><name pos:line="232" pos:column="47">lg_ptr<pos:position pos:line="232" pos:column="53"/></name></name><operator pos:line="232" pos:column="53">)<pos:position pos:line="232" pos:column="54"/></operator><operator pos:line="232" pos:column="54">-&gt;<pos:position pos:line="232" pos:column="59"/></operator><name pos:line="232" pos:column="56">lg_name<pos:position pos:line="232" pos:column="63"/></name></expr>;<pos:position pos:line="232" pos:column="64"/></expr_stmt>

    <if pos:line="234" pos:column="5">if <condition pos:line="234" pos:column="8">(<expr><call><name pos:line="234" pos:column="9">ignorelist_match<pos:position pos:line="234" pos:column="25"/></name><argument_list pos:line="234" pos:column="25">(<argument><expr><name pos:line="234" pos:column="26">ignorelist<pos:position pos:line="234" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="38">disk_name<pos:position pos:line="234" pos:column="47"/></name></expr></argument>)<pos:position pos:line="234" pos:column="48"/></argument_list></call> <operator pos:line="234" pos:column="49">!=<pos:position pos:line="234" pos:column="51"/></operator> <literal type="number" pos:line="234" pos:column="52">0<pos:position pos:line="234" pos:column="53"/></literal></expr>)<pos:position pos:line="234" pos:column="54"/></condition><then pos:line="234" pos:column="54">
      <block type="pseudo"><continue pos:line="235" pos:column="7">continue;<pos:position pos:line="235" pos:column="16"/></continue></block></then></if>

    <if pos:line="237" pos:column="5">if <condition pos:line="237" pos:column="8">(<expr><operator pos:line="237" pos:column="9">(<pos:position pos:line="237" pos:column="10"/></operator><name><name pos:line="237" pos:column="10">snap_iter<pos:position pos:line="237" pos:column="19"/></name><operator pos:line="237" pos:column="19">-&gt;<pos:position pos:line="237" pos:column="24"/></operator><name pos:line="237" pos:column="21">bytes<pos:position pos:line="237" pos:column="26"/></name><index pos:line="237" pos:column="26">[<expr><name pos:line="237" pos:column="27">DEVSTAT_READ<pos:position pos:line="237" pos:column="39"/></name></expr>]<pos:position pos:line="237" pos:column="40"/></index></name> <operator pos:line="237" pos:column="41">!=<pos:position pos:line="237" pos:column="43"/></operator> <literal type="number" pos:line="237" pos:column="44">0<pos:position pos:line="237" pos:column="45"/></literal><operator pos:line="237" pos:column="45">)<pos:position pos:line="237" pos:column="46"/></operator> <operator pos:line="237" pos:column="47">||<pos:position pos:line="237" pos:column="49"/></operator>
        <operator pos:line="238" pos:column="9">(<pos:position pos:line="238" pos:column="10"/></operator><name><name pos:line="238" pos:column="10">snap_iter<pos:position pos:line="238" pos:column="19"/></name><operator pos:line="238" pos:column="19">-&gt;<pos:position pos:line="238" pos:column="24"/></operator><name pos:line="238" pos:column="21">bytes<pos:position pos:line="238" pos:column="26"/></name><index pos:line="238" pos:column="26">[<expr><name pos:line="238" pos:column="27">DEVSTAT_WRITE<pos:position pos:line="238" pos:column="40"/></name></expr>]<pos:position pos:line="238" pos:column="41"/></index></name> <operator pos:line="238" pos:column="42">!=<pos:position pos:line="238" pos:column="44"/></operator> <literal type="number" pos:line="238" pos:column="45">0<pos:position pos:line="238" pos:column="46"/></literal><operator pos:line="238" pos:column="46">)<pos:position pos:line="238" pos:column="47"/></operator></expr>)<pos:position pos:line="238" pos:column="48"/></condition><then pos:line="238" pos:column="48"> <block pos:line="238" pos:column="49">{
      <expr_stmt><expr><call><name pos:line="239" pos:column="7">disk_submit<pos:position pos:line="239" pos:column="18"/></name><argument_list pos:line="239" pos:column="18">(<argument><expr><name pos:line="239" pos:column="19">disk_name<pos:position pos:line="239" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="239" pos:column="30">"disk_octets"<pos:position pos:line="239" pos:column="43"/></literal></expr></argument>,
                  <argument><expr><operator pos:line="240" pos:column="19">(<pos:position pos:line="240" pos:column="20"/></operator><name pos:line="240" pos:column="20">derive_t<pos:position pos:line="240" pos:column="28"/></name><operator pos:line="240" pos:column="28">)<pos:position pos:line="240" pos:column="29"/></operator><name><name pos:line="240" pos:column="29">snap_iter<pos:position pos:line="240" pos:column="38"/></name><operator pos:line="240" pos:column="38">-&gt;<pos:position pos:line="240" pos:column="43"/></operator><name pos:line="240" pos:column="40">bytes<pos:position pos:line="240" pos:column="45"/></name><index pos:line="240" pos:column="45">[<expr><name pos:line="240" pos:column="46">DEVSTAT_READ<pos:position pos:line="240" pos:column="58"/></name></expr>]<pos:position pos:line="240" pos:column="59"/></index></name></expr></argument>,
                  <argument><expr><operator pos:line="241" pos:column="19">(<pos:position pos:line="241" pos:column="20"/></operator><name pos:line="241" pos:column="20">derive_t<pos:position pos:line="241" pos:column="28"/></name><operator pos:line="241" pos:column="28">)<pos:position pos:line="241" pos:column="29"/></operator><name><name pos:line="241" pos:column="29">snap_iter<pos:position pos:line="241" pos:column="38"/></name><operator pos:line="241" pos:column="38">-&gt;<pos:position pos:line="241" pos:column="43"/></operator><name pos:line="241" pos:column="40">bytes<pos:position pos:line="241" pos:column="45"/></name><index pos:line="241" pos:column="45">[<expr><name pos:line="241" pos:column="46">DEVSTAT_WRITE<pos:position pos:line="241" pos:column="59"/></name></expr>]<pos:position pos:line="241" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="241" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="242" pos:column="6"/></block></then></if>

    <if pos:line="244" pos:column="5">if <condition pos:line="244" pos:column="8">(<expr><operator pos:line="244" pos:column="9">(<pos:position pos:line="244" pos:column="10"/></operator><name><name pos:line="244" pos:column="10">snap_iter<pos:position pos:line="244" pos:column="19"/></name><operator pos:line="244" pos:column="19">-&gt;<pos:position pos:line="244" pos:column="24"/></operator><name pos:line="244" pos:column="21">operations<pos:position pos:line="244" pos:column="31"/></name><index pos:line="244" pos:column="31">[<expr><name pos:line="244" pos:column="32">DEVSTAT_READ<pos:position pos:line="244" pos:column="44"/></name></expr>]<pos:position pos:line="244" pos:column="45"/></index></name> <operator pos:line="244" pos:column="46">!=<pos:position pos:line="244" pos:column="48"/></operator> <literal type="number" pos:line="244" pos:column="49">0<pos:position pos:line="244" pos:column="50"/></literal><operator pos:line="244" pos:column="50">)<pos:position pos:line="244" pos:column="51"/></operator> <operator pos:line="244" pos:column="52">||<pos:position pos:line="244" pos:column="54"/></operator>
        <operator pos:line="245" pos:column="9">(<pos:position pos:line="245" pos:column="10"/></operator><name><name pos:line="245" pos:column="10">snap_iter<pos:position pos:line="245" pos:column="19"/></name><operator pos:line="245" pos:column="19">-&gt;<pos:position pos:line="245" pos:column="24"/></operator><name pos:line="245" pos:column="21">operations<pos:position pos:line="245" pos:column="31"/></name><index pos:line="245" pos:column="31">[<expr><name pos:line="245" pos:column="32">DEVSTAT_WRITE<pos:position pos:line="245" pos:column="45"/></name></expr>]<pos:position pos:line="245" pos:column="46"/></index></name> <operator pos:line="245" pos:column="47">!=<pos:position pos:line="245" pos:column="49"/></operator> <literal type="number" pos:line="245" pos:column="50">0<pos:position pos:line="245" pos:column="51"/></literal><operator pos:line="245" pos:column="51">)<pos:position pos:line="245" pos:column="52"/></operator></expr>)<pos:position pos:line="245" pos:column="53"/></condition><then pos:line="245" pos:column="53"> <block pos:line="245" pos:column="54">{
      <expr_stmt><expr><call><name pos:line="246" pos:column="7">disk_submit<pos:position pos:line="246" pos:column="18"/></name><argument_list pos:line="246" pos:column="18">(<argument><expr><name pos:line="246" pos:column="19">disk_name<pos:position pos:line="246" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="246" pos:column="30">"disk_ops"<pos:position pos:line="246" pos:column="40"/></literal></expr></argument>,
                  <argument><expr><operator pos:line="247" pos:column="19">(<pos:position pos:line="247" pos:column="20"/></operator><name pos:line="247" pos:column="20">derive_t<pos:position pos:line="247" pos:column="28"/></name><operator pos:line="247" pos:column="28">)<pos:position pos:line="247" pos:column="29"/></operator><name><name pos:line="247" pos:column="29">snap_iter<pos:position pos:line="247" pos:column="38"/></name><operator pos:line="247" pos:column="38">-&gt;<pos:position pos:line="247" pos:column="43"/></operator><name pos:line="247" pos:column="40">operations<pos:position pos:line="247" pos:column="50"/></name><index pos:line="247" pos:column="50">[<expr><name pos:line="247" pos:column="51">DEVSTAT_READ<pos:position pos:line="247" pos:column="63"/></name></expr>]<pos:position pos:line="247" pos:column="64"/></index></name></expr></argument>,
                  <argument><expr><operator pos:line="248" pos:column="19">(<pos:position pos:line="248" pos:column="20"/></operator><name pos:line="248" pos:column="20">derive_t<pos:position pos:line="248" pos:column="28"/></name><operator pos:line="248" pos:column="28">)<pos:position pos:line="248" pos:column="29"/></operator><name><name pos:line="248" pos:column="29">snap_iter<pos:position pos:line="248" pos:column="38"/></name><operator pos:line="248" pos:column="38">-&gt;<pos:position pos:line="248" pos:column="43"/></operator><name pos:line="248" pos:column="40">operations<pos:position pos:line="248" pos:column="50"/></name><index pos:line="248" pos:column="50">[<expr><name pos:line="248" pos:column="51">DEVSTAT_WRITE<pos:position pos:line="248" pos:column="64"/></name></expr>]<pos:position pos:line="248" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="248" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="249" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="251" pos:column="5">read_time<pos:position pos:line="251" pos:column="14"/></name> <operator pos:line="251" pos:column="15">=<pos:position pos:line="251" pos:column="16"/></operator> <call><name pos:line="251" pos:column="17">devstat_compute_etime<pos:position pos:line="251" pos:column="38"/></name><argument_list pos:line="251" pos:column="38">(<argument><expr><operator pos:line="251" pos:column="39">&amp;<pos:position pos:line="251" pos:column="44"/></operator><name><name pos:line="251" pos:column="40">snap_iter<pos:position pos:line="251" pos:column="49"/></name><operator pos:line="251" pos:column="49">-&gt;<pos:position pos:line="251" pos:column="54"/></operator><name pos:line="251" pos:column="51">duration<pos:position pos:line="251" pos:column="59"/></name><index pos:line="251" pos:column="59">[<expr><name pos:line="251" pos:column="60">DEVSTAT_READ<pos:position pos:line="251" pos:column="72"/></name></expr>]<pos:position pos:line="251" pos:column="73"/></index></name></expr></argument>, <argument><expr><name pos:line="251" pos:column="75">NULL<pos:position pos:line="251" pos:column="79"/></name></expr></argument>)<pos:position pos:line="251" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><name pos:line="252" pos:column="5">write_time<pos:position pos:line="252" pos:column="15"/></name> <operator pos:line="252" pos:column="16">=<pos:position pos:line="252" pos:column="17"/></operator>
        <call><name pos:line="253" pos:column="9">devstat_compute_etime<pos:position pos:line="253" pos:column="30"/></name><argument_list pos:line="253" pos:column="30">(<argument><expr><operator pos:line="253" pos:column="31">&amp;<pos:position pos:line="253" pos:column="36"/></operator><name><name pos:line="253" pos:column="32">snap_iter<pos:position pos:line="253" pos:column="41"/></name><operator pos:line="253" pos:column="41">-&gt;<pos:position pos:line="253" pos:column="46"/></operator><name pos:line="253" pos:column="43">duration<pos:position pos:line="253" pos:column="51"/></name><index pos:line="253" pos:column="51">[<expr><name pos:line="253" pos:column="52">DEVSTAT_WRITE<pos:position pos:line="253" pos:column="65"/></name></expr>]<pos:position pos:line="253" pos:column="66"/></index></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="68">NULL<pos:position pos:line="253" pos:column="72"/></name></expr></argument>)<pos:position pos:line="253" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="74"/></expr_stmt>
    <if pos:line="254" pos:column="5">if <condition pos:line="254" pos:column="8">(<expr><operator pos:line="254" pos:column="9">(<pos:position pos:line="254" pos:column="10"/></operator><name pos:line="254" pos:column="10">read_time<pos:position pos:line="254" pos:column="19"/></name> <operator pos:line="254" pos:column="20">!=<pos:position pos:line="254" pos:column="22"/></operator> <literal type="number" pos:line="254" pos:column="23">0<pos:position pos:line="254" pos:column="24"/></literal><operator pos:line="254" pos:column="24">)<pos:position pos:line="254" pos:column="25"/></operator> <operator pos:line="254" pos:column="26">||<pos:position pos:line="254" pos:column="28"/></operator> <operator pos:line="254" pos:column="29">(<pos:position pos:line="254" pos:column="30"/></operator><name pos:line="254" pos:column="30">write_time<pos:position pos:line="254" pos:column="40"/></name> <operator pos:line="254" pos:column="41">!=<pos:position pos:line="254" pos:column="43"/></operator> <literal type="number" pos:line="254" pos:column="44">0<pos:position pos:line="254" pos:column="45"/></literal><operator pos:line="254" pos:column="45">)<pos:position pos:line="254" pos:column="46"/></operator></expr>)<pos:position pos:line="254" pos:column="47"/></condition><then pos:line="254" pos:column="47"> <block pos:line="254" pos:column="48">{
      <expr_stmt><expr><call><name pos:line="255" pos:column="7">disk_submit<pos:position pos:line="255" pos:column="18"/></name><argument_list pos:line="255" pos:column="18">(<argument><expr><name pos:line="255" pos:column="19">disk_name<pos:position pos:line="255" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="30">"disk_time"<pos:position pos:line="255" pos:column="41"/></literal></expr></argument>, <argument><expr><call pos:line="255" pos:column="43">(<name pos:line="255" pos:column="44">derive_t<pos:position pos:line="255" pos:column="52"/></name>)<argument_list pos:line="255" pos:column="53">(<argument><expr><name pos:line="255" pos:column="54">read_time<pos:position pos:line="255" pos:column="63"/></name> <operator pos:line="255" pos:column="64">*<pos:position pos:line="255" pos:column="65"/></operator> <literal type="number" pos:line="255" pos:column="66">1000<pos:position pos:line="255" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="255" pos:column="71"/></argument_list></call></expr></argument>,
                  <argument><expr><call pos:line="256" pos:column="19">(<name pos:line="256" pos:column="20">derive_t<pos:position pos:line="256" pos:column="28"/></name>)<argument_list pos:line="256" pos:column="29">(<argument><expr><name pos:line="256" pos:column="30">write_time<pos:position pos:line="256" pos:column="40"/></name> <operator pos:line="256" pos:column="41">*<pos:position pos:line="256" pos:column="42"/></operator> <literal type="number" pos:line="256" pos:column="43">1000<pos:position pos:line="256" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="256" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="256" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="257" pos:column="6"/></block></then></if>
    <if pos:line="258" pos:column="5">if <condition pos:line="258" pos:column="8">(<expr><call><name pos:line="258" pos:column="9">devstat_compute_statistics<pos:position pos:line="258" pos:column="35"/></name><argument_list pos:line="258" pos:column="35">(<argument><expr><name pos:line="258" pos:column="36">snap_iter<pos:position pos:line="258" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="258" pos:column="47">NULL<pos:position pos:line="258" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="258" pos:column="53">1.0<pos:position pos:line="258" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="258" pos:column="58">DSM_TOTAL_BUSY_TIME<pos:position pos:line="258" pos:column="77"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="259" pos:column="36">&amp;<pos:position pos:line="259" pos:column="41"/></operator><name pos:line="259" pos:column="37">busy_time<pos:position pos:line="259" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="48">DSM_TOTAL_DURATION<pos:position pos:line="259" pos:column="66"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="260" pos:column="36">&amp;<pos:position pos:line="260" pos:column="41"/></operator><name pos:line="260" pos:column="37">total_duration<pos:position pos:line="260" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="53">DSM_NONE<pos:position pos:line="260" pos:column="61"/></name></expr></argument>)<pos:position pos:line="260" pos:column="62"/></argument_list></call> <operator pos:line="260" pos:column="63">!=<pos:position pos:line="260" pos:column="65"/></operator> <literal type="number" pos:line="260" pos:column="66">0<pos:position pos:line="260" pos:column="67"/></literal></expr>)<pos:position pos:line="260" pos:column="68"/></condition><then pos:line="260" pos:column="68"> <block pos:line="260" pos:column="69">{
      <expr_stmt><expr><call><name pos:line="261" pos:column="7">WARNING<pos:position pos:line="261" pos:column="14"/></name><argument_list pos:line="261" pos:column="14">(<argument><expr><literal type="string" pos:line="261" pos:column="15">"%s"<pos:position pos:line="261" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="261" pos:column="21">devstat_errbuf<pos:position pos:line="261" pos:column="35"/></name></expr></argument>)<pos:position pos:line="261" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="262" pos:column="6"/></block></then> <else pos:line="262" pos:column="7">else <block pos:line="262" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="263" pos:column="7">submit_io_time<pos:position pos:line="263" pos:column="21"/></name><argument_list pos:line="263" pos:column="21">(<argument><expr><name pos:line="263" pos:column="22">disk_name<pos:position pos:line="263" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="33">busy_time<pos:position pos:line="263" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="44">total_duration<pos:position pos:line="263" pos:column="58"/></name></expr></argument>)<pos:position pos:line="263" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="264" pos:column="6"/></block></else></if>
  }<pos:position pos:line="265" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="266" pos:column="3">geom_stats_snapshot_free<pos:position pos:line="266" pos:column="27"/></name><argument_list pos:line="266" pos:column="27">(<argument><expr><name pos:line="266" pos:column="28">snap<pos:position pos:line="266" pos:column="32"/></name></expr></argument>)<pos:position pos:line="266" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="34"/></expr_stmt>

<cpp:elif pos:line="268" pos:column="1">#<cpp:directive pos:line="268" pos:column="2">elif<pos:position pos:line="268" pos:column="6"/></cpp:directive> <expr><name pos:line="268" pos:column="7">KERNEL_LINUX<pos:position pos:line="268" pos:column="19"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="269" pos:column="3">FILE<pos:position pos:line="269" pos:column="7"/></name> <modifier pos:line="269" pos:column="8">*<pos:position pos:line="269" pos:column="9"/></modifier></type><name pos:line="269" pos:column="9">fh<pos:position pos:line="269" pos:column="11"/></name></decl>;<pos:position pos:line="269" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="270" pos:column="3">char<pos:position pos:line="270" pos:column="7"/></name></type> <name><name pos:line="270" pos:column="8">buffer<pos:position pos:line="270" pos:column="14"/></name><index pos:line="270" pos:column="14">[<expr><literal type="number" pos:line="270" pos:column="15">1024<pos:position pos:line="270" pos:column="19"/></literal></expr>]<pos:position pos:line="270" pos:column="20"/></index></name></decl>;<pos:position pos:line="270" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="272" pos:column="3">char<pos:position pos:line="272" pos:column="7"/></name> <modifier pos:line="272" pos:column="8">*<pos:position pos:line="272" pos:column="9"/></modifier></type><name><name pos:line="272" pos:column="9">fields<pos:position pos:line="272" pos:column="15"/></name><index pos:line="272" pos:column="15">[<expr><literal type="number" pos:line="272" pos:column="16">32<pos:position pos:line="272" pos:column="18"/></literal></expr>]<pos:position pos:line="272" pos:column="19"/></index></name></decl>;<pos:position pos:line="272" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="273" pos:column="3">int<pos:position pos:line="273" pos:column="6"/></name></type> <name pos:line="273" pos:column="7">numfields<pos:position pos:line="273" pos:column="16"/></name></decl>;<pos:position pos:line="273" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="274" pos:column="3">int<pos:position pos:line="274" pos:column="6"/></name></type> <name pos:line="274" pos:column="7">fieldshift<pos:position pos:line="274" pos:column="17"/></name> <init pos:line="274" pos:column="18">= <expr><literal type="number" pos:line="274" pos:column="20">0<pos:position pos:line="274" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="274" pos:column="22"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="276" pos:column="3">int<pos:position pos:line="276" pos:column="6"/></name></type> <name pos:line="276" pos:column="7">minor<pos:position pos:line="276" pos:column="12"/></name> <init pos:line="276" pos:column="13">= <expr><literal type="number" pos:line="276" pos:column="15">0<pos:position pos:line="276" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="276" pos:column="17"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="278" pos:column="3">derive_t<pos:position pos:line="278" pos:column="11"/></name></type> <name pos:line="278" pos:column="12">read_sectors<pos:position pos:line="278" pos:column="24"/></name> <init pos:line="278" pos:column="25">= <expr><literal type="number" pos:line="278" pos:column="27">0<pos:position pos:line="278" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="278" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="279" pos:column="3">derive_t<pos:position pos:line="279" pos:column="11"/></name></type> <name pos:line="279" pos:column="12">write_sectors<pos:position pos:line="279" pos:column="25"/></name> <init pos:line="279" pos:column="26">= <expr><literal type="number" pos:line="279" pos:column="28">0<pos:position pos:line="279" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="279" pos:column="30"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="281" pos:column="3">derive_t<pos:position pos:line="281" pos:column="11"/></name></type> <name pos:line="281" pos:column="12">read_ops<pos:position pos:line="281" pos:column="20"/></name> <init pos:line="281" pos:column="21">= <expr><literal type="number" pos:line="281" pos:column="23">0<pos:position pos:line="281" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="281" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="282" pos:column="3">derive_t<pos:position pos:line="282" pos:column="11"/></name></type> <name pos:line="282" pos:column="12">read_merged<pos:position pos:line="282" pos:column="23"/></name> <init pos:line="282" pos:column="24">= <expr><literal type="number" pos:line="282" pos:column="26">0<pos:position pos:line="282" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="282" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="283" pos:column="3">derive_t<pos:position pos:line="283" pos:column="11"/></name></type> <name pos:line="283" pos:column="12">read_time<pos:position pos:line="283" pos:column="21"/></name> <init pos:line="283" pos:column="22">= <expr><literal type="number" pos:line="283" pos:column="24">0<pos:position pos:line="283" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="283" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="284" pos:column="3">derive_t<pos:position pos:line="284" pos:column="11"/></name></type> <name pos:line="284" pos:column="12">write_ops<pos:position pos:line="284" pos:column="21"/></name> <init pos:line="284" pos:column="22">= <expr><literal type="number" pos:line="284" pos:column="24">0<pos:position pos:line="284" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="284" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="285" pos:column="3">derive_t<pos:position pos:line="285" pos:column="11"/></name></type> <name pos:line="285" pos:column="12">write_merged<pos:position pos:line="285" pos:column="24"/></name> <init pos:line="285" pos:column="25">= <expr><literal type="number" pos:line="285" pos:column="27">0<pos:position pos:line="285" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="285" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="286" pos:column="3">derive_t<pos:position pos:line="286" pos:column="11"/></name></type> <name pos:line="286" pos:column="12">write_time<pos:position pos:line="286" pos:column="22"/></name> <init pos:line="286" pos:column="23">= <expr><literal type="number" pos:line="286" pos:column="25">0<pos:position pos:line="286" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="286" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="287" pos:column="3">gauge_t<pos:position pos:line="287" pos:column="10"/></name></type> <name pos:line="287" pos:column="11">in_progress<pos:position pos:line="287" pos:column="22"/></name> <init pos:line="287" pos:column="23">= <expr><name pos:line="287" pos:column="25">NAN<pos:position pos:line="287" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="287" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="288" pos:column="3">derive_t<pos:position pos:line="288" pos:column="11"/></name></type> <name pos:line="288" pos:column="12">io_time<pos:position pos:line="288" pos:column="19"/></name> <init pos:line="288" pos:column="20">= <expr><literal type="number" pos:line="288" pos:column="22">0<pos:position pos:line="288" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="288" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="289" pos:column="3">derive_t<pos:position pos:line="289" pos:column="11"/></name></type> <name pos:line="289" pos:column="12">weighted_time<pos:position pos:line="289" pos:column="25"/></name> <init pos:line="289" pos:column="26">= <expr><literal type="number" pos:line="289" pos:column="28">0<pos:position pos:line="289" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="289" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="290" pos:column="3">int<pos:position pos:line="290" pos:column="6"/></name></type> <name pos:line="290" pos:column="7">is_disk<pos:position pos:line="290" pos:column="14"/></name> <init pos:line="290" pos:column="15">= <expr><literal type="number" pos:line="290" pos:column="17">0<pos:position pos:line="290" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="290" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="292" pos:column="3">diskstats_t<pos:position pos:line="292" pos:column="14"/></name> <modifier pos:line="292" pos:column="15">*<pos:position pos:line="292" pos:column="16"/></modifier></type><name pos:line="292" pos:column="16">ds<pos:position pos:line="292" pos:column="18"/></name></decl>, <modifier pos:line="292" pos:column="20">*<pos:position pos:line="292" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="292" pos:column="21">pre_ds<pos:position pos:line="292" pos:column="27"/></name></decl>;<pos:position pos:line="292" pos:column="28"/></decl_stmt>

  <if pos:line="294" pos:column="3">if <condition pos:line="294" pos:column="6">(<expr><operator pos:line="294" pos:column="7">(<pos:position pos:line="294" pos:column="8"/></operator><name pos:line="294" pos:column="8">fh<pos:position pos:line="294" pos:column="10"/></name> <operator pos:line="294" pos:column="11">=<pos:position pos:line="294" pos:column="12"/></operator> <call><name pos:line="294" pos:column="13">fopen<pos:position pos:line="294" pos:column="18"/></name><argument_list pos:line="294" pos:column="18">(<argument><expr><literal type="string" pos:line="294" pos:column="19">"/proc/diskstats"<pos:position pos:line="294" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="294" pos:column="38">"r"<pos:position pos:line="294" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="294" pos:column="42"/></argument_list></call><operator pos:line="294" pos:column="42">)<pos:position pos:line="294" pos:column="43"/></operator> <operator pos:line="294" pos:column="44">==<pos:position pos:line="294" pos:column="46"/></operator> <name pos:line="294" pos:column="47">NULL<pos:position pos:line="294" pos:column="51"/></name></expr>)<pos:position pos:line="294" pos:column="52"/></condition><then pos:line="294" pos:column="52"> <block pos:line="294" pos:column="53">{
    <expr_stmt><expr><name pos:line="295" pos:column="5">fh<pos:position pos:line="295" pos:column="7"/></name> <operator pos:line="295" pos:column="8">=<pos:position pos:line="295" pos:column="9"/></operator> <call><name pos:line="295" pos:column="10">fopen<pos:position pos:line="295" pos:column="15"/></name><argument_list pos:line="295" pos:column="15">(<argument><expr><literal type="string" pos:line="295" pos:column="16">"/proc/partitions"<pos:position pos:line="295" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="295" pos:column="36">"r"<pos:position pos:line="295" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="295" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="41"/></expr_stmt>
    <if pos:line="296" pos:column="5">if <condition pos:line="296" pos:column="8">(<expr><name pos:line="296" pos:column="9">fh<pos:position pos:line="296" pos:column="11"/></name> <operator pos:line="296" pos:column="12">==<pos:position pos:line="296" pos:column="14"/></operator> <name pos:line="296" pos:column="15">NULL<pos:position pos:line="296" pos:column="19"/></name></expr>)<pos:position pos:line="296" pos:column="20"/></condition><then pos:line="296" pos:column="20"> <block pos:line="296" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="297" pos:column="7">ERROR<pos:position pos:line="297" pos:column="12"/></name><argument_list pos:line="297" pos:column="12">(<argument><expr><literal type="string" pos:line="297" pos:column="13">"disk plugin: fopen (/proc/{diskstats,partitions}) failed."<pos:position pos:line="297" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="297" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="74"/></expr_stmt>
      <return pos:line="298" pos:column="7">return <expr><operator pos:line="298" pos:column="14">(<pos:position pos:line="298" pos:column="15"/></operator><operator pos:line="298" pos:column="15">-<pos:position pos:line="298" pos:column="16"/></operator><literal type="number" pos:line="298" pos:column="16">1<pos:position pos:line="298" pos:column="17"/></literal><operator pos:line="298" pos:column="17">)<pos:position pos:line="298" pos:column="18"/></operator></expr>;<pos:position pos:line="298" pos:column="19"/></return>
    }<pos:position pos:line="299" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="301" pos:column="5">/* Kernel is 2.4.* */</comment>
    <expr_stmt><expr><name pos:line="302" pos:column="5">fieldshift<pos:position pos:line="302" pos:column="15"/></name> <operator pos:line="302" pos:column="16">=<pos:position pos:line="302" pos:column="17"/></operator> <literal type="number" pos:line="302" pos:column="18">1<pos:position pos:line="302" pos:column="19"/></literal></expr>;<pos:position pos:line="302" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="303" pos:column="4"/></block></then></if>

  <while pos:line="305" pos:column="3">while <condition pos:line="305" pos:column="9">(<expr><call><name pos:line="305" pos:column="10">fgets<pos:position pos:line="305" pos:column="15"/></name><argument_list pos:line="305" pos:column="15">(<argument><expr><name pos:line="305" pos:column="16">buffer<pos:position pos:line="305" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="305" pos:column="24">sizeof<argument_list pos:line="305" pos:column="30">(<argument><expr><name pos:line="305" pos:column="31">buffer<pos:position pos:line="305" pos:column="37"/></name></expr></argument>)<pos:position pos:line="305" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="305" pos:column="40">fh<pos:position pos:line="305" pos:column="42"/></name></expr></argument>)<pos:position pos:line="305" pos:column="43"/></argument_list></call> <operator pos:line="305" pos:column="44">!=<pos:position pos:line="305" pos:column="46"/></operator> <name pos:line="305" pos:column="47">NULL<pos:position pos:line="305" pos:column="51"/></name></expr>)<pos:position pos:line="305" pos:column="52"/></condition> <block pos:line="305" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="306" pos:column="5">char<pos:position pos:line="306" pos:column="9"/></name> <modifier pos:line="306" pos:column="10">*<pos:position pos:line="306" pos:column="11"/></modifier></type><name pos:line="306" pos:column="11">disk_name<pos:position pos:line="306" pos:column="20"/></name></decl>;<pos:position pos:line="306" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="307" pos:column="5">char<pos:position pos:line="307" pos:column="9"/></name> <modifier pos:line="307" pos:column="10">*<pos:position pos:line="307" pos:column="11"/></modifier></type><name pos:line="307" pos:column="11">output_name<pos:position pos:line="307" pos:column="22"/></name></decl>;<pos:position pos:line="307" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="309" pos:column="5">numfields<pos:position pos:line="309" pos:column="14"/></name> <operator pos:line="309" pos:column="15">=<pos:position pos:line="309" pos:column="16"/></operator> <call><name pos:line="309" pos:column="17">strsplit<pos:position pos:line="309" pos:column="25"/></name><argument_list pos:line="309" pos:column="25">(<argument><expr><name pos:line="309" pos:column="26">buffer<pos:position pos:line="309" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="34">fields<pos:position pos:line="309" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="309" pos:column="42">32<pos:position pos:line="309" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="309" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="46"/></expr_stmt>

    <if pos:line="311" pos:column="5">if <condition pos:line="311" pos:column="8">(<expr><operator pos:line="311" pos:column="9">(<pos:position pos:line="311" pos:column="10"/></operator><name pos:line="311" pos:column="10">numfields<pos:position pos:line="311" pos:column="19"/></name> <operator pos:line="311" pos:column="20">!=<pos:position pos:line="311" pos:column="22"/></operator> <operator pos:line="311" pos:column="23">(<pos:position pos:line="311" pos:column="24"/></operator><literal type="number" pos:line="311" pos:column="24">14<pos:position pos:line="311" pos:column="26"/></literal> <operator pos:line="311" pos:column="27">+<pos:position pos:line="311" pos:column="28"/></operator> <name pos:line="311" pos:column="29">fieldshift<pos:position pos:line="311" pos:column="39"/></name><operator pos:line="311" pos:column="39">)<pos:position pos:line="311" pos:column="40"/></operator><operator pos:line="311" pos:column="40">)<pos:position pos:line="311" pos:column="41"/></operator> <operator pos:line="311" pos:column="42">&amp;&amp;<pos:position pos:line="311" pos:column="52"/></operator> <operator pos:line="311" pos:column="45">(<pos:position pos:line="311" pos:column="46"/></operator><name pos:line="311" pos:column="46">numfields<pos:position pos:line="311" pos:column="55"/></name> <operator pos:line="311" pos:column="56">!=<pos:position pos:line="311" pos:column="58"/></operator> <literal type="number" pos:line="311" pos:column="59">7<pos:position pos:line="311" pos:column="60"/></literal><operator pos:line="311" pos:column="60">)<pos:position pos:line="311" pos:column="61"/></operator></expr>)<pos:position pos:line="311" pos:column="62"/></condition><then pos:line="311" pos:column="62">
      <block type="pseudo"><continue pos:line="312" pos:column="7">continue;<pos:position pos:line="312" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="314" pos:column="5">minor<pos:position pos:line="314" pos:column="10"/></name> <operator pos:line="314" pos:column="11">=<pos:position pos:line="314" pos:column="12"/></operator> <call><name pos:line="314" pos:column="13">atoll<pos:position pos:line="314" pos:column="18"/></name><argument_list pos:line="314" pos:column="18">(<argument><expr><name><name pos:line="314" pos:column="19">fields<pos:position pos:line="314" pos:column="25"/></name><index pos:line="314" pos:column="25">[<expr><literal type="number" pos:line="314" pos:column="26">1<pos:position pos:line="314" pos:column="27"/></literal></expr>]<pos:position pos:line="314" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="314" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><name pos:line="316" pos:column="5">disk_name<pos:position pos:line="316" pos:column="14"/></name> <operator pos:line="316" pos:column="15">=<pos:position pos:line="316" pos:column="16"/></operator> <name><name pos:line="316" pos:column="17">fields<pos:position pos:line="316" pos:column="23"/></name><index pos:line="316" pos:column="23">[<expr><literal type="number" pos:line="316" pos:column="24">2<pos:position pos:line="316" pos:column="25"/></literal> <operator pos:line="316" pos:column="26">+<pos:position pos:line="316" pos:column="27"/></operator> <name pos:line="316" pos:column="28">fieldshift<pos:position pos:line="316" pos:column="38"/></name></expr>]<pos:position pos:line="316" pos:column="39"/></index></name></expr>;<pos:position pos:line="316" pos:column="40"/></expr_stmt>

    <for pos:line="318" pos:column="5">for <control pos:line="318" pos:column="9">(<init><expr><name pos:line="318" pos:column="10">ds<pos:position pos:line="318" pos:column="12"/></name> <operator pos:line="318" pos:column="13">=<pos:position pos:line="318" pos:column="14"/></operator> <name pos:line="318" pos:column="15">disklist<pos:position pos:line="318" pos:column="23"/></name></expr><operator pos:line="318" pos:column="23">,<pos:position pos:line="318" pos:column="24"/></operator> <expr><name pos:line="318" pos:column="25">pre_ds<pos:position pos:line="318" pos:column="31"/></name> <operator pos:line="318" pos:column="32">=<pos:position pos:line="318" pos:column="33"/></operator> <name pos:line="318" pos:column="34">disklist<pos:position pos:line="318" pos:column="42"/></name></expr>;<pos:position pos:line="318" pos:column="43"/></init> <condition><expr><name pos:line="318" pos:column="44">ds<pos:position pos:line="318" pos:column="46"/></name> <operator pos:line="318" pos:column="47">!=<pos:position pos:line="318" pos:column="49"/></operator> <name pos:line="318" pos:column="50">NULL<pos:position pos:line="318" pos:column="54"/></name></expr>;<pos:position pos:line="318" pos:column="55"/></condition>
         <incr><expr><name pos:line="319" pos:column="10">pre_ds<pos:position pos:line="319" pos:column="16"/></name> <operator pos:line="319" pos:column="17">=<pos:position pos:line="319" pos:column="18"/></operator> <name pos:line="319" pos:column="19">ds<pos:position pos:line="319" pos:column="21"/></name></expr><operator pos:line="319" pos:column="21">,<pos:position pos:line="319" pos:column="22"/></operator> <expr><name pos:line="319" pos:column="23">ds<pos:position pos:line="319" pos:column="25"/></name> <operator pos:line="319" pos:column="26">=<pos:position pos:line="319" pos:column="27"/></operator> <name><name pos:line="319" pos:column="28">ds<pos:position pos:line="319" pos:column="30"/></name><operator pos:line="319" pos:column="30">-&gt;<pos:position pos:line="319" pos:column="35"/></operator><name pos:line="319" pos:column="32">next<pos:position pos:line="319" pos:column="36"/></name></name></expr></incr>)<pos:position pos:line="319" pos:column="37"/></control>
      <block type="pseudo"><if pos:line="320" pos:column="7">if <condition pos:line="320" pos:column="10">(<expr><call><name pos:line="320" pos:column="11">strcmp<pos:position pos:line="320" pos:column="17"/></name><argument_list pos:line="320" pos:column="17">(<argument><expr><name pos:line="320" pos:column="18">disk_name<pos:position pos:line="320" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="320" pos:column="29">ds<pos:position pos:line="320" pos:column="31"/></name><operator pos:line="320" pos:column="31">-&gt;<pos:position pos:line="320" pos:column="36"/></operator><name pos:line="320" pos:column="33">name<pos:position pos:line="320" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="320" pos:column="38"/></argument_list></call> <operator pos:line="320" pos:column="39">==<pos:position pos:line="320" pos:column="41"/></operator> <literal type="number" pos:line="320" pos:column="42">0<pos:position pos:line="320" pos:column="43"/></literal></expr>)<pos:position pos:line="320" pos:column="44"/></condition><then pos:line="320" pos:column="44">
        <block type="pseudo"><break pos:line="321" pos:column="9">break;<pos:position pos:line="321" pos:column="15"/></break></block></then></if></block></for>

    <if pos:line="323" pos:column="5">if <condition pos:line="323" pos:column="8">(<expr><name pos:line="323" pos:column="9">ds<pos:position pos:line="323" pos:column="11"/></name> <operator pos:line="323" pos:column="12">==<pos:position pos:line="323" pos:column="14"/></operator> <name pos:line="323" pos:column="15">NULL<pos:position pos:line="323" pos:column="19"/></name></expr>)<pos:position pos:line="323" pos:column="20"/></condition><then pos:line="323" pos:column="20"> <block pos:line="323" pos:column="21">{
      <if pos:line="324" pos:column="7">if <condition pos:line="324" pos:column="10">(<expr><operator pos:line="324" pos:column="11">(<pos:position pos:line="324" pos:column="12"/></operator><name pos:line="324" pos:column="12">ds<pos:position pos:line="324" pos:column="14"/></name> <operator pos:line="324" pos:column="15">=<pos:position pos:line="324" pos:column="16"/></operator> <operator pos:line="324" pos:column="17">(<pos:position pos:line="324" pos:column="18"/></operator><name pos:line="324" pos:column="18">diskstats_t<pos:position pos:line="324" pos:column="29"/></name> <operator pos:line="324" pos:column="30">*<pos:position pos:line="324" pos:column="31"/></operator><operator pos:line="324" pos:column="31">)<pos:position pos:line="324" pos:column="32"/></operator><call><name pos:line="324" pos:column="32">calloc<pos:position pos:line="324" pos:column="38"/></name><argument_list pos:line="324" pos:column="38">(<argument><expr><literal type="number" pos:line="324" pos:column="39">1<pos:position pos:line="324" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="324" pos:column="42">sizeof<argument_list pos:line="324" pos:column="48">(<argument><expr><name pos:line="324" pos:column="49">diskstats_t<pos:position pos:line="324" pos:column="60"/></name></expr></argument>)<pos:position pos:line="324" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="324" pos:column="62"/></argument_list></call><operator pos:line="324" pos:column="62">)<pos:position pos:line="324" pos:column="63"/></operator> <operator pos:line="324" pos:column="64">==<pos:position pos:line="324" pos:column="66"/></operator> <name pos:line="324" pos:column="67">NULL<pos:position pos:line="324" pos:column="71"/></name></expr>)<pos:position pos:line="324" pos:column="72"/></condition><then pos:line="324" pos:column="72">
        <block type="pseudo"><continue pos:line="325" pos:column="9">continue;<pos:position pos:line="325" pos:column="18"/></continue></block></then></if>

      <if pos:line="327" pos:column="7">if <condition pos:line="327" pos:column="10">(<expr><operator pos:line="327" pos:column="11">(<pos:position pos:line="327" pos:column="12"/></operator><name><name pos:line="327" pos:column="12">ds<pos:position pos:line="327" pos:column="14"/></name><operator pos:line="327" pos:column="14">-&gt;<pos:position pos:line="327" pos:column="19"/></operator><name pos:line="327" pos:column="16">name<pos:position pos:line="327" pos:column="20"/></name></name> <operator pos:line="327" pos:column="21">=<pos:position pos:line="327" pos:column="22"/></operator> <call><name pos:line="327" pos:column="23">strdup<pos:position pos:line="327" pos:column="29"/></name><argument_list pos:line="327" pos:column="29">(<argument><expr><name pos:line="327" pos:column="30">disk_name<pos:position pos:line="327" pos:column="39"/></name></expr></argument>)<pos:position pos:line="327" pos:column="40"/></argument_list></call><operator pos:line="327" pos:column="40">)<pos:position pos:line="327" pos:column="41"/></operator> <operator pos:line="327" pos:column="42">==<pos:position pos:line="327" pos:column="44"/></operator> <name pos:line="327" pos:column="45">NULL<pos:position pos:line="327" pos:column="49"/></name></expr>)<pos:position pos:line="327" pos:column="50"/></condition><then pos:line="327" pos:column="50"> <block pos:line="327" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="328" pos:column="9">free<pos:position pos:line="328" pos:column="13"/></name><argument_list pos:line="328" pos:column="13">(<argument><expr><name pos:line="328" pos:column="14">ds<pos:position pos:line="328" pos:column="16"/></name></expr></argument>)<pos:position pos:line="328" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="18"/></expr_stmt>
        <continue pos:line="329" pos:column="9">continue;<pos:position pos:line="329" pos:column="18"/></continue>
      }<pos:position pos:line="330" pos:column="8"/></block></then></if>

      <if pos:line="332" pos:column="7">if <condition pos:line="332" pos:column="10">(<expr><name pos:line="332" pos:column="11">pre_ds<pos:position pos:line="332" pos:column="17"/></name> <operator pos:line="332" pos:column="18">==<pos:position pos:line="332" pos:column="20"/></operator> <name pos:line="332" pos:column="21">NULL<pos:position pos:line="332" pos:column="25"/></name></expr>)<pos:position pos:line="332" pos:column="26"/></condition><then pos:line="332" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><name pos:line="333" pos:column="9">disklist<pos:position pos:line="333" pos:column="17"/></name> <operator pos:line="333" pos:column="18">=<pos:position pos:line="333" pos:column="19"/></operator> <name pos:line="333" pos:column="20">ds<pos:position pos:line="333" pos:column="22"/></name></expr>;<pos:position pos:line="333" pos:column="23"/></expr_stmt></block></then>
      <else pos:line="334" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="335" pos:column="9">pre_ds<pos:position pos:line="335" pos:column="15"/></name><operator pos:line="335" pos:column="15">-&gt;<pos:position pos:line="335" pos:column="20"/></operator><name pos:line="335" pos:column="17">next<pos:position pos:line="335" pos:column="21"/></name></name> <operator pos:line="335" pos:column="22">=<pos:position pos:line="335" pos:column="23"/></operator> <name pos:line="335" pos:column="24">ds<pos:position pos:line="335" pos:column="26"/></name></expr>;<pos:position pos:line="335" pos:column="27"/></expr_stmt></block></else></if>
    }<pos:position pos:line="336" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="338" pos:column="5">is_disk<pos:position pos:line="338" pos:column="12"/></name> <operator pos:line="338" pos:column="13">=<pos:position pos:line="338" pos:column="14"/></operator> <literal type="number" pos:line="338" pos:column="15">0<pos:position pos:line="338" pos:column="16"/></literal></expr>;<pos:position pos:line="338" pos:column="17"/></expr_stmt>
    <if pos:line="339" pos:column="5">if <condition pos:line="339" pos:column="8">(<expr><name pos:line="339" pos:column="9">numfields<pos:position pos:line="339" pos:column="18"/></name> <operator pos:line="339" pos:column="19">==<pos:position pos:line="339" pos:column="21"/></operator> <literal type="number" pos:line="339" pos:column="22">7<pos:position pos:line="339" pos:column="23"/></literal></expr>)<pos:position pos:line="339" pos:column="24"/></condition><then pos:line="339" pos:column="24"> <block pos:line="339" pos:column="25">{
      <comment type="block" pos:line="340" pos:column="7">/* Kernel 2.6, Partition */</comment>
      <expr_stmt><expr><name pos:line="341" pos:column="7">read_ops<pos:position pos:line="341" pos:column="15"/></name> <operator pos:line="341" pos:column="16">=<pos:position pos:line="341" pos:column="17"/></operator> <call><name pos:line="341" pos:column="18">atoll<pos:position pos:line="341" pos:column="23"/></name><argument_list pos:line="341" pos:column="23">(<argument><expr><name><name pos:line="341" pos:column="24">fields<pos:position pos:line="341" pos:column="30"/></name><index pos:line="341" pos:column="30">[<expr><literal type="number" pos:line="341" pos:column="31">3<pos:position pos:line="341" pos:column="32"/></literal></expr>]<pos:position pos:line="341" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="341" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="342" pos:column="7">read_sectors<pos:position pos:line="342" pos:column="19"/></name> <operator pos:line="342" pos:column="20">=<pos:position pos:line="342" pos:column="21"/></operator> <call><name pos:line="342" pos:column="22">atoll<pos:position pos:line="342" pos:column="27"/></name><argument_list pos:line="342" pos:column="27">(<argument><expr><name><name pos:line="342" pos:column="28">fields<pos:position pos:line="342" pos:column="34"/></name><index pos:line="342" pos:column="34">[<expr><literal type="number" pos:line="342" pos:column="35">4<pos:position pos:line="342" pos:column="36"/></literal></expr>]<pos:position pos:line="342" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="342" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="342" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name pos:line="343" pos:column="7">write_ops<pos:position pos:line="343" pos:column="16"/></name> <operator pos:line="343" pos:column="17">=<pos:position pos:line="343" pos:column="18"/></operator> <call><name pos:line="343" pos:column="19">atoll<pos:position pos:line="343" pos:column="24"/></name><argument_list pos:line="343" pos:column="24">(<argument><expr><name><name pos:line="343" pos:column="25">fields<pos:position pos:line="343" pos:column="31"/></name><index pos:line="343" pos:column="31">[<expr><literal type="number" pos:line="343" pos:column="32">5<pos:position pos:line="343" pos:column="33"/></literal></expr>]<pos:position pos:line="343" pos:column="34"/></index></name></expr></argument>)<pos:position pos:line="343" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name pos:line="344" pos:column="7">write_sectors<pos:position pos:line="344" pos:column="20"/></name> <operator pos:line="344" pos:column="21">=<pos:position pos:line="344" pos:column="22"/></operator> <call><name pos:line="344" pos:column="23">atoll<pos:position pos:line="344" pos:column="28"/></name><argument_list pos:line="344" pos:column="28">(<argument><expr><name><name pos:line="344" pos:column="29">fields<pos:position pos:line="344" pos:column="35"/></name><index pos:line="344" pos:column="35">[<expr><literal type="number" pos:line="344" pos:column="36">6<pos:position pos:line="344" pos:column="37"/></literal></expr>]<pos:position pos:line="344" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="344" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="344" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="345" pos:column="6"/></block></then> <elseif pos:line="345" pos:column="7">else <if pos:line="345" pos:column="12">if <condition pos:line="345" pos:column="15">(<expr><name pos:line="345" pos:column="16">numfields<pos:position pos:line="345" pos:column="25"/></name> <operator pos:line="345" pos:column="26">==<pos:position pos:line="345" pos:column="28"/></operator> <operator pos:line="345" pos:column="29">(<pos:position pos:line="345" pos:column="30"/></operator><literal type="number" pos:line="345" pos:column="30">14<pos:position pos:line="345" pos:column="32"/></literal> <operator pos:line="345" pos:column="33">+<pos:position pos:line="345" pos:column="34"/></operator> <name pos:line="345" pos:column="35">fieldshift<pos:position pos:line="345" pos:column="45"/></name><operator pos:line="345" pos:column="45">)<pos:position pos:line="345" pos:column="46"/></operator></expr>)<pos:position pos:line="345" pos:column="47"/></condition><then pos:line="345" pos:column="47"> <block pos:line="345" pos:column="48">{
      <expr_stmt><expr><name pos:line="346" pos:column="7">read_ops<pos:position pos:line="346" pos:column="15"/></name> <operator pos:line="346" pos:column="16">=<pos:position pos:line="346" pos:column="17"/></operator> <call><name pos:line="346" pos:column="18">atoll<pos:position pos:line="346" pos:column="23"/></name><argument_list pos:line="346" pos:column="23">(<argument><expr><name><name pos:line="346" pos:column="24">fields<pos:position pos:line="346" pos:column="30"/></name><index pos:line="346" pos:column="30">[<expr><literal type="number" pos:line="346" pos:column="31">3<pos:position pos:line="346" pos:column="32"/></literal> <operator pos:line="346" pos:column="33">+<pos:position pos:line="346" pos:column="34"/></operator> <name pos:line="346" pos:column="35">fieldshift<pos:position pos:line="346" pos:column="45"/></name></expr>]<pos:position pos:line="346" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="346" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name pos:line="347" pos:column="7">write_ops<pos:position pos:line="347" pos:column="16"/></name> <operator pos:line="347" pos:column="17">=<pos:position pos:line="347" pos:column="18"/></operator> <call><name pos:line="347" pos:column="19">atoll<pos:position pos:line="347" pos:column="24"/></name><argument_list pos:line="347" pos:column="24">(<argument><expr><name><name pos:line="347" pos:column="25">fields<pos:position pos:line="347" pos:column="31"/></name><index pos:line="347" pos:column="31">[<expr><literal type="number" pos:line="347" pos:column="32">7<pos:position pos:line="347" pos:column="33"/></literal> <operator pos:line="347" pos:column="34">+<pos:position pos:line="347" pos:column="35"/></operator> <name pos:line="347" pos:column="36">fieldshift<pos:position pos:line="347" pos:column="46"/></name></expr>]<pos:position pos:line="347" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="347" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="49"/></expr_stmt>

      <expr_stmt><expr><name pos:line="349" pos:column="7">read_sectors<pos:position pos:line="349" pos:column="19"/></name> <operator pos:line="349" pos:column="20">=<pos:position pos:line="349" pos:column="21"/></operator> <call><name pos:line="349" pos:column="22">atoll<pos:position pos:line="349" pos:column="27"/></name><argument_list pos:line="349" pos:column="27">(<argument><expr><name><name pos:line="349" pos:column="28">fields<pos:position pos:line="349" pos:column="34"/></name><index pos:line="349" pos:column="34">[<expr><literal type="number" pos:line="349" pos:column="35">5<pos:position pos:line="349" pos:column="36"/></literal> <operator pos:line="349" pos:column="37">+<pos:position pos:line="349" pos:column="38"/></operator> <name pos:line="349" pos:column="39">fieldshift<pos:position pos:line="349" pos:column="49"/></name></expr>]<pos:position pos:line="349" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="349" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name pos:line="350" pos:column="7">write_sectors<pos:position pos:line="350" pos:column="20"/></name> <operator pos:line="350" pos:column="21">=<pos:position pos:line="350" pos:column="22"/></operator> <call><name pos:line="350" pos:column="23">atoll<pos:position pos:line="350" pos:column="28"/></name><argument_list pos:line="350" pos:column="28">(<argument><expr><name><name pos:line="350" pos:column="29">fields<pos:position pos:line="350" pos:column="35"/></name><index pos:line="350" pos:column="35">[<expr><literal type="number" pos:line="350" pos:column="36">9<pos:position pos:line="350" pos:column="37"/></literal> <operator pos:line="350" pos:column="38">+<pos:position pos:line="350" pos:column="39"/></operator> <name pos:line="350" pos:column="40">fieldshift<pos:position pos:line="350" pos:column="50"/></name></expr>]<pos:position pos:line="350" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="350" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="53"/></expr_stmt>

      <if pos:line="352" pos:column="7">if <condition pos:line="352" pos:column="10">(<expr><operator pos:line="352" pos:column="11">(<pos:position pos:line="352" pos:column="12"/></operator><name pos:line="352" pos:column="12">fieldshift<pos:position pos:line="352" pos:column="22"/></name> <operator pos:line="352" pos:column="23">==<pos:position pos:line="352" pos:column="25"/></operator> <literal type="number" pos:line="352" pos:column="26">0<pos:position pos:line="352" pos:column="27"/></literal><operator pos:line="352" pos:column="27">)<pos:position pos:line="352" pos:column="28"/></operator> <operator pos:line="352" pos:column="29">||<pos:position pos:line="352" pos:column="31"/></operator> <operator pos:line="352" pos:column="32">(<pos:position pos:line="352" pos:column="33"/></operator><name pos:line="352" pos:column="33">minor<pos:position pos:line="352" pos:column="38"/></name> <operator pos:line="352" pos:column="39">==<pos:position pos:line="352" pos:column="41"/></operator> <literal type="number" pos:line="352" pos:column="42">0<pos:position pos:line="352" pos:column="43"/></literal><operator pos:line="352" pos:column="43">)<pos:position pos:line="352" pos:column="44"/></operator></expr>)<pos:position pos:line="352" pos:column="45"/></condition><then pos:line="352" pos:column="45"> <block pos:line="352" pos:column="46">{
        <expr_stmt><expr><name pos:line="353" pos:column="9">is_disk<pos:position pos:line="353" pos:column="16"/></name> <operator pos:line="353" pos:column="17">=<pos:position pos:line="353" pos:column="18"/></operator> <literal type="number" pos:line="353" pos:column="19">1<pos:position pos:line="353" pos:column="20"/></literal></expr>;<pos:position pos:line="353" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="354" pos:column="9">read_merged<pos:position pos:line="354" pos:column="20"/></name> <operator pos:line="354" pos:column="21">=<pos:position pos:line="354" pos:column="22"/></operator> <call><name pos:line="354" pos:column="23">atoll<pos:position pos:line="354" pos:column="28"/></name><argument_list pos:line="354" pos:column="28">(<argument><expr><name><name pos:line="354" pos:column="29">fields<pos:position pos:line="354" pos:column="35"/></name><index pos:line="354" pos:column="35">[<expr><literal type="number" pos:line="354" pos:column="36">4<pos:position pos:line="354" pos:column="37"/></literal> <operator pos:line="354" pos:column="38">+<pos:position pos:line="354" pos:column="39"/></operator> <name pos:line="354" pos:column="40">fieldshift<pos:position pos:line="354" pos:column="50"/></name></expr>]<pos:position pos:line="354" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="354" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name pos:line="355" pos:column="9">read_time<pos:position pos:line="355" pos:column="18"/></name> <operator pos:line="355" pos:column="19">=<pos:position pos:line="355" pos:column="20"/></operator> <call><name pos:line="355" pos:column="21">atoll<pos:position pos:line="355" pos:column="26"/></name><argument_list pos:line="355" pos:column="26">(<argument><expr><name><name pos:line="355" pos:column="27">fields<pos:position pos:line="355" pos:column="33"/></name><index pos:line="355" pos:column="33">[<expr><literal type="number" pos:line="355" pos:column="34">6<pos:position pos:line="355" pos:column="35"/></literal> <operator pos:line="355" pos:column="36">+<pos:position pos:line="355" pos:column="37"/></operator> <name pos:line="355" pos:column="38">fieldshift<pos:position pos:line="355" pos:column="48"/></name></expr>]<pos:position pos:line="355" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="355" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="355" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="356" pos:column="9">write_merged<pos:position pos:line="356" pos:column="21"/></name> <operator pos:line="356" pos:column="22">=<pos:position pos:line="356" pos:column="23"/></operator> <call><name pos:line="356" pos:column="24">atoll<pos:position pos:line="356" pos:column="29"/></name><argument_list pos:line="356" pos:column="29">(<argument><expr><name><name pos:line="356" pos:column="30">fields<pos:position pos:line="356" pos:column="36"/></name><index pos:line="356" pos:column="36">[<expr><literal type="number" pos:line="356" pos:column="37">8<pos:position pos:line="356" pos:column="38"/></literal> <operator pos:line="356" pos:column="39">+<pos:position pos:line="356" pos:column="40"/></operator> <name pos:line="356" pos:column="41">fieldshift<pos:position pos:line="356" pos:column="51"/></name></expr>]<pos:position pos:line="356" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="356" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name pos:line="357" pos:column="9">write_time<pos:position pos:line="357" pos:column="19"/></name> <operator pos:line="357" pos:column="20">=<pos:position pos:line="357" pos:column="21"/></operator> <call><name pos:line="357" pos:column="22">atoll<pos:position pos:line="357" pos:column="27"/></name><argument_list pos:line="357" pos:column="27">(<argument><expr><name><name pos:line="357" pos:column="28">fields<pos:position pos:line="357" pos:column="34"/></name><index pos:line="357" pos:column="34">[<expr><literal type="number" pos:line="357" pos:column="35">10<pos:position pos:line="357" pos:column="37"/></literal> <operator pos:line="357" pos:column="38">+<pos:position pos:line="357" pos:column="39"/></operator> <name pos:line="357" pos:column="40">fieldshift<pos:position pos:line="357" pos:column="50"/></name></expr>]<pos:position pos:line="357" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="357" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="357" pos:column="53"/></expr_stmt>

        <expr_stmt><expr><name pos:line="359" pos:column="9">in_progress<pos:position pos:line="359" pos:column="20"/></name> <operator pos:line="359" pos:column="21">=<pos:position pos:line="359" pos:column="22"/></operator> <call><name pos:line="359" pos:column="23">atof<pos:position pos:line="359" pos:column="27"/></name><argument_list pos:line="359" pos:column="27">(<argument><expr><name><name pos:line="359" pos:column="28">fields<pos:position pos:line="359" pos:column="34"/></name><index pos:line="359" pos:column="34">[<expr><literal type="number" pos:line="359" pos:column="35">11<pos:position pos:line="359" pos:column="37"/></literal> <operator pos:line="359" pos:column="38">+<pos:position pos:line="359" pos:column="39"/></operator> <name pos:line="359" pos:column="40">fieldshift<pos:position pos:line="359" pos:column="50"/></name></expr>]<pos:position pos:line="359" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="359" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="53"/></expr_stmt>

        <expr_stmt><expr><name pos:line="361" pos:column="9">io_time<pos:position pos:line="361" pos:column="16"/></name> <operator pos:line="361" pos:column="17">=<pos:position pos:line="361" pos:column="18"/></operator> <call><name pos:line="361" pos:column="19">atof<pos:position pos:line="361" pos:column="23"/></name><argument_list pos:line="361" pos:column="23">(<argument><expr><name><name pos:line="361" pos:column="24">fields<pos:position pos:line="361" pos:column="30"/></name><index pos:line="361" pos:column="30">[<expr><literal type="number" pos:line="361" pos:column="31">12<pos:position pos:line="361" pos:column="33"/></literal> <operator pos:line="361" pos:column="34">+<pos:position pos:line="361" pos:column="35"/></operator> <name pos:line="361" pos:column="36">fieldshift<pos:position pos:line="361" pos:column="46"/></name></expr>]<pos:position pos:line="361" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="361" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="361" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="362" pos:column="9">weighted_time<pos:position pos:line="362" pos:column="22"/></name> <operator pos:line="362" pos:column="23">=<pos:position pos:line="362" pos:column="24"/></operator> <call><name pos:line="362" pos:column="25">atof<pos:position pos:line="362" pos:column="29"/></name><argument_list pos:line="362" pos:column="29">(<argument><expr><name><name pos:line="362" pos:column="30">fields<pos:position pos:line="362" pos:column="36"/></name><index pos:line="362" pos:column="36">[<expr><literal type="number" pos:line="362" pos:column="37">13<pos:position pos:line="362" pos:column="39"/></literal> <operator pos:line="362" pos:column="40">+<pos:position pos:line="362" pos:column="41"/></operator> <name pos:line="362" pos:column="42">fieldshift<pos:position pos:line="362" pos:column="52"/></name></expr>]<pos:position pos:line="362" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="362" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="362" pos:column="55"/></expr_stmt>
      }<pos:position pos:line="363" pos:column="8"/></block></then></if>
    }<pos:position pos:line="364" pos:column="6"/></block></then></if></elseif> <else pos:line="364" pos:column="7">else <block pos:line="364" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="365" pos:column="7">DEBUG<pos:position pos:line="365" pos:column="12"/></name><argument_list pos:line="365" pos:column="12">(<argument><expr><literal type="string" pos:line="365" pos:column="13">"numfields = %i; =&gt; unknown file format."<pos:position pos:line="365" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="365" pos:column="56">numfields<pos:position pos:line="365" pos:column="65"/></name></expr></argument>)<pos:position pos:line="365" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="365" pos:column="67"/></expr_stmt>
      <continue pos:line="366" pos:column="7">continue;<pos:position pos:line="366" pos:column="16"/></continue>
    }<pos:position pos:line="367" pos:column="6"/></block></else></if>

    <block pos:line="369" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="370" pos:column="7">derive_t<pos:position pos:line="370" pos:column="15"/></name></type> <name pos:line="370" pos:column="16">diff_read_sectors<pos:position pos:line="370" pos:column="33"/></name></decl>;<pos:position pos:line="370" pos:column="34"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="371" pos:column="7">derive_t<pos:position pos:line="371" pos:column="15"/></name></type> <name pos:line="371" pos:column="16">diff_write_sectors<pos:position pos:line="371" pos:column="34"/></name></decl>;<pos:position pos:line="371" pos:column="35"/></decl_stmt>

      <comment type="block" pos:line="373" pos:column="7">/* If the counter wraps around, it's only 32 bits.. */</comment>
      <if pos:line="374" pos:column="7">if <condition pos:line="374" pos:column="10">(<expr><name pos:line="374" pos:column="11">read_sectors<pos:position pos:line="374" pos:column="23"/></name> <operator pos:line="374" pos:column="24">&lt;<pos:position pos:line="374" pos:column="28"/></operator> <name><name pos:line="374" pos:column="26">ds<pos:position pos:line="374" pos:column="28"/></name><operator pos:line="374" pos:column="28">-&gt;<pos:position pos:line="374" pos:column="33"/></operator><name pos:line="374" pos:column="30">read_sectors<pos:position pos:line="374" pos:column="42"/></name></name></expr>)<pos:position pos:line="374" pos:column="43"/></condition><then pos:line="374" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><name pos:line="375" pos:column="9">diff_read_sectors<pos:position pos:line="375" pos:column="26"/></name> <operator pos:line="375" pos:column="27">=<pos:position pos:line="375" pos:column="28"/></operator> <literal type="number" pos:line="375" pos:column="29">1<pos:position pos:line="375" pos:column="30"/></literal> <operator pos:line="375" pos:column="31">+<pos:position pos:line="375" pos:column="32"/></operator> <name pos:line="375" pos:column="33">read_sectors<pos:position pos:line="375" pos:column="45"/></name> <operator pos:line="375" pos:column="46">+<pos:position pos:line="375" pos:column="47"/></operator> <operator pos:line="375" pos:column="48">(<pos:position pos:line="375" pos:column="49"/></operator><name pos:line="375" pos:column="49">UINT_MAX<pos:position pos:line="375" pos:column="57"/></name> <operator pos:line="375" pos:column="58">-<pos:position pos:line="375" pos:column="59"/></operator> <name><name pos:line="375" pos:column="60">ds<pos:position pos:line="375" pos:column="62"/></name><operator pos:line="375" pos:column="62">-&gt;<pos:position pos:line="375" pos:column="67"/></operator><name pos:line="375" pos:column="64">read_sectors<pos:position pos:line="375" pos:column="76"/></name></name><operator pos:line="375" pos:column="76">)<pos:position pos:line="375" pos:column="77"/></operator></expr>;<pos:position pos:line="375" pos:column="78"/></expr_stmt></block></then>
      <else pos:line="376" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="377" pos:column="9">diff_read_sectors<pos:position pos:line="377" pos:column="26"/></name> <operator pos:line="377" pos:column="27">=<pos:position pos:line="377" pos:column="28"/></operator> <name pos:line="377" pos:column="29">read_sectors<pos:position pos:line="377" pos:column="41"/></name> <operator pos:line="377" pos:column="42">-<pos:position pos:line="377" pos:column="43"/></operator> <name><name pos:line="377" pos:column="44">ds<pos:position pos:line="377" pos:column="46"/></name><operator pos:line="377" pos:column="46">-&gt;<pos:position pos:line="377" pos:column="51"/></operator><name pos:line="377" pos:column="48">read_sectors<pos:position pos:line="377" pos:column="60"/></name></name></expr>;<pos:position pos:line="377" pos:column="61"/></expr_stmt></block></else></if>
      <if pos:line="378" pos:column="7">if <condition pos:line="378" pos:column="10">(<expr><name pos:line="378" pos:column="11">write_sectors<pos:position pos:line="378" pos:column="24"/></name> <operator pos:line="378" pos:column="25">&lt;<pos:position pos:line="378" pos:column="29"/></operator> <name><name pos:line="378" pos:column="27">ds<pos:position pos:line="378" pos:column="29"/></name><operator pos:line="378" pos:column="29">-&gt;<pos:position pos:line="378" pos:column="34"/></operator><name pos:line="378" pos:column="31">write_sectors<pos:position pos:line="378" pos:column="44"/></name></name></expr>)<pos:position pos:line="378" pos:column="45"/></condition><then pos:line="378" pos:column="45">
        <block type="pseudo"><expr_stmt><expr><name pos:line="379" pos:column="9">diff_write_sectors<pos:position pos:line="379" pos:column="27"/></name> <operator pos:line="379" pos:column="28">=<pos:position pos:line="379" pos:column="29"/></operator> <literal type="number" pos:line="379" pos:column="30">1<pos:position pos:line="379" pos:column="31"/></literal> <operator pos:line="379" pos:column="32">+<pos:position pos:line="379" pos:column="33"/></operator> <name pos:line="379" pos:column="34">write_sectors<pos:position pos:line="379" pos:column="47"/></name> <operator pos:line="379" pos:column="48">+<pos:position pos:line="379" pos:column="49"/></operator> <operator pos:line="379" pos:column="50">(<pos:position pos:line="379" pos:column="51"/></operator><name pos:line="379" pos:column="51">UINT_MAX<pos:position pos:line="379" pos:column="59"/></name> <operator pos:line="379" pos:column="60">-<pos:position pos:line="379" pos:column="61"/></operator> <name><name pos:line="379" pos:column="62">ds<pos:position pos:line="379" pos:column="64"/></name><operator pos:line="379" pos:column="64">-&gt;<pos:position pos:line="379" pos:column="69"/></operator><name pos:line="379" pos:column="66">write_sectors<pos:position pos:line="379" pos:column="79"/></name></name><operator pos:line="379" pos:column="79">)<pos:position pos:line="379" pos:column="80"/></operator></expr>;<pos:position pos:line="379" pos:column="81"/></expr_stmt></block></then>
      <else pos:line="380" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="381" pos:column="9">diff_write_sectors<pos:position pos:line="381" pos:column="27"/></name> <operator pos:line="381" pos:column="28">=<pos:position pos:line="381" pos:column="29"/></operator> <name pos:line="381" pos:column="30">write_sectors<pos:position pos:line="381" pos:column="43"/></name> <operator pos:line="381" pos:column="44">-<pos:position pos:line="381" pos:column="45"/></operator> <name><name pos:line="381" pos:column="46">ds<pos:position pos:line="381" pos:column="48"/></name><operator pos:line="381" pos:column="48">-&gt;<pos:position pos:line="381" pos:column="53"/></operator><name pos:line="381" pos:column="50">write_sectors<pos:position pos:line="381" pos:column="63"/></name></name></expr>;<pos:position pos:line="381" pos:column="64"/></expr_stmt></block></else></if>

      <expr_stmt><expr><name><name pos:line="383" pos:column="7">ds<pos:position pos:line="383" pos:column="9"/></name><operator pos:line="383" pos:column="9">-&gt;<pos:position pos:line="383" pos:column="14"/></operator><name pos:line="383" pos:column="11">read_bytes<pos:position pos:line="383" pos:column="21"/></name></name> <operator pos:line="383" pos:column="22">+=<pos:position pos:line="383" pos:column="24"/></operator> <literal type="number" pos:line="383" pos:column="25">512<pos:position pos:line="383" pos:column="28"/></literal> <operator pos:line="383" pos:column="29">*<pos:position pos:line="383" pos:column="30"/></operator> <name pos:line="383" pos:column="31">diff_read_sectors<pos:position pos:line="383" pos:column="48"/></name></expr>;<pos:position pos:line="383" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="384" pos:column="7">ds<pos:position pos:line="384" pos:column="9"/></name><operator pos:line="384" pos:column="9">-&gt;<pos:position pos:line="384" pos:column="14"/></operator><name pos:line="384" pos:column="11">write_bytes<pos:position pos:line="384" pos:column="22"/></name></name> <operator pos:line="384" pos:column="23">+=<pos:position pos:line="384" pos:column="25"/></operator> <literal type="number" pos:line="384" pos:column="26">512<pos:position pos:line="384" pos:column="29"/></literal> <operator pos:line="384" pos:column="30">*<pos:position pos:line="384" pos:column="31"/></operator> <name pos:line="384" pos:column="32">diff_write_sectors<pos:position pos:line="384" pos:column="50"/></name></expr>;<pos:position pos:line="384" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="385" pos:column="7">ds<pos:position pos:line="385" pos:column="9"/></name><operator pos:line="385" pos:column="9">-&gt;<pos:position pos:line="385" pos:column="14"/></operator><name pos:line="385" pos:column="11">read_sectors<pos:position pos:line="385" pos:column="23"/></name></name> <operator pos:line="385" pos:column="24">=<pos:position pos:line="385" pos:column="25"/></operator> <name pos:line="385" pos:column="26">read_sectors<pos:position pos:line="385" pos:column="38"/></name></expr>;<pos:position pos:line="385" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="386" pos:column="7">ds<pos:position pos:line="386" pos:column="9"/></name><operator pos:line="386" pos:column="9">-&gt;<pos:position pos:line="386" pos:column="14"/></operator><name pos:line="386" pos:column="11">write_sectors<pos:position pos:line="386" pos:column="24"/></name></name> <operator pos:line="386" pos:column="25">=<pos:position pos:line="386" pos:column="26"/></operator> <name pos:line="386" pos:column="27">write_sectors<pos:position pos:line="386" pos:column="40"/></name></expr>;<pos:position pos:line="386" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="387" pos:column="6"/></block>

    <comment type="block" pos:line="389" pos:column="5">/* Calculate the average time an io-op needs to complete */</comment>
    <if pos:line="390" pos:column="5">if <condition pos:line="390" pos:column="8">(<expr><name pos:line="390" pos:column="9">is_disk<pos:position pos:line="390" pos:column="16"/></name></expr>)<pos:position pos:line="390" pos:column="17"/></condition><then pos:line="390" pos:column="17"> <block pos:line="390" pos:column="18">{
      <decl_stmt><decl><type><name pos:line="391" pos:column="7">derive_t<pos:position pos:line="391" pos:column="15"/></name></type> <name pos:line="391" pos:column="16">diff_read_ops<pos:position pos:line="391" pos:column="29"/></name></decl>;<pos:position pos:line="391" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="392" pos:column="7">derive_t<pos:position pos:line="392" pos:column="15"/></name></type> <name pos:line="392" pos:column="16">diff_write_ops<pos:position pos:line="392" pos:column="30"/></name></decl>;<pos:position pos:line="392" pos:column="31"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="393" pos:column="7">derive_t<pos:position pos:line="393" pos:column="15"/></name></type> <name pos:line="393" pos:column="16">diff_read_time<pos:position pos:line="393" pos:column="30"/></name></decl>;<pos:position pos:line="393" pos:column="31"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="394" pos:column="7">derive_t<pos:position pos:line="394" pos:column="15"/></name></type> <name pos:line="394" pos:column="16">diff_write_time<pos:position pos:line="394" pos:column="31"/></name></decl>;<pos:position pos:line="394" pos:column="32"/></decl_stmt>

      <if pos:line="396" pos:column="7">if <condition pos:line="396" pos:column="10">(<expr><name pos:line="396" pos:column="11">read_ops<pos:position pos:line="396" pos:column="19"/></name> <operator pos:line="396" pos:column="20">&lt;<pos:position pos:line="396" pos:column="24"/></operator> <name><name pos:line="396" pos:column="22">ds<pos:position pos:line="396" pos:column="24"/></name><operator pos:line="396" pos:column="24">-&gt;<pos:position pos:line="396" pos:column="29"/></operator><name pos:line="396" pos:column="26">read_ops<pos:position pos:line="396" pos:column="34"/></name></name></expr>)<pos:position pos:line="396" pos:column="35"/></condition><then pos:line="396" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><name pos:line="397" pos:column="9">diff_read_ops<pos:position pos:line="397" pos:column="22"/></name> <operator pos:line="397" pos:column="23">=<pos:position pos:line="397" pos:column="24"/></operator> <literal type="number" pos:line="397" pos:column="25">1<pos:position pos:line="397" pos:column="26"/></literal> <operator pos:line="397" pos:column="27">+<pos:position pos:line="397" pos:column="28"/></operator> <name pos:line="397" pos:column="29">read_ops<pos:position pos:line="397" pos:column="37"/></name> <operator pos:line="397" pos:column="38">+<pos:position pos:line="397" pos:column="39"/></operator> <operator pos:line="397" pos:column="40">(<pos:position pos:line="397" pos:column="41"/></operator><name pos:line="397" pos:column="41">UINT_MAX<pos:position pos:line="397" pos:column="49"/></name> <operator pos:line="397" pos:column="50">-<pos:position pos:line="397" pos:column="51"/></operator> <name><name pos:line="397" pos:column="52">ds<pos:position pos:line="397" pos:column="54"/></name><operator pos:line="397" pos:column="54">-&gt;<pos:position pos:line="397" pos:column="59"/></operator><name pos:line="397" pos:column="56">read_ops<pos:position pos:line="397" pos:column="64"/></name></name><operator pos:line="397" pos:column="64">)<pos:position pos:line="397" pos:column="65"/></operator></expr>;<pos:position pos:line="397" pos:column="66"/></expr_stmt></block></then>
      <else pos:line="398" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="399" pos:column="9">diff_read_ops<pos:position pos:line="399" pos:column="22"/></name> <operator pos:line="399" pos:column="23">=<pos:position pos:line="399" pos:column="24"/></operator> <name pos:line="399" pos:column="25">read_ops<pos:position pos:line="399" pos:column="33"/></name> <operator pos:line="399" pos:column="34">-<pos:position pos:line="399" pos:column="35"/></operator> <name><name pos:line="399" pos:column="36">ds<pos:position pos:line="399" pos:column="38"/></name><operator pos:line="399" pos:column="38">-&gt;<pos:position pos:line="399" pos:column="43"/></operator><name pos:line="399" pos:column="40">read_ops<pos:position pos:line="399" pos:column="48"/></name></name></expr>;<pos:position pos:line="399" pos:column="49"/></expr_stmt></block></else></if>
      <expr_stmt><expr><call><name pos:line="400" pos:column="7">DEBUG<pos:position pos:line="400" pos:column="12"/></name><argument_list pos:line="400" pos:column="12">(<argument><expr><literal type="string" pos:line="400" pos:column="13">"disk plugin: disk_name = %s; read_ops = %"<pos:position pos:line="400" pos:column="56"/></literal> <name pos:line="400" pos:column="57">PRIi64<pos:position pos:line="400" pos:column="63"/></name> <literal type="string" pos:line="400" pos:column="64">"; "<pos:position pos:line="400" pos:column="68"/></literal>
            <literal type="string" pos:line="401" pos:column="13">"ds-&gt;read_ops = %"<pos:position pos:line="401" pos:column="34"/></literal> <name pos:line="401" pos:column="32">PRIi64<pos:position pos:line="401" pos:column="38"/></name> <literal type="string" pos:line="401" pos:column="39">"; diff_read_ops = %"<pos:position pos:line="401" pos:column="60"/></literal> <name pos:line="401" pos:column="61">PRIi64<pos:position pos:line="401" pos:column="67"/></name> <literal type="string" pos:line="401" pos:column="68">";"<pos:position pos:line="401" pos:column="71"/></literal></expr></argument>,
            <argument><expr><name pos:line="402" pos:column="13">disk_name<pos:position pos:line="402" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="402" pos:column="24">read_ops<pos:position pos:line="402" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="402" pos:column="34">ds<pos:position pos:line="402" pos:column="36"/></name><operator pos:line="402" pos:column="36">-&gt;<pos:position pos:line="402" pos:column="41"/></operator><name pos:line="402" pos:column="38">read_ops<pos:position pos:line="402" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="402" pos:column="48">diff_read_ops<pos:position pos:line="402" pos:column="61"/></name></expr></argument>)<pos:position pos:line="402" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="402" pos:column="63"/></expr_stmt>

      <if pos:line="404" pos:column="7">if <condition pos:line="404" pos:column="10">(<expr><name pos:line="404" pos:column="11">write_ops<pos:position pos:line="404" pos:column="20"/></name> <operator pos:line="404" pos:column="21">&lt;<pos:position pos:line="404" pos:column="25"/></operator> <name><name pos:line="404" pos:column="23">ds<pos:position pos:line="404" pos:column="25"/></name><operator pos:line="404" pos:column="25">-&gt;<pos:position pos:line="404" pos:column="30"/></operator><name pos:line="404" pos:column="27">write_ops<pos:position pos:line="404" pos:column="36"/></name></name></expr>)<pos:position pos:line="404" pos:column="37"/></condition><then pos:line="404" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name pos:line="405" pos:column="9">diff_write_ops<pos:position pos:line="405" pos:column="23"/></name> <operator pos:line="405" pos:column="24">=<pos:position pos:line="405" pos:column="25"/></operator> <literal type="number" pos:line="405" pos:column="26">1<pos:position pos:line="405" pos:column="27"/></literal> <operator pos:line="405" pos:column="28">+<pos:position pos:line="405" pos:column="29"/></operator> <name pos:line="405" pos:column="30">write_ops<pos:position pos:line="405" pos:column="39"/></name> <operator pos:line="405" pos:column="40">+<pos:position pos:line="405" pos:column="41"/></operator> <operator pos:line="405" pos:column="42">(<pos:position pos:line="405" pos:column="43"/></operator><name pos:line="405" pos:column="43">UINT_MAX<pos:position pos:line="405" pos:column="51"/></name> <operator pos:line="405" pos:column="52">-<pos:position pos:line="405" pos:column="53"/></operator> <name><name pos:line="405" pos:column="54">ds<pos:position pos:line="405" pos:column="56"/></name><operator pos:line="405" pos:column="56">-&gt;<pos:position pos:line="405" pos:column="61"/></operator><name pos:line="405" pos:column="58">write_ops<pos:position pos:line="405" pos:column="67"/></name></name><operator pos:line="405" pos:column="67">)<pos:position pos:line="405" pos:column="68"/></operator></expr>;<pos:position pos:line="405" pos:column="69"/></expr_stmt></block></then>
      <else pos:line="406" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="407" pos:column="9">diff_write_ops<pos:position pos:line="407" pos:column="23"/></name> <operator pos:line="407" pos:column="24">=<pos:position pos:line="407" pos:column="25"/></operator> <name pos:line="407" pos:column="26">write_ops<pos:position pos:line="407" pos:column="35"/></name> <operator pos:line="407" pos:column="36">-<pos:position pos:line="407" pos:column="37"/></operator> <name><name pos:line="407" pos:column="38">ds<pos:position pos:line="407" pos:column="40"/></name><operator pos:line="407" pos:column="40">-&gt;<pos:position pos:line="407" pos:column="45"/></operator><name pos:line="407" pos:column="42">write_ops<pos:position pos:line="407" pos:column="51"/></name></name></expr>;<pos:position pos:line="407" pos:column="52"/></expr_stmt></block></else></if>

      <if pos:line="409" pos:column="7">if <condition pos:line="409" pos:column="10">(<expr><name pos:line="409" pos:column="11">read_time<pos:position pos:line="409" pos:column="20"/></name> <operator pos:line="409" pos:column="21">&lt;<pos:position pos:line="409" pos:column="25"/></operator> <name><name pos:line="409" pos:column="23">ds<pos:position pos:line="409" pos:column="25"/></name><operator pos:line="409" pos:column="25">-&gt;<pos:position pos:line="409" pos:column="30"/></operator><name pos:line="409" pos:column="27">read_time<pos:position pos:line="409" pos:column="36"/></name></name></expr>)<pos:position pos:line="409" pos:column="37"/></condition><then pos:line="409" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name pos:line="410" pos:column="9">diff_read_time<pos:position pos:line="410" pos:column="23"/></name> <operator pos:line="410" pos:column="24">=<pos:position pos:line="410" pos:column="25"/></operator> <literal type="number" pos:line="410" pos:column="26">1<pos:position pos:line="410" pos:column="27"/></literal> <operator pos:line="410" pos:column="28">+<pos:position pos:line="410" pos:column="29"/></operator> <name pos:line="410" pos:column="30">read_time<pos:position pos:line="410" pos:column="39"/></name> <operator pos:line="410" pos:column="40">+<pos:position pos:line="410" pos:column="41"/></operator> <operator pos:line="410" pos:column="42">(<pos:position pos:line="410" pos:column="43"/></operator><name pos:line="410" pos:column="43">UINT_MAX<pos:position pos:line="410" pos:column="51"/></name> <operator pos:line="410" pos:column="52">-<pos:position pos:line="410" pos:column="53"/></operator> <name><name pos:line="410" pos:column="54">ds<pos:position pos:line="410" pos:column="56"/></name><operator pos:line="410" pos:column="56">-&gt;<pos:position pos:line="410" pos:column="61"/></operator><name pos:line="410" pos:column="58">read_time<pos:position pos:line="410" pos:column="67"/></name></name><operator pos:line="410" pos:column="67">)<pos:position pos:line="410" pos:column="68"/></operator></expr>;<pos:position pos:line="410" pos:column="69"/></expr_stmt></block></then>
      <else pos:line="411" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="412" pos:column="9">diff_read_time<pos:position pos:line="412" pos:column="23"/></name> <operator pos:line="412" pos:column="24">=<pos:position pos:line="412" pos:column="25"/></operator> <name pos:line="412" pos:column="26">read_time<pos:position pos:line="412" pos:column="35"/></name> <operator pos:line="412" pos:column="36">-<pos:position pos:line="412" pos:column="37"/></operator> <name><name pos:line="412" pos:column="38">ds<pos:position pos:line="412" pos:column="40"/></name><operator pos:line="412" pos:column="40">-&gt;<pos:position pos:line="412" pos:column="45"/></operator><name pos:line="412" pos:column="42">read_time<pos:position pos:line="412" pos:column="51"/></name></name></expr>;<pos:position pos:line="412" pos:column="52"/></expr_stmt></block></else></if>

      <if pos:line="414" pos:column="7">if <condition pos:line="414" pos:column="10">(<expr><name pos:line="414" pos:column="11">write_time<pos:position pos:line="414" pos:column="21"/></name> <operator pos:line="414" pos:column="22">&lt;<pos:position pos:line="414" pos:column="26"/></operator> <name><name pos:line="414" pos:column="24">ds<pos:position pos:line="414" pos:column="26"/></name><operator pos:line="414" pos:column="26">-&gt;<pos:position pos:line="414" pos:column="31"/></operator><name pos:line="414" pos:column="28">write_time<pos:position pos:line="414" pos:column="38"/></name></name></expr>)<pos:position pos:line="414" pos:column="39"/></condition><then pos:line="414" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><name pos:line="415" pos:column="9">diff_write_time<pos:position pos:line="415" pos:column="24"/></name> <operator pos:line="415" pos:column="25">=<pos:position pos:line="415" pos:column="26"/></operator> <literal type="number" pos:line="415" pos:column="27">1<pos:position pos:line="415" pos:column="28"/></literal> <operator pos:line="415" pos:column="29">+<pos:position pos:line="415" pos:column="30"/></operator> <name pos:line="415" pos:column="31">write_time<pos:position pos:line="415" pos:column="41"/></name> <operator pos:line="415" pos:column="42">+<pos:position pos:line="415" pos:column="43"/></operator> <operator pos:line="415" pos:column="44">(<pos:position pos:line="415" pos:column="45"/></operator><name pos:line="415" pos:column="45">UINT_MAX<pos:position pos:line="415" pos:column="53"/></name> <operator pos:line="415" pos:column="54">-<pos:position pos:line="415" pos:column="55"/></operator> <name><name pos:line="415" pos:column="56">ds<pos:position pos:line="415" pos:column="58"/></name><operator pos:line="415" pos:column="58">-&gt;<pos:position pos:line="415" pos:column="63"/></operator><name pos:line="415" pos:column="60">write_time<pos:position pos:line="415" pos:column="70"/></name></name><operator pos:line="415" pos:column="70">)<pos:position pos:line="415" pos:column="71"/></operator></expr>;<pos:position pos:line="415" pos:column="72"/></expr_stmt></block></then>
      <else pos:line="416" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="417" pos:column="9">diff_write_time<pos:position pos:line="417" pos:column="24"/></name> <operator pos:line="417" pos:column="25">=<pos:position pos:line="417" pos:column="26"/></operator> <name pos:line="417" pos:column="27">write_time<pos:position pos:line="417" pos:column="37"/></name> <operator pos:line="417" pos:column="38">-<pos:position pos:line="417" pos:column="39"/></operator> <name><name pos:line="417" pos:column="40">ds<pos:position pos:line="417" pos:column="42"/></name><operator pos:line="417" pos:column="42">-&gt;<pos:position pos:line="417" pos:column="47"/></operator><name pos:line="417" pos:column="44">write_time<pos:position pos:line="417" pos:column="54"/></name></name></expr>;<pos:position pos:line="417" pos:column="55"/></expr_stmt></block></else></if>

      <if pos:line="419" pos:column="7">if <condition pos:line="419" pos:column="10">(<expr><name pos:line="419" pos:column="11">diff_read_ops<pos:position pos:line="419" pos:column="24"/></name> <operator pos:line="419" pos:column="25">!=<pos:position pos:line="419" pos:column="27"/></operator> <literal type="number" pos:line="419" pos:column="28">0<pos:position pos:line="419" pos:column="29"/></literal></expr>)<pos:position pos:line="419" pos:column="30"/></condition><then pos:line="419" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="420" pos:column="9">ds<pos:position pos:line="420" pos:column="11"/></name><operator pos:line="420" pos:column="11">-&gt;<pos:position pos:line="420" pos:column="16"/></operator><name pos:line="420" pos:column="13">avg_read_time<pos:position pos:line="420" pos:column="26"/></name></name> <operator pos:line="420" pos:column="27">+=<pos:position pos:line="420" pos:column="29"/></operator> <call><name pos:line="420" pos:column="30">disk_calc_time_incr<pos:position pos:line="420" pos:column="49"/></name><argument_list pos:line="420" pos:column="49">(<argument><expr><name pos:line="420" pos:column="50">diff_read_time<pos:position pos:line="420" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="420" pos:column="66">diff_read_ops<pos:position pos:line="420" pos:column="79"/></name></expr></argument>)<pos:position pos:line="420" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="420" pos:column="81"/></expr_stmt></block></then></if>
      <if pos:line="421" pos:column="7">if <condition pos:line="421" pos:column="10">(<expr><name pos:line="421" pos:column="11">diff_write_ops<pos:position pos:line="421" pos:column="25"/></name> <operator pos:line="421" pos:column="26">!=<pos:position pos:line="421" pos:column="28"/></operator> <literal type="number" pos:line="421" pos:column="29">0<pos:position pos:line="421" pos:column="30"/></literal></expr>)<pos:position pos:line="421" pos:column="31"/></condition><then pos:line="421" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="422" pos:column="9">ds<pos:position pos:line="422" pos:column="11"/></name><operator pos:line="422" pos:column="11">-&gt;<pos:position pos:line="422" pos:column="16"/></operator><name pos:line="422" pos:column="13">avg_write_time<pos:position pos:line="422" pos:column="27"/></name></name> <operator pos:line="422" pos:column="28">+=<pos:position pos:line="422" pos:column="30"/></operator>
            <call><name pos:line="423" pos:column="13">disk_calc_time_incr<pos:position pos:line="423" pos:column="32"/></name><argument_list pos:line="423" pos:column="32">(<argument><expr><name pos:line="423" pos:column="33">diff_write_time<pos:position pos:line="423" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="423" pos:column="50">diff_write_ops<pos:position pos:line="423" pos:column="64"/></name></expr></argument>)<pos:position pos:line="423" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="423" pos:column="66"/></expr_stmt></block></then></if>

      <expr_stmt><expr><name><name pos:line="425" pos:column="7">ds<pos:position pos:line="425" pos:column="9"/></name><operator pos:line="425" pos:column="9">-&gt;<pos:position pos:line="425" pos:column="14"/></operator><name pos:line="425" pos:column="11">read_ops<pos:position pos:line="425" pos:column="19"/></name></name> <operator pos:line="425" pos:column="20">=<pos:position pos:line="425" pos:column="21"/></operator> <name pos:line="425" pos:column="22">read_ops<pos:position pos:line="425" pos:column="30"/></name></expr>;<pos:position pos:line="425" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="426" pos:column="7">ds<pos:position pos:line="426" pos:column="9"/></name><operator pos:line="426" pos:column="9">-&gt;<pos:position pos:line="426" pos:column="14"/></operator><name pos:line="426" pos:column="11">read_time<pos:position pos:line="426" pos:column="20"/></name></name> <operator pos:line="426" pos:column="21">=<pos:position pos:line="426" pos:column="22"/></operator> <name pos:line="426" pos:column="23">read_time<pos:position pos:line="426" pos:column="32"/></name></expr>;<pos:position pos:line="426" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="427" pos:column="7">ds<pos:position pos:line="427" pos:column="9"/></name><operator pos:line="427" pos:column="9">-&gt;<pos:position pos:line="427" pos:column="14"/></operator><name pos:line="427" pos:column="11">write_ops<pos:position pos:line="427" pos:column="20"/></name></name> <operator pos:line="427" pos:column="21">=<pos:position pos:line="427" pos:column="22"/></operator> <name pos:line="427" pos:column="23">write_ops<pos:position pos:line="427" pos:column="32"/></name></expr>;<pos:position pos:line="427" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="428" pos:column="7">ds<pos:position pos:line="428" pos:column="9"/></name><operator pos:line="428" pos:column="9">-&gt;<pos:position pos:line="428" pos:column="14"/></operator><name pos:line="428" pos:column="11">write_time<pos:position pos:line="428" pos:column="21"/></name></name> <operator pos:line="428" pos:column="22">=<pos:position pos:line="428" pos:column="23"/></operator> <name pos:line="428" pos:column="24">write_time<pos:position pos:line="428" pos:column="34"/></name></expr>;<pos:position pos:line="428" pos:column="35"/></expr_stmt>

      <if pos:line="430" pos:column="7">if <condition pos:line="430" pos:column="10">(<expr><name pos:line="430" pos:column="11">read_merged<pos:position pos:line="430" pos:column="22"/></name> <operator pos:line="430" pos:column="23">||<pos:position pos:line="430" pos:column="25"/></operator> <name pos:line="430" pos:column="26">write_merged<pos:position pos:line="430" pos:column="38"/></name></expr>)<pos:position pos:line="430" pos:column="39"/></condition><then pos:line="430" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="431" pos:column="9">ds<pos:position pos:line="431" pos:column="11"/></name><operator pos:line="431" pos:column="11">-&gt;<pos:position pos:line="431" pos:column="16"/></operator><name pos:line="431" pos:column="13">has_merged<pos:position pos:line="431" pos:column="23"/></name></name> <operator pos:line="431" pos:column="24">=<pos:position pos:line="431" pos:column="25"/></operator> <literal type="number" pos:line="431" pos:column="26">1<pos:position pos:line="431" pos:column="27"/></literal></expr>;<pos:position pos:line="431" pos:column="28"/></expr_stmt></block></then></if>

      <if pos:line="433" pos:column="7">if <condition pos:line="433" pos:column="10">(<expr><name pos:line="433" pos:column="11">in_progress<pos:position pos:line="433" pos:column="22"/></name></expr>)<pos:position pos:line="433" pos:column="23"/></condition><then pos:line="433" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="434" pos:column="9">ds<pos:position pos:line="434" pos:column="11"/></name><operator pos:line="434" pos:column="11">-&gt;<pos:position pos:line="434" pos:column="16"/></operator><name pos:line="434" pos:column="13">has_in_progress<pos:position pos:line="434" pos:column="28"/></name></name> <operator pos:line="434" pos:column="29">=<pos:position pos:line="434" pos:column="30"/></operator> <literal type="number" pos:line="434" pos:column="31">1<pos:position pos:line="434" pos:column="32"/></literal></expr>;<pos:position pos:line="434" pos:column="33"/></expr_stmt></block></then></if>

      <if pos:line="436" pos:column="7">if <condition pos:line="436" pos:column="10">(<expr><name pos:line="436" pos:column="11">io_time<pos:position pos:line="436" pos:column="18"/></name></expr>)<pos:position pos:line="436" pos:column="19"/></condition><then pos:line="436" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="437" pos:column="9">ds<pos:position pos:line="437" pos:column="11"/></name><operator pos:line="437" pos:column="11">-&gt;<pos:position pos:line="437" pos:column="16"/></operator><name pos:line="437" pos:column="13">has_io_time<pos:position pos:line="437" pos:column="24"/></name></name> <operator pos:line="437" pos:column="25">=<pos:position pos:line="437" pos:column="26"/></operator> <literal type="number" pos:line="437" pos:column="27">1<pos:position pos:line="437" pos:column="28"/></literal></expr>;<pos:position pos:line="437" pos:column="29"/></expr_stmt></block></then></if>

    }<pos:position pos:line="439" pos:column="6"/></block></then></if> <comment type="block" pos:line="439" pos:column="7">/* if (is_disk) */</comment>

    <comment type="block" pos:line="441" pos:column="5">/* Don't write to the RRDs if we've just started.. */</comment>
    <expr_stmt><expr><name><name pos:line="442" pos:column="5">ds<pos:position pos:line="442" pos:column="7"/></name><operator pos:line="442" pos:column="7">-&gt;<pos:position pos:line="442" pos:column="12"/></operator><name pos:line="442" pos:column="9">poll_count<pos:position pos:line="442" pos:column="19"/></name></name><operator pos:line="442" pos:column="19">++<pos:position pos:line="442" pos:column="21"/></operator></expr>;<pos:position pos:line="442" pos:column="22"/></expr_stmt>
    <if pos:line="443" pos:column="5">if <condition pos:line="443" pos:column="8">(<expr><name><name pos:line="443" pos:column="9">ds<pos:position pos:line="443" pos:column="11"/></name><operator pos:line="443" pos:column="11">-&gt;<pos:position pos:line="443" pos:column="16"/></operator><name pos:line="443" pos:column="13">poll_count<pos:position pos:line="443" pos:column="23"/></name></name> <operator pos:line="443" pos:column="24">&lt;=<pos:position pos:line="443" pos:column="29"/></operator> <literal type="number" pos:line="443" pos:column="27">2<pos:position pos:line="443" pos:column="28"/></literal></expr>)<pos:position pos:line="443" pos:column="29"/></condition><then pos:line="443" pos:column="29"> <block pos:line="443" pos:column="30">{
      <expr_stmt><expr><call><name pos:line="444" pos:column="7">DEBUG<pos:position pos:line="444" pos:column="12"/></name><argument_list pos:line="444" pos:column="12">(<argument><expr><literal type="string" pos:line="444" pos:column="13">"disk plugin: (ds-&gt;poll_count = %i) &lt;= "<pos:position pos:line="444" pos:column="59"/></literal>
            <literal type="string" pos:line="445" pos:column="13">"(min_poll_count = 2); =&gt; Not writing."<pos:position pos:line="445" pos:column="55"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="446" pos:column="13">ds<pos:position pos:line="446" pos:column="15"/></name><operator pos:line="446" pos:column="15">-&gt;<pos:position pos:line="446" pos:column="20"/></operator><name pos:line="446" pos:column="17">poll_count<pos:position pos:line="446" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="446" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="446" pos:column="29"/></expr_stmt>
      <continue pos:line="447" pos:column="7">continue;<pos:position pos:line="447" pos:column="16"/></continue>
    }<pos:position pos:line="448" pos:column="6"/></block></then></if>

    <if pos:line="450" pos:column="5">if <condition pos:line="450" pos:column="8">(<expr><operator pos:line="450" pos:column="9">(<pos:position pos:line="450" pos:column="10"/></operator><name pos:line="450" pos:column="10">read_ops<pos:position pos:line="450" pos:column="18"/></name> <operator pos:line="450" pos:column="19">==<pos:position pos:line="450" pos:column="21"/></operator> <literal type="number" pos:line="450" pos:column="22">0<pos:position pos:line="450" pos:column="23"/></literal><operator pos:line="450" pos:column="23">)<pos:position pos:line="450" pos:column="24"/></operator> <operator pos:line="450" pos:column="25">&amp;&amp;<pos:position pos:line="450" pos:column="35"/></operator> <operator pos:line="450" pos:column="28">(<pos:position pos:line="450" pos:column="29"/></operator><name pos:line="450" pos:column="29">write_ops<pos:position pos:line="450" pos:column="38"/></name> <operator pos:line="450" pos:column="39">==<pos:position pos:line="450" pos:column="41"/></operator> <literal type="number" pos:line="450" pos:column="42">0<pos:position pos:line="450" pos:column="43"/></literal><operator pos:line="450" pos:column="43">)<pos:position pos:line="450" pos:column="44"/></operator></expr>)<pos:position pos:line="450" pos:column="45"/></condition><then pos:line="450" pos:column="45"> <block pos:line="450" pos:column="46">{
      <expr_stmt><expr><call><name pos:line="451" pos:column="7">DEBUG<pos:position pos:line="451" pos:column="12"/></name><argument_list pos:line="451" pos:column="12">(<argument><expr><literal type="string" pos:line="451" pos:column="13">"disk plugin: ((read_ops == 0) &amp;&amp; "<pos:position pos:line="451" pos:column="56"/></literal>
            <literal type="string" pos:line="452" pos:column="13">"(write_ops == 0)); =&gt; Not writing."<pos:position pos:line="452" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="452" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="452" pos:column="51"/></expr_stmt>
      <continue pos:line="453" pos:column="7">continue;<pos:position pos:line="453" pos:column="16"/></continue>
    }<pos:position pos:line="454" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="456" pos:column="5">output_name<pos:position pos:line="456" pos:column="16"/></name> <operator pos:line="456" pos:column="17">=<pos:position pos:line="456" pos:column="18"/></operator> <name pos:line="456" pos:column="19">disk_name<pos:position pos:line="456" pos:column="28"/></name></expr>;<pos:position pos:line="456" pos:column="29"/></expr_stmt>

<cpp:if pos:line="458" pos:column="1">#<cpp:directive pos:line="458" pos:column="2">if<pos:position pos:line="458" pos:column="4"/></cpp:directive> <expr><name pos:line="458" pos:column="5">HAVE_LIBUDEV<pos:position pos:line="458" pos:column="17"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="459" pos:column="5">char<pos:position pos:line="459" pos:column="9"/></name> <modifier pos:line="459" pos:column="10">*<pos:position pos:line="459" pos:column="11"/></modifier></type><name pos:line="459" pos:column="11">alt_name<pos:position pos:line="459" pos:column="19"/></name> <init pos:line="459" pos:column="20">= <expr><name pos:line="459" pos:column="22">NULL<pos:position pos:line="459" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="459" pos:column="27"/></decl_stmt>
    <if pos:line="460" pos:column="5">if <condition pos:line="460" pos:column="8">(<expr><name pos:line="460" pos:column="9">conf_udev_name_attr<pos:position pos:line="460" pos:column="28"/></name> <operator pos:line="460" pos:column="29">!=<pos:position pos:line="460" pos:column="31"/></operator> <name pos:line="460" pos:column="32">NULL<pos:position pos:line="460" pos:column="36"/></name></expr>)<pos:position pos:line="460" pos:column="37"/></condition><then pos:line="460" pos:column="37"> <block pos:line="460" pos:column="38">{
      <expr_stmt><expr><name pos:line="461" pos:column="7">alt_name<pos:position pos:line="461" pos:column="15"/></name> <operator pos:line="461" pos:column="16">=<pos:position pos:line="461" pos:column="17"/></operator>
          <call><name pos:line="462" pos:column="11">disk_udev_attr_name<pos:position pos:line="462" pos:column="30"/></name><argument_list pos:line="462" pos:column="30">(<argument><expr><name pos:line="462" pos:column="31">handle_udev<pos:position pos:line="462" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="462" pos:column="44">disk_name<pos:position pos:line="462" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="462" pos:column="55">conf_udev_name_attr<pos:position pos:line="462" pos:column="74"/></name></expr></argument>)<pos:position pos:line="462" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="462" pos:column="76"/></expr_stmt>
      <if pos:line="463" pos:column="7">if <condition pos:line="463" pos:column="10">(<expr><name pos:line="463" pos:column="11">alt_name<pos:position pos:line="463" pos:column="19"/></name> <operator pos:line="463" pos:column="20">!=<pos:position pos:line="463" pos:column="22"/></operator> <name pos:line="463" pos:column="23">NULL<pos:position pos:line="463" pos:column="27"/></name></expr>)<pos:position pos:line="463" pos:column="28"/></condition><then pos:line="463" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><name pos:line="464" pos:column="9">output_name<pos:position pos:line="464" pos:column="20"/></name> <operator pos:line="464" pos:column="21">=<pos:position pos:line="464" pos:column="22"/></operator> <name pos:line="464" pos:column="23">alt_name<pos:position pos:line="464" pos:column="31"/></name></expr>;<pos:position pos:line="464" pos:column="32"/></expr_stmt></block></then></if>
    }<pos:position pos:line="465" pos:column="6"/></block></then></if>
<cpp:endif pos:line="466" pos:column="1">#<cpp:directive pos:line="466" pos:column="2">endif<pos:position pos:line="466" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="468" pos:column="5">if <condition pos:line="468" pos:column="8">(<expr><call><name pos:line="468" pos:column="9">ignorelist_match<pos:position pos:line="468" pos:column="25"/></name><argument_list pos:line="468" pos:column="25">(<argument><expr><name pos:line="468" pos:column="26">ignorelist<pos:position pos:line="468" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="468" pos:column="38">output_name<pos:position pos:line="468" pos:column="49"/></name></expr></argument>)<pos:position pos:line="468" pos:column="50"/></argument_list></call> <operator pos:line="468" pos:column="51">!=<pos:position pos:line="468" pos:column="53"/></operator> <literal type="number" pos:line="468" pos:column="54">0<pos:position pos:line="468" pos:column="55"/></literal></expr>)<pos:position pos:line="468" pos:column="56"/></condition><then pos:line="468" pos:column="56"> <block pos:line="468" pos:column="57">{
<cpp:if pos:line="469" pos:column="1">#<cpp:directive pos:line="469" pos:column="2">if<pos:position pos:line="469" pos:column="4"/></cpp:directive> <expr><name pos:line="469" pos:column="5">HAVE_LIBUDEV<pos:position pos:line="469" pos:column="17"/></name></expr></cpp:if>
      <comment type="block" pos:line="470" pos:column="7">/* release udev-based alternate name, if allocated */</comment>
      <expr_stmt><expr><call><name pos:line="471" pos:column="7">sfree<pos:position pos:line="471" pos:column="12"/></name><argument_list pos:line="471" pos:column="12">(<argument><expr><name pos:line="471" pos:column="13">alt_name<pos:position pos:line="471" pos:column="21"/></name></expr></argument>)<pos:position pos:line="471" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="471" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="472" pos:column="1">#<cpp:directive pos:line="472" pos:column="2">endif<pos:position pos:line="472" pos:column="7"/></cpp:directive></cpp:endif>
      <continue pos:line="473" pos:column="7">continue;<pos:position pos:line="473" pos:column="16"/></continue>
    }<pos:position pos:line="474" pos:column="6"/></block></then></if>

    <if pos:line="476" pos:column="5">if <condition pos:line="476" pos:column="8">(<expr><operator pos:line="476" pos:column="9">(<pos:position pos:line="476" pos:column="10"/></operator><name><name pos:line="476" pos:column="10">ds<pos:position pos:line="476" pos:column="12"/></name><operator pos:line="476" pos:column="12">-&gt;<pos:position pos:line="476" pos:column="17"/></operator><name pos:line="476" pos:column="14">read_bytes<pos:position pos:line="476" pos:column="24"/></name></name> <operator pos:line="476" pos:column="25">!=<pos:position pos:line="476" pos:column="27"/></operator> <literal type="number" pos:line="476" pos:column="28">0<pos:position pos:line="476" pos:column="29"/></literal><operator pos:line="476" pos:column="29">)<pos:position pos:line="476" pos:column="30"/></operator> <operator pos:line="476" pos:column="31">||<pos:position pos:line="476" pos:column="33"/></operator> <operator pos:line="476" pos:column="34">(<pos:position pos:line="476" pos:column="35"/></operator><name><name pos:line="476" pos:column="35">ds<pos:position pos:line="476" pos:column="37"/></name><operator pos:line="476" pos:column="37">-&gt;<pos:position pos:line="476" pos:column="42"/></operator><name pos:line="476" pos:column="39">write_bytes<pos:position pos:line="476" pos:column="50"/></name></name> <operator pos:line="476" pos:column="51">!=<pos:position pos:line="476" pos:column="53"/></operator> <literal type="number" pos:line="476" pos:column="54">0<pos:position pos:line="476" pos:column="55"/></literal><operator pos:line="476" pos:column="55">)<pos:position pos:line="476" pos:column="56"/></operator></expr>)<pos:position pos:line="476" pos:column="57"/></condition><then pos:line="476" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="477" pos:column="7">disk_submit<pos:position pos:line="477" pos:column="18"/></name><argument_list pos:line="477" pos:column="18">(<argument><expr><name pos:line="477" pos:column="19">output_name<pos:position pos:line="477" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="477" pos:column="32">"disk_octets"<pos:position pos:line="477" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="477" pos:column="47">ds<pos:position pos:line="477" pos:column="49"/></name><operator pos:line="477" pos:column="49">-&gt;<pos:position pos:line="477" pos:column="54"/></operator><name pos:line="477" pos:column="51">read_bytes<pos:position pos:line="477" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="477" pos:column="63">ds<pos:position pos:line="477" pos:column="65"/></name><operator pos:line="477" pos:column="65">-&gt;<pos:position pos:line="477" pos:column="70"/></operator><name pos:line="477" pos:column="67">write_bytes<pos:position pos:line="477" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="477" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="477" pos:column="80"/></expr_stmt></block></then></if>

    <if pos:line="479" pos:column="5">if <condition pos:line="479" pos:column="8">(<expr><operator pos:line="479" pos:column="9">(<pos:position pos:line="479" pos:column="10"/></operator><name><name pos:line="479" pos:column="10">ds<pos:position pos:line="479" pos:column="12"/></name><operator pos:line="479" pos:column="12">-&gt;<pos:position pos:line="479" pos:column="17"/></operator><name pos:line="479" pos:column="14">read_ops<pos:position pos:line="479" pos:column="22"/></name></name> <operator pos:line="479" pos:column="23">!=<pos:position pos:line="479" pos:column="25"/></operator> <literal type="number" pos:line="479" pos:column="26">0<pos:position pos:line="479" pos:column="27"/></literal><operator pos:line="479" pos:column="27">)<pos:position pos:line="479" pos:column="28"/></operator> <operator pos:line="479" pos:column="29">||<pos:position pos:line="479" pos:column="31"/></operator> <operator pos:line="479" pos:column="32">(<pos:position pos:line="479" pos:column="33"/></operator><name><name pos:line="479" pos:column="33">ds<pos:position pos:line="479" pos:column="35"/></name><operator pos:line="479" pos:column="35">-&gt;<pos:position pos:line="479" pos:column="40"/></operator><name pos:line="479" pos:column="37">write_ops<pos:position pos:line="479" pos:column="46"/></name></name> <operator pos:line="479" pos:column="47">!=<pos:position pos:line="479" pos:column="49"/></operator> <literal type="number" pos:line="479" pos:column="50">0<pos:position pos:line="479" pos:column="51"/></literal><operator pos:line="479" pos:column="51">)<pos:position pos:line="479" pos:column="52"/></operator></expr>)<pos:position pos:line="479" pos:column="53"/></condition><then pos:line="479" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="480" pos:column="7">disk_submit<pos:position pos:line="480" pos:column="18"/></name><argument_list pos:line="480" pos:column="18">(<argument><expr><name pos:line="480" pos:column="19">output_name<pos:position pos:line="480" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="480" pos:column="32">"disk_ops"<pos:position pos:line="480" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="480" pos:column="44">read_ops<pos:position pos:line="480" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="480" pos:column="54">write_ops<pos:position pos:line="480" pos:column="63"/></name></expr></argument>)<pos:position pos:line="480" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="480" pos:column="65"/></expr_stmt></block></then></if>

    <if pos:line="482" pos:column="5">if <condition pos:line="482" pos:column="8">(<expr><operator pos:line="482" pos:column="9">(<pos:position pos:line="482" pos:column="10"/></operator><name><name pos:line="482" pos:column="10">ds<pos:position pos:line="482" pos:column="12"/></name><operator pos:line="482" pos:column="12">-&gt;<pos:position pos:line="482" pos:column="17"/></operator><name pos:line="482" pos:column="14">avg_read_time<pos:position pos:line="482" pos:column="27"/></name></name> <operator pos:line="482" pos:column="28">!=<pos:position pos:line="482" pos:column="30"/></operator> <literal type="number" pos:line="482" pos:column="31">0<pos:position pos:line="482" pos:column="32"/></literal><operator pos:line="482" pos:column="32">)<pos:position pos:line="482" pos:column="33"/></operator> <operator pos:line="482" pos:column="34">||<pos:position pos:line="482" pos:column="36"/></operator> <operator pos:line="482" pos:column="37">(<pos:position pos:line="482" pos:column="38"/></operator><name><name pos:line="482" pos:column="38">ds<pos:position pos:line="482" pos:column="40"/></name><operator pos:line="482" pos:column="40">-&gt;<pos:position pos:line="482" pos:column="45"/></operator><name pos:line="482" pos:column="42">avg_write_time<pos:position pos:line="482" pos:column="56"/></name></name> <operator pos:line="482" pos:column="57">!=<pos:position pos:line="482" pos:column="59"/></operator> <literal type="number" pos:line="482" pos:column="60">0<pos:position pos:line="482" pos:column="61"/></literal><operator pos:line="482" pos:column="61">)<pos:position pos:line="482" pos:column="62"/></operator></expr>)<pos:position pos:line="482" pos:column="63"/></condition><then pos:line="482" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="483" pos:column="7">disk_submit<pos:position pos:line="483" pos:column="18"/></name><argument_list pos:line="483" pos:column="18">(<argument><expr><name pos:line="483" pos:column="19">output_name<pos:position pos:line="483" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="483" pos:column="32">"disk_time"<pos:position pos:line="483" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="483" pos:column="45">ds<pos:position pos:line="483" pos:column="47"/></name><operator pos:line="483" pos:column="47">-&gt;<pos:position pos:line="483" pos:column="52"/></operator><name pos:line="483" pos:column="49">avg_read_time<pos:position pos:line="483" pos:column="62"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="484" pos:column="19">ds<pos:position pos:line="484" pos:column="21"/></name><operator pos:line="484" pos:column="21">-&gt;<pos:position pos:line="484" pos:column="26"/></operator><name pos:line="484" pos:column="23">avg_write_time<pos:position pos:line="484" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="484" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="484" pos:column="39"/></expr_stmt></block></then></if>

    <if pos:line="486" pos:column="5">if <condition pos:line="486" pos:column="8">(<expr><name pos:line="486" pos:column="9">is_disk<pos:position pos:line="486" pos:column="16"/></name></expr>)<pos:position pos:line="486" pos:column="17"/></condition><then pos:line="486" pos:column="17"> <block pos:line="486" pos:column="18">{
      <if pos:line="487" pos:column="7">if <condition pos:line="487" pos:column="10">(<expr><name><name pos:line="487" pos:column="11">ds<pos:position pos:line="487" pos:column="13"/></name><operator pos:line="487" pos:column="13">-&gt;<pos:position pos:line="487" pos:column="18"/></operator><name pos:line="487" pos:column="15">has_merged<pos:position pos:line="487" pos:column="25"/></name></name></expr>)<pos:position pos:line="487" pos:column="26"/></condition><then pos:line="487" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="488" pos:column="9">disk_submit<pos:position pos:line="488" pos:column="20"/></name><argument_list pos:line="488" pos:column="20">(<argument><expr><name pos:line="488" pos:column="21">output_name<pos:position pos:line="488" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="488" pos:column="34">"disk_merged"<pos:position pos:line="488" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="488" pos:column="49">read_merged<pos:position pos:line="488" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="488" pos:column="62">write_merged<pos:position pos:line="488" pos:column="74"/></name></expr></argument>)<pos:position pos:line="488" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="488" pos:column="76"/></expr_stmt></block></then></if>
      <if pos:line="489" pos:column="7">if <condition pos:line="489" pos:column="10">(<expr><name><name pos:line="489" pos:column="11">ds<pos:position pos:line="489" pos:column="13"/></name><operator pos:line="489" pos:column="13">-&gt;<pos:position pos:line="489" pos:column="18"/></operator><name pos:line="489" pos:column="15">has_in_progress<pos:position pos:line="489" pos:column="30"/></name></name></expr>)<pos:position pos:line="489" pos:column="31"/></condition><then pos:line="489" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="490" pos:column="9">submit_in_progress<pos:position pos:line="490" pos:column="27"/></name><argument_list pos:line="490" pos:column="27">(<argument><expr><name pos:line="490" pos:column="28">output_name<pos:position pos:line="490" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="490" pos:column="41">in_progress<pos:position pos:line="490" pos:column="52"/></name></expr></argument>)<pos:position pos:line="490" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="490" pos:column="54"/></expr_stmt></block></then></if>
      <if pos:line="491" pos:column="7">if <condition pos:line="491" pos:column="10">(<expr><name><name pos:line="491" pos:column="11">ds<pos:position pos:line="491" pos:column="13"/></name><operator pos:line="491" pos:column="13">-&gt;<pos:position pos:line="491" pos:column="18"/></operator><name pos:line="491" pos:column="15">has_io_time<pos:position pos:line="491" pos:column="26"/></name></name></expr>)<pos:position pos:line="491" pos:column="27"/></condition><then pos:line="491" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="492" pos:column="9">submit_io_time<pos:position pos:line="492" pos:column="23"/></name><argument_list pos:line="492" pos:column="23">(<argument><expr><name pos:line="492" pos:column="24">output_name<pos:position pos:line="492" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="492" pos:column="37">io_time<pos:position pos:line="492" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="492" pos:column="46">weighted_time<pos:position pos:line="492" pos:column="59"/></name></expr></argument>)<pos:position pos:line="492" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="492" pos:column="61"/></expr_stmt></block></then></if>
    }<pos:position pos:line="493" pos:column="6"/></block></then></if> <comment type="block" pos:line="493" pos:column="7">/* if (is_disk) */</comment>

<cpp:if pos:line="495" pos:column="1">#<cpp:directive pos:line="495" pos:column="2">if<pos:position pos:line="495" pos:column="4"/></cpp:directive> <expr><name pos:line="495" pos:column="5">HAVE_LIBUDEV<pos:position pos:line="495" pos:column="17"/></name></expr></cpp:if>
    <comment type="block" pos:line="496" pos:column="5">/* release udev-based alternate name, if allocated */</comment>
    <expr_stmt><expr><call><name pos:line="497" pos:column="5">sfree<pos:position pos:line="497" pos:column="10"/></name><argument_list pos:line="497" pos:column="10">(<argument><expr><name pos:line="497" pos:column="11">alt_name<pos:position pos:line="497" pos:column="19"/></name></expr></argument>)<pos:position pos:line="497" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="497" pos:column="21"/></expr_stmt>
<cpp:endif pos:line="498" pos:column="1">#<cpp:directive pos:line="498" pos:column="2">endif<pos:position pos:line="498" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="499" pos:column="4"/></block></while> <comment type="block" pos:line="499" pos:column="5">/* while (fgets (buffer, sizeof (buffer), fh) != NULL) */</comment>

  <expr_stmt><expr><call><name pos:line="501" pos:column="3">fclose<pos:position pos:line="501" pos:column="9"/></name><argument_list pos:line="501" pos:column="9">(<argument><expr><name pos:line="501" pos:column="10">fh<pos:position pos:line="501" pos:column="12"/></name></expr></argument>)<pos:position pos:line="501" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="501" pos:column="14"/></expr_stmt>
<comment type="block" pos:line="502" pos:column="1">/* #endif defined(KERNEL_LINUX) */</comment>

<cpp:elif pos:line="504" pos:column="1">#<cpp:directive pos:line="504" pos:column="2">elif<pos:position pos:line="504" pos:column="6"/></cpp:directive> <expr><name pos:line="504" pos:column="7">HAVE_LIBKSTAT<pos:position pos:line="504" pos:column="20"/></name></expr></cpp:elif>
<cpp:if pos:line="505" pos:column="1">#<cpp:directive pos:line="505" pos:column="2">if<pos:position pos:line="505" pos:column="4"/></cpp:directive> <expr><name pos:line="505" pos:column="5">HAVE_KSTAT_IO_T_WRITES<pos:position pos:line="505" pos:column="27"/></name> <operator pos:line="505" pos:column="28">&amp;&amp;<pos:position pos:line="505" pos:column="38"/></operator> <name pos:line="505" pos:column="31">HAVE_KSTAT_IO_T_NWRITES<pos:position pos:line="505" pos:column="54"/></name> <operator pos:line="505" pos:column="55">&amp;&amp;<pos:position pos:line="505" pos:column="65"/></operator> <name pos:line="505" pos:column="58">HAVE_KSTAT_IO_T_WTIME<pos:position pos:line="505" pos:column="79"/></name></expr></cpp:if>
<cpp:define pos:line="506" pos:column="1">#<cpp:directive pos:line="506" pos:column="2">define<pos:position pos:line="506" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="506" pos:column="9">KIO_ROCTETS<pos:position pos:line="506" pos:column="20"/></name></cpp:macro> <cpp:value pos:line="506" pos:column="21">reads<pos:position pos:line="506" pos:column="26"/></cpp:value></cpp:define>
<cpp:define pos:line="507" pos:column="1">#<cpp:directive pos:line="507" pos:column="2">define<pos:position pos:line="507" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="507" pos:column="9">KIO_WOCTETS<pos:position pos:line="507" pos:column="20"/></name></cpp:macro> <cpp:value pos:line="507" pos:column="21">writes<pos:position pos:line="507" pos:column="27"/></cpp:value></cpp:define>
<cpp:define pos:line="508" pos:column="1">#<cpp:directive pos:line="508" pos:column="2">define<pos:position pos:line="508" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="508" pos:column="9">KIO_ROPS<pos:position pos:line="508" pos:column="17"/></name></cpp:macro> <cpp:value pos:line="508" pos:column="18">nreads<pos:position pos:line="508" pos:column="24"/></cpp:value></cpp:define>
<cpp:define pos:line="509" pos:column="1">#<cpp:directive pos:line="509" pos:column="2">define<pos:position pos:line="509" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="509" pos:column="9">KIO_WOPS<pos:position pos:line="509" pos:column="17"/></name></cpp:macro> <cpp:value pos:line="509" pos:column="18">nwrites<pos:position pos:line="509" pos:column="25"/></cpp:value></cpp:define>
<cpp:define pos:line="510" pos:column="1">#<cpp:directive pos:line="510" pos:column="2">define<pos:position pos:line="510" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="510" pos:column="9">KIO_RTIME<pos:position pos:line="510" pos:column="18"/></name></cpp:macro> <cpp:value pos:line="510" pos:column="19">rtime<pos:position pos:line="510" pos:column="24"/></cpp:value></cpp:define>
<cpp:define pos:line="511" pos:column="1">#<cpp:directive pos:line="511" pos:column="2">define<pos:position pos:line="511" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="511" pos:column="9">KIO_WTIME<pos:position pos:line="511" pos:column="18"/></name></cpp:macro> <cpp:value pos:line="511" pos:column="19">wtime<pos:position pos:line="511" pos:column="24"/></cpp:value></cpp:define>
<cpp:elif pos:line="512" pos:column="1">#<cpp:directive pos:line="512" pos:column="2">elif<pos:position pos:line="512" pos:column="6"/></cpp:directive> <expr><name pos:line="512" pos:column="7">HAVE_KSTAT_IO_T_NWRITTEN<pos:position pos:line="512" pos:column="31"/></name> <operator pos:line="512" pos:column="32">&amp;&amp;<pos:position pos:line="512" pos:column="42"/></operator> <name pos:line="512" pos:column="35">HAVE_KSTAT_IO_T_WRITES<pos:position pos:line="512" pos:column="57"/></name> <operator pos:line="512" pos:column="58">&amp;&amp;<pos:position pos:line="512" pos:column="68"/></operator>                    \
    <name pos:line="513" pos:column="5">HAVE_KSTAT_IO_T_WTIME<pos:position pos:line="513" pos:column="26"/></name></expr></cpp:elif>
<cpp:define pos:line="514" pos:column="1">#<cpp:directive pos:line="514" pos:column="2">define<pos:position pos:line="514" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="514" pos:column="9">KIO_ROCTETS<pos:position pos:line="514" pos:column="20"/></name></cpp:macro> <cpp:value pos:line="514" pos:column="21">nread<pos:position pos:line="514" pos:column="26"/></cpp:value></cpp:define>
<cpp:define pos:line="515" pos:column="1">#<cpp:directive pos:line="515" pos:column="2">define<pos:position pos:line="515" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="515" pos:column="9">KIO_WOCTETS<pos:position pos:line="515" pos:column="20"/></name></cpp:macro> <cpp:value pos:line="515" pos:column="21">nwritten<pos:position pos:line="515" pos:column="29"/></cpp:value></cpp:define>
<cpp:define pos:line="516" pos:column="1">#<cpp:directive pos:line="516" pos:column="2">define<pos:position pos:line="516" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="516" pos:column="9">KIO_ROPS<pos:position pos:line="516" pos:column="17"/></name></cpp:macro> <cpp:value pos:line="516" pos:column="18">reads<pos:position pos:line="516" pos:column="23"/></cpp:value></cpp:define>
<cpp:define pos:line="517" pos:column="1">#<cpp:directive pos:line="517" pos:column="2">define<pos:position pos:line="517" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="517" pos:column="9">KIO_WOPS<pos:position pos:line="517" pos:column="17"/></name></cpp:macro> <cpp:value pos:line="517" pos:column="18">writes<pos:position pos:line="517" pos:column="24"/></cpp:value></cpp:define>
<cpp:define pos:line="518" pos:column="1">#<cpp:directive pos:line="518" pos:column="2">define<pos:position pos:line="518" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="518" pos:column="9">KIO_RTIME<pos:position pos:line="518" pos:column="18"/></name></cpp:macro> <cpp:value pos:line="518" pos:column="19">rtime<pos:position pos:line="518" pos:column="24"/></cpp:value></cpp:define>
<cpp:define pos:line="519" pos:column="1">#<cpp:directive pos:line="519" pos:column="2">define<pos:position pos:line="519" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="519" pos:column="9">KIO_WTIME<pos:position pos:line="519" pos:column="18"/></name></cpp:macro> <cpp:value pos:line="519" pos:column="19">wtime<pos:position pos:line="519" pos:column="24"/></cpp:value></cpp:define>
<cpp:else pos:line="520" pos:column="1">#<cpp:directive pos:line="520" pos:column="2">else<pos:position pos:line="520" pos:column="6"/></cpp:directive></cpp:else>
<cpp:error pos:line="521" pos:column="1">#<cpp:directive pos:line="521" pos:column="2">error<pos:position pos:line="521" pos:column="7"/></cpp:directive> <cpp:literal pos:line="521" pos:column="8">"kstat_io_t does not have the required members"<pos:position pos:line="521" pos:column="55"/></cpp:literal></cpp:error>
<cpp:endif pos:line="522" pos:column="1">#<cpp:directive pos:line="522" pos:column="2">endif<pos:position pos:line="522" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><specifier pos:line="523" pos:column="3">static<pos:position pos:line="523" pos:column="9"/></specifier> <type><name pos:line="523" pos:column="10">kstat_io_t<pos:position pos:line="523" pos:column="20"/></name></type> <name pos:line="523" pos:column="21">kio<pos:position pos:line="523" pos:column="24"/></name></decl>;<pos:position pos:line="523" pos:column="25"/></decl_stmt>

  <if pos:line="525" pos:column="3">if <condition pos:line="525" pos:column="6">(<expr><name pos:line="525" pos:column="7">kc<pos:position pos:line="525" pos:column="9"/></name> <operator pos:line="525" pos:column="10">==<pos:position pos:line="525" pos:column="12"/></operator> <name pos:line="525" pos:column="13">NULL<pos:position pos:line="525" pos:column="17"/></name></expr>)<pos:position pos:line="525" pos:column="18"/></condition><then pos:line="525" pos:column="18">
    <block type="pseudo"><return pos:line="526" pos:column="5">return <expr><operator pos:line="526" pos:column="12">(<pos:position pos:line="526" pos:column="13"/></operator><operator pos:line="526" pos:column="13">-<pos:position pos:line="526" pos:column="14"/></operator><literal type="number" pos:line="526" pos:column="14">1<pos:position pos:line="526" pos:column="15"/></literal><operator pos:line="526" pos:column="15">)<pos:position pos:line="526" pos:column="16"/></operator></expr>;<pos:position pos:line="526" pos:column="17"/></return></block></then></if>

  <for pos:line="528" pos:column="3">for <control pos:line="528" pos:column="7">(<init><decl><type><name pos:line="528" pos:column="8">int<pos:position pos:line="528" pos:column="11"/></name></type> <name pos:line="528" pos:column="12">i<pos:position pos:line="528" pos:column="13"/></name> <init pos:line="528" pos:column="14">= <expr><literal type="number" pos:line="528" pos:column="16">0<pos:position pos:line="528" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="528" pos:column="18"/></init> <condition><expr><name pos:line="528" pos:column="19">i<pos:position pos:line="528" pos:column="20"/></name> <operator pos:line="528" pos:column="21">&lt;<pos:position pos:line="528" pos:column="25"/></operator> <name pos:line="528" pos:column="23">numdisk<pos:position pos:line="528" pos:column="30"/></name></expr>;<pos:position pos:line="528" pos:column="31"/></condition> <incr><expr><name pos:line="528" pos:column="32">i<pos:position pos:line="528" pos:column="33"/></name><operator pos:line="528" pos:column="33">++<pos:position pos:line="528" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="528" pos:column="36"/></control> <block pos:line="528" pos:column="37">{
    <if pos:line="529" pos:column="5">if <condition pos:line="529" pos:column="8">(<expr><call><name pos:line="529" pos:column="9">kstat_read<pos:position pos:line="529" pos:column="19"/></name><argument_list pos:line="529" pos:column="19">(<argument><expr><name pos:line="529" pos:column="20">kc<pos:position pos:line="529" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="529" pos:column="24">ksp<pos:position pos:line="529" pos:column="27"/></name><index pos:line="529" pos:column="27">[<expr><name pos:line="529" pos:column="28">i<pos:position pos:line="529" pos:column="29"/></name></expr>]<pos:position pos:line="529" pos:column="30"/></index></name></expr></argument>, <argument><expr><operator pos:line="529" pos:column="32">&amp;<pos:position pos:line="529" pos:column="37"/></operator><name pos:line="529" pos:column="33">kio<pos:position pos:line="529" pos:column="36"/></name></expr></argument>)<pos:position pos:line="529" pos:column="37"/></argument_list></call> <operator pos:line="529" pos:column="38">==<pos:position pos:line="529" pos:column="40"/></operator> <operator pos:line="529" pos:column="41">-<pos:position pos:line="529" pos:column="42"/></operator><literal type="number" pos:line="529" pos:column="42">1<pos:position pos:line="529" pos:column="43"/></literal></expr>)<pos:position pos:line="529" pos:column="44"/></condition><then pos:line="529" pos:column="44">
      <block type="pseudo"><continue pos:line="530" pos:column="7">continue;<pos:position pos:line="530" pos:column="16"/></continue></block></then></if>

    <if pos:line="532" pos:column="5">if <condition pos:line="532" pos:column="8">(<expr><call><name pos:line="532" pos:column="9">strncmp<pos:position pos:line="532" pos:column="16"/></name><argument_list pos:line="532" pos:column="16">(<argument><expr><name><name pos:line="532" pos:column="17">ksp<pos:position pos:line="532" pos:column="20"/></name><index pos:line="532" pos:column="20">[<expr><name pos:line="532" pos:column="21">i<pos:position pos:line="532" pos:column="22"/></name></expr>]<pos:position pos:line="532" pos:column="23"/></index></name><operator pos:line="532" pos:column="23">-&gt;<pos:position pos:line="532" pos:column="28"/></operator><name pos:line="532" pos:column="25">ks_class<pos:position pos:line="532" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="532" pos:column="35">"disk"<pos:position pos:line="532" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="532" pos:column="43">4<pos:position pos:line="532" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="532" pos:column="45"/></argument_list></call> <operator pos:line="532" pos:column="46">==<pos:position pos:line="532" pos:column="48"/></operator> <literal type="number" pos:line="532" pos:column="49">0<pos:position pos:line="532" pos:column="50"/></literal></expr>)<pos:position pos:line="532" pos:column="51"/></condition><then pos:line="532" pos:column="51"> <block pos:line="532" pos:column="52">{
      <if pos:line="533" pos:column="7">if <condition pos:line="533" pos:column="10">(<expr><call><name pos:line="533" pos:column="11">ignorelist_match<pos:position pos:line="533" pos:column="27"/></name><argument_list pos:line="533" pos:column="27">(<argument><expr><name pos:line="533" pos:column="28">ignorelist<pos:position pos:line="533" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="533" pos:column="40">ksp<pos:position pos:line="533" pos:column="43"/></name><index pos:line="533" pos:column="43">[<expr><name pos:line="533" pos:column="44">i<pos:position pos:line="533" pos:column="45"/></name></expr>]<pos:position pos:line="533" pos:column="46"/></index></name><operator pos:line="533" pos:column="46">-&gt;<pos:position pos:line="533" pos:column="51"/></operator><name pos:line="533" pos:column="48">ks_name<pos:position pos:line="533" pos:column="55"/></name></expr></argument>)<pos:position pos:line="533" pos:column="56"/></argument_list></call> <operator pos:line="533" pos:column="57">!=<pos:position pos:line="533" pos:column="59"/></operator> <literal type="number" pos:line="533" pos:column="60">0<pos:position pos:line="533" pos:column="61"/></literal></expr>)<pos:position pos:line="533" pos:column="62"/></condition><then pos:line="533" pos:column="62">
        <block type="pseudo"><continue pos:line="534" pos:column="9">continue;<pos:position pos:line="534" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><call><name pos:line="536" pos:column="7">disk_submit<pos:position pos:line="536" pos:column="18"/></name><argument_list pos:line="536" pos:column="18">(<argument><expr><name><name pos:line="536" pos:column="19">ksp<pos:position pos:line="536" pos:column="22"/></name><index pos:line="536" pos:column="22">[<expr><name pos:line="536" pos:column="23">i<pos:position pos:line="536" pos:column="24"/></name></expr>]<pos:position pos:line="536" pos:column="25"/></index></name><operator pos:line="536" pos:column="25">-&gt;<pos:position pos:line="536" pos:column="30"/></operator><name pos:line="536" pos:column="27">ks_name<pos:position pos:line="536" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="536" pos:column="36">"disk_octets"<pos:position pos:line="536" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="536" pos:column="51">kio<pos:position pos:line="536" pos:column="54"/></name><operator pos:line="536" pos:column="54">.<pos:position pos:line="536" pos:column="55"/></operator><name pos:line="536" pos:column="55">KIO_ROCTETS<pos:position pos:line="536" pos:column="66"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="537" pos:column="19">kio<pos:position pos:line="537" pos:column="22"/></name><operator pos:line="537" pos:column="22">.<pos:position pos:line="537" pos:column="23"/></operator><name pos:line="537" pos:column="23">KIO_WOCTETS<pos:position pos:line="537" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="537" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="537" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="538" pos:column="7">disk_submit<pos:position pos:line="538" pos:column="18"/></name><argument_list pos:line="538" pos:column="18">(<argument><expr><name><name pos:line="538" pos:column="19">ksp<pos:position pos:line="538" pos:column="22"/></name><index pos:line="538" pos:column="22">[<expr><name pos:line="538" pos:column="23">i<pos:position pos:line="538" pos:column="24"/></name></expr>]<pos:position pos:line="538" pos:column="25"/></index></name><operator pos:line="538" pos:column="25">-&gt;<pos:position pos:line="538" pos:column="30"/></operator><name pos:line="538" pos:column="27">ks_name<pos:position pos:line="538" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="538" pos:column="36">"disk_ops"<pos:position pos:line="538" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="538" pos:column="48">kio<pos:position pos:line="538" pos:column="51"/></name><operator pos:line="538" pos:column="51">.<pos:position pos:line="538" pos:column="52"/></operator><name pos:line="538" pos:column="52">KIO_ROPS<pos:position pos:line="538" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="538" pos:column="62">kio<pos:position pos:line="538" pos:column="65"/></name><operator pos:line="538" pos:column="65">.<pos:position pos:line="538" pos:column="66"/></operator><name pos:line="538" pos:column="66">KIO_WOPS<pos:position pos:line="538" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="538" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="538" pos:column="76"/></expr_stmt>
      <comment type="block" pos:line="539" pos:column="7">/* FIXME: Convert this to microseconds if necessary */</comment>
      <expr_stmt><expr><call><name pos:line="540" pos:column="7">disk_submit<pos:position pos:line="540" pos:column="18"/></name><argument_list pos:line="540" pos:column="18">(<argument><expr><name><name pos:line="540" pos:column="19">ksp<pos:position pos:line="540" pos:column="22"/></name><index pos:line="540" pos:column="22">[<expr><name pos:line="540" pos:column="23">i<pos:position pos:line="540" pos:column="24"/></name></expr>]<pos:position pos:line="540" pos:column="25"/></index></name><operator pos:line="540" pos:column="25">-&gt;<pos:position pos:line="540" pos:column="30"/></operator><name pos:line="540" pos:column="27">ks_name<pos:position pos:line="540" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="540" pos:column="36">"disk_time"<pos:position pos:line="540" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="540" pos:column="49">kio<pos:position pos:line="540" pos:column="52"/></name><operator pos:line="540" pos:column="52">.<pos:position pos:line="540" pos:column="53"/></operator><name pos:line="540" pos:column="53">KIO_RTIME<pos:position pos:line="540" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="540" pos:column="64">kio<pos:position pos:line="540" pos:column="67"/></name><operator pos:line="540" pos:column="67">.<pos:position pos:line="540" pos:column="68"/></operator><name pos:line="540" pos:column="68">KIO_WTIME<pos:position pos:line="540" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="540" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="540" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="541" pos:column="6"/></block></then> <elseif pos:line="541" pos:column="7">else <if pos:line="541" pos:column="12">if <condition pos:line="541" pos:column="15">(<expr><call><name pos:line="541" pos:column="16">strncmp<pos:position pos:line="541" pos:column="23"/></name><argument_list pos:line="541" pos:column="23">(<argument><expr><name><name pos:line="541" pos:column="24">ksp<pos:position pos:line="541" pos:column="27"/></name><index pos:line="541" pos:column="27">[<expr><name pos:line="541" pos:column="28">i<pos:position pos:line="541" pos:column="29"/></name></expr>]<pos:position pos:line="541" pos:column="30"/></index></name><operator pos:line="541" pos:column="30">-&gt;<pos:position pos:line="541" pos:column="35"/></operator><name pos:line="541" pos:column="32">ks_class<pos:position pos:line="541" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="541" pos:column="42">"partition"<pos:position pos:line="541" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="541" pos:column="55">9<pos:position pos:line="541" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="541" pos:column="57"/></argument_list></call> <operator pos:line="541" pos:column="58">==<pos:position pos:line="541" pos:column="60"/></operator> <literal type="number" pos:line="541" pos:column="61">0<pos:position pos:line="541" pos:column="62"/></literal></expr>)<pos:position pos:line="541" pos:column="63"/></condition><then pos:line="541" pos:column="63"> <block pos:line="541" pos:column="64">{
      <if pos:line="542" pos:column="7">if <condition pos:line="542" pos:column="10">(<expr><call><name pos:line="542" pos:column="11">ignorelist_match<pos:position pos:line="542" pos:column="27"/></name><argument_list pos:line="542" pos:column="27">(<argument><expr><name pos:line="542" pos:column="28">ignorelist<pos:position pos:line="542" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="542" pos:column="40">ksp<pos:position pos:line="542" pos:column="43"/></name><index pos:line="542" pos:column="43">[<expr><name pos:line="542" pos:column="44">i<pos:position pos:line="542" pos:column="45"/></name></expr>]<pos:position pos:line="542" pos:column="46"/></index></name><operator pos:line="542" pos:column="46">-&gt;<pos:position pos:line="542" pos:column="51"/></operator><name pos:line="542" pos:column="48">ks_name<pos:position pos:line="542" pos:column="55"/></name></expr></argument>)<pos:position pos:line="542" pos:column="56"/></argument_list></call> <operator pos:line="542" pos:column="57">!=<pos:position pos:line="542" pos:column="59"/></operator> <literal type="number" pos:line="542" pos:column="60">0<pos:position pos:line="542" pos:column="61"/></literal></expr>)<pos:position pos:line="542" pos:column="62"/></condition><then pos:line="542" pos:column="62">
        <block type="pseudo"><continue pos:line="543" pos:column="9">continue;<pos:position pos:line="543" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><call><name pos:line="545" pos:column="7">disk_submit<pos:position pos:line="545" pos:column="18"/></name><argument_list pos:line="545" pos:column="18">(<argument><expr><name><name pos:line="545" pos:column="19">ksp<pos:position pos:line="545" pos:column="22"/></name><index pos:line="545" pos:column="22">[<expr><name pos:line="545" pos:column="23">i<pos:position pos:line="545" pos:column="24"/></name></expr>]<pos:position pos:line="545" pos:column="25"/></index></name><operator pos:line="545" pos:column="25">-&gt;<pos:position pos:line="545" pos:column="30"/></operator><name pos:line="545" pos:column="27">ks_name<pos:position pos:line="545" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="545" pos:column="36">"disk_octets"<pos:position pos:line="545" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="545" pos:column="51">kio<pos:position pos:line="545" pos:column="54"/></name><operator pos:line="545" pos:column="54">.<pos:position pos:line="545" pos:column="55"/></operator><name pos:line="545" pos:column="55">KIO_ROCTETS<pos:position pos:line="545" pos:column="66"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="546" pos:column="19">kio<pos:position pos:line="546" pos:column="22"/></name><operator pos:line="546" pos:column="22">.<pos:position pos:line="546" pos:column="23"/></operator><name pos:line="546" pos:column="23">KIO_WOCTETS<pos:position pos:line="546" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="546" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="546" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="547" pos:column="7">disk_submit<pos:position pos:line="547" pos:column="18"/></name><argument_list pos:line="547" pos:column="18">(<argument><expr><name><name pos:line="547" pos:column="19">ksp<pos:position pos:line="547" pos:column="22"/></name><index pos:line="547" pos:column="22">[<expr><name pos:line="547" pos:column="23">i<pos:position pos:line="547" pos:column="24"/></name></expr>]<pos:position pos:line="547" pos:column="25"/></index></name><operator pos:line="547" pos:column="25">-&gt;<pos:position pos:line="547" pos:column="30"/></operator><name pos:line="547" pos:column="27">ks_name<pos:position pos:line="547" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="547" pos:column="36">"disk_ops"<pos:position pos:line="547" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="547" pos:column="48">kio<pos:position pos:line="547" pos:column="51"/></name><operator pos:line="547" pos:column="51">.<pos:position pos:line="547" pos:column="52"/></operator><name pos:line="547" pos:column="52">KIO_ROPS<pos:position pos:line="547" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="547" pos:column="62">kio<pos:position pos:line="547" pos:column="65"/></name><operator pos:line="547" pos:column="65">.<pos:position pos:line="547" pos:column="66"/></operator><name pos:line="547" pos:column="66">KIO_WOPS<pos:position pos:line="547" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="547" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="547" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="548" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="549" pos:column="4"/></block></for>
<comment type="block" pos:line="550" pos:column="1">/* #endif defined(HAVE_LIBKSTAT) */</comment>

<cpp:elif pos:line="552" pos:column="1">#<cpp:directive pos:line="552" pos:column="2">elif<pos:position pos:line="552" pos:column="6"/></cpp:directive> <expr><call><name pos:line="552" pos:column="7">defined<pos:position pos:line="552" pos:column="14"/></name><argument_list pos:line="552" pos:column="14">(<argument><expr><name pos:line="552" pos:column="15">HAVE_LIBSTATGRAB<pos:position pos:line="552" pos:column="31"/></name></expr></argument>)<pos:position pos:line="552" pos:column="32"/></argument_list></call></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="553" pos:column="3">sg_disk_io_stats<pos:position pos:line="553" pos:column="19"/></name> <modifier pos:line="553" pos:column="20">*<pos:position pos:line="553" pos:column="21"/></modifier></type><name pos:line="553" pos:column="21">ds<pos:position pos:line="553" pos:column="23"/></name></decl>;<pos:position pos:line="553" pos:column="24"/></decl_stmt>
<cpp:if pos:line="554" pos:column="1">#<cpp:directive pos:line="554" pos:column="2">if<pos:position pos:line="554" pos:column="4"/></cpp:directive> <expr><name pos:line="554" pos:column="5">HAVE_LIBSTATGRAB_0_90<pos:position pos:line="554" pos:column="26"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="555" pos:column="3">size_t<pos:position pos:line="555" pos:column="9"/></name></type> <name pos:line="555" pos:column="10">disks<pos:position pos:line="555" pos:column="15"/></name></decl>;<pos:position pos:line="555" pos:column="16"/></decl_stmt>
<cpp:else pos:line="556" pos:column="1">#<cpp:directive pos:line="556" pos:column="2">else<pos:position pos:line="556" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name pos:line="557" pos:column="3">int<pos:position pos:line="557" pos:column="6"/></name></type> <name pos:line="557" pos:column="7">disks<pos:position pos:line="557" pos:column="12"/></name></decl>;<pos:position pos:line="557" pos:column="13"/></decl_stmt>
<cpp:endif pos:line="558" pos:column="1">#<cpp:directive pos:line="558" pos:column="2">endif<pos:position pos:line="558" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="559" pos:column="3">char<pos:position pos:line="559" pos:column="7"/></name></type> <name><name pos:line="559" pos:column="8">name<pos:position pos:line="559" pos:column="12"/></name><index pos:line="559" pos:column="12">[<expr><name pos:line="559" pos:column="13">DATA_MAX_NAME_LEN<pos:position pos:line="559" pos:column="30"/></name></expr>]<pos:position pos:line="559" pos:column="31"/></index></name></decl>;<pos:position pos:line="559" pos:column="32"/></decl_stmt>

  <if pos:line="561" pos:column="3">if <condition pos:line="561" pos:column="6">(<expr><operator pos:line="561" pos:column="7">(<pos:position pos:line="561" pos:column="8"/></operator><name pos:line="561" pos:column="8">ds<pos:position pos:line="561" pos:column="10"/></name> <operator pos:line="561" pos:column="11">=<pos:position pos:line="561" pos:column="12"/></operator> <call><name pos:line="561" pos:column="13">sg_get_disk_io_stats<pos:position pos:line="561" pos:column="33"/></name><argument_list pos:line="561" pos:column="33">(<argument><expr><operator pos:line="561" pos:column="34">&amp;<pos:position pos:line="561" pos:column="39"/></operator><name pos:line="561" pos:column="35">disks<pos:position pos:line="561" pos:column="40"/></name></expr></argument>)<pos:position pos:line="561" pos:column="41"/></argument_list></call><operator pos:line="561" pos:column="41">)<pos:position pos:line="561" pos:column="42"/></operator> <operator pos:line="561" pos:column="43">==<pos:position pos:line="561" pos:column="45"/></operator> <name pos:line="561" pos:column="46">NULL<pos:position pos:line="561" pos:column="50"/></name></expr>)<pos:position pos:line="561" pos:column="51"/></condition><then pos:line="561" pos:column="51">
    <block type="pseudo"><return pos:line="562" pos:column="5">return <expr><operator pos:line="562" pos:column="12">(<pos:position pos:line="562" pos:column="13"/></operator><literal type="number" pos:line="562" pos:column="13">0<pos:position pos:line="562" pos:column="14"/></literal><operator pos:line="562" pos:column="14">)<pos:position pos:line="562" pos:column="15"/></operator></expr>;<pos:position pos:line="562" pos:column="16"/></return></block></then></if>

  <for pos:line="564" pos:column="3">for <control pos:line="564" pos:column="7">(<init><decl><type><name pos:line="564" pos:column="8">int<pos:position pos:line="564" pos:column="11"/></name></type> <name pos:line="564" pos:column="12">counter<pos:position pos:line="564" pos:column="19"/></name> <init pos:line="564" pos:column="20">= <expr><literal type="number" pos:line="564" pos:column="22">0<pos:position pos:line="564" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="564" pos:column="24"/></init> <condition><expr><name pos:line="564" pos:column="25">counter<pos:position pos:line="564" pos:column="32"/></name> <operator pos:line="564" pos:column="33">&lt;<pos:position pos:line="564" pos:column="37"/></operator> <name pos:line="564" pos:column="35">disks<pos:position pos:line="564" pos:column="40"/></name></expr>;<pos:position pos:line="564" pos:column="41"/></condition> <incr><expr><name pos:line="564" pos:column="42">counter<pos:position pos:line="564" pos:column="49"/></name><operator pos:line="564" pos:column="49">++<pos:position pos:line="564" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="564" pos:column="52"/></control> <block pos:line="564" pos:column="53">{
    <expr_stmt><expr><call><name pos:line="565" pos:column="5">strncpy<pos:position pos:line="565" pos:column="12"/></name><argument_list pos:line="565" pos:column="12">(<argument><expr><name pos:line="565" pos:column="13">name<pos:position pos:line="565" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="565" pos:column="19">ds<pos:position pos:line="565" pos:column="21"/></name><operator pos:line="565" pos:column="21">-&gt;<pos:position pos:line="565" pos:column="26"/></operator><name pos:line="565" pos:column="23">disk_name<pos:position pos:line="565" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="565" pos:column="34">sizeof<argument_list pos:line="565" pos:column="40">(<argument><expr><name pos:line="565" pos:column="41">name<pos:position pos:line="565" pos:column="45"/></name></expr></argument>)<pos:position pos:line="565" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="565" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="565" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="566" pos:column="5">name<pos:position pos:line="566" pos:column="9"/></name><index pos:line="566" pos:column="9">[<expr><sizeof pos:line="566" pos:column="10">sizeof<argument_list pos:line="566" pos:column="16">(<argument><expr><name pos:line="566" pos:column="17">name<pos:position pos:line="566" pos:column="21"/></name></expr></argument>)<pos:position pos:line="566" pos:column="22"/></argument_list></sizeof> <operator pos:line="566" pos:column="23">-<pos:position pos:line="566" pos:column="24"/></operator> <literal type="number" pos:line="566" pos:column="25">1<pos:position pos:line="566" pos:column="26"/></literal></expr>]<pos:position pos:line="566" pos:column="27"/></index></name> <operator pos:line="566" pos:column="28">=<pos:position pos:line="566" pos:column="29"/></operator>
        <literal type="char" pos:line="567" pos:column="9">'\0'<pos:position pos:line="567" pos:column="13"/></literal></expr>;<pos:position pos:line="567" pos:column="14"/></expr_stmt> <comment type="block" pos:line="567" pos:column="15">/* strncpy doesn't terminate longer strings */</comment>

    <if pos:line="569" pos:column="5">if <condition pos:line="569" pos:column="8">(<expr><call><name pos:line="569" pos:column="9">ignorelist_match<pos:position pos:line="569" pos:column="25"/></name><argument_list pos:line="569" pos:column="25">(<argument><expr><name pos:line="569" pos:column="26">ignorelist<pos:position pos:line="569" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="569" pos:column="38">name<pos:position pos:line="569" pos:column="42"/></name></expr></argument>)<pos:position pos:line="569" pos:column="43"/></argument_list></call> <operator pos:line="569" pos:column="44">!=<pos:position pos:line="569" pos:column="46"/></operator> <literal type="number" pos:line="569" pos:column="47">0<pos:position pos:line="569" pos:column="48"/></literal></expr>)<pos:position pos:line="569" pos:column="49"/></condition><then pos:line="569" pos:column="49"> <block pos:line="569" pos:column="50">{
      <expr_stmt><expr><name pos:line="570" pos:column="7">ds<pos:position pos:line="570" pos:column="9"/></name><operator pos:line="570" pos:column="9">++<pos:position pos:line="570" pos:column="11"/></operator></expr>;<pos:position pos:line="570" pos:column="12"/></expr_stmt>
      <continue pos:line="571" pos:column="7">continue;<pos:position pos:line="571" pos:column="16"/></continue>
    }<pos:position pos:line="572" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="574" pos:column="5">disk_submit<pos:position pos:line="574" pos:column="16"/></name><argument_list pos:line="574" pos:column="16">(<argument><expr><name pos:line="574" pos:column="17">name<pos:position pos:line="574" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="574" pos:column="23">"disk_octets"<pos:position pos:line="574" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="574" pos:column="38">ds<pos:position pos:line="574" pos:column="40"/></name><operator pos:line="574" pos:column="40">-&gt;<pos:position pos:line="574" pos:column="45"/></operator><name pos:line="574" pos:column="42">read_bytes<pos:position pos:line="574" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="574" pos:column="54">ds<pos:position pos:line="574" pos:column="56"/></name><operator pos:line="574" pos:column="56">-&gt;<pos:position pos:line="574" pos:column="61"/></operator><name pos:line="574" pos:column="58">write_bytes<pos:position pos:line="574" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="574" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="574" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><name pos:line="575" pos:column="5">ds<pos:position pos:line="575" pos:column="7"/></name><operator pos:line="575" pos:column="7">++<pos:position pos:line="575" pos:column="9"/></operator></expr>;<pos:position pos:line="575" pos:column="10"/></expr_stmt>
  }<pos:position pos:line="576" pos:column="4"/></block></for>
<comment type="block" pos:line="577" pos:column="1">/* #endif defined(HAVE_LIBSTATGRAB) */</comment>

<cpp:elif pos:line="579" pos:column="1">#<cpp:directive pos:line="579" pos:column="2">elif<pos:position pos:line="579" pos:column="6"/></cpp:directive> <expr><call><name pos:line="579" pos:column="7">defined<pos:position pos:line="579" pos:column="14"/></name><argument_list pos:line="579" pos:column="14">(<argument><expr><name pos:line="579" pos:column="15">HAVE_PERFSTAT<pos:position pos:line="579" pos:column="28"/></name></expr></argument>)<pos:position pos:line="579" pos:column="29"/></argument_list></call></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="580" pos:column="3">derive_t<pos:position pos:line="580" pos:column="11"/></name></type> <name pos:line="580" pos:column="12">read_sectors<pos:position pos:line="580" pos:column="24"/></name></decl>;<pos:position pos:line="580" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="581" pos:column="3">derive_t<pos:position pos:line="581" pos:column="11"/></name></type> <name pos:line="581" pos:column="12">write_sectors<pos:position pos:line="581" pos:column="25"/></name></decl>;<pos:position pos:line="581" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="582" pos:column="3">derive_t<pos:position pos:line="582" pos:column="11"/></name></type> <name pos:line="582" pos:column="12">read_time<pos:position pos:line="582" pos:column="21"/></name></decl>;<pos:position pos:line="582" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="583" pos:column="3">derive_t<pos:position pos:line="583" pos:column="11"/></name></type> <name pos:line="583" pos:column="12">write_time<pos:position pos:line="583" pos:column="22"/></name></decl>;<pos:position pos:line="583" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="584" pos:column="3">derive_t<pos:position pos:line="584" pos:column="11"/></name></type> <name pos:line="584" pos:column="12">read_ops<pos:position pos:line="584" pos:column="20"/></name></decl>;<pos:position pos:line="584" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="585" pos:column="3">derive_t<pos:position pos:line="585" pos:column="11"/></name></type> <name pos:line="585" pos:column="12">write_ops<pos:position pos:line="585" pos:column="21"/></name></decl>;<pos:position pos:line="585" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="586" pos:column="3">perfstat_id_t<pos:position pos:line="586" pos:column="16"/></name></type> <name pos:line="586" pos:column="17">firstpath<pos:position pos:line="586" pos:column="26"/></name></decl>;<pos:position pos:line="586" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="587" pos:column="3">int<pos:position pos:line="587" pos:column="6"/></name></type> <name pos:line="587" pos:column="7">rnumdisk<pos:position pos:line="587" pos:column="15"/></name></decl>;<pos:position pos:line="587" pos:column="16"/></decl_stmt>

  <if pos:line="589" pos:column="3">if <condition pos:line="589" pos:column="6">(<expr><operator pos:line="589" pos:column="7">(<pos:position pos:line="589" pos:column="8"/></operator><name pos:line="589" pos:column="8">numdisk<pos:position pos:line="589" pos:column="15"/></name> <operator pos:line="589" pos:column="16">=<pos:position pos:line="589" pos:column="17"/></operator> <call><name pos:line="589" pos:column="18">perfstat_disk<pos:position pos:line="589" pos:column="31"/></name><argument_list pos:line="589" pos:column="31">(<argument><expr><name pos:line="589" pos:column="32">NULL<pos:position pos:line="589" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="589" pos:column="38">NULL<pos:position pos:line="589" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="589" pos:column="44">sizeof<argument_list pos:line="589" pos:column="50">(<argument><expr><name pos:line="589" pos:column="51">perfstat_disk_t<pos:position pos:line="589" pos:column="66"/></name></expr></argument>)<pos:position pos:line="589" pos:column="67"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="589" pos:column="69">0<pos:position pos:line="589" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="589" pos:column="71"/></argument_list></call><operator pos:line="589" pos:column="71">)<pos:position pos:line="589" pos:column="72"/></operator> <operator pos:line="589" pos:column="73">&lt;<pos:position pos:line="589" pos:column="77"/></operator> <literal type="number" pos:line="589" pos:column="75">0<pos:position pos:line="589" pos:column="76"/></literal></expr>)<pos:position pos:line="589" pos:column="77"/></condition><then pos:line="589" pos:column="77"> <block pos:line="589" pos:column="78">{
    <decl_stmt><decl><type><name pos:line="590" pos:column="5">char<pos:position pos:line="590" pos:column="9"/></name></type> <name><name pos:line="590" pos:column="10">errbuf<pos:position pos:line="590" pos:column="16"/></name><index pos:line="590" pos:column="16">[<expr><literal type="number" pos:line="590" pos:column="17">1024<pos:position pos:line="590" pos:column="21"/></literal></expr>]<pos:position pos:line="590" pos:column="22"/></index></name></decl>;<pos:position pos:line="590" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="591" pos:column="5">WARNING<pos:position pos:line="591" pos:column="12"/></name><argument_list pos:line="591" pos:column="12">(<argument><expr><literal type="string" pos:line="591" pos:column="13">"disk plugin: perfstat_disk: %s"<pos:position pos:line="591" pos:column="45"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="592" pos:column="13">sstrerror<pos:position pos:line="592" pos:column="22"/></name><argument_list pos:line="592" pos:column="22">(<argument><expr><name pos:line="592" pos:column="23">errno<pos:position pos:line="592" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="592" pos:column="30">errbuf<pos:position pos:line="592" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="592" pos:column="38">sizeof<argument_list pos:line="592" pos:column="44">(<argument><expr><name pos:line="592" pos:column="45">errbuf<pos:position pos:line="592" pos:column="51"/></name></expr></argument>)<pos:position pos:line="592" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="592" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="592" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="592" pos:column="55"/></expr_stmt>
    <return pos:line="593" pos:column="5">return <expr><operator pos:line="593" pos:column="12">(<pos:position pos:line="593" pos:column="13"/></operator><operator pos:line="593" pos:column="13">-<pos:position pos:line="593" pos:column="14"/></operator><literal type="number" pos:line="593" pos:column="14">1<pos:position pos:line="593" pos:column="15"/></literal><operator pos:line="593" pos:column="15">)<pos:position pos:line="593" pos:column="16"/></operator></expr>;<pos:position pos:line="593" pos:column="17"/></return>
  }<pos:position pos:line="594" pos:column="4"/></block></then></if>

  <if pos:line="596" pos:column="3">if <condition pos:line="596" pos:column="6">(<expr><name pos:line="596" pos:column="7">numdisk<pos:position pos:line="596" pos:column="14"/></name> <operator pos:line="596" pos:column="15">!=<pos:position pos:line="596" pos:column="17"/></operator> <name pos:line="596" pos:column="18">pnumdisk<pos:position pos:line="596" pos:column="26"/></name> <operator pos:line="596" pos:column="27">||<pos:position pos:line="596" pos:column="29"/></operator> <name pos:line="596" pos:column="30">stat_disk<pos:position pos:line="596" pos:column="39"/></name> <operator pos:line="596" pos:column="40">==<pos:position pos:line="596" pos:column="42"/></operator> <name pos:line="596" pos:column="43">NULL<pos:position pos:line="596" pos:column="47"/></name></expr>)<pos:position pos:line="596" pos:column="48"/></condition><then pos:line="596" pos:column="48"> <block pos:line="596" pos:column="49">{
    <if pos:line="597" pos:column="5">if <condition pos:line="597" pos:column="8">(<expr><name pos:line="597" pos:column="9">stat_disk<pos:position pos:line="597" pos:column="18"/></name> <operator pos:line="597" pos:column="19">!=<pos:position pos:line="597" pos:column="21"/></operator> <name pos:line="597" pos:column="22">NULL<pos:position pos:line="597" pos:column="26"/></name></expr>)<pos:position pos:line="597" pos:column="27"/></condition><then pos:line="597" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="598" pos:column="7">free<pos:position pos:line="598" pos:column="11"/></name><argument_list pos:line="598" pos:column="11">(<argument><expr><name pos:line="598" pos:column="12">stat_disk<pos:position pos:line="598" pos:column="21"/></name></expr></argument>)<pos:position pos:line="598" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="598" pos:column="23"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="599" pos:column="5">stat_disk<pos:position pos:line="599" pos:column="14"/></name> <operator pos:line="599" pos:column="15">=<pos:position pos:line="599" pos:column="16"/></operator> <operator pos:line="599" pos:column="17">(<pos:position pos:line="599" pos:column="18"/></operator><name pos:line="599" pos:column="18">perfstat_disk_t<pos:position pos:line="599" pos:column="33"/></name> <operator pos:line="599" pos:column="34">*<pos:position pos:line="599" pos:column="35"/></operator><operator pos:line="599" pos:column="35">)<pos:position pos:line="599" pos:column="36"/></operator><call><name pos:line="599" pos:column="36">calloc<pos:position pos:line="599" pos:column="42"/></name><argument_list pos:line="599" pos:column="42">(<argument><expr><name pos:line="599" pos:column="43">numdisk<pos:position pos:line="599" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="599" pos:column="52">sizeof<argument_list pos:line="599" pos:column="58">(<argument><expr><name pos:line="599" pos:column="59">perfstat_disk_t<pos:position pos:line="599" pos:column="74"/></name></expr></argument>)<pos:position pos:line="599" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="599" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="599" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="600" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="601" pos:column="3">pnumdisk<pos:position pos:line="601" pos:column="11"/></name> <operator pos:line="601" pos:column="12">=<pos:position pos:line="601" pos:column="13"/></operator> <name pos:line="601" pos:column="14">numdisk<pos:position pos:line="601" pos:column="21"/></name></expr>;<pos:position pos:line="601" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="603" pos:column="3">firstpath<pos:position pos:line="603" pos:column="12"/></name><operator pos:line="603" pos:column="12">.<pos:position pos:line="603" pos:column="13"/></operator><name pos:line="603" pos:column="13">name<pos:position pos:line="603" pos:column="17"/></name><index pos:line="603" pos:column="17">[<expr><literal type="number" pos:line="603" pos:column="18">0<pos:position pos:line="603" pos:column="19"/></literal></expr>]<pos:position pos:line="603" pos:column="20"/></index></name> <operator pos:line="603" pos:column="21">=<pos:position pos:line="603" pos:column="22"/></operator> <literal type="char" pos:line="603" pos:column="23">'\0'<pos:position pos:line="603" pos:column="27"/></literal></expr>;<pos:position pos:line="603" pos:column="28"/></expr_stmt>
  <if pos:line="604" pos:column="3">if <condition pos:line="604" pos:column="6">(<expr><operator pos:line="604" pos:column="7">(<pos:position pos:line="604" pos:column="8"/></operator><name pos:line="604" pos:column="8">rnumdisk<pos:position pos:line="604" pos:column="16"/></name> <operator pos:line="604" pos:column="17">=<pos:position pos:line="604" pos:column="18"/></operator> <call><name pos:line="604" pos:column="19">perfstat_disk<pos:position pos:line="604" pos:column="32"/></name><argument_list pos:line="604" pos:column="32">(<argument><expr><operator pos:line="604" pos:column="33">&amp;<pos:position pos:line="604" pos:column="38"/></operator><name pos:line="604" pos:column="34">firstpath<pos:position pos:line="604" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="604" pos:column="45">stat_disk<pos:position pos:line="604" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="604" pos:column="56">sizeof<argument_list pos:line="604" pos:column="62">(<argument><expr><name pos:line="604" pos:column="63">perfstat_disk_t<pos:position pos:line="604" pos:column="78"/></name></expr></argument>)<pos:position pos:line="604" pos:column="79"/></argument_list></sizeof></expr></argument>,
                                <argument><expr><name pos:line="605" pos:column="33">numdisk<pos:position pos:line="605" pos:column="40"/></name></expr></argument>)<pos:position pos:line="605" pos:column="41"/></argument_list></call><operator pos:line="605" pos:column="41">)<pos:position pos:line="605" pos:column="42"/></operator> <operator pos:line="605" pos:column="43">&lt;<pos:position pos:line="605" pos:column="47"/></operator> <literal type="number" pos:line="605" pos:column="45">0<pos:position pos:line="605" pos:column="46"/></literal></expr>)<pos:position pos:line="605" pos:column="47"/></condition><then pos:line="605" pos:column="47"> <block pos:line="605" pos:column="48">{
    <decl_stmt><decl><type><name pos:line="606" pos:column="5">char<pos:position pos:line="606" pos:column="9"/></name></type> <name><name pos:line="606" pos:column="10">errbuf<pos:position pos:line="606" pos:column="16"/></name><index pos:line="606" pos:column="16">[<expr><literal type="number" pos:line="606" pos:column="17">1024<pos:position pos:line="606" pos:column="21"/></literal></expr>]<pos:position pos:line="606" pos:column="22"/></index></name></decl>;<pos:position pos:line="606" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="607" pos:column="5">WARNING<pos:position pos:line="607" pos:column="12"/></name><argument_list pos:line="607" pos:column="12">(<argument><expr><literal type="string" pos:line="607" pos:column="13">"disk plugin: perfstat_disk : %s"<pos:position pos:line="607" pos:column="46"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="608" pos:column="13">sstrerror<pos:position pos:line="608" pos:column="22"/></name><argument_list pos:line="608" pos:column="22">(<argument><expr><name pos:line="608" pos:column="23">errno<pos:position pos:line="608" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="608" pos:column="30">errbuf<pos:position pos:line="608" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="608" pos:column="38">sizeof<argument_list pos:line="608" pos:column="44">(<argument><expr><name pos:line="608" pos:column="45">errbuf<pos:position pos:line="608" pos:column="51"/></name></expr></argument>)<pos:position pos:line="608" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="608" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="608" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="608" pos:column="55"/></expr_stmt>
    <return pos:line="609" pos:column="5">return <expr><operator pos:line="609" pos:column="12">(<pos:position pos:line="609" pos:column="13"/></operator><operator pos:line="609" pos:column="13">-<pos:position pos:line="609" pos:column="14"/></operator><literal type="number" pos:line="609" pos:column="14">1<pos:position pos:line="609" pos:column="15"/></literal><operator pos:line="609" pos:column="15">)<pos:position pos:line="609" pos:column="16"/></operator></expr>;<pos:position pos:line="609" pos:column="17"/></return>
  }<pos:position pos:line="610" pos:column="4"/></block></then></if>

  <for pos:line="612" pos:column="3">for <control pos:line="612" pos:column="7">(<init><decl><type><name pos:line="612" pos:column="8">int<pos:position pos:line="612" pos:column="11"/></name></type> <name pos:line="612" pos:column="12">i<pos:position pos:line="612" pos:column="13"/></name> <init pos:line="612" pos:column="14">= <expr><literal type="number" pos:line="612" pos:column="16">0<pos:position pos:line="612" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="612" pos:column="18"/></init> <condition><expr><name pos:line="612" pos:column="19">i<pos:position pos:line="612" pos:column="20"/></name> <operator pos:line="612" pos:column="21">&lt;<pos:position pos:line="612" pos:column="25"/></operator> <name pos:line="612" pos:column="23">rnumdisk<pos:position pos:line="612" pos:column="31"/></name></expr>;<pos:position pos:line="612" pos:column="32"/></condition> <incr><expr><name pos:line="612" pos:column="33">i<pos:position pos:line="612" pos:column="34"/></name><operator pos:line="612" pos:column="34">++<pos:position pos:line="612" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="612" pos:column="37"/></control> <block pos:line="612" pos:column="38">{
    <if pos:line="613" pos:column="5">if <condition pos:line="613" pos:column="8">(<expr><call><name pos:line="613" pos:column="9">ignorelist_match<pos:position pos:line="613" pos:column="25"/></name><argument_list pos:line="613" pos:column="25">(<argument><expr><name pos:line="613" pos:column="26">ignorelist<pos:position pos:line="613" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="613" pos:column="38">stat_disk<pos:position pos:line="613" pos:column="47"/></name><index pos:line="613" pos:column="47">[<expr><name pos:line="613" pos:column="48">i<pos:position pos:line="613" pos:column="49"/></name></expr>]<pos:position pos:line="613" pos:column="50"/></index></name><operator pos:line="613" pos:column="50">.<pos:position pos:line="613" pos:column="51"/></operator><name pos:line="613" pos:column="51">name<pos:position pos:line="613" pos:column="55"/></name></expr></argument>)<pos:position pos:line="613" pos:column="56"/></argument_list></call> <operator pos:line="613" pos:column="57">!=<pos:position pos:line="613" pos:column="59"/></operator> <literal type="number" pos:line="613" pos:column="60">0<pos:position pos:line="613" pos:column="61"/></literal></expr>)<pos:position pos:line="613" pos:column="62"/></condition><then pos:line="613" pos:column="62">
      <block type="pseudo"><continue pos:line="614" pos:column="7">continue;<pos:position pos:line="614" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="616" pos:column="5">read_sectors<pos:position pos:line="616" pos:column="17"/></name> <operator pos:line="616" pos:column="18">=<pos:position pos:line="616" pos:column="19"/></operator> <name><name pos:line="616" pos:column="20">stat_disk<pos:position pos:line="616" pos:column="29"/></name><index pos:line="616" pos:column="29">[<expr><name pos:line="616" pos:column="30">i<pos:position pos:line="616" pos:column="31"/></name></expr>]<pos:position pos:line="616" pos:column="32"/></index></name><operator pos:line="616" pos:column="32">.<pos:position pos:line="616" pos:column="33"/></operator><name pos:line="616" pos:column="33">rblks<pos:position pos:line="616" pos:column="38"/></name> <operator pos:line="616" pos:column="39">*<pos:position pos:line="616" pos:column="40"/></operator> <name><name pos:line="616" pos:column="41">stat_disk<pos:position pos:line="616" pos:column="50"/></name><index pos:line="616" pos:column="50">[<expr><name pos:line="616" pos:column="51">i<pos:position pos:line="616" pos:column="52"/></name></expr>]<pos:position pos:line="616" pos:column="53"/></index></name><operator pos:line="616" pos:column="53">.<pos:position pos:line="616" pos:column="54"/></operator><name pos:line="616" pos:column="54">bsize<pos:position pos:line="616" pos:column="59"/></name></expr>;<pos:position pos:line="616" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name pos:line="617" pos:column="5">write_sectors<pos:position pos:line="617" pos:column="18"/></name> <operator pos:line="617" pos:column="19">=<pos:position pos:line="617" pos:column="20"/></operator> <name><name pos:line="617" pos:column="21">stat_disk<pos:position pos:line="617" pos:column="30"/></name><index pos:line="617" pos:column="30">[<expr><name pos:line="617" pos:column="31">i<pos:position pos:line="617" pos:column="32"/></name></expr>]<pos:position pos:line="617" pos:column="33"/></index></name><operator pos:line="617" pos:column="33">.<pos:position pos:line="617" pos:column="34"/></operator><name pos:line="617" pos:column="34">wblks<pos:position pos:line="617" pos:column="39"/></name> <operator pos:line="617" pos:column="40">*<pos:position pos:line="617" pos:column="41"/></operator> <name><name pos:line="617" pos:column="42">stat_disk<pos:position pos:line="617" pos:column="51"/></name><index pos:line="617" pos:column="51">[<expr><name pos:line="617" pos:column="52">i<pos:position pos:line="617" pos:column="53"/></name></expr>]<pos:position pos:line="617" pos:column="54"/></index></name><operator pos:line="617" pos:column="54">.<pos:position pos:line="617" pos:column="55"/></operator><name pos:line="617" pos:column="55">bsize<pos:position pos:line="617" pos:column="60"/></name></expr>;<pos:position pos:line="617" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="618" pos:column="5">disk_submit<pos:position pos:line="618" pos:column="16"/></name><argument_list pos:line="618" pos:column="16">(<argument><expr><name><name pos:line="618" pos:column="17">stat_disk<pos:position pos:line="618" pos:column="26"/></name><index pos:line="618" pos:column="26">[<expr><name pos:line="618" pos:column="27">i<pos:position pos:line="618" pos:column="28"/></name></expr>]<pos:position pos:line="618" pos:column="29"/></index></name><operator pos:line="618" pos:column="29">.<pos:position pos:line="618" pos:column="30"/></operator><name pos:line="618" pos:column="30">name<pos:position pos:line="618" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="618" pos:column="36">"disk_octets"<pos:position pos:line="618" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="618" pos:column="51">read_sectors<pos:position pos:line="618" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="618" pos:column="65">write_sectors<pos:position pos:line="618" pos:column="78"/></name></expr></argument>)<pos:position pos:line="618" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="618" pos:column="80"/></expr_stmt>

    <expr_stmt><expr><name pos:line="620" pos:column="5">read_ops<pos:position pos:line="620" pos:column="13"/></name> <operator pos:line="620" pos:column="14">=<pos:position pos:line="620" pos:column="15"/></operator> <name><name pos:line="620" pos:column="16">stat_disk<pos:position pos:line="620" pos:column="25"/></name><index pos:line="620" pos:column="25">[<expr><name pos:line="620" pos:column="26">i<pos:position pos:line="620" pos:column="27"/></name></expr>]<pos:position pos:line="620" pos:column="28"/></index></name><operator pos:line="620" pos:column="28">.<pos:position pos:line="620" pos:column="29"/></operator><name pos:line="620" pos:column="29">xrate<pos:position pos:line="620" pos:column="34"/></name></expr>;<pos:position pos:line="620" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="621" pos:column="5">write_ops<pos:position pos:line="621" pos:column="14"/></name> <operator pos:line="621" pos:column="15">=<pos:position pos:line="621" pos:column="16"/></operator> <name><name pos:line="621" pos:column="17">stat_disk<pos:position pos:line="621" pos:column="26"/></name><index pos:line="621" pos:column="26">[<expr><name pos:line="621" pos:column="27">i<pos:position pos:line="621" pos:column="28"/></name></expr>]<pos:position pos:line="621" pos:column="29"/></index></name><operator pos:line="621" pos:column="29">.<pos:position pos:line="621" pos:column="30"/></operator><name pos:line="621" pos:column="30">xfers<pos:position pos:line="621" pos:column="35"/></name> <operator pos:line="621" pos:column="36">-<pos:position pos:line="621" pos:column="37"/></operator> <name><name pos:line="621" pos:column="38">stat_disk<pos:position pos:line="621" pos:column="47"/></name><index pos:line="621" pos:column="47">[<expr><name pos:line="621" pos:column="48">i<pos:position pos:line="621" pos:column="49"/></name></expr>]<pos:position pos:line="621" pos:column="50"/></index></name><operator pos:line="621" pos:column="50">.<pos:position pos:line="621" pos:column="51"/></operator><name pos:line="621" pos:column="51">xrate<pos:position pos:line="621" pos:column="56"/></name></expr>;<pos:position pos:line="621" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="622" pos:column="5">disk_submit<pos:position pos:line="622" pos:column="16"/></name><argument_list pos:line="622" pos:column="16">(<argument><expr><name><name pos:line="622" pos:column="17">stat_disk<pos:position pos:line="622" pos:column="26"/></name><index pos:line="622" pos:column="26">[<expr><name pos:line="622" pos:column="27">i<pos:position pos:line="622" pos:column="28"/></name></expr>]<pos:position pos:line="622" pos:column="29"/></index></name><operator pos:line="622" pos:column="29">.<pos:position pos:line="622" pos:column="30"/></operator><name pos:line="622" pos:column="30">name<pos:position pos:line="622" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="622" pos:column="36">"disk_ops"<pos:position pos:line="622" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="622" pos:column="48">read_ops<pos:position pos:line="622" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="622" pos:column="58">write_ops<pos:position pos:line="622" pos:column="67"/></name></expr></argument>)<pos:position pos:line="622" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="622" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><name pos:line="624" pos:column="5">read_time<pos:position pos:line="624" pos:column="14"/></name> <operator pos:line="624" pos:column="15">=<pos:position pos:line="624" pos:column="16"/></operator> <name><name pos:line="624" pos:column="17">stat_disk<pos:position pos:line="624" pos:column="26"/></name><index pos:line="624" pos:column="26">[<expr><name pos:line="624" pos:column="27">i<pos:position pos:line="624" pos:column="28"/></name></expr>]<pos:position pos:line="624" pos:column="29"/></index></name><operator pos:line="624" pos:column="29">.<pos:position pos:line="624" pos:column="30"/></operator><name pos:line="624" pos:column="30">rserv<pos:position pos:line="624" pos:column="35"/></name></expr>;<pos:position pos:line="624" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="625" pos:column="5">read_time<pos:position pos:line="625" pos:column="14"/></name> <operator pos:line="625" pos:column="15">*=<pos:position pos:line="625" pos:column="17"/></operator> <operator pos:line="625" pos:column="18">(<pos:position pos:line="625" pos:column="19"/></operator><call pos:line="625" pos:column="19">(<name pos:line="625" pos:column="20">double<pos:position pos:line="625" pos:column="26"/></name>)<argument_list pos:line="625" pos:column="27">(<argument><expr><name><name pos:line="625" pos:column="28">_system_configuration<pos:position pos:line="625" pos:column="49"/></name><operator pos:line="625" pos:column="49">.<pos:position pos:line="625" pos:column="50"/></operator><name pos:line="625" pos:column="50">Xint<pos:position pos:line="625" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="625" pos:column="55"/></argument_list></call> <operator pos:line="625" pos:column="56">/<pos:position pos:line="625" pos:column="57"/></operator>
                  <call pos:line="626" pos:column="19">(<name pos:line="626" pos:column="20">double<pos:position pos:line="626" pos:column="26"/></name>)<argument_list pos:line="626" pos:column="27">(<argument><expr><name><name pos:line="626" pos:column="28">_system_configuration<pos:position pos:line="626" pos:column="49"/></name><operator pos:line="626" pos:column="49">.<pos:position pos:line="626" pos:column="50"/></operator><name pos:line="626" pos:column="50">Xfrac<pos:position pos:line="626" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="626" pos:column="56"/></argument_list></call><operator pos:line="626" pos:column="56">)<pos:position pos:line="626" pos:column="57"/></operator> <operator pos:line="626" pos:column="58">/<pos:position pos:line="626" pos:column="59"/></operator>
                 <literal type="number" pos:line="627" pos:column="18">1000000.0<pos:position pos:line="627" pos:column="27"/></literal></expr>;<pos:position pos:line="627" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="628" pos:column="5">write_time<pos:position pos:line="628" pos:column="15"/></name> <operator pos:line="628" pos:column="16">=<pos:position pos:line="628" pos:column="17"/></operator> <name><name pos:line="628" pos:column="18">stat_disk<pos:position pos:line="628" pos:column="27"/></name><index pos:line="628" pos:column="27">[<expr><name pos:line="628" pos:column="28">i<pos:position pos:line="628" pos:column="29"/></name></expr>]<pos:position pos:line="628" pos:column="30"/></index></name><operator pos:line="628" pos:column="30">.<pos:position pos:line="628" pos:column="31"/></operator><name pos:line="628" pos:column="31">wserv<pos:position pos:line="628" pos:column="36"/></name></expr>;<pos:position pos:line="628" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="629" pos:column="5">write_time<pos:position pos:line="629" pos:column="15"/></name> <operator pos:line="629" pos:column="16">*=<pos:position pos:line="629" pos:column="18"/></operator> <operator pos:line="629" pos:column="19">(<pos:position pos:line="629" pos:column="20"/></operator><call pos:line="629" pos:column="20">(<name pos:line="629" pos:column="21">double<pos:position pos:line="629" pos:column="27"/></name>)<argument_list pos:line="629" pos:column="28">(<argument><expr><name><name pos:line="629" pos:column="29">_system_configuration<pos:position pos:line="629" pos:column="50"/></name><operator pos:line="629" pos:column="50">.<pos:position pos:line="629" pos:column="51"/></operator><name pos:line="629" pos:column="51">Xint<pos:position pos:line="629" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="629" pos:column="56"/></argument_list></call> <operator pos:line="629" pos:column="57">/<pos:position pos:line="629" pos:column="58"/></operator>
                   <call pos:line="630" pos:column="20">(<name pos:line="630" pos:column="21">double<pos:position pos:line="630" pos:column="27"/></name>)<argument_list pos:line="630" pos:column="28">(<argument><expr><name><name pos:line="630" pos:column="29">_system_configuration<pos:position pos:line="630" pos:column="50"/></name><operator pos:line="630" pos:column="50">.<pos:position pos:line="630" pos:column="51"/></operator><name pos:line="630" pos:column="51">Xfrac<pos:position pos:line="630" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="630" pos:column="57"/></argument_list></call><operator pos:line="630" pos:column="57">)<pos:position pos:line="630" pos:column="58"/></operator> <operator pos:line="630" pos:column="59">/<pos:position pos:line="630" pos:column="60"/></operator>
                  <literal type="number" pos:line="631" pos:column="19">1000000.0<pos:position pos:line="631" pos:column="28"/></literal></expr>;<pos:position pos:line="631" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="632" pos:column="5">disk_submit<pos:position pos:line="632" pos:column="16"/></name><argument_list pos:line="632" pos:column="16">(<argument><expr><name><name pos:line="632" pos:column="17">stat_disk<pos:position pos:line="632" pos:column="26"/></name><index pos:line="632" pos:column="26">[<expr><name pos:line="632" pos:column="27">i<pos:position pos:line="632" pos:column="28"/></name></expr>]<pos:position pos:line="632" pos:column="29"/></index></name><operator pos:line="632" pos:column="29">.<pos:position pos:line="632" pos:column="30"/></operator><name pos:line="632" pos:column="30">name<pos:position pos:line="632" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="632" pos:column="36">"disk_time"<pos:position pos:line="632" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="632" pos:column="49">read_time<pos:position pos:line="632" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="632" pos:column="60">write_time<pos:position pos:line="632" pos:column="70"/></name></expr></argument>)<pos:position pos:line="632" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="632" pos:column="72"/></expr_stmt>
  }<pos:position pos:line="633" pos:column="4"/></block></for>
<cpp:endif pos:line="634" pos:column="1">#<cpp:directive pos:line="634" pos:column="2">endif<pos:position pos:line="634" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="634" pos:column="8">/* defined(HAVE_PERFSTAT) */</comment>

  <return pos:line="636" pos:column="3">return <expr><operator pos:line="636" pos:column="10">(<pos:position pos:line="636" pos:column="11"/></operator><literal type="number" pos:line="636" pos:column="11">0<pos:position pos:line="636" pos:column="12"/></literal><operator pos:line="636" pos:column="12">)<pos:position pos:line="636" pos:column="13"/></operator></expr>;<pos:position pos:line="636" pos:column="14"/></return>
}<pos:position pos:line="637" pos:column="2"/></block></function></unit>

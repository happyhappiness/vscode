<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_244_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dpdk_submit_xstats<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">dev_name<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">count<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">uint32_t<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">counters<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">cdtime_t<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">port_read_time<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list> <block pos:line="2" pos:column="76">{
  <for pos:line="3" pos:column="3">for <control pos:line="3" pos:column="7">(<init><decl><type><name pos:line="3" pos:column="8">uint32_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">j<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></init> <condition><expr><name pos:line="3" pos:column="24">j<pos:position pos:line="3" pos:column="25"/></name> <operator pos:line="3" pos:column="26">&lt;<pos:position pos:line="3" pos:column="30"/></operator> <name pos:line="3" pos:column="28">counters<pos:position pos:line="3" pos:column="36"/></name></expr>;<pos:position pos:line="3" pos:column="37"/></condition> <incr><expr><name pos:line="3" pos:column="38">j<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">++<pos:position pos:line="3" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="3" pos:column="42"/></control> <block pos:line="3" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">value_list_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">vl<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">VALUE_LIST_INIT<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">counter_name<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">type_end<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="8" pos:column="5">vl<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">.<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">values<pos:position pos:line="8" pos:column="14"/></name></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <operator pos:line="8" pos:column="17">&amp;<pos:position pos:line="8" pos:column="22"/></operator><operator pos:line="8" pos:column="18">(<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">value_t<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">)<pos:position pos:line="8" pos:column="27"/></operator><block pos:line="8" pos:column="27">{<expr><operator pos:line="8" pos:column="28">.<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">derive<pos:position pos:line="8" pos:column="35"/></name> <operator pos:line="8" pos:column="36">=<pos:position pos:line="8" pos:column="37"/></operator> <operator pos:line="8" pos:column="38">(<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="39">derive_t<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">)<pos:position pos:line="8" pos:column="48"/></operator><macro><name pos:line="8" pos:column="48">DPDK_STATS_XSTAT_GET_VALUE<pos:position pos:line="8" pos:column="74"/></name><argument_list pos:line="8" pos:column="74">(
                               <argument pos:line="9" pos:column="32">g_configuration<pos:position pos:line="9" pos:column="47"/></argument>, <argument pos:line="9" pos:column="49">count + j<pos:position pos:line="9" pos:column="58"/></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></macro></expr>}<pos:position pos:line="9" pos:column="60"/></block></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">vl<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">.<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">values_len<pos:position pos:line="10" pos:column="18"/></name></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <literal type="number" pos:line="10" pos:column="21">1<pos:position pos:line="10" pos:column="22"/></literal></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt> <comment type="block" pos:line="10" pos:column="24">/* Submit stats one at a time */</comment>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">vl<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">.<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">time<pos:position pos:line="11" pos:column="12"/></name></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">port_read_time<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">sstrncpy<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><name><name pos:line="12" pos:column="14">vl<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">.<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">plugin<pos:position pos:line="12" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="25">"dpdkstat"<pos:position pos:line="12" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="37">sizeof<argument_list pos:line="12" pos:column="43">(<argument><expr><name><name pos:line="12" pos:column="44">vl<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">.<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="47">plugin<pos:position pos:line="12" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">sstrncpy<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name><name pos:line="13" pos:column="14">vl<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">.<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">plugin_instance<pos:position pos:line="13" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">dev_name<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="44">sizeof<argument_list pos:line="13" pos:column="50">(<argument><expr><name><name pos:line="13" pos:column="51">vl<pos:position pos:line="13" pos:column="53"/></name><operator pos:line="13" pos:column="53">.<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="54">plugin_instance<pos:position pos:line="13" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">counter_name<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <call><name pos:line="14" pos:column="20">DPDK_STATS_XSTAT_GET_NAME<pos:position pos:line="14" pos:column="45"/></name><argument_list pos:line="14" pos:column="45">(<argument><expr><name pos:line="14" pos:column="46">g_configuration<pos:position pos:line="14" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="63">count<pos:position pos:line="14" pos:column="68"/></name> <operator pos:line="14" pos:column="69">+<pos:position pos:line="14" pos:column="70"/></operator> <name pos:line="14" pos:column="71">j<pos:position pos:line="14" pos:column="72"/></name></expr></argument>)<pos:position pos:line="14" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="74"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">counter_name<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">==<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="25">NULL<pos:position pos:line="15" pos:column="29"/></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30"> <block pos:line="15" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">WARNING<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><literal type="string" pos:line="16" pos:column="15">"dpdkstat: Failed to get counter name."<pos:position pos:line="16" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
      <return pos:line="17" pos:column="7">return;<pos:position pos:line="17" pos:column="14"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">type_end<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">strrchr<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">counter_name<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="38">'_'<pos:position pos:line="20" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">type_end<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">!=<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">NULL<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">)<pos:position pos:line="22" pos:column="27"/></operator> <operator pos:line="22" pos:column="28">&amp;&amp;<pos:position pos:line="22" pos:column="38"/></operator>
        <operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><call><name pos:line="23" pos:column="10">strncmp<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">counter_name<pos:position pos:line="23" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="32">"rx_"<pos:position pos:line="23" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="39">strlen<pos:position pos:line="23" pos:column="45"/></name><argument_list pos:line="23" pos:column="45">(<argument><expr><literal type="string" pos:line="23" pos:column="46">"rx_"<pos:position pos:line="23" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call> <operator pos:line="23" pos:column="54">==<pos:position pos:line="23" pos:column="56"/></operator> <literal type="number" pos:line="23" pos:column="57">0<pos:position pos:line="23" pos:column="58"/></literal><operator pos:line="23" pos:column="58">)<pos:position pos:line="23" pos:column="59"/></operator></expr>)<pos:position pos:line="23" pos:column="60"/></condition><then pos:line="23" pos:column="60"> <block pos:line="23" pos:column="61">{
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><call><name pos:line="24" pos:column="11">strncmp<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">type_end<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="29">"_errors"<pos:position pos:line="24" pos:column="38"/></literal></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="40">strlen<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><literal type="string" pos:line="24" pos:column="47">"_errors"<pos:position pos:line="24" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call> <operator pos:line="24" pos:column="59">==<pos:position pos:line="24" pos:column="61"/></operator> <literal type="number" pos:line="24" pos:column="62">0<pos:position pos:line="24" pos:column="63"/></literal></expr>)<pos:position pos:line="24" pos:column="64"/></condition><then pos:line="24" pos:column="64"> <block pos:line="24" pos:column="65">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">sstrncpy<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><name><name pos:line="25" pos:column="18">vl<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">.<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">type<pos:position pos:line="25" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="27">"if_rx_errors"<pos:position pos:line="25" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="43">sizeof<argument_list pos:line="25" pos:column="49">(<argument><expr><name><name pos:line="25" pos:column="50">vl<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">.<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="53">type<pos:position pos:line="25" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="26" pos:column="8"/></block></then> <elseif pos:line="26" pos:column="9">else <if pos:line="26" pos:column="14">if <condition pos:line="26" pos:column="17">(<expr><call><name pos:line="26" pos:column="18">strncmp<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">type_end<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="36">"_dropped"<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="48">strlen<pos:position pos:line="26" pos:column="54"/></name><argument_list pos:line="26" pos:column="54">(<argument><expr><literal type="string" pos:line="26" pos:column="55">"_dropped"<pos:position pos:line="26" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call> <operator pos:line="26" pos:column="68">==<pos:position pos:line="26" pos:column="70"/></operator> <literal type="number" pos:line="26" pos:column="71">0<pos:position pos:line="26" pos:column="72"/></literal></expr>)<pos:position pos:line="26" pos:column="73"/></condition><then pos:line="26" pos:column="73"> <block pos:line="26" pos:column="74">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">sstrncpy<pos:position pos:line="27" pos:column="17"/></name><argument_list pos:line="27" pos:column="17">(<argument><expr><name><name pos:line="27" pos:column="18">vl<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">.<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">type<pos:position pos:line="27" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="27">"if_rx_dropped"<pos:position pos:line="27" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="44">sizeof<argument_list pos:line="27" pos:column="50">(<argument><expr><name><name pos:line="27" pos:column="51">vl<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">.<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="54">type<pos:position pos:line="27" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt>
      }<pos:position pos:line="28" pos:column="8"/></block></then></if></elseif> <elseif pos:line="28" pos:column="9">else <if pos:line="28" pos:column="14">if <condition pos:line="28" pos:column="17">(<expr><call><name pos:line="28" pos:column="18">strncmp<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">type_end<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="36">"_bytes"<pos:position pos:line="28" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="46">strlen<pos:position pos:line="28" pos:column="52"/></name><argument_list pos:line="28" pos:column="52">(<argument><expr><literal type="string" pos:line="28" pos:column="53">"_bytes"<pos:position pos:line="28" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call> <operator pos:line="28" pos:column="64">==<pos:position pos:line="28" pos:column="66"/></operator> <literal type="number" pos:line="28" pos:column="67">0<pos:position pos:line="28" pos:column="68"/></literal></expr>)<pos:position pos:line="28" pos:column="69"/></condition><then pos:line="28" pos:column="69"> <block pos:line="28" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">sstrncpy<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument><expr><name><name pos:line="29" pos:column="18">vl<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">.<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="21">type<pos:position pos:line="29" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="27">"if_rx_octets"<pos:position pos:line="29" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="43">sizeof<argument_list pos:line="29" pos:column="49">(<argument><expr><name><name pos:line="29" pos:column="50">vl<pos:position pos:line="29" pos:column="52"/></name><operator pos:line="29" pos:column="52">.<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="53">type<pos:position pos:line="29" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="30" pos:column="8"/></block></then></if></elseif> <elseif pos:line="30" pos:column="9">else <if pos:line="30" pos:column="14">if <condition pos:line="30" pos:column="17">(<expr><call><name pos:line="30" pos:column="18">strncmp<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">type_end<pos:position pos:line="30" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="36">"_packets"<pos:position pos:line="30" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="48">strlen<pos:position pos:line="30" pos:column="54"/></name><argument_list pos:line="30" pos:column="54">(<argument><expr><literal type="string" pos:line="30" pos:column="55">"_packets"<pos:position pos:line="30" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="67"/></argument_list></call> <operator pos:line="30" pos:column="68">==<pos:position pos:line="30" pos:column="70"/></operator> <literal type="number" pos:line="30" pos:column="71">0<pos:position pos:line="30" pos:column="72"/></literal></expr>)<pos:position pos:line="30" pos:column="73"/></condition><then pos:line="30" pos:column="73"> <block pos:line="30" pos:column="74">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">sstrncpy<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name><name pos:line="31" pos:column="18">vl<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">.<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">type<pos:position pos:line="31" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="27">"if_rx_packets"<pos:position pos:line="31" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="44">sizeof<argument_list pos:line="31" pos:column="50">(<argument><expr><name><name pos:line="31" pos:column="51">vl<pos:position pos:line="31" pos:column="53"/></name><operator pos:line="31" pos:column="53">.<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="54">type<pos:position pos:line="31" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="61"/></expr_stmt>
      }<pos:position pos:line="32" pos:column="8"/></block></then></if></elseif> <elseif pos:line="32" pos:column="9">else <if pos:line="32" pos:column="14">if <condition pos:line="32" pos:column="17">(<expr><call><name pos:line="32" pos:column="18">strncmp<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">type_end<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="36">"_placement"<pos:position pos:line="32" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="50">strlen<pos:position pos:line="32" pos:column="56"/></name><argument_list pos:line="32" pos:column="56">(<argument><expr><literal type="string" pos:line="32" pos:column="57">"_placement"<pos:position pos:line="32" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="71"/></argument_list></call> <operator pos:line="32" pos:column="72">==<pos:position pos:line="32" pos:column="74"/></operator> <literal type="number" pos:line="32" pos:column="75">0<pos:position pos:line="32" pos:column="76"/></literal></expr>)<pos:position pos:line="32" pos:column="77"/></condition><then pos:line="32" pos:column="77"> <block pos:line="32" pos:column="78">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">sstrncpy<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><name><name pos:line="33" pos:column="18">vl<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">.<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">type<pos:position pos:line="33" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="27">"if_rx_errors"<pos:position pos:line="33" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="43">sizeof<argument_list pos:line="33" pos:column="49">(<argument><expr><name><name pos:line="33" pos:column="50">vl<pos:position pos:line="33" pos:column="52"/></name><operator pos:line="33" pos:column="52">.<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="53">type<pos:position pos:line="33" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="34" pos:column="8"/></block></then></if></elseif> <elseif pos:line="34" pos:column="9">else <if pos:line="34" pos:column="14">if <condition pos:line="34" pos:column="17">(<expr><call><name pos:line="34" pos:column="18">strncmp<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">type_end<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="36">"_buff"<pos:position pos:line="34" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="45">strlen<pos:position pos:line="34" pos:column="51"/></name><argument_list pos:line="34" pos:column="51">(<argument><expr><literal type="string" pos:line="34" pos:column="52">"_buff"<pos:position pos:line="34" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call> <operator pos:line="34" pos:column="62">==<pos:position pos:line="34" pos:column="64"/></operator> <literal type="number" pos:line="34" pos:column="65">0<pos:position pos:line="34" pos:column="66"/></literal></expr>)<pos:position pos:line="34" pos:column="67"/></condition><then pos:line="34" pos:column="67"> <block pos:line="34" pos:column="68">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">sstrncpy<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><name><name pos:line="35" pos:column="18">vl<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">.<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="21">type<pos:position pos:line="35" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="27">"if_rx_errors"<pos:position pos:line="35" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="43">sizeof<argument_list pos:line="35" pos:column="49">(<argument><expr><name><name pos:line="35" pos:column="50">vl<pos:position pos:line="35" pos:column="52"/></name><operator pos:line="35" pos:column="52">.<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="53">type<pos:position pos:line="35" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if></elseif> <else pos:line="36" pos:column="9">else <block pos:line="36" pos:column="14">{
        <comment type="block" pos:line="37" pos:column="9">/* Does not fit obvious type: use a more generic one */</comment>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">sstrncpy<pos:position pos:line="38" pos:column="17"/></name><argument_list pos:line="38" pos:column="17">(<argument><expr><name><name pos:line="38" pos:column="18">vl<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">.<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">type<pos:position pos:line="38" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="27">"derive"<pos:position pos:line="38" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="37">sizeof<argument_list pos:line="38" pos:column="43">(<argument><expr><name><name pos:line="38" pos:column="44">vl<pos:position pos:line="38" pos:column="46"/></name><operator pos:line="38" pos:column="46">.<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="47">type<pos:position pos:line="38" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
      }<pos:position pos:line="39" pos:column="8"/></block></else></if>

    }<pos:position pos:line="41" pos:column="6"/></block></then> <elseif pos:line="41" pos:column="7">else <if pos:line="41" pos:column="12">if <condition pos:line="41" pos:column="15">(<expr><operator pos:line="41" pos:column="16">(<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">type_end<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">!=<pos:position pos:line="41" pos:column="28"/></operator> <name pos:line="41" pos:column="29">NULL<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">)<pos:position pos:line="41" pos:column="34"/></operator> <operator pos:line="41" pos:column="35">&amp;&amp;<pos:position pos:line="41" pos:column="45"/></operator>
               <operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><call><name pos:line="42" pos:column="17">strncmp<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">counter_name<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="39">"tx_"<pos:position pos:line="42" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="46">strlen<pos:position pos:line="42" pos:column="52"/></name><argument_list pos:line="42" pos:column="52">(<argument><expr><literal type="string" pos:line="42" pos:column="53">"tx_"<pos:position pos:line="42" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call><operator pos:line="42" pos:column="60">)<pos:position pos:line="42" pos:column="61"/></operator> <operator pos:line="42" pos:column="62">==<pos:position pos:line="42" pos:column="64"/></operator> <literal type="number" pos:line="42" pos:column="65">0<pos:position pos:line="42" pos:column="66"/></literal></expr>)<pos:position pos:line="42" pos:column="67"/></condition><then pos:line="42" pos:column="67"> <block pos:line="42" pos:column="68">{
      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><call><name pos:line="43" pos:column="11">strncmp<pos:position pos:line="43" pos:column="18"/></name><argument_list pos:line="43" pos:column="18">(<argument><expr><name pos:line="43" pos:column="19">type_end<pos:position pos:line="43" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="29">"_errors"<pos:position pos:line="43" pos:column="38"/></literal></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="40">strlen<pos:position pos:line="43" pos:column="46"/></name><argument_list pos:line="43" pos:column="46">(<argument><expr><literal type="string" pos:line="43" pos:column="47">"_errors"<pos:position pos:line="43" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="58"/></argument_list></call> <operator pos:line="43" pos:column="59">==<pos:position pos:line="43" pos:column="61"/></operator> <literal type="number" pos:line="43" pos:column="62">0<pos:position pos:line="43" pos:column="63"/></literal></expr>)<pos:position pos:line="43" pos:column="64"/></condition><then pos:line="43" pos:column="64"> <block pos:line="43" pos:column="65">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">sstrncpy<pos:position pos:line="44" pos:column="17"/></name><argument_list pos:line="44" pos:column="17">(<argument><expr><name><name pos:line="44" pos:column="18">vl<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">.<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="21">type<pos:position pos:line="44" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="27">"if_tx_errors"<pos:position pos:line="44" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="43">sizeof<argument_list pos:line="44" pos:column="49">(<argument><expr><name><name pos:line="44" pos:column="50">vl<pos:position pos:line="44" pos:column="52"/></name><operator pos:line="44" pos:column="52">.<pos:position pos:line="44" pos:column="53"/></operator><name pos:line="44" pos:column="53">type<pos:position pos:line="44" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="45" pos:column="8"/></block></then> <elseif pos:line="45" pos:column="9">else <if pos:line="45" pos:column="14">if <condition pos:line="45" pos:column="17">(<expr><call><name pos:line="45" pos:column="18">strncmp<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">type_end<pos:position pos:line="45" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="36">"_dropped"<pos:position pos:line="45" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="48">strlen<pos:position pos:line="45" pos:column="54"/></name><argument_list pos:line="45" pos:column="54">(<argument><expr><literal type="string" pos:line="45" pos:column="55">"_dropped"<pos:position pos:line="45" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="67"/></argument_list></call> <operator pos:line="45" pos:column="68">==<pos:position pos:line="45" pos:column="70"/></operator> <literal type="number" pos:line="45" pos:column="71">0<pos:position pos:line="45" pos:column="72"/></literal></expr>)<pos:position pos:line="45" pos:column="73"/></condition><then pos:line="45" pos:column="73"> <block pos:line="45" pos:column="74">{
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">sstrncpy<pos:position pos:line="46" pos:column="17"/></name><argument_list pos:line="46" pos:column="17">(<argument><expr><name><name pos:line="46" pos:column="18">vl<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">.<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="21">type<pos:position pos:line="46" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="27">"if_tx_dropped"<pos:position pos:line="46" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="44">sizeof<argument_list pos:line="46" pos:column="50">(<argument><expr><name><name pos:line="46" pos:column="51">vl<pos:position pos:line="46" pos:column="53"/></name><operator pos:line="46" pos:column="53">.<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="54">type<pos:position pos:line="46" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="61"/></expr_stmt>
      }<pos:position pos:line="47" pos:column="8"/></block></then></if></elseif> <elseif pos:line="47" pos:column="9">else <if pos:line="47" pos:column="14">if <condition pos:line="47" pos:column="17">(<expr><call><name pos:line="47" pos:column="18">strncmp<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">type_end<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="36">"_bytes"<pos:position pos:line="47" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="46">strlen<pos:position pos:line="47" pos:column="52"/></name><argument_list pos:line="47" pos:column="52">(<argument><expr><literal type="string" pos:line="47" pos:column="53">"_bytes"<pos:position pos:line="47" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call> <operator pos:line="47" pos:column="64">==<pos:position pos:line="47" pos:column="66"/></operator> <literal type="number" pos:line="47" pos:column="67">0<pos:position pos:line="47" pos:column="68"/></literal></expr>)<pos:position pos:line="47" pos:column="69"/></condition><then pos:line="47" pos:column="69"> <block pos:line="47" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">sstrncpy<pos:position pos:line="48" pos:column="17"/></name><argument_list pos:line="48" pos:column="17">(<argument><expr><name><name pos:line="48" pos:column="18">vl<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">.<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="21">type<pos:position pos:line="48" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="27">"if_tx_octets"<pos:position pos:line="48" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="43">sizeof<argument_list pos:line="48" pos:column="49">(<argument><expr><name><name pos:line="48" pos:column="50">vl<pos:position pos:line="48" pos:column="52"/></name><operator pos:line="48" pos:column="52">.<pos:position pos:line="48" pos:column="53"/></operator><name pos:line="48" pos:column="53">type<pos:position pos:line="48" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="49" pos:column="8"/></block></then></if></elseif> <elseif pos:line="49" pos:column="9">else <if pos:line="49" pos:column="14">if <condition pos:line="49" pos:column="17">(<expr><call><name pos:line="49" pos:column="18">strncmp<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">(<argument><expr><name pos:line="49" pos:column="26">type_end<pos:position pos:line="49" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="36">"_packets"<pos:position pos:line="49" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="48">strlen<pos:position pos:line="49" pos:column="54"/></name><argument_list pos:line="49" pos:column="54">(<argument><expr><literal type="string" pos:line="49" pos:column="55">"_packets"<pos:position pos:line="49" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="67"/></argument_list></call> <operator pos:line="49" pos:column="68">==<pos:position pos:line="49" pos:column="70"/></operator> <literal type="number" pos:line="49" pos:column="71">0<pos:position pos:line="49" pos:column="72"/></literal></expr>)<pos:position pos:line="49" pos:column="73"/></condition><then pos:line="49" pos:column="73"> <block pos:line="49" pos:column="74">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">sstrncpy<pos:position pos:line="50" pos:column="17"/></name><argument_list pos:line="50" pos:column="17">(<argument><expr><name><name pos:line="50" pos:column="18">vl<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">.<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="21">type<pos:position pos:line="50" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="27">"if_tx_packets"<pos:position pos:line="50" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="44">sizeof<argument_list pos:line="50" pos:column="50">(<argument><expr><name><name pos:line="50" pos:column="51">vl<pos:position pos:line="50" pos:column="53"/></name><operator pos:line="50" pos:column="53">.<pos:position pos:line="50" pos:column="54"/></operator><name pos:line="50" pos:column="54">type<pos:position pos:line="50" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="61"/></expr_stmt>
      }<pos:position pos:line="51" pos:column="8"/></block></then></if></elseif> <else pos:line="51" pos:column="9">else <block pos:line="51" pos:column="14">{
        <comment type="block" pos:line="52" pos:column="9">/* Does not fit obvious type: use a more generic one */</comment>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">sstrncpy<pos:position pos:line="53" pos:column="17"/></name><argument_list pos:line="53" pos:column="17">(<argument><expr><name><name pos:line="53" pos:column="18">vl<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">.<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="21">type<pos:position pos:line="53" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="27">"derive"<pos:position pos:line="53" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="37">sizeof<argument_list pos:line="53" pos:column="43">(<argument><expr><name><name pos:line="53" pos:column="44">vl<pos:position pos:line="53" pos:column="46"/></name><operator pos:line="53" pos:column="46">.<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="47">type<pos:position pos:line="53" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="54"/></expr_stmt>
      }<pos:position pos:line="54" pos:column="8"/></block></else></if>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if></elseif> <elseif pos:line="55" pos:column="7">else <if pos:line="55" pos:column="12">if <condition pos:line="55" pos:column="15">(<expr><operator pos:line="55" pos:column="16">(<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="17">type_end<pos:position pos:line="55" pos:column="25"/></name> <operator pos:line="55" pos:column="26">!=<pos:position pos:line="55" pos:column="28"/></operator> <name pos:line="55" pos:column="29">NULL<pos:position pos:line="55" pos:column="33"/></name><operator pos:line="55" pos:column="33">)<pos:position pos:line="55" pos:column="34"/></operator> <operator pos:line="55" pos:column="35">&amp;&amp;<pos:position pos:line="55" pos:column="45"/></operator>
               <operator pos:line="56" pos:column="16">(<pos:position pos:line="56" pos:column="17"/></operator><call><name pos:line="56" pos:column="17">strncmp<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">counter_name<pos:position pos:line="56" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="39">"flow_"<pos:position pos:line="56" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="48">strlen<pos:position pos:line="56" pos:column="54"/></name><argument_list pos:line="56" pos:column="54">(<argument><expr><literal type="string" pos:line="56" pos:column="55">"flow_"<pos:position pos:line="56" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="64"/></argument_list></call><operator pos:line="56" pos:column="64">)<pos:position pos:line="56" pos:column="65"/></operator> <operator pos:line="56" pos:column="66">==<pos:position pos:line="56" pos:column="68"/></operator> <literal type="number" pos:line="56" pos:column="69">0<pos:position pos:line="56" pos:column="70"/></literal></expr>)<pos:position pos:line="56" pos:column="71"/></condition><then pos:line="56" pos:column="71"> <block pos:line="56" pos:column="72">{

      <if pos:line="58" pos:column="7">if <condition pos:line="58" pos:column="10">(<expr><call><name pos:line="58" pos:column="11">strncmp<pos:position pos:line="58" pos:column="18"/></name><argument_list pos:line="58" pos:column="18">(<argument><expr><name pos:line="58" pos:column="19">type_end<pos:position pos:line="58" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="29">"_filters"<pos:position pos:line="58" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="41">strlen<pos:position pos:line="58" pos:column="47"/></name><argument_list pos:line="58" pos:column="47">(<argument><expr><literal type="string" pos:line="58" pos:column="48">"_filters"<pos:position pos:line="58" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="60"/></argument_list></call> <operator pos:line="58" pos:column="61">==<pos:position pos:line="58" pos:column="63"/></operator> <literal type="number" pos:line="58" pos:column="64">0<pos:position pos:line="58" pos:column="65"/></literal></expr>)<pos:position pos:line="58" pos:column="66"/></condition><then pos:line="58" pos:column="66"> <block pos:line="58" pos:column="67">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">sstrncpy<pos:position pos:line="59" pos:column="17"/></name><argument_list pos:line="59" pos:column="17">(<argument><expr><name><name pos:line="59" pos:column="18">vl<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">.<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="21">type<pos:position pos:line="59" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="27">"operations"<pos:position pos:line="59" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="41">sizeof<argument_list pos:line="59" pos:column="47">(<argument><expr><name><name pos:line="59" pos:column="48">vl<pos:position pos:line="59" pos:column="50"/></name><operator pos:line="59" pos:column="50">.<pos:position pos:line="59" pos:column="51"/></operator><name pos:line="59" pos:column="51">type<pos:position pos:line="59" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="58"/></expr_stmt>
      }<pos:position pos:line="60" pos:column="8"/></block></then> <elseif pos:line="60" pos:column="9">else <if pos:line="60" pos:column="14">if <condition pos:line="60" pos:column="17">(<expr><call><name pos:line="60" pos:column="18">strncmp<pos:position pos:line="60" pos:column="25"/></name><argument_list pos:line="60" pos:column="25">(<argument><expr><name pos:line="60" pos:column="26">type_end<pos:position pos:line="60" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="36">"_errors"<pos:position pos:line="60" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="47">strlen<pos:position pos:line="60" pos:column="53"/></name><argument_list pos:line="60" pos:column="53">(<argument><expr><literal type="string" pos:line="60" pos:column="54">"_errors"<pos:position pos:line="60" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="65"/></argument_list></call> <operator pos:line="60" pos:column="66">==<pos:position pos:line="60" pos:column="68"/></operator> <literal type="number" pos:line="60" pos:column="69">0<pos:position pos:line="60" pos:column="70"/></literal></expr>)<pos:position pos:line="60" pos:column="71"/></condition><then pos:line="60" pos:column="71"> <block pos:line="60" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">sstrncpy<pos:position pos:line="61" pos:column="17"/></name><argument_list pos:line="61" pos:column="17">(<argument><expr><name><name pos:line="61" pos:column="18">vl<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">.<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="21">type<pos:position pos:line="61" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="27">"errors"<pos:position pos:line="61" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="37">sizeof<argument_list pos:line="61" pos:column="43">(<argument><expr><name><name pos:line="61" pos:column="44">vl<pos:position pos:line="61" pos:column="46"/></name><operator pos:line="61" pos:column="46">.<pos:position pos:line="61" pos:column="47"/></operator><name pos:line="61" pos:column="47">type<pos:position pos:line="61" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="61" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="54"/></expr_stmt>
      }<pos:position pos:line="62" pos:column="8"/></block></then></if></elseif> <elseif pos:line="62" pos:column="9">else <if pos:line="62" pos:column="14">if <condition pos:line="62" pos:column="17">(<expr><call><name pos:line="62" pos:column="18">strncmp<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><name pos:line="62" pos:column="26">type_end<pos:position pos:line="62" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="36">"_filters"<pos:position pos:line="62" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="48">strlen<pos:position pos:line="62" pos:column="54"/></name><argument_list pos:line="62" pos:column="54">(<argument><expr><literal type="string" pos:line="62" pos:column="55">"_filters"<pos:position pos:line="62" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="67"/></argument_list></call> <operator pos:line="62" pos:column="68">==<pos:position pos:line="62" pos:column="70"/></operator> <literal type="number" pos:line="62" pos:column="71">0<pos:position pos:line="62" pos:column="72"/></literal></expr>)<pos:position pos:line="62" pos:column="73"/></condition><then pos:line="62" pos:column="73"> <block pos:line="62" pos:column="74">{
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">sstrncpy<pos:position pos:line="63" pos:column="17"/></name><argument_list pos:line="63" pos:column="17">(<argument><expr><name><name pos:line="63" pos:column="18">vl<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">.<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="21">type<pos:position pos:line="63" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="27">"filter_result"<pos:position pos:line="63" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="63" pos:column="44">sizeof<argument_list pos:line="63" pos:column="50">(<argument><expr><name><name pos:line="63" pos:column="51">vl<pos:position pos:line="63" pos:column="53"/></name><operator pos:line="63" pos:column="53">.<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="54">type<pos:position pos:line="63" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="63" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="61"/></expr_stmt>
      }<pos:position pos:line="64" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if></elseif> <elseif pos:line="65" pos:column="7">else <if pos:line="65" pos:column="12">if <condition pos:line="65" pos:column="15">(<expr><operator pos:line="65" pos:column="16">(<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="17">type_end<pos:position pos:line="65" pos:column="25"/></name> <operator pos:line="65" pos:column="26">!=<pos:position pos:line="65" pos:column="28"/></operator> <name pos:line="65" pos:column="29">NULL<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">)<pos:position pos:line="65" pos:column="34"/></operator> <operator pos:line="65" pos:column="35">&amp;&amp;<pos:position pos:line="65" pos:column="45"/></operator>
               <operator pos:line="66" pos:column="16">(<pos:position pos:line="66" pos:column="17"/></operator><call><name pos:line="66" pos:column="17">strncmp<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">counter_name<pos:position pos:line="66" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="39">"mac_"<pos:position pos:line="66" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="47">strlen<pos:position pos:line="66" pos:column="53"/></name><argument_list pos:line="66" pos:column="53">(<argument><expr><literal type="string" pos:line="66" pos:column="54">"mac_"<pos:position pos:line="66" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="62"/></argument_list></call><operator pos:line="66" pos:column="62">)<pos:position pos:line="66" pos:column="63"/></operator> <operator pos:line="66" pos:column="64">==<pos:position pos:line="66" pos:column="66"/></operator> <literal type="number" pos:line="66" pos:column="67">0<pos:position pos:line="66" pos:column="68"/></literal></expr>)<pos:position pos:line="66" pos:column="69"/></condition><then pos:line="66" pos:column="69"> <block pos:line="66" pos:column="70">{
      <if pos:line="67" pos:column="7">if <condition pos:line="67" pos:column="10">(<expr><call><name pos:line="67" pos:column="11">strncmp<pos:position pos:line="67" pos:column="18"/></name><argument_list pos:line="67" pos:column="18">(<argument><expr><name pos:line="67" pos:column="19">type_end<pos:position pos:line="67" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="29">"_errors"<pos:position pos:line="67" pos:column="38"/></literal></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="40">strlen<pos:position pos:line="67" pos:column="46"/></name><argument_list pos:line="67" pos:column="46">(<argument><expr><literal type="string" pos:line="67" pos:column="47">"_errors"<pos:position pos:line="67" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="58"/></argument_list></call> <operator pos:line="67" pos:column="59">==<pos:position pos:line="67" pos:column="61"/></operator> <literal type="number" pos:line="67" pos:column="62">0<pos:position pos:line="67" pos:column="63"/></literal></expr>)<pos:position pos:line="67" pos:column="64"/></condition><then pos:line="67" pos:column="64"> <block pos:line="67" pos:column="65">{
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">sstrncpy<pos:position pos:line="68" pos:column="17"/></name><argument_list pos:line="68" pos:column="17">(<argument><expr><name><name pos:line="68" pos:column="18">vl<pos:position pos:line="68" pos:column="20"/></name><operator pos:line="68" pos:column="20">.<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="21">type<pos:position pos:line="68" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="27">"errors"<pos:position pos:line="68" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="37">sizeof<argument_list pos:line="68" pos:column="43">(<argument><expr><name><name pos:line="68" pos:column="44">vl<pos:position pos:line="68" pos:column="46"/></name><operator pos:line="68" pos:column="46">.<pos:position pos:line="68" pos:column="47"/></operator><name pos:line="68" pos:column="47">type<pos:position pos:line="68" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="68" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="54"/></expr_stmt>
      }<pos:position pos:line="69" pos:column="8"/></block></then></if>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if></elseif> <else pos:line="70" pos:column="7">else <block pos:line="70" pos:column="12">{
      <comment type="block" pos:line="71" pos:column="7">/* Does not fit obvious type, or strrchr error:
       *   use a more generic type */</comment>
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">sstrncpy<pos:position pos:line="73" pos:column="15"/></name><argument_list pos:line="73" pos:column="15">(<argument><expr><name><name pos:line="73" pos:column="16">vl<pos:position pos:line="73" pos:column="18"/></name><operator pos:line="73" pos:column="18">.<pos:position pos:line="73" pos:column="19"/></operator><name pos:line="73" pos:column="19">type<pos:position pos:line="73" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="25">"derive"<pos:position pos:line="73" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="35">sizeof<argument_list pos:line="73" pos:column="41">(<argument><expr><name><name pos:line="73" pos:column="42">vl<pos:position pos:line="73" pos:column="44"/></name><operator pos:line="73" pos:column="44">.<pos:position pos:line="73" pos:column="45"/></operator><name pos:line="73" pos:column="45">type<pos:position pos:line="73" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="73" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="76" pos:column="5">sstrncpy<pos:position pos:line="76" pos:column="13"/></name><argument_list pos:line="76" pos:column="13">(<argument><expr><name><name pos:line="76" pos:column="14">vl<pos:position pos:line="76" pos:column="16"/></name><operator pos:line="76" pos:column="16">.<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="17">type_instance<pos:position pos:line="76" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="32">counter_name<pos:position pos:line="76" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="76" pos:column="46">sizeof<argument_list pos:line="76" pos:column="52">(<argument><expr><name><name pos:line="76" pos:column="53">vl<pos:position pos:line="76" pos:column="55"/></name><operator pos:line="76" pos:column="55">.<pos:position pos:line="76" pos:column="56"/></operator><name pos:line="76" pos:column="56">type_instance<pos:position pos:line="76" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="76" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">plugin_dispatch_values<pos:position pos:line="77" pos:column="27"/></name><argument_list pos:line="77" pos:column="27">(<argument><expr><operator pos:line="77" pos:column="28">&amp;<pos:position pos:line="77" pos:column="33"/></operator><name pos:line="77" pos:column="29">vl<pos:position pos:line="77" pos:column="31"/></name></expr></argument>)<pos:position pos:line="77" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="78" pos:column="4"/></block></for>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_169_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rc_config<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">oconfig_item_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">ci<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <for pos:line="3" pos:column="3">for <control pos:line="3" pos:column="7">(<init><decl><type><name pos:line="3" pos:column="8">int<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">i<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><literal type="number" pos:line="3" pos:column="16">0<pos:position pos:line="3" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></init> <condition><expr><name pos:line="3" pos:column="19">i<pos:position pos:line="3" pos:column="20"/></name> <operator pos:line="3" pos:column="21">&lt;<pos:position pos:line="3" pos:column="25"/></operator> <name><name pos:line="3" pos:column="23">ci<pos:position pos:line="3" pos:column="25"/></name><operator pos:line="3" pos:column="25">-&gt;<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="27">children_num<pos:position pos:line="3" pos:column="39"/></name></name></expr>;<pos:position pos:line="3" pos:column="40"/></condition> <incr><expr><name pos:line="3" pos:column="41">i<pos:position pos:line="3" pos:column="42"/></name><operator pos:line="3" pos:column="42">++<pos:position pos:line="3" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="3" pos:column="45"/></control>
  <block pos:line="4" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">oconfig_item_t<pos:position pos:line="5" pos:column="19"/></name> <specifier pos:line="5" pos:column="20">const<pos:position pos:line="5" pos:column="25"/></specifier> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">child<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><name><name pos:line="5" pos:column="35">ci<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">-&gt;<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="39">children<pos:position pos:line="5" pos:column="47"/></name></name> <operator pos:line="5" pos:column="48">+<pos:position pos:line="5" pos:column="49"/></operator> <name pos:line="5" pos:column="50">i<pos:position pos:line="5" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">key<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name><name pos:line="6" pos:column="23">child<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">key<pos:position pos:line="6" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">status<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">strcasecmp<pos:position pos:line="9" pos:column="19"/></name> <argument_list pos:line="9" pos:column="20">(<argument><expr><literal type="string" pos:line="9" pos:column="21">"DataDir"<pos:position pos:line="9" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="32">key<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call> <operator pos:line="9" pos:column="37">==<pos:position pos:line="9" pos:column="39"/></operator> <literal type="number" pos:line="9" pos:column="40">0<pos:position pos:line="9" pos:column="41"/></literal></expr>)<pos:position pos:line="9" pos:column="42"/></condition><then pos:line="9" pos:column="42">
    <block pos:line="10" pos:column="5">{
      <expr_stmt><expr><name pos:line="11" pos:column="7">status<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">cf_util_get_string<pos:position pos:line="11" pos:column="34"/></name> <argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">child<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="43">&amp;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="44">datadir<pos:position pos:line="11" pos:column="51"/></name></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><name pos:line="12" pos:column="11">status<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">==<pos:position pos:line="12" pos:column="20"/></operator> <literal type="number" pos:line="12" pos:column="21">0<pos:position pos:line="12" pos:column="22"/></literal></expr>)<pos:position pos:line="12" pos:column="23"/></condition><then pos:line="12" pos:column="23">
      <block pos:line="13" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">len<pos:position pos:line="14" pos:column="16"/></name> <init pos:line="14" pos:column="17">= <expr><call><name pos:line="14" pos:column="19">strlen<pos:position pos:line="14" pos:column="25"/></name> <argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">datadir<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="36"/></decl_stmt>

        <while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">len<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">&gt;<pos:position pos:line="16" pos:column="25"/></operator> <literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal><operator pos:line="16" pos:column="24">)<pos:position pos:line="16" pos:column="25"/></operator> <operator pos:line="16" pos:column="26">&amp;&amp;<pos:position pos:line="16" pos:column="36"/></operator> <operator pos:line="16" pos:column="29">(<pos:position pos:line="16" pos:column="30"/></operator><name><name pos:line="16" pos:column="30">datadir<pos:position pos:line="16" pos:column="37"/></name><index pos:line="16" pos:column="37">[<expr><name pos:line="16" pos:column="38">len<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">-<pos:position pos:line="16" pos:column="43"/></operator> <literal type="number" pos:line="16" pos:column="44">1<pos:position pos:line="16" pos:column="45"/></literal></expr>]<pos:position pos:line="16" pos:column="46"/></index></name> <operator pos:line="16" pos:column="47">==<pos:position pos:line="16" pos:column="49"/></operator> <literal type="char" pos:line="16" pos:column="50">'/'<pos:position pos:line="16" pos:column="53"/></literal><operator pos:line="16" pos:column="53">)<pos:position pos:line="16" pos:column="54"/></operator></expr>)<pos:position pos:line="16" pos:column="55"/></condition>
        <block pos:line="17" pos:column="9">{
          <expr_stmt><expr><name pos:line="18" pos:column="11">len<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">--<pos:position pos:line="18" pos:column="16"/></operator></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="19" pos:column="11">datadir<pos:position pos:line="19" pos:column="18"/></name><index pos:line="19" pos:column="18">[<expr><name pos:line="19" pos:column="19">len<pos:position pos:line="19" pos:column="22"/></name></expr>]<pos:position pos:line="19" pos:column="23"/></index></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <literal type="number" pos:line="19" pos:column="26">0<pos:position pos:line="19" pos:column="27"/></literal></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></while>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">len<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">&lt;=<pos:position pos:line="22" pos:column="22"/></operator> <literal type="number" pos:line="22" pos:column="20">0<pos:position pos:line="22" pos:column="21"/></literal></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="11">sfree<pos:position pos:line="23" pos:column="16"/></name> <argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">datadir<pos:position pos:line="23" pos:column="25"/></name></expr></argument>)<pos:position pos:line="23" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt></block></then></if>
      }<pos:position pos:line="24" pos:column="8"/></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></then>
    <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><call><name pos:line="26" pos:column="14">strcasecmp<pos:position pos:line="26" pos:column="24"/></name> <argument_list pos:line="26" pos:column="25">(<argument><expr><literal type="string" pos:line="26" pos:column="26">"DaemonAddress"<pos:position pos:line="26" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">key<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call> <operator pos:line="26" pos:column="48">==<pos:position pos:line="26" pos:column="50"/></operator> <literal type="number" pos:line="26" pos:column="51">0<pos:position pos:line="26" pos:column="52"/></literal></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="7">status<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">cf_util_get_string<pos:position pos:line="27" pos:column="34"/></name> <argument_list pos:line="27" pos:column="35">(<argument><expr><name pos:line="27" pos:column="36">child<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="43">&amp;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="44">daemon_address<pos:position pos:line="27" pos:column="58"/></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><call><name pos:line="28" pos:column="14">strcasecmp<pos:position pos:line="28" pos:column="24"/></name> <argument_list pos:line="28" pos:column="25">(<argument><expr><literal type="string" pos:line="28" pos:column="26">"CreateFiles"<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="41">key<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call> <operator pos:line="28" pos:column="46">==<pos:position pos:line="28" pos:column="48"/></operator> <literal type="number" pos:line="28" pos:column="49">0<pos:position pos:line="28" pos:column="50"/></literal></expr>)<pos:position pos:line="28" pos:column="51"/></condition><then pos:line="28" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="7">status<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">cf_util_get_boolean<pos:position pos:line="29" pos:column="35"/></name> <argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">child<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="44">&amp;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="45">config_create_files<pos:position pos:line="29" pos:column="64"/></name></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="66"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="30" pos:column="5">else <if pos:line="30" pos:column="10">if <condition pos:line="30" pos:column="13">(<expr><call><name pos:line="30" pos:column="14">strcasecmp<pos:position pos:line="30" pos:column="24"/></name> <argument_list pos:line="30" pos:column="25">(<argument><expr><literal type="string" pos:line="30" pos:column="26">"CreateFilesAsync"<pos:position pos:line="30" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">key<pos:position pos:line="30" pos:column="49"/></name></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call> <operator pos:line="30" pos:column="51">==<pos:position pos:line="30" pos:column="53"/></operator> <literal type="number" pos:line="30" pos:column="54">0<pos:position pos:line="30" pos:column="55"/></literal></expr>)<pos:position pos:line="30" pos:column="56"/></condition><then pos:line="30" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">status<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">cf_util_get_boolean<pos:position pos:line="31" pos:column="35"/></name> <argument_list pos:line="31" pos:column="36">(<argument><expr><name pos:line="31" pos:column="37">child<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="44">&amp;<pos:position pos:line="31" pos:column="49"/></operator><name><name pos:line="31" pos:column="45">rrdcreate_config<pos:position pos:line="31" pos:column="61"/></name><operator pos:line="31" pos:column="61">.<pos:position pos:line="31" pos:column="62"/></operator><name pos:line="31" pos:column="62">async<pos:position pos:line="31" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="69"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><call><name pos:line="32" pos:column="14">strcasecmp<pos:position pos:line="32" pos:column="24"/></name> <argument_list pos:line="32" pos:column="25">(<argument><expr><literal type="string" pos:line="32" pos:column="26">"CollectStatistics"<pos:position pos:line="32" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="47">key<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call> <operator pos:line="32" pos:column="52">==<pos:position pos:line="32" pos:column="54"/></operator> <literal type="number" pos:line="32" pos:column="55">0<pos:position pos:line="32" pos:column="56"/></literal></expr>)<pos:position pos:line="32" pos:column="57"/></condition><then pos:line="32" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">status<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">cf_util_get_boolean<pos:position pos:line="33" pos:column="35"/></name> <argument_list pos:line="33" pos:column="36">(<argument><expr><name pos:line="33" pos:column="37">child<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="44">&amp;<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="45">config_collect_stats<pos:position pos:line="33" pos:column="65"/></name></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="34" pos:column="5">else <if pos:line="34" pos:column="10">if <condition pos:line="34" pos:column="13">(<expr><call><name pos:line="34" pos:column="14">strcasecmp<pos:position pos:line="34" pos:column="24"/></name> <argument_list pos:line="34" pos:column="25">(<argument><expr><literal type="string" pos:line="34" pos:column="26">"StepSize"<pos:position pos:line="34" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="38">key<pos:position pos:line="34" pos:column="41"/></name></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call> <operator pos:line="34" pos:column="43">==<pos:position pos:line="34" pos:column="45"/></operator> <literal type="number" pos:line="34" pos:column="46">0<pos:position pos:line="34" pos:column="47"/></literal></expr>)<pos:position pos:line="34" pos:column="48"/></condition><then pos:line="34" pos:column="48">
    <block pos:line="35" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="36" pos:column="7">int<pos:position pos:line="36" pos:column="10"/></name></type> <name pos:line="36" pos:column="11">tmp<pos:position pos:line="36" pos:column="14"/></name> <init pos:line="36" pos:column="15">= <expr><operator pos:line="36" pos:column="17">-<pos:position pos:line="36" pos:column="18"/></operator><literal type="number" pos:line="36" pos:column="18">1<pos:position pos:line="36" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="36" pos:column="20"/></decl_stmt>

      <expr_stmt><expr><name pos:line="38" pos:column="7">status<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <call><name pos:line="38" pos:column="16">rc_config_get_int_positive<pos:position pos:line="38" pos:column="42"/></name> <argument_list pos:line="38" pos:column="43">(<argument><expr><name pos:line="38" pos:column="44">child<pos:position pos:line="38" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="51">&amp;<pos:position pos:line="38" pos:column="56"/></operator><name pos:line="38" pos:column="52">tmp<pos:position pos:line="38" pos:column="55"/></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt>
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><name pos:line="39" pos:column="11">status<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">==<pos:position pos:line="39" pos:column="20"/></operator> <literal type="number" pos:line="39" pos:column="21">0<pos:position pos:line="39" pos:column="22"/></literal></expr>)<pos:position pos:line="39" pos:column="23"/></condition><then pos:line="39" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="9">rrdcreate_config<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">.<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="26">stepsize<pos:position pos:line="40" pos:column="34"/></name></name> <operator pos:line="40" pos:column="35">=<pos:position pos:line="40" pos:column="36"/></operator> <operator pos:line="40" pos:column="37">(<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="38">unsigned<pos:position pos:line="40" pos:column="46"/></name> <name pos:line="40" pos:column="47">long<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">)<pos:position pos:line="40" pos:column="52"/></operator> <name pos:line="40" pos:column="53">tmp<pos:position pos:line="40" pos:column="56"/></name></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="42" pos:column="5">else <if pos:line="42" pos:column="10">if <condition pos:line="42" pos:column="13">(<expr><call><name pos:line="42" pos:column="14">strcasecmp<pos:position pos:line="42" pos:column="24"/></name> <argument_list pos:line="42" pos:column="25">(<argument><expr><literal type="string" pos:line="42" pos:column="26">"HeartBeat"<pos:position pos:line="42" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="39">key<pos:position pos:line="42" pos:column="42"/></name></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call> <operator pos:line="42" pos:column="44">==<pos:position pos:line="42" pos:column="46"/></operator> <literal type="number" pos:line="42" pos:column="47">0<pos:position pos:line="42" pos:column="48"/></literal></expr>)<pos:position pos:line="42" pos:column="49"/></condition><then pos:line="42" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="7">status<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <call><name pos:line="43" pos:column="16">rc_config_get_int_positive<pos:position pos:line="43" pos:column="42"/></name> <argument_list pos:line="43" pos:column="43">(<argument><expr><name pos:line="43" pos:column="44">child<pos:position pos:line="43" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="51">&amp;<pos:position pos:line="43" pos:column="56"/></operator><name><name pos:line="43" pos:column="52">rrdcreate_config<pos:position pos:line="43" pos:column="68"/></name><operator pos:line="43" pos:column="68">.<pos:position pos:line="43" pos:column="69"/></operator><name pos:line="43" pos:column="69">heartbeat<pos:position pos:line="43" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="80"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="44" pos:column="5">else <if pos:line="44" pos:column="10">if <condition pos:line="44" pos:column="13">(<expr><call><name pos:line="44" pos:column="14">strcasecmp<pos:position pos:line="44" pos:column="24"/></name> <argument_list pos:line="44" pos:column="25">(<argument><expr><literal type="string" pos:line="44" pos:column="26">"RRARows"<pos:position pos:line="44" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="37">key<pos:position pos:line="44" pos:column="40"/></name></expr></argument>)<pos:position pos:line="44" pos:column="41"/></argument_list></call> <operator pos:line="44" pos:column="42">==<pos:position pos:line="44" pos:column="44"/></operator> <literal type="number" pos:line="44" pos:column="45">0<pos:position pos:line="44" pos:column="46"/></literal></expr>)<pos:position pos:line="44" pos:column="47"/></condition><then pos:line="44" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="7">status<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <call><name pos:line="45" pos:column="16">rc_config_get_int_positive<pos:position pos:line="45" pos:column="42"/></name> <argument_list pos:line="45" pos:column="43">(<argument><expr><name pos:line="45" pos:column="44">child<pos:position pos:line="45" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="51">&amp;<pos:position pos:line="45" pos:column="56"/></operator><name><name pos:line="45" pos:column="52">rrdcreate_config<pos:position pos:line="45" pos:column="68"/></name><operator pos:line="45" pos:column="68">.<pos:position pos:line="45" pos:column="69"/></operator><name pos:line="45" pos:column="69">rrarows<pos:position pos:line="45" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="78"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><call><name pos:line="46" pos:column="14">strcasecmp<pos:position pos:line="46" pos:column="24"/></name> <argument_list pos:line="46" pos:column="25">(<argument><expr><literal type="string" pos:line="46" pos:column="26">"RRATimespan"<pos:position pos:line="46" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="41">key<pos:position pos:line="46" pos:column="44"/></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call> <operator pos:line="46" pos:column="46">==<pos:position pos:line="46" pos:column="48"/></operator> <literal type="number" pos:line="46" pos:column="49">0<pos:position pos:line="46" pos:column="50"/></literal></expr>)<pos:position pos:line="46" pos:column="51"/></condition><then pos:line="46" pos:column="51">
    <block pos:line="47" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="48" pos:column="7">int<pos:position pos:line="48" pos:column="10"/></name></type> <name pos:line="48" pos:column="11">tmp<pos:position pos:line="48" pos:column="14"/></name> <init pos:line="48" pos:column="15">= <expr><operator pos:line="48" pos:column="17">-<pos:position pos:line="48" pos:column="18"/></operator><literal type="number" pos:line="48" pos:column="18">1<pos:position pos:line="48" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="48" pos:column="20"/></decl_stmt>
      <expr_stmt><expr><name pos:line="49" pos:column="7">status<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <call><name pos:line="49" pos:column="16">rc_config_get_int_positive<pos:position pos:line="49" pos:column="42"/></name> <argument_list pos:line="49" pos:column="43">(<argument><expr><name pos:line="49" pos:column="44">child<pos:position pos:line="49" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="51">&amp;<pos:position pos:line="49" pos:column="56"/></operator><name pos:line="49" pos:column="52">tmp<pos:position pos:line="49" pos:column="55"/></name></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="57"/></expr_stmt>
      <if pos:line="50" pos:column="7">if <condition pos:line="50" pos:column="10">(<expr><name pos:line="50" pos:column="11">status<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">==<pos:position pos:line="50" pos:column="20"/></operator> <literal type="number" pos:line="50" pos:column="21">0<pos:position pos:line="50" pos:column="22"/></literal></expr>)<pos:position pos:line="50" pos:column="23"/></condition><then pos:line="50" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="9">status<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <call><name pos:line="51" pos:column="18">rc_config_add_timespan<pos:position pos:line="51" pos:column="40"/></name> <argument_list pos:line="51" pos:column="41">(<argument><expr><name pos:line="51" pos:column="42">tmp<pos:position pos:line="51" pos:column="45"/></name></expr></argument>)<pos:position pos:line="51" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt></block></then></if>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="53" pos:column="5">else <if pos:line="53" pos:column="10">if <condition pos:line="53" pos:column="13">(<expr><call><name pos:line="53" pos:column="14">strcasecmp<pos:position pos:line="53" pos:column="24"/></name> <argument_list pos:line="53" pos:column="25">(<argument><expr><literal type="string" pos:line="53" pos:column="26">"XFF"<pos:position pos:line="53" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="33">key<pos:position pos:line="53" pos:column="36"/></name></expr></argument>)<pos:position pos:line="53" pos:column="37"/></argument_list></call> <operator pos:line="53" pos:column="38">==<pos:position pos:line="53" pos:column="40"/></operator> <literal type="number" pos:line="53" pos:column="41">0<pos:position pos:line="53" pos:column="42"/></literal></expr>)<pos:position pos:line="53" pos:column="43"/></condition><then pos:line="53" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="7">status<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">=<pos:position pos:line="54" pos:column="15"/></operator> <call><name pos:line="54" pos:column="16">rc_config_get_xff<pos:position pos:line="54" pos:column="33"/></name> <argument_list pos:line="54" pos:column="34">(<argument><expr><name pos:line="54" pos:column="35">child<pos:position pos:line="54" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="42">&amp;<pos:position pos:line="54" pos:column="47"/></operator><name><name pos:line="54" pos:column="43">rrdcreate_config<pos:position pos:line="54" pos:column="59"/></name><operator pos:line="54" pos:column="59">.<pos:position pos:line="54" pos:column="60"/></operator><name pos:line="54" pos:column="60">xff<pos:position pos:line="54" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="65"/></expr_stmt></block></then></if></elseif>
    <else pos:line="55" pos:column="5">else
    <block pos:line="56" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">WARNING<pos:position pos:line="57" pos:column="14"/></name> <argument_list pos:line="57" pos:column="15">(<argument><expr><literal type="string" pos:line="57" pos:column="16">"rrdcached plugin: Ignoring invalid option %s."<pos:position pos:line="57" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="65">key<pos:position pos:line="57" pos:column="68"/></name></expr></argument>)<pos:position pos:line="57" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="70"/></expr_stmt>
      <continue pos:line="58" pos:column="7">continue;<pos:position pos:line="58" pos:column="16"/></continue>
    }<pos:position pos:line="59" pos:column="6"/></block></else></if>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">status<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">!=<pos:position pos:line="61" pos:column="18"/></operator> <literal type="number" pos:line="61" pos:column="19">0<pos:position pos:line="61" pos:column="20"/></literal></expr>)<pos:position pos:line="61" pos:column="21"/></condition><then pos:line="61" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="7">WARNING<pos:position pos:line="62" pos:column="14"/></name> <argument_list pos:line="62" pos:column="15">(<argument><expr><literal type="string" pos:line="62" pos:column="16">"rrdcached plugin: Handling the \"%s\" option failed."<pos:position pos:line="62" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="72">key<pos:position pos:line="62" pos:column="75"/></name></expr></argument>)<pos:position pos:line="62" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="77"/></expr_stmt></block></then></if>
  }<pos:position pos:line="63" pos:column="4"/></block></for>

  <if pos:line="65" pos:column="3">if <condition pos:line="65" pos:column="6">(<expr><name pos:line="65" pos:column="7">daemon_address<pos:position pos:line="65" pos:column="21"/></name> <operator pos:line="65" pos:column="22">!=<pos:position pos:line="65" pos:column="24"/></operator> <name pos:line="65" pos:column="25">NULL<pos:position pos:line="65" pos:column="29"/></name></expr>)<pos:position pos:line="65" pos:column="30"/></condition><then pos:line="65" pos:column="30">
  <block pos:line="66" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">plugin_register_write<pos:position pos:line="67" pos:column="26"/></name> <argument_list pos:line="67" pos:column="27">(<argument><expr><literal type="string" pos:line="67" pos:column="28">"rrdcached"<pos:position pos:line="67" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="41">rc_write<pos:position pos:line="67" pos:column="49"/></name></expr></argument>, <comment type="block" pos:line="67" pos:column="51">/* user_data = */</comment> <argument><expr><name pos:line="67" pos:column="69">NULL<pos:position pos:line="67" pos:column="73"/></name></expr></argument>)<pos:position pos:line="67" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">plugin_register_flush<pos:position pos:line="68" pos:column="26"/></name> <argument_list pos:line="68" pos:column="27">(<argument><expr><literal type="string" pos:line="68" pos:column="28">"rrdcached"<pos:position pos:line="68" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="41">rc_flush<pos:position pos:line="68" pos:column="49"/></name></expr></argument>, <comment type="block" pos:line="68" pos:column="51">/* user_data = */</comment> <argument><expr><name pos:line="68" pos:column="69">NULL<pos:position pos:line="68" pos:column="73"/></name></expr></argument>)<pos:position pos:line="68" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="75"/></expr_stmt>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>
  <return pos:line="70" pos:column="3">return <expr><operator pos:line="70" pos:column="10">(<pos:position pos:line="70" pos:column="11"/></operator><literal type="number" pos:line="70" pos:column="11">0<pos:position pos:line="70" pos:column="12"/></literal><operator pos:line="70" pos:column="12">)<pos:position pos:line="70" pos:column="13"/></operator></expr>;<pos:position pos:line="70" pos:column="14"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

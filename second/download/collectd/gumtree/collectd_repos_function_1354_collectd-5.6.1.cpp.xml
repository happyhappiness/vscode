<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1354_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">swap_read<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list> <comment type="block" pos:line="1" pos:column="29">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
        <decl_stmt><decl><type><name pos:line="3" pos:column="9">swaptbl_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">s<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">s_paths<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">swap_num<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">status<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="8" pos:column="9">gauge_t<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">avail<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">gauge_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">total<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>

        <expr_stmt><expr><name pos:line="11" pos:column="9">swap_num<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <call><name pos:line="11" pos:column="20">swapctl<pos:position pos:line="11" pos:column="27"/></name> <argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">SC_GETNSWP<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="41">NULL<pos:position pos:line="11" pos:column="45"/></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">swap_num<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">&lt;<pos:position pos:line="12" pos:column="26"/></operator> <literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26">
        <block pos:line="13" pos:column="9">{
                <expr_stmt><expr><call><name pos:line="14" pos:column="17">ERROR<pos:position pos:line="14" pos:column="22"/></name> <argument_list pos:line="14" pos:column="23">(<argument><expr><literal type="string" pos:line="14" pos:column="24">"swap plugin: swapctl (SC_GETNSWP) failed with status %i."<pos:position pos:line="14" pos:column="82"/></literal></expr></argument>,
                                <argument><expr><name pos:line="15" pos:column="33">swap_num<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
                <return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><operator pos:line="16" pos:column="25">-<pos:position pos:line="16" pos:column="26"/></operator><literal type="number" pos:line="16" pos:column="26">1<pos:position pos:line="16" pos:column="27"/></literal><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator></expr>;<pos:position pos:line="16" pos:column="29"/></return>
        }<pos:position pos:line="17" pos:column="10"/></block></then>
        <elseif pos:line="18" pos:column="9">else <if pos:line="18" pos:column="14">if <condition pos:line="18" pos:column="17">(<expr><name pos:line="18" pos:column="18">swap_num<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">==<pos:position pos:line="18" pos:column="29"/></operator> <literal type="number" pos:line="18" pos:column="30">0<pos:position pos:line="18" pos:column="31"/></literal></expr>)<pos:position pos:line="18" pos:column="32"/></condition><then pos:line="18" pos:column="32">
                <block type="pseudo"><return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">0<pos:position pos:line="19" pos:column="26"/></literal><operator pos:line="19" pos:column="26">)<pos:position pos:line="19" pos:column="27"/></operator></expr>;<pos:position pos:line="19" pos:column="28"/></return></block></then></if></elseif></if>

	<comment type="block" pos:line="21" pos:column="9">/* Allocate and initialize the swaptbl_t structure */</comment>
        <expr_stmt><expr><name pos:line="22" pos:column="9">s<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <call><name pos:line="22" pos:column="13">malloc<pos:position pos:line="22" pos:column="19"/></name> <argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">swap_num<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">*<pos:position pos:line="22" pos:column="31"/></operator> <sizeof pos:line="22" pos:column="32">sizeof <argument_list pos:line="22" pos:column="39">(<argument><expr><name pos:line="22" pos:column="40">swapent_t<pos:position pos:line="22" pos:column="49"/></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></sizeof> <operator pos:line="22" pos:column="51">+<pos:position pos:line="22" pos:column="52"/></operator> <sizeof pos:line="22" pos:column="53">sizeof <argument_list pos:line="22" pos:column="60">(<argument><expr pos:line="22" pos:column="61">struct <name pos:line="22" pos:column="68">swaptable<pos:position pos:line="22" pos:column="77"/></name></expr></argument>)<pos:position pos:line="22" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="80"/></expr_stmt>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">s<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">==<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">NULL<pos:position pos:line="23" pos:column="22"/></name></expr>)<pos:position pos:line="23" pos:column="23"/></condition><then pos:line="23" pos:column="23">
        <block pos:line="24" pos:column="9">{
                <expr_stmt><expr><call><name pos:line="25" pos:column="17">ERROR<pos:position pos:line="25" pos:column="22"/></name> <argument_list pos:line="25" pos:column="23">(<argument><expr><literal type="string" pos:line="25" pos:column="24">"swap plugin: malloc failed."<pos:position pos:line="25" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt>
                <return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><operator pos:line="26" pos:column="25">-<pos:position pos:line="26" pos:column="26"/></operator><literal type="number" pos:line="26" pos:column="26">1<pos:position pos:line="26" pos:column="27"/></literal><operator pos:line="26" pos:column="27">)<pos:position pos:line="26" pos:column="28"/></operator></expr>;<pos:position pos:line="26" pos:column="29"/></return>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="29" pos:column="9">/* Memory to store the path names. We only use these paths when the
	 * separate option has been configured, but it's easier to just
	 * allocate enough memory in any case. */</comment>
	<expr_stmt><expr><name pos:line="32" pos:column="9">s_paths<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <call><name pos:line="32" pos:column="19">calloc<pos:position pos:line="32" pos:column="25"/></name> <argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">swap_num<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="37">PATH_MAX<pos:position pos:line="32" pos:column="45"/></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="47"/></expr_stmt>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">s_paths<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">==<pos:position pos:line="33" pos:column="23"/></operator> <name pos:line="33" pos:column="24">NULL<pos:position pos:line="33" pos:column="28"/></name></expr>)<pos:position pos:line="33" pos:column="29"/></condition><then pos:line="33" pos:column="29">
	<block pos:line="34" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">ERROR<pos:position pos:line="35" pos:column="22"/></name> <argument_list pos:line="35" pos:column="23">(<argument><expr><literal type="string" pos:line="35" pos:column="24">"swap plugin: calloc failed."<pos:position pos:line="35" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">sfree<pos:position pos:line="36" pos:column="22"/></name> <argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">s<pos:position pos:line="36" pos:column="25"/></name></expr></argument>)<pos:position pos:line="36" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
		<return pos:line="37" pos:column="17">return <expr><operator pos:line="37" pos:column="24">(<pos:position pos:line="37" pos:column="25"/></operator><operator pos:line="37" pos:column="25">-<pos:position pos:line="37" pos:column="26"/></operator><literal type="number" pos:line="37" pos:column="26">1<pos:position pos:line="37" pos:column="27"/></literal><operator pos:line="37" pos:column="27">)<pos:position pos:line="37" pos:column="28"/></operator></expr>;<pos:position pos:line="37" pos:column="29"/></return>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>
        <for pos:line="39" pos:column="9">for <control pos:line="39" pos:column="13">(<init><decl><type><name pos:line="39" pos:column="14">int<pos:position pos:line="39" pos:column="17"/></name></type> <name pos:line="39" pos:column="18">i<pos:position pos:line="39" pos:column="19"/></name> <init pos:line="39" pos:column="20">= <expr><literal type="number" pos:line="39" pos:column="22">0<pos:position pos:line="39" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="24"/></init> <condition><expr><name pos:line="39" pos:column="25">i<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">&lt;<pos:position pos:line="39" pos:column="31"/></operator> <name pos:line="39" pos:column="29">swap_num<pos:position pos:line="39" pos:column="37"/></name></expr>;<pos:position pos:line="39" pos:column="38"/></condition> <incr><expr><name pos:line="39" pos:column="39">i<pos:position pos:line="39" pos:column="40"/></name><operator pos:line="39" pos:column="40">++<pos:position pos:line="39" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="43"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="17">s<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">-&gt;<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="20">swt_ent<pos:position pos:line="40" pos:column="27"/></name><index pos:line="40" pos:column="27">[<expr><name pos:line="40" pos:column="28">i<pos:position pos:line="40" pos:column="29"/></name></expr>]<pos:position pos:line="40" pos:column="30"/></index></name><operator pos:line="40" pos:column="30">.<pos:position pos:line="40" pos:column="31"/></operator><name pos:line="40" pos:column="31">ste_path<pos:position pos:line="40" pos:column="39"/></name> <operator pos:line="40" pos:column="40">=<pos:position pos:line="40" pos:column="41"/></operator> <name pos:line="40" pos:column="42">s_paths<pos:position pos:line="40" pos:column="49"/></name> <operator pos:line="40" pos:column="50">+<pos:position pos:line="40" pos:column="51"/></operator> <operator pos:line="40" pos:column="52">(<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="53">i<pos:position pos:line="40" pos:column="54"/></name> <operator pos:line="40" pos:column="55">*<pos:position pos:line="40" pos:column="56"/></operator> <name pos:line="40" pos:column="57">PATH_MAX<pos:position pos:line="40" pos:column="65"/></name><operator pos:line="40" pos:column="65">)<pos:position pos:line="40" pos:column="66"/></operator></expr>;<pos:position pos:line="40" pos:column="67"/></expr_stmt></block></for>
        <expr_stmt><expr><name><name pos:line="41" pos:column="9">s<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">swt_n<pos:position pos:line="41" pos:column="17"/></name></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <name pos:line="41" pos:column="20">swap_num<pos:position pos:line="41" pos:column="28"/></name></expr>;<pos:position pos:line="41" pos:column="29"/></expr_stmt>

        <expr_stmt><expr><name pos:line="43" pos:column="9">status<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <call><name pos:line="43" pos:column="18">swapctl<pos:position pos:line="43" pos:column="25"/></name> <argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">SC_LIST<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="36">s<pos:position pos:line="43" pos:column="37"/></name></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="39"/></expr_stmt>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">status<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">&lt;<pos:position pos:line="44" pos:column="24"/></operator> <literal type="number" pos:line="44" pos:column="22">0<pos:position pos:line="44" pos:column="23"/></literal></expr>)<pos:position pos:line="44" pos:column="24"/></condition><then pos:line="44" pos:column="24">
        <block pos:line="45" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">char<pos:position pos:line="46" pos:column="21"/></name></type> <name><name pos:line="46" pos:column="22">errbuf<pos:position pos:line="46" pos:column="28"/></name><index pos:line="46" pos:column="28">[<expr><literal type="number" pos:line="46" pos:column="29">1024<pos:position pos:line="46" pos:column="33"/></literal></expr>]<pos:position pos:line="46" pos:column="34"/></index></name></decl>;<pos:position pos:line="46" pos:column="35"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="47" pos:column="17">ERROR<pos:position pos:line="47" pos:column="22"/></name> <argument_list pos:line="47" pos:column="23">(<argument><expr><literal type="string" pos:line="47" pos:column="24">"swap plugin: swapctl (SC_LIST) failed: %s"<pos:position pos:line="47" pos:column="67"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="48" pos:column="33">sstrerror<pos:position pos:line="48" pos:column="42"/></name> <argument_list pos:line="48" pos:column="43">(<argument><expr><name pos:line="48" pos:column="44">errno<pos:position pos:line="48" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="51">errbuf<pos:position pos:line="48" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="59">sizeof <argument_list pos:line="48" pos:column="66">(<argument><expr><name pos:line="48" pos:column="67">errbuf<pos:position pos:line="48" pos:column="73"/></name></expr></argument>)<pos:position pos:line="48" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">sfree<pos:position pos:line="49" pos:column="22"/></name> <argument_list pos:line="49" pos:column="23">(<argument><expr><name pos:line="49" pos:column="24">s_paths<pos:position pos:line="49" pos:column="31"/></name></expr></argument>)<pos:position pos:line="49" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="50" pos:column="17">sfree<pos:position pos:line="50" pos:column="22"/></name> <argument_list pos:line="50" pos:column="23">(<argument><expr><name pos:line="50" pos:column="24">s<pos:position pos:line="50" pos:column="25"/></name></expr></argument>)<pos:position pos:line="50" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
                <return pos:line="51" pos:column="17">return <expr><operator pos:line="51" pos:column="24">(<pos:position pos:line="51" pos:column="25"/></operator><operator pos:line="51" pos:column="25">-<pos:position pos:line="51" pos:column="26"/></operator><literal type="number" pos:line="51" pos:column="26">1<pos:position pos:line="51" pos:column="27"/></literal><operator pos:line="51" pos:column="27">)<pos:position pos:line="51" pos:column="28"/></operator></expr>;<pos:position pos:line="51" pos:column="29"/></return>
        }<pos:position pos:line="52" pos:column="10"/></block></then>
	<elseif pos:line="53" pos:column="9">else <if pos:line="53" pos:column="14">if <condition pos:line="53" pos:column="17">(<expr><name pos:line="53" pos:column="18">swap_num<pos:position pos:line="53" pos:column="26"/></name> <operator pos:line="53" pos:column="27">&lt;<pos:position pos:line="53" pos:column="31"/></operator> <name pos:line="53" pos:column="29">status<pos:position pos:line="53" pos:column="35"/></name></expr>)<pos:position pos:line="53" pos:column="36"/></condition><then pos:line="53" pos:column="36">
	<block pos:line="54" pos:column="9">{
		<comment type="block" pos:line="55" pos:column="17">/* more elements returned than requested */</comment>
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">ERROR<pos:position pos:line="56" pos:column="22"/></name> <argument_list pos:line="56" pos:column="23">(<argument><expr><literal type="string" pos:line="56" pos:column="24">"swap plugin: I allocated memory for %i structure%s, "<pos:position pos:line="56" pos:column="78"/></literal>
				<literal type="string" pos:line="57" pos:column="33">"but swapctl(2) claims to have returned %i. "<pos:position pos:line="57" pos:column="78"/></literal>
				<literal type="string" pos:line="58" pos:column="33">"I'm confused and will give up."<pos:position pos:line="58" pos:column="65"/></literal></expr></argument>,
				<argument><expr><name pos:line="59" pos:column="33">swap_num<pos:position pos:line="59" pos:column="41"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="59" pos:column="43">(<pos:position pos:line="59" pos:column="44"/></operator><name pos:line="59" pos:column="44">swap_num<pos:position pos:line="59" pos:column="52"/></name> <operator pos:line="59" pos:column="53">==<pos:position pos:line="59" pos:column="55"/></operator> <literal type="number" pos:line="59" pos:column="56">1<pos:position pos:line="59" pos:column="57"/></literal><operator pos:line="59" pos:column="57">)<pos:position pos:line="59" pos:column="58"/></operator></expr> ?<pos:position pos:line="59" pos:column="60"/></condition><then pos:line="59" pos:column="60"> <expr><literal type="string" pos:line="59" pos:column="61">""<pos:position pos:line="59" pos:column="63"/></literal></expr> <pos:position pos:line="59" pos:column="64"/></then><else pos:line="59" pos:column="64">: <expr><literal type="string" pos:line="59" pos:column="66">"s"<pos:position pos:line="59" pos:column="69"/></literal></expr></else></ternary></expr></argument>,
				<argument><expr><name pos:line="60" pos:column="33">status<pos:position pos:line="60" pos:column="39"/></name></expr></argument>)<pos:position pos:line="60" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="61" pos:column="17">sfree<pos:position pos:line="61" pos:column="22"/></name> <argument_list pos:line="61" pos:column="23">(<argument><expr><name pos:line="61" pos:column="24">s_paths<pos:position pos:line="61" pos:column="31"/></name></expr></argument>)<pos:position pos:line="61" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">sfree<pos:position pos:line="62" pos:column="22"/></name> <argument_list pos:line="62" pos:column="23">(<argument><expr><name pos:line="62" pos:column="24">s<pos:position pos:line="62" pos:column="25"/></name></expr></argument>)<pos:position pos:line="62" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="27"/></expr_stmt>
                <return pos:line="63" pos:column="17">return <expr><operator pos:line="63" pos:column="24">(<pos:position pos:line="63" pos:column="25"/></operator><operator pos:line="63" pos:column="25">-<pos:position pos:line="63" pos:column="26"/></operator><literal type="number" pos:line="63" pos:column="26">1<pos:position pos:line="63" pos:column="27"/></literal><operator pos:line="63" pos:column="27">)<pos:position pos:line="63" pos:column="28"/></operator></expr>;<pos:position pos:line="63" pos:column="29"/></return>
	}<pos:position pos:line="64" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="65" pos:column="9">else <if pos:line="65" pos:column="14">if <condition pos:line="65" pos:column="17">(<expr><name pos:line="65" pos:column="18">swap_num<pos:position pos:line="65" pos:column="26"/></name> <operator pos:line="65" pos:column="27">&gt;<pos:position pos:line="65" pos:column="31"/></operator> <name pos:line="65" pos:column="29">status<pos:position pos:line="65" pos:column="35"/></name></expr>)<pos:position pos:line="65" pos:column="36"/></condition><then pos:line="65" pos:column="36">
		<comment type="block" pos:line="66" pos:column="17">/* less elements returned than requested */</comment>
		<block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="17">swap_num<pos:position pos:line="67" pos:column="25"/></name> <operator pos:line="67" pos:column="26">=<pos:position pos:line="67" pos:column="27"/></operator> <name pos:line="67" pos:column="28">status<pos:position pos:line="67" pos:column="34"/></name></expr>;<pos:position pos:line="67" pos:column="35"/></expr_stmt></block></then></if></elseif></if>

        <for pos:line="69" pos:column="9">for <control pos:line="69" pos:column="13">(<init><decl><type><name pos:line="69" pos:column="14">int<pos:position pos:line="69" pos:column="17"/></name></type> <name pos:line="69" pos:column="18">i<pos:position pos:line="69" pos:column="19"/></name> <init pos:line="69" pos:column="20">= <expr><literal type="number" pos:line="69" pos:column="22">0<pos:position pos:line="69" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="69" pos:column="24"/></init> <condition><expr><name pos:line="69" pos:column="25">i<pos:position pos:line="69" pos:column="26"/></name> <operator pos:line="69" pos:column="27">&lt;<pos:position pos:line="69" pos:column="31"/></operator> <name pos:line="69" pos:column="29">swap_num<pos:position pos:line="69" pos:column="37"/></name></expr>;<pos:position pos:line="69" pos:column="38"/></condition> <incr><expr><name pos:line="69" pos:column="39">i<pos:position pos:line="69" pos:column="40"/></name><operator pos:line="69" pos:column="40">++<pos:position pos:line="69" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="69" pos:column="43"/></control>
        <block pos:line="70" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="71" pos:column="17">char<pos:position pos:line="71" pos:column="21"/></name></type> <name><name pos:line="71" pos:column="22">path<pos:position pos:line="71" pos:column="26"/></name><index pos:line="71" pos:column="26">[<expr><name pos:line="71" pos:column="27">PATH_MAX<pos:position pos:line="71" pos:column="35"/></name></expr>]<pos:position pos:line="71" pos:column="36"/></index></name></decl>;<pos:position pos:line="71" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="72" pos:column="17">gauge_t<pos:position pos:line="72" pos:column="24"/></name></type> <name pos:line="72" pos:column="25">this_total<pos:position pos:line="72" pos:column="35"/></name></decl>;<pos:position pos:line="72" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="73" pos:column="17">gauge_t<pos:position pos:line="73" pos:column="24"/></name></type> <name pos:line="73" pos:column="25">this_avail<pos:position pos:line="73" pos:column="35"/></name></decl>;<pos:position pos:line="73" pos:column="36"/></decl_stmt>

                <if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><operator pos:line="75" pos:column="21">(<pos:position pos:line="75" pos:column="22"/></operator><name><name pos:line="75" pos:column="22">s<pos:position pos:line="75" pos:column="23"/></name><operator pos:line="75" pos:column="23">-&gt;<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="25">swt_ent<pos:position pos:line="75" pos:column="32"/></name><index pos:line="75" pos:column="32">[<expr><name pos:line="75" pos:column="33">i<pos:position pos:line="75" pos:column="34"/></name></expr>]<pos:position pos:line="75" pos:column="35"/></index></name><operator pos:line="75" pos:column="35">.<pos:position pos:line="75" pos:column="36"/></operator><name pos:line="75" pos:column="36">ste_flags<pos:position pos:line="75" pos:column="45"/></name> <operator pos:line="75" pos:column="46">&amp;<pos:position pos:line="75" pos:column="51"/></operator> <name pos:line="75" pos:column="48">ST_INDEL<pos:position pos:line="75" pos:column="56"/></name><operator pos:line="75" pos:column="56">)<pos:position pos:line="75" pos:column="57"/></operator> <operator pos:line="75" pos:column="58">!=<pos:position pos:line="75" pos:column="60"/></operator> <literal type="number" pos:line="75" pos:column="61">0<pos:position pos:line="75" pos:column="62"/></literal></expr>)<pos:position pos:line="75" pos:column="63"/></condition><then pos:line="75" pos:column="63">
                        <block type="pseudo"><continue pos:line="76" pos:column="25">continue;<pos:position pos:line="76" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="78" pos:column="17">this_total<pos:position pos:line="78" pos:column="27"/></name> <operator pos:line="78" pos:column="28">=<pos:position pos:line="78" pos:column="29"/></operator> <call pos:line="78" pos:column="30">(<name pos:line="78" pos:column="31">gauge_t<pos:position pos:line="78" pos:column="38"/></name>) <argument_list pos:line="78" pos:column="40">(<argument><expr><name><name pos:line="78" pos:column="41">s<pos:position pos:line="78" pos:column="42"/></name><operator pos:line="78" pos:column="42">-&gt;<pos:position pos:line="78" pos:column="47"/></operator><name pos:line="78" pos:column="44">swt_ent<pos:position pos:line="78" pos:column="51"/></name><index pos:line="78" pos:column="51">[<expr><name pos:line="78" pos:column="52">i<pos:position pos:line="78" pos:column="53"/></name></expr>]<pos:position pos:line="78" pos:column="54"/></index></name><operator pos:line="78" pos:column="54">.<pos:position pos:line="78" pos:column="55"/></operator><name pos:line="78" pos:column="55">ste_pages<pos:position pos:line="78" pos:column="64"/></name> <operator pos:line="78" pos:column="65">*<pos:position pos:line="78" pos:column="66"/></operator> <name pos:line="78" pos:column="67">pagesize<pos:position pos:line="78" pos:column="75"/></name></expr></argument>)<pos:position pos:line="78" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><name pos:line="79" pos:column="17">this_avail<pos:position pos:line="79" pos:column="27"/></name> <operator pos:line="79" pos:column="28">=<pos:position pos:line="79" pos:column="29"/></operator> <call pos:line="79" pos:column="30">(<name pos:line="79" pos:column="31">gauge_t<pos:position pos:line="79" pos:column="38"/></name>) <argument_list pos:line="79" pos:column="40">(<argument><expr><name><name pos:line="79" pos:column="41">s<pos:position pos:line="79" pos:column="42"/></name><operator pos:line="79" pos:column="42">-&gt;<pos:position pos:line="79" pos:column="47"/></operator><name pos:line="79" pos:column="44">swt_ent<pos:position pos:line="79" pos:column="51"/></name><index pos:line="79" pos:column="51">[<expr><name pos:line="79" pos:column="52">i<pos:position pos:line="79" pos:column="53"/></name></expr>]<pos:position pos:line="79" pos:column="54"/></index></name><operator pos:line="79" pos:column="54">.<pos:position pos:line="79" pos:column="55"/></operator><name pos:line="79" pos:column="55">ste_free<pos:position pos:line="79" pos:column="63"/></name>  <operator pos:line="79" pos:column="65">*<pos:position pos:line="79" pos:column="66"/></operator> <name pos:line="79" pos:column="67">pagesize<pos:position pos:line="79" pos:column="75"/></name></expr></argument>)<pos:position pos:line="79" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="77"/></expr_stmt>

		<comment type="block" pos:line="81" pos:column="17">/* Shortcut for the "combined" setting (default) */</comment>
		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><operator pos:line="82" pos:column="21">!<pos:position pos:line="82" pos:column="22"/></operator><name pos:line="82" pos:column="22">report_by_device<pos:position pos:line="82" pos:column="38"/></name></expr>)<pos:position pos:line="82" pos:column="39"/></condition><then pos:line="82" pos:column="39">
		<block pos:line="83" pos:column="17">{
			<expr_stmt><expr><name pos:line="84" pos:column="25">avail<pos:position pos:line="84" pos:column="30"/></name> <operator pos:line="84" pos:column="31">+=<pos:position pos:line="84" pos:column="33"/></operator> <name pos:line="84" pos:column="34">this_avail<pos:position pos:line="84" pos:column="44"/></name></expr>;<pos:position pos:line="84" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="85" pos:column="25">total<pos:position pos:line="85" pos:column="30"/></name> <operator pos:line="85" pos:column="31">+=<pos:position pos:line="85" pos:column="33"/></operator> <name pos:line="85" pos:column="34">this_total<pos:position pos:line="85" pos:column="44"/></name></expr>;<pos:position pos:line="85" pos:column="45"/></expr_stmt>
			<continue pos:line="86" pos:column="25">continue;<pos:position pos:line="86" pos:column="34"/></continue>
		}<pos:position pos:line="87" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="89" pos:column="17">sstrncpy<pos:position pos:line="89" pos:column="25"/></name> <argument_list pos:line="89" pos:column="26">(<argument><expr><name pos:line="89" pos:column="27">path<pos:position pos:line="89" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="33">s<pos:position pos:line="89" pos:column="34"/></name><operator pos:line="89" pos:column="34">-&gt;<pos:position pos:line="89" pos:column="39"/></operator><name pos:line="89" pos:column="36">swt_ent<pos:position pos:line="89" pos:column="43"/></name><index pos:line="89" pos:column="43">[<expr><name pos:line="89" pos:column="44">i<pos:position pos:line="89" pos:column="45"/></name></expr>]<pos:position pos:line="89" pos:column="46"/></index></name><operator pos:line="89" pos:column="46">.<pos:position pos:line="89" pos:column="47"/></operator><name pos:line="89" pos:column="47">ste_path<pos:position pos:line="89" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="89" pos:column="57">sizeof <argument_list pos:line="89" pos:column="64">(<argument><expr><name pos:line="89" pos:column="65">path<pos:position pos:line="89" pos:column="69"/></name></expr></argument>)<pos:position pos:line="89" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="89" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="90" pos:column="17">escape_slashes<pos:position pos:line="90" pos:column="31"/></name> <argument_list pos:line="90" pos:column="32">(<argument><expr><name pos:line="90" pos:column="33">path<pos:position pos:line="90" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="90" pos:column="39">sizeof <argument_list pos:line="90" pos:column="46">(<argument><expr><name pos:line="90" pos:column="47">path<pos:position pos:line="90" pos:column="51"/></name></expr></argument>)<pos:position pos:line="90" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="90" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="54"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="92" pos:column="17">swap_submit_usage<pos:position pos:line="92" pos:column="34"/></name> <argument_list pos:line="92" pos:column="35">(<argument><expr><name pos:line="92" pos:column="36">path<pos:position pos:line="92" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="42">this_total<pos:position pos:line="92" pos:column="52"/></name> <operator pos:line="92" pos:column="53">-<pos:position pos:line="92" pos:column="54"/></operator> <name pos:line="92" pos:column="55">this_avail<pos:position pos:line="92" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="67">this_avail<pos:position pos:line="92" pos:column="77"/></name></expr></argument>,
				<argument><expr><name pos:line="93" pos:column="33">NULL<pos:position pos:line="93" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="39">NAN<pos:position pos:line="93" pos:column="42"/></name></expr></argument>)<pos:position pos:line="93" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="94" pos:column="10"/></block></for> <comment type="block" pos:line="94" pos:column="11">/* for (swap_num) */</comment>

        <if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">total<pos:position pos:line="96" pos:column="18"/></name> <operator pos:line="96" pos:column="19">&lt;<pos:position pos:line="96" pos:column="23"/></operator> <name pos:line="96" pos:column="21">avail<pos:position pos:line="96" pos:column="26"/></name></expr>)<pos:position pos:line="96" pos:column="27"/></condition><then pos:line="96" pos:column="27">
        <block pos:line="97" pos:column="9">{
                <expr_stmt><expr><call><name pos:line="98" pos:column="17">ERROR<pos:position pos:line="98" pos:column="22"/></name> <argument_list pos:line="98" pos:column="23">(<argument><expr><literal type="string" pos:line="98" pos:column="24">"swap plugin: Total swap space (%g) is less than free swap space (%g)."<pos:position pos:line="98" pos:column="95"/></literal></expr></argument>,
                                <argument><expr><name pos:line="99" pos:column="33">total<pos:position pos:line="99" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="40">avail<pos:position pos:line="99" pos:column="45"/></name></expr></argument>)<pos:position pos:line="99" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="100" pos:column="17">sfree<pos:position pos:line="100" pos:column="22"/></name> <argument_list pos:line="100" pos:column="23">(<argument><expr><name pos:line="100" pos:column="24">s_paths<pos:position pos:line="100" pos:column="31"/></name></expr></argument>)<pos:position pos:line="100" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="101" pos:column="17">sfree<pos:position pos:line="101" pos:column="22"/></name> <argument_list pos:line="101" pos:column="23">(<argument><expr><name pos:line="101" pos:column="24">s<pos:position pos:line="101" pos:column="25"/></name></expr></argument>)<pos:position pos:line="101" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="27"/></expr_stmt>
                <return pos:line="102" pos:column="17">return <expr><operator pos:line="102" pos:column="24">(<pos:position pos:line="102" pos:column="25"/></operator><operator pos:line="102" pos:column="25">-<pos:position pos:line="102" pos:column="26"/></operator><literal type="number" pos:line="102" pos:column="26">1<pos:position pos:line="102" pos:column="27"/></literal><operator pos:line="102" pos:column="27">)<pos:position pos:line="102" pos:column="28"/></operator></expr>;<pos:position pos:line="102" pos:column="29"/></return>
        }<pos:position pos:line="103" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="105" pos:column="9">/* If the "separate" option was specified (report_by_device == 1), all
	 * values have already been dispatched from within the loop. */</comment>
	<if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><operator pos:line="107" pos:column="13">!<pos:position pos:line="107" pos:column="14"/></operator><name pos:line="107" pos:column="14">report_by_device<pos:position pos:line="107" pos:column="30"/></name></expr>)<pos:position pos:line="107" pos:column="31"/></condition><then pos:line="107" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="108" pos:column="17">swap_submit_usage<pos:position pos:line="108" pos:column="34"/></name> <argument_list pos:line="108" pos:column="35">(<argument><expr><name pos:line="108" pos:column="36">NULL<pos:position pos:line="108" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="42">total<pos:position pos:line="108" pos:column="47"/></name> <operator pos:line="108" pos:column="48">-<pos:position pos:line="108" pos:column="49"/></operator> <name pos:line="108" pos:column="50">avail<pos:position pos:line="108" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="57">avail<pos:position pos:line="108" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="64">NULL<pos:position pos:line="108" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="70">NAN<pos:position pos:line="108" pos:column="73"/></name></expr></argument>)<pos:position pos:line="108" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="75"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="110" pos:column="9">sfree<pos:position pos:line="110" pos:column="14"/></name> <argument_list pos:line="110" pos:column="15">(<argument><expr><name pos:line="110" pos:column="16">s_paths<pos:position pos:line="110" pos:column="23"/></name></expr></argument>)<pos:position pos:line="110" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="111" pos:column="9">sfree<pos:position pos:line="111" pos:column="14"/></name> <argument_list pos:line="111" pos:column="15">(<argument><expr><name pos:line="111" pos:column="16">s<pos:position pos:line="111" pos:column="17"/></name></expr></argument>)<pos:position pos:line="111" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="19"/></expr_stmt>
	<return pos:line="112" pos:column="9">return <expr><operator pos:line="112" pos:column="16">(<pos:position pos:line="112" pos:column="17"/></operator><literal type="number" pos:line="112" pos:column="17">0<pos:position pos:line="112" pos:column="18"/></literal><operator pos:line="112" pos:column="18">)<pos:position pos:line="112" pos:column="19"/></operator></expr>;<pos:position pos:line="112" pos:column="20"/></return>
}<pos:position pos:line="113" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_852_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">config_add_instance<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">oconfig_item_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">ci<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">memcached_t<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">st<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Disable automatic generation of default instance in the init callback. */</comment>
  <expr_stmt><expr><name pos:line="8" pos:column="3">memcached_have_instances<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <literal type="number" pos:line="8" pos:column="30">1<pos:position pos:line="8" pos:column="31"/></literal></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">st<pos:position pos:line="10" pos:column="5"/></name> <operator pos:line="10" pos:column="6">=<pos:position pos:line="10" pos:column="7"/></operator> <call><name pos:line="10" pos:column="8">malloc<pos:position pos:line="10" pos:column="14"/></name> <argument_list pos:line="10" pos:column="15">(<argument><expr><sizeof pos:line="10" pos:column="16">sizeof <argument_list pos:line="10" pos:column="23">(<argument><expr><operator pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">st<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">st<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">==<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">NULL<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name> <argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="string" pos:line="13" pos:column="12">"memcached plugin: malloc failed."<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">memset<pos:position pos:line="17" pos:column="9"/></name> <argument_list pos:line="17" pos:column="10">(<argument><expr><name pos:line="17" pos:column="11">st<pos:position pos:line="17" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="15">0<pos:position pos:line="17" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="18">sizeof <argument_list pos:line="17" pos:column="25">(<argument><expr><operator pos:line="17" pos:column="26">*<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">st<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">st<pos:position pos:line="18" pos:column="5"/></name><operator pos:line="18" pos:column="5">-&gt;<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="7">name<pos:position pos:line="18" pos:column="11"/></name></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">NULL<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">st<pos:position pos:line="19" pos:column="5"/></name><operator pos:line="19" pos:column="5">-&gt;<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="7">socket<pos:position pos:line="19" pos:column="13"/></name></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">NULL<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">st<pos:position pos:line="20" pos:column="5"/></name><operator pos:line="20" pos:column="5">-&gt;<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="7">host<pos:position pos:line="20" pos:column="11"/></name></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">NULL<pos:position pos:line="20" pos:column="18"/></name></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">st<pos:position pos:line="21" pos:column="5"/></name><operator pos:line="21" pos:column="5">-&gt;<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="7">port<pos:position pos:line="21" pos:column="11"/></name></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <name pos:line="21" pos:column="14">NULL<pos:position pos:line="21" pos:column="18"/></name></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><call><name pos:line="23" pos:column="7">strcasecmp<pos:position pos:line="23" pos:column="17"/></name> <argument_list pos:line="23" pos:column="18">(<argument><expr><name><name pos:line="23" pos:column="19">ci<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">key<pos:position pos:line="23" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="28">"Plugin"<pos:position pos:line="23" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call> <operator pos:line="23" pos:column="38">==<pos:position pos:line="23" pos:column="40"/></operator> <literal type="number" pos:line="23" pos:column="41">0<pos:position pos:line="23" pos:column="42"/></literal></expr>)<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43"> <comment type="block" pos:line="23" pos:column="44">/* default instance */</comment>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="5">st<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">name<pos:position pos:line="24" pos:column="13"/></name></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">sstrdup<pos:position pos:line="24" pos:column="23"/></name> <argument_list pos:line="24" pos:column="24">(<argument><expr><literal type="string" pos:line="24" pos:column="25">"__legacy__"<pos:position pos:line="24" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt></block></then>
  <else pos:line="25" pos:column="3">else <comment type="block" pos:line="25" pos:column="8">/* &lt;Instance /&gt; block */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="5">status<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">cf_util_get_string<pos:position pos:line="26" pos:column="32"/></name> <argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">ci<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="38">&amp;<pos:position pos:line="26" pos:column="43"/></operator><name><name pos:line="26" pos:column="39">st<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">name<pos:position pos:line="26" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt></block></else></if>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">status<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">!=<pos:position pos:line="27" pos:column="16"/></operator> <literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal></expr>)<pos:position pos:line="27" pos:column="19"/></condition><then pos:line="27" pos:column="19">
  <block pos:line="28" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">sfree<pos:position pos:line="29" pos:column="10"/></name> <argument_list pos:line="29" pos:column="11">(<argument><expr><name pos:line="29" pos:column="12">st<pos:position pos:line="29" pos:column="14"/></name></expr></argument>)<pos:position pos:line="29" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="16"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">status<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">)<pos:position pos:line="30" pos:column="20"/></operator></expr>;<pos:position pos:line="30" pos:column="21"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">assert<pos:position pos:line="32" pos:column="9"/></name> <argument_list pos:line="32" pos:column="10">(<argument><expr><name><name pos:line="32" pos:column="11">st<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">-&gt;<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="15">name<pos:position pos:line="32" pos:column="19"/></name></name> <operator pos:line="32" pos:column="20">!=<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="23">NULL<pos:position pos:line="32" pos:column="27"/></name></expr></argument>)<pos:position pos:line="32" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>

  <for pos:line="34" pos:column="3">for <control pos:line="34" pos:column="7">(<init><expr><name pos:line="34" pos:column="8">i<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <literal type="number" pos:line="34" pos:column="12">0<pos:position pos:line="34" pos:column="13"/></literal></expr>;<pos:position pos:line="34" pos:column="14"/></init> <condition><expr><name pos:line="34" pos:column="15">i<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">&lt;<pos:position pos:line="34" pos:column="21"/></operator> <name><name pos:line="34" pos:column="19">ci<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">-&gt;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="23">children_num<pos:position pos:line="34" pos:column="35"/></name></name></expr>;<pos:position pos:line="34" pos:column="36"/></condition> <incr><expr><name pos:line="34" pos:column="37">i<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">++<pos:position pos:line="34" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="41"/></control>
  <block pos:line="35" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">oconfig_item_t<pos:position pos:line="36" pos:column="19"/></name> <modifier pos:line="36" pos:column="20">*<pos:position pos:line="36" pos:column="21"/></modifier></type><name pos:line="36" pos:column="21">child<pos:position pos:line="36" pos:column="26"/></name> <init pos:line="36" pos:column="27">= <expr><name><name pos:line="36" pos:column="29">ci<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">-&gt;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="33">children<pos:position pos:line="36" pos:column="41"/></name></name> <operator pos:line="36" pos:column="42">+<pos:position pos:line="36" pos:column="43"/></operator> <name pos:line="36" pos:column="44">i<pos:position pos:line="36" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="36" pos:column="46"/></decl_stmt>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><call><name pos:line="38" pos:column="9">strcasecmp<pos:position pos:line="38" pos:column="19"/></name> <argument_list pos:line="38" pos:column="20">(<argument><expr><literal type="string" pos:line="38" pos:column="21">"Socket"<pos:position pos:line="38" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="31">child<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-&gt;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="38">key<pos:position pos:line="38" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call> <operator pos:line="38" pos:column="43">==<pos:position pos:line="38" pos:column="45"/></operator> <literal type="number" pos:line="38" pos:column="46">0<pos:position pos:line="38" pos:column="47"/></literal></expr>)<pos:position pos:line="38" pos:column="48"/></condition><then pos:line="38" pos:column="48">
      <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="7">status<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">cf_util_get_string<pos:position pos:line="39" pos:column="34"/></name> <argument_list pos:line="39" pos:column="35">(<argument><expr><name pos:line="39" pos:column="36">child<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="43">&amp;<pos:position pos:line="39" pos:column="48"/></operator><name><name pos:line="39" pos:column="44">st<pos:position pos:line="39" pos:column="46"/></name><operator pos:line="39" pos:column="46">-&gt;<pos:position pos:line="39" pos:column="51"/></operator><name pos:line="39" pos:column="48">socket<pos:position pos:line="39" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="56"/></expr_stmt></block></then>
    <elseif pos:line="40" pos:column="5">else <if pos:line="40" pos:column="10">if <condition pos:line="40" pos:column="13">(<expr><call><name pos:line="40" pos:column="14">strcasecmp<pos:position pos:line="40" pos:column="24"/></name> <argument_list pos:line="40" pos:column="25">(<argument><expr><literal type="string" pos:line="40" pos:column="26">"Host"<pos:position pos:line="40" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="34">child<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">-&gt;<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="41">key<pos:position pos:line="40" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call> <operator pos:line="40" pos:column="46">==<pos:position pos:line="40" pos:column="48"/></operator> <literal type="number" pos:line="40" pos:column="49">0<pos:position pos:line="40" pos:column="50"/></literal></expr>)<pos:position pos:line="40" pos:column="51"/></condition><then pos:line="40" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="7">status<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">cf_util_get_string<pos:position pos:line="41" pos:column="34"/></name> <argument_list pos:line="41" pos:column="35">(<argument><expr><name pos:line="41" pos:column="36">child<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="43">&amp;<pos:position pos:line="41" pos:column="48"/></operator><name><name pos:line="41" pos:column="44">st<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">-&gt;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="48">host<pos:position pos:line="41" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="42" pos:column="5">else <if pos:line="42" pos:column="10">if <condition pos:line="42" pos:column="13">(<expr><call><name pos:line="42" pos:column="14">strcasecmp<pos:position pos:line="42" pos:column="24"/></name> <argument_list pos:line="42" pos:column="25">(<argument><expr><literal type="string" pos:line="42" pos:column="26">"Port"<pos:position pos:line="42" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="34">child<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">-&gt;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="41">key<pos:position pos:line="42" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="45"/></argument_list></call> <operator pos:line="42" pos:column="46">==<pos:position pos:line="42" pos:column="48"/></operator> <literal type="number" pos:line="42" pos:column="49">0<pos:position pos:line="42" pos:column="50"/></literal></expr>)<pos:position pos:line="42" pos:column="51"/></condition><then pos:line="42" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="7">status<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <call><name pos:line="43" pos:column="16">cf_util_get_service<pos:position pos:line="43" pos:column="35"/></name> <argument_list pos:line="43" pos:column="36">(<argument><expr><name pos:line="43" pos:column="37">child<pos:position pos:line="43" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="44">&amp;<pos:position pos:line="43" pos:column="49"/></operator><name><name pos:line="43" pos:column="45">st<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">-&gt;<pos:position pos:line="43" pos:column="52"/></operator><name pos:line="43" pos:column="49">port<pos:position pos:line="43" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="55"/></expr_stmt></block></then></if></elseif>
    <else pos:line="44" pos:column="5">else
    <block pos:line="45" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">WARNING<pos:position pos:line="46" pos:column="14"/></name> <argument_list pos:line="46" pos:column="15">(<argument><expr><literal type="string" pos:line="46" pos:column="16">"memcached plugin: Option `%s' not allowed here."<pos:position pos:line="46" pos:column="65"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="47" pos:column="11">child<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">key<pos:position pos:line="47" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="48" pos:column="7">status<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <operator pos:line="48" pos:column="16">-<pos:position pos:line="48" pos:column="17"/></operator><literal type="number" pos:line="48" pos:column="17">1<pos:position pos:line="48" pos:column="18"/></literal></expr>;<pos:position pos:line="48" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">status<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">!=<pos:position pos:line="51" pos:column="18"/></operator> <literal type="number" pos:line="51" pos:column="19">0<pos:position pos:line="51" pos:column="20"/></literal></expr>)<pos:position pos:line="51" pos:column="21"/></condition><then pos:line="51" pos:column="21">
      <block type="pseudo"><break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="53" pos:column="4"/></block></for>

  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><name pos:line="55" pos:column="7">status<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">==<pos:position pos:line="55" pos:column="16"/></operator> <literal type="number" pos:line="55" pos:column="17">0<pos:position pos:line="55" pos:column="18"/></literal></expr>)<pos:position pos:line="55" pos:column="19"/></condition><then pos:line="55" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="5">status<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <call><name pos:line="56" pos:column="14">memcached_add_read_callback<pos:position pos:line="56" pos:column="41"/></name> <argument_list pos:line="56" pos:column="42">(<argument><expr><name pos:line="56" pos:column="43">st<pos:position pos:line="56" pos:column="45"/></name></expr></argument>)<pos:position pos:line="56" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="47"/></expr_stmt></block></then></if>

  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><name pos:line="58" pos:column="7">status<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">!=<pos:position pos:line="58" pos:column="16"/></operator> <literal type="number" pos:line="58" pos:column="17">0<pos:position pos:line="58" pos:column="18"/></literal></expr>)<pos:position pos:line="58" pos:column="19"/></condition><then pos:line="58" pos:column="19">
  <block pos:line="59" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">memcached_free<pos:position pos:line="60" pos:column="19"/></name><argument_list pos:line="60" pos:column="19">(<argument><expr><name pos:line="60" pos:column="20">st<pos:position pos:line="60" pos:column="22"/></name></expr></argument>)<pos:position pos:line="60" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="24"/></expr_stmt>
    <return pos:line="61" pos:column="5">return <expr><operator pos:line="61" pos:column="12">(<pos:position pos:line="61" pos:column="13"/></operator><operator pos:line="61" pos:column="13">-<pos:position pos:line="61" pos:column="14"/></operator><literal type="number" pos:line="61" pos:column="14">1<pos:position pos:line="61" pos:column="15"/></literal><operator pos:line="61" pos:column="15">)<pos:position pos:line="61" pos:column="16"/></operator></expr>;<pos:position pos:line="61" pos:column="17"/></return>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <return pos:line="64" pos:column="3">return <expr><operator pos:line="64" pos:column="10">(<pos:position pos:line="64" pos:column="11"/></operator><literal type="number" pos:line="64" pos:column="11">0<pos:position pos:line="64" pos:column="12"/></literal><operator pos:line="64" pos:column="12">)<pos:position pos:line="64" pos:column="13"/></operator></expr>;<pos:position pos:line="64" pos:column="14"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_31_collectd-4.2.5.cpp" pos:tabs="8"><function_decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">lt_ptr<pos:position pos:line="1" pos:column="14"/></name></type>
<name pos:line="2" pos:column="1">sys_bedl_sym<pos:position pos:line="2" pos:column="13"/></name> <parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">loader_data<pos:position pos:line="2" pos:column="26"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">module<pos:position pos:line="2" pos:column="34"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">symbol<pos:position pos:line="2" pos:column="42"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
     <decl_stmt><decl><type><name pos:line="3" pos:column="6">lt_user_data<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">loader_data<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">lt_module<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">module<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="5" pos:column="6">const<pos:position pos:line="5" pos:column="11"/></specifier> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">symbol<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">lt_ptr<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">address<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">image_id<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">image<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><operator pos:line="8" pos:column="20">(<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">image_id<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">)<pos:position pos:line="8" pos:column="30"/></operator> <name pos:line="8" pos:column="31">module<pos:position pos:line="8" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="38"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">get_image_symbol<pos:position pos:line="10" pos:column="23"/></name> <argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">image<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">symbol<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">B_SYMBOL_TYPE_ANY<pos:position pos:line="10" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="59">address<pos:position pos:line="10" pos:column="66"/></name></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call> <operator pos:line="10" pos:column="68">!=<pos:position pos:line="10" pos:column="70"/></operator> <name pos:line="10" pos:column="71">B_OK<pos:position pos:line="10" pos:column="75"/></name></expr>)<pos:position pos:line="10" pos:column="76"/></condition><then pos:line="10" pos:column="76">
    <block pos:line="11" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">LT_DLMUTEX_SETERROR<pos:position pos:line="12" pos:column="26"/></name> <argument_list pos:line="12" pos:column="27">(<argument><expr><call><name pos:line="12" pos:column="28">LT_DLSTRERROR<pos:position pos:line="12" pos:column="41"/></name> <argument_list pos:line="12" pos:column="42">(<argument><expr><name pos:line="12" pos:column="43">SYMBOL_NOT_FOUND<pos:position pos:line="12" pos:column="59"/></name></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><name pos:line="13" pos:column="7">address<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

  <return pos:line="16" pos:column="3">return <expr><name pos:line="16" pos:column="10">address<pos:position pos:line="16" pos:column="17"/></name></expr>;<pos:position pos:line="16" pos:column="18"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function_decl></unit>

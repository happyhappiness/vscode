<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1715_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cx_list_free<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">llist_t<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">list<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list> <comment type="block" pos:line="1" pos:column="41">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">llentry_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">le<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">le<pos:position pos:line="5" pos:column="5"/></name> <operator pos:line="5" pos:column="6">=<pos:position pos:line="5" pos:column="7"/></operator> <call><name pos:line="5" pos:column="8">llist_head<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">list<pos:position pos:line="5" pos:column="23"/></name></expr></argument>)<pos:position pos:line="5" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt>
  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><name pos:line="6" pos:column="10">le<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">!=<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition> <block pos:line="6" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">llentry_t<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">le_next<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">le_next<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name><name pos:line="9" pos:column="15">le<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">next<pos:position pos:line="9" pos:column="23"/></name></name></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">sfree<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><name><name pos:line="11" pos:column="11">le<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">key<pos:position pos:line="11" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">cx_xpath_free<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name><name pos:line="12" pos:column="19">le<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">-&gt;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="23">value<pos:position pos:line="12" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">le<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <name pos:line="14" pos:column="10">le_next<pos:position pos:line="14" pos:column="17"/></name></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">llist_destroy<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">list<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

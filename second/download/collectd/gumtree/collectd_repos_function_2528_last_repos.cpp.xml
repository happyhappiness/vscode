<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2528_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">server_open<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">lcc_listener_t<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">srv<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list> <block pos:line="1" pos:column="38">{
  <decl_stmt><decl><type><name><name pos:line="2" pos:column="3">struct<pos:position pos:line="2" pos:column="9"/></name> <name pos:line="2" pos:column="10">addrinfo<pos:position pos:line="2" pos:column="18"/></name></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">res<pos:position pos:line="2" pos:column="23"/></name> <init pos:line="2" pos:column="24">= <expr><name pos:line="2" pos:column="26">NULL<pos:position pos:line="2" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><call><name pos:line="3" pos:column="16">getaddrinfo<pos:position pos:line="3" pos:column="27"/></name><argument_list pos:line="3" pos:column="27">(<argument><expr><ternary><condition><expr><name><name pos:line="3" pos:column="28">srv<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">-&gt;<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="33">node<pos:position pos:line="3" pos:column="37"/></name></name></expr> ?<pos:position pos:line="3" pos:column="39"/></condition><then pos:line="3" pos:column="39"> <expr><name><name pos:line="3" pos:column="40">srv<pos:position pos:line="3" pos:column="43"/></name><operator pos:line="3" pos:column="43">-&gt;<pos:position pos:line="3" pos:column="48"/></operator><name pos:line="3" pos:column="45">node<pos:position pos:line="3" pos:column="49"/></name></name></expr> <pos:position pos:line="3" pos:column="50"/></then><else pos:line="3" pos:column="50">: <expr><literal type="string" pos:line="3" pos:column="52">"::"<pos:position pos:line="3" pos:column="56"/></literal></expr></else></ternary></expr></argument>,
                           <argument><expr><ternary><condition><expr><name><name pos:line="4" pos:column="28">srv<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">service<pos:position pos:line="4" pos:column="40"/></name></name></expr> ?<pos:position pos:line="4" pos:column="42"/></condition><then pos:line="4" pos:column="42"> <expr><name><name pos:line="4" pos:column="43">srv<pos:position pos:line="4" pos:column="46"/></name><operator pos:line="4" pos:column="46">-&gt;<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="48">service<pos:position pos:line="4" pos:column="55"/></name></name></expr> <pos:position pos:line="4" pos:column="56"/></then><else pos:line="4" pos:column="56">: <expr><name pos:line="4" pos:column="58">LCC_DEFAULT_PORT<pos:position pos:line="4" pos:column="74"/></name></expr></else></ternary></expr></argument>,
                           <argument><expr><operator pos:line="5" pos:column="28">&amp;<pos:position pos:line="5" pos:column="33"/></operator><operator pos:line="5" pos:column="29">(<pos:position pos:line="5" pos:column="30"/></operator>struct <name pos:line="5" pos:column="37">addrinfo<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">)<pos:position pos:line="5" pos:column="46"/></operator><block pos:line="5" pos:column="46">{
                               <expr><operator pos:line="6" pos:column="32">.<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">ai_flags<pos:position pos:line="6" pos:column="41"/></name> <operator pos:line="6" pos:column="42">=<pos:position pos:line="6" pos:column="43"/></operator> <name pos:line="6" pos:column="44">AI_ADDRCONFIG<pos:position pos:line="6" pos:column="57"/></name></expr>,
                               <expr><operator pos:line="7" pos:column="32">.<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">ai_family<pos:position pos:line="7" pos:column="42"/></name> <operator pos:line="7" pos:column="43">=<pos:position pos:line="7" pos:column="44"/></operator> <name pos:line="7" pos:column="45">AF_UNSPEC<pos:position pos:line="7" pos:column="54"/></name></expr>,
                               <expr><operator pos:line="8" pos:column="32">.<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">ai_socktype<pos:position pos:line="8" pos:column="44"/></name> <operator pos:line="8" pos:column="45">=<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="47">SOCK_DGRAM<pos:position pos:line="8" pos:column="57"/></name></expr>,
                           }<pos:position pos:line="9" pos:column="29"/></block></expr></argument>,
                           <argument><expr><operator pos:line="10" pos:column="28">&amp;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="29">res<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">status<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">!=<pos:position pos:line="11" pos:column="16"/></operator> <literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">status<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></return></block></then></if>

  <for pos:line="14" pos:column="3">for <control pos:line="14" pos:column="7">(<init><decl><type><name><name pos:line="14" pos:column="8">struct<pos:position pos:line="14" pos:column="14"/></name> <name pos:line="14" pos:column="15">addrinfo<pos:position pos:line="14" pos:column="23"/></name></name> <modifier pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></modifier><name pos:line="14" pos:column="25">ai<pos:position pos:line="14" pos:column="27"/></name></type> <init pos:line="14" pos:column="28">= <expr><name pos:line="14" pos:column="30">res<pos:position pos:line="14" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="34"/></init> <condition><expr><name pos:line="14" pos:column="35">ai<pos:position pos:line="14" pos:column="37"/></name> <operator pos:line="14" pos:column="38">!=<pos:position pos:line="14" pos:column="40"/></operator> <name pos:line="14" pos:column="41">NULL<pos:position pos:line="14" pos:column="45"/></name></expr>;<pos:position pos:line="14" pos:column="46"/></condition> <incr><expr><name pos:line="14" pos:column="47">ai<pos:position pos:line="14" pos:column="49"/></name> <operator pos:line="14" pos:column="50">=<pos:position pos:line="14" pos:column="51"/></operator> <name><name pos:line="14" pos:column="52">ai<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">-&gt;<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="56">ai_next<pos:position pos:line="14" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="64"/></control> <block pos:line="14" pos:column="65">{
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">srv<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">conn<pos:position pos:line="15" pos:column="14"/></name></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">socket<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name><name pos:line="15" pos:column="24">ai<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">ai_family<pos:position pos:line="15" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="39">ai<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">ai_socktype<pos:position pos:line="15" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="56">0<pos:position pos:line="15" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="59"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">srv<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">conn<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">==<pos:position pos:line="16" pos:column="21"/></operator> <operator pos:line="16" pos:column="22">-<pos:position pos:line="16" pos:column="23"/></operator><literal type="number" pos:line="16" pos:column="23">1<pos:position pos:line="16" pos:column="24"/></literal></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25">
      <block type="pseudo"><continue pos:line="17" pos:column="7">continue;<pos:position pos:line="17" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="19" pos:column="5">status<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">server_bind_socket<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">srv<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">ai<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">status<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">!=<pos:position pos:line="20" pos:column="18"/></operator> <literal type="number" pos:line="20" pos:column="19">0<pos:position pos:line="20" pos:column="20"/></literal></expr>)<pos:position pos:line="20" pos:column="21"/></condition><then pos:line="20" pos:column="21"> <block pos:line="20" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">close<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><name><name pos:line="21" pos:column="13">srv<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">conn<pos:position pos:line="21" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="22" pos:column="7">srv<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">conn<pos:position pos:line="22" pos:column="16"/></name></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <operator pos:line="22" pos:column="19">-<pos:position pos:line="22" pos:column="20"/></operator><literal type="number" pos:line="22" pos:column="20">1<pos:position pos:line="22" pos:column="21"/></literal></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
      <continue pos:line="23" pos:column="7">continue;<pos:position pos:line="23" pos:column="16"/></continue>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <break pos:line="26" pos:column="5">break;<pos:position pos:line="26" pos:column="11"/></break>
  }<pos:position pos:line="27" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="29" pos:column="3">freeaddrinfo<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name pos:line="29" pos:column="16">res<pos:position pos:line="29" pos:column="19"/></name></expr></argument>)<pos:position pos:line="29" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name><name pos:line="31" pos:column="7">srv<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">conn<pos:position pos:line="31" pos:column="16"/></name></name> <operator pos:line="31" pos:column="17">&gt;=<pos:position pos:line="31" pos:column="22"/></operator> <literal type="number" pos:line="31" pos:column="20">0<pos:position pos:line="31" pos:column="21"/></literal></expr>)<pos:position pos:line="31" pos:column="22"/></condition><then pos:line="31" pos:column="22">
    <block type="pseudo"><return pos:line="32" pos:column="5">return <expr><literal type="number" pos:line="32" pos:column="12">0<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></return></block></then></if>
  <return pos:line="33" pos:column="3">return <expr><ternary><condition><expr><name pos:line="33" pos:column="10">status<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">!=<pos:position pos:line="33" pos:column="19"/></operator> <literal type="number" pos:line="33" pos:column="20">0<pos:position pos:line="33" pos:column="21"/></literal></expr> ?<pos:position pos:line="33" pos:column="23"/></condition><then pos:line="33" pos:column="23"> <expr><name pos:line="33" pos:column="24">status<pos:position pos:line="33" pos:column="30"/></name></expr> <pos:position pos:line="33" pos:column="31"/></then><else pos:line="33" pos:column="31">: <expr><operator pos:line="33" pos:column="33">-<pos:position pos:line="33" pos:column="34"/></operator><literal type="number" pos:line="33" pos:column="34">1<pos:position pos:line="33" pos:column="35"/></literal></expr></else></ternary></expr>;<pos:position pos:line="33" pos:column="36"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_10_collectd-4.4.3.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">error_t<pos:position pos:line="1" pos:column="15"/></name></type>
<name pos:line="2" pos:column="1">argz_create_sep<pos:position pos:line="2" pos:column="16"/></name> <argument_list pos:line="2" pos:column="17">(<argument><expr><name pos:line="2" pos:column="18">str<pos:position pos:line="2" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="23">delim<pos:position pos:line="2" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="30">pargz<pos:position pos:line="2" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="37">pargz_len<pos:position pos:line="2" pos:column="46"/></name></expr></argument>)<pos:position pos:line="2" pos:column="47"/></argument_list>
     const <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier><name pos:line="3" pos:column="18">str<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">int<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">delim<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="5" pos:column="6">char<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier><modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type><name pos:line="5" pos:column="13">pargz<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="6" pos:column="6">size_t<pos:position pos:line="6" pos:column="12"/></name> <modifier pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></modifier></type><name pos:line="6" pos:column="14">pargz_len<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
<block pos:line="7" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">argz_len<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">argz<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">assert<pos:position pos:line="11" pos:column="9"/></name> <argument_list pos:line="11" pos:column="10">(<argument><expr><name pos:line="11" pos:column="11">str<pos:position pos:line="11" pos:column="14"/></name></expr></argument>)<pos:position pos:line="11" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">assert<pos:position pos:line="12" pos:column="9"/></name> <argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">pargz<pos:position pos:line="12" pos:column="16"/></name></expr></argument>)<pos:position pos:line="12" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">assert<pos:position pos:line="13" pos:column="9"/></name> <argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">pargz_len<pos:position pos:line="13" pos:column="20"/></name></expr></argument>)<pos:position pos:line="13" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="15" pos:column="3">/* Make a copy of STR, but replacing each occurrence of
     DELIM with '\0'.  */</comment>
  <expr_stmt><expr><name pos:line="17" pos:column="3">argz_len<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal><operator pos:line="17" pos:column="15">+<pos:position pos:line="17" pos:column="16"/></operator> <call><name pos:line="17" pos:column="17">LT_STRLEN<pos:position pos:line="17" pos:column="26"/></name> <argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">str<pos:position pos:line="17" pos:column="31"/></name></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">argz_len<pos:position pos:line="18" pos:column="15"/></name></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16">
    <block pos:line="19" pos:column="5">{
      <decl_stmt><decl><type><specifier pos:line="20" pos:column="7">const<pos:position pos:line="20" pos:column="12"/></specifier> <name pos:line="20" pos:column="13">char<pos:position pos:line="20" pos:column="17"/></name> <modifier pos:line="20" pos:column="18">*<pos:position pos:line="20" pos:column="19"/></modifier></type><name pos:line="20" pos:column="19">p<pos:position pos:line="20" pos:column="20"/></name></decl>;<pos:position pos:line="20" pos:column="21"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="21" pos:column="7">char<pos:position pos:line="21" pos:column="11"/></name> <modifier pos:line="21" pos:column="12">*<pos:position pos:line="21" pos:column="13"/></modifier></type><name pos:line="21" pos:column="13">q<pos:position pos:line="21" pos:column="14"/></name></decl>;<pos:position pos:line="21" pos:column="15"/></decl_stmt>

      <expr_stmt><expr><name pos:line="23" pos:column="7">argz<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">LT_DLMALLOC<pos:position pos:line="23" pos:column="25"/></name> <argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">char<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="33">argz_len<pos:position pos:line="23" pos:column="41"/></name></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><operator pos:line="24" pos:column="11">!<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">argz<pos:position pos:line="24" pos:column="16"/></name></expr>)<pos:position pos:line="24" pos:column="17"/></condition><then pos:line="24" pos:column="17">
	<block type="pseudo"><return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">ENOMEM<pos:position pos:line="25" pos:column="22"/></name></expr>;<pos:position pos:line="25" pos:column="23"/></return></block></then></if>

      <for pos:line="27" pos:column="7">for <control pos:line="27" pos:column="11">(<init><expr><name pos:line="27" pos:column="12">p<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">str<pos:position pos:line="27" pos:column="19"/></name></expr><operator pos:line="27" pos:column="19">,<pos:position pos:line="27" pos:column="20"/></operator> <expr><name pos:line="27" pos:column="21">q<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <name pos:line="27" pos:column="25">argz<pos:position pos:line="27" pos:column="29"/></name></expr>;<pos:position pos:line="27" pos:column="30"/></init> <condition><expr><operator pos:line="27" pos:column="31">*<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">p<pos:position pos:line="27" pos:column="33"/></name> <operator pos:line="27" pos:column="34">!=<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="37">LT_EOS_CHAR<pos:position pos:line="27" pos:column="48"/></name></expr>;<pos:position pos:line="27" pos:column="49"/></condition> <incr><expr><operator pos:line="27" pos:column="50">++<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="52">p<pos:position pos:line="27" pos:column="53"/></name></expr></incr>)<pos:position pos:line="27" pos:column="54"/></control>
	<block pos:line="28" pos:column="9">{
	  <if pos:line="29" pos:column="11">if <condition pos:line="29" pos:column="14">(<expr><operator pos:line="29" pos:column="15">*<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">p<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">==<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">delim<pos:position pos:line="29" pos:column="26"/></name></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27">
	    <block pos:line="30" pos:column="13">{
	      <comment type="block" pos:line="31" pos:column="15">/* Ignore leading delimiters, and fold consecutive
		 delimiters in STR into a single '\0' in ARGZ.  */</comment>
	      <if pos:line="33" pos:column="15">if <condition pos:line="33" pos:column="18">(<expr><operator pos:line="33" pos:column="19">(<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="20">q<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">&gt;<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="24">argz<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">)<pos:position pos:line="33" pos:column="29"/></operator> <operator pos:line="33" pos:column="30">&amp;&amp;<pos:position pos:line="33" pos:column="40"/></operator> <operator pos:line="33" pos:column="33">(<pos:position pos:line="33" pos:column="34"/></operator><name><name pos:line="33" pos:column="34">q<pos:position pos:line="33" pos:column="35"/></name><index pos:line="33" pos:column="35">[<expr><operator pos:line="33" pos:column="36">-<pos:position pos:line="33" pos:column="37"/></operator><literal type="number" pos:line="33" pos:column="37">1<pos:position pos:line="33" pos:column="38"/></literal></expr>]<pos:position pos:line="33" pos:column="39"/></index></name> <operator pos:line="33" pos:column="40">!=<pos:position pos:line="33" pos:column="42"/></operator> <name pos:line="33" pos:column="43">LT_EOS_CHAR<pos:position pos:line="33" pos:column="54"/></name><operator pos:line="33" pos:column="54">)<pos:position pos:line="33" pos:column="55"/></operator></expr>)<pos:position pos:line="33" pos:column="56"/></condition><then pos:line="33" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="34" pos:column="17">*<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">q<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">++<pos:position pos:line="34" pos:column="21"/></operator> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">LT_EOS_CHAR<pos:position pos:line="34" pos:column="35"/></name></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt></block></then>
	      <else pos:line="35" pos:column="15">else
		<block type="pseudo"><expr_stmt><expr><operator pos:line="36" pos:column="17">--<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="19">argz_len<pos:position pos:line="36" pos:column="27"/></name></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt></block></else></if>
	    }<pos:position pos:line="37" pos:column="14"/></block></then>
	  <else pos:line="38" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><operator pos:line="39" pos:column="13">*<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">q<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">++<pos:position pos:line="39" pos:column="17"/></operator> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <operator pos:line="39" pos:column="20">*<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="21">p<pos:position pos:line="39" pos:column="22"/></name></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt></block></else></if>
	}<pos:position pos:line="40" pos:column="10"/></block></for>
      <comment type="block" pos:line="41" pos:column="7">/* Copy terminating LT_EOS_CHAR.  */</comment>
      <expr_stmt><expr><operator pos:line="42" pos:column="7">*<pos:position pos:line="42" pos:column="8"/></operator><name pos:line="42" pos:column="8">q<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">=<pos:position pos:line="42" pos:column="11"/></operator> <operator pos:line="42" pos:column="12">*<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">p<pos:position pos:line="42" pos:column="14"/></name></expr>;<pos:position pos:line="42" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="45" pos:column="3">/* If ARGZ_LEN has shrunk to nothing, release ARGZ's memory.  */</comment>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><operator pos:line="46" pos:column="7">!<pos:position pos:line="46" pos:column="8"/></operator><name pos:line="46" pos:column="8">argz_len<pos:position pos:line="46" pos:column="16"/></name></expr>)<pos:position pos:line="46" pos:column="17"/></condition><then pos:line="46" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="5">LT_DLFREE<pos:position pos:line="47" pos:column="14"/></name> <argument_list pos:line="47" pos:column="15">(<argument><expr><name pos:line="47" pos:column="16">argz<pos:position pos:line="47" pos:column="20"/></name></expr></argument>)<pos:position pos:line="47" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="22"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="49" pos:column="3">/* Assign new values.  */</comment>
  <expr_stmt><expr><operator pos:line="50" pos:column="3">*<pos:position pos:line="50" pos:column="4"/></operator><name pos:line="50" pos:column="4">pargz<pos:position pos:line="50" pos:column="9"/></name> <operator pos:line="50" pos:column="10">=<pos:position pos:line="50" pos:column="11"/></operator> <name pos:line="50" pos:column="12">argz<pos:position pos:line="50" pos:column="16"/></name></expr>;<pos:position pos:line="50" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="51" pos:column="3">*<pos:position pos:line="51" pos:column="4"/></operator><name pos:line="51" pos:column="4">pargz_len<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <name pos:line="51" pos:column="16">argz_len<pos:position pos:line="51" pos:column="24"/></name></expr>;<pos:position pos:line="51" pos:column="25"/></expr_stmt>

  <return pos:line="53" pos:column="3">return <expr><literal type="number" pos:line="53" pos:column="10">0<pos:position pos:line="53" pos:column="11"/></literal></expr>;<pos:position pos:line="53" pos:column="12"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_364_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">camqp_config_connection<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">oconfig_item_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ci<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="56">/* {{{ */</comment>
                                   <parameter><decl><type><name pos:line="2" pos:column="36">_Bool<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">publish<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list> <block pos:line="2" pos:column="51">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">camqp_config_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">conf<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">conf<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <call><name pos:line="6" pos:column="10">calloc<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><literal type="number" pos:line="6" pos:column="17">1<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="20">sizeof<argument_list pos:line="6" pos:column="26">(<argument><expr><operator pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">conf<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">conf<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">NULL<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20"> <block pos:line="7" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"amqp plugin: calloc failed."<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">ENOMEM<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">)<pos:position pos:line="9" pos:column="20"/></operator></expr>;<pos:position pos:line="9" pos:column="21"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* Initialize "conf" {{{ */</comment>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">conf<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">publish<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">publish<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">conf<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">name<pos:position pos:line="14" pos:column="13"/></name></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">conf<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">format<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">CAMQP_FORMAT_COMMAND<pos:position pos:line="15" pos:column="38"/></name></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">conf<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">host<pos:position pos:line="16" pos:column="13"/></name></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">conf<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">port<pos:position pos:line="17" pos:column="13"/></name></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <literal type="number" pos:line="17" pos:column="16">5672<pos:position pos:line="17" pos:column="20"/></literal></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">conf<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">vhost<pos:position pos:line="18" pos:column="14"/></name></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">NULL<pos:position pos:line="18" pos:column="21"/></name></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">conf<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">user<pos:position pos:line="19" pos:column="13"/></name></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">NULL<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">conf<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">password<pos:position pos:line="20" pos:column="17"/></name></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">NULL<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">conf<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">exchange<pos:position pos:line="21" pos:column="17"/></name></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">NULL<pos:position pos:line="21" pos:column="24"/></name></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">conf<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">routing_key<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <name pos:line="22" pos:column="23">NULL<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">conf<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">connection_retry_delay<pos:position pos:line="23" pos:column="31"/></name></name> <operator pos:line="23" pos:column="32">=<pos:position pos:line="23" pos:column="33"/></operator> <literal type="number" pos:line="23" pos:column="34">0<pos:position pos:line="23" pos:column="35"/></literal></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* publish only */</comment>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">conf<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">delivery_mode<pos:position pos:line="26" pos:column="22"/></name></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="25">CAMQP_DM_VOLATILE<pos:position pos:line="26" pos:column="42"/></name></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">conf<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">store_rates<pos:position pos:line="27" pos:column="20"/></name></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <literal type="number" pos:line="27" pos:column="23">0<pos:position pos:line="27" pos:column="24"/></literal></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">conf<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">-&gt;<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="9">graphite_flags<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <literal type="number" pos:line="28" pos:column="26">0<pos:position pos:line="28" pos:column="27"/></literal></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt>
  <comment type="block" pos:line="29" pos:column="3">/* publish &amp; graphite only */</comment>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">conf<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">prefix<pos:position pos:line="30" pos:column="15"/></name></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">NULL<pos:position pos:line="30" pos:column="22"/></name></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">conf<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">-&gt;<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="9">postfix<pos:position pos:line="31" pos:column="16"/></name></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">NULL<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">conf<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">-&gt;<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="9">escape_char<pos:position pos:line="32" pos:column="20"/></name></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <literal type="char" pos:line="32" pos:column="23">'_'<pos:position pos:line="32" pos:column="26"/></literal></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>
  <comment type="block" pos:line="33" pos:column="3">/* subscribe only */</comment>
  <expr_stmt><expr><name><name pos:line="34" pos:column="3">conf<pos:position pos:line="34" pos:column="7"/></name><operator pos:line="34" pos:column="7">-&gt;<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="9">exchange_type<pos:position pos:line="34" pos:column="22"/></name></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <name pos:line="34" pos:column="25">NULL<pos:position pos:line="34" pos:column="29"/></name></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">conf<pos:position pos:line="35" pos:column="7"/></name><operator pos:line="35" pos:column="7">-&gt;<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="9">queue<pos:position pos:line="35" pos:column="14"/></name></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <name pos:line="35" pos:column="17">NULL<pos:position pos:line="35" pos:column="21"/></name></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="36" pos:column="3">conf<pos:position pos:line="36" pos:column="7"/></name><operator pos:line="36" pos:column="7">-&gt;<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="9">queue_durable<pos:position pos:line="36" pos:column="22"/></name></name> <operator pos:line="36" pos:column="23">=<pos:position pos:line="36" pos:column="24"/></operator> <literal type="number" pos:line="36" pos:column="25">0<pos:position pos:line="36" pos:column="26"/></literal></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="37" pos:column="3">conf<pos:position pos:line="37" pos:column="7"/></name><operator pos:line="37" pos:column="7">-&gt;<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="9">queue_auto_delete<pos:position pos:line="37" pos:column="26"/></name></name> <operator pos:line="37" pos:column="27">=<pos:position pos:line="37" pos:column="28"/></operator> <literal type="number" pos:line="37" pos:column="29">1<pos:position pos:line="37" pos:column="30"/></literal></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
  <comment type="block" pos:line="38" pos:column="3">/* general */</comment>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">conf<pos:position pos:line="39" pos:column="7"/></name><operator pos:line="39" pos:column="7">-&gt;<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="9">connection<pos:position pos:line="39" pos:column="19"/></name></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="22">NULL<pos:position pos:line="39" pos:column="26"/></name></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">pthread_mutex_init<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><operator pos:line="40" pos:column="22">&amp;<pos:position pos:line="40" pos:column="27"/></operator><name><name pos:line="40" pos:column="23">conf<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">lock<pos:position pos:line="40" pos:column="33"/></name></name></expr></argument>, <comment type="block" pos:line="40" pos:column="35">/* attr = */</comment> <argument><expr><name pos:line="40" pos:column="48">NULL<pos:position pos:line="40" pos:column="52"/></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
  <comment type="block" pos:line="41" pos:column="3">/* }}} */</comment>

  <expr_stmt><expr><name pos:line="43" pos:column="3">status<pos:position pos:line="43" pos:column="9"/></name> <operator pos:line="43" pos:column="10">=<pos:position pos:line="43" pos:column="11"/></operator> <call><name pos:line="43" pos:column="12">cf_util_get_string<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">ci<pos:position pos:line="43" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="35">&amp;<pos:position pos:line="43" pos:column="40"/></operator><name><name pos:line="43" pos:column="36">conf<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">-&gt;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="42">name<pos:position pos:line="43" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="48"/></expr_stmt>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">status<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">!=<pos:position pos:line="44" pos:column="16"/></operator> <literal type="number" pos:line="44" pos:column="17">0<pos:position pos:line="44" pos:column="18"/></literal></expr>)<pos:position pos:line="44" pos:column="19"/></condition><then pos:line="44" pos:column="19"> <block pos:line="44" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">sfree<pos:position pos:line="45" pos:column="10"/></name><argument_list pos:line="45" pos:column="10">(<argument><expr><name pos:line="45" pos:column="11">conf<pos:position pos:line="45" pos:column="15"/></name></expr></argument>)<pos:position pos:line="45" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="17"/></expr_stmt>
    <return pos:line="46" pos:column="5">return <expr><operator pos:line="46" pos:column="12">(<pos:position pos:line="46" pos:column="13"/></operator><name pos:line="46" pos:column="13">status<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">)<pos:position pos:line="46" pos:column="20"/></operator></expr>;<pos:position pos:line="46" pos:column="21"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <for pos:line="49" pos:column="3">for <control pos:line="49" pos:column="7">(<init><decl><type><name pos:line="49" pos:column="8">int<pos:position pos:line="49" pos:column="11"/></name></type> <name pos:line="49" pos:column="12">i<pos:position pos:line="49" pos:column="13"/></name> <init pos:line="49" pos:column="14">= <expr><literal type="number" pos:line="49" pos:column="16">0<pos:position pos:line="49" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="49" pos:column="18"/></init> <condition><expr><name pos:line="49" pos:column="19">i<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">&lt;<pos:position pos:line="49" pos:column="25"/></operator> <name><name pos:line="49" pos:column="23">ci<pos:position pos:line="49" pos:column="25"/></name><operator pos:line="49" pos:column="25">-&gt;<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="27">children_num<pos:position pos:line="49" pos:column="39"/></name></name></expr>;<pos:position pos:line="49" pos:column="40"/></condition> <incr><expr><name pos:line="49" pos:column="41">i<pos:position pos:line="49" pos:column="42"/></name><operator pos:line="49" pos:column="42">++<pos:position pos:line="49" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="49" pos:column="45"/></control> <block pos:line="49" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="50" pos:column="5">oconfig_item_t<pos:position pos:line="50" pos:column="19"/></name> <modifier pos:line="50" pos:column="20">*<pos:position pos:line="50" pos:column="21"/></modifier></type><name pos:line="50" pos:column="21">child<pos:position pos:line="50" pos:column="26"/></name> <init pos:line="50" pos:column="27">= <expr><name><name pos:line="50" pos:column="29">ci<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">-&gt;<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="33">children<pos:position pos:line="50" pos:column="41"/></name></name> <operator pos:line="50" pos:column="42">+<pos:position pos:line="50" pos:column="43"/></operator> <name pos:line="50" pos:column="44">i<pos:position pos:line="50" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="50" pos:column="46"/></decl_stmt>

    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><call><name pos:line="52" pos:column="9">strcasecmp<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><literal type="string" pos:line="52" pos:column="20">"Host"<pos:position pos:line="52" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="28">child<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">-&gt;<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="35">key<pos:position pos:line="52" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></call> <operator pos:line="52" pos:column="40">==<pos:position pos:line="52" pos:column="42"/></operator> <literal type="number" pos:line="52" pos:column="43">0<pos:position pos:line="52" pos:column="44"/></literal></expr>)<pos:position pos:line="52" pos:column="45"/></condition><then pos:line="52" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="7">status<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <call><name pos:line="53" pos:column="16">cf_util_get_string<pos:position pos:line="53" pos:column="34"/></name><argument_list pos:line="53" pos:column="34">(<argument><expr><name pos:line="53" pos:column="35">child<pos:position pos:line="53" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="42">&amp;<pos:position pos:line="53" pos:column="47"/></operator><name><name pos:line="53" pos:column="43">conf<pos:position pos:line="53" pos:column="47"/></name><operator pos:line="53" pos:column="47">-&gt;<pos:position pos:line="53" pos:column="52"/></operator><name pos:line="53" pos:column="49">host<pos:position pos:line="53" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="55"/></expr_stmt></block></then>
    <elseif pos:line="54" pos:column="5">else <if pos:line="54" pos:column="10">if <condition pos:line="54" pos:column="13">(<expr><call><name pos:line="54" pos:column="14">strcasecmp<pos:position pos:line="54" pos:column="24"/></name><argument_list pos:line="54" pos:column="24">(<argument><expr><literal type="string" pos:line="54" pos:column="25">"Port"<pos:position pos:line="54" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="33">child<pos:position pos:line="54" pos:column="38"/></name><operator pos:line="54" pos:column="38">-&gt;<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="40">key<pos:position pos:line="54" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="44"/></argument_list></call> <operator pos:line="54" pos:column="45">==<pos:position pos:line="54" pos:column="47"/></operator> <literal type="number" pos:line="54" pos:column="48">0<pos:position pos:line="54" pos:column="49"/></literal></expr>)<pos:position pos:line="54" pos:column="50"/></condition><then pos:line="54" pos:column="50"> <block pos:line="54" pos:column="51">{
      <expr_stmt><expr><name pos:line="55" pos:column="7">status<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <call><name pos:line="55" pos:column="16">cf_util_get_port_number<pos:position pos:line="55" pos:column="39"/></name><argument_list pos:line="55" pos:column="39">(<argument><expr><name pos:line="55" pos:column="40">child<pos:position pos:line="55" pos:column="45"/></name></expr></argument>)<pos:position pos:line="55" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="47"/></expr_stmt>
      <if pos:line="56" pos:column="7">if <condition pos:line="56" pos:column="10">(<expr><name pos:line="56" pos:column="11">status<pos:position pos:line="56" pos:column="17"/></name> <operator pos:line="56" pos:column="18">&gt;<pos:position pos:line="56" pos:column="22"/></operator> <literal type="number" pos:line="56" pos:column="20">0<pos:position pos:line="56" pos:column="21"/></literal></expr>)<pos:position pos:line="56" pos:column="22"/></condition><then pos:line="56" pos:column="22"> <block pos:line="56" pos:column="23">{
        <expr_stmt><expr><name><name pos:line="57" pos:column="9">conf<pos:position pos:line="57" pos:column="13"/></name><operator pos:line="57" pos:column="13">-&gt;<pos:position pos:line="57" pos:column="18"/></operator><name pos:line="57" pos:column="15">port<pos:position pos:line="57" pos:column="19"/></name></name> <operator pos:line="57" pos:column="20">=<pos:position pos:line="57" pos:column="21"/></operator> <name pos:line="57" pos:column="22">status<pos:position pos:line="57" pos:column="28"/></name></expr>;<pos:position pos:line="57" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="58" pos:column="9">status<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <literal type="number" pos:line="58" pos:column="18">0<pos:position pos:line="58" pos:column="19"/></literal></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="59" pos:column="8"/></block></then></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if></elseif> <elseif pos:line="60" pos:column="7">else <if pos:line="60" pos:column="12">if <condition pos:line="60" pos:column="15">(<expr><call><name pos:line="60" pos:column="16">strcasecmp<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><literal type="string" pos:line="60" pos:column="27">"VHost"<pos:position pos:line="60" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="36">child<pos:position pos:line="60" pos:column="41"/></name><operator pos:line="60" pos:column="41">-&gt;<pos:position pos:line="60" pos:column="46"/></operator><name pos:line="60" pos:column="43">key<pos:position pos:line="60" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="47"/></argument_list></call> <operator pos:line="60" pos:column="48">==<pos:position pos:line="60" pos:column="50"/></operator> <literal type="number" pos:line="60" pos:column="51">0<pos:position pos:line="60" pos:column="52"/></literal></expr>)<pos:position pos:line="60" pos:column="53"/></condition><then pos:line="60" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="7">status<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator> <call><name pos:line="61" pos:column="16">cf_util_get_string<pos:position pos:line="61" pos:column="34"/></name><argument_list pos:line="61" pos:column="34">(<argument><expr><name pos:line="61" pos:column="35">child<pos:position pos:line="61" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="42">&amp;<pos:position pos:line="61" pos:column="47"/></operator><name><name pos:line="61" pos:column="43">conf<pos:position pos:line="61" pos:column="47"/></name><operator pos:line="61" pos:column="47">-&gt;<pos:position pos:line="61" pos:column="52"/></operator><name pos:line="61" pos:column="49">vhost<pos:position pos:line="61" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="56"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="62" pos:column="5">else <if pos:line="62" pos:column="10">if <condition pos:line="62" pos:column="13">(<expr><call><name pos:line="62" pos:column="14">strcasecmp<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><literal type="string" pos:line="62" pos:column="25">"User"<pos:position pos:line="62" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="33">child<pos:position pos:line="62" pos:column="38"/></name><operator pos:line="62" pos:column="38">-&gt;<pos:position pos:line="62" pos:column="43"/></operator><name pos:line="62" pos:column="40">key<pos:position pos:line="62" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="44"/></argument_list></call> <operator pos:line="62" pos:column="45">==<pos:position pos:line="62" pos:column="47"/></operator> <literal type="number" pos:line="62" pos:column="48">0<pos:position pos:line="62" pos:column="49"/></literal></expr>)<pos:position pos:line="62" pos:column="50"/></condition><then pos:line="62" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="7">status<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">=<pos:position pos:line="63" pos:column="15"/></operator> <call><name pos:line="63" pos:column="16">cf_util_get_string<pos:position pos:line="63" pos:column="34"/></name><argument_list pos:line="63" pos:column="34">(<argument><expr><name pos:line="63" pos:column="35">child<pos:position pos:line="63" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="42">&amp;<pos:position pos:line="63" pos:column="47"/></operator><name><name pos:line="63" pos:column="43">conf<pos:position pos:line="63" pos:column="47"/></name><operator pos:line="63" pos:column="47">-&gt;<pos:position pos:line="63" pos:column="52"/></operator><name pos:line="63" pos:column="49">user<pos:position pos:line="63" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="55"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="64" pos:column="5">else <if pos:line="64" pos:column="10">if <condition pos:line="64" pos:column="13">(<expr><call><name pos:line="64" pos:column="14">strcasecmp<pos:position pos:line="64" pos:column="24"/></name><argument_list pos:line="64" pos:column="24">(<argument><expr><literal type="string" pos:line="64" pos:column="25">"Password"<pos:position pos:line="64" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="37">child<pos:position pos:line="64" pos:column="42"/></name><operator pos:line="64" pos:column="42">-&gt;<pos:position pos:line="64" pos:column="47"/></operator><name pos:line="64" pos:column="44">key<pos:position pos:line="64" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="48"/></argument_list></call> <operator pos:line="64" pos:column="49">==<pos:position pos:line="64" pos:column="51"/></operator> <literal type="number" pos:line="64" pos:column="52">0<pos:position pos:line="64" pos:column="53"/></literal></expr>)<pos:position pos:line="64" pos:column="54"/></condition><then pos:line="64" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="7">status<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">=<pos:position pos:line="65" pos:column="15"/></operator> <call><name pos:line="65" pos:column="16">cf_util_get_string<pos:position pos:line="65" pos:column="34"/></name><argument_list pos:line="65" pos:column="34">(<argument><expr><name pos:line="65" pos:column="35">child<pos:position pos:line="65" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="42">&amp;<pos:position pos:line="65" pos:column="47"/></operator><name><name pos:line="65" pos:column="43">conf<pos:position pos:line="65" pos:column="47"/></name><operator pos:line="65" pos:column="47">-&gt;<pos:position pos:line="65" pos:column="52"/></operator><name pos:line="65" pos:column="49">password<pos:position pos:line="65" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="59"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="66" pos:column="5">else <if pos:line="66" pos:column="10">if <condition pos:line="66" pos:column="13">(<expr><call><name pos:line="66" pos:column="14">strcasecmp<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">(<argument><expr><literal type="string" pos:line="66" pos:column="25">"Exchange"<pos:position pos:line="66" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="37">child<pos:position pos:line="66" pos:column="42"/></name><operator pos:line="66" pos:column="42">-&gt;<pos:position pos:line="66" pos:column="47"/></operator><name pos:line="66" pos:column="44">key<pos:position pos:line="66" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="48"/></argument_list></call> <operator pos:line="66" pos:column="49">==<pos:position pos:line="66" pos:column="51"/></operator> <literal type="number" pos:line="66" pos:column="52">0<pos:position pos:line="66" pos:column="53"/></literal></expr>)<pos:position pos:line="66" pos:column="54"/></condition><then pos:line="66" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="7">status<pos:position pos:line="67" pos:column="13"/></name> <operator pos:line="67" pos:column="14">=<pos:position pos:line="67" pos:column="15"/></operator> <call><name pos:line="67" pos:column="16">cf_util_get_string<pos:position pos:line="67" pos:column="34"/></name><argument_list pos:line="67" pos:column="34">(<argument><expr><name pos:line="67" pos:column="35">child<pos:position pos:line="67" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="42">&amp;<pos:position pos:line="67" pos:column="47"/></operator><name><name pos:line="67" pos:column="43">conf<pos:position pos:line="67" pos:column="47"/></name><operator pos:line="67" pos:column="47">-&gt;<pos:position pos:line="67" pos:column="52"/></operator><name pos:line="67" pos:column="49">exchange<pos:position pos:line="67" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="59"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="68" pos:column="5">else <if pos:line="68" pos:column="10">if <condition pos:line="68" pos:column="13">(<expr><operator pos:line="68" pos:column="14">(<pos:position pos:line="68" pos:column="15"/></operator><call><name pos:line="68" pos:column="15">strcasecmp<pos:position pos:line="68" pos:column="25"/></name><argument_list pos:line="68" pos:column="25">(<argument><expr><literal type="string" pos:line="68" pos:column="26">"ExchangeType"<pos:position pos:line="68" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="42">child<pos:position pos:line="68" pos:column="47"/></name><operator pos:line="68" pos:column="47">-&gt;<pos:position pos:line="68" pos:column="52"/></operator><name pos:line="68" pos:column="49">key<pos:position pos:line="68" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="53"/></argument_list></call> <operator pos:line="68" pos:column="54">==<pos:position pos:line="68" pos:column="56"/></operator> <literal type="number" pos:line="68" pos:column="57">0<pos:position pos:line="68" pos:column="58"/></literal><operator pos:line="68" pos:column="58">)<pos:position pos:line="68" pos:column="59"/></operator> <operator pos:line="68" pos:column="60">&amp;&amp;<pos:position pos:line="68" pos:column="70"/></operator> <operator pos:line="68" pos:column="63">!<pos:position pos:line="68" pos:column="64"/></operator><name pos:line="68" pos:column="64">publish<pos:position pos:line="68" pos:column="71"/></name></expr>)<pos:position pos:line="68" pos:column="72"/></condition><then pos:line="68" pos:column="72">
      <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="7">status<pos:position pos:line="69" pos:column="13"/></name> <operator pos:line="69" pos:column="14">=<pos:position pos:line="69" pos:column="15"/></operator> <call><name pos:line="69" pos:column="16">cf_util_get_string<pos:position pos:line="69" pos:column="34"/></name><argument_list pos:line="69" pos:column="34">(<argument><expr><name pos:line="69" pos:column="35">child<pos:position pos:line="69" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="42">&amp;<pos:position pos:line="69" pos:column="47"/></operator><name><name pos:line="69" pos:column="43">conf<pos:position pos:line="69" pos:column="47"/></name><operator pos:line="69" pos:column="47">-&gt;<pos:position pos:line="69" pos:column="52"/></operator><name pos:line="69" pos:column="49">exchange_type<pos:position pos:line="69" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="64"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="70" pos:column="5">else <if pos:line="70" pos:column="10">if <condition pos:line="70" pos:column="13">(<expr><operator pos:line="70" pos:column="14">(<pos:position pos:line="70" pos:column="15"/></operator><call><name pos:line="70" pos:column="15">strcasecmp<pos:position pos:line="70" pos:column="25"/></name><argument_list pos:line="70" pos:column="25">(<argument><expr><literal type="string" pos:line="70" pos:column="26">"Queue"<pos:position pos:line="70" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="35">child<pos:position pos:line="70" pos:column="40"/></name><operator pos:line="70" pos:column="40">-&gt;<pos:position pos:line="70" pos:column="45"/></operator><name pos:line="70" pos:column="42">key<pos:position pos:line="70" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="46"/></argument_list></call> <operator pos:line="70" pos:column="47">==<pos:position pos:line="70" pos:column="49"/></operator> <literal type="number" pos:line="70" pos:column="50">0<pos:position pos:line="70" pos:column="51"/></literal><operator pos:line="70" pos:column="51">)<pos:position pos:line="70" pos:column="52"/></operator> <operator pos:line="70" pos:column="53">&amp;&amp;<pos:position pos:line="70" pos:column="63"/></operator> <operator pos:line="70" pos:column="56">!<pos:position pos:line="70" pos:column="57"/></operator><name pos:line="70" pos:column="57">publish<pos:position pos:line="70" pos:column="64"/></name></expr>)<pos:position pos:line="70" pos:column="65"/></condition><then pos:line="70" pos:column="65">
      <block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="7">status<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">=<pos:position pos:line="71" pos:column="15"/></operator> <call><name pos:line="71" pos:column="16">cf_util_get_string<pos:position pos:line="71" pos:column="34"/></name><argument_list pos:line="71" pos:column="34">(<argument><expr><name pos:line="71" pos:column="35">child<pos:position pos:line="71" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="42">&amp;<pos:position pos:line="71" pos:column="47"/></operator><name><name pos:line="71" pos:column="43">conf<pos:position pos:line="71" pos:column="47"/></name><operator pos:line="71" pos:column="47">-&gt;<pos:position pos:line="71" pos:column="52"/></operator><name pos:line="71" pos:column="49">queue<pos:position pos:line="71" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="56"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="72" pos:column="5">else <if pos:line="72" pos:column="10">if <condition pos:line="72" pos:column="13">(<expr><operator pos:line="72" pos:column="14">(<pos:position pos:line="72" pos:column="15"/></operator><call><name pos:line="72" pos:column="15">strcasecmp<pos:position pos:line="72" pos:column="25"/></name><argument_list pos:line="72" pos:column="25">(<argument><expr><literal type="string" pos:line="72" pos:column="26">"QueueDurable"<pos:position pos:line="72" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="42">child<pos:position pos:line="72" pos:column="47"/></name><operator pos:line="72" pos:column="47">-&gt;<pos:position pos:line="72" pos:column="52"/></operator><name pos:line="72" pos:column="49">key<pos:position pos:line="72" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="53"/></argument_list></call> <operator pos:line="72" pos:column="54">==<pos:position pos:line="72" pos:column="56"/></operator> <literal type="number" pos:line="72" pos:column="57">0<pos:position pos:line="72" pos:column="58"/></literal><operator pos:line="72" pos:column="58">)<pos:position pos:line="72" pos:column="59"/></operator> <operator pos:line="72" pos:column="60">&amp;&amp;<pos:position pos:line="72" pos:column="70"/></operator> <operator pos:line="72" pos:column="63">!<pos:position pos:line="72" pos:column="64"/></operator><name pos:line="72" pos:column="64">publish<pos:position pos:line="72" pos:column="71"/></name></expr>)<pos:position pos:line="72" pos:column="72"/></condition><then pos:line="72" pos:column="72">
      <block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="7">status<pos:position pos:line="73" pos:column="13"/></name> <operator pos:line="73" pos:column="14">=<pos:position pos:line="73" pos:column="15"/></operator> <call><name pos:line="73" pos:column="16">cf_util_get_boolean<pos:position pos:line="73" pos:column="35"/></name><argument_list pos:line="73" pos:column="35">(<argument><expr><name pos:line="73" pos:column="36">child<pos:position pos:line="73" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="43">&amp;<pos:position pos:line="73" pos:column="48"/></operator><name><name pos:line="73" pos:column="44">conf<pos:position pos:line="73" pos:column="48"/></name><operator pos:line="73" pos:column="48">-&gt;<pos:position pos:line="73" pos:column="53"/></operator><name pos:line="73" pos:column="50">queue_durable<pos:position pos:line="73" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="65"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="74" pos:column="5">else <if pos:line="74" pos:column="10">if <condition pos:line="74" pos:column="13">(<expr><operator pos:line="74" pos:column="14">(<pos:position pos:line="74" pos:column="15"/></operator><call><name pos:line="74" pos:column="15">strcasecmp<pos:position pos:line="74" pos:column="25"/></name><argument_list pos:line="74" pos:column="25">(<argument><expr><literal type="string" pos:line="74" pos:column="26">"QueueAutoDelete"<pos:position pos:line="74" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="45">child<pos:position pos:line="74" pos:column="50"/></name><operator pos:line="74" pos:column="50">-&gt;<pos:position pos:line="74" pos:column="55"/></operator><name pos:line="74" pos:column="52">key<pos:position pos:line="74" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="56"/></argument_list></call> <operator pos:line="74" pos:column="57">==<pos:position pos:line="74" pos:column="59"/></operator> <literal type="number" pos:line="74" pos:column="60">0<pos:position pos:line="74" pos:column="61"/></literal><operator pos:line="74" pos:column="61">)<pos:position pos:line="74" pos:column="62"/></operator> <operator pos:line="74" pos:column="63">&amp;&amp;<pos:position pos:line="74" pos:column="73"/></operator> <operator pos:line="74" pos:column="66">!<pos:position pos:line="74" pos:column="67"/></operator><name pos:line="74" pos:column="67">publish<pos:position pos:line="74" pos:column="74"/></name></expr>)<pos:position pos:line="74" pos:column="75"/></condition><then pos:line="74" pos:column="75">
      <block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="7">status<pos:position pos:line="75" pos:column="13"/></name> <operator pos:line="75" pos:column="14">=<pos:position pos:line="75" pos:column="15"/></operator> <call><name pos:line="75" pos:column="16">cf_util_get_boolean<pos:position pos:line="75" pos:column="35"/></name><argument_list pos:line="75" pos:column="35">(<argument><expr><name pos:line="75" pos:column="36">child<pos:position pos:line="75" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="43">&amp;<pos:position pos:line="75" pos:column="48"/></operator><name><name pos:line="75" pos:column="44">conf<pos:position pos:line="75" pos:column="48"/></name><operator pos:line="75" pos:column="48">-&gt;<pos:position pos:line="75" pos:column="53"/></operator><name pos:line="75" pos:column="50">queue_auto_delete<pos:position pos:line="75" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="69"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="76" pos:column="5">else <if pos:line="76" pos:column="10">if <condition pos:line="76" pos:column="13">(<expr><call><name pos:line="76" pos:column="14">strcasecmp<pos:position pos:line="76" pos:column="24"/></name><argument_list pos:line="76" pos:column="24">(<argument><expr><literal type="string" pos:line="76" pos:column="25">"RoutingKey"<pos:position pos:line="76" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="39">child<pos:position pos:line="76" pos:column="44"/></name><operator pos:line="76" pos:column="44">-&gt;<pos:position pos:line="76" pos:column="49"/></operator><name pos:line="76" pos:column="46">key<pos:position pos:line="76" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="50"/></argument_list></call> <operator pos:line="76" pos:column="51">==<pos:position pos:line="76" pos:column="53"/></operator> <literal type="number" pos:line="76" pos:column="54">0<pos:position pos:line="76" pos:column="55"/></literal></expr>)<pos:position pos:line="76" pos:column="56"/></condition><then pos:line="76" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="7">status<pos:position pos:line="77" pos:column="13"/></name> <operator pos:line="77" pos:column="14">=<pos:position pos:line="77" pos:column="15"/></operator> <call><name pos:line="77" pos:column="16">cf_util_get_string<pos:position pos:line="77" pos:column="34"/></name><argument_list pos:line="77" pos:column="34">(<argument><expr><name pos:line="77" pos:column="35">child<pos:position pos:line="77" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="42">&amp;<pos:position pos:line="77" pos:column="47"/></operator><name><name pos:line="77" pos:column="43">conf<pos:position pos:line="77" pos:column="47"/></name><operator pos:line="77" pos:column="47">-&gt;<pos:position pos:line="77" pos:column="52"/></operator><name pos:line="77" pos:column="49">routing_key<pos:position pos:line="77" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="62"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="78" pos:column="5">else <if pos:line="78" pos:column="10">if <condition pos:line="78" pos:column="13">(<expr><operator pos:line="78" pos:column="14">(<pos:position pos:line="78" pos:column="15"/></operator><call><name pos:line="78" pos:column="15">strcasecmp<pos:position pos:line="78" pos:column="25"/></name><argument_list pos:line="78" pos:column="25">(<argument><expr><literal type="string" pos:line="78" pos:column="26">"Persistent"<pos:position pos:line="78" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="40">child<pos:position pos:line="78" pos:column="45"/></name><operator pos:line="78" pos:column="45">-&gt;<pos:position pos:line="78" pos:column="50"/></operator><name pos:line="78" pos:column="47">key<pos:position pos:line="78" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="51"/></argument_list></call> <operator pos:line="78" pos:column="52">==<pos:position pos:line="78" pos:column="54"/></operator> <literal type="number" pos:line="78" pos:column="55">0<pos:position pos:line="78" pos:column="56"/></literal><operator pos:line="78" pos:column="56">)<pos:position pos:line="78" pos:column="57"/></operator> <operator pos:line="78" pos:column="58">&amp;&amp;<pos:position pos:line="78" pos:column="68"/></operator> <name pos:line="78" pos:column="61">publish<pos:position pos:line="78" pos:column="68"/></name></expr>)<pos:position pos:line="78" pos:column="69"/></condition><then pos:line="78" pos:column="69"> <block pos:line="78" pos:column="70">{
      <decl_stmt><decl><type><name pos:line="79" pos:column="7">_Bool<pos:position pos:line="79" pos:column="12"/></name></type> <name pos:line="79" pos:column="13">tmp<pos:position pos:line="79" pos:column="16"/></name> <init pos:line="79" pos:column="17">= <expr><literal type="number" pos:line="79" pos:column="19">0<pos:position pos:line="79" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="79" pos:column="21"/></decl_stmt>
      <expr_stmt><expr><name pos:line="80" pos:column="7">status<pos:position pos:line="80" pos:column="13"/></name> <operator pos:line="80" pos:column="14">=<pos:position pos:line="80" pos:column="15"/></operator> <call><name pos:line="80" pos:column="16">cf_util_get_boolean<pos:position pos:line="80" pos:column="35"/></name><argument_list pos:line="80" pos:column="35">(<argument><expr><name pos:line="80" pos:column="36">child<pos:position pos:line="80" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="43">&amp;<pos:position pos:line="80" pos:column="48"/></operator><name pos:line="80" pos:column="44">tmp<pos:position pos:line="80" pos:column="47"/></name></expr></argument>)<pos:position pos:line="80" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="49"/></expr_stmt>
      <if pos:line="81" pos:column="7">if <condition pos:line="81" pos:column="10">(<expr><name pos:line="81" pos:column="11">tmp<pos:position pos:line="81" pos:column="14"/></name></expr>)<pos:position pos:line="81" pos:column="15"/></condition><then pos:line="81" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="82" pos:column="9">conf<pos:position pos:line="82" pos:column="13"/></name><operator pos:line="82" pos:column="13">-&gt;<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="15">delivery_mode<pos:position pos:line="82" pos:column="28"/></name></name> <operator pos:line="82" pos:column="29">=<pos:position pos:line="82" pos:column="30"/></operator> <name pos:line="82" pos:column="31">CAMQP_DM_PERSISTENT<pos:position pos:line="82" pos:column="50"/></name></expr>;<pos:position pos:line="82" pos:column="51"/></expr_stmt></block></then>
      <else pos:line="83" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="84" pos:column="9">conf<pos:position pos:line="84" pos:column="13"/></name><operator pos:line="84" pos:column="13">-&gt;<pos:position pos:line="84" pos:column="18"/></operator><name pos:line="84" pos:column="15">delivery_mode<pos:position pos:line="84" pos:column="28"/></name></name> <operator pos:line="84" pos:column="29">=<pos:position pos:line="84" pos:column="30"/></operator> <name pos:line="84" pos:column="31">CAMQP_DM_VOLATILE<pos:position pos:line="84" pos:column="48"/></name></expr>;<pos:position pos:line="84" pos:column="49"/></expr_stmt></block></else></if>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if></elseif> <elseif pos:line="85" pos:column="7">else <if pos:line="85" pos:column="12">if <condition pos:line="85" pos:column="15">(<expr><operator pos:line="85" pos:column="16">(<pos:position pos:line="85" pos:column="17"/></operator><call><name pos:line="85" pos:column="17">strcasecmp<pos:position pos:line="85" pos:column="27"/></name><argument_list pos:line="85" pos:column="27">(<argument><expr><literal type="string" pos:line="85" pos:column="28">"StoreRates"<pos:position pos:line="85" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="42">child<pos:position pos:line="85" pos:column="47"/></name><operator pos:line="85" pos:column="47">-&gt;<pos:position pos:line="85" pos:column="52"/></operator><name pos:line="85" pos:column="49">key<pos:position pos:line="85" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="53"/></argument_list></call> <operator pos:line="85" pos:column="54">==<pos:position pos:line="85" pos:column="56"/></operator> <literal type="number" pos:line="85" pos:column="57">0<pos:position pos:line="85" pos:column="58"/></literal><operator pos:line="85" pos:column="58">)<pos:position pos:line="85" pos:column="59"/></operator> <operator pos:line="85" pos:column="60">&amp;&amp;<pos:position pos:line="85" pos:column="70"/></operator> <name pos:line="85" pos:column="63">publish<pos:position pos:line="85" pos:column="70"/></name></expr>)<pos:position pos:line="85" pos:column="71"/></condition><then pos:line="85" pos:column="71"> <block pos:line="85" pos:column="72">{
      <expr_stmt><expr><name pos:line="86" pos:column="7">status<pos:position pos:line="86" pos:column="13"/></name> <operator pos:line="86" pos:column="14">=<pos:position pos:line="86" pos:column="15"/></operator> <call><name pos:line="86" pos:column="16">cf_util_get_boolean<pos:position pos:line="86" pos:column="35"/></name><argument_list pos:line="86" pos:column="35">(<argument><expr><name pos:line="86" pos:column="36">child<pos:position pos:line="86" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="43">&amp;<pos:position pos:line="86" pos:column="48"/></operator><name><name pos:line="86" pos:column="44">conf<pos:position pos:line="86" pos:column="48"/></name><operator pos:line="86" pos:column="48">-&gt;<pos:position pos:line="86" pos:column="53"/></operator><name pos:line="86" pos:column="50">store_rates<pos:position pos:line="86" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="63"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="87" pos:column="7">(<pos:position pos:line="87" pos:column="8"/></operator><name pos:line="87" pos:column="8">void<pos:position pos:line="87" pos:column="12"/></name><operator pos:line="87" pos:column="12">)<pos:position pos:line="87" pos:column="13"/></operator><call><name pos:line="87" pos:column="13">cf_util_get_flag<pos:position pos:line="87" pos:column="29"/></name><argument_list pos:line="87" pos:column="29">(<argument><expr><name pos:line="87" pos:column="30">child<pos:position pos:line="87" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="37">&amp;<pos:position pos:line="87" pos:column="42"/></operator><name><name pos:line="87" pos:column="38">conf<pos:position pos:line="87" pos:column="42"/></name><operator pos:line="87" pos:column="42">-&gt;<pos:position pos:line="87" pos:column="47"/></operator><name pos:line="87" pos:column="44">graphite_flags<pos:position pos:line="87" pos:column="58"/></name></name></expr></argument>,
                             <argument><expr><name pos:line="88" pos:column="30">GRAPHITE_STORE_RATES<pos:position pos:line="88" pos:column="50"/></name></expr></argument>)<pos:position pos:line="88" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if></elseif> <elseif pos:line="89" pos:column="7">else <if pos:line="89" pos:column="12">if <condition pos:line="89" pos:column="15">(<expr><operator pos:line="89" pos:column="16">(<pos:position pos:line="89" pos:column="17"/></operator><call><name pos:line="89" pos:column="17">strcasecmp<pos:position pos:line="89" pos:column="27"/></name><argument_list pos:line="89" pos:column="27">(<argument><expr><literal type="string" pos:line="89" pos:column="28">"Format"<pos:position pos:line="89" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="38">child<pos:position pos:line="89" pos:column="43"/></name><operator pos:line="89" pos:column="43">-&gt;<pos:position pos:line="89" pos:column="48"/></operator><name pos:line="89" pos:column="45">key<pos:position pos:line="89" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="49"/></argument_list></call> <operator pos:line="89" pos:column="50">==<pos:position pos:line="89" pos:column="52"/></operator> <literal type="number" pos:line="89" pos:column="53">0<pos:position pos:line="89" pos:column="54"/></literal><operator pos:line="89" pos:column="54">)<pos:position pos:line="89" pos:column="55"/></operator> <operator pos:line="89" pos:column="56">&amp;&amp;<pos:position pos:line="89" pos:column="66"/></operator> <name pos:line="89" pos:column="59">publish<pos:position pos:line="89" pos:column="66"/></name></expr>)<pos:position pos:line="89" pos:column="67"/></condition><then pos:line="89" pos:column="67">
      <block type="pseudo"><expr_stmt><expr><name pos:line="90" pos:column="7">status<pos:position pos:line="90" pos:column="13"/></name> <operator pos:line="90" pos:column="14">=<pos:position pos:line="90" pos:column="15"/></operator> <call><name pos:line="90" pos:column="16">camqp_config_set_format<pos:position pos:line="90" pos:column="39"/></name><argument_list pos:line="90" pos:column="39">(<argument><expr><name pos:line="90" pos:column="40">child<pos:position pos:line="90" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="47">conf<pos:position pos:line="90" pos:column="51"/></name></expr></argument>)<pos:position pos:line="90" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="91" pos:column="5">else <if pos:line="91" pos:column="10">if <condition pos:line="91" pos:column="13">(<expr><operator pos:line="91" pos:column="14">(<pos:position pos:line="91" pos:column="15"/></operator><call><name pos:line="91" pos:column="15">strcasecmp<pos:position pos:line="91" pos:column="25"/></name><argument_list pos:line="91" pos:column="25">(<argument><expr><literal type="string" pos:line="91" pos:column="26">"GraphiteSeparateInstances"<pos:position pos:line="91" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="55">child<pos:position pos:line="91" pos:column="60"/></name><operator pos:line="91" pos:column="60">-&gt;<pos:position pos:line="91" pos:column="65"/></operator><name pos:line="91" pos:column="62">key<pos:position pos:line="91" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="66"/></argument_list></call> <operator pos:line="91" pos:column="67">==<pos:position pos:line="91" pos:column="69"/></operator> <literal type="number" pos:line="91" pos:column="70">0<pos:position pos:line="91" pos:column="71"/></literal><operator pos:line="91" pos:column="71">)<pos:position pos:line="91" pos:column="72"/></operator> <operator pos:line="91" pos:column="73">&amp;&amp;<pos:position pos:line="91" pos:column="83"/></operator>
             <name pos:line="92" pos:column="14">publish<pos:position pos:line="92" pos:column="21"/></name></expr>)<pos:position pos:line="92" pos:column="22"/></condition><then pos:line="92" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><name pos:line="93" pos:column="7">status<pos:position pos:line="93" pos:column="13"/></name> <operator pos:line="93" pos:column="14">=<pos:position pos:line="93" pos:column="15"/></operator> <call><name pos:line="93" pos:column="16">cf_util_get_flag<pos:position pos:line="93" pos:column="32"/></name><argument_list pos:line="93" pos:column="32">(<argument><expr><name pos:line="93" pos:column="33">child<pos:position pos:line="93" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="40">&amp;<pos:position pos:line="93" pos:column="45"/></operator><name><name pos:line="93" pos:column="41">conf<pos:position pos:line="93" pos:column="45"/></name><operator pos:line="93" pos:column="45">-&gt;<pos:position pos:line="93" pos:column="50"/></operator><name pos:line="93" pos:column="47">graphite_flags<pos:position pos:line="93" pos:column="61"/></name></name></expr></argument>,
                                <argument><expr><name pos:line="94" pos:column="33">GRAPHITE_SEPARATE_INSTANCES<pos:position pos:line="94" pos:column="60"/></name></expr></argument>)<pos:position pos:line="94" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="62"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="95" pos:column="5">else <if pos:line="95" pos:column="10">if <condition pos:line="95" pos:column="13">(<expr><operator pos:line="95" pos:column="14">(<pos:position pos:line="95" pos:column="15"/></operator><call><name pos:line="95" pos:column="15">strcasecmp<pos:position pos:line="95" pos:column="25"/></name><argument_list pos:line="95" pos:column="25">(<argument><expr><literal type="string" pos:line="95" pos:column="26">"GraphiteAlwaysAppendDS"<pos:position pos:line="95" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="52">child<pos:position pos:line="95" pos:column="57"/></name><operator pos:line="95" pos:column="57">-&gt;<pos:position pos:line="95" pos:column="62"/></operator><name pos:line="95" pos:column="59">key<pos:position pos:line="95" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="63"/></argument_list></call> <operator pos:line="95" pos:column="64">==<pos:position pos:line="95" pos:column="66"/></operator> <literal type="number" pos:line="95" pos:column="67">0<pos:position pos:line="95" pos:column="68"/></literal><operator pos:line="95" pos:column="68">)<pos:position pos:line="95" pos:column="69"/></operator> <operator pos:line="95" pos:column="70">&amp;&amp;<pos:position pos:line="95" pos:column="80"/></operator> <name pos:line="95" pos:column="73">publish<pos:position pos:line="95" pos:column="80"/></name></expr>)<pos:position pos:line="95" pos:column="81"/></condition><then pos:line="95" pos:column="81">
      <block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="7">status<pos:position pos:line="96" pos:column="13"/></name> <operator pos:line="96" pos:column="14">=<pos:position pos:line="96" pos:column="15"/></operator> <call><name pos:line="96" pos:column="16">cf_util_get_flag<pos:position pos:line="96" pos:column="32"/></name><argument_list pos:line="96" pos:column="32">(<argument><expr><name pos:line="96" pos:column="33">child<pos:position pos:line="96" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="40">&amp;<pos:position pos:line="96" pos:column="45"/></operator><name><name pos:line="96" pos:column="41">conf<pos:position pos:line="96" pos:column="45"/></name><operator pos:line="96" pos:column="45">-&gt;<pos:position pos:line="96" pos:column="50"/></operator><name pos:line="96" pos:column="47">graphite_flags<pos:position pos:line="96" pos:column="61"/></name></name></expr></argument>,
                                <argument><expr><name pos:line="97" pos:column="33">GRAPHITE_ALWAYS_APPEND_DS<pos:position pos:line="97" pos:column="58"/></name></expr></argument>)<pos:position pos:line="97" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="60"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="98" pos:column="5">else <if pos:line="98" pos:column="10">if <condition pos:line="98" pos:column="13">(<expr><operator pos:line="98" pos:column="14">(<pos:position pos:line="98" pos:column="15"/></operator><call><name pos:line="98" pos:column="15">strcasecmp<pos:position pos:line="98" pos:column="25"/></name><argument_list pos:line="98" pos:column="25">(<argument><expr><literal type="string" pos:line="98" pos:column="26">"GraphitePrefix"<pos:position pos:line="98" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="44">child<pos:position pos:line="98" pos:column="49"/></name><operator pos:line="98" pos:column="49">-&gt;<pos:position pos:line="98" pos:column="54"/></operator><name pos:line="98" pos:column="51">key<pos:position pos:line="98" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="55"/></argument_list></call> <operator pos:line="98" pos:column="56">==<pos:position pos:line="98" pos:column="58"/></operator> <literal type="number" pos:line="98" pos:column="59">0<pos:position pos:line="98" pos:column="60"/></literal><operator pos:line="98" pos:column="60">)<pos:position pos:line="98" pos:column="61"/></operator> <operator pos:line="98" pos:column="62">&amp;&amp;<pos:position pos:line="98" pos:column="72"/></operator> <name pos:line="98" pos:column="65">publish<pos:position pos:line="98" pos:column="72"/></name></expr>)<pos:position pos:line="98" pos:column="73"/></condition><then pos:line="98" pos:column="73">
      <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="7">status<pos:position pos:line="99" pos:column="13"/></name> <operator pos:line="99" pos:column="14">=<pos:position pos:line="99" pos:column="15"/></operator> <call><name pos:line="99" pos:column="16">cf_util_get_string<pos:position pos:line="99" pos:column="34"/></name><argument_list pos:line="99" pos:column="34">(<argument><expr><name pos:line="99" pos:column="35">child<pos:position pos:line="99" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="42">&amp;<pos:position pos:line="99" pos:column="47"/></operator><name><name pos:line="99" pos:column="43">conf<pos:position pos:line="99" pos:column="47"/></name><operator pos:line="99" pos:column="47">-&gt;<pos:position pos:line="99" pos:column="52"/></operator><name pos:line="99" pos:column="49">prefix<pos:position pos:line="99" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="57"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="100" pos:column="5">else <if pos:line="100" pos:column="10">if <condition pos:line="100" pos:column="13">(<expr><operator pos:line="100" pos:column="14">(<pos:position pos:line="100" pos:column="15"/></operator><call><name pos:line="100" pos:column="15">strcasecmp<pos:position pos:line="100" pos:column="25"/></name><argument_list pos:line="100" pos:column="25">(<argument><expr><literal type="string" pos:line="100" pos:column="26">"GraphitePostfix"<pos:position pos:line="100" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="45">child<pos:position pos:line="100" pos:column="50"/></name><operator pos:line="100" pos:column="50">-&gt;<pos:position pos:line="100" pos:column="55"/></operator><name pos:line="100" pos:column="52">key<pos:position pos:line="100" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="56"/></argument_list></call> <operator pos:line="100" pos:column="57">==<pos:position pos:line="100" pos:column="59"/></operator> <literal type="number" pos:line="100" pos:column="60">0<pos:position pos:line="100" pos:column="61"/></literal><operator pos:line="100" pos:column="61">)<pos:position pos:line="100" pos:column="62"/></operator> <operator pos:line="100" pos:column="63">&amp;&amp;<pos:position pos:line="100" pos:column="73"/></operator> <name pos:line="100" pos:column="66">publish<pos:position pos:line="100" pos:column="73"/></name></expr>)<pos:position pos:line="100" pos:column="74"/></condition><then pos:line="100" pos:column="74">
      <block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="7">status<pos:position pos:line="101" pos:column="13"/></name> <operator pos:line="101" pos:column="14">=<pos:position pos:line="101" pos:column="15"/></operator> <call><name pos:line="101" pos:column="16">cf_util_get_string<pos:position pos:line="101" pos:column="34"/></name><argument_list pos:line="101" pos:column="34">(<argument><expr><name pos:line="101" pos:column="35">child<pos:position pos:line="101" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="101" pos:column="42">&amp;<pos:position pos:line="101" pos:column="47"/></operator><name><name pos:line="101" pos:column="43">conf<pos:position pos:line="101" pos:column="47"/></name><operator pos:line="101" pos:column="47">-&gt;<pos:position pos:line="101" pos:column="52"/></operator><name pos:line="101" pos:column="49">postfix<pos:position pos:line="101" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="58"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="102" pos:column="5">else <if pos:line="102" pos:column="10">if <condition pos:line="102" pos:column="13">(<expr><operator pos:line="102" pos:column="14">(<pos:position pos:line="102" pos:column="15"/></operator><call><name pos:line="102" pos:column="15">strcasecmp<pos:position pos:line="102" pos:column="25"/></name><argument_list pos:line="102" pos:column="25">(<argument><expr><literal type="string" pos:line="102" pos:column="26">"GraphiteEscapeChar"<pos:position pos:line="102" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="48">child<pos:position pos:line="102" pos:column="53"/></name><operator pos:line="102" pos:column="53">-&gt;<pos:position pos:line="102" pos:column="58"/></operator><name pos:line="102" pos:column="55">key<pos:position pos:line="102" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="59"/></argument_list></call> <operator pos:line="102" pos:column="60">==<pos:position pos:line="102" pos:column="62"/></operator> <literal type="number" pos:line="102" pos:column="63">0<pos:position pos:line="102" pos:column="64"/></literal><operator pos:line="102" pos:column="64">)<pos:position pos:line="102" pos:column="65"/></operator> <operator pos:line="102" pos:column="66">&amp;&amp;<pos:position pos:line="102" pos:column="76"/></operator> <name pos:line="102" pos:column="69">publish<pos:position pos:line="102" pos:column="76"/></name></expr>)<pos:position pos:line="102" pos:column="77"/></condition><then pos:line="102" pos:column="77"> <block pos:line="102" pos:column="78">{
      <decl_stmt><decl><type><name pos:line="103" pos:column="7">char<pos:position pos:line="103" pos:column="11"/></name> <modifier pos:line="103" pos:column="12">*<pos:position pos:line="103" pos:column="13"/></modifier></type><name pos:line="103" pos:column="13">tmp_buff<pos:position pos:line="103" pos:column="21"/></name> <init pos:line="103" pos:column="22">= <expr><name pos:line="103" pos:column="24">NULL<pos:position pos:line="103" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="103" pos:column="29"/></decl_stmt>
      <expr_stmt><expr><name pos:line="104" pos:column="7">status<pos:position pos:line="104" pos:column="13"/></name> <operator pos:line="104" pos:column="14">=<pos:position pos:line="104" pos:column="15"/></operator> <call><name pos:line="104" pos:column="16">cf_util_get_string<pos:position pos:line="104" pos:column="34"/></name><argument_list pos:line="104" pos:column="34">(<argument><expr><name pos:line="104" pos:column="35">child<pos:position pos:line="104" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="42">&amp;<pos:position pos:line="104" pos:column="47"/></operator><name pos:line="104" pos:column="43">tmp_buff<pos:position pos:line="104" pos:column="51"/></name></expr></argument>)<pos:position pos:line="104" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="53"/></expr_stmt>
      <if pos:line="105" pos:column="7">if <condition pos:line="105" pos:column="10">(<expr><call><name pos:line="105" pos:column="11">strlen<pos:position pos:line="105" pos:column="17"/></name><argument_list pos:line="105" pos:column="17">(<argument><expr><name pos:line="105" pos:column="18">tmp_buff<pos:position pos:line="105" pos:column="26"/></name></expr></argument>)<pos:position pos:line="105" pos:column="27"/></argument_list></call> <operator pos:line="105" pos:column="28">&gt;<pos:position pos:line="105" pos:column="32"/></operator> <literal type="number" pos:line="105" pos:column="30">1<pos:position pos:line="105" pos:column="31"/></literal></expr>)<pos:position pos:line="105" pos:column="32"/></condition><then pos:line="105" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="106" pos:column="9">WARNING<pos:position pos:line="106" pos:column="16"/></name><argument_list pos:line="106" pos:column="16">(<argument><expr><literal type="string" pos:line="106" pos:column="17">"amqp plugin: The option \"GraphiteEscapeChar\" handles "<pos:position pos:line="106" pos:column="74"/></literal>
                <literal type="string" pos:line="107" pos:column="17">"only one character. Others will be ignored."<pos:position pos:line="107" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="64"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name><name pos:line="108" pos:column="7">conf<pos:position pos:line="108" pos:column="11"/></name><operator pos:line="108" pos:column="11">-&gt;<pos:position pos:line="108" pos:column="16"/></operator><name pos:line="108" pos:column="13">escape_char<pos:position pos:line="108" pos:column="24"/></name></name> <operator pos:line="108" pos:column="25">=<pos:position pos:line="108" pos:column="26"/></operator> <name><name pos:line="108" pos:column="27">tmp_buff<pos:position pos:line="108" pos:column="35"/></name><index pos:line="108" pos:column="35">[<expr><literal type="number" pos:line="108" pos:column="36">0<pos:position pos:line="108" pos:column="37"/></literal></expr>]<pos:position pos:line="108" pos:column="38"/></index></name></expr>;<pos:position pos:line="108" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="109" pos:column="7">sfree<pos:position pos:line="109" pos:column="12"/></name><argument_list pos:line="109" pos:column="12">(<argument><expr><name pos:line="109" pos:column="13">tmp_buff<pos:position pos:line="109" pos:column="21"/></name></expr></argument>)<pos:position pos:line="109" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if></elseif> <elseif pos:line="110" pos:column="7">else <if pos:line="110" pos:column="12">if <condition pos:line="110" pos:column="15">(<expr><call><name pos:line="110" pos:column="16">strcasecmp<pos:position pos:line="110" pos:column="26"/></name><argument_list pos:line="110" pos:column="26">(<argument><expr><literal type="string" pos:line="110" pos:column="27">"ConnectionRetryDelay"<pos:position pos:line="110" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="51">child<pos:position pos:line="110" pos:column="56"/></name><operator pos:line="110" pos:column="56">-&gt;<pos:position pos:line="110" pos:column="61"/></operator><name pos:line="110" pos:column="58">key<pos:position pos:line="110" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="62"/></argument_list></call> <operator pos:line="110" pos:column="63">==<pos:position pos:line="110" pos:column="65"/></operator> <literal type="number" pos:line="110" pos:column="66">0<pos:position pos:line="110" pos:column="67"/></literal></expr>)<pos:position pos:line="110" pos:column="68"/></condition><then pos:line="110" pos:column="68">
      <block type="pseudo"><expr_stmt><expr><name pos:line="111" pos:column="7">status<pos:position pos:line="111" pos:column="13"/></name> <operator pos:line="111" pos:column="14">=<pos:position pos:line="111" pos:column="15"/></operator> <call><name pos:line="111" pos:column="16">cf_util_get_int<pos:position pos:line="111" pos:column="31"/></name><argument_list pos:line="111" pos:column="31">(<argument><expr><name pos:line="111" pos:column="32">child<pos:position pos:line="111" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="111" pos:column="39">&amp;<pos:position pos:line="111" pos:column="44"/></operator><name><name pos:line="111" pos:column="40">conf<pos:position pos:line="111" pos:column="44"/></name><operator pos:line="111" pos:column="44">-&gt;<pos:position pos:line="111" pos:column="49"/></operator><name pos:line="111" pos:column="46">connection_retry_delay<pos:position pos:line="111" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="70"/></expr_stmt></block></then></if></elseif>
    <else pos:line="112" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="113" pos:column="7">WARNING<pos:position pos:line="113" pos:column="14"/></name><argument_list pos:line="113" pos:column="14">(<argument><expr><literal type="string" pos:line="113" pos:column="15">"amqp plugin: Ignoring unknown "<pos:position pos:line="113" pos:column="47"/></literal>
              <literal type="string" pos:line="114" pos:column="15">"configuration option \"%s\"."<pos:position pos:line="114" pos:column="45"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="115" pos:column="15">child<pos:position pos:line="115" pos:column="20"/></name><operator pos:line="115" pos:column="20">-&gt;<pos:position pos:line="115" pos:column="25"/></operator><name pos:line="115" pos:column="22">key<pos:position pos:line="115" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="27"/></expr_stmt></block></else></if>

    <if pos:line="117" pos:column="5">if <condition pos:line="117" pos:column="8">(<expr><name pos:line="117" pos:column="9">status<pos:position pos:line="117" pos:column="15"/></name> <operator pos:line="117" pos:column="16">!=<pos:position pos:line="117" pos:column="18"/></operator> <literal type="number" pos:line="117" pos:column="19">0<pos:position pos:line="117" pos:column="20"/></literal></expr>)<pos:position pos:line="117" pos:column="21"/></condition><then pos:line="117" pos:column="21">
      <block type="pseudo"><break pos:line="118" pos:column="7">break;<pos:position pos:line="118" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="119" pos:column="4"/></block></for> <comment type="block" pos:line="119" pos:column="5">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

  <if pos:line="121" pos:column="3">if <condition pos:line="121" pos:column="6">(<expr><operator pos:line="121" pos:column="7">(<pos:position pos:line="121" pos:column="8"/></operator><name pos:line="121" pos:column="8">status<pos:position pos:line="121" pos:column="14"/></name> <operator pos:line="121" pos:column="15">==<pos:position pos:line="121" pos:column="17"/></operator> <literal type="number" pos:line="121" pos:column="18">0<pos:position pos:line="121" pos:column="19"/></literal><operator pos:line="121" pos:column="19">)<pos:position pos:line="121" pos:column="20"/></operator> <operator pos:line="121" pos:column="21">&amp;&amp;<pos:position pos:line="121" pos:column="31"/></operator> <operator pos:line="121" pos:column="24">(<pos:position pos:line="121" pos:column="25"/></operator><name><name pos:line="121" pos:column="25">conf<pos:position pos:line="121" pos:column="29"/></name><operator pos:line="121" pos:column="29">-&gt;<pos:position pos:line="121" pos:column="34"/></operator><name pos:line="121" pos:column="31">exchange<pos:position pos:line="121" pos:column="39"/></name></name> <operator pos:line="121" pos:column="40">==<pos:position pos:line="121" pos:column="42"/></operator> <name pos:line="121" pos:column="43">NULL<pos:position pos:line="121" pos:column="47"/></name><operator pos:line="121" pos:column="47">)<pos:position pos:line="121" pos:column="48"/></operator></expr>)<pos:position pos:line="121" pos:column="49"/></condition><then pos:line="121" pos:column="49"> <block pos:line="121" pos:column="50">{
    <if pos:line="122" pos:column="5">if <condition pos:line="122" pos:column="8">(<expr><name><name pos:line="122" pos:column="9">conf<pos:position pos:line="122" pos:column="13"/></name><operator pos:line="122" pos:column="13">-&gt;<pos:position pos:line="122" pos:column="18"/></operator><name pos:line="122" pos:column="15">exchange_type<pos:position pos:line="122" pos:column="28"/></name></name> <operator pos:line="122" pos:column="29">!=<pos:position pos:line="122" pos:column="31"/></operator> <name pos:line="122" pos:column="32">NULL<pos:position pos:line="122" pos:column="36"/></name></expr>)<pos:position pos:line="122" pos:column="37"/></condition><then pos:line="122" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="123" pos:column="7">WARNING<pos:position pos:line="123" pos:column="14"/></name><argument_list pos:line="123" pos:column="14">(<argument><expr><literal type="string" pos:line="123" pos:column="15">"amqp plugin: The option \"ExchangeType\" was given "<pos:position pos:line="123" pos:column="68"/></literal>
              <literal type="string" pos:line="124" pos:column="15">"without the \"Exchange\" option. It will be ignored."<pos:position pos:line="124" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="71"/></expr_stmt></block></then></if>

    <if pos:line="126" pos:column="5">if <condition pos:line="126" pos:column="8">(<expr><operator pos:line="126" pos:column="9">!<pos:position pos:line="126" pos:column="10"/></operator><name pos:line="126" pos:column="10">publish<pos:position pos:line="126" pos:column="17"/></name> <operator pos:line="126" pos:column="18">&amp;&amp;<pos:position pos:line="126" pos:column="28"/></operator> <operator pos:line="126" pos:column="21">(<pos:position pos:line="126" pos:column="22"/></operator><name><name pos:line="126" pos:column="22">conf<pos:position pos:line="126" pos:column="26"/></name><operator pos:line="126" pos:column="26">-&gt;<pos:position pos:line="126" pos:column="31"/></operator><name pos:line="126" pos:column="28">routing_key<pos:position pos:line="126" pos:column="39"/></name></name> <operator pos:line="126" pos:column="40">!=<pos:position pos:line="126" pos:column="42"/></operator> <name pos:line="126" pos:column="43">NULL<pos:position pos:line="126" pos:column="47"/></name><operator pos:line="126" pos:column="47">)<pos:position pos:line="126" pos:column="48"/></operator></expr>)<pos:position pos:line="126" pos:column="49"/></condition><then pos:line="126" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="127" pos:column="7">WARNING<pos:position pos:line="127" pos:column="14"/></name><argument_list pos:line="127" pos:column="14">(<argument><expr><literal type="string" pos:line="127" pos:column="15">"amqp plugin: The option \"RoutingKey\" was given "<pos:position pos:line="127" pos:column="66"/></literal>
              <literal type="string" pos:line="128" pos:column="15">"without the \"Exchange\" option. It will be ignored."<pos:position pos:line="128" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="71"/></expr_stmt></block></then></if>
  }<pos:position pos:line="129" pos:column="4"/></block></then></if>

  <if pos:line="131" pos:column="3">if <condition pos:line="131" pos:column="6">(<expr><name pos:line="131" pos:column="7">status<pos:position pos:line="131" pos:column="13"/></name> <operator pos:line="131" pos:column="14">!=<pos:position pos:line="131" pos:column="16"/></operator> <literal type="number" pos:line="131" pos:column="17">0<pos:position pos:line="131" pos:column="18"/></literal></expr>)<pos:position pos:line="131" pos:column="19"/></condition><then pos:line="131" pos:column="19"> <block pos:line="131" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="132" pos:column="5">camqp_config_free<pos:position pos:line="132" pos:column="22"/></name><argument_list pos:line="132" pos:column="22">(<argument><expr><name pos:line="132" pos:column="23">conf<pos:position pos:line="132" pos:column="27"/></name></expr></argument>)<pos:position pos:line="132" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="29"/></expr_stmt>
    <return pos:line="133" pos:column="5">return <expr><operator pos:line="133" pos:column="12">(<pos:position pos:line="133" pos:column="13"/></operator><name pos:line="133" pos:column="13">status<pos:position pos:line="133" pos:column="19"/></name><operator pos:line="133" pos:column="19">)<pos:position pos:line="133" pos:column="20"/></operator></expr>;<pos:position pos:line="133" pos:column="21"/></return>
  }<pos:position pos:line="134" pos:column="4"/></block></then></if>

  <if pos:line="136" pos:column="3">if <condition pos:line="136" pos:column="6">(<expr><name><name pos:line="136" pos:column="7">conf<pos:position pos:line="136" pos:column="11"/></name><operator pos:line="136" pos:column="11">-&gt;<pos:position pos:line="136" pos:column="16"/></operator><name pos:line="136" pos:column="13">exchange<pos:position pos:line="136" pos:column="21"/></name></name> <operator pos:line="136" pos:column="22">!=<pos:position pos:line="136" pos:column="24"/></operator> <name pos:line="136" pos:column="25">NULL<pos:position pos:line="136" pos:column="29"/></name></expr>)<pos:position pos:line="136" pos:column="30"/></condition><then pos:line="136" pos:column="30"> <block pos:line="136" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="137" pos:column="5">DEBUG<pos:position pos:line="137" pos:column="10"/></name><argument_list pos:line="137" pos:column="10">(<argument><expr><literal type="string" pos:line="137" pos:column="11">"amqp plugin: camqp_config_connection: exchange = %s;"<pos:position pos:line="137" pos:column="65"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="138" pos:column="11">conf<pos:position pos:line="138" pos:column="15"/></name><operator pos:line="138" pos:column="15">-&gt;<pos:position pos:line="138" pos:column="20"/></operator><name pos:line="138" pos:column="17">exchange<pos:position pos:line="138" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="138" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="139" pos:column="4"/></block></then></if>

  <if pos:line="141" pos:column="3">if <condition pos:line="141" pos:column="6">(<expr><name pos:line="141" pos:column="7">publish<pos:position pos:line="141" pos:column="14"/></name></expr>)<pos:position pos:line="141" pos:column="15"/></condition><then pos:line="141" pos:column="15"> <block pos:line="141" pos:column="16">{
    <decl_stmt><decl><type><name pos:line="142" pos:column="5">char<pos:position pos:line="142" pos:column="9"/></name></type> <name><name pos:line="142" pos:column="10">cbname<pos:position pos:line="142" pos:column="16"/></name><index pos:line="142" pos:column="16">[<expr><literal type="number" pos:line="142" pos:column="17">128<pos:position pos:line="142" pos:column="20"/></literal></expr>]<pos:position pos:line="142" pos:column="21"/></index></name></decl>;<pos:position pos:line="142" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="143" pos:column="5">user_data_t<pos:position pos:line="143" pos:column="16"/></name></type> <name pos:line="143" pos:column="17">ud<pos:position pos:line="143" pos:column="19"/></name> <init pos:line="143" pos:column="20">= <expr><block pos:line="143" pos:column="22">{<expr><name pos:line="143" pos:column="23">conf<pos:position pos:line="143" pos:column="27"/></name></expr>, <expr><name pos:line="143" pos:column="29">camqp_config_free<pos:position pos:line="143" pos:column="46"/></name></expr>}<pos:position pos:line="143" pos:column="47"/></block></expr></init></decl>;<pos:position pos:line="143" pos:column="48"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="145" pos:column="5">ssnprintf<pos:position pos:line="145" pos:column="14"/></name><argument_list pos:line="145" pos:column="14">(<argument><expr><name pos:line="145" pos:column="15">cbname<pos:position pos:line="145" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="145" pos:column="23">sizeof<argument_list pos:line="145" pos:column="29">(<argument><expr><name pos:line="145" pos:column="30">cbname<pos:position pos:line="145" pos:column="36"/></name></expr></argument>)<pos:position pos:line="145" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="39">"amqp/%s"<pos:position pos:line="145" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="50">conf<pos:position pos:line="145" pos:column="54"/></name><operator pos:line="145" pos:column="54">-&gt;<pos:position pos:line="145" pos:column="59"/></operator><name pos:line="145" pos:column="56">name<pos:position pos:line="145" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="62"/></expr_stmt>

    <expr_stmt><expr><name pos:line="147" pos:column="5">status<pos:position pos:line="147" pos:column="11"/></name> <operator pos:line="147" pos:column="12">=<pos:position pos:line="147" pos:column="13"/></operator> <call><name pos:line="147" pos:column="14">plugin_register_write<pos:position pos:line="147" pos:column="35"/></name><argument_list pos:line="147" pos:column="35">(<argument><expr><name pos:line="147" pos:column="36">cbname<pos:position pos:line="147" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="44">camqp_write<pos:position pos:line="147" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="147" pos:column="57">&amp;<pos:position pos:line="147" pos:column="62"/></operator><name pos:line="147" pos:column="58">ud<pos:position pos:line="147" pos:column="60"/></name></expr></argument>)<pos:position pos:line="147" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="62"/></expr_stmt>
    <if pos:line="148" pos:column="5">if <condition pos:line="148" pos:column="8">(<expr><name pos:line="148" pos:column="9">status<pos:position pos:line="148" pos:column="15"/></name> <operator pos:line="148" pos:column="16">!=<pos:position pos:line="148" pos:column="18"/></operator> <literal type="number" pos:line="148" pos:column="19">0<pos:position pos:line="148" pos:column="20"/></literal></expr>)<pos:position pos:line="148" pos:column="21"/></condition><then pos:line="148" pos:column="21"> <block pos:line="148" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="149" pos:column="7">camqp_config_free<pos:position pos:line="149" pos:column="24"/></name><argument_list pos:line="149" pos:column="24">(<argument><expr><name pos:line="149" pos:column="25">conf<pos:position pos:line="149" pos:column="29"/></name></expr></argument>)<pos:position pos:line="149" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="31"/></expr_stmt>
      <return pos:line="150" pos:column="7">return <expr><operator pos:line="150" pos:column="14">(<pos:position pos:line="150" pos:column="15"/></operator><name pos:line="150" pos:column="15">status<pos:position pos:line="150" pos:column="21"/></name><operator pos:line="150" pos:column="21">)<pos:position pos:line="150" pos:column="22"/></operator></expr>;<pos:position pos:line="150" pos:column="23"/></return>
    }<pos:position pos:line="151" pos:column="6"/></block></then></if>
  }<pos:position pos:line="152" pos:column="4"/></block></then> <else pos:line="152" pos:column="5">else <block pos:line="152" pos:column="10">{
    <expr_stmt><expr><name pos:line="153" pos:column="5">status<pos:position pos:line="153" pos:column="11"/></name> <operator pos:line="153" pos:column="12">=<pos:position pos:line="153" pos:column="13"/></operator> <call><name pos:line="153" pos:column="14">camqp_subscribe_init<pos:position pos:line="153" pos:column="34"/></name><argument_list pos:line="153" pos:column="34">(<argument><expr><name pos:line="153" pos:column="35">conf<pos:position pos:line="153" pos:column="39"/></name></expr></argument>)<pos:position pos:line="153" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="41"/></expr_stmt>
    <if pos:line="154" pos:column="5">if <condition pos:line="154" pos:column="8">(<expr><name pos:line="154" pos:column="9">status<pos:position pos:line="154" pos:column="15"/></name> <operator pos:line="154" pos:column="16">!=<pos:position pos:line="154" pos:column="18"/></operator> <literal type="number" pos:line="154" pos:column="19">0<pos:position pos:line="154" pos:column="20"/></literal></expr>)<pos:position pos:line="154" pos:column="21"/></condition><then pos:line="154" pos:column="21"> <block pos:line="154" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="155" pos:column="7">camqp_config_free<pos:position pos:line="155" pos:column="24"/></name><argument_list pos:line="155" pos:column="24">(<argument><expr><name pos:line="155" pos:column="25">conf<pos:position pos:line="155" pos:column="29"/></name></expr></argument>)<pos:position pos:line="155" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="31"/></expr_stmt>
      <return pos:line="156" pos:column="7">return <expr><operator pos:line="156" pos:column="14">(<pos:position pos:line="156" pos:column="15"/></operator><name pos:line="156" pos:column="15">status<pos:position pos:line="156" pos:column="21"/></name><operator pos:line="156" pos:column="21">)<pos:position pos:line="156" pos:column="22"/></operator></expr>;<pos:position pos:line="156" pos:column="23"/></return>
    }<pos:position pos:line="157" pos:column="6"/></block></then></if>
  }<pos:position pos:line="158" pos:column="4"/></block></else></if>

  <return pos:line="160" pos:column="3">return <expr><operator pos:line="160" pos:column="10">(<pos:position pos:line="160" pos:column="11"/></operator><literal type="number" pos:line="160" pos:column="11">0<pos:position pos:line="160" pos:column="12"/></literal><operator pos:line="160" pos:column="12">)<pos:position pos:line="160" pos:column="13"/></operator></expr>;<pos:position pos:line="160" pos:column="14"/></return>
}<pos:position pos:line="161" pos:column="2"/></block></function></unit>

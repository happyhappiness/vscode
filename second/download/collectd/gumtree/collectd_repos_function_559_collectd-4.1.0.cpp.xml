<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_559_collectd-4.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">network_add_sending_socket<pos:position pos:line="1" pos:column="38"/></name> <parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">node<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">service<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">sockent_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">se<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">sockent_t<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">se_ptr<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">service<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">==<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr>)<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">service<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">=<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">NET_DEFAULT_PORT<pos:position pos:line="7" pos:column="43"/></name></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt></block></then></if>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">node<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">==<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">NULL<pos:position pos:line="9" pos:column="25"/></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">se<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <call><name pos:line="10" pos:column="22">network_create_default_socket<pos:position pos:line="10" pos:column="51"/></name> <argument_list pos:line="10" pos:column="52">(<argument><expr><literal type="number" pos:line="10" pos:column="53">0<pos:position pos:line="10" pos:column="54"/></literal></expr></argument> <comment type="block" pos:line="10" pos:column="55">/* listen == false */</comment>)<pos:position pos:line="10" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="78"/></expr_stmt></block></then>
	<else pos:line="11" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">se<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <call><name pos:line="12" pos:column="22">network_create_socket<pos:position pos:line="12" pos:column="43"/></name> <argument_list pos:line="12" pos:column="44">(<argument><expr><name pos:line="12" pos:column="45">node<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="51">service<pos:position pos:line="12" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="60">0<pos:position pos:line="12" pos:column="61"/></literal></expr></argument> <comment type="block" pos:line="12" pos:column="62">/* listen == false */</comment>)<pos:position pos:line="12" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="85"/></expr_stmt></block></else></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">se<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">==<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">NULL<pos:position pos:line="14" pos:column="23"/></name></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><operator pos:line="15" pos:column="25">-<pos:position pos:line="15" pos:column="26"/></operator><literal type="number" pos:line="15" pos:column="26">1<pos:position pos:line="15" pos:column="27"/></literal><operator pos:line="15" pos:column="27">)<pos:position pos:line="15" pos:column="28"/></operator></expr>;<pos:position pos:line="15" pos:column="29"/></return></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">sending_sockets<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">==<pos:position pos:line="17" pos:column="31"/></operator> <name pos:line="17" pos:column="32">NULL<pos:position pos:line="17" pos:column="36"/></name></expr>)<pos:position pos:line="17" pos:column="37"/></condition><then pos:line="17" pos:column="37">
	<block pos:line="18" pos:column="9">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">sending_sockets<pos:position pos:line="19" pos:column="32"/></name> <operator pos:line="19" pos:column="33">=<pos:position pos:line="19" pos:column="34"/></operator> <name pos:line="19" pos:column="35">se<pos:position pos:line="19" pos:column="37"/></name></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
		<return pos:line="20" pos:column="17">return <expr><operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal><operator pos:line="20" pos:column="26">)<pos:position pos:line="20" pos:column="27"/></operator></expr>;<pos:position pos:line="20" pos:column="28"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">se_ptr<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">sending_sockets<pos:position pos:line="23" pos:column="38"/></name></expr>;<pos:position pos:line="23" pos:column="39"/></init> <condition><expr><name><name pos:line="23" pos:column="40">se_ptr<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">-&gt;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="48">next<pos:position pos:line="23" pos:column="52"/></name></name> <operator pos:line="23" pos:column="53">!=<pos:position pos:line="23" pos:column="55"/></operator> <name pos:line="23" pos:column="56">NULL<pos:position pos:line="23" pos:column="60"/></name></expr>;<pos:position pos:line="23" pos:column="61"/></condition> <incr><expr><name pos:line="23" pos:column="62">se_ptr<pos:position pos:line="23" pos:column="68"/></name> <operator pos:line="23" pos:column="69">=<pos:position pos:line="23" pos:column="70"/></operator> <name><name pos:line="23" pos:column="71">se_ptr<pos:position pos:line="23" pos:column="77"/></name><operator pos:line="23" pos:column="77">-&gt;<pos:position pos:line="23" pos:column="82"/></operator><name pos:line="23" pos:column="79">next<pos:position pos:line="23" pos:column="83"/></name></name></expr></incr>)<pos:position pos:line="23" pos:column="84"/></control>
		<comment type="block" pos:line="24" pos:column="17">/* seek end */</comment><block type="pseudo"><empty_stmt pos:line="24" pos:column="31">;<pos:position pos:line="24" pos:column="32"/></empty_stmt></block></for>

	<expr_stmt><expr><name><name pos:line="26" pos:column="9">se_ptr<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">next<pos:position pos:line="26" pos:column="21"/></name></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">se<pos:position pos:line="26" pos:column="26"/></name></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
	<return pos:line="27" pos:column="9">return <expr><operator pos:line="27" pos:column="16">(<pos:position pos:line="27" pos:column="17"/></operator><literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal><operator pos:line="27" pos:column="18">)<pos:position pos:line="27" pos:column="19"/></operator></expr>;<pos:position pos:line="27" pos:column="20"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

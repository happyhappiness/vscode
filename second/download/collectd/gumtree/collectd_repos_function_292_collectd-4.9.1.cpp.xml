<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_292_collectd-4.9.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">subst_string<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">buf<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">size_t<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">buflen<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">string<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">needle<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">replacement<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">temp<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">needle_len<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">i<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">buf<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="21">NULL<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">)<pos:position pos:line="8" pos:column="26"/></operator> <operator pos:line="8" pos:column="27">||<pos:position pos:line="8" pos:column="29"/></operator> <operator pos:line="8" pos:column="30">(<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">string<pos:position pos:line="8" pos:column="37"/></name> <operator pos:line="8" pos:column="38">==<pos:position pos:line="8" pos:column="40"/></operator> <name pos:line="8" pos:column="41">NULL<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">)<pos:position pos:line="8" pos:column="46"/></operator>
			<operator pos:line="9" pos:column="25">||<pos:position pos:line="9" pos:column="27"/></operator> <operator pos:line="9" pos:column="28">(<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">needle<pos:position pos:line="9" pos:column="35"/></name> <operator pos:line="9" pos:column="36">==<pos:position pos:line="9" pos:column="38"/></operator> <name pos:line="9" pos:column="39">NULL<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">)<pos:position pos:line="9" pos:column="44"/></operator> <operator pos:line="9" pos:column="45">||<pos:position pos:line="9" pos:column="47"/></operator> <operator pos:line="9" pos:column="48">(<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="49">replacement<pos:position pos:line="9" pos:column="60"/></name> <operator pos:line="9" pos:column="61">==<pos:position pos:line="9" pos:column="63"/></operator> <name pos:line="9" pos:column="64">NULL<pos:position pos:line="9" pos:column="68"/></name><operator pos:line="9" pos:column="68">)<pos:position pos:line="9" pos:column="69"/></operator></expr>)<pos:position pos:line="9" pos:column="70"/></condition><then pos:line="9" pos:column="70">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">NULL<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator></expr>;<pos:position pos:line="10" pos:column="31"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">temp<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <operator pos:line="12" pos:column="16">(<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">char<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></operator><operator pos:line="12" pos:column="23">)<pos:position pos:line="12" pos:column="24"/></operator> <call><name pos:line="12" pos:column="25">malloc<pos:position pos:line="12" pos:column="31"/></name> <argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">buflen<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">temp<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">==<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">NULL<pos:position pos:line="13" pos:column="25"/></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26">
	<block pos:line="14" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">ERROR<pos:position pos:line="15" pos:column="22"/></name> <argument_list pos:line="15" pos:column="23">(<argument><expr><literal type="string" pos:line="15" pos:column="24">"subst_string: malloc failed."<pos:position pos:line="15" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">NULL<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">)<pos:position pos:line="16" pos:column="30"/></operator></expr>;<pos:position pos:line="16" pos:column="31"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="19" pos:column="9">needle_len<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <call><name pos:line="19" pos:column="22">strlen<pos:position pos:line="19" pos:column="28"/></name> <argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">needle<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">strncpy<pos:position pos:line="20" pos:column="16"/></name> <argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">buf<pos:position pos:line="20" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="23">string<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">buflen<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>

	<comment type="block" pos:line="22" pos:column="9">/* Limit the loop to prevent endless loops. */</comment>
	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">i<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">0<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></init> <condition><expr><name pos:line="23" pos:column="21">i<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&lt;<pos:position pos:line="23" pos:column="27"/></operator> <name pos:line="23" pos:column="25">buflen<pos:position pos:line="23" pos:column="31"/></name></expr>;<pos:position pos:line="23" pos:column="32"/></condition> <incr><expr><name pos:line="23" pos:column="33">i<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">++<pos:position pos:line="23" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="37"/></control>
	<block pos:line="24" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">char<pos:position pos:line="25" pos:column="21"/></name> <modifier pos:line="25" pos:column="22">*<pos:position pos:line="25" pos:column="23"/></modifier></type><name pos:line="25" pos:column="23">begin_ptr<pos:position pos:line="25" pos:column="32"/></name></decl>;<pos:position pos:line="25" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">size_t<pos:position pos:line="26" pos:column="23"/></name></type> <name pos:line="26" pos:column="24">begin<pos:position pos:line="26" pos:column="29"/></name></decl>;<pos:position pos:line="26" pos:column="30"/></decl_stmt>

		<comment type="block" pos:line="28" pos:column="17">/* Find `needle' in `buf'. */</comment>
		<expr_stmt><expr><name pos:line="29" pos:column="17">begin_ptr<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <call><name pos:line="29" pos:column="29">strstr<pos:position pos:line="29" pos:column="35"/></name> <argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">buf<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">needle<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">begin_ptr<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">==<pos:position pos:line="30" pos:column="33"/></operator> <name pos:line="30" pos:column="34">NULL<pos:position pos:line="30" pos:column="38"/></name></expr>)<pos:position pos:line="30" pos:column="39"/></condition><then pos:line="30" pos:column="39">
			<block type="pseudo"><break pos:line="31" pos:column="25">break;<pos:position pos:line="31" pos:column="31"/></break></block></then></if>

		<comment type="block" pos:line="33" pos:column="17">/* Calculate the start offset. */</comment>
		<expr_stmt><expr><name pos:line="34" pos:column="17">begin<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <name pos:line="34" pos:column="25">begin_ptr<pos:position pos:line="34" pos:column="34"/></name> <operator pos:line="34" pos:column="35">-<pos:position pos:line="34" pos:column="36"/></operator> <name pos:line="34" pos:column="37">buf<pos:position pos:line="34" pos:column="40"/></name></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>

		<comment type="block" pos:line="36" pos:column="17">/* Substitute the region using `subst'. The result is stored in
		 * `temp'. */</comment>
		<expr_stmt><expr><name pos:line="38" pos:column="17">begin_ptr<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <call><name pos:line="38" pos:column="29">subst<pos:position pos:line="38" pos:column="34"/></name> <argument_list pos:line="38" pos:column="35">(<argument><expr><name pos:line="38" pos:column="36">temp<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="42">buflen<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="50">buf<pos:position pos:line="38" pos:column="53"/></name></expr></argument>,
				<argument><expr><name pos:line="39" pos:column="33">begin<pos:position pos:line="39" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="40">begin<pos:position pos:line="39" pos:column="45"/></name> <operator pos:line="39" pos:column="46">+<pos:position pos:line="39" pos:column="47"/></operator> <name pos:line="39" pos:column="48">needle_len<pos:position pos:line="39" pos:column="58"/></name></expr></argument>,
				<argument><expr><name pos:line="40" pos:column="33">replacement<pos:position pos:line="40" pos:column="44"/></name></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">begin_ptr<pos:position pos:line="41" pos:column="30"/></name> <operator pos:line="41" pos:column="31">==<pos:position pos:line="41" pos:column="33"/></operator> <name pos:line="41" pos:column="34">NULL<pos:position pos:line="41" pos:column="38"/></name></expr>)<pos:position pos:line="41" pos:column="39"/></condition><then pos:line="41" pos:column="39">
		<block pos:line="42" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">WARNING<pos:position pos:line="43" pos:column="32"/></name> <argument_list pos:line="43" pos:column="33">(<argument><expr><literal type="string" pos:line="43" pos:column="34">"subst_string: subst failed."<pos:position pos:line="43" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="65"/></expr_stmt>
			<break pos:line="44" pos:column="25">break;<pos:position pos:line="44" pos:column="31"/></break>
		}<pos:position pos:line="45" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="47" pos:column="17">/* Copy the new string in `temp' to `buf' for the next round. */</comment>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">strncpy<pos:position pos:line="48" pos:column="24"/></name> <argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">buf<pos:position pos:line="48" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="31">temp<pos:position pos:line="48" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="37">buflen<pos:position pos:line="48" pos:column="43"/></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></for>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">i<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">&gt;=<pos:position pos:line="51" pos:column="20"/></operator> <name pos:line="51" pos:column="18">buflen<pos:position pos:line="51" pos:column="24"/></name></expr>)<pos:position pos:line="51" pos:column="25"/></condition><then pos:line="51" pos:column="25">
	<block pos:line="52" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">WARNING<pos:position pos:line="53" pos:column="24"/></name> <argument_list pos:line="53" pos:column="25">(<argument><expr><literal type="string" pos:line="53" pos:column="26">"subst_string: Loop exited after %zu iterations: "<pos:position pos:line="53" pos:column="76"/></literal>
				<literal type="string" pos:line="54" pos:column="33">"string = %s; needle = %s; replacement = %s;"<pos:position pos:line="54" pos:column="78"/></literal></expr></argument>,
				<argument><expr><name pos:line="55" pos:column="33">i<pos:position pos:line="55" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="36">string<pos:position pos:line="55" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="44">needle<pos:position pos:line="55" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="52">replacement<pos:position pos:line="55" pos:column="63"/></name></expr></argument>)<pos:position pos:line="55" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="58" pos:column="9">sfree<pos:position pos:line="58" pos:column="14"/></name> <argument_list pos:line="58" pos:column="15">(<argument><expr><name pos:line="58" pos:column="16">temp<pos:position pos:line="58" pos:column="20"/></name></expr></argument>)<pos:position pos:line="58" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="22"/></expr_stmt>
	<return pos:line="59" pos:column="9">return <expr><operator pos:line="59" pos:column="16">(<pos:position pos:line="59" pos:column="17"/></operator><name pos:line="59" pos:column="17">buf<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">)<pos:position pos:line="59" pos:column="21"/></operator></expr>;<pos:position pos:line="59" pos:column="22"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

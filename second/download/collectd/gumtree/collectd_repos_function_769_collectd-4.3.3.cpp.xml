<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_769_collectd-4.3.3.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">yy_symbol_value_print<pos:position pos:line="2" pos:column="22"/></name> <argument_list pos:line="2" pos:column="23">(<argument><expr><name pos:line="2" pos:column="24">FILE<pos:position pos:line="2" pos:column="28"/></name> <operator pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="30">yyoutput<pos:position pos:line="2" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">yytype<pos:position pos:line="2" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="52">YYSTYPE<pos:position pos:line="2" pos:column="59"/></name> <specifier pos:line="2" pos:column="60">const<pos:position pos:line="2" pos:column="65"/></specifier> <operator pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></operator> <specifier pos:line="2" pos:column="68">const<pos:position pos:line="2" pos:column="73"/></specifier> <name pos:line="2" pos:column="74">yyvaluep<pos:position pos:line="2" pos:column="82"/></name></expr></argument>)<pos:position pos:line="2" pos:column="83"/></argument_list>
<cpp:else pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">else<pos:position pos:line="3" pos:column="6"/></cpp:directive></cpp:else>
static <name pos:line="4" pos:column="8">void<pos:position pos:line="4" pos:column="12"/></name>
<name pos:line="5" pos:column="1">yy_symbol_value_print<pos:position pos:line="5" pos:column="22"/></name> <argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">yyoutput<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="34">yytype<pos:position pos:line="5" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="42">yyvaluep<pos:position pos:line="5" pos:column="50"/></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list>
    <name pos:line="6" pos:column="5">FILE<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier><name pos:line="6" pos:column="11">yyoutput<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">yytype<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">YYSTYPE<pos:position pos:line="8" pos:column="12"/></name> <specifier pos:line="8" pos:column="13">const<pos:position pos:line="8" pos:column="18"/></specifier> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier> <specifier pos:line="8" pos:column="21">const<pos:position pos:line="8" pos:column="26"/></specifier></type> <name pos:line="8" pos:column="27">yyvaluep<pos:position pos:line="8" pos:column="35"/></name></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
<block pos:line="10" pos:column="1">{
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">yyvaluep<pos:position pos:line="11" pos:column="16"/></name></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17">
    <block type="pseudo"><return pos:line="12" pos:column="5">return;<pos:position pos:line="12" pos:column="12"/></return></block></then></if>
<cpp:ifdef pos:line="13" pos:column="1"># <cpp:directive pos:line="13" pos:column="3">ifdef<pos:position pos:line="13" pos:column="8"/></cpp:directive> <name pos:line="13" pos:column="9">YYPRINT<pos:position pos:line="13" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">yytype<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">&lt;<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="16">YYNTOKENS<pos:position pos:line="14" pos:column="25"/></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="5">YYPRINT<pos:position pos:line="15" pos:column="12"/></name> <argument_list pos:line="15" pos:column="13">(<argument><expr><name pos:line="15" pos:column="14">yyoutput<pos:position pos:line="15" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="24">yytoknum<pos:position pos:line="15" pos:column="32"/></name><index pos:line="15" pos:column="32">[<expr><name pos:line="15" pos:column="33">yytype<pos:position pos:line="15" pos:column="39"/></name></expr>]<pos:position pos:line="15" pos:column="40"/></index></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="42">*<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">yyvaluep<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt></block></then></if>
<cpp:else pos:line="16" pos:column="1"># <cpp:directive pos:line="16" pos:column="3">else<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:else>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">YYUSE<pos:position pos:line="17" pos:column="8"/></name> <argument_list pos:line="17" pos:column="9">(<argument><expr><name pos:line="17" pos:column="10">yyoutput<pos:position pos:line="17" pos:column="18"/></name></expr></argument>)<pos:position pos:line="17" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="18" pos:column="1"># <cpp:directive pos:line="18" pos:column="3">endif<pos:position pos:line="18" pos:column="8"/></cpp:directive></cpp:endif>
  <switch pos:line="19" pos:column="3">switch <condition pos:line="19" pos:column="10">(<expr><name pos:line="19" pos:column="11">yytype<pos:position pos:line="19" pos:column="17"/></name></expr>)<pos:position pos:line="19" pos:column="18"/></condition>
    <block pos:line="20" pos:column="5">{
      <default pos:line="21" pos:column="7">default:<pos:position pos:line="21" pos:column="15"/></default>
	<break pos:line="22" pos:column="9">break;<pos:position pos:line="22" pos:column="15"/></break>
    }<pos:position pos:line="23" pos:column="6"/></block></switch>
}<pos:position pos:line="24" pos:column="2"/></block></unit>

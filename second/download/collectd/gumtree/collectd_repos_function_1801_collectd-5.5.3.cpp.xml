<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1801_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">network_init_buffer<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">void<pos:position pos:line="1" pos:column="38"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">memset<pos:position pos:line="3" pos:column="15"/></name> <argument_list pos:line="3" pos:column="16">(<argument><expr><name pos:line="3" pos:column="17">send_buffer<pos:position pos:line="3" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="30">0<pos:position pos:line="3" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="33">network_config_packet_size<pos:position pos:line="3" pos:column="59"/></name></expr></argument>)<pos:position pos:line="3" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><name pos:line="4" pos:column="9">send_buffer_ptr<pos:position pos:line="4" pos:column="24"/></name> <operator pos:line="4" pos:column="25">=<pos:position pos:line="4" pos:column="26"/></operator> <name pos:line="4" pos:column="27">send_buffer<pos:position pos:line="4" pos:column="38"/></name></expr>;<pos:position pos:line="4" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name pos:line="5" pos:column="9">send_buffer_fill<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">=<pos:position pos:line="5" pos:column="27"/></operator> <literal type="number" pos:line="5" pos:column="28">0<pos:position pos:line="5" pos:column="29"/></literal></expr>;<pos:position pos:line="5" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">memset<pos:position pos:line="7" pos:column="15"/></name> <argument_list pos:line="7" pos:column="16">(<argument><expr><operator pos:line="7" pos:column="17">&amp;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="18">send_buffer_vl<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="34">0<pos:position pos:line="7" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="37">sizeof <argument_list pos:line="7" pos:column="44">(<argument><expr><name pos:line="7" pos:column="45">send_buffer_vl<pos:position pos:line="7" pos:column="59"/></name></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="62"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_function_99.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">tryall_dlopen<pos:position pos:line="2" pos:column="14"/></name> <parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">lt_dlhandle<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">phandle<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">filename<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
	       <parameter><decl><type><name pos:line="3" pos:column="16">lt_dladvise<pos:position pos:line="3" pos:column="27"/></name></type> <name pos:line="3" pos:column="28">advise<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="36">const<pos:position pos:line="3" pos:column="41"/></specifier> <name pos:line="3" pos:column="42">lt_dlvtable<pos:position pos:line="3" pos:column="53"/></name> <modifier pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></modifier></type><name pos:line="3" pos:column="55">vtable<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">lt_dlhandle<pos:position pos:line="5" pos:column="14"/></name></type>	<name pos:line="5" pos:column="17">handle<pos:position pos:line="5" pos:column="23"/></name>		<init pos:line="5" pos:column="33">= <expr><name pos:line="5" pos:column="35">handles<pos:position pos:line="5" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type>	<name pos:line="6" pos:column="17">saved_error<pos:position pos:line="6" pos:column="28"/></name>	<init pos:line="6" pos:column="33">= <expr><literal type="number" pos:line="6" pos:column="35">0<pos:position pos:line="6" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type>		<name pos:line="7" pos:column="17">errors<pos:position pos:line="7" pos:column="23"/></name>		<init pos:line="7" pos:column="33">= <expr><literal type="number" pos:line="7" pos:column="35">0<pos:position pos:line="7" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>

<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">LT_DEBUG_LOADERS<pos:position pos:line="9" pos:column="24"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">fprintf<pos:position pos:line="10" pos:column="10"/></name> <argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">stderr<pos:position pos:line="10" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="20">"tryall_dlopen (%s, %s)\n"<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>,
	   <argument><expr><ternary><condition><expr><name pos:line="11" pos:column="12">filename<pos:position pos:line="11" pos:column="20"/></name></expr> ?<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22"> <expr><name pos:line="11" pos:column="23">filename<pos:position pos:line="11" pos:column="31"/></name></expr> <pos:position pos:line="11" pos:column="32"/></then><else pos:line="11" pos:column="32">: <expr><literal type="string" pos:line="11" pos:column="34">"(null)"<pos:position pos:line="11" pos:column="42"/></literal></expr></else></ternary></expr></argument>,
	   <argument><expr><ternary><condition><expr><name pos:line="12" pos:column="12">vtable<pos:position pos:line="12" pos:column="18"/></name></expr> ?<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20"> <expr><name><name pos:line="12" pos:column="21">vtable<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">name<pos:position pos:line="12" pos:column="33"/></name></name></expr> <pos:position pos:line="12" pos:column="34"/></then><else pos:line="12" pos:column="34">: <expr><literal type="string" pos:line="12" pos:column="36">"(ALL)"<pos:position pos:line="12" pos:column="43"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">LT__GETERROR<pos:position pos:line="15" pos:column="15"/></name> <argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">saved_error<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* check whether the module was already opened */</comment>
  <for pos:line="18" pos:column="3">for <control pos:line="18" pos:column="7">(<init pos:line="18" pos:column="8">;<pos:position pos:line="18" pos:column="9"/></init><condition><expr><name pos:line="18" pos:column="9">handle<pos:position pos:line="18" pos:column="15"/></name></expr>;<pos:position pos:line="18" pos:column="16"/></condition> <incr><expr><name pos:line="18" pos:column="17">handle<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <name><name pos:line="18" pos:column="26">handle<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">next<pos:position pos:line="18" pos:column="38"/></name></name></expr></incr>)<pos:position pos:line="18" pos:column="39"/></control>
    <block pos:line="19" pos:column="5">{
      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><operator pos:line="20" pos:column="11">(<pos:position pos:line="20" pos:column="12"/></operator><name><name pos:line="20" pos:column="12">handle<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">info<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">filename<pos:position pos:line="20" pos:column="33"/></name></name> <operator pos:line="20" pos:column="34">==<pos:position pos:line="20" pos:column="36"/></operator> <name pos:line="20" pos:column="37">filename<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">)<pos:position pos:line="20" pos:column="46"/></operator> <comment type="block" pos:line="20" pos:column="47">/* dlopen self: 0 == 0 */</comment>
	  <operator pos:line="21" pos:column="11">||<pos:position pos:line="21" pos:column="13"/></operator> <operator pos:line="21" pos:column="14">(<pos:position pos:line="21" pos:column="15"/></operator><name><name pos:line="21" pos:column="15">handle<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">info<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">.<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">filename<pos:position pos:line="21" pos:column="36"/></name></name> <operator pos:line="21" pos:column="37">&amp;&amp;<pos:position pos:line="21" pos:column="47"/></operator> <name pos:line="21" pos:column="40">filename<pos:position pos:line="21" pos:column="48"/></name>
	      <operator pos:line="22" pos:column="15">&amp;&amp;<pos:position pos:line="22" pos:column="25"/></operator> <call><name pos:line="22" pos:column="18">streq<pos:position pos:line="22" pos:column="23"/></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><name><name pos:line="22" pos:column="25">handle<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">info<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">.<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">filename<pos:position pos:line="22" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">filename<pos:position pos:line="22" pos:column="56"/></name></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call><operator pos:line="22" pos:column="57">)<pos:position pos:line="22" pos:column="58"/></operator></expr>)<pos:position pos:line="22" pos:column="59"/></condition><then pos:line="22" pos:column="59">
	<block pos:line="23" pos:column="9">{
	  <break pos:line="24" pos:column="11">break;<pos:position pos:line="24" pos:column="17"/></break>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></for>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">handle<pos:position pos:line="28" pos:column="13"/></name></expr>)<pos:position pos:line="28" pos:column="14"/></condition><then pos:line="28" pos:column="14">
    <block pos:line="29" pos:column="5">{
      <expr_stmt><expr><operator pos:line="30" pos:column="7">++<pos:position pos:line="30" pos:column="9"/></operator><name><name pos:line="30" pos:column="9">handle<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">info<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">.<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">ref_count<pos:position pos:line="30" pos:column="31"/></name></name></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="31" pos:column="7">*<pos:position pos:line="31" pos:column="8"/></operator><name pos:line="31" pos:column="8">phandle<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">handle<pos:position pos:line="31" pos:column="24"/></name></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
      <goto pos:line="32" pos:column="7">goto <name pos:line="32" pos:column="12">done<pos:position pos:line="32" pos:column="16"/></name>;<pos:position pos:line="32" pos:column="17"/></goto>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name pos:line="35" pos:column="3">handle<pos:position pos:line="35" pos:column="9"/></name> <operator pos:line="35" pos:column="10">=<pos:position pos:line="35" pos:column="11"/></operator> <operator pos:line="35" pos:column="12">*<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">phandle<pos:position pos:line="35" pos:column="20"/></name></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">filename<pos:position pos:line="36" pos:column="15"/></name></expr>)<pos:position pos:line="36" pos:column="16"/></condition><then pos:line="36" pos:column="16">
    <block pos:line="37" pos:column="5">{
      <comment type="block" pos:line="38" pos:column="7">/* Comment out the check of file permissions using access.
	 This call seems to always return -1 with error EACCES.
      */</comment>
      <comment type="block" pos:line="41" pos:column="7">/* We need to catch missing file errors early so that
	 file_not_found() can detect what happened.
      if (access (filename, R_OK) != 0)
	{
	  LT__SETERROR (FILE_NOT_FOUND);
	  ++errors;
	  goto done;
	} */</comment>

      <expr_stmt><expr><name><name pos:line="50" pos:column="7">handle<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">-&gt;<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="15">info<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">.<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="20">filename<pos:position pos:line="50" pos:column="28"/></name></name> <operator pos:line="50" pos:column="29">=<pos:position pos:line="50" pos:column="30"/></operator> <call><name pos:line="50" pos:column="31">lt__strdup<pos:position pos:line="50" pos:column="41"/></name> <argument_list pos:line="50" pos:column="42">(<argument><expr><name pos:line="50" pos:column="43">filename<pos:position pos:line="50" pos:column="51"/></name></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="53"/></expr_stmt>
      <if pos:line="51" pos:column="7">if <condition pos:line="51" pos:column="10">(<expr><operator pos:line="51" pos:column="11">!<pos:position pos:line="51" pos:column="12"/></operator><name><name pos:line="51" pos:column="12">handle<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">-&gt;<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="20">info<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">.<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="25">filename<pos:position pos:line="51" pos:column="33"/></name></name></expr>)<pos:position pos:line="51" pos:column="34"/></condition><then pos:line="51" pos:column="34">
	<block pos:line="52" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="53" pos:column="11">++<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="13">errors<pos:position pos:line="53" pos:column="19"/></name></expr>;<pos:position pos:line="53" pos:column="20"/></expr_stmt>
	  <goto pos:line="54" pos:column="11">goto <name pos:line="54" pos:column="16">done<pos:position pos:line="54" pos:column="20"/></name>;<pos:position pos:line="54" pos:column="21"/></goto>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if>
    }<pos:position pos:line="56" pos:column="6"/></block></then>
  <else pos:line="57" pos:column="3">else
    <block pos:line="58" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="59" pos:column="7">handle<pos:position pos:line="59" pos:column="13"/></name><operator pos:line="59" pos:column="13">-&gt;<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="15">info<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">.<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="20">filename<pos:position pos:line="59" pos:column="28"/></name></name> <operator pos:line="59" pos:column="29">=<pos:position pos:line="59" pos:column="30"/></operator> <literal type="number" pos:line="59" pos:column="31">0<pos:position pos:line="59" pos:column="32"/></literal></expr>;<pos:position pos:line="59" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></else></if>

  <block pos:line="62" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="63" pos:column="5">lt_dlloader<pos:position pos:line="63" pos:column="16"/></name></type> <name pos:line="63" pos:column="17">loader<pos:position pos:line="63" pos:column="23"/></name> <init pos:line="63" pos:column="24">= <expr><call><name pos:line="63" pos:column="26">lt_dlloader_next<pos:position pos:line="63" pos:column="42"/></name> <argument_list pos:line="63" pos:column="43">(<argument><expr><literal type="number" pos:line="63" pos:column="44">0<pos:position pos:line="63" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="63" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="64" pos:column="5">const<pos:position pos:line="64" pos:column="10"/></specifier> <name pos:line="64" pos:column="11">lt_dlvtable<pos:position pos:line="64" pos:column="22"/></name> <modifier pos:line="64" pos:column="23">*<pos:position pos:line="64" pos:column="24"/></modifier></type><name pos:line="64" pos:column="24">loader_vtable<pos:position pos:line="64" pos:column="37"/></name></decl>;<pos:position pos:line="64" pos:column="38"/></decl_stmt>

    <do pos:line="66" pos:column="5">do
      <block pos:line="67" pos:column="7">{
	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">vtable<pos:position pos:line="68" pos:column="19"/></name></expr>)<pos:position pos:line="68" pos:column="20"/></condition><then pos:line="68" pos:column="20">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="11">loader_vtable<pos:position pos:line="69" pos:column="24"/></name> <operator pos:line="69" pos:column="25">=<pos:position pos:line="69" pos:column="26"/></operator> <name pos:line="69" pos:column="27">vtable<pos:position pos:line="69" pos:column="33"/></name></expr>;<pos:position pos:line="69" pos:column="34"/></expr_stmt></block></then>
	<else pos:line="70" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="11">loader_vtable<pos:position pos:line="71" pos:column="24"/></name> <operator pos:line="71" pos:column="25">=<pos:position pos:line="71" pos:column="26"/></operator> <call><name pos:line="71" pos:column="27">lt_dlloader_get<pos:position pos:line="71" pos:column="42"/></name> <argument_list pos:line="71" pos:column="43">(<argument><expr><name pos:line="71" pos:column="44">loader<pos:position pos:line="71" pos:column="50"/></name></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="52"/></expr_stmt></block></else></if>

<cpp:ifdef pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">ifdef<pos:position pos:line="73" pos:column="7"/></cpp:directive> <name pos:line="73" pos:column="8">LT_DEBUG_LOADERS<pos:position pos:line="73" pos:column="24"/></name></cpp:ifdef>
	<expr_stmt><expr><call><name pos:line="74" pos:column="9">fprintf<pos:position pos:line="74" pos:column="16"/></name> <argument_list pos:line="74" pos:column="17">(<argument><expr><name pos:line="74" pos:column="18">stderr<pos:position pos:line="74" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="26">"Calling %s-&gt;module_open (%s)\n"<pos:position pos:line="74" pos:column="61"/></literal></expr></argument>,
		 <argument><expr><ternary><condition><expr><operator pos:line="75" pos:column="18">(<pos:position pos:line="75" pos:column="19"/></operator><name pos:line="75" pos:column="19">loader_vtable<pos:position pos:line="75" pos:column="32"/></name> <operator pos:line="75" pos:column="33">&amp;&amp;<pos:position pos:line="75" pos:column="43"/></operator> <name><name pos:line="75" pos:column="36">loader_vtable<pos:position pos:line="75" pos:column="49"/></name><operator pos:line="75" pos:column="49">-&gt;<pos:position pos:line="75" pos:column="54"/></operator><name pos:line="75" pos:column="51">name<pos:position pos:line="75" pos:column="55"/></name></name><operator pos:line="75" pos:column="55">)<pos:position pos:line="75" pos:column="56"/></operator></expr> ?<pos:position pos:line="75" pos:column="58"/></condition><then pos:line="75" pos:column="58"> <expr><name><name pos:line="75" pos:column="59">loader_vtable<pos:position pos:line="75" pos:column="72"/></name><operator pos:line="75" pos:column="72">-&gt;<pos:position pos:line="75" pos:column="77"/></operator><name pos:line="75" pos:column="74">name<pos:position pos:line="75" pos:column="78"/></name></name></expr> <pos:position pos:line="75" pos:column="79"/></then><else pos:line="75" pos:column="79">: <expr><literal type="string" pos:line="75" pos:column="81">"(null)"<pos:position pos:line="75" pos:column="89"/></literal></expr></else></ternary></expr></argument>,
		 <argument><expr><ternary><condition><expr><name pos:line="76" pos:column="18">filename<pos:position pos:line="76" pos:column="26"/></name></expr> ?<pos:position pos:line="76" pos:column="28"/></condition><then pos:line="76" pos:column="28"> <expr><name pos:line="76" pos:column="29">filename<pos:position pos:line="76" pos:column="37"/></name></expr> <pos:position pos:line="76" pos:column="38"/></then><else pos:line="76" pos:column="38">: <expr><literal type="string" pos:line="76" pos:column="40">"(null)"<pos:position pos:line="76" pos:column="48"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="76" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="50"/></expr_stmt>
<cpp:endif pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">endif<pos:position pos:line="77" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="78" pos:column="9">handle<pos:position pos:line="78" pos:column="15"/></name><operator pos:line="78" pos:column="15">-&gt;<pos:position pos:line="78" pos:column="20"/></operator><name pos:line="78" pos:column="17">module<pos:position pos:line="78" pos:column="23"/></name></name> <operator pos:line="78" pos:column="24">=<pos:position pos:line="78" pos:column="25"/></operator> <call pos:line="78" pos:column="26">(<modifier pos:line="78" pos:column="27">*<pos:position pos:line="78" pos:column="28"/></modifier><name><name pos:line="78" pos:column="28">loader_vtable<pos:position pos:line="78" pos:column="41"/></name><operator pos:line="78" pos:column="41">-&gt;<pos:position pos:line="78" pos:column="46"/></operator><name pos:line="78" pos:column="43">module_open<pos:position pos:line="78" pos:column="54"/></name></name>) <argument_list pos:line="78" pos:column="56">(<argument><expr><name><name pos:line="78" pos:column="57">loader_vtable<pos:position pos:line="78" pos:column="70"/></name><operator pos:line="78" pos:column="70">-&gt;<pos:position pos:line="78" pos:column="75"/></operator><name pos:line="78" pos:column="72">dlloader_data<pos:position pos:line="78" pos:column="85"/></name></name></expr></argument>,
							<argument><expr><name pos:line="79" pos:column="57">filename<pos:position pos:line="79" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="67">advise<pos:position pos:line="79" pos:column="73"/></name></expr></argument>)<pos:position pos:line="79" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="75"/></expr_stmt>
<cpp:ifdef pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">ifdef<pos:position pos:line="80" pos:column="7"/></cpp:directive> <name pos:line="80" pos:column="8">LT_DEBUG_LOADERS<pos:position pos:line="80" pos:column="24"/></name></cpp:ifdef>
	<expr_stmt><expr><call><name pos:line="81" pos:column="9">fprintf<pos:position pos:line="81" pos:column="16"/></name> <argument_list pos:line="81" pos:column="17">(<argument><expr><name pos:line="81" pos:column="18">stderr<pos:position pos:line="81" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="26">"  Result: %s\n"<pos:position pos:line="81" pos:column="42"/></literal></expr></argument>,
		 <argument><expr><ternary><condition><expr><name><name pos:line="82" pos:column="18">handle<pos:position pos:line="82" pos:column="24"/></name><operator pos:line="82" pos:column="24">-&gt;<pos:position pos:line="82" pos:column="29"/></operator><name pos:line="82" pos:column="26">module<pos:position pos:line="82" pos:column="32"/></name></name></expr> ?<pos:position pos:line="82" pos:column="34"/></condition><then pos:line="82" pos:column="34"> <expr><literal type="string" pos:line="82" pos:column="35">"Success"<pos:position pos:line="82" pos:column="44"/></literal></expr> <pos:position pos:line="82" pos:column="45"/></then><else pos:line="82" pos:column="45">: <expr><literal type="string" pos:line="82" pos:column="47">"Failed"<pos:position pos:line="82" pos:column="55"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="82" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">endif<pos:position pos:line="83" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name><name pos:line="85" pos:column="13">handle<pos:position pos:line="85" pos:column="19"/></name><operator pos:line="85" pos:column="19">-&gt;<pos:position pos:line="85" pos:column="24"/></operator><name pos:line="85" pos:column="21">module<pos:position pos:line="85" pos:column="27"/></name></name> <operator pos:line="85" pos:column="28">!=<pos:position pos:line="85" pos:column="30"/></operator> <literal type="number" pos:line="85" pos:column="31">0<pos:position pos:line="85" pos:column="32"/></literal></expr>)<pos:position pos:line="85" pos:column="33"/></condition><then pos:line="85" pos:column="33">
	  <block pos:line="86" pos:column="11">{
	    <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><name pos:line="87" pos:column="17">advise<pos:position pos:line="87" pos:column="23"/></name></expr>)<pos:position pos:line="87" pos:column="24"/></condition><then pos:line="87" pos:column="24">
	      <block pos:line="88" pos:column="15">{
		<expr_stmt><expr><name><name pos:line="89" pos:column="17">handle<pos:position pos:line="89" pos:column="23"/></name><operator pos:line="89" pos:column="23">-&gt;<pos:position pos:line="89" pos:column="28"/></operator><name pos:line="89" pos:column="25">info<pos:position pos:line="89" pos:column="29"/></name><operator pos:line="89" pos:column="29">.<pos:position pos:line="89" pos:column="30"/></operator><name pos:line="89" pos:column="30">is_resident<pos:position pos:line="89" pos:column="41"/></name></name>  <operator pos:line="89" pos:column="43">=<pos:position pos:line="89" pos:column="44"/></operator> <name><name pos:line="89" pos:column="45">advise<pos:position pos:line="89" pos:column="51"/></name><operator pos:line="89" pos:column="51">-&gt;<pos:position pos:line="89" pos:column="56"/></operator><name pos:line="89" pos:column="53">is_resident<pos:position pos:line="89" pos:column="64"/></name></name></expr>;<pos:position pos:line="89" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="90" pos:column="17">handle<pos:position pos:line="90" pos:column="23"/></name><operator pos:line="90" pos:column="23">-&gt;<pos:position pos:line="90" pos:column="28"/></operator><name pos:line="90" pos:column="25">info<pos:position pos:line="90" pos:column="29"/></name><operator pos:line="90" pos:column="29">.<pos:position pos:line="90" pos:column="30"/></operator><name pos:line="90" pos:column="30">is_symglobal<pos:position pos:line="90" pos:column="42"/></name></name> <operator pos:line="90" pos:column="43">=<pos:position pos:line="90" pos:column="44"/></operator> <name><name pos:line="90" pos:column="45">advise<pos:position pos:line="90" pos:column="51"/></name><operator pos:line="90" pos:column="51">-&gt;<pos:position pos:line="90" pos:column="56"/></operator><name pos:line="90" pos:column="53">is_symglobal<pos:position pos:line="90" pos:column="65"/></name></name></expr>;<pos:position pos:line="90" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="91" pos:column="17">handle<pos:position pos:line="91" pos:column="23"/></name><operator pos:line="91" pos:column="23">-&gt;<pos:position pos:line="91" pos:column="28"/></operator><name pos:line="91" pos:column="25">info<pos:position pos:line="91" pos:column="29"/></name><operator pos:line="91" pos:column="29">.<pos:position pos:line="91" pos:column="30"/></operator><name pos:line="91" pos:column="30">is_symlocal<pos:position pos:line="91" pos:column="41"/></name></name>  <operator pos:line="91" pos:column="43">=<pos:position pos:line="91" pos:column="44"/></operator> <name><name pos:line="91" pos:column="45">advise<pos:position pos:line="91" pos:column="51"/></name><operator pos:line="91" pos:column="51">-&gt;<pos:position pos:line="91" pos:column="56"/></operator><name pos:line="91" pos:column="53">is_symlocal<pos:position pos:line="91" pos:column="64"/></name></name></expr>;<pos:position pos:line="91" pos:column="65"/></expr_stmt>
	      }<pos:position pos:line="92" pos:column="16"/></block></then></if>
	    <break pos:line="93" pos:column="13">break;<pos:position pos:line="93" pos:column="19"/></break>
	  }<pos:position pos:line="94" pos:column="12"/></block></then></if>
      }<pos:position pos:line="95" pos:column="8"/></block>
    while <condition pos:line="96" pos:column="11">(<expr><operator pos:line="96" pos:column="12">!<pos:position pos:line="96" pos:column="13"/></operator><name pos:line="96" pos:column="13">vtable<pos:position pos:line="96" pos:column="19"/></name> <operator pos:line="96" pos:column="20">&amp;&amp;<pos:position pos:line="96" pos:column="30"/></operator> <operator pos:line="96" pos:column="23">(<pos:position pos:line="96" pos:column="24"/></operator><name pos:line="96" pos:column="24">loader<pos:position pos:line="96" pos:column="30"/></name> <operator pos:line="96" pos:column="31">=<pos:position pos:line="96" pos:column="32"/></operator> <call><name pos:line="96" pos:column="33">lt_dlloader_next<pos:position pos:line="96" pos:column="49"/></name> <argument_list pos:line="96" pos:column="50">(<argument><expr><name pos:line="96" pos:column="51">loader<pos:position pos:line="96" pos:column="57"/></name></expr></argument>)<pos:position pos:line="96" pos:column="58"/></argument_list></call><operator pos:line="96" pos:column="58">)<pos:position pos:line="96" pos:column="59"/></operator></expr>)<pos:position pos:line="96" pos:column="60"/></condition>;<pos:position pos:line="96" pos:column="61"/></do>

    <comment type="block" pos:line="98" pos:column="5">/* If VTABLE was given but couldn't open the module, or VTABLE wasn't
       given but we exhausted all loaders without opening the module, bail
       out!  */</comment>
    <if pos:line="101" pos:column="5">if <condition pos:line="101" pos:column="8">(<expr><operator pos:line="101" pos:column="9">(<pos:position pos:line="101" pos:column="10"/></operator><name pos:line="101" pos:column="10">vtable<pos:position pos:line="101" pos:column="16"/></name> <operator pos:line="101" pos:column="17">&amp;&amp;<pos:position pos:line="101" pos:column="27"/></operator> <operator pos:line="101" pos:column="20">!<pos:position pos:line="101" pos:column="21"/></operator><name><name pos:line="101" pos:column="21">handle<pos:position pos:line="101" pos:column="27"/></name><operator pos:line="101" pos:column="27">-&gt;<pos:position pos:line="101" pos:column="32"/></operator><name pos:line="101" pos:column="29">module<pos:position pos:line="101" pos:column="35"/></name></name><operator pos:line="101" pos:column="35">)<pos:position pos:line="101" pos:column="36"/></operator>
	<operator pos:line="102" pos:column="9">||<pos:position pos:line="102" pos:column="11"/></operator> <operator pos:line="102" pos:column="12">(<pos:position pos:line="102" pos:column="13"/></operator><operator pos:line="102" pos:column="13">!<pos:position pos:line="102" pos:column="14"/></operator><name pos:line="102" pos:column="14">vtable<pos:position pos:line="102" pos:column="20"/></name> <operator pos:line="102" pos:column="21">&amp;&amp;<pos:position pos:line="102" pos:column="31"/></operator> <operator pos:line="102" pos:column="24">!<pos:position pos:line="102" pos:column="25"/></operator><name pos:line="102" pos:column="25">loader<pos:position pos:line="102" pos:column="31"/></name><operator pos:line="102" pos:column="31">)<pos:position pos:line="102" pos:column="32"/></operator></expr>)<pos:position pos:line="102" pos:column="33"/></condition><then pos:line="102" pos:column="33">
      <block pos:line="103" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="104" pos:column="9">FREE<pos:position pos:line="104" pos:column="13"/></name> <argument_list pos:line="104" pos:column="14">(<argument><expr><name><name pos:line="104" pos:column="15">handle<pos:position pos:line="104" pos:column="21"/></name><operator pos:line="104" pos:column="21">-&gt;<pos:position pos:line="104" pos:column="26"/></operator><name pos:line="104" pos:column="23">info<pos:position pos:line="104" pos:column="27"/></name><operator pos:line="104" pos:column="27">.<pos:position pos:line="104" pos:column="28"/></operator><name pos:line="104" pos:column="28">filename<pos:position pos:line="104" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="105" pos:column="9">++<pos:position pos:line="105" pos:column="11"/></operator><name pos:line="105" pos:column="11">errors<pos:position pos:line="105" pos:column="17"/></name></expr>;<pos:position pos:line="105" pos:column="18"/></expr_stmt>
	<goto pos:line="106" pos:column="9">goto <name pos:line="106" pos:column="14">done<pos:position pos:line="106" pos:column="18"/></name>;<pos:position pos:line="106" pos:column="19"/></goto>
      }<pos:position pos:line="107" pos:column="8"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="109" pos:column="5">handle<pos:position pos:line="109" pos:column="11"/></name><operator pos:line="109" pos:column="11">-&gt;<pos:position pos:line="109" pos:column="16"/></operator><name pos:line="109" pos:column="13">vtable<pos:position pos:line="109" pos:column="19"/></name></name> <operator pos:line="109" pos:column="20">=<pos:position pos:line="109" pos:column="21"/></operator> <name pos:line="109" pos:column="22">loader_vtable<pos:position pos:line="109" pos:column="35"/></name></expr>;<pos:position pos:line="109" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="110" pos:column="4"/></block>

  <expr_stmt><expr><call><name pos:line="112" pos:column="3">LT__SETERRORSTR<pos:position pos:line="112" pos:column="18"/></name> <argument_list pos:line="112" pos:column="19">(<argument><expr><name pos:line="112" pos:column="20">saved_error<pos:position pos:line="112" pos:column="31"/></name></expr></argument>)<pos:position pos:line="112" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="33"/></expr_stmt>

 <label><name pos:line="114" pos:column="2">done<pos:position pos:line="114" pos:column="6"/></name>:<pos:position pos:line="114" pos:column="7"/></label>
  <return pos:line="115" pos:column="3">return <expr><name pos:line="115" pos:column="10">errors<pos:position pos:line="115" pos:column="16"/></name></expr>;<pos:position pos:line="115" pos:column="17"/></return>
}<pos:position pos:line="116" pos:column="2"/></block></function></unit>

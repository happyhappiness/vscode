<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1562_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wrr_connect<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">riemann_host<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">host<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <specifier pos:line="3" pos:column="8">const<pos:position pos:line="3" pos:column="13"/></specifier> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">node<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">port<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">host<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">client<pos:position pos:line="6" pos:column="19"/></name></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="9" pos:column="3">node<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <ternary><condition><expr><operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><name><name pos:line="9" pos:column="11">host<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">node<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">!=<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="25">NULL<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">)<pos:position pos:line="9" pos:column="30"/></operator></expr> ?<pos:position pos:line="9" pos:column="32"/></condition><then pos:line="9" pos:column="32"> <expr><name><name pos:line="9" pos:column="33">host<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">-&gt;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="39">node<pos:position pos:line="9" pos:column="43"/></name></name></expr> <pos:position pos:line="9" pos:column="44"/></then><else pos:line="9" pos:column="44">: <expr><name pos:line="9" pos:column="46">RIEMANN_HOST<pos:position pos:line="9" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><name pos:line="10" pos:column="3">port<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <ternary><condition><expr><operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator><name><name pos:line="10" pos:column="11">host<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">port<pos:position pos:line="10" pos:column="21"/></name></name><operator pos:line="10" pos:column="21">)<pos:position pos:line="10" pos:column="22"/></operator></expr> ?<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24"> <expr><name><name pos:line="10" pos:column="25">host<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">port<pos:position pos:line="10" pos:column="35"/></name></name></expr> <pos:position pos:line="10" pos:column="36"/></then><else pos:line="10" pos:column="36">: <expr><name pos:line="10" pos:column="38">RIEMANN_PORT<pos:position pos:line="10" pos:column="50"/></name></expr></else></ternary></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="12" pos:column="3">host<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">client<pos:position pos:line="12" pos:column="15"/></name></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">NULL<pos:position pos:line="12" pos:column="22"/></name></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="14" pos:column="3">host<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">client<pos:position pos:line="14" pos:column="15"/></name></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">riemann_client_create<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(
      <argument><expr><name><name pos:line="15" pos:column="7">host<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">client_type<pos:position pos:line="15" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="26">node<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">port<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">RIEMANN_CLIENT_OPTION_TLS_CA_FILE<pos:position pos:line="15" pos:column="71"/></name></expr></argument>,
      <argument><expr><name><name pos:line="16" pos:column="7">host<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">tls_ca_file<pos:position pos:line="16" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="26">RIEMANN_CLIENT_OPTION_TLS_CERT_FILE<pos:position pos:line="16" pos:column="61"/></name></expr></argument>,
      <argument><expr><name><name pos:line="17" pos:column="7">host<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">tls_cert_file<pos:position pos:line="17" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="28">RIEMANN_CLIENT_OPTION_TLS_KEY_FILE<pos:position pos:line="17" pos:column="62"/></name></expr></argument>,
      <argument><expr><name><name pos:line="18" pos:column="7">host<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">tls_key_file<pos:position pos:line="18" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="27">RIEMANN_CLIENT_OPTION_NONE<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name><name pos:line="19" pos:column="7">host<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">client<pos:position pos:line="19" pos:column="19"/></name></name> <operator pos:line="19" pos:column="20">==<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">NULL<pos:position pos:line="19" pos:column="27"/></name></expr>)<pos:position pos:line="19" pos:column="28"/></condition><then pos:line="19" pos:column="28"> <block pos:line="19" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">c_complain<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">LOG_ERR<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="25">&amp;<pos:position pos:line="20" pos:column="30"/></operator><name><name pos:line="20" pos:column="26">host<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">init_complaint<pos:position pos:line="20" pos:column="46"/></name></name></expr></argument>,
               <argument><expr><literal type="string" pos:line="21" pos:column="16">"write_riemann plugin: Unable to connect to Riemann at %s:%d"<pos:position pos:line="21" pos:column="77"/></literal></expr></argument>,
               <argument><expr><name pos:line="22" pos:column="16">node<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="22">port<pos:position pos:line="22" pos:column="26"/></name></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">-<pos:position pos:line="23" pos:column="13"/></operator><literal type="number" pos:line="23" pos:column="13">1<pos:position pos:line="23" pos:column="14"/></literal></expr>;<pos:position pos:line="23" pos:column="15"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
<cpp:if pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">if<pos:position pos:line="25" pos:column="4"/></cpp:directive> <expr><name pos:line="25" pos:column="5">RCC_VERSION_NUMBER<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">&gt;=<pos:position pos:line="25" pos:column="29"/></operator> <literal type="number" pos:line="25" pos:column="27">0x010800<pos:position pos:line="25" pos:column="35"/></literal></expr></cpp:if>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name><name pos:line="26" pos:column="7">host<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">timeout<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">.<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">tv_sec<pos:position pos:line="26" pos:column="27"/></name></name> <operator pos:line="26" pos:column="28">!=<pos:position pos:line="26" pos:column="30"/></operator> <literal type="number" pos:line="26" pos:column="31">0<pos:position pos:line="26" pos:column="32"/></literal></expr>)<pos:position pos:line="26" pos:column="33"/></condition><then pos:line="26" pos:column="33"> <block pos:line="26" pos:column="34">{
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><call><name pos:line="27" pos:column="9">riemann_client_set_timeout<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name><name pos:line="27" pos:column="36">host<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">-&gt;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="42">client<pos:position pos:line="27" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="50">&amp;<pos:position pos:line="27" pos:column="55"/></operator><name><name pos:line="27" pos:column="51">host<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">timeout<pos:position pos:line="27" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call> <operator pos:line="27" pos:column="66">!=<pos:position pos:line="27" pos:column="68"/></operator> <literal type="number" pos:line="27" pos:column="69">0<pos:position pos:line="27" pos:column="70"/></literal></expr>)<pos:position pos:line="27" pos:column="71"/></condition><then pos:line="27" pos:column="71"> <block pos:line="27" pos:column="72">{
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">riemann_client_free<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name><name pos:line="28" pos:column="27">host<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">client<pos:position pos:line="28" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="29" pos:column="7">host<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="13">client<pos:position pos:line="29" pos:column="19"/></name></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="22">NULL<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">c_complain<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><name pos:line="30" pos:column="18">LOG_ERR<pos:position pos:line="30" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="27">&amp;<pos:position pos:line="30" pos:column="32"/></operator><name><name pos:line="30" pos:column="28">host<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">-&gt;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="34">init_complaint<pos:position pos:line="30" pos:column="48"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="31" pos:column="18">"write_riemann plugin: Unable to connect to Riemann at %s:%d"<pos:position pos:line="31" pos:column="79"/></literal></expr></argument>,
                 <argument><expr><name pos:line="32" pos:column="18">node<pos:position pos:line="32" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="24">port<pos:position pos:line="32" pos:column="28"/></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
      <return pos:line="33" pos:column="7">return <expr><operator pos:line="33" pos:column="14">-<pos:position pos:line="33" pos:column="15"/></operator><literal type="number" pos:line="33" pos:column="15">1<pos:position pos:line="33" pos:column="16"/></literal></expr>;<pos:position pos:line="33" pos:column="17"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">set_sock_opts<pos:position pos:line="38" pos:column="16"/></name><argument_list pos:line="38" pos:column="16">(<argument><expr><call><name pos:line="38" pos:column="17">riemann_client_get_fd<pos:position pos:line="38" pos:column="38"/></name><argument_list pos:line="38" pos:column="38">(<argument><expr><name><name pos:line="38" pos:column="39">host<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">-&gt;<pos:position pos:line="38" pos:column="48"/></operator><name pos:line="38" pos:column="45">client<pos:position pos:line="38" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">c_release<pos:position pos:line="40" pos:column="12"/></name><argument_list pos:line="40" pos:column="12">(<argument><expr><name pos:line="40" pos:column="13">LOG_INFO<pos:position pos:line="40" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="23">&amp;<pos:position pos:line="40" pos:column="28"/></operator><name><name pos:line="40" pos:column="24">host<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">-&gt;<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="30">init_complaint<pos:position pos:line="40" pos:column="44"/></name></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="41" pos:column="13">"write_riemann plugin: Successfully connected to %s:%d"<pos:position pos:line="41" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="70">node<pos:position pos:line="41" pos:column="74"/></name></expr></argument>,
            <argument><expr><name pos:line="42" pos:column="13">port<pos:position pos:line="42" pos:column="17"/></name></expr></argument>)<pos:position pos:line="42" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="19"/></expr_stmt>

  <return pos:line="44" pos:column="3">return <expr><literal type="number" pos:line="44" pos:column="10">0<pos:position pos:line="44" pos:column="11"/></literal></expr>;<pos:position pos:line="44" pos:column="12"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2385_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cj_cb_string<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">ctx<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">unsigned<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">val<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">yajl_len_t<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">len<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list> <block pos:line="1" pos:column="78">{
  <comment type="block" pos:line="2" pos:column="3">/* Handle the string as if it was a number. */</comment>
  <return pos:line="3" pos:column="3">return <expr><call><name pos:line="3" pos:column="10">cj_cb_number<pos:position pos:line="3" pos:column="22"/></name><argument_list pos:line="3" pos:column="22">(<argument><expr><name pos:line="3" pos:column="23">ctx<pos:position pos:line="3" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="28">(<pos:position pos:line="3" pos:column="29"/></operator><specifier pos:line="3" pos:column="29">const<pos:position pos:line="3" pos:column="34"/></specifier> <name pos:line="3" pos:column="35">char<pos:position pos:line="3" pos:column="39"/></name> <operator pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></operator><operator pos:line="3" pos:column="41">)<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="42">val<pos:position pos:line="3" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="47">len<pos:position pos:line="3" pos:column="50"/></name></expr></argument>)<pos:position pos:line="3" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="52"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

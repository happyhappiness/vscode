<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2607_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dispatch_value_typesdb<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">oconfig_item_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ci<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <block pos:line="1" pos:column="55">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">assert<pos:position pos:line="2" pos:column="9"/></name><argument_list pos:line="2" pos:column="9">(<argument><expr><call><name pos:line="2" pos:column="10">strcasecmp<pos:position pos:line="2" pos:column="20"/></name><argument_list pos:line="2" pos:column="20">(<argument><expr><name><name pos:line="2" pos:column="21">ci<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">-&gt;<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="25">key<pos:position pos:line="2" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="2" pos:column="30">"TypesDB"<pos:position pos:line="2" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="2" pos:column="40"/></argument_list></call> <operator pos:line="2" pos:column="41">==<pos:position pos:line="2" pos:column="43"/></operator> <literal type="number" pos:line="2" pos:column="44">0<pos:position pos:line="2" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="2" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="47"/></expr_stmt>

  <expr_stmt><expr><name pos:line="4" pos:column="3">cf_default_typesdb<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">=<pos:position pos:line="4" pos:column="23"/></operator> <literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">ci<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">values_num<pos:position pos:line="6" pos:column="21"/></name></name> <operator pos:line="6" pos:column="22">&lt;<pos:position pos:line="6" pos:column="26"/></operator> <literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal></expr>)<pos:position pos:line="6" pos:column="26"/></condition><then pos:line="6" pos:column="26"> <block pos:line="6" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ERROR<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><literal type="string" pos:line="7" pos:column="11">"configfile: `TypesDB' needs at least one argument."<pos:position pos:line="7" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="65"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><literal type="number" pos:line="8" pos:column="14">1<pos:position pos:line="8" pos:column="15"/></literal><operator pos:line="8" pos:column="15">)<pos:position pos:line="8" pos:column="16"/></operator></expr>;<pos:position pos:line="8" pos:column="17"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><decl><type><name pos:line="11" pos:column="8">int<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">i<pos:position pos:line="11" pos:column="13"/></name> <init pos:line="11" pos:column="14">= <expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="18"/></init> <condition><expr><name pos:line="11" pos:column="19">i<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&lt;<pos:position pos:line="11" pos:column="25"/></operator> <name><name pos:line="11" pos:column="23">ci<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">values_num<pos:position pos:line="11" pos:column="37"/></name></name></expr>;<pos:position pos:line="11" pos:column="38"/></condition> <incr><expr><operator pos:line="11" pos:column="39">++<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">i<pos:position pos:line="11" pos:column="42"/></name></expr></incr>)<pos:position pos:line="11" pos:column="43"/></control> <block pos:line="11" pos:column="44">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">OCONFIG_TYPE_STRING<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">!=<pos:position pos:line="12" pos:column="31"/></operator> <name><name pos:line="12" pos:column="32">ci<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">values<pos:position pos:line="12" pos:column="42"/></name><index pos:line="12" pos:column="42">[<expr><name pos:line="12" pos:column="43">i<pos:position pos:line="12" pos:column="44"/></name></expr>]<pos:position pos:line="12" pos:column="45"/></index></name><operator pos:line="12" pos:column="45">.<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="46">type<pos:position pos:line="12" pos:column="50"/></name></expr>)<pos:position pos:line="12" pos:column="51"/></condition><then pos:line="12" pos:column="51"> <block pos:line="12" pos:column="52">{
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">WARNING<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><literal type="string" pos:line="13" pos:column="15">"configfile: TypesDB: Skipping %i. argument which "<pos:position pos:line="13" pos:column="66"/></literal>
              <literal type="string" pos:line="14" pos:column="15">"is not a string."<pos:position pos:line="14" pos:column="33"/></literal></expr></argument>,
              <argument><expr><name pos:line="15" pos:column="15">i<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">+<pos:position pos:line="15" pos:column="18"/></operator> <literal type="number" pos:line="15" pos:column="19">1<pos:position pos:line="15" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
      <continue pos:line="16" pos:column="7">continue;<pos:position pos:line="16" pos:column="16"/></continue>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">read_types_list<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name><name pos:line="19" pos:column="21">ci<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">-&gt;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="25">values<pos:position pos:line="19" pos:column="31"/></name><index pos:line="19" pos:column="31">[<expr><name pos:line="19" pos:column="32">i<pos:position pos:line="19" pos:column="33"/></name></expr>]<pos:position pos:line="19" pos:column="34"/></index></name><operator pos:line="19" pos:column="34">.<pos:position pos:line="19" pos:column="35"/></operator><name><name pos:line="19" pos:column="35">value<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">.<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">string<pos:position pos:line="19" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></for>
  <return pos:line="21" pos:column="3">return <expr><operator pos:line="21" pos:column="10">(<pos:position pos:line="21" pos:column="11"/></operator><literal type="number" pos:line="21" pos:column="11">0<pos:position pos:line="21" pos:column="12"/></literal><operator pos:line="21" pos:column="12">)<pos:position pos:line="21" pos:column="13"/></operator></expr>;<pos:position pos:line="21" pos:column="14"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

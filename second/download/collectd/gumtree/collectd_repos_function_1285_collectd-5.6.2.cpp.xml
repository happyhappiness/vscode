<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1285_collectd-5.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">DispatchValues<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">value_list_t<pos:position pos:line="1" pos:column="32"/></name> <specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">vl<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list> <block pos:line="1" pos:column="44">{
		<decl_stmt><decl><type><name><name pos:line="2" pos:column="17">grpc<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">ClientContext<pos:position pos:line="2" pos:column="36"/></name></name></type> <name pos:line="2" pos:column="37">ctx<pos:position pos:line="2" pos:column="40"/></name></decl>;<pos:position pos:line="2" pos:column="41"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="4" pos:column="17">DispatchValuesRequest<pos:position pos:line="4" pos:column="38"/></name></type> <name pos:line="4" pos:column="39">req<pos:position pos:line="4" pos:column="42"/></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">auto<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">status<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><call><name pos:line="5" pos:column="31">marshal_value_list<pos:position pos:line="5" pos:column="49"/></name><argument_list pos:line="5" pos:column="49">(<argument><expr><name pos:line="5" pos:column="50">vl<pos:position pos:line="5" pos:column="52"/></name></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="54">req<pos:position pos:line="5" pos:column="57"/></name><operator pos:line="5" pos:column="57">.<pos:position pos:line="5" pos:column="58"/></operator><name pos:line="5" pos:column="58">mutable_value_list<pos:position pos:line="5" pos:column="76"/></name></name><argument_list pos:line="5" pos:column="76">()<pos:position pos:line="5" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="80"/></decl_stmt>
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><operator pos:line="6" pos:column="21">!<pos:position pos:line="6" pos:column="22"/></operator><call><name><name pos:line="6" pos:column="22">status<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">.<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">ok<pos:position pos:line="6" pos:column="31"/></name></name><argument_list pos:line="6" pos:column="31">()<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34"> <block pos:line="6" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="7" pos:column="25">ERROR<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><literal type="string" pos:line="7" pos:column="31">"grpc: Marshalling value_list_t failed."<pos:position pos:line="7" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="73"/></expr_stmt>
			<return pos:line="8" pos:column="25">return <expr><operator pos:line="8" pos:column="32">-<pos:position pos:line="8" pos:column="33"/></operator><literal type="number" pos:line="8" pos:column="33">1<pos:position pos:line="8" pos:column="34"/></literal></expr>;<pos:position pos:line="8" pos:column="35"/></return>
		}<pos:position pos:line="9" pos:column="18"/></block></then></if>

		<decl_stmt><decl><type><name pos:line="11" pos:column="17">DispatchValuesResponse<pos:position pos:line="11" pos:column="39"/></name></type> <name pos:line="11" pos:column="40">res<pos:position pos:line="11" pos:column="43"/></name></decl>;<pos:position pos:line="11" pos:column="44"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">auto<pos:position pos:line="12" pos:column="21"/></name></type> <name pos:line="12" pos:column="22">stream<pos:position pos:line="12" pos:column="28"/></name> <init pos:line="12" pos:column="29">= <expr><call><name><name pos:line="12" pos:column="31">stub_<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">DispatchValues<pos:position pos:line="12" pos:column="52"/></name></name><argument_list pos:line="12" pos:column="52">(<argument><expr><operator pos:line="12" pos:column="53">&amp;<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="54">ctx<pos:position pos:line="12" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="59">&amp;<pos:position pos:line="12" pos:column="64"/></operator><name pos:line="12" pos:column="60">res<pos:position pos:line="12" pos:column="63"/></name></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="65"/></decl_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><call><name><name pos:line="13" pos:column="22">stream<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">Write<pos:position pos:line="13" pos:column="35"/></name></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">req<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41"> <block pos:line="13" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">NOTICE<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><literal type="string" pos:line="14" pos:column="32">"grpc: Broken stream."<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>
			<comment type="block" pos:line="15" pos:column="25">/* intentionally not returning. */</comment>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name><name pos:line="18" pos:column="17">stream<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">-&gt;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="25">WritesDone<pos:position pos:line="18" pos:column="35"/></name></name><argument_list pos:line="18" pos:column="35">()<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">status<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <call><name><name pos:line="19" pos:column="26">stream<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">Finish<pos:position pos:line="19" pos:column="40"/></name></name><argument_list pos:line="19" pos:column="40">()<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><call><name><name pos:line="20" pos:column="22">status<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">.<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="29">ok<pos:position pos:line="20" pos:column="31"/></name></name><argument_list pos:line="20" pos:column="31">()<pos:position pos:line="20" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="34"/></condition><then pos:line="20" pos:column="34"> <block pos:line="20" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">ERROR<pos:position pos:line="21" pos:column="30"/></name> <argument_list pos:line="21" pos:column="31">(<argument><expr><literal type="string" pos:line="21" pos:column="32">"grpc: Error while closing stream."<pos:position pos:line="21" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="69"/></expr_stmt>
			<return pos:line="22" pos:column="25">return <expr><operator pos:line="22" pos:column="32">-<pos:position pos:line="22" pos:column="33"/></operator><literal type="number" pos:line="22" pos:column="33">1<pos:position pos:line="22" pos:column="34"/></literal></expr>;<pos:position pos:line="22" pos:column="35"/></return>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>

		<return pos:line="25" pos:column="17">return <expr><literal type="number" pos:line="25" pos:column="24">0<pos:position pos:line="25" pos:column="25"/></literal></expr>;<pos:position pos:line="25" pos:column="26"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></function></unit>

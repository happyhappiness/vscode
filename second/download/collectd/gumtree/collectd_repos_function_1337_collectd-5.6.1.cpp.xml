<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1337_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">za_read<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">gauge_t<pos:position pos:line="3" pos:column="16"/></name></type>  <name pos:line="3" pos:column="18">arc_hits<pos:position pos:line="3" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="28">arc_misses<pos:position pos:line="3" pos:column="38"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="40">l2_hits<pos:position pos:line="3" pos:column="47"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="49">l2_misses<pos:position pos:line="3" pos:column="58"/></name></decl>;<pos:position pos:line="3" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">value_t<pos:position pos:line="4" pos:column="16"/></name></type>  <name><name pos:line="4" pos:column="18">l2_io<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><literal type="number" pos:line="4" pos:column="24">2<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">kstat_t<pos:position pos:line="5" pos:column="16"/></name>	 <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">ksp<pos:position pos:line="5" pos:column="22"/></name>	<init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">NULL<pos:position pos:line="5" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><call><name pos:line="7" pos:column="5">defined<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">KERNEL_LINUX<pos:position pos:line="7" pos:column="25"/></name></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">FILE<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">fh<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type> <name><name pos:line="9" pos:column="14">buffer<pos:position pos:line="9" pos:column="20"/></name><index pos:line="9" pos:column="20">[<expr><literal type="number" pos:line="9" pos:column="21">1024<pos:position pos:line="9" pos:column="25"/></literal></expr>]<pos:position pos:line="9" pos:column="26"/></index></name></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">fh<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">fopen<pos:position pos:line="11" pos:column="19"/></name> <argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">ZOL_ARCSTATS_FILE<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="40">"r"<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">fh<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">==<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">NULL<pos:position pos:line="12" pos:column="23"/></name></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24">
	<block pos:line="13" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">char<pos:position pos:line="14" pos:column="21"/></name></type> <name><name pos:line="14" pos:column="22">errbuf<pos:position pos:line="14" pos:column="28"/></name><index pos:line="14" pos:column="28">[<expr><literal type="number" pos:line="14" pos:column="29">1024<pos:position pos:line="14" pos:column="33"/></literal></expr>]<pos:position pos:line="14" pos:column="34"/></index></name></decl>;<pos:position pos:line="14" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">ERROR<pos:position pos:line="15" pos:column="22"/></name> <argument_list pos:line="15" pos:column="23">(<argument><expr><literal type="string" pos:line="15" pos:column="24">"zfs_arc plugin: Opening \"%s\" failed: %s"<pos:position pos:line="15" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="69">ZOL_ARCSTATS_FILE<pos:position pos:line="15" pos:column="86"/></name></expr></argument>,
		       <argument><expr><call><name pos:line="16" pos:column="24">sstrerror<pos:position pos:line="16" pos:column="33"/></name> <argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">errno<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="42">errbuf<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="50">sizeof <argument_list pos:line="16" pos:column="57">(<argument><expr><name pos:line="16" pos:column="58">errbuf<pos:position pos:line="16" pos:column="64"/></name></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><operator pos:line="17" pos:column="25">-<pos:position pos:line="17" pos:column="26"/></operator><literal type="number" pos:line="17" pos:column="26">1<pos:position pos:line="17" pos:column="27"/></literal><operator pos:line="17" pos:column="27">)<pos:position pos:line="17" pos:column="28"/></operator></expr>;<pos:position pos:line="17" pos:column="29"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="20" pos:column="9">ksp<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">llist_create<pos:position pos:line="20" pos:column="27"/></name> <argument_list pos:line="20" pos:column="28">()<pos:position pos:line="20" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">ksp<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">==<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">NULL<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25">
	<block pos:line="22" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">ERROR<pos:position pos:line="23" pos:column="22"/></name> <argument_list pos:line="23" pos:column="23">(<argument><expr><literal type="string" pos:line="23" pos:column="24">"zfs_arc plugin: `llist_create' failed."<pos:position pos:line="23" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">fclose<pos:position pos:line="24" pos:column="23"/></name> <argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">fh<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
		<return pos:line="25" pos:column="17">return <expr><operator pos:line="25" pos:column="24">(<pos:position pos:line="25" pos:column="25"/></operator><operator pos:line="25" pos:column="25">-<pos:position pos:line="25" pos:column="26"/></operator><literal type="number" pos:line="25" pos:column="26">1<pos:position pos:line="25" pos:column="27"/></literal><operator pos:line="25" pos:column="27">)<pos:position pos:line="25" pos:column="28"/></operator></expr>;<pos:position pos:line="25" pos:column="29"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<while pos:line="28" pos:column="9">while <condition pos:line="28" pos:column="15">(<expr><call><name pos:line="28" pos:column="16">fgets<pos:position pos:line="28" pos:column="21"/></name> <argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">buffer<pos:position pos:line="28" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="31">sizeof <argument_list pos:line="28" pos:column="38">(<argument><expr><name pos:line="28" pos:column="39">buffer<pos:position pos:line="28" pos:column="45"/></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="28" pos:column="48">fh<pos:position pos:line="28" pos:column="50"/></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call> <operator pos:line="28" pos:column="52">!=<pos:position pos:line="28" pos:column="54"/></operator> <name pos:line="28" pos:column="55">NULL<pos:position pos:line="28" pos:column="59"/></name></expr>)<pos:position pos:line="28" pos:column="60"/></condition>
	<block pos:line="29" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="30" pos:column="17">char<pos:position pos:line="30" pos:column="21"/></name> <modifier pos:line="30" pos:column="22">*<pos:position pos:line="30" pos:column="23"/></modifier></type><name><name pos:line="30" pos:column="23">fields<pos:position pos:line="30" pos:column="29"/></name><index pos:line="30" pos:column="29">[<expr><literal type="number" pos:line="30" pos:column="30">3<pos:position pos:line="30" pos:column="31"/></literal></expr>]<pos:position pos:line="30" pos:column="32"/></index></name></decl>;<pos:position pos:line="30" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">value_t<pos:position pos:line="31" pos:column="24"/></name></type> <name pos:line="31" pos:column="25">v<pos:position pos:line="31" pos:column="26"/></name></decl>;<pos:position pos:line="31" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="32" pos:column="17">int<pos:position pos:line="32" pos:column="20"/></name></type> <name pos:line="32" pos:column="21">status<pos:position pos:line="32" pos:column="27"/></name></decl>;<pos:position pos:line="32" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name pos:line="34" pos:column="17">status<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">=<pos:position pos:line="34" pos:column="25"/></operator> <call><name pos:line="34" pos:column="26">strsplit<pos:position pos:line="34" pos:column="34"/></name> <argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">buffer<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="44">fields<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="52">STATIC_ARRAY_SIZE<pos:position pos:line="34" pos:column="69"/></name> <argument_list pos:line="34" pos:column="70">(<argument><expr><name pos:line="34" pos:column="71">fields<pos:position pos:line="34" pos:column="77"/></name></expr></argument>)<pos:position pos:line="34" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="80"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">status<pos:position pos:line="35" pos:column="27"/></name> <operator pos:line="35" pos:column="28">!=<pos:position pos:line="35" pos:column="30"/></operator> <literal type="number" pos:line="35" pos:column="31">3<pos:position pos:line="35" pos:column="32"/></literal></expr>)<pos:position pos:line="35" pos:column="33"/></condition><then pos:line="35" pos:column="33">
			<block type="pseudo"><continue pos:line="36" pos:column="25">continue;<pos:position pos:line="36" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="38" pos:column="17">status<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <call><name pos:line="38" pos:column="26">parse_value<pos:position pos:line="38" pos:column="37"/></name> <argument_list pos:line="38" pos:column="38">(<argument><expr><name><name pos:line="38" pos:column="39">fields<pos:position pos:line="38" pos:column="45"/></name><index pos:line="38" pos:column="45">[<expr><literal type="number" pos:line="38" pos:column="46">2<pos:position pos:line="38" pos:column="47"/></literal></expr>]<pos:position pos:line="38" pos:column="48"/></index></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="50">&amp;<pos:position pos:line="38" pos:column="55"/></operator><name pos:line="38" pos:column="51">v<pos:position pos:line="38" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="54">DS_TYPE_DERIVE<pos:position pos:line="38" pos:column="68"/></name></expr></argument>)<pos:position pos:line="38" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="70"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">status<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">!=<pos:position pos:line="39" pos:column="30"/></operator> <literal type="number" pos:line="39" pos:column="31">0<pos:position pos:line="39" pos:column="32"/></literal></expr>)<pos:position pos:line="39" pos:column="33"/></condition><then pos:line="39" pos:column="33">
			<block type="pseudo"><continue pos:line="40" pos:column="25">continue;<pos:position pos:line="40" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="42" pos:column="17">put_zfs_value<pos:position pos:line="42" pos:column="30"/></name> <argument_list pos:line="42" pos:column="31">(<argument><expr><name pos:line="42" pos:column="32">ksp<pos:position pos:line="42" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="37">fields<pos:position pos:line="42" pos:column="43"/></name><index pos:line="42" pos:column="43">[<expr><literal type="number" pos:line="42" pos:column="44">0<pos:position pos:line="42" pos:column="45"/></literal></expr>]<pos:position pos:line="42" pos:column="46"/></index></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="48">v<pos:position pos:line="42" pos:column="49"/></name></expr></argument>)<pos:position pos:line="42" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="45" pos:column="9">fclose<pos:position pos:line="45" pos:column="15"/></name> <argument_list pos:line="45" pos:column="16">(<argument><expr><name pos:line="45" pos:column="17">fh<pos:position pos:line="45" pos:column="19"/></name></expr></argument>)<pos:position pos:line="45" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>

<cpp:elif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">elif<pos:position pos:line="47" pos:column="6"/></cpp:directive> <expr><call><name pos:line="47" pos:column="7">defined<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><name pos:line="47" pos:column="15">KERNEL_SOLARIS<pos:position pos:line="47" pos:column="29"/></name></expr></argument>)<pos:position pos:line="47" pos:column="30"/></argument_list></call></expr></cpp:elif>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">get_kstat<pos:position pos:line="48" pos:column="18"/></name> <argument_list pos:line="48" pos:column="19">(<argument><expr><operator pos:line="48" pos:column="20">&amp;<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="21">ksp<pos:position pos:line="48" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="26">"zfs"<pos:position pos:line="48" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="33">0<pos:position pos:line="48" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="36">"arcstats"<pos:position pos:line="48" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="48"/></expr_stmt>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">ksp<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">==<pos:position pos:line="49" pos:column="19"/></operator> <name pos:line="49" pos:column="20">NULL<pos:position pos:line="49" pos:column="24"/></name></expr>)<pos:position pos:line="49" pos:column="25"/></condition><then pos:line="49" pos:column="25">
	<block pos:line="50" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">ERROR<pos:position pos:line="51" pos:column="22"/></name> <argument_list pos:line="51" pos:column="23">(<argument><expr><literal type="string" pos:line="51" pos:column="24">"zfs_arc plugin: Cannot find zfs:0:arcstats kstat."<pos:position pos:line="51" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="77"/></expr_stmt>
		<return pos:line="52" pos:column="17">return <expr><operator pos:line="52" pos:column="24">(<pos:position pos:line="52" pos:column="25"/></operator><operator pos:line="52" pos:column="25">-<pos:position pos:line="52" pos:column="26"/></operator><literal type="number" pos:line="52" pos:column="26">1<pos:position pos:line="52" pos:column="27"/></literal><operator pos:line="52" pos:column="27">)<pos:position pos:line="52" pos:column="28"/></operator></expr>;<pos:position pos:line="52" pos:column="29"/></return>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>

	<comment type="block" pos:line="56" pos:column="9">/* Sizes */</comment>
	<expr_stmt><expr><call><name pos:line="57" pos:column="9">za_read_gauge<pos:position pos:line="57" pos:column="22"/></name> <argument_list pos:line="57" pos:column="23">(<argument><expr><name pos:line="57" pos:column="24">ksp<pos:position pos:line="57" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="29">"anon_size"<pos:position pos:line="57" pos:column="40"/></literal></expr></argument>,      <argument><expr><literal type="string" pos:line="57" pos:column="47">"cache_size"<pos:position pos:line="57" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="61">"anon_size"<pos:position pos:line="57" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">za_read_gauge<pos:position pos:line="58" pos:column="22"/></name> <argument_list pos:line="58" pos:column="23">(<argument><expr><name pos:line="58" pos:column="24">ksp<pos:position pos:line="58" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="29">"c"<pos:position pos:line="58" pos:column="32"/></literal></expr></argument>,              <argument><expr><literal type="string" pos:line="58" pos:column="47">"cache_size"<pos:position pos:line="58" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="61">"c"<pos:position pos:line="58" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">za_read_gauge<pos:position pos:line="59" pos:column="22"/></name> <argument_list pos:line="59" pos:column="23">(<argument><expr><name pos:line="59" pos:column="24">ksp<pos:position pos:line="59" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="29">"c_max"<pos:position pos:line="59" pos:column="36"/></literal></expr></argument>,          <argument><expr><literal type="string" pos:line="59" pos:column="47">"cache_size"<pos:position pos:line="59" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="61">"c_max"<pos:position pos:line="59" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">za_read_gauge<pos:position pos:line="60" pos:column="22"/></name> <argument_list pos:line="60" pos:column="23">(<argument><expr><name pos:line="60" pos:column="24">ksp<pos:position pos:line="60" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="29">"c_min"<pos:position pos:line="60" pos:column="36"/></literal></expr></argument>,          <argument><expr><literal type="string" pos:line="60" pos:column="47">"cache_size"<pos:position pos:line="60" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="61">"c_min"<pos:position pos:line="60" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="61" pos:column="9">za_read_gauge<pos:position pos:line="61" pos:column="22"/></name> <argument_list pos:line="61" pos:column="23">(<argument><expr><name pos:line="61" pos:column="24">ksp<pos:position pos:line="61" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="29">"hdr_size"<pos:position pos:line="61" pos:column="39"/></literal></expr></argument>,       <argument><expr><literal type="string" pos:line="61" pos:column="47">"cache_size"<pos:position pos:line="61" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="61">"hdr_size"<pos:position pos:line="61" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">za_read_gauge<pos:position pos:line="62" pos:column="22"/></name> <argument_list pos:line="62" pos:column="23">(<argument><expr><name pos:line="62" pos:column="24">ksp<pos:position pos:line="62" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="29">"metadata_size"<pos:position pos:line="62" pos:column="44"/></literal></expr></argument>,  <argument><expr><literal type="string" pos:line="62" pos:column="47">"cache_size"<pos:position pos:line="62" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="61">"metadata_size"<pos:position pos:line="62" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="78"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">za_read_gauge<pos:position pos:line="63" pos:column="22"/></name> <argument_list pos:line="63" pos:column="23">(<argument><expr><name pos:line="63" pos:column="24">ksp<pos:position pos:line="63" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="29">"mfu_ghost_size"<pos:position pos:line="63" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="47">"cache_size"<pos:position pos:line="63" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="61">"mfu_ghost_size"<pos:position pos:line="63" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="79"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="64" pos:column="9">za_read_gauge<pos:position pos:line="64" pos:column="22"/></name> <argument_list pos:line="64" pos:column="23">(<argument><expr><name pos:line="64" pos:column="24">ksp<pos:position pos:line="64" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="29">"mfu_size"<pos:position pos:line="64" pos:column="39"/></literal></expr></argument>,       <argument><expr><literal type="string" pos:line="64" pos:column="47">"cache_size"<pos:position pos:line="64" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="61">"mfu_size"<pos:position pos:line="64" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">za_read_gauge<pos:position pos:line="65" pos:column="22"/></name> <argument_list pos:line="65" pos:column="23">(<argument><expr><name pos:line="65" pos:column="24">ksp<pos:position pos:line="65" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="29">"mru_ghost_size"<pos:position pos:line="65" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="47">"cache_size"<pos:position pos:line="65" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="61">"mru_ghost_size"<pos:position pos:line="65" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="79"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="66" pos:column="9">za_read_gauge<pos:position pos:line="66" pos:column="22"/></name> <argument_list pos:line="66" pos:column="23">(<argument><expr><name pos:line="66" pos:column="24">ksp<pos:position pos:line="66" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="29">"mru_size"<pos:position pos:line="66" pos:column="39"/></literal></expr></argument>,       <argument><expr><literal type="string" pos:line="66" pos:column="47">"cache_size"<pos:position pos:line="66" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="61">"mru_size"<pos:position pos:line="66" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="67" pos:column="9">za_read_gauge<pos:position pos:line="67" pos:column="22"/></name> <argument_list pos:line="67" pos:column="23">(<argument><expr><name pos:line="67" pos:column="24">ksp<pos:position pos:line="67" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="29">"other_size"<pos:position pos:line="67" pos:column="41"/></literal></expr></argument>,     <argument><expr><literal type="string" pos:line="67" pos:column="47">"cache_size"<pos:position pos:line="67" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="61">"other_size"<pos:position pos:line="67" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">za_read_gauge<pos:position pos:line="68" pos:column="22"/></name> <argument_list pos:line="68" pos:column="23">(<argument><expr><name pos:line="68" pos:column="24">ksp<pos:position pos:line="68" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="29">"p"<pos:position pos:line="68" pos:column="32"/></literal></expr></argument>,              <argument><expr><literal type="string" pos:line="68" pos:column="47">"cache_size"<pos:position pos:line="68" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="61">"p"<pos:position pos:line="68" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="69" pos:column="9">za_read_gauge<pos:position pos:line="69" pos:column="22"/></name> <argument_list pos:line="69" pos:column="23">(<argument><expr><name pos:line="69" pos:column="24">ksp<pos:position pos:line="69" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="29">"size"<pos:position pos:line="69" pos:column="35"/></literal></expr></argument>,           <argument><expr><literal type="string" pos:line="69" pos:column="47">"cache_size"<pos:position pos:line="69" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="61">"arc"<pos:position pos:line="69" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="68"/></expr_stmt>

	<comment type="block" pos:line="71" pos:column="9">/* The "l2_size" value has disappeared from Solaris some time in
	 * early 2013, and has only reappeared recently in Solaris 11.2.
	 * Stop trying if we ever fail to read it, so we don't spam the log.
	 */</comment>
	<decl_stmt><decl><specifier pos:line="75" pos:column="9">static<pos:position pos:line="75" pos:column="15"/></specifier> <type><name pos:line="75" pos:column="16">int<pos:position pos:line="75" pos:column="19"/></name></type> <name pos:line="75" pos:column="20">l2_size_avail<pos:position pos:line="75" pos:column="33"/></name> <init pos:line="75" pos:column="34">= <expr><literal type="number" pos:line="75" pos:column="36">1<pos:position pos:line="75" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="75" pos:column="38"/></decl_stmt>
	<if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">l2_size_avail<pos:position pos:line="76" pos:column="26"/></name> <operator pos:line="76" pos:column="27">&amp;&amp;<pos:position pos:line="76" pos:column="37"/></operator> <call><name pos:line="76" pos:column="30">za_read_gauge<pos:position pos:line="76" pos:column="43"/></name> <argument_list pos:line="76" pos:column="44">(<argument><expr><name pos:line="76" pos:column="45">ksp<pos:position pos:line="76" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="50">"l2_size"<pos:position pos:line="76" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="61">"cache_size"<pos:position pos:line="76" pos:column="73"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="75">"L2"<pos:position pos:line="76" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="80"/></argument_list></call> <operator pos:line="76" pos:column="81">!=<pos:position pos:line="76" pos:column="83"/></operator> <literal type="number" pos:line="76" pos:column="84">0<pos:position pos:line="76" pos:column="85"/></literal></expr>)<pos:position pos:line="76" pos:column="86"/></condition><then pos:line="76" pos:column="86">
		<block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="17">l2_size_avail<pos:position pos:line="77" pos:column="30"/></name> <operator pos:line="77" pos:column="31">=<pos:position pos:line="77" pos:column="32"/></operator> <literal type="number" pos:line="77" pos:column="33">0<pos:position pos:line="77" pos:column="34"/></literal></expr>;<pos:position pos:line="77" pos:column="35"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="79" pos:column="9">/* Operations */</comment>
	<expr_stmt><expr><call><name pos:line="80" pos:column="9">za_read_derive<pos:position pos:line="80" pos:column="23"/></name> <argument_list pos:line="80" pos:column="24">(<argument><expr><name pos:line="80" pos:column="25">ksp<pos:position pos:line="80" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="30">"deleted"<pos:position pos:line="80" pos:column="39"/></literal></expr></argument>,  <argument><expr><literal type="string" pos:line="80" pos:column="42">"cache_operation"<pos:position pos:line="80" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="61">"deleted"<pos:position pos:line="80" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="72"/></expr_stmt>
<cpp:if pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">if<pos:position pos:line="81" pos:column="4"/></cpp:directive> <expr><call><name pos:line="81" pos:column="5">defined<pos:position pos:line="81" pos:column="12"/></name><argument_list pos:line="81" pos:column="12">(<argument><expr><name pos:line="81" pos:column="13">KERNEL_FREEBSD<pos:position pos:line="81" pos:column="27"/></name></expr></argument>)<pos:position pos:line="81" pos:column="28"/></argument_list></call></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="82" pos:column="9">za_read_derive<pos:position pos:line="82" pos:column="23"/></name> <argument_list pos:line="82" pos:column="24">(<argument><expr><name pos:line="82" pos:column="25">ksp<pos:position pos:line="82" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="30">"allocated"<pos:position pos:line="82" pos:column="41"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="82" pos:column="42">"cache_operation"<pos:position pos:line="82" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="61">"allocated"<pos:position pos:line="82" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="74"/></expr_stmt>
<cpp:endif pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">endif<pos:position pos:line="83" pos:column="7"/></cpp:directive></cpp:endif>

	<comment type="block" pos:line="85" pos:column="9">/* Issue indicators */</comment>
	<expr_stmt><expr><call><name pos:line="86" pos:column="9">za_read_derive<pos:position pos:line="86" pos:column="23"/></name> <argument_list pos:line="86" pos:column="24">(<argument><expr><name pos:line="86" pos:column="25">ksp<pos:position pos:line="86" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="30">"mutex_miss"<pos:position pos:line="86" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="44">"mutex_operations"<pos:position pos:line="86" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="64">"miss"<pos:position pos:line="86" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="87" pos:column="9">za_read_derive<pos:position pos:line="87" pos:column="23"/></name> <argument_list pos:line="87" pos:column="24">(<argument><expr><name pos:line="87" pos:column="25">ksp<pos:position pos:line="87" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="30">"hash_collisions"<pos:position pos:line="87" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="49">"hash_collisions"<pos:position pos:line="87" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="68">""<pos:position pos:line="87" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="88" pos:column="9">za_read_derive<pos:position pos:line="88" pos:column="23"/></name> <argument_list pos:line="88" pos:column="24">(<argument><expr><name pos:line="88" pos:column="25">ksp<pos:position pos:line="88" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="30">"memory_throttle_count"<pos:position pos:line="88" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="55">"memory_throttle_count"<pos:position pos:line="88" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="80">""<pos:position pos:line="88" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="84"/></expr_stmt>

	<comment type="block" pos:line="90" pos:column="9">/* Evictions */</comment>
	<expr_stmt><expr><call><name pos:line="91" pos:column="9">za_read_derive<pos:position pos:line="91" pos:column="23"/></name> <argument_list pos:line="91" pos:column="24">(<argument><expr><name pos:line="91" pos:column="25">ksp<pos:position pos:line="91" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="30">"evict_l2_cached"<pos:position pos:line="91" pos:column="47"/></literal></expr></argument>,     <argument><expr><literal type="string" pos:line="91" pos:column="53">"cache_eviction"<pos:position pos:line="91" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="71">"cached"<pos:position pos:line="91" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="81"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="92" pos:column="9">za_read_derive<pos:position pos:line="92" pos:column="23"/></name> <argument_list pos:line="92" pos:column="24">(<argument><expr><name pos:line="92" pos:column="25">ksp<pos:position pos:line="92" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="30">"evict_l2_eligible"<pos:position pos:line="92" pos:column="49"/></literal></expr></argument>,   <argument><expr><literal type="string" pos:line="92" pos:column="53">"cache_eviction"<pos:position pos:line="92" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="71">"eligible"<pos:position pos:line="92" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="83"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="93" pos:column="9">za_read_derive<pos:position pos:line="93" pos:column="23"/></name> <argument_list pos:line="93" pos:column="24">(<argument><expr><name pos:line="93" pos:column="25">ksp<pos:position pos:line="93" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="30">"evict_l2_ineligible"<pos:position pos:line="93" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="53">"cache_eviction"<pos:position pos:line="93" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="71">"ineligible"<pos:position pos:line="93" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="85"/></expr_stmt>

	<comment type="block" pos:line="95" pos:column="9">/* Hits / misses */</comment>
	<expr_stmt><expr><call><name pos:line="96" pos:column="9">za_read_derive<pos:position pos:line="96" pos:column="23"/></name> <argument_list pos:line="96" pos:column="24">(<argument><expr><name pos:line="96" pos:column="25">ksp<pos:position pos:line="96" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="30">"demand_data_hits"<pos:position pos:line="96" pos:column="48"/></literal></expr></argument>,         <argument><expr><literal type="string" pos:line="96" pos:column="58">"cache_result"<pos:position pos:line="96" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="74">"demand_data-hit"<pos:position pos:line="96" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="93"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="97" pos:column="9">za_read_derive<pos:position pos:line="97" pos:column="23"/></name> <argument_list pos:line="97" pos:column="24">(<argument><expr><name pos:line="97" pos:column="25">ksp<pos:position pos:line="97" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="30">"demand_metadata_hits"<pos:position pos:line="97" pos:column="52"/></literal></expr></argument>,     <argument><expr><literal type="string" pos:line="97" pos:column="58">"cache_result"<pos:position pos:line="97" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="74">"demand_metadata-hit"<pos:position pos:line="97" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="97"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="98" pos:column="9">za_read_derive<pos:position pos:line="98" pos:column="23"/></name> <argument_list pos:line="98" pos:column="24">(<argument><expr><name pos:line="98" pos:column="25">ksp<pos:position pos:line="98" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="30">"prefetch_data_hits"<pos:position pos:line="98" pos:column="50"/></literal></expr></argument>,       <argument><expr><literal type="string" pos:line="98" pos:column="58">"cache_result"<pos:position pos:line="98" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="74">"prefetch_data-hit"<pos:position pos:line="98" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="95"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="99" pos:column="9">za_read_derive<pos:position pos:line="99" pos:column="23"/></name> <argument_list pos:line="99" pos:column="24">(<argument><expr><name pos:line="99" pos:column="25">ksp<pos:position pos:line="99" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="30">"prefetch_metadata_hits"<pos:position pos:line="99" pos:column="54"/></literal></expr></argument>,   <argument><expr><literal type="string" pos:line="99" pos:column="58">"cache_result"<pos:position pos:line="99" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="74">"prefetch_metadata-hit"<pos:position pos:line="99" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="99"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="100" pos:column="9">za_read_derive<pos:position pos:line="100" pos:column="23"/></name> <argument_list pos:line="100" pos:column="24">(<argument><expr><name pos:line="100" pos:column="25">ksp<pos:position pos:line="100" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="30">"demand_data_misses"<pos:position pos:line="100" pos:column="50"/></literal></expr></argument>,       <argument><expr><literal type="string" pos:line="100" pos:column="58">"cache_result"<pos:position pos:line="100" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="74">"demand_data-miss"<pos:position pos:line="100" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="94"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="101" pos:column="9">za_read_derive<pos:position pos:line="101" pos:column="23"/></name> <argument_list pos:line="101" pos:column="24">(<argument><expr><name pos:line="101" pos:column="25">ksp<pos:position pos:line="101" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="30">"demand_metadata_misses"<pos:position pos:line="101" pos:column="54"/></literal></expr></argument>,   <argument><expr><literal type="string" pos:line="101" pos:column="58">"cache_result"<pos:position pos:line="101" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="74">"demand_metadata-miss"<pos:position pos:line="101" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="98"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="102" pos:column="9">za_read_derive<pos:position pos:line="102" pos:column="23"/></name> <argument_list pos:line="102" pos:column="24">(<argument><expr><name pos:line="102" pos:column="25">ksp<pos:position pos:line="102" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="30">"prefetch_data_misses"<pos:position pos:line="102" pos:column="52"/></literal></expr></argument>,     <argument><expr><literal type="string" pos:line="102" pos:column="58">"cache_result"<pos:position pos:line="102" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="74">"prefetch_data-miss"<pos:position pos:line="102" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="96"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="103" pos:column="9">za_read_derive<pos:position pos:line="103" pos:column="23"/></name> <argument_list pos:line="103" pos:column="24">(<argument><expr><name pos:line="103" pos:column="25">ksp<pos:position pos:line="103" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="30">"prefetch_metadata_misses"<pos:position pos:line="103" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="58">"cache_result"<pos:position pos:line="103" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="74">"prefetch_metadata-miss"<pos:position pos:line="103" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="100"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="104" pos:column="9">za_read_derive<pos:position pos:line="104" pos:column="23"/></name> <argument_list pos:line="104" pos:column="24">(<argument><expr><name pos:line="104" pos:column="25">ksp<pos:position pos:line="104" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="30">"mfu_hits"<pos:position pos:line="104" pos:column="40"/></literal></expr></argument>,                 <argument><expr><literal type="string" pos:line="104" pos:column="58">"cache_result"<pos:position pos:line="104" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="74">"mfu-hit"<pos:position pos:line="104" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="85"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="105" pos:column="9">za_read_derive<pos:position pos:line="105" pos:column="23"/></name> <argument_list pos:line="105" pos:column="24">(<argument><expr><name pos:line="105" pos:column="25">ksp<pos:position pos:line="105" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="30">"mfu_ghost_hits"<pos:position pos:line="105" pos:column="46"/></literal></expr></argument>,           <argument><expr><literal type="string" pos:line="105" pos:column="58">"cache_result"<pos:position pos:line="105" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="74">"mfu_ghost-hit"<pos:position pos:line="105" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="91"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="106" pos:column="9">za_read_derive<pos:position pos:line="106" pos:column="23"/></name> <argument_list pos:line="106" pos:column="24">(<argument><expr><name pos:line="106" pos:column="25">ksp<pos:position pos:line="106" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="30">"mru_hits"<pos:position pos:line="106" pos:column="40"/></literal></expr></argument>,                 <argument><expr><literal type="string" pos:line="106" pos:column="58">"cache_result"<pos:position pos:line="106" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="74">"mru-hit"<pos:position pos:line="106" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="85"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="107" pos:column="9">za_read_derive<pos:position pos:line="107" pos:column="23"/></name> <argument_list pos:line="107" pos:column="24">(<argument><expr><name pos:line="107" pos:column="25">ksp<pos:position pos:line="107" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="30">"mru_ghost_hits"<pos:position pos:line="107" pos:column="46"/></literal></expr></argument>,           <argument><expr><literal type="string" pos:line="107" pos:column="58">"cache_result"<pos:position pos:line="107" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="74">"mru_ghost-hit"<pos:position pos:line="107" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="91"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="108" pos:column="9">za_read_derive<pos:position pos:line="108" pos:column="23"/></name> <argument_list pos:line="108" pos:column="24">(<argument><expr><name pos:line="108" pos:column="25">ksp<pos:position pos:line="108" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="30">"prefetch_metadata_misses"<pos:position pos:line="108" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="58">"cache_result"<pos:position pos:line="108" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="74">"prefetch_metadata-miss"<pos:position pos:line="108" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="100"/></expr_stmt>

	<comment type="block" pos:line="110" pos:column="9">/* Ratios */</comment>
	<expr_stmt><expr><name pos:line="111" pos:column="9">arc_hits<pos:position pos:line="111" pos:column="17"/></name>   <operator pos:line="111" pos:column="20">=<pos:position pos:line="111" pos:column="21"/></operator> <operator pos:line="111" pos:column="22">(<pos:position pos:line="111" pos:column="23"/></operator><name pos:line="111" pos:column="23">gauge_t<pos:position pos:line="111" pos:column="30"/></name><operator pos:line="111" pos:column="30">)<pos:position pos:line="111" pos:column="31"/></operator> <call><name pos:line="111" pos:column="32">get_zfs_value<pos:position pos:line="111" pos:column="45"/></name><argument_list pos:line="111" pos:column="45">(<argument><expr><name pos:line="111" pos:column="46">ksp<pos:position pos:line="111" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="51">"hits"<pos:position pos:line="111" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name pos:line="112" pos:column="9">arc_misses<pos:position pos:line="112" pos:column="19"/></name> <operator pos:line="112" pos:column="20">=<pos:position pos:line="112" pos:column="21"/></operator> <operator pos:line="112" pos:column="22">(<pos:position pos:line="112" pos:column="23"/></operator><name pos:line="112" pos:column="23">gauge_t<pos:position pos:line="112" pos:column="30"/></name><operator pos:line="112" pos:column="30">)<pos:position pos:line="112" pos:column="31"/></operator> <call><name pos:line="112" pos:column="32">get_zfs_value<pos:position pos:line="112" pos:column="45"/></name><argument_list pos:line="112" pos:column="45">(<argument><expr><name pos:line="112" pos:column="46">ksp<pos:position pos:line="112" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="51">"misses"<pos:position pos:line="112" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><name pos:line="113" pos:column="9">l2_hits<pos:position pos:line="113" pos:column="16"/></name>    <operator pos:line="113" pos:column="20">=<pos:position pos:line="113" pos:column="21"/></operator> <operator pos:line="113" pos:column="22">(<pos:position pos:line="113" pos:column="23"/></operator><name pos:line="113" pos:column="23">gauge_t<pos:position pos:line="113" pos:column="30"/></name><operator pos:line="113" pos:column="30">)<pos:position pos:line="113" pos:column="31"/></operator> <call><name pos:line="113" pos:column="32">get_zfs_value<pos:position pos:line="113" pos:column="45"/></name><argument_list pos:line="113" pos:column="45">(<argument><expr><name pos:line="113" pos:column="46">ksp<pos:position pos:line="113" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="51">"l2_hits"<pos:position pos:line="113" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><name pos:line="114" pos:column="9">l2_misses<pos:position pos:line="114" pos:column="18"/></name>  <operator pos:line="114" pos:column="20">=<pos:position pos:line="114" pos:column="21"/></operator> <operator pos:line="114" pos:column="22">(<pos:position pos:line="114" pos:column="23"/></operator><name pos:line="114" pos:column="23">gauge_t<pos:position pos:line="114" pos:column="30"/></name><operator pos:line="114" pos:column="30">)<pos:position pos:line="114" pos:column="31"/></operator> <call><name pos:line="114" pos:column="32">get_zfs_value<pos:position pos:line="114" pos:column="45"/></name><argument_list pos:line="114" pos:column="45">(<argument><expr><name pos:line="114" pos:column="46">ksp<pos:position pos:line="114" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="51">"l2_misses"<pos:position pos:line="114" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="64"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="116" pos:column="9">za_submit_ratio<pos:position pos:line="116" pos:column="24"/></name> <argument_list pos:line="116" pos:column="25">(<argument><expr><literal type="string" pos:line="116" pos:column="26">"arc"<pos:position pos:line="116" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="33">arc_hits<pos:position pos:line="116" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="43">arc_misses<pos:position pos:line="116" pos:column="53"/></name></expr></argument>)<pos:position pos:line="116" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="117" pos:column="9">za_submit_ratio<pos:position pos:line="117" pos:column="24"/></name> <argument_list pos:line="117" pos:column="25">(<argument><expr><literal type="string" pos:line="117" pos:column="26">"L2"<pos:position pos:line="117" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="117" pos:column="32">l2_hits<pos:position pos:line="117" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="41">l2_misses<pos:position pos:line="117" pos:column="50"/></name></expr></argument>)<pos:position pos:line="117" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="52"/></expr_stmt>

	<comment type="block" pos:line="119" pos:column="9">/* I/O */</comment>
	<expr_stmt><expr><name><name pos:line="120" pos:column="9">l2_io<pos:position pos:line="120" pos:column="14"/></name><index pos:line="120" pos:column="14">[<expr><literal type="number" pos:line="120" pos:column="15">0<pos:position pos:line="120" pos:column="16"/></literal></expr>]<pos:position pos:line="120" pos:column="17"/></index></name><operator pos:line="120" pos:column="17">.<pos:position pos:line="120" pos:column="18"/></operator><name pos:line="120" pos:column="18">derive<pos:position pos:line="120" pos:column="24"/></name> <operator pos:line="120" pos:column="25">=<pos:position pos:line="120" pos:column="26"/></operator> <call><name pos:line="120" pos:column="27">get_zfs_value<pos:position pos:line="120" pos:column="40"/></name><argument_list pos:line="120" pos:column="40">(<argument><expr><name pos:line="120" pos:column="41">ksp<pos:position pos:line="120" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="46">"l2_read_bytes"<pos:position pos:line="120" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="121" pos:column="9">l2_io<pos:position pos:line="121" pos:column="14"/></name><index pos:line="121" pos:column="14">[<expr><literal type="number" pos:line="121" pos:column="15">1<pos:position pos:line="121" pos:column="16"/></literal></expr>]<pos:position pos:line="121" pos:column="17"/></index></name><operator pos:line="121" pos:column="17">.<pos:position pos:line="121" pos:column="18"/></operator><name pos:line="121" pos:column="18">derive<pos:position pos:line="121" pos:column="24"/></name> <operator pos:line="121" pos:column="25">=<pos:position pos:line="121" pos:column="26"/></operator> <call><name pos:line="121" pos:column="27">get_zfs_value<pos:position pos:line="121" pos:column="40"/></name><argument_list pos:line="121" pos:column="40">(<argument><expr><name pos:line="121" pos:column="41">ksp<pos:position pos:line="121" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="46">"l2_write_bytes"<pos:position pos:line="121" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="64"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="123" pos:column="9">za_submit<pos:position pos:line="123" pos:column="18"/></name> <argument_list pos:line="123" pos:column="19">(<argument><expr><literal type="string" pos:line="123" pos:column="20">"io_octets"<pos:position pos:line="123" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="33">"L2"<pos:position pos:line="123" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="123" pos:column="39">l2_io<pos:position pos:line="123" pos:column="44"/></name></expr></argument>, <comment type="block" pos:line="123" pos:column="46">/* num values = */</comment> <argument><expr><literal type="number" pos:line="123" pos:column="65">2<pos:position pos:line="123" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="68"/></expr_stmt>

<cpp:if pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">if<pos:position pos:line="125" pos:column="4"/></cpp:directive> <expr><call><name pos:line="125" pos:column="5">defined<pos:position pos:line="125" pos:column="12"/></name><argument_list pos:line="125" pos:column="12">(<argument><expr><name pos:line="125" pos:column="13">KERNEL_LINUX<pos:position pos:line="125" pos:column="25"/></name></expr></argument>)<pos:position pos:line="125" pos:column="26"/></argument_list></call></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="126" pos:column="9">free_zfs_values<pos:position pos:line="126" pos:column="24"/></name> <argument_list pos:line="126" pos:column="25">(<argument><expr><name pos:line="126" pos:column="26">ksp<pos:position pos:line="126" pos:column="29"/></name></expr></argument>)<pos:position pos:line="126" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="31"/></expr_stmt>
<cpp:endif pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">endif<pos:position pos:line="127" pos:column="7"/></cpp:directive></cpp:endif>

	<return pos:line="129" pos:column="9">return <expr><operator pos:line="129" pos:column="16">(<pos:position pos:line="129" pos:column="17"/></operator><literal type="number" pos:line="129" pos:column="17">0<pos:position pos:line="129" pos:column="18"/></literal><operator pos:line="129" pos:column="18">)<pos:position pos:line="129" pos:column="19"/></operator></expr>;<pos:position pos:line="129" pos:column="20"/></return>
}<pos:position pos:line="130" pos:column="2"/></block></function></unit>

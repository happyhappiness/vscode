<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_474_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ovs_stats_plugin_config<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">oconfig_item_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ci<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list> <block pos:line="1" pos:column="56">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">bridge_list_t<pos:position pos:line="2" pos:column="16"/></name> <modifier pos:line="2" pos:column="17">*<pos:position pos:line="2" pos:column="18"/></modifier></type><name pos:line="2" pos:column="18">bridge<pos:position pos:line="2" pos:column="24"/></name></decl>;<pos:position pos:line="2" pos:column="25"/></decl_stmt>

  <for pos:line="4" pos:column="3">for <control pos:line="4" pos:column="7">(<init><decl><type><name pos:line="4" pos:column="8">int<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">i<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></init> <condition><expr><name pos:line="4" pos:column="19">i<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">&lt;<pos:position pos:line="4" pos:column="25"/></operator> <name><name pos:line="4" pos:column="23">ci<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">children_num<pos:position pos:line="4" pos:column="39"/></name></name></expr>;<pos:position pos:line="4" pos:column="40"/></condition> <incr><expr><name pos:line="4" pos:column="41">i<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">++<pos:position pos:line="4" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="45"/></control> <block pos:line="4" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">oconfig_item_t<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">child<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name><name pos:line="5" pos:column="29">ci<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">children<pos:position pos:line="5" pos:column="41"/></name></name> <operator pos:line="5" pos:column="42">+<pos:position pos:line="5" pos:column="43"/></operator> <name pos:line="5" pos:column="44">i<pos:position pos:line="5" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">strcasecmp<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><literal type="string" pos:line="6" pos:column="20">"Address"<pos:position pos:line="6" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="31">child<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">-&gt;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="38">key<pos:position pos:line="6" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call> <operator pos:line="6" pos:column="43">==<pos:position pos:line="6" pos:column="45"/></operator> <literal type="number" pos:line="6" pos:column="46">0<pos:position pos:line="6" pos:column="47"/></literal></expr>)<pos:position pos:line="6" pos:column="48"/></condition><then pos:line="6" pos:column="48"> <block pos:line="6" pos:column="49">{
      <if pos:line="7" pos:column="7">if <condition pos:line="7" pos:column="10">(<expr><call><name pos:line="7" pos:column="11">cf_util_get_string_buffer<pos:position pos:line="7" pos:column="36"/></name><argument_list pos:line="7" pos:column="36">(<argument><expr><name pos:line="7" pos:column="37">child<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="44">ovs_stats_cfg<pos:position pos:line="7" pos:column="57"/></name><operator pos:line="7" pos:column="57">.<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="58">ovs_db_node<pos:position pos:line="7" pos:column="69"/></name></name></expr></argument>,
                                    <argument><expr><name pos:line="8" pos:column="37">OVS_DB_ADDR_NODE_SIZE<pos:position pos:line="8" pos:column="58"/></name></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call> <operator pos:line="8" pos:column="60">!=<pos:position pos:line="8" pos:column="62"/></operator> <literal type="number" pos:line="8" pos:column="63">0<pos:position pos:line="8" pos:column="64"/></literal></expr>)<pos:position pos:line="8" pos:column="65"/></condition><then pos:line="8" pos:column="65"> <block pos:line="8" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">ERROR<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><literal type="string" pos:line="9" pos:column="15">"%s: parse '%s' option failed"<pos:position pos:line="9" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="47">plugin_name<pos:position pos:line="9" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="60">child<pos:position pos:line="9" pos:column="65"/></name><operator pos:line="9" pos:column="65">-&gt;<pos:position pos:line="9" pos:column="70"/></operator><name pos:line="9" pos:column="67">key<pos:position pos:line="9" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="72"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">-<pos:position pos:line="10" pos:column="17"/></operator><literal type="number" pos:line="10" pos:column="17">1<pos:position pos:line="10" pos:column="18"/></literal></expr>;<pos:position pos:line="10" pos:column="19"/></return>
      }<pos:position pos:line="11" pos:column="8"/></block></then></if>
    }<pos:position pos:line="12" pos:column="6"/></block></then> <elseif pos:line="12" pos:column="7">else <if pos:line="12" pos:column="12">if <condition pos:line="12" pos:column="15">(<expr><call><name pos:line="12" pos:column="16">strcasecmp<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><literal type="string" pos:line="12" pos:column="27">"Port"<pos:position pos:line="12" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="35">child<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">-&gt;<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="42">key<pos:position pos:line="12" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call> <operator pos:line="12" pos:column="47">==<pos:position pos:line="12" pos:column="49"/></operator> <literal type="number" pos:line="12" pos:column="50">0<pos:position pos:line="12" pos:column="51"/></literal></expr>)<pos:position pos:line="12" pos:column="52"/></condition><then pos:line="12" pos:column="52"> <block pos:line="12" pos:column="53">{
      <if pos:line="13" pos:column="7">if <condition pos:line="13" pos:column="10">(<expr><call><name pos:line="13" pos:column="11">cf_util_get_string_buffer<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">child<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="44">ovs_stats_cfg<pos:position pos:line="13" pos:column="57"/></name><operator pos:line="13" pos:column="57">.<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="58">ovs_db_serv<pos:position pos:line="13" pos:column="69"/></name></name></expr></argument>,
                                    <argument><expr><name pos:line="14" pos:column="37">OVS_DB_ADDR_SERVICE_SIZE<pos:position pos:line="14" pos:column="61"/></name></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call> <operator pos:line="14" pos:column="63">!=<pos:position pos:line="14" pos:column="65"/></operator> <literal type="number" pos:line="14" pos:column="66">0<pos:position pos:line="14" pos:column="67"/></literal></expr>)<pos:position pos:line="14" pos:column="68"/></condition><then pos:line="14" pos:column="68"> <block pos:line="14" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">ERROR<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><literal type="string" pos:line="15" pos:column="15">"%s: parse '%s' option failed"<pos:position pos:line="15" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="47">plugin_name<pos:position pos:line="15" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="60">child<pos:position pos:line="15" pos:column="65"/></name><operator pos:line="15" pos:column="65">-&gt;<pos:position pos:line="15" pos:column="70"/></operator><name pos:line="15" pos:column="67">key<pos:position pos:line="15" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><operator pos:line="16" pos:column="16">-<pos:position pos:line="16" pos:column="17"/></operator><literal type="number" pos:line="16" pos:column="17">1<pos:position pos:line="16" pos:column="18"/></literal></expr>;<pos:position pos:line="16" pos:column="19"/></return>
      }<pos:position pos:line="17" pos:column="8"/></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if></elseif> <elseif pos:line="18" pos:column="7">else <if pos:line="18" pos:column="12">if <condition pos:line="18" pos:column="15">(<expr><call><name pos:line="18" pos:column="16">strcasecmp<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><literal type="string" pos:line="18" pos:column="27">"Socket"<pos:position pos:line="18" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="37">child<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">-&gt;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="44">key<pos:position pos:line="18" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call> <operator pos:line="18" pos:column="49">==<pos:position pos:line="18" pos:column="51"/></operator> <literal type="number" pos:line="18" pos:column="52">0<pos:position pos:line="18" pos:column="53"/></literal></expr>)<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54"> <block pos:line="18" pos:column="55">{
      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><call><name pos:line="19" pos:column="11">cf_util_get_string_buffer<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><name pos:line="19" pos:column="37">child<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="44">ovs_stats_cfg<pos:position pos:line="19" pos:column="57"/></name><operator pos:line="19" pos:column="57">.<pos:position pos:line="19" pos:column="58"/></operator><name pos:line="19" pos:column="58">ovs_db_unix<pos:position pos:line="19" pos:column="69"/></name></name></expr></argument>,
                                    <argument><expr><name pos:line="20" pos:column="37">OVS_DB_ADDR_UNIX_SIZE<pos:position pos:line="20" pos:column="58"/></name></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call> <operator pos:line="20" pos:column="60">!=<pos:position pos:line="20" pos:column="62"/></operator> <literal type="number" pos:line="20" pos:column="63">0<pos:position pos:line="20" pos:column="64"/></literal></expr>)<pos:position pos:line="20" pos:column="65"/></condition><then pos:line="20" pos:column="65"> <block pos:line="20" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">ERROR<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><literal type="string" pos:line="21" pos:column="15">"%s: parse '%s' option failed"<pos:position pos:line="21" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">plugin_name<pos:position pos:line="21" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="60">child<pos:position pos:line="21" pos:column="65"/></name><operator pos:line="21" pos:column="65">-&gt;<pos:position pos:line="21" pos:column="70"/></operator><name pos:line="21" pos:column="67">key<pos:position pos:line="21" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><operator pos:line="22" pos:column="16">-<pos:position pos:line="22" pos:column="17"/></operator><literal type="number" pos:line="22" pos:column="17">1<pos:position pos:line="22" pos:column="18"/></literal></expr>;<pos:position pos:line="22" pos:column="19"/></return>
      }<pos:position pos:line="23" pos:column="8"/></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if></elseif> <elseif pos:line="24" pos:column="7">else <if pos:line="24" pos:column="12">if <condition pos:line="24" pos:column="15">(<expr><call><name pos:line="24" pos:column="16">strcasecmp<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><literal type="string" pos:line="24" pos:column="27">"Bridges"<pos:position pos:line="24" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="38">child<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">-&gt;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="45">key<pos:position pos:line="24" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call> <operator pos:line="24" pos:column="50">==<pos:position pos:line="24" pos:column="52"/></operator> <literal type="number" pos:line="24" pos:column="53">0<pos:position pos:line="24" pos:column="54"/></literal></expr>)<pos:position pos:line="24" pos:column="55"/></condition><then pos:line="24" pos:column="55"> <block pos:line="24" pos:column="56">{
      <for pos:line="25" pos:column="7">for <control pos:line="25" pos:column="11">(<init><decl><type><name pos:line="25" pos:column="12">int<pos:position pos:line="25" pos:column="15"/></name></type> <name pos:line="25" pos:column="16">j<pos:position pos:line="25" pos:column="17"/></name> <init pos:line="25" pos:column="18">= <expr><literal type="number" pos:line="25" pos:column="20">0<pos:position pos:line="25" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="22"/></init> <condition><expr><name pos:line="25" pos:column="23">j<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">&lt;<pos:position pos:line="25" pos:column="29"/></operator> <name><name pos:line="25" pos:column="27">child<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">values_num<pos:position pos:line="25" pos:column="44"/></name></name></expr>;<pos:position pos:line="25" pos:column="45"/></condition> <incr><expr><name pos:line="25" pos:column="46">j<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">++<pos:position pos:line="25" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="50"/></control> <block pos:line="25" pos:column="51">{
        <comment type="block" pos:line="26" pos:column="9">/* check value type */</comment>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">child<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">values<pos:position pos:line="27" pos:column="26"/></name><index pos:line="27" pos:column="26">[<expr><name pos:line="27" pos:column="27">j<pos:position pos:line="27" pos:column="28"/></name></expr>]<pos:position pos:line="27" pos:column="29"/></index></name><operator pos:line="27" pos:column="29">.<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">type<pos:position pos:line="27" pos:column="34"/></name> <operator pos:line="27" pos:column="35">!=<pos:position pos:line="27" pos:column="37"/></operator> <name pos:line="27" pos:column="38">OCONFIG_TYPE_STRING<pos:position pos:line="27" pos:column="57"/></name></expr>)<pos:position pos:line="27" pos:column="58"/></condition><then pos:line="27" pos:column="58"> <block pos:line="27" pos:column="59">{
          <expr_stmt><expr><call><name pos:line="28" pos:column="11">ERROR<pos:position pos:line="28" pos:column="16"/></name><argument_list pos:line="28" pos:column="16">(<argument><expr><literal type="string" pos:line="28" pos:column="17">"%s: Wrong bridge name [idx=%d]. "<pos:position pos:line="28" pos:column="51"/></literal>
                <literal type="string" pos:line="29" pos:column="17">"Bridge name should be string"<pos:position pos:line="29" pos:column="47"/></literal></expr></argument>,
                <argument><expr><name pos:line="30" pos:column="17">plugin_name<pos:position pos:line="30" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="30">j<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
          <goto pos:line="31" pos:column="11">goto <name pos:line="31" pos:column="16">cleanup_fail<pos:position pos:line="31" pos:column="28"/></name>;<pos:position pos:line="31" pos:column="29"/></goto>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="33" pos:column="9">/* get value */</comment>
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">char<pos:position pos:line="34" pos:column="13"/></name> <specifier pos:line="34" pos:column="14">const<pos:position pos:line="34" pos:column="19"/></specifier> <modifier pos:line="34" pos:column="20">*<pos:position pos:line="34" pos:column="21"/></modifier></type><name pos:line="34" pos:column="21">br_name<pos:position pos:line="34" pos:column="28"/></name> <init pos:line="34" pos:column="29">= <expr><name><name pos:line="34" pos:column="31">child<pos:position pos:line="34" pos:column="36"/></name><operator pos:line="34" pos:column="36">-&gt;<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="38">values<pos:position pos:line="34" pos:column="44"/></name><index pos:line="34" pos:column="44">[<expr><name pos:line="34" pos:column="45">j<pos:position pos:line="34" pos:column="46"/></name></expr>]<pos:position pos:line="34" pos:column="47"/></index></name><operator pos:line="34" pos:column="47">.<pos:position pos:line="34" pos:column="48"/></operator><name><name pos:line="34" pos:column="48">value<pos:position pos:line="34" pos:column="53"/></name><operator pos:line="34" pos:column="53">.<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="54">string<pos:position pos:line="34" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="34" pos:column="61"/></decl_stmt>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">(<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">bridge<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <call><name pos:line="35" pos:column="23">ovs_stats_get_bridge<pos:position pos:line="35" pos:column="43"/></name><argument_list pos:line="35" pos:column="43">(<argument><expr><name pos:line="35" pos:column="44">g_monitored_bridge_list_head<pos:position pos:line="35" pos:column="72"/></name></expr></argument>,
                                           <argument><expr><name pos:line="36" pos:column="44">br_name<pos:position pos:line="36" pos:column="51"/></name></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></call><operator pos:line="36" pos:column="52">)<pos:position pos:line="36" pos:column="53"/></operator> <operator pos:line="36" pos:column="54">==<pos:position pos:line="36" pos:column="56"/></operator> <name pos:line="36" pos:column="57">NULL<pos:position pos:line="36" pos:column="61"/></name></expr>)<pos:position pos:line="36" pos:column="62"/></condition><then pos:line="36" pos:column="62"> <block pos:line="36" pos:column="63">{
          <if pos:line="37" pos:column="11">if <condition pos:line="37" pos:column="14">(<expr><operator pos:line="37" pos:column="15">(<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="16">bridge<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">=<pos:position pos:line="37" pos:column="24"/></operator> <call><name pos:line="37" pos:column="25">calloc<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><literal type="number" pos:line="37" pos:column="32">1<pos:position pos:line="37" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="35">sizeof<argument_list pos:line="37" pos:column="41">(<argument><expr><name pos:line="37" pos:column="42">bridge_list_t<pos:position pos:line="37" pos:column="55"/></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call><operator pos:line="37" pos:column="57">)<pos:position pos:line="37" pos:column="58"/></operator> <operator pos:line="37" pos:column="59">==<pos:position pos:line="37" pos:column="61"/></operator> <name pos:line="37" pos:column="62">NULL<pos:position pos:line="37" pos:column="66"/></name></expr>)<pos:position pos:line="37" pos:column="67"/></condition><then pos:line="37" pos:column="67"> <block pos:line="37" pos:column="68">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">ERROR<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><literal type="string" pos:line="38" pos:column="19">"%s: Error allocating memory for bridge"<pos:position pos:line="38" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="61">plugin_name<pos:position pos:line="38" pos:column="72"/></name></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="74"/></expr_stmt>
            <goto pos:line="39" pos:column="13">goto <name pos:line="39" pos:column="18">cleanup_fail<pos:position pos:line="39" pos:column="30"/></name>;<pos:position pos:line="39" pos:column="31"/></goto>
          }<pos:position pos:line="40" pos:column="12"/></block></then> <else pos:line="40" pos:column="13">else <block pos:line="40" pos:column="18">{
            <decl_stmt><decl><type><name pos:line="41" pos:column="13">char<pos:position pos:line="41" pos:column="17"/></name> <modifier pos:line="41" pos:column="18">*<pos:position pos:line="41" pos:column="19"/></modifier></type><name pos:line="41" pos:column="19">br_name_dup<pos:position pos:line="41" pos:column="30"/></name> <init pos:line="41" pos:column="31">= <expr><call><name pos:line="41" pos:column="33">strdup<pos:position pos:line="41" pos:column="39"/></name><argument_list pos:line="41" pos:column="39">(<argument><expr><name pos:line="41" pos:column="40">br_name<pos:position pos:line="41" pos:column="47"/></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="49"/></decl_stmt>
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><name pos:line="42" pos:column="17">br_name_dup<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">==<pos:position pos:line="42" pos:column="31"/></operator> <name pos:line="42" pos:column="32">NULL<pos:position pos:line="42" pos:column="36"/></name></expr>)<pos:position pos:line="42" pos:column="37"/></condition><then pos:line="42" pos:column="37"> <block pos:line="42" pos:column="38">{
              <expr_stmt><expr><call><name pos:line="43" pos:column="15">ERROR<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><literal type="string" pos:line="43" pos:column="21">"%s: strdup() copy bridge name fail"<pos:position pos:line="43" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="59">plugin_name<pos:position pos:line="43" pos:column="70"/></name></expr></argument>)<pos:position pos:line="43" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="72"/></expr_stmt>
              <goto pos:line="44" pos:column="15">goto <name pos:line="44" pos:column="20">cleanup_fail<pos:position pos:line="44" pos:column="32"/></name>;<pos:position pos:line="44" pos:column="33"/></goto>
            }<pos:position pos:line="45" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="47" pos:column="13">pthread_mutex_lock<pos:position pos:line="47" pos:column="31"/></name><argument_list pos:line="47" pos:column="31">(<argument><expr><operator pos:line="47" pos:column="32">&amp;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="33">g_stats_lock<pos:position pos:line="47" pos:column="45"/></name></expr></argument>)<pos:position pos:line="47" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="47"/></expr_stmt>
            <comment type="block" pos:line="48" pos:column="13">/* store bridge name */</comment>
            <expr_stmt><expr><name><name pos:line="49" pos:column="13">bridge<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">-&gt;<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="21">name<pos:position pos:line="49" pos:column="25"/></name></name> <operator pos:line="49" pos:column="26">=<pos:position pos:line="49" pos:column="27"/></operator> <name pos:line="49" pos:column="28">br_name_dup<pos:position pos:line="49" pos:column="39"/></name></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="50" pos:column="13">bridge<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">-&gt;<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="21">next<pos:position pos:line="50" pos:column="25"/></name></name> <operator pos:line="50" pos:column="26">=<pos:position pos:line="50" pos:column="27"/></operator> <name pos:line="50" pos:column="28">g_monitored_bridge_list_head<pos:position pos:line="50" pos:column="56"/></name></expr>;<pos:position pos:line="50" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name pos:line="51" pos:column="13">g_monitored_bridge_list_head<pos:position pos:line="51" pos:column="41"/></name> <operator pos:line="51" pos:column="42">=<pos:position pos:line="51" pos:column="43"/></operator> <name pos:line="51" pos:column="44">bridge<pos:position pos:line="51" pos:column="50"/></name></expr>;<pos:position pos:line="51" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">pthread_mutex_unlock<pos:position pos:line="52" pos:column="33"/></name><argument_list pos:line="52" pos:column="33">(<argument><expr><operator pos:line="52" pos:column="34">&amp;<pos:position pos:line="52" pos:column="39"/></operator><name pos:line="52" pos:column="35">g_stats_lock<pos:position pos:line="52" pos:column="47"/></name></expr></argument>)<pos:position pos:line="52" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">DEBUG<pos:position pos:line="53" pos:column="18"/></name><argument_list pos:line="53" pos:column="18">(<argument><expr><literal type="string" pos:line="53" pos:column="19">"%s: found monitored interface \"%s\""<pos:position pos:line="53" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="59">plugin_name<pos:position pos:line="53" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="72">br_name<pos:position pos:line="53" pos:column="79"/></name></expr></argument>)<pos:position pos:line="53" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="81"/></expr_stmt>
          }<pos:position pos:line="54" pos:column="12"/></block></else></if>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>
      }<pos:position pos:line="56" pos:column="8"/></block></for>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if></elseif> <else pos:line="57" pos:column="7">else <block pos:line="57" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">WARNING<pos:position pos:line="58" pos:column="14"/></name><argument_list pos:line="58" pos:column="14">(<argument><expr><literal type="string" pos:line="58" pos:column="15">"%s: option '%s' not allowed here"<pos:position pos:line="58" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="51">plugin_name<pos:position pos:line="58" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="64">child<pos:position pos:line="58" pos:column="69"/></name><operator pos:line="58" pos:column="69">-&gt;<pos:position pos:line="58" pos:column="74"/></operator><name pos:line="58" pos:column="71">key<pos:position pos:line="58" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="76"/></expr_stmt>
      <goto pos:line="59" pos:column="7">goto <name pos:line="59" pos:column="12">cleanup_fail<pos:position pos:line="59" pos:column="24"/></name>;<pos:position pos:line="59" pos:column="25"/></goto>
    }<pos:position pos:line="60" pos:column="6"/></block></else></if>
  }<pos:position pos:line="61" pos:column="4"/></block></for>
  <return pos:line="62" pos:column="3">return <expr><literal type="number" pos:line="62" pos:column="10">0<pos:position pos:line="62" pos:column="11"/></literal></expr>;<pos:position pos:line="62" pos:column="12"/></return>

<label><name pos:line="64" pos:column="1">cleanup_fail<pos:position pos:line="64" pos:column="13"/></name>:<pos:position pos:line="64" pos:column="14"/></label>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">ovs_stats_free_bridge_list<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><name pos:line="65" pos:column="30">g_monitored_bridge_list_head<pos:position pos:line="65" pos:column="58"/></name></expr></argument>)<pos:position pos:line="65" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="60"/></expr_stmt>
  <return pos:line="66" pos:column="3">return <expr><operator pos:line="66" pos:column="10">-<pos:position pos:line="66" pos:column="11"/></operator><literal type="number" pos:line="66" pos:column="11">1<pos:position pos:line="66" pos:column="12"/></literal></expr>;<pos:position pos:line="66" pos:column="13"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

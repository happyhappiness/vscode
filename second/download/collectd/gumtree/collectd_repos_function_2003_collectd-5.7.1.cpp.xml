<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2003_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">udb_query_pick_from_list_by_name<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">name<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="56">/* {{{ */</comment>
                                     <parameter><decl><type><name pos:line="2" pos:column="38">udb_query_t<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier><modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">src_list<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">size_t<pos:position pos:line="3" pos:column="44"/></name></type> <name pos:line="3" pos:column="45">src_list_len<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="4" pos:column="38">udb_query_t<pos:position pos:line="4" pos:column="49"/></name> <modifier pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></modifier><modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier><modifier pos:line="4" pos:column="52">*<pos:position pos:line="4" pos:column="53"/></modifier></type><name pos:line="4" pos:column="53">dst_list<pos:position pos:line="4" pos:column="61"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="5" pos:column="38">size_t<pos:position pos:line="5" pos:column="44"/></name> <modifier pos:line="5" pos:column="45">*<pos:position pos:line="5" pos:column="46"/></modifier></type><name pos:line="5" pos:column="46">dst_list_len<pos:position pos:line="5" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="59"/></parameter_list> <block pos:line="5" pos:column="60">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">num_added<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">name<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">==<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">NULL<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">)<pos:position pos:line="8" pos:column="21"/></operator> <operator pos:line="8" pos:column="22">||<pos:position pos:line="8" pos:column="24"/></operator> <operator pos:line="8" pos:column="25">(<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">src_list<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">==<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="38">NULL<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">)<pos:position pos:line="8" pos:column="43"/></operator> <operator pos:line="8" pos:column="44">||<pos:position pos:line="8" pos:column="46"/></operator> <operator pos:line="8" pos:column="47">(<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="48">dst_list<pos:position pos:line="8" pos:column="56"/></name> <operator pos:line="8" pos:column="57">==<pos:position pos:line="8" pos:column="59"/></operator> <name pos:line="8" pos:column="60">NULL<pos:position pos:line="8" pos:column="64"/></name><operator pos:line="8" pos:column="64">)<pos:position pos:line="8" pos:column="65"/></operator> <operator pos:line="8" pos:column="66">||<pos:position pos:line="8" pos:column="68"/></operator>
      <operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">dst_list_len<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">==<pos:position pos:line="9" pos:column="23"/></operator> <name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">)<pos:position pos:line="9" pos:column="29"/></operator></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30"> <block pos:line="9" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"db query utils: udb_query_pick_from_list_by_name: "<pos:position pos:line="10" pos:column="63"/></literal>
          <literal type="string" pos:line="11" pos:column="11">"Invalid argument."<pos:position pos:line="11" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">EINVAL<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">)<pos:position pos:line="12" pos:column="21"/></operator></expr>;<pos:position pos:line="12" pos:column="22"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">num_added<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <literal type="number" pos:line="15" pos:column="15">0<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>
  <for pos:line="16" pos:column="3">for <control pos:line="16" pos:column="7">(<init><decl><type><name pos:line="16" pos:column="8">size_t<pos:position pos:line="16" pos:column="14"/></name></type> <name pos:line="16" pos:column="15">i<pos:position pos:line="16" pos:column="16"/></name> <init pos:line="16" pos:column="17">= <expr><literal type="number" pos:line="16" pos:column="19">0<pos:position pos:line="16" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="21"/></init> <condition><expr><name pos:line="16" pos:column="22">i<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">&lt;<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="26">src_list_len<pos:position pos:line="16" pos:column="38"/></name></expr>;<pos:position pos:line="16" pos:column="39"/></condition> <incr><expr><name pos:line="16" pos:column="40">i<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">++<pos:position pos:line="16" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="44"/></control> <block pos:line="16" pos:column="45">{
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">udb_query_t<pos:position pos:line="17" pos:column="16"/></name> <modifier pos:line="17" pos:column="17">*<pos:position pos:line="17" pos:column="18"/></modifier><modifier pos:line="17" pos:column="18">*<pos:position pos:line="17" pos:column="19"/></modifier></type><name pos:line="17" pos:column="19">tmp_list<pos:position pos:line="17" pos:column="27"/></name></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">size_t<pos:position pos:line="18" pos:column="11"/></name></type> <name pos:line="18" pos:column="12">tmp_list_len<pos:position pos:line="18" pos:column="24"/></name></decl>;<pos:position pos:line="18" pos:column="25"/></decl_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name pos:line="20" pos:column="9">strcasecmp<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">name<pos:position pos:line="20" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="26">src_list<pos:position pos:line="20" pos:column="34"/></name><index pos:line="20" pos:column="34">[<expr><name pos:line="20" pos:column="35">i<pos:position pos:line="20" pos:column="36"/></name></expr>]<pos:position pos:line="20" pos:column="37"/></index></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">name<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call> <operator pos:line="20" pos:column="45">!=<pos:position pos:line="20" pos:column="47"/></operator> <literal type="number" pos:line="20" pos:column="48">0<pos:position pos:line="20" pos:column="49"/></literal></expr>)<pos:position pos:line="20" pos:column="50"/></condition><then pos:line="20" pos:column="50">
      <block type="pseudo"><continue pos:line="21" pos:column="7">continue;<pos:position pos:line="21" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">tmp_list_len<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <operator pos:line="23" pos:column="20">*<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">dst_list_len<pos:position pos:line="23" pos:column="33"/></name></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">tmp_list<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">realloc<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><operator pos:line="24" pos:column="24">*<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">dst_list<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="35">(<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="36">tmp_list_len<pos:position pos:line="24" pos:column="48"/></name> <operator pos:line="24" pos:column="49">+<pos:position pos:line="24" pos:column="50"/></operator> <literal type="number" pos:line="24" pos:column="51">1<pos:position pos:line="24" pos:column="52"/></literal><operator pos:line="24" pos:column="52">)<pos:position pos:line="24" pos:column="53"/></operator> <operator pos:line="24" pos:column="54">*<pos:position pos:line="24" pos:column="55"/></operator> <sizeof pos:line="24" pos:column="56">sizeof<argument_list pos:line="24" pos:column="62">(<argument><expr><name pos:line="24" pos:column="63">udb_query_t<pos:position pos:line="24" pos:column="74"/></name> <operator pos:line="24" pos:column="75">*<pos:position pos:line="24" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="79"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">tmp_list<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">==<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">NULL<pos:position pos:line="25" pos:column="25"/></name></expr>)<pos:position pos:line="25" pos:column="26"/></condition><then pos:line="25" pos:column="26"> <block pos:line="25" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">ERROR<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><literal type="string" pos:line="26" pos:column="13">"db query utils: realloc failed."<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>
      <return pos:line="27" pos:column="7">return <expr><operator pos:line="27" pos:column="14">(<pos:position pos:line="27" pos:column="15"/></operator><operator pos:line="27" pos:column="15">-<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">ENOMEM<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">)<pos:position pos:line="27" pos:column="23"/></operator></expr>;<pos:position pos:line="27" pos:column="24"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="30" pos:column="5">tmp_list<pos:position pos:line="30" pos:column="13"/></name><index pos:line="30" pos:column="13">[<expr><name pos:line="30" pos:column="14">tmp_list_len<pos:position pos:line="30" pos:column="26"/></name></expr>]<pos:position pos:line="30" pos:column="27"/></index></name> <operator pos:line="30" pos:column="28">=<pos:position pos:line="30" pos:column="29"/></operator> <name><name pos:line="30" pos:column="30">src_list<pos:position pos:line="30" pos:column="38"/></name><index pos:line="30" pos:column="38">[<expr><name pos:line="30" pos:column="39">i<pos:position pos:line="30" pos:column="40"/></name></expr>]<pos:position pos:line="30" pos:column="41"/></index></name></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">tmp_list_len<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">++<pos:position pos:line="31" pos:column="19"/></operator></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="33" pos:column="5">*<pos:position pos:line="33" pos:column="6"/></operator><name pos:line="33" pos:column="6">dst_list<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <name pos:line="33" pos:column="17">tmp_list<pos:position pos:line="33" pos:column="25"/></name></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="34" pos:column="5">*<pos:position pos:line="34" pos:column="6"/></operator><name pos:line="34" pos:column="6">dst_list_len<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">tmp_list_len<pos:position pos:line="34" pos:column="33"/></name></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="36" pos:column="5">num_added<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">++<pos:position pos:line="36" pos:column="16"/></operator></expr>;<pos:position pos:line="36" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></for> <comment type="block" pos:line="37" pos:column="5">/* for (i = 0; i &lt; src_list_len; i++) */</comment>

  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name pos:line="39" pos:column="7">num_added<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">&lt;=<pos:position pos:line="39" pos:column="22"/></operator> <literal type="number" pos:line="39" pos:column="20">0<pos:position pos:line="39" pos:column="21"/></literal></expr>)<pos:position pos:line="39" pos:column="22"/></condition><then pos:line="39" pos:column="22"> <block pos:line="39" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">ERROR<pos:position pos:line="40" pos:column="10"/></name><argument_list pos:line="40" pos:column="10">(<argument><expr><literal type="string" pos:line="40" pos:column="11">"db query utils: Cannot find query `%s'. Make sure the &lt;Query&gt; "<pos:position pos:line="40" pos:column="81"/></literal>
          <literal type="string" pos:line="41" pos:column="11">"block is above the database definition!"<pos:position pos:line="41" pos:column="52"/></literal></expr></argument>,
          <argument><expr><name pos:line="42" pos:column="11">name<pos:position pos:line="42" pos:column="15"/></name></expr></argument>)<pos:position pos:line="42" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="17"/></expr_stmt>
    <return pos:line="43" pos:column="5">return <expr><operator pos:line="43" pos:column="12">(<pos:position pos:line="43" pos:column="13"/></operator><operator pos:line="43" pos:column="13">-<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">ENOENT<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">)<pos:position pos:line="43" pos:column="21"/></operator></expr>;<pos:position pos:line="43" pos:column="22"/></return>
  }<pos:position pos:line="44" pos:column="4"/></block></then> <else pos:line="44" pos:column="5">else <block pos:line="44" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">DEBUG<pos:position pos:line="45" pos:column="10"/></name><argument_list pos:line="45" pos:column="10">(<argument><expr><literal type="string" pos:line="45" pos:column="11">"db query utils: Added %i versions of query `%s'."<pos:position pos:line="45" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="63">num_added<pos:position pos:line="45" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="74">name<pos:position pos:line="45" pos:column="78"/></name></expr></argument>)<pos:position pos:line="45" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="80"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></else></if>

  <return pos:line="48" pos:column="3">return <expr><operator pos:line="48" pos:column="10">(<pos:position pos:line="48" pos:column="11"/></operator><literal type="number" pos:line="48" pos:column="11">0<pos:position pos:line="48" pos:column="12"/></literal><operator pos:line="48" pos:column="12">)<pos:position pos:line="48" pos:column="13"/></operator></expr>;<pos:position pos:line="48" pos:column="14"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

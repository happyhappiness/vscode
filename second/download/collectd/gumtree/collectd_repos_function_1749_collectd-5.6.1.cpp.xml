<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1749_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">memory_read_internal<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">value_list_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">vl<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">HAVE_HOST_STATISTICS<pos:position pos:line="3" pos:column="25"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">kern_return_t<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">status<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">vm_statistics_data_t<pos:position pos:line="5" pos:column="29"/></name></type>   <name pos:line="5" pos:column="32">vm_data<pos:position pos:line="5" pos:column="39"/></name></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">mach_msg_type_number_t<pos:position pos:line="6" pos:column="31"/></name></type> <name pos:line="6" pos:column="32">vm_data_len<pos:position pos:line="6" pos:column="43"/></name></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="8" pos:column="9">gauge_t<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">wired<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">gauge_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">active<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">gauge_t<pos:position pos:line="10" pos:column="16"/></name></type> <name pos:line="10" pos:column="17">inactive<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">gauge_t<pos:position pos:line="11" pos:column="16"/></name></type> <name pos:line="11" pos:column="17">free<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">port_host<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">||<pos:position pos:line="13" pos:column="26"/></operator> <operator pos:line="13" pos:column="27">!<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">pagesize<pos:position pos:line="13" pos:column="36"/></name></expr>)<pos:position pos:line="13" pos:column="37"/></condition><then pos:line="13" pos:column="37">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="16" pos:column="9">vm_data_len<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <sizeof pos:line="16" pos:column="23">sizeof <argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">vm_data<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></sizeof> <operator pos:line="16" pos:column="40">/<pos:position pos:line="16" pos:column="41"/></operator> <sizeof pos:line="16" pos:column="42">sizeof <argument_list pos:line="16" pos:column="49">(<argument><expr><name pos:line="16" pos:column="50">natural_t<pos:position pos:line="16" pos:column="59"/></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></sizeof></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">status<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <call><name pos:line="17" pos:column="23">host_statistics<pos:position pos:line="17" pos:column="38"/></name> <argument_list pos:line="17" pos:column="39">(<argument><expr><name pos:line="17" pos:column="40">port_host<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">HOST_VM_INFO<pos:position pos:line="17" pos:column="63"/></name></expr></argument>,
					<argument><expr><operator pos:line="18" pos:column="41">(<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="42">host_info_t<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">)<pos:position pos:line="18" pos:column="54"/></operator> <operator pos:line="18" pos:column="55">&amp;<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="56">vm_data<pos:position pos:line="18" pos:column="63"/></name></expr></argument>,
					<argument><expr><operator pos:line="19" pos:column="41">&amp;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="42">vm_data_len<pos:position pos:line="19" pos:column="53"/></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call><operator pos:line="19" pos:column="54">)<pos:position pos:line="19" pos:column="55"/></operator> <operator pos:line="19" pos:column="56">!=<pos:position pos:line="19" pos:column="58"/></operator> <name pos:line="19" pos:column="59">KERN_SUCCESS<pos:position pos:line="19" pos:column="71"/></name></expr>)<pos:position pos:line="19" pos:column="72"/></condition><then pos:line="19" pos:column="72">
	<block pos:line="20" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">ERROR<pos:position pos:line="21" pos:column="22"/></name> <argument_list pos:line="21" pos:column="23">(<argument><expr><literal type="string" pos:line="21" pos:column="24">"memory-plugin: host_statistics failed and returned the value %i"<pos:position pos:line="21" pos:column="89"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="91">(<pos:position pos:line="21" pos:column="92"/></operator><name pos:line="21" pos:column="92">int<pos:position pos:line="21" pos:column="95"/></name><operator pos:line="21" pos:column="95">)<pos:position pos:line="21" pos:column="96"/></operator> <name pos:line="21" pos:column="97">status<pos:position pos:line="21" pos:column="103"/></name></expr></argument>)<pos:position pos:line="21" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="105"/></expr_stmt>
		<return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><operator pos:line="22" pos:column="25">-<pos:position pos:line="22" pos:column="26"/></operator><literal type="number" pos:line="22" pos:column="26">1<pos:position pos:line="22" pos:column="27"/></literal><operator pos:line="22" pos:column="27">)<pos:position pos:line="22" pos:column="28"/></operator></expr>;<pos:position pos:line="22" pos:column="29"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="25" pos:column="9">/*
	 * From &lt;http://docs.info.apple.com/article.html?artnum=107918&gt;:
	 *
	 * Wired memory
	 *   This information can't be cached to disk, so it must stay in RAM.
	 *   The amount depends on what applications you are using.
	 *
	 * Active memory
	 *   This information is currently in RAM and actively being used.
	 *
	 * Inactive memory
	 *   This information is no longer being used and has been cached to
	 *   disk, but it will remain in RAM until another application needs
	 *   the space. Leaving this information in RAM is to your advantage if
	 *   you (or a client of your computer) come back to it later.
	 *
	 * Free memory
	 *   This memory is not being used.
	 */</comment>

	<expr_stmt><expr><name pos:line="45" pos:column="9">wired<pos:position pos:line="45" pos:column="14"/></name>    <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <call pos:line="45" pos:column="20">(<name pos:line="45" pos:column="21">gauge_t<pos:position pos:line="45" pos:column="28"/></name>) <argument_list pos:line="45" pos:column="30">(<argument><expr><operator pos:line="45" pos:column="31">(<pos:position pos:line="45" pos:column="32"/></operator><operator pos:line="45" pos:column="32">(<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="33">uint64_t<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">)<pos:position pos:line="45" pos:column="42"/></operator> <name><name pos:line="45" pos:column="43">vm_data<pos:position pos:line="45" pos:column="50"/></name><operator pos:line="45" pos:column="50">.<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="51">wire_count<pos:position pos:line="45" pos:column="61"/></name></name><operator pos:line="45" pos:column="61">)<pos:position pos:line="45" pos:column="62"/></operator>     <operator pos:line="45" pos:column="67">*<pos:position pos:line="45" pos:column="68"/></operator> <operator pos:line="45" pos:column="69">(<pos:position pos:line="45" pos:column="70"/></operator><operator pos:line="45" pos:column="70">(<pos:position pos:line="45" pos:column="71"/></operator><name pos:line="45" pos:column="71">uint64_t<pos:position pos:line="45" pos:column="79"/></name><operator pos:line="45" pos:column="79">)<pos:position pos:line="45" pos:column="80"/></operator> <name pos:line="45" pos:column="81">pagesize<pos:position pos:line="45" pos:column="89"/></name><operator pos:line="45" pos:column="89">)<pos:position pos:line="45" pos:column="90"/></operator></expr></argument>)<pos:position pos:line="45" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="92"/></expr_stmt>
	<expr_stmt><expr><name pos:line="46" pos:column="9">active<pos:position pos:line="46" pos:column="15"/></name>   <operator pos:line="46" pos:column="18">=<pos:position pos:line="46" pos:column="19"/></operator> <call pos:line="46" pos:column="20">(<name pos:line="46" pos:column="21">gauge_t<pos:position pos:line="46" pos:column="28"/></name>) <argument_list pos:line="46" pos:column="30">(<argument><expr><operator pos:line="46" pos:column="31">(<pos:position pos:line="46" pos:column="32"/></operator><operator pos:line="46" pos:column="32">(<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="33">uint64_t<pos:position pos:line="46" pos:column="41"/></name><operator pos:line="46" pos:column="41">)<pos:position pos:line="46" pos:column="42"/></operator> <name><name pos:line="46" pos:column="43">vm_data<pos:position pos:line="46" pos:column="50"/></name><operator pos:line="46" pos:column="50">.<pos:position pos:line="46" pos:column="51"/></operator><name pos:line="46" pos:column="51">active_count<pos:position pos:line="46" pos:column="63"/></name></name><operator pos:line="46" pos:column="63">)<pos:position pos:line="46" pos:column="64"/></operator>   <operator pos:line="46" pos:column="67">*<pos:position pos:line="46" pos:column="68"/></operator> <operator pos:line="46" pos:column="69">(<pos:position pos:line="46" pos:column="70"/></operator><operator pos:line="46" pos:column="70">(<pos:position pos:line="46" pos:column="71"/></operator><name pos:line="46" pos:column="71">uint64_t<pos:position pos:line="46" pos:column="79"/></name><operator pos:line="46" pos:column="79">)<pos:position pos:line="46" pos:column="80"/></operator> <name pos:line="46" pos:column="81">pagesize<pos:position pos:line="46" pos:column="89"/></name><operator pos:line="46" pos:column="89">)<pos:position pos:line="46" pos:column="90"/></operator></expr></argument>)<pos:position pos:line="46" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="92"/></expr_stmt>
	<expr_stmt><expr><name pos:line="47" pos:column="9">inactive<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <call pos:line="47" pos:column="20">(<name pos:line="47" pos:column="21">gauge_t<pos:position pos:line="47" pos:column="28"/></name>) <argument_list pos:line="47" pos:column="30">(<argument><expr><operator pos:line="47" pos:column="31">(<pos:position pos:line="47" pos:column="32"/></operator><operator pos:line="47" pos:column="32">(<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="33">uint64_t<pos:position pos:line="47" pos:column="41"/></name><operator pos:line="47" pos:column="41">)<pos:position pos:line="47" pos:column="42"/></operator> <name><name pos:line="47" pos:column="43">vm_data<pos:position pos:line="47" pos:column="50"/></name><operator pos:line="47" pos:column="50">.<pos:position pos:line="47" pos:column="51"/></operator><name pos:line="47" pos:column="51">inactive_count<pos:position pos:line="47" pos:column="65"/></name></name><operator pos:line="47" pos:column="65">)<pos:position pos:line="47" pos:column="66"/></operator> <operator pos:line="47" pos:column="67">*<pos:position pos:line="47" pos:column="68"/></operator> <operator pos:line="47" pos:column="69">(<pos:position pos:line="47" pos:column="70"/></operator><operator pos:line="47" pos:column="70">(<pos:position pos:line="47" pos:column="71"/></operator><name pos:line="47" pos:column="71">uint64_t<pos:position pos:line="47" pos:column="79"/></name><operator pos:line="47" pos:column="79">)<pos:position pos:line="47" pos:column="80"/></operator> <name pos:line="47" pos:column="81">pagesize<pos:position pos:line="47" pos:column="89"/></name><operator pos:line="47" pos:column="89">)<pos:position pos:line="47" pos:column="90"/></operator></expr></argument>)<pos:position pos:line="47" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="92"/></expr_stmt>
	<expr_stmt><expr><name pos:line="48" pos:column="9">free<pos:position pos:line="48" pos:column="13"/></name>     <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <call pos:line="48" pos:column="20">(<name pos:line="48" pos:column="21">gauge_t<pos:position pos:line="48" pos:column="28"/></name>) <argument_list pos:line="48" pos:column="30">(<argument><expr><operator pos:line="48" pos:column="31">(<pos:position pos:line="48" pos:column="32"/></operator><operator pos:line="48" pos:column="32">(<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="33">uint64_t<pos:position pos:line="48" pos:column="41"/></name><operator pos:line="48" pos:column="41">)<pos:position pos:line="48" pos:column="42"/></operator> <name><name pos:line="48" pos:column="43">vm_data<pos:position pos:line="48" pos:column="50"/></name><operator pos:line="48" pos:column="50">.<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="51">free_count<pos:position pos:line="48" pos:column="61"/></name></name><operator pos:line="48" pos:column="61">)<pos:position pos:line="48" pos:column="62"/></operator>     <operator pos:line="48" pos:column="67">*<pos:position pos:line="48" pos:column="68"/></operator> <operator pos:line="48" pos:column="69">(<pos:position pos:line="48" pos:column="70"/></operator><operator pos:line="48" pos:column="70">(<pos:position pos:line="48" pos:column="71"/></operator><name pos:line="48" pos:column="71">uint64_t<pos:position pos:line="48" pos:column="79"/></name><operator pos:line="48" pos:column="79">)<pos:position pos:line="48" pos:column="80"/></operator> <name pos:line="48" pos:column="81">pagesize<pos:position pos:line="48" pos:column="89"/></name><operator pos:line="48" pos:column="89">)<pos:position pos:line="48" pos:column="90"/></operator></expr></argument>)<pos:position pos:line="48" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="92"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="50" pos:column="9">MEMORY_SUBMIT<pos:position pos:line="50" pos:column="22"/></name> <argument_list pos:line="50" pos:column="23">(<argument><expr><literal type="string" pos:line="50" pos:column="24">"wired"<pos:position pos:line="50" pos:column="31"/></literal></expr></argument>,    <argument><expr><name pos:line="50" pos:column="36">wired<pos:position pos:line="50" pos:column="41"/></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="51" pos:column="24">"active"<pos:position pos:line="51" pos:column="32"/></literal></expr></argument>,   <argument><expr><name pos:line="51" pos:column="36">active<pos:position pos:line="51" pos:column="42"/></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="52" pos:column="24">"inactive"<pos:position pos:line="52" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="36">inactive<pos:position pos:line="52" pos:column="44"/></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="53" pos:column="24">"free"<pos:position pos:line="53" pos:column="30"/></literal></expr></argument>,     <argument><expr><name pos:line="53" pos:column="36">free<pos:position pos:line="53" pos:column="40"/></name></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
<comment type="block" pos:line="54" pos:column="1">/* #endif HAVE_HOST_STATISTICS */</comment>

<cpp:elif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">elif<pos:position pos:line="56" pos:column="6"/></cpp:directive> <expr><name pos:line="56" pos:column="7">HAVE_SYSCTLBYNAME<pos:position pos:line="56" pos:column="24"/></name></expr></cpp:elif>
	<comment type="block" pos:line="57" pos:column="9">/*
	 * vm.stats.vm.v_page_size: 4096
	 * vm.stats.vm.v_page_count: 246178
	 * vm.stats.vm.v_free_count: 28760
	 * vm.stats.vm.v_wire_count: 37526
	 * vm.stats.vm.v_active_count: 55239
	 * vm.stats.vm.v_inactive_count: 113730
	 * vm.stats.vm.v_cache_count: 10809
	 */</comment>
	<decl_stmt><decl><type><specifier pos:line="66" pos:column="9">const<pos:position pos:line="66" pos:column="14"/></specifier> <name pos:line="66" pos:column="15">char<pos:position pos:line="66" pos:column="19"/></name> <modifier pos:line="66" pos:column="20">*<pos:position pos:line="66" pos:column="21"/></modifier></type><name><name pos:line="66" pos:column="21">sysctl_keys<pos:position pos:line="66" pos:column="32"/></name><index pos:line="66" pos:column="32">[<expr><literal type="number" pos:line="66" pos:column="33">8<pos:position pos:line="66" pos:column="34"/></literal></expr>]<pos:position pos:line="66" pos:column="35"/></index></name> <init pos:line="66" pos:column="36">=
	<expr><block pos:line="67" pos:column="9">{
		<expr><literal type="string" pos:line="68" pos:column="17">"vm.stats.vm.v_page_size"<pos:position pos:line="68" pos:column="42"/></literal></expr>,
		<expr><literal type="string" pos:line="69" pos:column="17">"vm.stats.vm.v_page_count"<pos:position pos:line="69" pos:column="43"/></literal></expr>,
		<expr><literal type="string" pos:line="70" pos:column="17">"vm.stats.vm.v_free_count"<pos:position pos:line="70" pos:column="43"/></literal></expr>,
		<expr><literal type="string" pos:line="71" pos:column="17">"vm.stats.vm.v_wire_count"<pos:position pos:line="71" pos:column="43"/></literal></expr>,
		<expr><literal type="string" pos:line="72" pos:column="17">"vm.stats.vm.v_active_count"<pos:position pos:line="72" pos:column="45"/></literal></expr>,
		<expr><literal type="string" pos:line="73" pos:column="17">"vm.stats.vm.v_inactive_count"<pos:position pos:line="73" pos:column="47"/></literal></expr>,
		<expr><literal type="string" pos:line="74" pos:column="17">"vm.stats.vm.v_cache_count"<pos:position pos:line="74" pos:column="44"/></literal></expr>,
		<expr><name pos:line="75" pos:column="17">NULL<pos:position pos:line="75" pos:column="21"/></name></expr>
	}<pos:position pos:line="76" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="76" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="77" pos:column="9">double<pos:position pos:line="77" pos:column="15"/></name></type> <name><name pos:line="77" pos:column="16">sysctl_vals<pos:position pos:line="77" pos:column="27"/></name><index pos:line="77" pos:column="27">[<expr><literal type="number" pos:line="77" pos:column="28">8<pos:position pos:line="77" pos:column="29"/></literal></expr>]<pos:position pos:line="77" pos:column="30"/></index></name></decl>;<pos:position pos:line="77" pos:column="31"/></decl_stmt>

	<for pos:line="79" pos:column="9">for <control pos:line="79" pos:column="13">(<init><decl><type><name pos:line="79" pos:column="14">int<pos:position pos:line="79" pos:column="17"/></name></type> <name pos:line="79" pos:column="18">i<pos:position pos:line="79" pos:column="19"/></name> <init pos:line="79" pos:column="20">= <expr><literal type="number" pos:line="79" pos:column="22">0<pos:position pos:line="79" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="79" pos:column="24"/></init> <condition><expr><name><name pos:line="79" pos:column="25">sysctl_keys<pos:position pos:line="79" pos:column="36"/></name><index pos:line="79" pos:column="36">[<expr><name pos:line="79" pos:column="37">i<pos:position pos:line="79" pos:column="38"/></name></expr>]<pos:position pos:line="79" pos:column="39"/></index></name> <operator pos:line="79" pos:column="40">!=<pos:position pos:line="79" pos:column="42"/></operator> <name pos:line="79" pos:column="43">NULL<pos:position pos:line="79" pos:column="47"/></name></expr>;<pos:position pos:line="79" pos:column="48"/></condition> <incr><expr><name pos:line="79" pos:column="49">i<pos:position pos:line="79" pos:column="50"/></name><operator pos:line="79" pos:column="50">++<pos:position pos:line="79" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="79" pos:column="53"/></control>
	<block pos:line="80" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="81" pos:column="17">int<pos:position pos:line="81" pos:column="20"/></name></type> <name pos:line="81" pos:column="21">value<pos:position pos:line="81" pos:column="26"/></name></decl>;<pos:position pos:line="81" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="82" pos:column="17">size_t<pos:position pos:line="82" pos:column="23"/></name></type> <name pos:line="82" pos:column="24">value_len<pos:position pos:line="82" pos:column="33"/></name> <init pos:line="82" pos:column="34">= <expr><sizeof pos:line="82" pos:column="36">sizeof <argument_list pos:line="82" pos:column="43">(<argument><expr><name pos:line="82" pos:column="44">value<pos:position pos:line="82" pos:column="49"/></name></expr></argument>)<pos:position pos:line="82" pos:column="50"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="82" pos:column="51"/></decl_stmt>

		<if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><call><name pos:line="84" pos:column="21">sysctlbyname<pos:position pos:line="84" pos:column="33"/></name> <argument_list pos:line="84" pos:column="34">(<argument><expr><name><name pos:line="84" pos:column="35">sysctl_keys<pos:position pos:line="84" pos:column="46"/></name><index pos:line="84" pos:column="46">[<expr><name pos:line="84" pos:column="47">i<pos:position pos:line="84" pos:column="48"/></name></expr>]<pos:position pos:line="84" pos:column="49"/></index></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="51">(<pos:position pos:line="84" pos:column="52"/></operator><name pos:line="84" pos:column="52">void<pos:position pos:line="84" pos:column="56"/></name> <operator pos:line="84" pos:column="57">*<pos:position pos:line="84" pos:column="58"/></operator><operator pos:line="84" pos:column="58">)<pos:position pos:line="84" pos:column="59"/></operator> <operator pos:line="84" pos:column="60">&amp;<pos:position pos:line="84" pos:column="65"/></operator><name pos:line="84" pos:column="61">value<pos:position pos:line="84" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="68">&amp;<pos:position pos:line="84" pos:column="73"/></operator><name pos:line="84" pos:column="69">value_len<pos:position pos:line="84" pos:column="78"/></name></expr></argument>,
					<argument><expr><name pos:line="85" pos:column="41">NULL<pos:position pos:line="85" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="47">0<pos:position pos:line="85" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="49"/></argument_list></call> <operator pos:line="85" pos:column="50">==<pos:position pos:line="85" pos:column="52"/></operator> <literal type="number" pos:line="85" pos:column="53">0<pos:position pos:line="85" pos:column="54"/></literal></expr>)<pos:position pos:line="85" pos:column="55"/></condition><then pos:line="85" pos:column="55">
		<block pos:line="86" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="87" pos:column="25">sysctl_vals<pos:position pos:line="87" pos:column="36"/></name><index pos:line="87" pos:column="36">[<expr><name pos:line="87" pos:column="37">i<pos:position pos:line="87" pos:column="38"/></name></expr>]<pos:position pos:line="87" pos:column="39"/></index></name> <operator pos:line="87" pos:column="40">=<pos:position pos:line="87" pos:column="41"/></operator> <name pos:line="87" pos:column="42">value<pos:position pos:line="87" pos:column="47"/></name></expr>;<pos:position pos:line="87" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="88" pos:column="25">DEBUG<pos:position pos:line="88" pos:column="30"/></name> <argument_list pos:line="88" pos:column="31">(<argument><expr><literal type="string" pos:line="88" pos:column="32">"memory plugin: %26s: %g"<pos:position pos:line="88" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="59">sysctl_keys<pos:position pos:line="88" pos:column="70"/></name><index pos:line="88" pos:column="70">[<expr><name pos:line="88" pos:column="71">i<pos:position pos:line="88" pos:column="72"/></name></expr>]<pos:position pos:line="88" pos:column="73"/></index></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="75">sysctl_vals<pos:position pos:line="88" pos:column="86"/></name><index pos:line="88" pos:column="86">[<expr><name pos:line="88" pos:column="87">i<pos:position pos:line="88" pos:column="88"/></name></expr>]<pos:position pos:line="88" pos:column="89"/></index></name></expr></argument>)<pos:position pos:line="88" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="91"/></expr_stmt>
		}<pos:position pos:line="89" pos:column="18"/></block></then>
		<else pos:line="90" pos:column="17">else
		<block pos:line="91" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="92" pos:column="25">sysctl_vals<pos:position pos:line="92" pos:column="36"/></name><index pos:line="92" pos:column="36">[<expr><name pos:line="92" pos:column="37">i<pos:position pos:line="92" pos:column="38"/></name></expr>]<pos:position pos:line="92" pos:column="39"/></index></name> <operator pos:line="92" pos:column="40">=<pos:position pos:line="92" pos:column="41"/></operator> <name pos:line="92" pos:column="42">NAN<pos:position pos:line="92" pos:column="45"/></name></expr>;<pos:position pos:line="92" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="93" pos:column="18"/></block></else></if>
	}<pos:position pos:line="94" pos:column="10"/></block></for> <comment type="block" pos:line="94" pos:column="11">/* for (sysctl_keys) */</comment>

	<comment type="block" pos:line="96" pos:column="9">/* multiply all all page counts with the pagesize */</comment>
	<for pos:line="97" pos:column="9">for <control pos:line="97" pos:column="13">(<init><decl><type><name pos:line="97" pos:column="14">int<pos:position pos:line="97" pos:column="17"/></name></type> <name pos:line="97" pos:column="18">i<pos:position pos:line="97" pos:column="19"/></name> <init pos:line="97" pos:column="20">= <expr><literal type="number" pos:line="97" pos:column="22">1<pos:position pos:line="97" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="97" pos:column="24"/></init> <condition><expr><name><name pos:line="97" pos:column="25">sysctl_keys<pos:position pos:line="97" pos:column="36"/></name><index pos:line="97" pos:column="36">[<expr><name pos:line="97" pos:column="37">i<pos:position pos:line="97" pos:column="38"/></name></expr>]<pos:position pos:line="97" pos:column="39"/></index></name> <operator pos:line="97" pos:column="40">!=<pos:position pos:line="97" pos:column="42"/></operator> <name pos:line="97" pos:column="43">NULL<pos:position pos:line="97" pos:column="47"/></name></expr>;<pos:position pos:line="97" pos:column="48"/></condition> <incr><expr><name pos:line="97" pos:column="49">i<pos:position pos:line="97" pos:column="50"/></name><operator pos:line="97" pos:column="50">++<pos:position pos:line="97" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="97" pos:column="53"/></control>
		<block type="pseudo"><if pos:line="98" pos:column="17">if <condition pos:line="98" pos:column="20">(<expr><operator pos:line="98" pos:column="21">!<pos:position pos:line="98" pos:column="22"/></operator><call><name pos:line="98" pos:column="22">isnan<pos:position pos:line="98" pos:column="27"/></name> <argument_list pos:line="98" pos:column="28">(<argument><expr><name><name pos:line="98" pos:column="29">sysctl_vals<pos:position pos:line="98" pos:column="40"/></name><index pos:line="98" pos:column="40">[<expr><name pos:line="98" pos:column="41">i<pos:position pos:line="98" pos:column="42"/></name></expr>]<pos:position pos:line="98" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="98" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="45"/></condition><then pos:line="98" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="99" pos:column="25">sysctl_vals<pos:position pos:line="99" pos:column="36"/></name><index pos:line="99" pos:column="36">[<expr><name pos:line="99" pos:column="37">i<pos:position pos:line="99" pos:column="38"/></name></expr>]<pos:position pos:line="99" pos:column="39"/></index></name> <operator pos:line="99" pos:column="40">*=<pos:position pos:line="99" pos:column="42"/></operator> <name><name pos:line="99" pos:column="43">sysctl_vals<pos:position pos:line="99" pos:column="54"/></name><index pos:line="99" pos:column="54">[<expr><literal type="number" pos:line="99" pos:column="55">0<pos:position pos:line="99" pos:column="56"/></literal></expr>]<pos:position pos:line="99" pos:column="57"/></index></name></expr>;<pos:position pos:line="99" pos:column="58"/></expr_stmt></block></then></if></block></for>

	<expr_stmt><expr><call><name pos:line="101" pos:column="9">MEMORY_SUBMIT<pos:position pos:line="101" pos:column="22"/></name> <argument_list pos:line="101" pos:column="23">(<argument><expr><literal type="string" pos:line="101" pos:column="24">"free"<pos:position pos:line="101" pos:column="30"/></literal></expr></argument>,     <argument><expr><operator pos:line="101" pos:column="36">(<pos:position pos:line="101" pos:column="37"/></operator><name pos:line="101" pos:column="37">gauge_t<pos:position pos:line="101" pos:column="44"/></name><operator pos:line="101" pos:column="44">)<pos:position pos:line="101" pos:column="45"/></operator> <name><name pos:line="101" pos:column="46">sysctl_vals<pos:position pos:line="101" pos:column="57"/></name><index pos:line="101" pos:column="57">[<expr><literal type="number" pos:line="101" pos:column="58">2<pos:position pos:line="101" pos:column="59"/></literal></expr>]<pos:position pos:line="101" pos:column="60"/></index></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="102" pos:column="24">"wired"<pos:position pos:line="102" pos:column="31"/></literal></expr></argument>,    <argument><expr><operator pos:line="102" pos:column="36">(<pos:position pos:line="102" pos:column="37"/></operator><name pos:line="102" pos:column="37">gauge_t<pos:position pos:line="102" pos:column="44"/></name><operator pos:line="102" pos:column="44">)<pos:position pos:line="102" pos:column="45"/></operator> <name><name pos:line="102" pos:column="46">sysctl_vals<pos:position pos:line="102" pos:column="57"/></name><index pos:line="102" pos:column="57">[<expr><literal type="number" pos:line="102" pos:column="58">3<pos:position pos:line="102" pos:column="59"/></literal></expr>]<pos:position pos:line="102" pos:column="60"/></index></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="103" pos:column="24">"active"<pos:position pos:line="103" pos:column="32"/></literal></expr></argument>,   <argument><expr><operator pos:line="103" pos:column="36">(<pos:position pos:line="103" pos:column="37"/></operator><name pos:line="103" pos:column="37">gauge_t<pos:position pos:line="103" pos:column="44"/></name><operator pos:line="103" pos:column="44">)<pos:position pos:line="103" pos:column="45"/></operator> <name><name pos:line="103" pos:column="46">sysctl_vals<pos:position pos:line="103" pos:column="57"/></name><index pos:line="103" pos:column="57">[<expr><literal type="number" pos:line="103" pos:column="58">4<pos:position pos:line="103" pos:column="59"/></literal></expr>]<pos:position pos:line="103" pos:column="60"/></index></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="104" pos:column="24">"inactive"<pos:position pos:line="104" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="104" pos:column="36">(<pos:position pos:line="104" pos:column="37"/></operator><name pos:line="104" pos:column="37">gauge_t<pos:position pos:line="104" pos:column="44"/></name><operator pos:line="104" pos:column="44">)<pos:position pos:line="104" pos:column="45"/></operator> <name><name pos:line="104" pos:column="46">sysctl_vals<pos:position pos:line="104" pos:column="57"/></name><index pos:line="104" pos:column="57">[<expr><literal type="number" pos:line="104" pos:column="58">5<pos:position pos:line="104" pos:column="59"/></literal></expr>]<pos:position pos:line="104" pos:column="60"/></index></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="105" pos:column="24">"cache"<pos:position pos:line="105" pos:column="31"/></literal></expr></argument>,    <argument><expr><operator pos:line="105" pos:column="36">(<pos:position pos:line="105" pos:column="37"/></operator><name pos:line="105" pos:column="37">gauge_t<pos:position pos:line="105" pos:column="44"/></name><operator pos:line="105" pos:column="44">)<pos:position pos:line="105" pos:column="45"/></operator> <name><name pos:line="105" pos:column="46">sysctl_vals<pos:position pos:line="105" pos:column="57"/></name><index pos:line="105" pos:column="57">[<expr><literal type="number" pos:line="105" pos:column="58">6<pos:position pos:line="105" pos:column="59"/></literal></expr>]<pos:position pos:line="105" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="105" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="62"/></expr_stmt>
<comment type="block" pos:line="106" pos:column="1">/* #endif HAVE_SYSCTLBYNAME */</comment>

<cpp:elif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">elif<pos:position pos:line="108" pos:column="6"/></cpp:directive> <expr><name pos:line="108" pos:column="7">KERNEL_LINUX<pos:position pos:line="108" pos:column="19"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="109" pos:column="9">FILE<pos:position pos:line="109" pos:column="13"/></name> <modifier pos:line="109" pos:column="14">*<pos:position pos:line="109" pos:column="15"/></modifier></type><name pos:line="109" pos:column="15">fh<pos:position pos:line="109" pos:column="17"/></name></decl>;<pos:position pos:line="109" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="110" pos:column="9">char<pos:position pos:line="110" pos:column="13"/></name></type> <name><name pos:line="110" pos:column="14">buffer<pos:position pos:line="110" pos:column="20"/></name><index pos:line="110" pos:column="20">[<expr><literal type="number" pos:line="110" pos:column="21">1024<pos:position pos:line="110" pos:column="25"/></literal></expr>]<pos:position pos:line="110" pos:column="26"/></index></name></decl>;<pos:position pos:line="110" pos:column="27"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="112" pos:column="9">char<pos:position pos:line="112" pos:column="13"/></name> <modifier pos:line="112" pos:column="14">*<pos:position pos:line="112" pos:column="15"/></modifier></type><name><name pos:line="112" pos:column="15">fields<pos:position pos:line="112" pos:column="21"/></name><index pos:line="112" pos:column="21">[<expr><literal type="number" pos:line="112" pos:column="22">8<pos:position pos:line="112" pos:column="23"/></literal></expr>]<pos:position pos:line="112" pos:column="24"/></index></name></decl>;<pos:position pos:line="112" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="113" pos:column="9">int<pos:position pos:line="113" pos:column="12"/></name></type> <name pos:line="113" pos:column="13">numfields<pos:position pos:line="113" pos:column="22"/></name></decl>;<pos:position pos:line="113" pos:column="23"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="115" pos:column="9">_Bool<pos:position pos:line="115" pos:column="14"/></name></type> <name pos:line="115" pos:column="15">detailed_slab_info<pos:position pos:line="115" pos:column="33"/></name> <init pos:line="115" pos:column="34">= <expr><literal type="number" pos:line="115" pos:column="36">0<pos:position pos:line="115" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="115" pos:column="38"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="117" pos:column="9">gauge_t<pos:position pos:line="117" pos:column="16"/></name></type> <name pos:line="117" pos:column="17">mem_total<pos:position pos:line="117" pos:column="26"/></name> <init pos:line="117" pos:column="27">= <expr><literal type="number" pos:line="117" pos:column="29">0<pos:position pos:line="117" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="117" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="118" pos:column="9">gauge_t<pos:position pos:line="118" pos:column="16"/></name></type> <name pos:line="118" pos:column="17">mem_used<pos:position pos:line="118" pos:column="25"/></name> <init pos:line="118" pos:column="26">= <expr><literal type="number" pos:line="118" pos:column="28">0<pos:position pos:line="118" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="118" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="119" pos:column="9">gauge_t<pos:position pos:line="119" pos:column="16"/></name></type> <name pos:line="119" pos:column="17">mem_buffered<pos:position pos:line="119" pos:column="29"/></name> <init pos:line="119" pos:column="30">= <expr><literal type="number" pos:line="119" pos:column="32">0<pos:position pos:line="119" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="119" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="120" pos:column="9">gauge_t<pos:position pos:line="120" pos:column="16"/></name></type> <name pos:line="120" pos:column="17">mem_cached<pos:position pos:line="120" pos:column="27"/></name> <init pos:line="120" pos:column="28">= <expr><literal type="number" pos:line="120" pos:column="30">0<pos:position pos:line="120" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="120" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="121" pos:column="9">gauge_t<pos:position pos:line="121" pos:column="16"/></name></type> <name pos:line="121" pos:column="17">mem_free<pos:position pos:line="121" pos:column="25"/></name> <init pos:line="121" pos:column="26">= <expr><literal type="number" pos:line="121" pos:column="28">0<pos:position pos:line="121" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="121" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="122" pos:column="9">gauge_t<pos:position pos:line="122" pos:column="16"/></name></type> <name pos:line="122" pos:column="17">mem_slab_total<pos:position pos:line="122" pos:column="31"/></name> <init pos:line="122" pos:column="32">= <expr><literal type="number" pos:line="122" pos:column="34">0<pos:position pos:line="122" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="122" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="123" pos:column="9">gauge_t<pos:position pos:line="123" pos:column="16"/></name></type> <name pos:line="123" pos:column="17">mem_slab_reclaimable<pos:position pos:line="123" pos:column="37"/></name> <init pos:line="123" pos:column="38">= <expr><literal type="number" pos:line="123" pos:column="40">0<pos:position pos:line="123" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="123" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="124" pos:column="9">gauge_t<pos:position pos:line="124" pos:column="16"/></name></type> <name pos:line="124" pos:column="17">mem_slab_unreclaimable<pos:position pos:line="124" pos:column="39"/></name> <init pos:line="124" pos:column="40">= <expr><literal type="number" pos:line="124" pos:column="42">0<pos:position pos:line="124" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="124" pos:column="44"/></decl_stmt>

	<if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><operator pos:line="126" pos:column="13">(<pos:position pos:line="126" pos:column="14"/></operator><name pos:line="126" pos:column="14">fh<pos:position pos:line="126" pos:column="16"/></name> <operator pos:line="126" pos:column="17">=<pos:position pos:line="126" pos:column="18"/></operator> <call><name pos:line="126" pos:column="19">fopen<pos:position pos:line="126" pos:column="24"/></name> <argument_list pos:line="126" pos:column="25">(<argument><expr><literal type="string" pos:line="126" pos:column="26">"/proc/meminfo"<pos:position pos:line="126" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="43">"r"<pos:position pos:line="126" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="47"/></argument_list></call><operator pos:line="126" pos:column="47">)<pos:position pos:line="126" pos:column="48"/></operator> <operator pos:line="126" pos:column="49">==<pos:position pos:line="126" pos:column="51"/></operator> <name pos:line="126" pos:column="52">NULL<pos:position pos:line="126" pos:column="56"/></name></expr>)<pos:position pos:line="126" pos:column="57"/></condition><then pos:line="126" pos:column="57">
	<block pos:line="127" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="128" pos:column="17">char<pos:position pos:line="128" pos:column="21"/></name></type> <name><name pos:line="128" pos:column="22">errbuf<pos:position pos:line="128" pos:column="28"/></name><index pos:line="128" pos:column="28">[<expr><literal type="number" pos:line="128" pos:column="29">1024<pos:position pos:line="128" pos:column="33"/></literal></expr>]<pos:position pos:line="128" pos:column="34"/></index></name></decl>;<pos:position pos:line="128" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="129" pos:column="17">WARNING<pos:position pos:line="129" pos:column="24"/></name> <argument_list pos:line="129" pos:column="25">(<argument><expr><literal type="string" pos:line="129" pos:column="26">"memory: fopen: %s"<pos:position pos:line="129" pos:column="45"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="130" pos:column="33">sstrerror<pos:position pos:line="130" pos:column="42"/></name> <argument_list pos:line="130" pos:column="43">(<argument><expr><name pos:line="130" pos:column="44">errno<pos:position pos:line="130" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="51">errbuf<pos:position pos:line="130" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="130" pos:column="59">sizeof <argument_list pos:line="130" pos:column="66">(<argument><expr><name pos:line="130" pos:column="67">errbuf<pos:position pos:line="130" pos:column="73"/></name></expr></argument>)<pos:position pos:line="130" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="130" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="130" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="77"/></expr_stmt>
		<return pos:line="131" pos:column="17">return <expr><operator pos:line="131" pos:column="24">(<pos:position pos:line="131" pos:column="25"/></operator><operator pos:line="131" pos:column="25">-<pos:position pos:line="131" pos:column="26"/></operator><literal type="number" pos:line="131" pos:column="26">1<pos:position pos:line="131" pos:column="27"/></literal><operator pos:line="131" pos:column="27">)<pos:position pos:line="131" pos:column="28"/></operator></expr>;<pos:position pos:line="131" pos:column="29"/></return>
	}<pos:position pos:line="132" pos:column="10"/></block></then></if>

	<while pos:line="134" pos:column="9">while <condition pos:line="134" pos:column="15">(<expr><call><name pos:line="134" pos:column="16">fgets<pos:position pos:line="134" pos:column="21"/></name> <argument_list pos:line="134" pos:column="22">(<argument><expr><name pos:line="134" pos:column="23">buffer<pos:position pos:line="134" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="134" pos:column="31">sizeof <argument_list pos:line="134" pos:column="38">(<argument><expr><name pos:line="134" pos:column="39">buffer<pos:position pos:line="134" pos:column="45"/></name></expr></argument>)<pos:position pos:line="134" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="134" pos:column="48">fh<pos:position pos:line="134" pos:column="50"/></name></expr></argument>)<pos:position pos:line="134" pos:column="51"/></argument_list></call> <operator pos:line="134" pos:column="52">!=<pos:position pos:line="134" pos:column="54"/></operator> <name pos:line="134" pos:column="55">NULL<pos:position pos:line="134" pos:column="59"/></name></expr>)<pos:position pos:line="134" pos:column="60"/></condition>
	<block pos:line="135" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="136" pos:column="17">gauge_t<pos:position pos:line="136" pos:column="24"/></name> <modifier pos:line="136" pos:column="25">*<pos:position pos:line="136" pos:column="26"/></modifier></type><name pos:line="136" pos:column="26">val<pos:position pos:line="136" pos:column="29"/></name> <init pos:line="136" pos:column="30">= <expr><name pos:line="136" pos:column="32">NULL<pos:position pos:line="136" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="136" pos:column="37"/></decl_stmt>

		<if pos:line="138" pos:column="17">if <condition pos:line="138" pos:column="20">(<expr><call><name pos:line="138" pos:column="21">strncasecmp<pos:position pos:line="138" pos:column="32"/></name> <argument_list pos:line="138" pos:column="33">(<argument><expr><name pos:line="138" pos:column="34">buffer<pos:position pos:line="138" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="42">"MemTotal:"<pos:position pos:line="138" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="138" pos:column="55">9<pos:position pos:line="138" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="57"/></argument_list></call> <operator pos:line="138" pos:column="58">==<pos:position pos:line="138" pos:column="60"/></operator> <literal type="number" pos:line="138" pos:column="61">0<pos:position pos:line="138" pos:column="62"/></literal></expr>)<pos:position pos:line="138" pos:column="63"/></condition><then pos:line="138" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><name pos:line="139" pos:column="25">val<pos:position pos:line="139" pos:column="28"/></name> <operator pos:line="139" pos:column="29">=<pos:position pos:line="139" pos:column="30"/></operator> <operator pos:line="139" pos:column="31">&amp;<pos:position pos:line="139" pos:column="36"/></operator><name pos:line="139" pos:column="32">mem_total<pos:position pos:line="139" pos:column="41"/></name></expr>;<pos:position pos:line="139" pos:column="42"/></expr_stmt></block></then>
		<elseif pos:line="140" pos:column="17">else <if pos:line="140" pos:column="22">if <condition pos:line="140" pos:column="25">(<expr><call><name pos:line="140" pos:column="26">strncasecmp<pos:position pos:line="140" pos:column="37"/></name> <argument_list pos:line="140" pos:column="38">(<argument><expr><name pos:line="140" pos:column="39">buffer<pos:position pos:line="140" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="47">"MemFree:"<pos:position pos:line="140" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="140" pos:column="59">8<pos:position pos:line="140" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="61"/></argument_list></call> <operator pos:line="140" pos:column="62">==<pos:position pos:line="140" pos:column="64"/></operator> <literal type="number" pos:line="140" pos:column="65">0<pos:position pos:line="140" pos:column="66"/></literal></expr>)<pos:position pos:line="140" pos:column="67"/></condition><then pos:line="140" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><name pos:line="141" pos:column="25">val<pos:position pos:line="141" pos:column="28"/></name> <operator pos:line="141" pos:column="29">=<pos:position pos:line="141" pos:column="30"/></operator> <operator pos:line="141" pos:column="31">&amp;<pos:position pos:line="141" pos:column="36"/></operator><name pos:line="141" pos:column="32">mem_free<pos:position pos:line="141" pos:column="40"/></name></expr>;<pos:position pos:line="141" pos:column="41"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="142" pos:column="17">else <if pos:line="142" pos:column="22">if <condition pos:line="142" pos:column="25">(<expr><call><name pos:line="142" pos:column="26">strncasecmp<pos:position pos:line="142" pos:column="37"/></name> <argument_list pos:line="142" pos:column="38">(<argument><expr><name pos:line="142" pos:column="39">buffer<pos:position pos:line="142" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="47">"Buffers:"<pos:position pos:line="142" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="142" pos:column="59">8<pos:position pos:line="142" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="61"/></argument_list></call> <operator pos:line="142" pos:column="62">==<pos:position pos:line="142" pos:column="64"/></operator> <literal type="number" pos:line="142" pos:column="65">0<pos:position pos:line="142" pos:column="66"/></literal></expr>)<pos:position pos:line="142" pos:column="67"/></condition><then pos:line="142" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><name pos:line="143" pos:column="25">val<pos:position pos:line="143" pos:column="28"/></name> <operator pos:line="143" pos:column="29">=<pos:position pos:line="143" pos:column="30"/></operator> <operator pos:line="143" pos:column="31">&amp;<pos:position pos:line="143" pos:column="36"/></operator><name pos:line="143" pos:column="32">mem_buffered<pos:position pos:line="143" pos:column="44"/></name></expr>;<pos:position pos:line="143" pos:column="45"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="144" pos:column="17">else <if pos:line="144" pos:column="22">if <condition pos:line="144" pos:column="25">(<expr><call><name pos:line="144" pos:column="26">strncasecmp<pos:position pos:line="144" pos:column="37"/></name> <argument_list pos:line="144" pos:column="38">(<argument><expr><name pos:line="144" pos:column="39">buffer<pos:position pos:line="144" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="47">"Cached:"<pos:position pos:line="144" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="144" pos:column="58">7<pos:position pos:line="144" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="60"/></argument_list></call> <operator pos:line="144" pos:column="61">==<pos:position pos:line="144" pos:column="63"/></operator> <literal type="number" pos:line="144" pos:column="64">0<pos:position pos:line="144" pos:column="65"/></literal></expr>)<pos:position pos:line="144" pos:column="66"/></condition><then pos:line="144" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><name pos:line="145" pos:column="25">val<pos:position pos:line="145" pos:column="28"/></name> <operator pos:line="145" pos:column="29">=<pos:position pos:line="145" pos:column="30"/></operator> <operator pos:line="145" pos:column="31">&amp;<pos:position pos:line="145" pos:column="36"/></operator><name pos:line="145" pos:column="32">mem_cached<pos:position pos:line="145" pos:column="42"/></name></expr>;<pos:position pos:line="145" pos:column="43"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="146" pos:column="17">else <if pos:line="146" pos:column="22">if <condition pos:line="146" pos:column="25">(<expr><call><name pos:line="146" pos:column="26">strncasecmp<pos:position pos:line="146" pos:column="37"/></name> <argument_list pos:line="146" pos:column="38">(<argument><expr><name pos:line="146" pos:column="39">buffer<pos:position pos:line="146" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="47">"Slab:"<pos:position pos:line="146" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="146" pos:column="56">5<pos:position pos:line="146" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="58"/></argument_list></call> <operator pos:line="146" pos:column="59">==<pos:position pos:line="146" pos:column="61"/></operator> <literal type="number" pos:line="146" pos:column="62">0<pos:position pos:line="146" pos:column="63"/></literal></expr>)<pos:position pos:line="146" pos:column="64"/></condition><then pos:line="146" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><name pos:line="147" pos:column="25">val<pos:position pos:line="147" pos:column="28"/></name> <operator pos:line="147" pos:column="29">=<pos:position pos:line="147" pos:column="30"/></operator> <operator pos:line="147" pos:column="31">&amp;<pos:position pos:line="147" pos:column="36"/></operator><name pos:line="147" pos:column="32">mem_slab_total<pos:position pos:line="147" pos:column="46"/></name></expr>;<pos:position pos:line="147" pos:column="47"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="148" pos:column="17">else <if pos:line="148" pos:column="22">if <condition pos:line="148" pos:column="25">(<expr><call><name pos:line="148" pos:column="26">strncasecmp<pos:position pos:line="148" pos:column="37"/></name> <argument_list pos:line="148" pos:column="38">(<argument><expr><name pos:line="148" pos:column="39">buffer<pos:position pos:line="148" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="47">"SReclaimable:"<pos:position pos:line="148" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="148" pos:column="64">13<pos:position pos:line="148" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="67"/></argument_list></call> <operator pos:line="148" pos:column="68">==<pos:position pos:line="148" pos:column="70"/></operator> <literal type="number" pos:line="148" pos:column="71">0<pos:position pos:line="148" pos:column="72"/></literal></expr>)<pos:position pos:line="148" pos:column="73"/></condition><then pos:line="148" pos:column="73"> <block pos:line="148" pos:column="74">{
			<expr_stmt><expr><name pos:line="149" pos:column="25">val<pos:position pos:line="149" pos:column="28"/></name> <operator pos:line="149" pos:column="29">=<pos:position pos:line="149" pos:column="30"/></operator> <operator pos:line="149" pos:column="31">&amp;<pos:position pos:line="149" pos:column="36"/></operator><name pos:line="149" pos:column="32">mem_slab_reclaimable<pos:position pos:line="149" pos:column="52"/></name></expr>;<pos:position pos:line="149" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name pos:line="150" pos:column="25">detailed_slab_info<pos:position pos:line="150" pos:column="43"/></name> <operator pos:line="150" pos:column="44">=<pos:position pos:line="150" pos:column="45"/></operator> <literal type="number" pos:line="150" pos:column="46">1<pos:position pos:line="150" pos:column="47"/></literal></expr>;<pos:position pos:line="150" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="151" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="152" pos:column="17">else <if pos:line="152" pos:column="22">if <condition pos:line="152" pos:column="25">(<expr><call><name pos:line="152" pos:column="26">strncasecmp<pos:position pos:line="152" pos:column="37"/></name> <argument_list pos:line="152" pos:column="38">(<argument><expr><name pos:line="152" pos:column="39">buffer<pos:position pos:line="152" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="47">"SUnreclaim:"<pos:position pos:line="152" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="152" pos:column="62">11<pos:position pos:line="152" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="65"/></argument_list></call> <operator pos:line="152" pos:column="66">==<pos:position pos:line="152" pos:column="68"/></operator> <literal type="number" pos:line="152" pos:column="69">0<pos:position pos:line="152" pos:column="70"/></literal></expr>)<pos:position pos:line="152" pos:column="71"/></condition><then pos:line="152" pos:column="71"> <block pos:line="152" pos:column="72">{
			<expr_stmt><expr><name pos:line="153" pos:column="25">val<pos:position pos:line="153" pos:column="28"/></name> <operator pos:line="153" pos:column="29">=<pos:position pos:line="153" pos:column="30"/></operator> <operator pos:line="153" pos:column="31">&amp;<pos:position pos:line="153" pos:column="36"/></operator><name pos:line="153" pos:column="32">mem_slab_unreclaimable<pos:position pos:line="153" pos:column="54"/></name></expr>;<pos:position pos:line="153" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name pos:line="154" pos:column="25">detailed_slab_info<pos:position pos:line="154" pos:column="43"/></name> <operator pos:line="154" pos:column="44">=<pos:position pos:line="154" pos:column="45"/></operator> <literal type="number" pos:line="154" pos:column="46">1<pos:position pos:line="154" pos:column="47"/></literal></expr>;<pos:position pos:line="154" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="155" pos:column="18"/></block></then></if></elseif>
		<else pos:line="156" pos:column="17">else
			<block type="pseudo"><continue pos:line="157" pos:column="25">continue;<pos:position pos:line="157" pos:column="34"/></continue></block></else></if>

		<expr_stmt><expr><name pos:line="159" pos:column="17">numfields<pos:position pos:line="159" pos:column="26"/></name> <operator pos:line="159" pos:column="27">=<pos:position pos:line="159" pos:column="28"/></operator> <call><name pos:line="159" pos:column="29">strsplit<pos:position pos:line="159" pos:column="37"/></name> <argument_list pos:line="159" pos:column="38">(<argument><expr><name pos:line="159" pos:column="39">buffer<pos:position pos:line="159" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="47">fields<pos:position pos:line="159" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="159" pos:column="55">STATIC_ARRAY_SIZE<pos:position pos:line="159" pos:column="72"/></name> <argument_list pos:line="159" pos:column="73">(<argument><expr><name pos:line="159" pos:column="74">fields<pos:position pos:line="159" pos:column="80"/></name></expr></argument>)<pos:position pos:line="159" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="159" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="83"/></expr_stmt>
		<if pos:line="160" pos:column="17">if <condition pos:line="160" pos:column="20">(<expr><name pos:line="160" pos:column="21">numfields<pos:position pos:line="160" pos:column="30"/></name> <operator pos:line="160" pos:column="31">&lt;<pos:position pos:line="160" pos:column="35"/></operator> <literal type="number" pos:line="160" pos:column="33">2<pos:position pos:line="160" pos:column="34"/></literal></expr>)<pos:position pos:line="160" pos:column="35"/></condition><then pos:line="160" pos:column="35">
			<block type="pseudo"><continue pos:line="161" pos:column="25">continue;<pos:position pos:line="161" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><operator pos:line="163" pos:column="17">*<pos:position pos:line="163" pos:column="18"/></operator><name pos:line="163" pos:column="18">val<pos:position pos:line="163" pos:column="21"/></name> <operator pos:line="163" pos:column="22">=<pos:position pos:line="163" pos:column="23"/></operator> <literal type="number" pos:line="163" pos:column="24">1024.0<pos:position pos:line="163" pos:column="30"/></literal> <operator pos:line="163" pos:column="31">*<pos:position pos:line="163" pos:column="32"/></operator> <call><name pos:line="163" pos:column="33">atof<pos:position pos:line="163" pos:column="37"/></name> <argument_list pos:line="163" pos:column="38">(<argument><expr><name><name pos:line="163" pos:column="39">fields<pos:position pos:line="163" pos:column="45"/></name><index pos:line="163" pos:column="45">[<expr><literal type="number" pos:line="163" pos:column="46">1<pos:position pos:line="163" pos:column="47"/></literal></expr>]<pos:position pos:line="163" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="163" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="164" pos:column="10"/></block></while>

	<if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><call><name pos:line="166" pos:column="13">fclose<pos:position pos:line="166" pos:column="19"/></name> <argument_list pos:line="166" pos:column="20">(<argument><expr><name pos:line="166" pos:column="21">fh<pos:position pos:line="166" pos:column="23"/></name></expr></argument>)<pos:position pos:line="166" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="166" pos:column="25"/></condition><then pos:line="166" pos:column="25">
	<block pos:line="167" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="168" pos:column="17">char<pos:position pos:line="168" pos:column="21"/></name></type> <name><name pos:line="168" pos:column="22">errbuf<pos:position pos:line="168" pos:column="28"/></name><index pos:line="168" pos:column="28">[<expr><literal type="number" pos:line="168" pos:column="29">1024<pos:position pos:line="168" pos:column="33"/></literal></expr>]<pos:position pos:line="168" pos:column="34"/></index></name></decl>;<pos:position pos:line="168" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="169" pos:column="17">WARNING<pos:position pos:line="169" pos:column="24"/></name> <argument_list pos:line="169" pos:column="25">(<argument><expr><literal type="string" pos:line="169" pos:column="26">"memory: fclose: %s"<pos:position pos:line="169" pos:column="46"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="170" pos:column="33">sstrerror<pos:position pos:line="170" pos:column="42"/></name> <argument_list pos:line="170" pos:column="43">(<argument><expr><name pos:line="170" pos:column="44">errno<pos:position pos:line="170" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="51">errbuf<pos:position pos:line="170" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="170" pos:column="59">sizeof <argument_list pos:line="170" pos:column="66">(<argument><expr><name pos:line="170" pos:column="67">errbuf<pos:position pos:line="170" pos:column="73"/></name></expr></argument>)<pos:position pos:line="170" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="170" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="170" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="171" pos:column="10"/></block></then></if>

	<if pos:line="173" pos:column="9">if <condition pos:line="173" pos:column="12">(<expr><name pos:line="173" pos:column="13">mem_total<pos:position pos:line="173" pos:column="22"/></name> <operator pos:line="173" pos:column="23">&lt;<pos:position pos:line="173" pos:column="27"/></operator> <operator pos:line="173" pos:column="25">(<pos:position pos:line="173" pos:column="26"/></operator><name pos:line="173" pos:column="26">mem_free<pos:position pos:line="173" pos:column="34"/></name> <operator pos:line="173" pos:column="35">+<pos:position pos:line="173" pos:column="36"/></operator> <name pos:line="173" pos:column="37">mem_buffered<pos:position pos:line="173" pos:column="49"/></name> <operator pos:line="173" pos:column="50">+<pos:position pos:line="173" pos:column="51"/></operator> <name pos:line="173" pos:column="52">mem_cached<pos:position pos:line="173" pos:column="62"/></name> <operator pos:line="173" pos:column="63">+<pos:position pos:line="173" pos:column="64"/></operator> <name pos:line="173" pos:column="65">mem_slab_total<pos:position pos:line="173" pos:column="79"/></name><operator pos:line="173" pos:column="79">)<pos:position pos:line="173" pos:column="80"/></operator></expr>)<pos:position pos:line="173" pos:column="81"/></condition><then pos:line="173" pos:column="81">
		<block type="pseudo"><return pos:line="174" pos:column="17">return <expr><operator pos:line="174" pos:column="24">(<pos:position pos:line="174" pos:column="25"/></operator><operator pos:line="174" pos:column="25">-<pos:position pos:line="174" pos:column="26"/></operator><literal type="number" pos:line="174" pos:column="26">1<pos:position pos:line="174" pos:column="27"/></literal><operator pos:line="174" pos:column="27">)<pos:position pos:line="174" pos:column="28"/></operator></expr>;<pos:position pos:line="174" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="176" pos:column="9">mem_used<pos:position pos:line="176" pos:column="17"/></name> <operator pos:line="176" pos:column="18">=<pos:position pos:line="176" pos:column="19"/></operator> <name pos:line="176" pos:column="20">mem_total<pos:position pos:line="176" pos:column="29"/></name> <operator pos:line="176" pos:column="30">-<pos:position pos:line="176" pos:column="31"/></operator> <operator pos:line="176" pos:column="32">(<pos:position pos:line="176" pos:column="33"/></operator><name pos:line="176" pos:column="33">mem_free<pos:position pos:line="176" pos:column="41"/></name> <operator pos:line="176" pos:column="42">+<pos:position pos:line="176" pos:column="43"/></operator> <name pos:line="176" pos:column="44">mem_buffered<pos:position pos:line="176" pos:column="56"/></name> <operator pos:line="176" pos:column="57">+<pos:position pos:line="176" pos:column="58"/></operator> <name pos:line="176" pos:column="59">mem_cached<pos:position pos:line="176" pos:column="69"/></name> <operator pos:line="176" pos:column="70">+<pos:position pos:line="176" pos:column="71"/></operator> <name pos:line="176" pos:column="72">mem_slab_total<pos:position pos:line="176" pos:column="86"/></name><operator pos:line="176" pos:column="86">)<pos:position pos:line="176" pos:column="87"/></operator></expr>;<pos:position pos:line="176" pos:column="88"/></expr_stmt>

	<comment type="block" pos:line="178" pos:column="9">/* SReclaimable and SUnreclaim were introduced in kernel 2.6.19
	 * They sum up to the value of Slab, which is available on older &amp; newer
	 * kernels. So SReclaimable/SUnreclaim are submitted if available, and Slab
	 * if not. */</comment>
	<if pos:line="182" pos:column="9">if <condition pos:line="182" pos:column="12">(<expr><name pos:line="182" pos:column="13">detailed_slab_info<pos:position pos:line="182" pos:column="31"/></name></expr>)<pos:position pos:line="182" pos:column="32"/></condition><then pos:line="182" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="183" pos:column="17">MEMORY_SUBMIT<pos:position pos:line="183" pos:column="30"/></name> <argument_list pos:line="183" pos:column="31">(<argument><expr><literal type="string" pos:line="183" pos:column="32">"used"<pos:position pos:line="183" pos:column="38"/></literal></expr></argument>,        <argument><expr><name pos:line="183" pos:column="47">mem_used<pos:position pos:line="183" pos:column="55"/></name></expr></argument>,
		               <argument><expr><literal type="string" pos:line="184" pos:column="32">"buffered"<pos:position pos:line="184" pos:column="42"/></literal></expr></argument>,    <argument><expr><name pos:line="184" pos:column="47">mem_buffered<pos:position pos:line="184" pos:column="59"/></name></expr></argument>,
		               <argument><expr><literal type="string" pos:line="185" pos:column="32">"cached"<pos:position pos:line="185" pos:column="40"/></literal></expr></argument>,      <argument><expr><name pos:line="185" pos:column="47">mem_cached<pos:position pos:line="185" pos:column="57"/></name></expr></argument>,
		               <argument><expr><literal type="string" pos:line="186" pos:column="32">"free"<pos:position pos:line="186" pos:column="38"/></literal></expr></argument>,        <argument><expr><name pos:line="186" pos:column="47">mem_free<pos:position pos:line="186" pos:column="55"/></name></expr></argument>,
		               <argument><expr><literal type="string" pos:line="187" pos:column="32">"slab_unrecl"<pos:position pos:line="187" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="187" pos:column="47">mem_slab_unreclaimable<pos:position pos:line="187" pos:column="69"/></name></expr></argument>,
		               <argument><expr><literal type="string" pos:line="188" pos:column="32">"slab_recl"<pos:position pos:line="188" pos:column="43"/></literal></expr></argument>,   <argument><expr><name pos:line="188" pos:column="47">mem_slab_reclaimable<pos:position pos:line="188" pos:column="67"/></name></expr></argument>)<pos:position pos:line="188" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="69"/></expr_stmt></block></then>
	<else pos:line="189" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="190" pos:column="17">MEMORY_SUBMIT<pos:position pos:line="190" pos:column="30"/></name> <argument_list pos:line="190" pos:column="31">(<argument><expr><literal type="string" pos:line="190" pos:column="32">"used"<pos:position pos:line="190" pos:column="38"/></literal></expr></argument>,     <argument><expr><name pos:line="190" pos:column="44">mem_used<pos:position pos:line="190" pos:column="52"/></name></expr></argument>,
		               <argument><expr><literal type="string" pos:line="191" pos:column="32">"buffered"<pos:position pos:line="191" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="191" pos:column="44">mem_buffered<pos:position pos:line="191" pos:column="56"/></name></expr></argument>,
		               <argument><expr><literal type="string" pos:line="192" pos:column="32">"cached"<pos:position pos:line="192" pos:column="40"/></literal></expr></argument>,   <argument><expr><name pos:line="192" pos:column="44">mem_cached<pos:position pos:line="192" pos:column="54"/></name></expr></argument>,
		               <argument><expr><literal type="string" pos:line="193" pos:column="32">"free"<pos:position pos:line="193" pos:column="38"/></literal></expr></argument>,     <argument><expr><name pos:line="193" pos:column="44">mem_free<pos:position pos:line="193" pos:column="52"/></name></expr></argument>,
		               <argument><expr><literal type="string" pos:line="194" pos:column="32">"slab"<pos:position pos:line="194" pos:column="38"/></literal></expr></argument>,     <argument><expr><name pos:line="194" pos:column="44">mem_slab_total<pos:position pos:line="194" pos:column="58"/></name></expr></argument>)<pos:position pos:line="194" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="60"/></expr_stmt></block></else></if>
<comment type="block" pos:line="195" pos:column="1">/* #endif KERNEL_LINUX */</comment>

<cpp:elif pos:line="197" pos:column="1">#<cpp:directive pos:line="197" pos:column="2">elif<pos:position pos:line="197" pos:column="6"/></cpp:directive> <expr><name pos:line="197" pos:column="7">HAVE_LIBKSTAT<pos:position pos:line="197" pos:column="20"/></name></expr></cpp:elif>
	<comment type="block" pos:line="198" pos:column="9">/* Most of the additions here were taken as-is from the k9toolkit from
	 * Brendan Gregg and are subject to change I guess */</comment>
	<decl_stmt><decl><type><name pos:line="200" pos:column="9">long<pos:position pos:line="200" pos:column="13"/></name> <name pos:line="200" pos:column="14">long<pos:position pos:line="200" pos:column="18"/></name></type> <name pos:line="200" pos:column="19">mem_used<pos:position pos:line="200" pos:column="27"/></name></decl>;<pos:position pos:line="200" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="201" pos:column="9">long<pos:position pos:line="201" pos:column="13"/></name> <name pos:line="201" pos:column="14">long<pos:position pos:line="201" pos:column="18"/></name></type> <name pos:line="201" pos:column="19">mem_free<pos:position pos:line="201" pos:column="27"/></name></decl>;<pos:position pos:line="201" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="202" pos:column="9">long<pos:position pos:line="202" pos:column="13"/></name> <name pos:line="202" pos:column="14">long<pos:position pos:line="202" pos:column="18"/></name></type> <name pos:line="202" pos:column="19">mem_lock<pos:position pos:line="202" pos:column="27"/></name></decl>;<pos:position pos:line="202" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="203" pos:column="9">long<pos:position pos:line="203" pos:column="13"/></name> <name pos:line="203" pos:column="14">long<pos:position pos:line="203" pos:column="18"/></name></type> <name pos:line="203" pos:column="19">mem_kern<pos:position pos:line="203" pos:column="27"/></name></decl>;<pos:position pos:line="203" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="204" pos:column="9">long<pos:position pos:line="204" pos:column="13"/></name> <name pos:line="204" pos:column="14">long<pos:position pos:line="204" pos:column="18"/></name></type> <name pos:line="204" pos:column="19">mem_unus<pos:position pos:line="204" pos:column="27"/></name></decl>;<pos:position pos:line="204" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="205" pos:column="9">long<pos:position pos:line="205" pos:column="13"/></name> <name pos:line="205" pos:column="14">long<pos:position pos:line="205" pos:column="18"/></name></type> <name pos:line="205" pos:column="19">arcsize<pos:position pos:line="205" pos:column="26"/></name></decl>;<pos:position pos:line="205" pos:column="27"/></decl_stmt>


	<decl_stmt><decl><type><name pos:line="208" pos:column="9">long<pos:position pos:line="208" pos:column="13"/></name> <name pos:line="208" pos:column="14">long<pos:position pos:line="208" pos:column="18"/></name></type> <name pos:line="208" pos:column="19">pp_kernel<pos:position pos:line="208" pos:column="28"/></name></decl>;<pos:position pos:line="208" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="209" pos:column="9">long<pos:position pos:line="209" pos:column="13"/></name> <name pos:line="209" pos:column="14">long<pos:position pos:line="209" pos:column="18"/></name></type> <name pos:line="209" pos:column="19">physmem<pos:position pos:line="209" pos:column="26"/></name></decl>;<pos:position pos:line="209" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="210" pos:column="9">long<pos:position pos:line="210" pos:column="13"/></name> <name pos:line="210" pos:column="14">long<pos:position pos:line="210" pos:column="18"/></name></type> <name pos:line="210" pos:column="19">availrmem<pos:position pos:line="210" pos:column="28"/></name></decl>;<pos:position pos:line="210" pos:column="29"/></decl_stmt>

	<if pos:line="212" pos:column="9">if <condition pos:line="212" pos:column="12">(<expr><name pos:line="212" pos:column="13">ksp<pos:position pos:line="212" pos:column="16"/></name> <operator pos:line="212" pos:column="17">==<pos:position pos:line="212" pos:column="19"/></operator> <name pos:line="212" pos:column="20">NULL<pos:position pos:line="212" pos:column="24"/></name></expr>)<pos:position pos:line="212" pos:column="25"/></condition><then pos:line="212" pos:column="25">
		<block type="pseudo"><return pos:line="213" pos:column="17">return <expr><operator pos:line="213" pos:column="24">(<pos:position pos:line="213" pos:column="25"/></operator><operator pos:line="213" pos:column="25">-<pos:position pos:line="213" pos:column="26"/></operator><literal type="number" pos:line="213" pos:column="26">1<pos:position pos:line="213" pos:column="27"/></literal><operator pos:line="213" pos:column="27">)<pos:position pos:line="213" pos:column="28"/></operator></expr>;<pos:position pos:line="213" pos:column="29"/></return></block></then></if>
	<if pos:line="214" pos:column="9">if <condition pos:line="214" pos:column="12">(<expr><name pos:line="214" pos:column="13">ksz<pos:position pos:line="214" pos:column="16"/></name> <operator pos:line="214" pos:column="17">==<pos:position pos:line="214" pos:column="19"/></operator> <name pos:line="214" pos:column="20">NULL<pos:position pos:line="214" pos:column="24"/></name></expr>)<pos:position pos:line="214" pos:column="25"/></condition><then pos:line="214" pos:column="25">
		<block type="pseudo"><return pos:line="215" pos:column="17">return <expr><operator pos:line="215" pos:column="24">(<pos:position pos:line="215" pos:column="25"/></operator><operator pos:line="215" pos:column="25">-<pos:position pos:line="215" pos:column="26"/></operator><literal type="number" pos:line="215" pos:column="26">1<pos:position pos:line="215" pos:column="27"/></literal><operator pos:line="215" pos:column="27">)<pos:position pos:line="215" pos:column="28"/></operator></expr>;<pos:position pos:line="215" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="217" pos:column="9">mem_used<pos:position pos:line="217" pos:column="17"/></name> <operator pos:line="217" pos:column="18">=<pos:position pos:line="217" pos:column="19"/></operator> <call><name pos:line="217" pos:column="20">get_kstat_value<pos:position pos:line="217" pos:column="35"/></name> <argument_list pos:line="217" pos:column="36">(<argument><expr><name pos:line="217" pos:column="37">ksp<pos:position pos:line="217" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="217" pos:column="42">"pagestotal"<pos:position pos:line="217" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name pos:line="218" pos:column="9">mem_free<pos:position pos:line="218" pos:column="17"/></name> <operator pos:line="218" pos:column="18">=<pos:position pos:line="218" pos:column="19"/></operator> <call><name pos:line="218" pos:column="20">get_kstat_value<pos:position pos:line="218" pos:column="35"/></name> <argument_list pos:line="218" pos:column="36">(<argument><expr><name pos:line="218" pos:column="37">ksp<pos:position pos:line="218" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="218" pos:column="42">"pagesfree"<pos:position pos:line="218" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="218" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name pos:line="219" pos:column="9">mem_lock<pos:position pos:line="219" pos:column="17"/></name> <operator pos:line="219" pos:column="18">=<pos:position pos:line="219" pos:column="19"/></operator> <call><name pos:line="219" pos:column="20">get_kstat_value<pos:position pos:line="219" pos:column="35"/></name> <argument_list pos:line="219" pos:column="36">(<argument><expr><name pos:line="219" pos:column="37">ksp<pos:position pos:line="219" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="219" pos:column="42">"pageslocked"<pos:position pos:line="219" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="219" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name pos:line="220" pos:column="9">arcsize<pos:position pos:line="220" pos:column="16"/></name> <operator pos:line="220" pos:column="17">=<pos:position pos:line="220" pos:column="18"/></operator> <call><name pos:line="220" pos:column="19">get_kstat_value<pos:position pos:line="220" pos:column="34"/></name> <argument_list pos:line="220" pos:column="35">(<argument><expr><name pos:line="220" pos:column="36">ksz<pos:position pos:line="220" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="220" pos:column="41">"size"<pos:position pos:line="220" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="220" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name pos:line="221" pos:column="9">pp_kernel<pos:position pos:line="221" pos:column="18"/></name> <operator pos:line="221" pos:column="19">=<pos:position pos:line="221" pos:column="20"/></operator> <call><name pos:line="221" pos:column="21">get_kstat_value<pos:position pos:line="221" pos:column="36"/></name> <argument_list pos:line="221" pos:column="37">(<argument><expr><name pos:line="221" pos:column="38">ksp<pos:position pos:line="221" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="221" pos:column="43">"pp_kernel"<pos:position pos:line="221" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="221" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name pos:line="222" pos:column="9">physmem<pos:position pos:line="222" pos:column="16"/></name> <operator pos:line="222" pos:column="17">=<pos:position pos:line="222" pos:column="18"/></operator> <call><name pos:line="222" pos:column="19">get_kstat_value<pos:position pos:line="222" pos:column="34"/></name> <argument_list pos:line="222" pos:column="35">(<argument><expr><name pos:line="222" pos:column="36">ksp<pos:position pos:line="222" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="41">"physmem"<pos:position pos:line="222" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="222" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name pos:line="223" pos:column="9">availrmem<pos:position pos:line="223" pos:column="18"/></name> <operator pos:line="223" pos:column="19">=<pos:position pos:line="223" pos:column="20"/></operator> <call><name pos:line="223" pos:column="21">get_kstat_value<pos:position pos:line="223" pos:column="36"/></name> <argument_list pos:line="223" pos:column="37">(<argument><expr><name pos:line="223" pos:column="38">ksp<pos:position pos:line="223" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="223" pos:column="43">"availrmem"<pos:position pos:line="223" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="223" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="56"/></expr_stmt>

	<expr_stmt><expr><name pos:line="225" pos:column="9">mem_kern<pos:position pos:line="225" pos:column="17"/></name> <operator pos:line="225" pos:column="18">=<pos:position pos:line="225" pos:column="19"/></operator> <literal type="number" pos:line="225" pos:column="20">0<pos:position pos:line="225" pos:column="21"/></literal></expr>;<pos:position pos:line="225" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="226" pos:column="9">mem_unus<pos:position pos:line="226" pos:column="17"/></name> <operator pos:line="226" pos:column="18">=<pos:position pos:line="226" pos:column="19"/></operator> <literal type="number" pos:line="226" pos:column="20">0<pos:position pos:line="226" pos:column="21"/></literal></expr>;<pos:position pos:line="226" pos:column="22"/></expr_stmt>

	<if pos:line="228" pos:column="9">if <condition pos:line="228" pos:column="12">(<expr><operator pos:line="228" pos:column="13">(<pos:position pos:line="228" pos:column="14"/></operator><name pos:line="228" pos:column="14">mem_used<pos:position pos:line="228" pos:column="22"/></name> <operator pos:line="228" pos:column="23">&lt;<pos:position pos:line="228" pos:column="27"/></operator> <literal type="number" pos:line="228" pos:column="25">0LL<pos:position pos:line="228" pos:column="28"/></literal><operator pos:line="228" pos:column="28">)<pos:position pos:line="228" pos:column="29"/></operator> <operator pos:line="228" pos:column="30">||<pos:position pos:line="228" pos:column="32"/></operator> <operator pos:line="228" pos:column="33">(<pos:position pos:line="228" pos:column="34"/></operator><name pos:line="228" pos:column="34">mem_free<pos:position pos:line="228" pos:column="42"/></name> <operator pos:line="228" pos:column="43">&lt;<pos:position pos:line="228" pos:column="47"/></operator> <literal type="number" pos:line="228" pos:column="45">0LL<pos:position pos:line="228" pos:column="48"/></literal><operator pos:line="228" pos:column="48">)<pos:position pos:line="228" pos:column="49"/></operator> <operator pos:line="228" pos:column="50">||<pos:position pos:line="228" pos:column="52"/></operator> <operator pos:line="228" pos:column="53">(<pos:position pos:line="228" pos:column="54"/></operator><name pos:line="228" pos:column="54">mem_lock<pos:position pos:line="228" pos:column="62"/></name> <operator pos:line="228" pos:column="63">&lt;<pos:position pos:line="228" pos:column="67"/></operator> <literal type="number" pos:line="228" pos:column="65">0LL<pos:position pos:line="228" pos:column="68"/></literal><operator pos:line="228" pos:column="68">)<pos:position pos:line="228" pos:column="69"/></operator></expr>)<pos:position pos:line="228" pos:column="70"/></condition><then pos:line="228" pos:column="70">
	<block pos:line="229" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="230" pos:column="17">WARNING<pos:position pos:line="230" pos:column="24"/></name> <argument_list pos:line="230" pos:column="25">(<argument><expr><literal type="string" pos:line="230" pos:column="26">"memory plugin: one of used, free or locked is negative."<pos:position pos:line="230" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="85"/></expr_stmt>
		<return pos:line="231" pos:column="17">return <expr><operator pos:line="231" pos:column="24">(<pos:position pos:line="231" pos:column="25"/></operator><operator pos:line="231" pos:column="25">-<pos:position pos:line="231" pos:column="26"/></operator><literal type="number" pos:line="231" pos:column="26">1<pos:position pos:line="231" pos:column="27"/></literal><operator pos:line="231" pos:column="27">)<pos:position pos:line="231" pos:column="28"/></operator></expr>;<pos:position pos:line="231" pos:column="29"/></return>
	}<pos:position pos:line="232" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="234" pos:column="9">mem_unus<pos:position pos:line="234" pos:column="17"/></name> <operator pos:line="234" pos:column="18">=<pos:position pos:line="234" pos:column="19"/></operator> <name pos:line="234" pos:column="20">physmem<pos:position pos:line="234" pos:column="27"/></name> <operator pos:line="234" pos:column="28">-<pos:position pos:line="234" pos:column="29"/></operator> <name pos:line="234" pos:column="30">mem_used<pos:position pos:line="234" pos:column="38"/></name></expr>;<pos:position pos:line="234" pos:column="39"/></expr_stmt>

	<if pos:line="236" pos:column="9">if <condition pos:line="236" pos:column="12">(<expr><name pos:line="236" pos:column="13">mem_used<pos:position pos:line="236" pos:column="21"/></name> <operator pos:line="236" pos:column="22">&lt;<pos:position pos:line="236" pos:column="26"/></operator> <operator pos:line="236" pos:column="24">(<pos:position pos:line="236" pos:column="25"/></operator><name pos:line="236" pos:column="25">mem_free<pos:position pos:line="236" pos:column="33"/></name> <operator pos:line="236" pos:column="34">+<pos:position pos:line="236" pos:column="35"/></operator> <name pos:line="236" pos:column="36">mem_lock<pos:position pos:line="236" pos:column="44"/></name><operator pos:line="236" pos:column="44">)<pos:position pos:line="236" pos:column="45"/></operator></expr>)<pos:position pos:line="236" pos:column="46"/></condition><then pos:line="236" pos:column="46">
	<block pos:line="237" pos:column="9">{
		<comment type="block" pos:line="238" pos:column="17">/* source: http://wesunsolve.net/bugid/id/4909199
		 * this seems to happen when swap space is small, e.g. 2G on a 32G system
		 * we will make some assumptions here
		 * educated solaris internals help welcome here */</comment>
		<expr_stmt><expr><call><name pos:line="242" pos:column="17">DEBUG<pos:position pos:line="242" pos:column="22"/></name> <argument_list pos:line="242" pos:column="23">(<argument><expr><literal type="string" pos:line="242" pos:column="24">"memory plugin: pages total is smaller than \"free\" "<pos:position pos:line="242" pos:column="78"/></literal>
				<literal type="string" pos:line="243" pos:column="33">"+ \"locked\". This is probably due to small "<pos:position pos:line="243" pos:column="79"/></literal>
				<literal type="string" pos:line="244" pos:column="33">"swap space"<pos:position pos:line="244" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="244" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="245" pos:column="17">mem_free<pos:position pos:line="245" pos:column="25"/></name> <operator pos:line="245" pos:column="26">=<pos:position pos:line="245" pos:column="27"/></operator> <name pos:line="245" pos:column="28">availrmem<pos:position pos:line="245" pos:column="37"/></name></expr>;<pos:position pos:line="245" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="246" pos:column="17">mem_used<pos:position pos:line="246" pos:column="25"/></name> <operator pos:line="246" pos:column="26">=<pos:position pos:line="246" pos:column="27"/></operator> <literal type="number" pos:line="246" pos:column="28">0<pos:position pos:line="246" pos:column="29"/></literal></expr>;<pos:position pos:line="246" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="247" pos:column="10"/></block></then>
	<else pos:line="248" pos:column="9">else
	<block pos:line="249" pos:column="9">{
		<expr_stmt><expr><name pos:line="250" pos:column="17">mem_used<pos:position pos:line="250" pos:column="25"/></name> <operator pos:line="250" pos:column="26">-=<pos:position pos:line="250" pos:column="28"/></operator> <name pos:line="250" pos:column="29">mem_free<pos:position pos:line="250" pos:column="37"/></name> <operator pos:line="250" pos:column="38">+<pos:position pos:line="250" pos:column="39"/></operator> <name pos:line="250" pos:column="40">mem_lock<pos:position pos:line="250" pos:column="48"/></name></expr>;<pos:position pos:line="250" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="251" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="253" pos:column="9">/* mem_kern is accounted for in mem_lock */</comment>
	<if pos:line="254" pos:column="9">if <condition pos:line="254" pos:column="12">(<expr><name pos:line="254" pos:column="13">pp_kernel<pos:position pos:line="254" pos:column="22"/></name> <operator pos:line="254" pos:column="23">&lt;<pos:position pos:line="254" pos:column="27"/></operator> <name pos:line="254" pos:column="25">mem_lock<pos:position pos:line="254" pos:column="33"/></name></expr>)<pos:position pos:line="254" pos:column="34"/></condition><then pos:line="254" pos:column="34">
	<block pos:line="255" pos:column="9">{
		<expr_stmt><expr><name pos:line="256" pos:column="17">mem_kern<pos:position pos:line="256" pos:column="25"/></name> <operator pos:line="256" pos:column="26">=<pos:position pos:line="256" pos:column="27"/></operator> <name pos:line="256" pos:column="28">pp_kernel<pos:position pos:line="256" pos:column="37"/></name></expr>;<pos:position pos:line="256" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="257" pos:column="17">mem_lock<pos:position pos:line="257" pos:column="25"/></name> <operator pos:line="257" pos:column="26">-=<pos:position pos:line="257" pos:column="28"/></operator> <name pos:line="257" pos:column="29">pp_kernel<pos:position pos:line="257" pos:column="38"/></name></expr>;<pos:position pos:line="257" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="258" pos:column="10"/></block></then>
	<else pos:line="259" pos:column="9">else
	<block pos:line="260" pos:column="9">{
		<expr_stmt><expr><name pos:line="261" pos:column="17">mem_kern<pos:position pos:line="261" pos:column="25"/></name> <operator pos:line="261" pos:column="26">=<pos:position pos:line="261" pos:column="27"/></operator> <name pos:line="261" pos:column="28">mem_lock<pos:position pos:line="261" pos:column="36"/></name></expr>;<pos:position pos:line="261" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="262" pos:column="17">mem_lock<pos:position pos:line="262" pos:column="25"/></name> <operator pos:line="262" pos:column="26">=<pos:position pos:line="262" pos:column="27"/></operator> <literal type="number" pos:line="262" pos:column="28">0<pos:position pos:line="262" pos:column="29"/></literal></expr>;<pos:position pos:line="262" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="263" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="265" pos:column="9">mem_used<pos:position pos:line="265" pos:column="17"/></name> <operator pos:line="265" pos:column="18">*=<pos:position pos:line="265" pos:column="20"/></operator> <name pos:line="265" pos:column="21">pagesize<pos:position pos:line="265" pos:column="29"/></name></expr>;<pos:position pos:line="265" pos:column="30"/></expr_stmt> <comment type="block" pos:line="265" pos:column="31">/* If this overflows you have some serious */</comment>
	<expr_stmt><expr><name pos:line="266" pos:column="9">mem_free<pos:position pos:line="266" pos:column="17"/></name> <operator pos:line="266" pos:column="18">*=<pos:position pos:line="266" pos:column="20"/></operator> <name pos:line="266" pos:column="21">pagesize<pos:position pos:line="266" pos:column="29"/></name></expr>;<pos:position pos:line="266" pos:column="30"/></expr_stmt> <comment type="block" pos:line="266" pos:column="31">/* memory.. Why not call me up and give me */</comment>
	<expr_stmt><expr><name pos:line="267" pos:column="9">mem_lock<pos:position pos:line="267" pos:column="17"/></name> <operator pos:line="267" pos:column="18">*=<pos:position pos:line="267" pos:column="20"/></operator> <name pos:line="267" pos:column="21">pagesize<pos:position pos:line="267" pos:column="29"/></name></expr>;<pos:position pos:line="267" pos:column="30"/></expr_stmt> <comment type="block" pos:line="267" pos:column="31">/* some? ;) */</comment>
	<expr_stmt><expr><name pos:line="268" pos:column="9">mem_kern<pos:position pos:line="268" pos:column="17"/></name> <operator pos:line="268" pos:column="18">*=<pos:position pos:line="268" pos:column="20"/></operator> <name pos:line="268" pos:column="21">pagesize<pos:position pos:line="268" pos:column="29"/></name></expr>;<pos:position pos:line="268" pos:column="30"/></expr_stmt> <comment type="block" pos:line="268" pos:column="31">/* it's 2011 RAM is cheap */</comment>
	<expr_stmt><expr><name pos:line="269" pos:column="9">mem_unus<pos:position pos:line="269" pos:column="17"/></name> <operator pos:line="269" pos:column="18">*=<pos:position pos:line="269" pos:column="20"/></operator> <name pos:line="269" pos:column="21">pagesize<pos:position pos:line="269" pos:column="29"/></name></expr>;<pos:position pos:line="269" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="270" pos:column="9">mem_kern<pos:position pos:line="270" pos:column="17"/></name> <operator pos:line="270" pos:column="18">-=<pos:position pos:line="270" pos:column="20"/></operator> <name pos:line="270" pos:column="21">arcsize<pos:position pos:line="270" pos:column="28"/></name></expr>;<pos:position pos:line="270" pos:column="29"/></expr_stmt>


	<expr_stmt><expr><call><name pos:line="273" pos:column="9">MEMORY_SUBMIT<pos:position pos:line="273" pos:column="22"/></name> <argument_list pos:line="273" pos:column="23">(<argument><expr><literal type="string" pos:line="273" pos:column="24">"used"<pos:position pos:line="273" pos:column="30"/></literal></expr></argument>,     <argument><expr><operator pos:line="273" pos:column="36">(<pos:position pos:line="273" pos:column="37"/></operator><name pos:line="273" pos:column="37">gauge_t<pos:position pos:line="273" pos:column="44"/></name><operator pos:line="273" pos:column="44">)<pos:position pos:line="273" pos:column="45"/></operator> <name pos:line="273" pos:column="46">mem_used<pos:position pos:line="273" pos:column="54"/></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="274" pos:column="24">"free"<pos:position pos:line="274" pos:column="30"/></literal></expr></argument>,     <argument><expr><operator pos:line="274" pos:column="36">(<pos:position pos:line="274" pos:column="37"/></operator><name pos:line="274" pos:column="37">gauge_t<pos:position pos:line="274" pos:column="44"/></name><operator pos:line="274" pos:column="44">)<pos:position pos:line="274" pos:column="45"/></operator> <name pos:line="274" pos:column="46">mem_free<pos:position pos:line="274" pos:column="54"/></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="275" pos:column="24">"locked"<pos:position pos:line="275" pos:column="32"/></literal></expr></argument>,   <argument><expr><operator pos:line="275" pos:column="36">(<pos:position pos:line="275" pos:column="37"/></operator><name pos:line="275" pos:column="37">gauge_t<pos:position pos:line="275" pos:column="44"/></name><operator pos:line="275" pos:column="44">)<pos:position pos:line="275" pos:column="45"/></operator> <name pos:line="275" pos:column="46">mem_lock<pos:position pos:line="275" pos:column="54"/></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="276" pos:column="24">"kernel"<pos:position pos:line="276" pos:column="32"/></literal></expr></argument>,   <argument><expr><operator pos:line="276" pos:column="36">(<pos:position pos:line="276" pos:column="37"/></operator><name pos:line="276" pos:column="37">gauge_t<pos:position pos:line="276" pos:column="44"/></name><operator pos:line="276" pos:column="44">)<pos:position pos:line="276" pos:column="45"/></operator> <name pos:line="276" pos:column="46">mem_kern<pos:position pos:line="276" pos:column="54"/></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="277" pos:column="24">"arc"<pos:position pos:line="277" pos:column="29"/></literal></expr></argument>,      <argument><expr><operator pos:line="277" pos:column="36">(<pos:position pos:line="277" pos:column="37"/></operator><name pos:line="277" pos:column="37">gauge_t<pos:position pos:line="277" pos:column="44"/></name><operator pos:line="277" pos:column="44">)<pos:position pos:line="277" pos:column="45"/></operator> <name pos:line="277" pos:column="46">arcsize<pos:position pos:line="277" pos:column="53"/></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="278" pos:column="24">"unusable"<pos:position pos:line="278" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="278" pos:column="36">(<pos:position pos:line="278" pos:column="37"/></operator><name pos:line="278" pos:column="37">gauge_t<pos:position pos:line="278" pos:column="44"/></name><operator pos:line="278" pos:column="44">)<pos:position pos:line="278" pos:column="45"/></operator> <name pos:line="278" pos:column="46">mem_unus<pos:position pos:line="278" pos:column="54"/></name></expr></argument>)<pos:position pos:line="278" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="56"/></expr_stmt>
<comment type="block" pos:line="279" pos:column="1">/* #endif HAVE_LIBKSTAT */</comment>

<cpp:elif pos:line="281" pos:column="1">#<cpp:directive pos:line="281" pos:column="2">elif<pos:position pos:line="281" pos:column="6"/></cpp:directive> <expr><name pos:line="281" pos:column="7">HAVE_SYSCTL<pos:position pos:line="281" pos:column="18"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="282" pos:column="9">int<pos:position pos:line="282" pos:column="12"/></name></type> <name><name pos:line="282" pos:column="13">mib<pos:position pos:line="282" pos:column="16"/></name><index pos:line="282" pos:column="16">[]<pos:position pos:line="282" pos:column="18"/></index></name> <init pos:line="282" pos:column="19">= <expr><block pos:line="282" pos:column="21">{<expr><name pos:line="282" pos:column="22">CTL_VM<pos:position pos:line="282" pos:column="28"/></name></expr>, <expr><name pos:line="282" pos:column="30">VM_METER<pos:position pos:line="282" pos:column="38"/></name></expr>}<pos:position pos:line="282" pos:column="39"/></block></expr></init></decl>;<pos:position pos:line="282" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="283" pos:column="9">struct<pos:position pos:line="283" pos:column="15"/></name> <name pos:line="283" pos:column="16">vmtotal<pos:position pos:line="283" pos:column="23"/></name></name></type> <name pos:line="283" pos:column="24">vmtotal<pos:position pos:line="283" pos:column="31"/></name> <init pos:line="283" pos:column="32">= <expr><block pos:line="283" pos:column="34">{ <expr><literal type="number" pos:line="283" pos:column="36">0<pos:position pos:line="283" pos:column="37"/></literal></expr> }<pos:position pos:line="283" pos:column="39"/></block></expr></init></decl>;<pos:position pos:line="283" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="284" pos:column="9">gauge_t<pos:position pos:line="284" pos:column="16"/></name></type> <name pos:line="284" pos:column="17">mem_active<pos:position pos:line="284" pos:column="27"/></name></decl>;<pos:position pos:line="284" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="285" pos:column="9">gauge_t<pos:position pos:line="285" pos:column="16"/></name></type> <name pos:line="285" pos:column="17">mem_inactive<pos:position pos:line="285" pos:column="29"/></name></decl>;<pos:position pos:line="285" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="286" pos:column="9">gauge_t<pos:position pos:line="286" pos:column="16"/></name></type> <name pos:line="286" pos:column="17">mem_free<pos:position pos:line="286" pos:column="25"/></name></decl>;<pos:position pos:line="286" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="287" pos:column="9">size_t<pos:position pos:line="287" pos:column="15"/></name></type> <name pos:line="287" pos:column="16">size<pos:position pos:line="287" pos:column="20"/></name></decl>;<pos:position pos:line="287" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><name pos:line="289" pos:column="9">size<pos:position pos:line="289" pos:column="13"/></name> <operator pos:line="289" pos:column="14">=<pos:position pos:line="289" pos:column="15"/></operator> <sizeof pos:line="289" pos:column="16">sizeof <argument_list pos:line="289" pos:column="23">(<argument><expr><name pos:line="289" pos:column="24">vmtotal<pos:position pos:line="289" pos:column="31"/></name></expr></argument>)<pos:position pos:line="289" pos:column="32"/></argument_list></sizeof></expr>;<pos:position pos:line="289" pos:column="33"/></expr_stmt>

	<if pos:line="291" pos:column="9">if <condition pos:line="291" pos:column="12">(<expr><call><name pos:line="291" pos:column="13">sysctl<pos:position pos:line="291" pos:column="19"/></name> <argument_list pos:line="291" pos:column="20">(<argument><expr><name pos:line="291" pos:column="21">mib<pos:position pos:line="291" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="291" pos:column="26">2<pos:position pos:line="291" pos:column="27"/></literal></expr></argument>, <argument><expr><operator pos:line="291" pos:column="29">&amp;<pos:position pos:line="291" pos:column="34"/></operator><name pos:line="291" pos:column="30">vmtotal<pos:position pos:line="291" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="291" pos:column="39">&amp;<pos:position pos:line="291" pos:column="44"/></operator><name pos:line="291" pos:column="40">size<pos:position pos:line="291" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="291" pos:column="46">NULL<pos:position pos:line="291" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="291" pos:column="52">0<pos:position pos:line="291" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="291" pos:column="54"/></argument_list></call> <operator pos:line="291" pos:column="55">&lt;<pos:position pos:line="291" pos:column="59"/></operator> <literal type="number" pos:line="291" pos:column="57">0<pos:position pos:line="291" pos:column="58"/></literal></expr>)<pos:position pos:line="291" pos:column="59"/></condition><then pos:line="291" pos:column="59"> <block pos:line="291" pos:column="60">{
		<decl_stmt><decl><type><name pos:line="292" pos:column="17">char<pos:position pos:line="292" pos:column="21"/></name></type> <name><name pos:line="292" pos:column="22">errbuf<pos:position pos:line="292" pos:column="28"/></name><index pos:line="292" pos:column="28">[<expr><literal type="number" pos:line="292" pos:column="29">1024<pos:position pos:line="292" pos:column="33"/></literal></expr>]<pos:position pos:line="292" pos:column="34"/></index></name></decl>;<pos:position pos:line="292" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="293" pos:column="17">WARNING<pos:position pos:line="293" pos:column="24"/></name> <argument_list pos:line="293" pos:column="25">(<argument><expr><literal type="string" pos:line="293" pos:column="26">"memory plugin: sysctl failed: %s"<pos:position pos:line="293" pos:column="60"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="294" pos:column="25">sstrerror<pos:position pos:line="294" pos:column="34"/></name> <argument_list pos:line="294" pos:column="35">(<argument><expr><name pos:line="294" pos:column="36">errno<pos:position pos:line="294" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="43">errbuf<pos:position pos:line="294" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="294" pos:column="51">sizeof <argument_list pos:line="294" pos:column="58">(<argument><expr><name pos:line="294" pos:column="59">errbuf<pos:position pos:line="294" pos:column="65"/></name></expr></argument>)<pos:position pos:line="294" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="294" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="294" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="69"/></expr_stmt>
		<return pos:line="295" pos:column="17">return <expr><operator pos:line="295" pos:column="24">(<pos:position pos:line="295" pos:column="25"/></operator><operator pos:line="295" pos:column="25">-<pos:position pos:line="295" pos:column="26"/></operator><literal type="number" pos:line="295" pos:column="26">1<pos:position pos:line="295" pos:column="27"/></literal><operator pos:line="295" pos:column="27">)<pos:position pos:line="295" pos:column="28"/></operator></expr>;<pos:position pos:line="295" pos:column="29"/></return>
	}<pos:position pos:line="296" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="298" pos:column="9">assert<pos:position pos:line="298" pos:column="15"/></name> <argument_list pos:line="298" pos:column="16">(<argument><expr><name pos:line="298" pos:column="17">pagesize<pos:position pos:line="298" pos:column="25"/></name> <operator pos:line="298" pos:column="26">&gt;<pos:position pos:line="298" pos:column="30"/></operator> <literal type="number" pos:line="298" pos:column="28">0<pos:position pos:line="298" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="298" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="299" pos:column="9">mem_active<pos:position pos:line="299" pos:column="19"/></name>   <operator pos:line="299" pos:column="22">=<pos:position pos:line="299" pos:column="23"/></operator> <call pos:line="299" pos:column="24">(<name pos:line="299" pos:column="25">gauge_t<pos:position pos:line="299" pos:column="32"/></name>) <argument_list pos:line="299" pos:column="34">(<argument><expr><name><name pos:line="299" pos:column="35">vmtotal<pos:position pos:line="299" pos:column="42"/></name><operator pos:line="299" pos:column="42">.<pos:position pos:line="299" pos:column="43"/></operator><name pos:line="299" pos:column="43">t_arm<pos:position pos:line="299" pos:column="48"/></name></name> <operator pos:line="299" pos:column="49">*<pos:position pos:line="299" pos:column="50"/></operator> <name pos:line="299" pos:column="51">pagesize<pos:position pos:line="299" pos:column="59"/></name></expr></argument>)<pos:position pos:line="299" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><name pos:line="300" pos:column="9">mem_inactive<pos:position pos:line="300" pos:column="21"/></name> <operator pos:line="300" pos:column="22">=<pos:position pos:line="300" pos:column="23"/></operator> <call pos:line="300" pos:column="24">(<name pos:line="300" pos:column="25">gauge_t<pos:position pos:line="300" pos:column="32"/></name>) <argument_list pos:line="300" pos:column="34">(<argument><expr><operator pos:line="300" pos:column="35">(<pos:position pos:line="300" pos:column="36"/></operator><name><name pos:line="300" pos:column="36">vmtotal<pos:position pos:line="300" pos:column="43"/></name><operator pos:line="300" pos:column="43">.<pos:position pos:line="300" pos:column="44"/></operator><name pos:line="300" pos:column="44">t_rm<pos:position pos:line="300" pos:column="48"/></name></name> <operator pos:line="300" pos:column="49">-<pos:position pos:line="300" pos:column="50"/></operator> <name><name pos:line="300" pos:column="51">vmtotal<pos:position pos:line="300" pos:column="58"/></name><operator pos:line="300" pos:column="58">.<pos:position pos:line="300" pos:column="59"/></operator><name pos:line="300" pos:column="59">t_arm<pos:position pos:line="300" pos:column="64"/></name></name><operator pos:line="300" pos:column="64">)<pos:position pos:line="300" pos:column="65"/></operator> <operator pos:line="300" pos:column="66">*<pos:position pos:line="300" pos:column="67"/></operator> <name pos:line="300" pos:column="68">pagesize<pos:position pos:line="300" pos:column="76"/></name></expr></argument>)<pos:position pos:line="300" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="78"/></expr_stmt>
	<expr_stmt><expr><name pos:line="301" pos:column="9">mem_free<pos:position pos:line="301" pos:column="17"/></name>     <operator pos:line="301" pos:column="22">=<pos:position pos:line="301" pos:column="23"/></operator> <call pos:line="301" pos:column="24">(<name pos:line="301" pos:column="25">gauge_t<pos:position pos:line="301" pos:column="32"/></name>) <argument_list pos:line="301" pos:column="34">(<argument><expr><name><name pos:line="301" pos:column="35">vmtotal<pos:position pos:line="301" pos:column="42"/></name><operator pos:line="301" pos:column="42">.<pos:position pos:line="301" pos:column="43"/></operator><name pos:line="301" pos:column="43">t_free<pos:position pos:line="301" pos:column="49"/></name></name> <operator pos:line="301" pos:column="50">*<pos:position pos:line="301" pos:column="51"/></operator> <name pos:line="301" pos:column="52">pagesize<pos:position pos:line="301" pos:column="60"/></name></expr></argument>)<pos:position pos:line="301" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="62"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="303" pos:column="9">MEMORY_SUBMIT<pos:position pos:line="303" pos:column="22"/></name> <argument_list pos:line="303" pos:column="23">(<argument><expr><literal type="string" pos:line="303" pos:column="24">"active"<pos:position pos:line="303" pos:column="32"/></literal></expr></argument>,   <argument><expr><name pos:line="303" pos:column="36">mem_active<pos:position pos:line="303" pos:column="46"/></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="304" pos:column="24">"inactive"<pos:position pos:line="304" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="304" pos:column="36">mem_inactive<pos:position pos:line="304" pos:column="48"/></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="305" pos:column="24">"free"<pos:position pos:line="305" pos:column="30"/></literal></expr></argument>,     <argument><expr><name pos:line="305" pos:column="36">mem_free<pos:position pos:line="305" pos:column="44"/></name></expr></argument>)<pos:position pos:line="305" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="46"/></expr_stmt>
<comment type="block" pos:line="306" pos:column="1">/* #endif HAVE_SYSCTL */</comment>

<cpp:elif pos:line="308" pos:column="1">#<cpp:directive pos:line="308" pos:column="2">elif<pos:position pos:line="308" pos:column="6"/></cpp:directive> <expr><name pos:line="308" pos:column="7">HAVE_LIBSTATGRAB<pos:position pos:line="308" pos:column="23"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="309" pos:column="9">sg_mem_stats<pos:position pos:line="309" pos:column="21"/></name> <modifier pos:line="309" pos:column="22">*<pos:position pos:line="309" pos:column="23"/></modifier></type><name pos:line="309" pos:column="23">ios<pos:position pos:line="309" pos:column="26"/></name></decl>;<pos:position pos:line="309" pos:column="27"/></decl_stmt>

	<expr_stmt><expr><name pos:line="311" pos:column="9">ios<pos:position pos:line="311" pos:column="12"/></name> <operator pos:line="311" pos:column="13">=<pos:position pos:line="311" pos:column="14"/></operator> <call><name pos:line="311" pos:column="15">sg_get_mem_stats<pos:position pos:line="311" pos:column="31"/></name> <argument_list pos:line="311" pos:column="32">()<pos:position pos:line="311" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="311" pos:column="35"/></expr_stmt>
	<if pos:line="312" pos:column="9">if <condition pos:line="312" pos:column="12">(<expr><name pos:line="312" pos:column="13">ios<pos:position pos:line="312" pos:column="16"/></name> <operator pos:line="312" pos:column="17">==<pos:position pos:line="312" pos:column="19"/></operator> <name pos:line="312" pos:column="20">NULL<pos:position pos:line="312" pos:column="24"/></name></expr>)<pos:position pos:line="312" pos:column="25"/></condition><then pos:line="312" pos:column="25">
		<block type="pseudo"><return pos:line="313" pos:column="17">return <expr><operator pos:line="313" pos:column="24">(<pos:position pos:line="313" pos:column="25"/></operator><operator pos:line="313" pos:column="25">-<pos:position pos:line="313" pos:column="26"/></operator><literal type="number" pos:line="313" pos:column="26">1<pos:position pos:line="313" pos:column="27"/></literal><operator pos:line="313" pos:column="27">)<pos:position pos:line="313" pos:column="28"/></operator></expr>;<pos:position pos:line="313" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="315" pos:column="9">MEMORY_SUBMIT<pos:position pos:line="315" pos:column="22"/></name> <argument_list pos:line="315" pos:column="23">(<argument><expr><literal type="string" pos:line="315" pos:column="24">"used"<pos:position pos:line="315" pos:column="30"/></literal></expr></argument>,   <argument><expr><operator pos:line="315" pos:column="34">(<pos:position pos:line="315" pos:column="35"/></operator><name pos:line="315" pos:column="35">gauge_t<pos:position pos:line="315" pos:column="42"/></name><operator pos:line="315" pos:column="42">)<pos:position pos:line="315" pos:column="43"/></operator> <name><name pos:line="315" pos:column="44">ios<pos:position pos:line="315" pos:column="47"/></name><operator pos:line="315" pos:column="47">-&gt;<pos:position pos:line="315" pos:column="52"/></operator><name pos:line="315" pos:column="49">used<pos:position pos:line="315" pos:column="53"/></name></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="316" pos:column="24">"cached"<pos:position pos:line="316" pos:column="32"/></literal></expr></argument>, <argument><expr><operator pos:line="316" pos:column="34">(<pos:position pos:line="316" pos:column="35"/></operator><name pos:line="316" pos:column="35">gauge_t<pos:position pos:line="316" pos:column="42"/></name><operator pos:line="316" pos:column="42">)<pos:position pos:line="316" pos:column="43"/></operator> <name><name pos:line="316" pos:column="44">ios<pos:position pos:line="316" pos:column="47"/></name><operator pos:line="316" pos:column="47">-&gt;<pos:position pos:line="316" pos:column="52"/></operator><name pos:line="316" pos:column="49">cache<pos:position pos:line="316" pos:column="54"/></name></name></expr></argument>,
	               <argument><expr><literal type="string" pos:line="317" pos:column="24">"free"<pos:position pos:line="317" pos:column="30"/></literal></expr></argument>,   <argument><expr><operator pos:line="317" pos:column="34">(<pos:position pos:line="317" pos:column="35"/></operator><name pos:line="317" pos:column="35">gauge_t<pos:position pos:line="317" pos:column="42"/></name><operator pos:line="317" pos:column="42">)<pos:position pos:line="317" pos:column="43"/></operator> <name><name pos:line="317" pos:column="44">ios<pos:position pos:line="317" pos:column="47"/></name><operator pos:line="317" pos:column="47">-&gt;<pos:position pos:line="317" pos:column="52"/></operator><name pos:line="317" pos:column="49">free<pos:position pos:line="317" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="317" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="55"/></expr_stmt>
<comment type="block" pos:line="318" pos:column="1">/* #endif HAVE_LIBSTATGRAB */</comment>

<cpp:elif pos:line="320" pos:column="1">#<cpp:directive pos:line="320" pos:column="2">elif<pos:position pos:line="320" pos:column="6"/></cpp:directive> <expr><name pos:line="320" pos:column="7">HAVE_PERFSTAT<pos:position pos:line="320" pos:column="20"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="321" pos:column="9">perfstat_memory_total_t<pos:position pos:line="321" pos:column="32"/></name></type> <name pos:line="321" pos:column="33">pmemory<pos:position pos:line="321" pos:column="40"/></name> <init pos:line="321" pos:column="41">= <expr><block pos:line="321" pos:column="43">{ <expr><literal type="number" pos:line="321" pos:column="45">0<pos:position pos:line="321" pos:column="46"/></literal></expr> }<pos:position pos:line="321" pos:column="48"/></block></expr></init></decl>;<pos:position pos:line="321" pos:column="49"/></decl_stmt>

	<if pos:line="323" pos:column="9">if <condition pos:line="323" pos:column="12">(<expr><call><name pos:line="323" pos:column="13">perfstat_memory_total<pos:position pos:line="323" pos:column="34"/></name><argument_list pos:line="323" pos:column="34">(<argument><expr><name pos:line="323" pos:column="35">NULL<pos:position pos:line="323" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="323" pos:column="41">&amp;<pos:position pos:line="323" pos:column="46"/></operator><name pos:line="323" pos:column="42">pmemory<pos:position pos:line="323" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="323" pos:column="51">sizeof<argument_list pos:line="323" pos:column="57">(<argument><expr><name pos:line="323" pos:column="58">pmemory<pos:position pos:line="323" pos:column="65"/></name></expr></argument>)<pos:position pos:line="323" pos:column="66"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="323" pos:column="68">1<pos:position pos:line="323" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="323" pos:column="70"/></argument_list></call> <operator pos:line="323" pos:column="71">&lt;<pos:position pos:line="323" pos:column="75"/></operator> <literal type="number" pos:line="323" pos:column="73">0<pos:position pos:line="323" pos:column="74"/></literal></expr>)<pos:position pos:line="323" pos:column="75"/></condition><then pos:line="323" pos:column="75">
	<block pos:line="324" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="325" pos:column="17">char<pos:position pos:line="325" pos:column="21"/></name></type> <name><name pos:line="325" pos:column="22">errbuf<pos:position pos:line="325" pos:column="28"/></name><index pos:line="325" pos:column="28">[<expr><literal type="number" pos:line="325" pos:column="29">1024<pos:position pos:line="325" pos:column="33"/></literal></expr>]<pos:position pos:line="325" pos:column="34"/></index></name></decl>;<pos:position pos:line="325" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="326" pos:column="17">WARNING<pos:position pos:line="326" pos:column="24"/></name> <argument_list pos:line="326" pos:column="25">(<argument><expr><literal type="string" pos:line="326" pos:column="26">"memory plugin: perfstat_memory_total failed: %s"<pos:position pos:line="326" pos:column="75"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="327" pos:column="25">sstrerror<pos:position pos:line="327" pos:column="34"/></name> <argument_list pos:line="327" pos:column="35">(<argument><expr><name pos:line="327" pos:column="36">errno<pos:position pos:line="327" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="327" pos:column="43">errbuf<pos:position pos:line="327" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="327" pos:column="51">sizeof <argument_list pos:line="327" pos:column="58">(<argument><expr><name pos:line="327" pos:column="59">errbuf<pos:position pos:line="327" pos:column="65"/></name></expr></argument>)<pos:position pos:line="327" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="327" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="327" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="69"/></expr_stmt>
		<return pos:line="328" pos:column="17">return <expr><operator pos:line="328" pos:column="24">(<pos:position pos:line="328" pos:column="25"/></operator><operator pos:line="328" pos:column="25">-<pos:position pos:line="328" pos:column="26"/></operator><literal type="number" pos:line="328" pos:column="26">1<pos:position pos:line="328" pos:column="27"/></literal><operator pos:line="328" pos:column="27">)<pos:position pos:line="328" pos:column="28"/></operator></expr>;<pos:position pos:line="328" pos:column="29"/></return>
	}<pos:position pos:line="329" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="331" pos:column="9">/* Unfortunately, the AIX documentation is not very clear on how these
	 * numbers relate to one another. The only thing is states explcitly
	 * is:
	 *   real_total = real_process + real_free + numperm + real_system
	 *
	 * Another segmentation, which would be closer to the numbers reported
	 * by the "svmon" utility, would be:
	 *   real_total = real_free + real_inuse
	 *   real_inuse = "active" + real_pinned + numperm
	 */</comment>
	<expr_stmt><expr><call><name pos:line="341" pos:column="9">MEMORY_SUBMIT<pos:position pos:line="341" pos:column="22"/></name> <argument_list pos:line="341" pos:column="23">(<argument><expr><literal type="string" pos:line="341" pos:column="24">"free"<pos:position pos:line="341" pos:column="30"/></literal></expr></argument>,   <argument><expr><call pos:line="341" pos:column="34">(<name pos:line="341" pos:column="35">gauge_t<pos:position pos:line="341" pos:column="42"/></name>) <argument_list pos:line="341" pos:column="44">(<argument><expr><name><name pos:line="341" pos:column="45">pmemory<pos:position pos:line="341" pos:column="52"/></name><operator pos:line="341" pos:column="52">.<pos:position pos:line="341" pos:column="53"/></operator><name pos:line="341" pos:column="53">real_free<pos:position pos:line="341" pos:column="62"/></name></name>    <operator pos:line="341" pos:column="66">*<pos:position pos:line="341" pos:column="67"/></operator> <name pos:line="341" pos:column="68">pagesize<pos:position pos:line="341" pos:column="76"/></name></expr></argument>)<pos:position pos:line="341" pos:column="77"/></argument_list></call></expr></argument>,
	               <argument><expr><literal type="string" pos:line="342" pos:column="24">"cached"<pos:position pos:line="342" pos:column="32"/></literal></expr></argument>, <argument><expr><call pos:line="342" pos:column="34">(<name pos:line="342" pos:column="35">gauge_t<pos:position pos:line="342" pos:column="42"/></name>) <argument_list pos:line="342" pos:column="44">(<argument><expr><name><name pos:line="342" pos:column="45">pmemory<pos:position pos:line="342" pos:column="52"/></name><operator pos:line="342" pos:column="52">.<pos:position pos:line="342" pos:column="53"/></operator><name pos:line="342" pos:column="53">numperm<pos:position pos:line="342" pos:column="60"/></name></name>      <operator pos:line="342" pos:column="66">*<pos:position pos:line="342" pos:column="67"/></operator> <name pos:line="342" pos:column="68">pagesize<pos:position pos:line="342" pos:column="76"/></name></expr></argument>)<pos:position pos:line="342" pos:column="77"/></argument_list></call></expr></argument>,
	               <argument><expr><literal type="string" pos:line="343" pos:column="24">"system"<pos:position pos:line="343" pos:column="32"/></literal></expr></argument>, <argument><expr><call pos:line="343" pos:column="34">(<name pos:line="343" pos:column="35">gauge_t<pos:position pos:line="343" pos:column="42"/></name>) <argument_list pos:line="343" pos:column="44">(<argument><expr><name><name pos:line="343" pos:column="45">pmemory<pos:position pos:line="343" pos:column="52"/></name><operator pos:line="343" pos:column="52">.<pos:position pos:line="343" pos:column="53"/></operator><name pos:line="343" pos:column="53">real_system<pos:position pos:line="343" pos:column="64"/></name></name>  <operator pos:line="343" pos:column="66">*<pos:position pos:line="343" pos:column="67"/></operator> <name pos:line="343" pos:column="68">pagesize<pos:position pos:line="343" pos:column="76"/></name></expr></argument>)<pos:position pos:line="343" pos:column="77"/></argument_list></call></expr></argument>,
	               <argument><expr><literal type="string" pos:line="344" pos:column="24">"user"<pos:position pos:line="344" pos:column="30"/></literal></expr></argument>,   <argument><expr><call pos:line="344" pos:column="34">(<name pos:line="344" pos:column="35">gauge_t<pos:position pos:line="344" pos:column="42"/></name>) <argument_list pos:line="344" pos:column="44">(<argument><expr><name><name pos:line="344" pos:column="45">pmemory<pos:position pos:line="344" pos:column="52"/></name><operator pos:line="344" pos:column="52">.<pos:position pos:line="344" pos:column="53"/></operator><name pos:line="344" pos:column="53">real_process<pos:position pos:line="344" pos:column="65"/></name></name> <operator pos:line="344" pos:column="66">*<pos:position pos:line="344" pos:column="67"/></operator> <name pos:line="344" pos:column="68">pagesize<pos:position pos:line="344" pos:column="76"/></name></expr></argument>)<pos:position pos:line="344" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="344" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="344" pos:column="79"/></expr_stmt>
<cpp:endif pos:line="345" pos:column="1">#<cpp:directive pos:line="345" pos:column="2">endif<pos:position pos:line="345" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="345" pos:column="8">/* HAVE_PERFSTAT */</comment>

	<return pos:line="347" pos:column="9">return <expr><operator pos:line="347" pos:column="16">(<pos:position pos:line="347" pos:column="17"/></operator><literal type="number" pos:line="347" pos:column="17">0<pos:position pos:line="347" pos:column="18"/></literal><operator pos:line="347" pos:column="18">)<pos:position pos:line="347" pos:column="19"/></operator></expr>;<pos:position pos:line="347" pos:column="20"/></return>
}<pos:position pos:line="348" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2329_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dispatch_block_plugin<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">oconfig_item_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ci<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">name<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">cf_complex_callback_t<pos:position pos:line="6" pos:column="30"/></name> <modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier></type><name pos:line="6" pos:column="32">cb<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">strcasecmp<pos:position pos:line="8" pos:column="23"/></name> <argument_list pos:line="8" pos:column="24">(<argument><expr><name><name pos:line="8" pos:column="25">ci<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">key<pos:position pos:line="8" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="34">"Plugin"<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call> <operator pos:line="8" pos:column="44">!=<pos:position pos:line="8" pos:column="46"/></operator> <literal type="number" pos:line="8" pos:column="47">0<pos:position pos:line="8" pos:column="48"/></literal></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><operator pos:line="9" pos:column="25">-<pos:position pos:line="9" pos:column="26"/></operator><literal type="number" pos:line="9" pos:column="26">1<pos:position pos:line="9" pos:column="27"/></literal><operator pos:line="9" pos:column="27">)<pos:position pos:line="9" pos:column="28"/></operator></expr>;<pos:position pos:line="9" pos:column="29"/></return></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">ci<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">values_num<pos:position pos:line="10" pos:column="27"/></name></name> <operator pos:line="10" pos:column="28">&lt;<pos:position pos:line="10" pos:column="32"/></operator> <literal type="number" pos:line="10" pos:column="30">1<pos:position pos:line="10" pos:column="31"/></literal></expr>)<pos:position pos:line="10" pos:column="32"/></condition><then pos:line="10" pos:column="32">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">ci<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">values<pos:position pos:line="12" pos:column="23"/></name><index pos:line="12" pos:column="23">[<expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>]<pos:position pos:line="12" pos:column="26"/></index></name><operator pos:line="12" pos:column="26">.<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">type<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">!=<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="35">OCONFIG_TYPE_STRING<pos:position pos:line="12" pos:column="54"/></name></expr>)<pos:position pos:line="12" pos:column="55"/></condition><then pos:line="12" pos:column="55">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">(<pos:position pos:line="13" pos:column="25"/></operator><operator pos:line="13" pos:column="25">-<pos:position pos:line="13" pos:column="26"/></operator><literal type="number" pos:line="13" pos:column="26">1<pos:position pos:line="13" pos:column="27"/></literal><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator></expr>;<pos:position pos:line="13" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="15" pos:column="9">name<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name><name pos:line="15" pos:column="16">ci<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">values<pos:position pos:line="15" pos:column="26"/></name><index pos:line="15" pos:column="26">[<expr><literal type="number" pos:line="15" pos:column="27">0<pos:position pos:line="15" pos:column="28"/></literal></expr>]<pos:position pos:line="15" pos:column="29"/></index></name><operator pos:line="15" pos:column="29">.<pos:position pos:line="15" pos:column="30"/></operator><name><name pos:line="15" pos:column="30">value<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">.<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">string<pos:position pos:line="15" pos:column="42"/></name></name></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">strcmp<pos:position pos:line="16" pos:column="19"/></name> <argument_list pos:line="16" pos:column="20">(<argument><expr><literal type="string" pos:line="16" pos:column="21">"libvirt"<pos:position pos:line="16" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="32">name<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call> <operator pos:line="16" pos:column="38">==<pos:position pos:line="16" pos:column="40"/></operator> <literal type="number" pos:line="16" pos:column="41">0<pos:position pos:line="16" pos:column="42"/></literal></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43">
	<block pos:line="17" pos:column="9">{
		<comment type="block" pos:line="18" pos:column="17">/* TODO(octo): Remove this legacy. */</comment>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">WARNING<pos:position pos:line="19" pos:column="24"/></name> <argument_list pos:line="19" pos:column="25">(<argument><expr><literal type="string" pos:line="19" pos:column="26">"The \"libvirt\" plugin has been renamed to \"virt\" to avoid problems with the build system. "<pos:position pos:line="19" pos:column="121"/></literal>
				<literal type="string" pos:line="20" pos:column="33">"Your configuration is still using the old name. "<pos:position pos:line="20" pos:column="83"/></literal>
				<literal type="string" pos:line="21" pos:column="33">"Please change it to use \"virt\" as soon as possible. "<pos:position pos:line="21" pos:column="89"/></literal>
				<literal type="string" pos:line="22" pos:column="33">"This compatibility code will go away eventually."<pos:position pos:line="22" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="85"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">name<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <literal type="string" pos:line="23" pos:column="24">"virt"<pos:position pos:line="23" pos:column="30"/></literal></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">IS_TRUE<pos:position pos:line="26" pos:column="20"/></name> <argument_list pos:line="26" pos:column="21">(<argument><expr><call><name pos:line="26" pos:column="22">global_option_get<pos:position pos:line="26" pos:column="39"/></name> <argument_list pos:line="26" pos:column="40">(<argument><expr><literal type="string" pos:line="26" pos:column="41">"AutoLoadPlugin"<pos:position pos:line="26" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="60"/></condition><then pos:line="26" pos:column="60">
	<block pos:line="27" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="28" pos:column="17">plugin_ctx_t<pos:position pos:line="28" pos:column="29"/></name></type> <name pos:line="28" pos:column="30">ctx<pos:position pos:line="28" pos:column="33"/></name></decl>;<pos:position pos:line="28" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">plugin_ctx_t<pos:position pos:line="29" pos:column="29"/></name></type> <name pos:line="29" pos:column="30">old_ctx<pos:position pos:line="29" pos:column="37"/></name></decl>;<pos:position pos:line="29" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="30" pos:column="17">int<pos:position pos:line="30" pos:column="20"/></name></type> <name pos:line="30" pos:column="21">status<pos:position pos:line="30" pos:column="27"/></name></decl>;<pos:position pos:line="30" pos:column="28"/></decl_stmt>

		<comment type="block" pos:line="32" pos:column="17">/* default to the global interval set before loading this plugin */</comment>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">memset<pos:position pos:line="33" pos:column="23"/></name> <argument_list pos:line="33" pos:column="24">(<argument><expr><operator pos:line="33" pos:column="25">&amp;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="26">ctx<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="31">0<pos:position pos:line="33" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="34">sizeof <argument_list pos:line="33" pos:column="41">(<argument><expr><name pos:line="33" pos:column="42">ctx<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">ctx<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">.<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="21">interval<pos:position pos:line="34" pos:column="29"/></name></name> <operator pos:line="34" pos:column="30">=<pos:position pos:line="34" pos:column="31"/></operator> <call><name pos:line="34" pos:column="32">cf_get_default_interval<pos:position pos:line="34" pos:column="55"/></name> <argument_list pos:line="34" pos:column="56">()<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="59"/></expr_stmt>

		<expr_stmt><expr><name pos:line="36" pos:column="17">old_ctx<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">=<pos:position pos:line="36" pos:column="26"/></operator> <call><name pos:line="36" pos:column="27">plugin_set_ctx<pos:position pos:line="36" pos:column="41"/></name> <argument_list pos:line="36" pos:column="42">(<argument><expr><name pos:line="36" pos:column="43">ctx<pos:position pos:line="36" pos:column="46"/></name></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name pos:line="37" pos:column="17">status<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <call><name pos:line="37" pos:column="26">plugin_load<pos:position pos:line="37" pos:column="37"/></name> <argument_list pos:line="37" pos:column="38">(<argument><expr><name pos:line="37" pos:column="39">name<pos:position pos:line="37" pos:column="43"/></name></expr></argument>, <comment type="block" pos:line="37" pos:column="45">/* flags = */</comment> <argument><expr><literal type="number" pos:line="37" pos:column="59">0<pos:position pos:line="37" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="62"/></expr_stmt>
		<comment type="block" pos:line="38" pos:column="17">/* reset to the "global" context */</comment>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">plugin_set_ctx<pos:position pos:line="39" pos:column="31"/></name> <argument_list pos:line="39" pos:column="32">(<argument><expr><name pos:line="39" pos:column="33">old_ctx<pos:position pos:line="39" pos:column="40"/></name></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="42"/></expr_stmt>

		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">status<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">!=<pos:position pos:line="41" pos:column="30"/></operator> <literal type="number" pos:line="41" pos:column="31">0<pos:position pos:line="41" pos:column="32"/></literal></expr>)<pos:position pos:line="41" pos:column="33"/></condition><then pos:line="41" pos:column="33">
		<block pos:line="42" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">ERROR<pos:position pos:line="43" pos:column="30"/></name> <argument_list pos:line="43" pos:column="31">(<argument><expr><literal type="string" pos:line="43" pos:column="32">"Automatically loading plugin \"%s\" failed "<pos:position pos:line="43" pos:column="77"/></literal>
					<literal type="string" pos:line="44" pos:column="41">"with status %i."<pos:position pos:line="44" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="60">name<pos:position pos:line="44" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="66">status<pos:position pos:line="44" pos:column="72"/></name></expr></argument>)<pos:position pos:line="44" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="74"/></expr_stmt>
			<return pos:line="45" pos:column="25">return <expr><operator pos:line="45" pos:column="32">(<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="33">status<pos:position pos:line="45" pos:column="39"/></name><operator pos:line="45" pos:column="39">)<pos:position pos:line="45" pos:column="40"/></operator></expr>;<pos:position pos:line="45" pos:column="41"/></return>
		}<pos:position pos:line="46" pos:column="18"/></block></then></if>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="49" pos:column="9">/* Check for a complex callback first */</comment>
	<for pos:line="50" pos:column="9">for <control pos:line="50" pos:column="13">(<init><expr><name pos:line="50" pos:column="14">cb<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <name pos:line="50" pos:column="19">complex_callback_head<pos:position pos:line="50" pos:column="40"/></name></expr>;<pos:position pos:line="50" pos:column="41"/></init> <condition><expr><name pos:line="50" pos:column="42">cb<pos:position pos:line="50" pos:column="44"/></name> <operator pos:line="50" pos:column="45">!=<pos:position pos:line="50" pos:column="47"/></operator> <name pos:line="50" pos:column="48">NULL<pos:position pos:line="50" pos:column="52"/></name></expr>;<pos:position pos:line="50" pos:column="53"/></condition> <incr><expr><name pos:line="50" pos:column="54">cb<pos:position pos:line="50" pos:column="56"/></name> <operator pos:line="50" pos:column="57">=<pos:position pos:line="50" pos:column="58"/></operator> <name><name pos:line="50" pos:column="59">cb<pos:position pos:line="50" pos:column="61"/></name><operator pos:line="50" pos:column="61">-&gt;<pos:position pos:line="50" pos:column="66"/></operator><name pos:line="50" pos:column="63">next<pos:position pos:line="50" pos:column="67"/></name></name></expr></incr>)<pos:position pos:line="50" pos:column="68"/></control>
	<block pos:line="51" pos:column="9">{
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><call><name pos:line="52" pos:column="21">strcasecmp<pos:position pos:line="52" pos:column="31"/></name> <argument_list pos:line="52" pos:column="32">(<argument><expr><name pos:line="52" pos:column="33">name<pos:position pos:line="52" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="39">cb<pos:position pos:line="52" pos:column="41"/></name><operator pos:line="52" pos:column="41">-&gt;<pos:position pos:line="52" pos:column="46"/></operator><name pos:line="52" pos:column="43">type<pos:position pos:line="52" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="48"/></argument_list></call> <operator pos:line="52" pos:column="49">==<pos:position pos:line="52" pos:column="51"/></operator> <literal type="number" pos:line="52" pos:column="52">0<pos:position pos:line="52" pos:column="53"/></literal></expr>)<pos:position pos:line="52" pos:column="54"/></condition><then pos:line="52" pos:column="54">
		<block pos:line="53" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="54" pos:column="25">plugin_ctx_t<pos:position pos:line="54" pos:column="37"/></name></type> <name pos:line="54" pos:column="38">old_ctx<pos:position pos:line="54" pos:column="45"/></name></decl>;<pos:position pos:line="54" pos:column="46"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="55" pos:column="25">int<pos:position pos:line="55" pos:column="28"/></name></type> <name pos:line="55" pos:column="29">ret_val<pos:position pos:line="55" pos:column="36"/></name></decl>;<pos:position pos:line="55" pos:column="37"/></decl_stmt>

			<expr_stmt><expr><name pos:line="57" pos:column="25">old_ctx<pos:position pos:line="57" pos:column="32"/></name> <operator pos:line="57" pos:column="33">=<pos:position pos:line="57" pos:column="34"/></operator> <call><name pos:line="57" pos:column="35">plugin_set_ctx<pos:position pos:line="57" pos:column="49"/></name> <argument_list pos:line="57" pos:column="50">(<argument><expr><name><name pos:line="57" pos:column="51">cb<pos:position pos:line="57" pos:column="53"/></name><operator pos:line="57" pos:column="53">-&gt;<pos:position pos:line="57" pos:column="58"/></operator><name pos:line="57" pos:column="55">ctx<pos:position pos:line="57" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name pos:line="58" pos:column="25">ret_val<pos:position pos:line="58" pos:column="32"/></name> <operator pos:line="58" pos:column="33">=<pos:position pos:line="58" pos:column="34"/></operator> <operator pos:line="58" pos:column="35">(<pos:position pos:line="58" pos:column="36"/></operator><call><name><name pos:line="58" pos:column="36">cb<pos:position pos:line="58" pos:column="38"/></name><operator pos:line="58" pos:column="38">-&gt;<pos:position pos:line="58" pos:column="43"/></operator><name pos:line="58" pos:column="40">callback<pos:position pos:line="58" pos:column="48"/></name></name> <argument_list pos:line="58" pos:column="49">(<argument><expr><name pos:line="58" pos:column="50">ci<pos:position pos:line="58" pos:column="52"/></name></expr></argument>)<pos:position pos:line="58" pos:column="53"/></argument_list></call><operator pos:line="58" pos:column="53">)<pos:position pos:line="58" pos:column="54"/></operator></expr>;<pos:position pos:line="58" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">plugin_set_ctx<pos:position pos:line="59" pos:column="39"/></name> <argument_list pos:line="59" pos:column="40">(<argument><expr><name pos:line="59" pos:column="41">old_ctx<pos:position pos:line="59" pos:column="48"/></name></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="50"/></expr_stmt>
			<return pos:line="60" pos:column="25">return <expr><operator pos:line="60" pos:column="32">(<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="33">ret_val<pos:position pos:line="60" pos:column="40"/></name><operator pos:line="60" pos:column="40">)<pos:position pos:line="60" pos:column="41"/></operator></expr>;<pos:position pos:line="60" pos:column="42"/></return>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if>
	}<pos:position pos:line="62" pos:column="10"/></block></for>

	<comment type="block" pos:line="64" pos:column="9">/* Hm, no complex plugin found. Dispatch the values one by one */</comment>
	<for pos:line="65" pos:column="9">for <control pos:line="65" pos:column="13">(<init><expr><name pos:line="65" pos:column="14">i<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">=<pos:position pos:line="65" pos:column="17"/></operator> <literal type="number" pos:line="65" pos:column="18">0<pos:position pos:line="65" pos:column="19"/></literal></expr>;<pos:position pos:line="65" pos:column="20"/></init> <condition><expr><name pos:line="65" pos:column="21">i<pos:position pos:line="65" pos:column="22"/></name> <operator pos:line="65" pos:column="23">&lt;<pos:position pos:line="65" pos:column="27"/></operator> <name><name pos:line="65" pos:column="25">ci<pos:position pos:line="65" pos:column="27"/></name><operator pos:line="65" pos:column="27">-&gt;<pos:position pos:line="65" pos:column="32"/></operator><name pos:line="65" pos:column="29">children_num<pos:position pos:line="65" pos:column="41"/></name></name></expr>;<pos:position pos:line="65" pos:column="42"/></condition> <incr><expr><name pos:line="65" pos:column="43">i<pos:position pos:line="65" pos:column="44"/></name><operator pos:line="65" pos:column="44">++<pos:position pos:line="65" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="65" pos:column="47"/></control>
	<block pos:line="66" pos:column="9">{
		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name><name pos:line="67" pos:column="21">ci<pos:position pos:line="67" pos:column="23"/></name><operator pos:line="67" pos:column="23">-&gt;<pos:position pos:line="67" pos:column="28"/></operator><name pos:line="67" pos:column="25">children<pos:position pos:line="67" pos:column="33"/></name><index pos:line="67" pos:column="33">[<expr><name pos:line="67" pos:column="34">i<pos:position pos:line="67" pos:column="35"/></name></expr>]<pos:position pos:line="67" pos:column="36"/></index></name><operator pos:line="67" pos:column="36">.<pos:position pos:line="67" pos:column="37"/></operator><name pos:line="67" pos:column="37">children<pos:position pos:line="67" pos:column="45"/></name> <operator pos:line="67" pos:column="46">==<pos:position pos:line="67" pos:column="48"/></operator> <name pos:line="67" pos:column="49">NULL<pos:position pos:line="67" pos:column="53"/></name></expr>)<pos:position pos:line="67" pos:column="54"/></condition><then pos:line="67" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="25">dispatch_value_plugin<pos:position pos:line="68" pos:column="46"/></name> <argument_list pos:line="68" pos:column="47">(<argument><expr><name pos:line="68" pos:column="48">name<pos:position pos:line="68" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="54">ci<pos:position pos:line="68" pos:column="56"/></name><operator pos:line="68" pos:column="56">-&gt;<pos:position pos:line="68" pos:column="61"/></operator><name pos:line="68" pos:column="58">children<pos:position pos:line="68" pos:column="66"/></name></name> <operator pos:line="68" pos:column="67">+<pos:position pos:line="68" pos:column="68"/></operator> <name pos:line="68" pos:column="69">i<pos:position pos:line="68" pos:column="70"/></name></expr></argument>)<pos:position pos:line="68" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="72"/></expr_stmt></block></then>
		<else pos:line="69" pos:column="17">else
		<block pos:line="70" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">WARNING<pos:position pos:line="71" pos:column="32"/></name> <argument_list pos:line="71" pos:column="33">(<argument><expr><literal type="string" pos:line="71" pos:column="34">"There is a `%s' block within the "<pos:position pos:line="71" pos:column="69"/></literal>
					<literal type="string" pos:line="72" pos:column="41">"configuration for the %s plugin. "<pos:position pos:line="72" pos:column="76"/></literal>
					<literal type="string" pos:line="73" pos:column="41">"The plugin either only expects "<pos:position pos:line="73" pos:column="74"/></literal>
					<literal type="string" pos:line="74" pos:column="41">"\"simple\" configuration statements "<pos:position pos:line="74" pos:column="79"/></literal>
					<literal type="string" pos:line="75" pos:column="41">"or wasn't loaded using `LoadPlugin'."<pos:position pos:line="75" pos:column="79"/></literal>
					<literal type="string" pos:line="76" pos:column="41">" Please check your configuration."<pos:position pos:line="76" pos:column="76"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="77" pos:column="41">ci<pos:position pos:line="77" pos:column="43"/></name><operator pos:line="77" pos:column="43">-&gt;<pos:position pos:line="77" pos:column="48"/></operator><name pos:line="77" pos:column="45">children<pos:position pos:line="77" pos:column="53"/></name><index pos:line="77" pos:column="53">[<expr><name pos:line="77" pos:column="54">i<pos:position pos:line="77" pos:column="55"/></name></expr>]<pos:position pos:line="77" pos:column="56"/></index></name><operator pos:line="77" pos:column="56">.<pos:position pos:line="77" pos:column="57"/></operator><name pos:line="77" pos:column="57">key<pos:position pos:line="77" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="62">name<pos:position pos:line="77" pos:column="66"/></name></expr></argument>)<pos:position pos:line="77" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="78" pos:column="18"/></block></else></if>
	}<pos:position pos:line="79" pos:column="10"/></block></for>

	<return pos:line="81" pos:column="9">return <expr><operator pos:line="81" pos:column="16">(<pos:position pos:line="81" pos:column="17"/></operator><literal type="number" pos:line="81" pos:column="17">0<pos:position pos:line="81" pos:column="18"/></literal><operator pos:line="81" pos:column="18">)<pos:position pos:line="81" pos:column="19"/></operator></expr>;<pos:position pos:line="81" pos:column="20"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

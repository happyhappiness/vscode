<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1650_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">compact_ds_name<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">buffer<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">size_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">buffer_size<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <specifier pos:line="1" pos:column="67">const<pos:position pos:line="1" pos:column="72"/></specifier> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">src<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list> <block pos:line="1" pos:column="79">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">src_copy<pos:position pos:line="2" pos:column="17"/></name></decl>;<pos:position pos:line="2" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">src_len<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ptr<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">buffer<pos:position pos:line="4" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">ptr_size<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">buffer_size<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">_Bool<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">append_plus<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><literal type="number" pos:line="6" pos:column="23">0<pos:position pos:line="6" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">_Bool<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">append_minus<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">buffer<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">==<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">NULL<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">)<pos:position pos:line="9" pos:column="23"/></operator> <operator pos:line="9" pos:column="24">||<pos:position pos:line="9" pos:column="26"/></operator> <operator pos:line="9" pos:column="27">(<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">buffer_size<pos:position pos:line="9" pos:column="39"/></name> <operator pos:line="9" pos:column="40">&lt;=<pos:position pos:line="9" pos:column="45"/></operator> <call><name pos:line="9" pos:column="43">strlen<pos:position pos:line="9" pos:column="49"/></name><argument_list pos:line="9" pos:column="49">(<argument><expr><literal type="string" pos:line="9" pos:column="50">"Minus"<pos:position pos:line="9" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call><operator pos:line="9" pos:column="58">)<pos:position pos:line="9" pos:column="59"/></operator> <operator pos:line="9" pos:column="60">||<pos:position pos:line="9" pos:column="62"/></operator> <operator pos:line="9" pos:column="63">(<pos:position pos:line="9" pos:column="64"/></operator><name pos:line="9" pos:column="64">src<pos:position pos:line="9" pos:column="67"/></name> <operator pos:line="9" pos:column="68">==<pos:position pos:line="9" pos:column="70"/></operator> <name pos:line="9" pos:column="71">NULL<pos:position pos:line="9" pos:column="75"/></name><operator pos:line="9" pos:column="75">)<pos:position pos:line="9" pos:column="76"/></operator></expr>)<pos:position pos:line="9" pos:column="77"/></condition><then pos:line="9" pos:column="77">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">EINVAL<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="12" pos:column="3">src_copy<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">strdup<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">src<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">src_len<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">strlen<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">src<pos:position pos:line="13" pos:column="23"/></name></expr></argument>)<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="15" pos:column="3">/* Remove trailing "+" and "-". */</comment>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name><name pos:line="16" pos:column="7">src_copy<pos:position pos:line="16" pos:column="15"/></name><index pos:line="16" pos:column="15">[<expr><name pos:line="16" pos:column="16">src_len<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator> <literal type="number" pos:line="16" pos:column="26">1<pos:position pos:line="16" pos:column="27"/></literal></expr>]<pos:position pos:line="16" pos:column="28"/></index></name> <operator pos:line="16" pos:column="29">==<pos:position pos:line="16" pos:column="31"/></operator> <literal type="char" pos:line="16" pos:column="32">'+'<pos:position pos:line="16" pos:column="35"/></literal></expr>)<pos:position pos:line="16" pos:column="36"/></condition><then pos:line="16" pos:column="36"> <block pos:line="16" pos:column="37">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">append_plus<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <literal type="number" pos:line="17" pos:column="19">1<pos:position pos:line="17" pos:column="20"/></literal></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">src_len<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">--<pos:position pos:line="18" pos:column="14"/></operator></expr>;<pos:position pos:line="18" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">src_copy<pos:position pos:line="19" pos:column="13"/></name><index pos:line="19" pos:column="13">[<expr><name pos:line="19" pos:column="14">src_len<pos:position pos:line="19" pos:column="21"/></name></expr>]<pos:position pos:line="19" pos:column="22"/></index></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <literal type="number" pos:line="19" pos:column="25">0<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then> <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><name><name pos:line="20" pos:column="14">src_copy<pos:position pos:line="20" pos:column="22"/></name><index pos:line="20" pos:column="22">[<expr><name pos:line="20" pos:column="23">src_len<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">-<pos:position pos:line="20" pos:column="32"/></operator> <literal type="number" pos:line="20" pos:column="33">1<pos:position pos:line="20" pos:column="34"/></literal></expr>]<pos:position pos:line="20" pos:column="35"/></index></name> <operator pos:line="20" pos:column="36">==<pos:position pos:line="20" pos:column="38"/></operator> <literal type="char" pos:line="20" pos:column="39">'-'<pos:position pos:line="20" pos:column="42"/></literal></expr>)<pos:position pos:line="20" pos:column="43"/></condition><then pos:line="20" pos:column="43"> <block pos:line="20" pos:column="44">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">append_minus<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <literal type="number" pos:line="21" pos:column="20">1<pos:position pos:line="21" pos:column="21"/></literal></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">src_len<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">--<pos:position pos:line="22" pos:column="14"/></operator></expr>;<pos:position pos:line="22" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">src_copy<pos:position pos:line="23" pos:column="13"/></name><index pos:line="23" pos:column="13">[<expr><name pos:line="23" pos:column="14">src_len<pos:position pos:line="23" pos:column="21"/></name></expr>]<pos:position pos:line="23" pos:column="22"/></index></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <literal type="number" pos:line="23" pos:column="25">0<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if></elseif></if>

  <comment type="block" pos:line="26" pos:column="3">/* Split at special chars, capitalize first character, append to buffer. */</comment>
  <decl_stmt><decl><type><name pos:line="27" pos:column="3">char<pos:position pos:line="27" pos:column="7"/></name> <modifier pos:line="27" pos:column="8">*<pos:position pos:line="27" pos:column="9"/></modifier></type><name pos:line="27" pos:column="9">dummy<pos:position pos:line="27" pos:column="14"/></name> <init pos:line="27" pos:column="15">= <expr><name pos:line="27" pos:column="17">src_copy<pos:position pos:line="27" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="28" pos:column="3">char<pos:position pos:line="28" pos:column="7"/></name> <modifier pos:line="28" pos:column="8">*<pos:position pos:line="28" pos:column="9"/></modifier></type><name pos:line="28" pos:column="9">token<pos:position pos:line="28" pos:column="14"/></name></decl>;<pos:position pos:line="28" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="29" pos:column="3">char<pos:position pos:line="29" pos:column="7"/></name> <modifier pos:line="29" pos:column="8">*<pos:position pos:line="29" pos:column="9"/></modifier></type><name pos:line="29" pos:column="9">save_ptr<pos:position pos:line="29" pos:column="17"/></name> <init pos:line="29" pos:column="18">= <expr><name pos:line="29" pos:column="20">NULL<pos:position pos:line="29" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="25"/></decl_stmt>
  <while pos:line="30" pos:column="3">while <condition pos:line="30" pos:column="9">(<expr><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">token<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <call><name pos:line="30" pos:column="19">strtok_r<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">dummy<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="35">":_-+"<pos:position pos:line="30" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="43">&amp;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="44">save_ptr<pos:position pos:line="30" pos:column="52"/></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call><operator pos:line="30" pos:column="53">)<pos:position pos:line="30" pos:column="54"/></operator> <operator pos:line="30" pos:column="55">!=<pos:position pos:line="30" pos:column="57"/></operator> <name pos:line="30" pos:column="58">NULL<pos:position pos:line="30" pos:column="62"/></name></expr>)<pos:position pos:line="30" pos:column="63"/></condition> <block pos:line="30" pos:column="64">{
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">size_t<pos:position pos:line="31" pos:column="11"/></name></type> <name pos:line="31" pos:column="12">len<pos:position pos:line="31" pos:column="15"/></name></decl>;<pos:position pos:line="31" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="33" pos:column="5">dummy<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <name pos:line="33" pos:column="13">NULL<pos:position pos:line="33" pos:column="17"/></name></expr>;<pos:position pos:line="33" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="35" pos:column="5">token<pos:position pos:line="35" pos:column="10"/></name><index pos:line="35" pos:column="10">[<expr><literal type="number" pos:line="35" pos:column="11">0<pos:position pos:line="35" pos:column="12"/></literal></expr>]<pos:position pos:line="35" pos:column="13"/></index></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <call><name pos:line="35" pos:column="16">toupper<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><operator pos:line="35" pos:column="24">(<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">int<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">)<pos:position pos:line="35" pos:column="29"/></operator><name><name pos:line="35" pos:column="29">token<pos:position pos:line="35" pos:column="34"/></name><index pos:line="35" pos:column="34">[<expr><literal type="number" pos:line="35" pos:column="35">0<pos:position pos:line="35" pos:column="36"/></literal></expr>]<pos:position pos:line="35" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">assert<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><name pos:line="37" pos:column="12">ptr_size<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">&gt;<pos:position pos:line="37" pos:column="25"/></operator> <literal type="number" pos:line="37" pos:column="23">1<pos:position pos:line="37" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name pos:line="39" pos:column="5">len<pos:position pos:line="39" pos:column="8"/></name> <operator pos:line="39" pos:column="9">=<pos:position pos:line="39" pos:column="10"/></operator> <call><name pos:line="39" pos:column="11">strlen<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name pos:line="39" pos:column="18">token<pos:position pos:line="39" pos:column="23"/></name></expr></argument>)<pos:position pos:line="39" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">len<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">&gt;=<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="16">ptr_size<pos:position pos:line="40" pos:column="24"/></name></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="7">len<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">=<pos:position pos:line="41" pos:column="12"/></operator> <name pos:line="41" pos:column="13">ptr_size<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">-<pos:position pos:line="41" pos:column="23"/></operator> <literal type="number" pos:line="41" pos:column="24">1<pos:position pos:line="41" pos:column="25"/></literal></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">assert<pos:position pos:line="43" pos:column="11"/></name><argument_list pos:line="43" pos:column="11">(<argument><expr><name pos:line="43" pos:column="12">len<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">&gt;<pos:position pos:line="43" pos:column="20"/></operator> <literal type="number" pos:line="43" pos:column="18">0<pos:position pos:line="43" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">assert<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><name pos:line="44" pos:column="12">len<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">&lt;<pos:position pos:line="44" pos:column="20"/></operator> <name pos:line="44" pos:column="18">ptr_size<pos:position pos:line="44" pos:column="26"/></name></expr></argument>)<pos:position pos:line="44" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">sstrncpy<pos:position pos:line="46" pos:column="13"/></name><argument_list pos:line="46" pos:column="13">(<argument><expr><name pos:line="46" pos:column="14">ptr<pos:position pos:line="46" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="19">token<pos:position pos:line="46" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="26">len<pos:position pos:line="46" pos:column="29"/></name> <operator pos:line="46" pos:column="30">+<pos:position pos:line="46" pos:column="31"/></operator> <literal type="number" pos:line="46" pos:column="32">1<pos:position pos:line="46" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">ptr<pos:position pos:line="47" pos:column="8"/></name> <operator pos:line="47" pos:column="9">+=<pos:position pos:line="47" pos:column="11"/></operator> <name pos:line="47" pos:column="12">len<pos:position pos:line="47" pos:column="15"/></name></expr>;<pos:position pos:line="47" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="48" pos:column="5">ptr_size<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">-=<pos:position pos:line="48" pos:column="16"/></operator> <name pos:line="48" pos:column="17">len<pos:position pos:line="48" pos:column="20"/></name></expr>;<pos:position pos:line="48" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="50" pos:column="5">assert<pos:position pos:line="50" pos:column="11"/></name><argument_list pos:line="50" pos:column="11">(<argument><expr><operator pos:line="50" pos:column="12">*<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="13">ptr<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">==<pos:position pos:line="50" pos:column="19"/></operator> <literal type="number" pos:line="50" pos:column="20">0<pos:position pos:line="50" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="23"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">ptr_size<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">&lt;=<pos:position pos:line="51" pos:column="23"/></operator> <literal type="number" pos:line="51" pos:column="21">1<pos:position pos:line="51" pos:column="22"/></literal></expr>)<pos:position pos:line="51" pos:column="23"/></condition><then pos:line="51" pos:column="23">
      <block type="pseudo"><break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="53" pos:column="4"/></block></while>

  <comment type="block" pos:line="55" pos:column="3">/* Append "Plus" or "Minus" if "+" or "-" has been stripped above. */</comment>
  <if pos:line="56" pos:column="3">if <condition pos:line="56" pos:column="6">(<expr><name pos:line="56" pos:column="7">append_plus<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">||<pos:position pos:line="56" pos:column="21"/></operator> <name pos:line="56" pos:column="22">append_minus<pos:position pos:line="56" pos:column="34"/></name></expr>)<pos:position pos:line="56" pos:column="35"/></condition><then pos:line="56" pos:column="35"> <block pos:line="56" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="57" pos:column="5">char<pos:position pos:line="57" pos:column="9"/></name> <specifier pos:line="57" pos:column="10">const<pos:position pos:line="57" pos:column="15"/></specifier> <modifier pos:line="57" pos:column="16">*<pos:position pos:line="57" pos:column="17"/></modifier></type><name pos:line="57" pos:column="17">append<pos:position pos:line="57" pos:column="23"/></name> <init pos:line="57" pos:column="24">= <expr><literal type="string" pos:line="57" pos:column="26">"Plus"<pos:position pos:line="57" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="57" pos:column="33"/></decl_stmt>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">append_minus<pos:position pos:line="58" pos:column="21"/></name></expr>)<pos:position pos:line="58" pos:column="22"/></condition><then pos:line="58" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="7">append<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <literal type="string" pos:line="59" pos:column="16">"Minus"<pos:position pos:line="59" pos:column="23"/></literal></expr>;<pos:position pos:line="59" pos:column="24"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><name pos:line="61" pos:column="5">size_t<pos:position pos:line="61" pos:column="11"/></name></type> <name pos:line="61" pos:column="12">offset<pos:position pos:line="61" pos:column="18"/></name> <init pos:line="61" pos:column="19">= <expr><name pos:line="61" pos:column="21">buffer_size<pos:position pos:line="61" pos:column="32"/></name> <operator pos:line="61" pos:column="33">-<pos:position pos:line="61" pos:column="34"/></operator> <operator pos:line="61" pos:column="35">(<pos:position pos:line="61" pos:column="36"/></operator><call><name pos:line="61" pos:column="36">strlen<pos:position pos:line="61" pos:column="42"/></name><argument_list pos:line="61" pos:column="42">(<argument><expr><name pos:line="61" pos:column="43">append<pos:position pos:line="61" pos:column="49"/></name></expr></argument>)<pos:position pos:line="61" pos:column="50"/></argument_list></call> <operator pos:line="61" pos:column="51">+<pos:position pos:line="61" pos:column="52"/></operator> <literal type="number" pos:line="61" pos:column="53">1<pos:position pos:line="61" pos:column="54"/></literal><operator pos:line="61" pos:column="54">)<pos:position pos:line="61" pos:column="55"/></operator></expr></init></decl>;<pos:position pos:line="61" pos:column="56"/></decl_stmt>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">offset<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">&gt;<pos:position pos:line="62" pos:column="20"/></operator> <call><name pos:line="62" pos:column="18">strlen<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><name pos:line="62" pos:column="25">buffer<pos:position pos:line="62" pos:column="31"/></name></expr></argument>)<pos:position pos:line="62" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="33"/></condition><then pos:line="62" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="7">offset<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">=<pos:position pos:line="63" pos:column="15"/></operator> <call><name pos:line="63" pos:column="16">strlen<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><name pos:line="63" pos:column="23">buffer<pos:position pos:line="63" pos:column="29"/></name></expr></argument>)<pos:position pos:line="63" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="31"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="65" pos:column="5">sstrncpy<pos:position pos:line="65" pos:column="13"/></name><argument_list pos:line="65" pos:column="13">(<argument><expr><name pos:line="65" pos:column="14">buffer<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">+<pos:position pos:line="65" pos:column="22"/></operator> <name pos:line="65" pos:column="23">offset<pos:position pos:line="65" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="31">append<pos:position pos:line="65" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="39">buffer_size<pos:position pos:line="65" pos:column="50"/></name> <operator pos:line="65" pos:column="51">-<pos:position pos:line="65" pos:column="52"/></operator> <name pos:line="65" pos:column="53">offset<pos:position pos:line="65" pos:column="59"/></name></expr></argument>)<pos:position pos:line="65" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="66" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="68" pos:column="3">sfree<pos:position pos:line="68" pos:column="8"/></name><argument_list pos:line="68" pos:column="8">(<argument><expr><name pos:line="68" pos:column="9">src_copy<pos:position pos:line="68" pos:column="17"/></name></expr></argument>)<pos:position pos:line="68" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="19"/></expr_stmt>
  <return pos:line="69" pos:column="3">return <expr><literal type="number" pos:line="69" pos:column="10">0<pos:position pos:line="69" pos:column="11"/></literal></expr>;<pos:position pos:line="69" pos:column="12"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

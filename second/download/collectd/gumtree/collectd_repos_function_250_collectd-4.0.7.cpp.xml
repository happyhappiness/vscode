<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_250_collectd-4.0.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">iptables_config<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">key<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">value<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">strcasecmp<pos:position pos:line="3" pos:column="23"/></name> <argument_list pos:line="3" pos:column="24">(<argument><expr><name pos:line="3" pos:column="25">key<pos:position pos:line="3" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="30">"Chain"<pos:position pos:line="3" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="38"/></argument_list></call> <operator pos:line="3" pos:column="39">==<pos:position pos:line="3" pos:column="41"/></operator> <literal type="number" pos:line="3" pos:column="42">0<pos:position pos:line="3" pos:column="43"/></literal></expr>)<pos:position pos:line="3" pos:column="44"/></condition><then pos:line="3" pos:column="44">
	<block pos:line="4" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">ip_chain_t<pos:position pos:line="5" pos:column="27"/></name></type> <name pos:line="5" pos:column="28">temp<pos:position pos:line="5" pos:column="32"/></name></decl>, <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="35">final<pos:position pos:line="5" pos:column="40"/></name></decl>, <modifier pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></modifier><modifier pos:line="5" pos:column="43">*<pos:position pos:line="5" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="44">list<pos:position pos:line="5" pos:column="48"/></name></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">char<pos:position pos:line="6" pos:column="21"/></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">table<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type>   <name pos:line="7" pos:column="23">table_len<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">char<pos:position pos:line="8" pos:column="21"/></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">chain<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type>   <name pos:line="9" pos:column="23">chain_len<pos:position pos:line="9" pos:column="32"/></name></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="11" pos:column="17">char<pos:position pos:line="11" pos:column="21"/></name> <modifier pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></modifier></type><name pos:line="11" pos:column="23">value_copy<pos:position pos:line="11" pos:column="33"/></name></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">char<pos:position pos:line="12" pos:column="21"/></name> <modifier pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></modifier></type><name><name pos:line="12" pos:column="23">fields<pos:position pos:line="12" pos:column="29"/></name><index pos:line="12" pos:column="29">[<expr><literal type="number" pos:line="12" pos:column="30">4<pos:position pos:line="12" pos:column="31"/></literal></expr>]<pos:position pos:line="12" pos:column="32"/></index></name></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">int<pos:position pos:line="13" pos:column="20"/></name></type>   <name pos:line="13" pos:column="23">fields_num<pos:position pos:line="13" pos:column="33"/></name></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
		
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">memset<pos:position pos:line="15" pos:column="23"/></name> <argument_list pos:line="15" pos:column="24">(<argument><expr><operator pos:line="15" pos:column="25">&amp;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="26">temp<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="32">0<pos:position pos:line="15" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="35">sizeof <argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">temp<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>

		<expr_stmt><expr><name pos:line="17" pos:column="17">value_copy<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <call><name pos:line="17" pos:column="30">strdup<pos:position pos:line="17" pos:column="36"/></name> <argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">value<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">value_copy<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">==<pos:position pos:line="18" pos:column="34"/></operator> <name pos:line="18" pos:column="35">NULL<pos:position pos:line="18" pos:column="39"/></name></expr>)<pos:position pos:line="18" pos:column="40"/></condition><then pos:line="18" pos:column="40">
		<block pos:line="19" pos:column="17">{
		    <decl_stmt><decl><type><name pos:line="20" pos:column="21">char<pos:position pos:line="20" pos:column="25"/></name></type> <name><name pos:line="20" pos:column="26">errbuf<pos:position pos:line="20" pos:column="32"/></name><index pos:line="20" pos:column="32">[<expr><literal type="number" pos:line="20" pos:column="33">1024<pos:position pos:line="20" pos:column="37"/></literal></expr>]<pos:position pos:line="20" pos:column="38"/></index></name></decl>;<pos:position pos:line="20" pos:column="39"/></decl_stmt>
		    <expr_stmt><expr><call><name pos:line="21" pos:column="21">ERROR<pos:position pos:line="21" pos:column="26"/></name> <argument_list pos:line="21" pos:column="27">(<argument><expr><literal type="string" pos:line="21" pos:column="28">"strdup failed: %s"<pos:position pos:line="21" pos:column="47"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="22" pos:column="29">sstrerror<pos:position pos:line="22" pos:column="38"/></name> <argument_list pos:line="22" pos:column="39">(<argument><expr><name pos:line="22" pos:column="40">errno<pos:position pos:line="22" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="47">errbuf<pos:position pos:line="22" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="55">sizeof <argument_list pos:line="22" pos:column="62">(<argument><expr><name pos:line="22" pos:column="63">errbuf<pos:position pos:line="22" pos:column="69"/></name></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="73"/></expr_stmt>
		    <return pos:line="23" pos:column="21">return <expr><operator pos:line="23" pos:column="28">(<pos:position pos:line="23" pos:column="29"/></operator><literal type="number" pos:line="23" pos:column="29">1<pos:position pos:line="23" pos:column="30"/></literal><operator pos:line="23" pos:column="30">)<pos:position pos:line="23" pos:column="31"/></operator></expr>;<pos:position pos:line="23" pos:column="32"/></return>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="26" pos:column="17">/* Chain &lt;table&gt; &lt;chain&gt; [&lt;comment|num&gt; [name]] */</comment>
		<expr_stmt><expr><name pos:line="27" pos:column="17">fields_num<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <call><name pos:line="27" pos:column="30">strsplit<pos:position pos:line="27" pos:column="38"/></name> <argument_list pos:line="27" pos:column="39">(<argument><expr><name pos:line="27" pos:column="40">value_copy<pos:position pos:line="27" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="52">fields<pos:position pos:line="27" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="60">4<pos:position pos:line="27" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="63"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">fields_num<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">&lt;<pos:position pos:line="28" pos:column="36"/></operator> <literal type="number" pos:line="28" pos:column="34">2<pos:position pos:line="28" pos:column="35"/></literal></expr>)<pos:position pos:line="28" pos:column="36"/></condition><then pos:line="28" pos:column="36">
		<block pos:line="29" pos:column="17">{
		    <expr_stmt><expr><call><name pos:line="30" pos:column="21">free<pos:position pos:line="30" pos:column="25"/></name> <argument_list pos:line="30" pos:column="26">(<argument><expr><name pos:line="30" pos:column="27">value_copy<pos:position pos:line="30" pos:column="37"/></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
		    <return pos:line="31" pos:column="21">return <expr><operator pos:line="31" pos:column="28">(<pos:position pos:line="31" pos:column="29"/></operator><literal type="number" pos:line="31" pos:column="29">1<pos:position pos:line="31" pos:column="30"/></literal><operator pos:line="31" pos:column="30">)<pos:position pos:line="31" pos:column="31"/></operator></expr>;<pos:position pos:line="31" pos:column="32"/></return>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="34" pos:column="17">table<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <name><name pos:line="34" pos:column="25">fields<pos:position pos:line="34" pos:column="31"/></name><index pos:line="34" pos:column="31">[<expr><literal type="number" pos:line="34" pos:column="32">0<pos:position pos:line="34" pos:column="33"/></literal></expr>]<pos:position pos:line="34" pos:column="34"/></index></name></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">chain<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <name><name pos:line="35" pos:column="25">fields<pos:position pos:line="35" pos:column="31"/></name><index pos:line="35" pos:column="31">[<expr><literal type="number" pos:line="35" pos:column="32">1<pos:position pos:line="35" pos:column="33"/></literal></expr>]<pos:position pos:line="35" pos:column="34"/></index></name></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>

		<expr_stmt><expr><name pos:line="37" pos:column="17">table_len<pos:position pos:line="37" pos:column="26"/></name> <operator pos:line="37" pos:column="27">=<pos:position pos:line="37" pos:column="28"/></operator> <call><name pos:line="37" pos:column="29">strlen<pos:position pos:line="37" pos:column="35"/></name> <argument_list pos:line="37" pos:column="36">(<argument><expr><name pos:line="37" pos:column="37">table<pos:position pos:line="37" pos:column="42"/></name></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">table_len<pos:position pos:line="38" pos:column="30"/></name> <operator pos:line="38" pos:column="31">&gt;=<pos:position pos:line="38" pos:column="36"/></operator> <sizeof pos:line="38" pos:column="34">sizeof<argument_list pos:line="38" pos:column="40">(<argument><expr><name><name pos:line="38" pos:column="41">temp<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">.<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="46">table<pos:position pos:line="38" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></sizeof></expr>)<pos:position pos:line="38" pos:column="53"/></condition><then pos:line="38" pos:column="53">
		<block pos:line="39" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">ERROR<pos:position pos:line="40" pos:column="30"/></name> <argument_list pos:line="40" pos:column="31">(<argument><expr><literal type="string" pos:line="40" pos:column="32">"Table `%s' too long."<pos:position pos:line="40" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="56">table<pos:position pos:line="40" pos:column="61"/></name></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">free<pos:position pos:line="41" pos:column="29"/></name> <argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">value_copy<pos:position pos:line="41" pos:column="41"/></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>
			<return pos:line="42" pos:column="25">return <expr><operator pos:line="42" pos:column="32">(<pos:position pos:line="42" pos:column="33"/></operator><literal type="number" pos:line="42" pos:column="33">1<pos:position pos:line="42" pos:column="34"/></literal><operator pos:line="42" pos:column="34">)<pos:position pos:line="42" pos:column="35"/></operator></expr>;<pos:position pos:line="42" pos:column="36"/></return>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">strncpy<pos:position pos:line="44" pos:column="24"/></name> <argument_list pos:line="44" pos:column="25">(<argument><expr><name><name pos:line="44" pos:column="26">temp<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">.<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="31">table<pos:position pos:line="44" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="38">table<pos:position pos:line="44" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="45">table_len<pos:position pos:line="44" pos:column="54"/></name></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="45" pos:column="17">temp<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">.<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="22">table<pos:position pos:line="45" pos:column="27"/></name><index pos:line="45" pos:column="27">[<expr><name pos:line="45" pos:column="28">table_len<pos:position pos:line="45" pos:column="37"/></name></expr>]<pos:position pos:line="45" pos:column="38"/></index></name> <operator pos:line="45" pos:column="39">=<pos:position pos:line="45" pos:column="40"/></operator> <literal type="char" pos:line="45" pos:column="41">'\0'<pos:position pos:line="45" pos:column="45"/></literal></expr>;<pos:position pos:line="45" pos:column="46"/></expr_stmt>

		<expr_stmt><expr><name pos:line="47" pos:column="17">chain_len<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">=<pos:position pos:line="47" pos:column="28"/></operator> <call><name pos:line="47" pos:column="29">strlen<pos:position pos:line="47" pos:column="35"/></name> <argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">chain<pos:position pos:line="47" pos:column="42"/></name></expr></argument>)<pos:position pos:line="47" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="44"/></expr_stmt>
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name pos:line="48" pos:column="21">chain_len<pos:position pos:line="48" pos:column="30"/></name> <operator pos:line="48" pos:column="31">&gt;=<pos:position pos:line="48" pos:column="36"/></operator> <sizeof pos:line="48" pos:column="34">sizeof<argument_list pos:line="48" pos:column="40">(<argument><expr><name><name pos:line="48" pos:column="41">temp<pos:position pos:line="48" pos:column="45"/></name><operator pos:line="48" pos:column="45">.<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="46">chain<pos:position pos:line="48" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></sizeof></expr>)<pos:position pos:line="48" pos:column="53"/></condition><then pos:line="48" pos:column="53">
		<block pos:line="49" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="50" pos:column="25">ERROR<pos:position pos:line="50" pos:column="30"/></name> <argument_list pos:line="50" pos:column="31">(<argument><expr><literal type="string" pos:line="50" pos:column="32">"Chain `%s' too long."<pos:position pos:line="50" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="56">chain<pos:position pos:line="50" pos:column="61"/></name></expr></argument>)<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="51" pos:column="25">free<pos:position pos:line="51" pos:column="29"/></name> <argument_list pos:line="51" pos:column="30">(<argument><expr><name pos:line="51" pos:column="31">value_copy<pos:position pos:line="51" pos:column="41"/></name></expr></argument>)<pos:position pos:line="51" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="43"/></expr_stmt>
			<return pos:line="52" pos:column="25">return <expr><operator pos:line="52" pos:column="32">(<pos:position pos:line="52" pos:column="33"/></operator><literal type="number" pos:line="52" pos:column="33">1<pos:position pos:line="52" pos:column="34"/></literal><operator pos:line="52" pos:column="34">)<pos:position pos:line="52" pos:column="35"/></operator></expr>;<pos:position pos:line="52" pos:column="36"/></return>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">strncpy<pos:position pos:line="54" pos:column="24"/></name> <argument_list pos:line="54" pos:column="25">(<argument><expr><name><name pos:line="54" pos:column="26">temp<pos:position pos:line="54" pos:column="30"/></name><operator pos:line="54" pos:column="30">.<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="31">chain<pos:position pos:line="54" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="38">chain<pos:position pos:line="54" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="45">chain_len<pos:position pos:line="54" pos:column="54"/></name></expr></argument>)<pos:position pos:line="54" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="55" pos:column="17">temp<pos:position pos:line="55" pos:column="21"/></name><operator pos:line="55" pos:column="21">.<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="22">chain<pos:position pos:line="55" pos:column="27"/></name><index pos:line="55" pos:column="27">[<expr><name pos:line="55" pos:column="28">chain_len<pos:position pos:line="55" pos:column="37"/></name></expr>]<pos:position pos:line="55" pos:column="38"/></index></name> <operator pos:line="55" pos:column="39">=<pos:position pos:line="55" pos:column="40"/></operator> <literal type="char" pos:line="55" pos:column="41">'\0'<pos:position pos:line="55" pos:column="45"/></literal></expr>;<pos:position pos:line="55" pos:column="46"/></expr_stmt> 

		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><name pos:line="57" pos:column="21">fields_num<pos:position pos:line="57" pos:column="31"/></name> <operator pos:line="57" pos:column="32">&gt;=<pos:position pos:line="57" pos:column="37"/></operator> <literal type="number" pos:line="57" pos:column="35">3<pos:position pos:line="57" pos:column="36"/></literal></expr>)<pos:position pos:line="57" pos:column="37"/></condition><then pos:line="57" pos:column="37">
		<block pos:line="58" pos:column="17">{
		    <decl_stmt><decl><type><name pos:line="59" pos:column="21">char<pos:position pos:line="59" pos:column="25"/></name> <modifier pos:line="59" pos:column="26">*<pos:position pos:line="59" pos:column="27"/></modifier></type><name pos:line="59" pos:column="27">comment<pos:position pos:line="59" pos:column="34"/></name> <init pos:line="59" pos:column="35">= <expr><name><name pos:line="59" pos:column="37">fields<pos:position pos:line="59" pos:column="43"/></name><index pos:line="59" pos:column="43">[<expr><literal type="number" pos:line="59" pos:column="44">2<pos:position pos:line="59" pos:column="45"/></literal></expr>]<pos:position pos:line="59" pos:column="46"/></index></name></expr></init></decl>;<pos:position pos:line="59" pos:column="47"/></decl_stmt>
		    <decl_stmt><decl><type><name pos:line="60" pos:column="21">int<pos:position pos:line="60" pos:column="24"/></name></type>   <name pos:line="60" pos:column="27">rule<pos:position pos:line="60" pos:column="31"/></name> <init pos:line="60" pos:column="32">= <expr><call><name pos:line="60" pos:column="34">atoi<pos:position pos:line="60" pos:column="38"/></name> <argument_list pos:line="60" pos:column="39">(<argument><expr><name pos:line="60" pos:column="40">comment<pos:position pos:line="60" pos:column="47"/></name></expr></argument>)<pos:position pos:line="60" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="60" pos:column="49"/></decl_stmt>

		    <if pos:line="62" pos:column="21">if <condition pos:line="62" pos:column="24">(<expr><name pos:line="62" pos:column="25">rule<pos:position pos:line="62" pos:column="29"/></name></expr>)<pos:position pos:line="62" pos:column="30"/></condition><then pos:line="62" pos:column="30">
		    <block pos:line="63" pos:column="21">{
			<expr_stmt><expr><name><name pos:line="64" pos:column="25">temp<pos:position pos:line="64" pos:column="29"/></name><operator pos:line="64" pos:column="29">.<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="30">rule<pos:position pos:line="64" pos:column="34"/></name><operator pos:line="64" pos:column="34">.<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="35">num<pos:position pos:line="64" pos:column="38"/></name></name> <operator pos:line="64" pos:column="39">=<pos:position pos:line="64" pos:column="40"/></operator> <name pos:line="64" pos:column="41">rule<pos:position pos:line="64" pos:column="45"/></name></expr>;<pos:position pos:line="64" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="65" pos:column="25">temp<pos:position pos:line="65" pos:column="29"/></name><operator pos:line="65" pos:column="29">.<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="30">rule_type<pos:position pos:line="65" pos:column="39"/></name></name> <operator pos:line="65" pos:column="40">=<pos:position pos:line="65" pos:column="41"/></operator> <name pos:line="65" pos:column="42">RTYPE_NUM<pos:position pos:line="65" pos:column="51"/></name></expr>;<pos:position pos:line="65" pos:column="52"/></expr_stmt>
		    }<pos:position pos:line="66" pos:column="22"/></block></then>
		    <else pos:line="67" pos:column="21">else
		    <block pos:line="68" pos:column="21">{
			<expr_stmt><expr><name><name pos:line="69" pos:column="25">temp<pos:position pos:line="69" pos:column="29"/></name><operator pos:line="69" pos:column="29">.<pos:position pos:line="69" pos:column="30"/></operator><name pos:line="69" pos:column="30">rule<pos:position pos:line="69" pos:column="34"/></name><operator pos:line="69" pos:column="34">.<pos:position pos:line="69" pos:column="35"/></operator><name pos:line="69" pos:column="35">comment<pos:position pos:line="69" pos:column="42"/></name></name> <operator pos:line="69" pos:column="43">=<pos:position pos:line="69" pos:column="44"/></operator> <call><name pos:line="69" pos:column="45">strdup<pos:position pos:line="69" pos:column="51"/></name> <argument_list pos:line="69" pos:column="52">(<argument><expr><name pos:line="69" pos:column="53">comment<pos:position pos:line="69" pos:column="60"/></name></expr></argument>)<pos:position pos:line="69" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="62"/></expr_stmt>
			<if pos:line="70" pos:column="25">if <condition pos:line="70" pos:column="28">(<expr><name><name pos:line="70" pos:column="29">temp<pos:position pos:line="70" pos:column="33"/></name><operator pos:line="70" pos:column="33">.<pos:position pos:line="70" pos:column="34"/></operator><name pos:line="70" pos:column="34">rule<pos:position pos:line="70" pos:column="38"/></name><operator pos:line="70" pos:column="38">.<pos:position pos:line="70" pos:column="39"/></operator><name pos:line="70" pos:column="39">comment<pos:position pos:line="70" pos:column="46"/></name></name> <operator pos:line="70" pos:column="47">==<pos:position pos:line="70" pos:column="49"/></operator> <name pos:line="70" pos:column="50">NULL<pos:position pos:line="70" pos:column="54"/></name></expr>)<pos:position pos:line="70" pos:column="55"/></condition><then pos:line="70" pos:column="55">
			<block pos:line="71" pos:column="25">{
			    <expr_stmt><expr><call><name pos:line="72" pos:column="29">free<pos:position pos:line="72" pos:column="33"/></name> <argument_list pos:line="72" pos:column="34">(<argument><expr><name pos:line="72" pos:column="35">value_copy<pos:position pos:line="72" pos:column="45"/></name></expr></argument>)<pos:position pos:line="72" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="47"/></expr_stmt>
			    <return pos:line="73" pos:column="29">return <expr><operator pos:line="73" pos:column="36">(<pos:position pos:line="73" pos:column="37"/></operator><literal type="number" pos:line="73" pos:column="37">1<pos:position pos:line="73" pos:column="38"/></literal><operator pos:line="73" pos:column="38">)<pos:position pos:line="73" pos:column="39"/></operator></expr>;<pos:position pos:line="73" pos:column="40"/></return>
			}<pos:position pos:line="74" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name><name pos:line="75" pos:column="25">temp<pos:position pos:line="75" pos:column="29"/></name><operator pos:line="75" pos:column="29">.<pos:position pos:line="75" pos:column="30"/></operator><name pos:line="75" pos:column="30">rule_type<pos:position pos:line="75" pos:column="39"/></name></name> <operator pos:line="75" pos:column="40">=<pos:position pos:line="75" pos:column="41"/></operator> <name pos:line="75" pos:column="42">RTYPE_COMMENT<pos:position pos:line="75" pos:column="55"/></name></expr>;<pos:position pos:line="75" pos:column="56"/></expr_stmt>
		    }<pos:position pos:line="76" pos:column="22"/></block></else></if>
		}<pos:position pos:line="77" pos:column="18"/></block></then>
		<else pos:line="78" pos:column="17">else
		<block pos:line="79" pos:column="17">{
		    <expr_stmt><expr><name><name pos:line="80" pos:column="21">temp<pos:position pos:line="80" pos:column="25"/></name><operator pos:line="80" pos:column="25">.<pos:position pos:line="80" pos:column="26"/></operator><name pos:line="80" pos:column="26">rule_type<pos:position pos:line="80" pos:column="35"/></name></name> <operator pos:line="80" pos:column="36">=<pos:position pos:line="80" pos:column="37"/></operator> <name pos:line="80" pos:column="38">RTYPE_COMMENT_ALL<pos:position pos:line="80" pos:column="55"/></name></expr>;<pos:position pos:line="80" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="81" pos:column="18"/></block></else></if>

		<if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><name pos:line="83" pos:column="21">fields_num<pos:position pos:line="83" pos:column="31"/></name> <operator pos:line="83" pos:column="32">&gt;=<pos:position pos:line="83" pos:column="37"/></operator> <literal type="number" pos:line="83" pos:column="35">4<pos:position pos:line="83" pos:column="36"/></literal></expr>)<pos:position pos:line="83" pos:column="37"/></condition><then pos:line="83" pos:column="37">
		    <block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="21">strncpy<pos:position pos:line="84" pos:column="28"/></name> <argument_list pos:line="84" pos:column="29">(<argument><expr><name><name pos:line="84" pos:column="30">temp<pos:position pos:line="84" pos:column="34"/></name><operator pos:line="84" pos:column="34">.<pos:position pos:line="84" pos:column="35"/></operator><name pos:line="84" pos:column="35">name<pos:position pos:line="84" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="41">fields<pos:position pos:line="84" pos:column="47"/></name><index pos:line="84" pos:column="47">[<expr><literal type="number" pos:line="84" pos:column="48">3<pos:position pos:line="84" pos:column="49"/></literal></expr>]<pos:position pos:line="84" pos:column="50"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="52">sizeof <argument_list pos:line="84" pos:column="59">(<argument><expr><name><name pos:line="84" pos:column="60">temp<pos:position pos:line="84" pos:column="64"/></name><operator pos:line="84" pos:column="64">.<pos:position pos:line="84" pos:column="65"/></operator><name pos:line="84" pos:column="65">name<pos:position pos:line="84" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="70"/></argument_list></sizeof> <operator pos:line="84" pos:column="71">-<pos:position pos:line="84" pos:column="72"/></operator> <literal type="number" pos:line="84" pos:column="73">1<pos:position pos:line="84" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="76"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="86" pos:column="17">free<pos:position pos:line="86" pos:column="21"/></name> <argument_list pos:line="86" pos:column="22">(<argument><expr><name pos:line="86" pos:column="23">value_copy<pos:position pos:line="86" pos:column="33"/></name></expr></argument>)<pos:position pos:line="86" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="87" pos:column="17">value_copy<pos:position pos:line="87" pos:column="27"/></name> <operator pos:line="87" pos:column="28">=<pos:position pos:line="87" pos:column="29"/></operator> <name pos:line="87" pos:column="30">NULL<pos:position pos:line="87" pos:column="34"/></name></expr>;<pos:position pos:line="87" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="88" pos:column="17">table<pos:position pos:line="88" pos:column="22"/></name> <operator pos:line="88" pos:column="23">=<pos:position pos:line="88" pos:column="24"/></operator> <name pos:line="88" pos:column="25">NULL<pos:position pos:line="88" pos:column="29"/></name></expr>;<pos:position pos:line="88" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="89" pos:column="17">chain<pos:position pos:line="89" pos:column="22"/></name> <operator pos:line="89" pos:column="23">=<pos:position pos:line="89" pos:column="24"/></operator> <name pos:line="89" pos:column="25">NULL<pos:position pos:line="89" pos:column="29"/></name></expr>;<pos:position pos:line="89" pos:column="30"/></expr_stmt>

		<expr_stmt><expr><name pos:line="91" pos:column="17">list<pos:position pos:line="91" pos:column="21"/></name> <operator pos:line="91" pos:column="22">=<pos:position pos:line="91" pos:column="23"/></operator> <operator pos:line="91" pos:column="24">(<pos:position pos:line="91" pos:column="25"/></operator><name pos:line="91" pos:column="25">ip_chain_t<pos:position pos:line="91" pos:column="35"/></name> <operator pos:line="91" pos:column="36">*<pos:position pos:line="91" pos:column="37"/></operator><operator pos:line="91" pos:column="37">*<pos:position pos:line="91" pos:column="38"/></operator><operator pos:line="91" pos:column="38">)<pos:position pos:line="91" pos:column="39"/></operator> <call><name pos:line="91" pos:column="40">realloc<pos:position pos:line="91" pos:column="47"/></name> <argument_list pos:line="91" pos:column="48">(<argument><expr><name pos:line="91" pos:column="49">chain_list<pos:position pos:line="91" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="61">(<pos:position pos:line="91" pos:column="62"/></operator><name pos:line="91" pos:column="62">chain_num<pos:position pos:line="91" pos:column="71"/></name> <operator pos:line="91" pos:column="72">+<pos:position pos:line="91" pos:column="73"/></operator> <literal type="number" pos:line="91" pos:column="74">1<pos:position pos:line="91" pos:column="75"/></literal><operator pos:line="91" pos:column="75">)<pos:position pos:line="91" pos:column="76"/></operator> <operator pos:line="91" pos:column="77">*<pos:position pos:line="91" pos:column="78"/></operator> <sizeof pos:line="91" pos:column="79">sizeof <argument_list pos:line="91" pos:column="86">(<argument><expr><name pos:line="91" pos:column="87">ip_chain_t<pos:position pos:line="91" pos:column="97"/></name> <operator pos:line="91" pos:column="98">*<pos:position pos:line="91" pos:column="99"/></operator></expr></argument>)<pos:position pos:line="91" pos:column="100"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="91" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="102"/></expr_stmt>
		<if pos:line="92" pos:column="17">if <condition pos:line="92" pos:column="20">(<expr><name pos:line="92" pos:column="21">list<pos:position pos:line="92" pos:column="25"/></name> <operator pos:line="92" pos:column="26">==<pos:position pos:line="92" pos:column="28"/></operator> <name pos:line="92" pos:column="29">NULL<pos:position pos:line="92" pos:column="33"/></name></expr>)<pos:position pos:line="92" pos:column="34"/></condition><then pos:line="92" pos:column="34">
		<block pos:line="93" pos:column="17">{
		    <decl_stmt><decl><type><name pos:line="94" pos:column="21">char<pos:position pos:line="94" pos:column="25"/></name></type> <name><name pos:line="94" pos:column="26">errbuf<pos:position pos:line="94" pos:column="32"/></name><index pos:line="94" pos:column="32">[<expr><literal type="number" pos:line="94" pos:column="33">1024<pos:position pos:line="94" pos:column="37"/></literal></expr>]<pos:position pos:line="94" pos:column="38"/></index></name></decl>;<pos:position pos:line="94" pos:column="39"/></decl_stmt>
		    <expr_stmt><expr><call><name pos:line="95" pos:column="21">ERROR<pos:position pos:line="95" pos:column="26"/></name> <argument_list pos:line="95" pos:column="27">(<argument><expr><literal type="string" pos:line="95" pos:column="28">"realloc failed: %s"<pos:position pos:line="95" pos:column="48"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="96" pos:column="29">sstrerror<pos:position pos:line="96" pos:column="38"/></name> <argument_list pos:line="96" pos:column="39">(<argument><expr><name pos:line="96" pos:column="40">errno<pos:position pos:line="96" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="47">errbuf<pos:position pos:line="96" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="96" pos:column="55">sizeof <argument_list pos:line="96" pos:column="62">(<argument><expr><name pos:line="96" pos:column="63">errbuf<pos:position pos:line="96" pos:column="69"/></name></expr></argument>)<pos:position pos:line="96" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="96" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="73"/></expr_stmt>
		    <return pos:line="97" pos:column="21">return <expr><operator pos:line="97" pos:column="28">(<pos:position pos:line="97" pos:column="29"/></operator><literal type="number" pos:line="97" pos:column="29">1<pos:position pos:line="97" pos:column="30"/></literal><operator pos:line="97" pos:column="30">)<pos:position pos:line="97" pos:column="31"/></operator></expr>;<pos:position pos:line="97" pos:column="32"/></return>
		}<pos:position pos:line="98" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="100" pos:column="17">chain_list<pos:position pos:line="100" pos:column="27"/></name> <operator pos:line="100" pos:column="28">=<pos:position pos:line="100" pos:column="29"/></operator> <name pos:line="100" pos:column="30">list<pos:position pos:line="100" pos:column="34"/></name></expr>;<pos:position pos:line="100" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="101" pos:column="17">final<pos:position pos:line="101" pos:column="22"/></name> <operator pos:line="101" pos:column="23">=<pos:position pos:line="101" pos:column="24"/></operator> <operator pos:line="101" pos:column="25">(<pos:position pos:line="101" pos:column="26"/></operator><name pos:line="101" pos:column="26">ip_chain_t<pos:position pos:line="101" pos:column="36"/></name> <operator pos:line="101" pos:column="37">*<pos:position pos:line="101" pos:column="38"/></operator><operator pos:line="101" pos:column="38">)<pos:position pos:line="101" pos:column="39"/></operator> <call><name pos:line="101" pos:column="40">malloc<pos:position pos:line="101" pos:column="46"/></name><argument_list pos:line="101" pos:column="46">( <argument><expr><sizeof pos:line="101" pos:column="48">sizeof<argument_list pos:line="101" pos:column="54">(<argument><expr><name pos:line="101" pos:column="55">temp<pos:position pos:line="101" pos:column="59"/></name></expr></argument>)<pos:position pos:line="101" pos:column="60"/></argument_list></sizeof></expr></argument> )<pos:position pos:line="101" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="63"/></expr_stmt>
		<if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><name pos:line="102" pos:column="21">final<pos:position pos:line="102" pos:column="26"/></name> <operator pos:line="102" pos:column="27">==<pos:position pos:line="102" pos:column="29"/></operator> <name pos:line="102" pos:column="30">NULL<pos:position pos:line="102" pos:column="34"/></name></expr>)<pos:position pos:line="102" pos:column="35"/></condition><then pos:line="102" pos:column="35"> 
		<block pos:line="103" pos:column="17">{
		    <decl_stmt><decl><type><name pos:line="104" pos:column="21">char<pos:position pos:line="104" pos:column="25"/></name></type> <name><name pos:line="104" pos:column="26">errbuf<pos:position pos:line="104" pos:column="32"/></name><index pos:line="104" pos:column="32">[<expr><literal type="number" pos:line="104" pos:column="33">1024<pos:position pos:line="104" pos:column="37"/></literal></expr>]<pos:position pos:line="104" pos:column="38"/></index></name></decl>;<pos:position pos:line="104" pos:column="39"/></decl_stmt>
		    <expr_stmt><expr><call><name pos:line="105" pos:column="21">ERROR<pos:position pos:line="105" pos:column="26"/></name> <argument_list pos:line="105" pos:column="27">(<argument><expr><literal type="string" pos:line="105" pos:column="28">"malloc failed: %s"<pos:position pos:line="105" pos:column="47"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="106" pos:column="29">sstrerror<pos:position pos:line="106" pos:column="38"/></name> <argument_list pos:line="106" pos:column="39">(<argument><expr><name pos:line="106" pos:column="40">errno<pos:position pos:line="106" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="47">errbuf<pos:position pos:line="106" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="106" pos:column="55">sizeof <argument_list pos:line="106" pos:column="62">(<argument><expr><name pos:line="106" pos:column="63">errbuf<pos:position pos:line="106" pos:column="69"/></name></expr></argument>)<pos:position pos:line="106" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="106" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="106" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="73"/></expr_stmt>
		    <return pos:line="107" pos:column="21">return <expr><operator pos:line="107" pos:column="28">(<pos:position pos:line="107" pos:column="29"/></operator><literal type="number" pos:line="107" pos:column="29">1<pos:position pos:line="107" pos:column="30"/></literal><operator pos:line="107" pos:column="30">)<pos:position pos:line="107" pos:column="31"/></operator></expr>;<pos:position pos:line="107" pos:column="32"/></return>
		}<pos:position pos:line="108" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="109" pos:column="17">memcpy<pos:position pos:line="109" pos:column="23"/></name> <argument_list pos:line="109" pos:column="24">(<argument><expr><name pos:line="109" pos:column="25">final<pos:position pos:line="109" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="32">&amp;<pos:position pos:line="109" pos:column="37"/></operator><name pos:line="109" pos:column="33">temp<pos:position pos:line="109" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="109" pos:column="39">sizeof <argument_list pos:line="109" pos:column="46">(<argument><expr><name pos:line="109" pos:column="47">temp<pos:position pos:line="109" pos:column="51"/></name></expr></argument>)<pos:position pos:line="109" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="109" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="110" pos:column="17">chain_list<pos:position pos:line="110" pos:column="27"/></name><index pos:line="110" pos:column="27">[<expr><name pos:line="110" pos:column="28">chain_num<pos:position pos:line="110" pos:column="37"/></name></expr>]<pos:position pos:line="110" pos:column="38"/></index></name> <operator pos:line="110" pos:column="39">=<pos:position pos:line="110" pos:column="40"/></operator> <name pos:line="110" pos:column="41">final<pos:position pos:line="110" pos:column="46"/></name></expr>;<pos:position pos:line="110" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="111" pos:column="17">chain_num<pos:position pos:line="111" pos:column="26"/></name><operator pos:line="111" pos:column="26">++<pos:position pos:line="111" pos:column="28"/></operator></expr>;<pos:position pos:line="111" pos:column="29"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="113" pos:column="17">DEBUG<pos:position pos:line="113" pos:column="22"/></name> <argument_list pos:line="113" pos:column="23">(<argument><expr><literal type="string" pos:line="113" pos:column="24">"Chain #%i: table = %s; chain = %s;"<pos:position pos:line="113" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="62">chain_num<pos:position pos:line="113" pos:column="71"/></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="73">final<pos:position pos:line="113" pos:column="78"/></name><operator pos:line="113" pos:column="78">-&gt;<pos:position pos:line="113" pos:column="83"/></operator><name pos:line="113" pos:column="80">table<pos:position pos:line="113" pos:column="85"/></name></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="87">final<pos:position pos:line="113" pos:column="92"/></name><operator pos:line="113" pos:column="92">-&gt;<pos:position pos:line="113" pos:column="97"/></operator><name pos:line="113" pos:column="94">chain<pos:position pos:line="113" pos:column="99"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="101"/></expr_stmt>
	}<pos:position pos:line="114" pos:column="10"/></block></then>
	<else pos:line="115" pos:column="9">else 
	<block pos:line="116" pos:column="9">{
		<return pos:line="117" pos:column="17">return <expr><operator pos:line="117" pos:column="24">(<pos:position pos:line="117" pos:column="25"/></operator><operator pos:line="117" pos:column="25">-<pos:position pos:line="117" pos:column="26"/></operator><literal type="number" pos:line="117" pos:column="26">1<pos:position pos:line="117" pos:column="27"/></literal><operator pos:line="117" pos:column="27">)<pos:position pos:line="117" pos:column="28"/></operator></expr>;<pos:position pos:line="117" pos:column="29"/></return>
	}<pos:position pos:line="118" pos:column="10"/></block></else></if>

	<return pos:line="120" pos:column="9">return <expr><operator pos:line="120" pos:column="16">(<pos:position pos:line="120" pos:column="17"/></operator><literal type="number" pos:line="120" pos:column="17">0<pos:position pos:line="120" pos:column="18"/></literal><operator pos:line="120" pos:column="18">)<pos:position pos:line="120" pos:column="19"/></operator></expr>;<pos:position pos:line="120" pos:column="20"/></return>
}<pos:position pos:line="121" pos:column="2"/></block></function></unit>

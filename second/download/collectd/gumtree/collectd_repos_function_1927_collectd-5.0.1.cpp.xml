<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1927_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type>
<name pos:line="2" pos:column="1">target_same<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name><name pos:line="2" pos:column="13">struct<pos:position pos:line="2" pos:column="19"/></name> <name pos:line="2" pos:column="20">rule_head<pos:position pos:line="2" pos:column="29"/></name></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">a<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="34">struct<pos:position pos:line="2" pos:column="40"/></name> <name pos:line="2" pos:column="41">rule_head<pos:position pos:line="2" pos:column="50"/></name></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">b<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,<parameter><decl><type><specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier> <name pos:line="2" pos:column="60">unsigned<pos:position pos:line="2" pos:column="68"/></name> <name pos:line="2" pos:column="69">char<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">mask<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">i<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">STRUCT_ENTRY_TARGET<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">ta<pos:position pos:line="5" pos:column="32"/></name></decl>, <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="35">tb<pos:position pos:line="5" pos:column="37"/></name></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">a<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">type<pos:position pos:line="7" pos:column="20"/></name></name> <operator pos:line="7" pos:column="21">!=<pos:position pos:line="7" pos:column="23"/></operator> <name><name pos:line="7" pos:column="24">b<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">type<pos:position pos:line="7" pos:column="31"/></name></name></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">ta<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">GET_TARGET<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name><name pos:line="10" pos:column="25">a<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">entry<pos:position pos:line="10" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">tb<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">GET_TARGET<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name><name pos:line="11" pos:column="25">b<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">entry<pos:position pos:line="11" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>

	<switch pos:line="13" pos:column="9">switch <condition pos:line="13" pos:column="16">(<expr><name><name pos:line="13" pos:column="17">a<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">type<pos:position pos:line="13" pos:column="24"/></name></name></expr>)<pos:position pos:line="13" pos:column="25"/></condition> <block pos:line="13" pos:column="26">{
	<case pos:line="14" pos:column="9">case <expr><name pos:line="14" pos:column="14">IPTCC_R_FALLTHROUGH<pos:position pos:line="14" pos:column="33"/></name></expr>:<pos:position pos:line="14" pos:column="34"/></case>
		<return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">1<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return>
	<case pos:line="16" pos:column="9">case <expr><name pos:line="16" pos:column="14">IPTCC_R_JUMP<pos:position pos:line="16" pos:column="26"/></name></expr>:<pos:position pos:line="16" pos:column="27"/></case>
		<return pos:line="17" pos:column="17">return <expr><name><name pos:line="17" pos:column="24">a<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">jump<pos:position pos:line="17" pos:column="31"/></name></name> <operator pos:line="17" pos:column="32">==<pos:position pos:line="17" pos:column="34"/></operator> <name><name pos:line="17" pos:column="35">b<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">jump<pos:position pos:line="17" pos:column="42"/></name></name></expr>;<pos:position pos:line="17" pos:column="43"/></return>
	<case pos:line="18" pos:column="9">case <expr><name pos:line="18" pos:column="14">IPTCC_R_STANDARD<pos:position pos:line="18" pos:column="30"/></name></expr>:<pos:position pos:line="18" pos:column="31"/></case>
		<return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><operator pos:line="19" pos:column="25">(<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">STRUCT_STANDARD_TARGET<pos:position pos:line="19" pos:column="48"/></name> <operator pos:line="19" pos:column="49">*<pos:position pos:line="19" pos:column="50"/></operator><operator pos:line="19" pos:column="50">)<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">ta<pos:position pos:line="19" pos:column="53"/></name><operator pos:line="19" pos:column="53">)<pos:position pos:line="19" pos:column="54"/></operator><operator pos:line="19" pos:column="54">-&gt;<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="56">verdict<pos:position pos:line="19" pos:column="63"/></name>
			<operator pos:line="20" pos:column="25">==<pos:position pos:line="20" pos:column="27"/></operator> <operator pos:line="20" pos:column="28">(<pos:position pos:line="20" pos:column="29"/></operator><operator pos:line="20" pos:column="29">(<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">STRUCT_STANDARD_TARGET<pos:position pos:line="20" pos:column="52"/></name> <operator pos:line="20" pos:column="53">*<pos:position pos:line="20" pos:column="54"/></operator><operator pos:line="20" pos:column="54">)<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="55">tb<pos:position pos:line="20" pos:column="57"/></name><operator pos:line="20" pos:column="57">)<pos:position pos:line="20" pos:column="58"/></operator><operator pos:line="20" pos:column="58">-&gt;<pos:position pos:line="20" pos:column="63"/></operator><name pos:line="20" pos:column="60">verdict<pos:position pos:line="20" pos:column="67"/></name></expr>;<pos:position pos:line="20" pos:column="68"/></return>
	<case pos:line="21" pos:column="9">case <expr><name pos:line="21" pos:column="14">IPTCC_R_MODULE<pos:position pos:line="21" pos:column="28"/></name></expr>:<pos:position pos:line="21" pos:column="29"/></case>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">ta<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">u<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">.<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">target_size<pos:position pos:line="22" pos:column="38"/></name></name> <operator pos:line="22" pos:column="39">!=<pos:position pos:line="22" pos:column="41"/></operator> <name><name pos:line="22" pos:column="42">tb<pos:position pos:line="22" pos:column="44"/></name><operator pos:line="22" pos:column="44">-&gt;<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="46">u<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">.<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="48">target_size<pos:position pos:line="22" pos:column="59"/></name></name></expr>)<pos:position pos:line="22" pos:column="60"/></condition><then pos:line="22" pos:column="60">
			<block type="pseudo"><return pos:line="23" pos:column="25">return <expr><literal type="number" pos:line="23" pos:column="32">0<pos:position pos:line="23" pos:column="33"/></literal></expr>;<pos:position pos:line="23" pos:column="34"/></return></block></then></if>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">strcmp<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name><name pos:line="24" pos:column="28">ta<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">u<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">.<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">user<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">.<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="39">name<pos:position pos:line="24" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="45">tb<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">-&gt;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="49">u<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">.<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="51">user<pos:position pos:line="24" pos:column="55"/></name><operator pos:line="24" pos:column="55">.<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="56">name<pos:position pos:line="24" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call> <operator pos:line="24" pos:column="62">!=<pos:position pos:line="24" pos:column="64"/></operator> <literal type="number" pos:line="24" pos:column="65">0<pos:position pos:line="24" pos:column="66"/></literal></expr>)<pos:position pos:line="24" pos:column="67"/></condition><then pos:line="24" pos:column="67">
			<block type="pseudo"><return pos:line="25" pos:column="25">return <expr><literal type="number" pos:line="25" pos:column="32">0<pos:position pos:line="25" pos:column="33"/></literal></expr>;<pos:position pos:line="25" pos:column="34"/></return></block></then></if>

		<for pos:line="27" pos:column="17">for <control pos:line="27" pos:column="21">(<init><expr><name pos:line="27" pos:column="22">i<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <literal type="number" pos:line="27" pos:column="26">0<pos:position pos:line="27" pos:column="27"/></literal></expr>;<pos:position pos:line="27" pos:column="28"/></init> <condition><expr><name pos:line="27" pos:column="29">i<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">&lt;<pos:position pos:line="27" pos:column="35"/></operator> <name><name pos:line="27" pos:column="33">ta<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">-&gt;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="37">u<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">.<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="39">target_size<pos:position pos:line="27" pos:column="50"/></name></name> <operator pos:line="27" pos:column="51">-<pos:position pos:line="27" pos:column="52"/></operator> <sizeof pos:line="27" pos:column="53">sizeof<argument_list pos:line="27" pos:column="59">(<argument><expr><operator pos:line="27" pos:column="60">*<pos:position pos:line="27" pos:column="61"/></operator><name pos:line="27" pos:column="61">ta<pos:position pos:line="27" pos:column="63"/></name></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></sizeof></expr>;<pos:position pos:line="27" pos:column="65"/></condition> <incr><expr><name pos:line="27" pos:column="66">i<pos:position pos:line="27" pos:column="67"/></name><operator pos:line="27" pos:column="67">++<pos:position pos:line="27" pos:column="69"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="70"/></control>
			<block type="pseudo"><if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><operator pos:line="28" pos:column="29">(<pos:position pos:line="28" pos:column="30"/></operator><operator pos:line="28" pos:column="30">(<pos:position pos:line="28" pos:column="31"/></operator><name><name pos:line="28" pos:column="31">ta<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">-&gt;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="35">data<pos:position pos:line="28" pos:column="39"/></name><index pos:line="28" pos:column="39">[<expr><name pos:line="28" pos:column="40">i<pos:position pos:line="28" pos:column="41"/></name></expr>]<pos:position pos:line="28" pos:column="42"/></index></name> <operator pos:line="28" pos:column="43">^<pos:position pos:line="28" pos:column="44"/></operator> <name><name pos:line="28" pos:column="45">tb<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">-&gt;<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="49">data<pos:position pos:line="28" pos:column="53"/></name><index pos:line="28" pos:column="53">[<expr><name pos:line="28" pos:column="54">i<pos:position pos:line="28" pos:column="55"/></name></expr>]<pos:position pos:line="28" pos:column="56"/></index></name><operator pos:line="28" pos:column="56">)<pos:position pos:line="28" pos:column="57"/></operator> <operator pos:line="28" pos:column="58">&amp;<pos:position pos:line="28" pos:column="63"/></operator> <name><name pos:line="28" pos:column="60">mask<pos:position pos:line="28" pos:column="64"/></name><index pos:line="28" pos:column="64">[<expr><name pos:line="28" pos:column="65">i<pos:position pos:line="28" pos:column="66"/></name></expr>]<pos:position pos:line="28" pos:column="67"/></index></name><operator pos:line="28" pos:column="67">)<pos:position pos:line="28" pos:column="68"/></operator> <operator pos:line="28" pos:column="69">!=<pos:position pos:line="28" pos:column="71"/></operator> <literal type="number" pos:line="28" pos:column="72">0<pos:position pos:line="28" pos:column="73"/></literal></expr>)<pos:position pos:line="28" pos:column="74"/></condition><then pos:line="28" pos:column="74">
				<block type="pseudo"><return pos:line="29" pos:column="33">return <expr><literal type="number" pos:line="29" pos:column="40">0<pos:position pos:line="29" pos:column="41"/></literal></expr>;<pos:position pos:line="29" pos:column="42"/></return></block></then></if></block></for>
		<return pos:line="30" pos:column="17">return <expr><literal type="number" pos:line="30" pos:column="24">1<pos:position pos:line="30" pos:column="25"/></literal></expr>;<pos:position pos:line="30" pos:column="26"/></return>
	<default pos:line="31" pos:column="9">default:<pos:position pos:line="31" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">fprintf<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">stderr<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="33">"ERROR: bad type %i\n"<pos:position pos:line="32" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="57">a<pos:position pos:line="32" pos:column="58"/></name><operator pos:line="32" pos:column="58">-&gt;<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="60">type<pos:position pos:line="32" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">abort<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">()<pos:position pos:line="33" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></switch>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2435_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lu_copy_ident_to_match<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">identifier_match_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">match<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="62">/* {{{ */</comment>
                                  <parameter><decl><type><name pos:line="2" pos:column="35">lookup_identifier_t<pos:position pos:line="2" pos:column="54"/></name> <specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">ident<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">unsigned<pos:position pos:line="3" pos:column="43"/></name> <name pos:line="3" pos:column="44">int<pos:position pos:line="3" pos:column="47"/></name></type> <name pos:line="3" pos:column="48">group_by<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list> <block pos:line="3" pos:column="58">{
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">memset<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">match<pos:position pos:line="4" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="20">sizeof<argument_list pos:line="4" pos:column="26">(<argument><expr><operator pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">match<pos:position pos:line="4" pos:column="33"/></name></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="6" pos:column="3">match<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">-&gt;<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="10">group_by<pos:position pos:line="6" pos:column="18"/></name></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">group_by<pos:position pos:line="6" pos:column="29"/></name></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>

<cpp:define pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">define<pos:position pos:line="8" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="8" pos:column="9">COPY_FIELD<pos:position pos:line="8" pos:column="19"/></name><parameter_list pos:line="8" pos:column="19">(<parameter><type><name pos:line="8" pos:column="20">field<pos:position pos:line="8" pos:column="25"/></name></type></parameter>)<pos:position pos:line="8" pos:column="26"/></parameter_list></cpp:macro>                                                      \
  <cpp:value pos:line="9" pos:column="3">do {                                                                         \
    int status = lu_copy_ident_to_match_part(&amp;match-&gt;field, ident-&gt;field);     \
    if (status != 0)                                                           \
      return status;                                                           \
  } while (0)<pos:position pos:line="13" pos:column="14"/></cpp:value></cpp:define>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">COPY_FIELD<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><name pos:line="15" pos:column="14">host<pos:position pos:line="15" pos:column="18"/></name></expr></argument>)<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">COPY_FIELD<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name pos:line="16" pos:column="14">plugin<pos:position pos:line="16" pos:column="20"/></name></expr></argument>)<pos:position pos:line="16" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">COPY_FIELD<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">plugin_instance<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">COPY_FIELD<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><name pos:line="18" pos:column="14">type<pos:position pos:line="18" pos:column="18"/></name></expr></argument>)<pos:position pos:line="18" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">COPY_FIELD<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><name pos:line="19" pos:column="14">type_instance<pos:position pos:line="19" pos:column="27"/></name></expr></argument>)<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>

<cpp:undef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">undef<pos:position pos:line="21" pos:column="7"/></cpp:directive> <name pos:line="21" pos:column="8">COPY_FIELD<pos:position pos:line="21" pos:column="18"/></name></cpp:undef>

  <return pos:line="23" pos:column="3">return <expr><literal type="number" pos:line="23" pos:column="10">0<pos:position pos:line="23" pos:column="11"/></literal></expr>;<pos:position pos:line="23" pos:column="12"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_404_collectd-4.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ignore_list_add<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">in6_addr<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">addr<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><name pos:line="3" pos:column="5">ip_list_t<pos:position pos:line="3" pos:column="14"/></name> <operator pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></operator><operator pos:line="3" pos:column="16">new<pos:position pos:line="3" pos:column="19"/></operator></expr>;<pos:position pos:line="3" pos:column="20"/></expr_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">ignore_list_match<pos:position pos:line="5" pos:column="26"/></name> <argument_list pos:line="5" pos:column="27">(<argument><expr><name pos:line="5" pos:column="28">addr<pos:position pos:line="5" pos:column="32"/></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call> <operator pos:line="5" pos:column="34">!=<pos:position pos:line="5" pos:column="36"/></operator> <literal type="number" pos:line="5" pos:column="37">0<pos:position pos:line="5" pos:column="38"/></literal></expr>)<pos:position pos:line="5" pos:column="39"/></condition><then pos:line="5" pos:column="39">
	<block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><operator pos:line="8" pos:column="5">new<pos:position pos:line="8" pos:column="8"/></operator> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <call><name pos:line="8" pos:column="11">malloc<pos:position pos:line="8" pos:column="17"/></name> <argument_list pos:line="8" pos:column="18">(<argument><expr><sizeof pos:line="8" pos:column="19">sizeof <argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">ip_list_t<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">new<pos:position pos:line="9" pos:column="12"/></operator> <operator pos:line="9" pos:column="13">==<pos:position pos:line="9" pos:column="15"/></operator> <name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21">
    <block pos:line="10" pos:column="5">{
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">perror<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><literal type="string" pos:line="11" pos:column="17">"malloc"<pos:position pos:line="11" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
	<return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">memcpy<pos:position pos:line="15" pos:column="11"/></name> <argument_list pos:line="15" pos:column="12">(<argument><expr><operator pos:line="15" pos:column="13">&amp;<pos:position pos:line="15" pos:column="18"/></operator><operator pos:line="15" pos:column="14">new<pos:position pos:line="15" pos:column="17"/></operator><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">addr<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="25">addr<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="31">sizeof <argument_list pos:line="15" pos:column="38">(<argument><expr pos:line="15" pos:column="39">struct <name pos:line="15" pos:column="46">in6_addr<pos:position pos:line="15" pos:column="54"/></name></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="16" pos:column="5">new<pos:position pos:line="16" pos:column="8"/></operator><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">next<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">IgnoreList<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">IgnoreList<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <operator pos:line="18" pos:column="18">new<pos:position pos:line="18" pos:column="21"/></operator></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

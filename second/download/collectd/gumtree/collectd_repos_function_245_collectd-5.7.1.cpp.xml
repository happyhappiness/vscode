<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_245_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dpdk_read<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">user_data_t<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">ud<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list> <block pos:line="1" pos:column="39">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">ret<pos:position pos:line="2" pos:column="10"/></name> <init pos:line="2" pos:column="11">= <expr><literal type="number" pos:line="2" pos:column="13">0<pos:position pos:line="2" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="15"/></decl_stmt>

  <comment type="block" pos:line="4" pos:column="3">/*
   * Check if SHM flag is set to be re-initialized. AKA DPDK ports have been
   * counted, so re-init SHM to be large enough to fit all the statistics.
   */</comment>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">g_configuration<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">collectd_reinit_shm<pos:position pos:line="8" pos:column="43"/></name></name></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44"> <block pos:line="8" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">DEBUG<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="string" pos:line="9" pos:column="11">"dpdkstat: read() now reinit SHM then launching send-thread"<pos:position pos:line="9" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">dpdk_re_init_shm<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">()<pos:position pos:line="10" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="13" pos:column="3">/*
   * Check if DPDK proc is alive, and has already counted port / stats. This
   * must be done in dpdk_read(), because the DPDK primary process may not be
   * alive at dpdk_init() time.
   */</comment>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name><name pos:line="18" pos:column="7">g_configuration<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">helper_status<pos:position pos:line="18" pos:column="37"/></name></name> <operator pos:line="18" pos:column="38">==<pos:position pos:line="18" pos:column="40"/></operator> <name pos:line="18" pos:column="41">DPDK_HELPER_NOT_INITIALIZED<pos:position pos:line="18" pos:column="68"/></name> <operator pos:line="18" pos:column="69">||<pos:position pos:line="18" pos:column="71"/></operator>
      <name><name pos:line="19" pos:column="7">g_configuration<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">helper_status<pos:position pos:line="19" pos:column="37"/></name></name> <operator pos:line="19" pos:column="38">==<pos:position pos:line="19" pos:column="40"/></operator> <name pos:line="19" pos:column="41">DPDK_HELPER_GRACEFUL_QUIT<pos:position pos:line="19" pos:column="66"/></name></expr>)<pos:position pos:line="19" pos:column="67"/></condition><then pos:line="19" pos:column="67"> <block pos:line="19" pos:column="68">{
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">action<pos:position pos:line="20" pos:column="15"/></name> <init pos:line="20" pos:column="16">= <expr><name pos:line="20" pos:column="18">DPDK_HELPER_ACTION_SEND_STATS<pos:position pos:line="20" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="48"/></decl_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">g_configuration<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">-&gt;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="26">num_xstats<pos:position pos:line="21" pos:column="36"/></name></name> <operator pos:line="21" pos:column="37">==<pos:position pos:line="21" pos:column="39"/></operator> <literal type="number" pos:line="21" pos:column="40">0<pos:position pos:line="21" pos:column="41"/></literal></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="7">action<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">DPDK_HELPER_ACTION_COUNT_STATS<pos:position pos:line="22" pos:column="46"/></name></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt></block></then></if>
    <comment type="block" pos:line="23" pos:column="5">/* Spawn the helper thread to count stats or to read stats. */</comment>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">int<pos:position pos:line="24" pos:column="8"/></name></type> <name pos:line="24" pos:column="9">err<pos:position pos:line="24" pos:column="12"/></name> <init pos:line="24" pos:column="13">= <expr><call><name pos:line="24" pos:column="15">dpdk_helper_spawn<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">action<pos:position pos:line="24" pos:column="39"/></name></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="41"/></decl_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">err<pos:position pos:line="25" pos:column="12"/></name></expr>)<pos:position pos:line="25" pos:column="13"/></condition><then pos:line="25" pos:column="13"> <block pos:line="25" pos:column="14">{
      <decl_stmt><decl><type><name pos:line="26" pos:column="7">char<pos:position pos:line="26" pos:column="11"/></name></type> <name><name pos:line="26" pos:column="12">errbuf<pos:position pos:line="26" pos:column="18"/></name><index pos:line="26" pos:column="18">[<expr><name pos:line="26" pos:column="19">ERR_BUF_SIZE<pos:position pos:line="26" pos:column="31"/></name></expr>]<pos:position pos:line="26" pos:column="32"/></index></name></decl>;<pos:position pos:line="26" pos:column="33"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">ERROR<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><literal type="string" pos:line="27" pos:column="13">"dpdkstat: error spawning helper %s"<pos:position pos:line="27" pos:column="49"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="28" pos:column="13">sstrerror<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">errno<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="30">errbuf<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="38">sizeof<argument_list pos:line="28" pos:column="44">(<argument><expr><name pos:line="28" pos:column="45">errbuf<pos:position pos:line="28" pos:column="51"/></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt>
      <return pos:line="29" pos:column="7">return <expr><operator pos:line="29" pos:column="14">-<pos:position pos:line="29" pos:column="15"/></operator><literal type="number" pos:line="29" pos:column="15">1<pos:position pos:line="29" pos:column="16"/></literal></expr>;<pos:position pos:line="29" pos:column="17"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="33" pos:column="3">pid_t<pos:position pos:line="33" pos:column="8"/></name></type> <name pos:line="33" pos:column="9">ws<pos:position pos:line="33" pos:column="11"/></name> <init pos:line="33" pos:column="12">= <expr><call><name pos:line="33" pos:column="14">waitpid<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name><name pos:line="33" pos:column="22">g_configuration<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">-&gt;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="39">helper_pid<pos:position pos:line="33" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">NULL<pos:position pos:line="33" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="57">WNOHANG<pos:position pos:line="33" pos:column="64"/></name></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="66"/></decl_stmt>
  <comment type="block" pos:line="34" pos:column="3">/*
   * Conditions under which to respawn helper:
   *  waitpid() fails, helper process died (or quit), so respawn
   */</comment>
  <decl_stmt><decl><type><name pos:line="38" pos:column="3">_Bool<pos:position pos:line="38" pos:column="8"/></name></type> <name pos:line="38" pos:column="9">respawn_helper<pos:position pos:line="38" pos:column="23"/></name> <init pos:line="38" pos:column="24">= <expr><literal type="number" pos:line="38" pos:column="26">0<pos:position pos:line="38" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="38" pos:column="28"/></decl_stmt>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name pos:line="39" pos:column="7">ws<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">!=<pos:position pos:line="39" pos:column="12"/></operator> <literal type="number" pos:line="39" pos:column="13">0<pos:position pos:line="39" pos:column="14"/></literal></expr>)<pos:position pos:line="39" pos:column="15"/></condition><then pos:line="39" pos:column="15"> <block pos:line="39" pos:column="16">{
    <expr_stmt><expr><name pos:line="40" pos:column="5">respawn_helper<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <literal type="number" pos:line="40" pos:column="22">1<pos:position pos:line="40" pos:column="23"/></literal></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="43" pos:column="3">char<pos:position pos:line="43" pos:column="7"/></name></type> <name><name pos:line="43" pos:column="8">buf<pos:position pos:line="43" pos:column="11"/></name><index pos:line="43" pos:column="11">[<expr><name pos:line="43" pos:column="12">DPDKSTAT_MAX_BUFFER_SIZE<pos:position pos:line="43" pos:column="36"/></name></expr>]<pos:position pos:line="43" pos:column="37"/></index></name></decl>;<pos:position pos:line="43" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="44" pos:column="3">char<pos:position pos:line="44" pos:column="7"/></name></type> <name><name pos:line="44" pos:column="8">out<pos:position pos:line="44" pos:column="11"/></name><index pos:line="44" pos:column="11">[<expr><name pos:line="44" pos:column="12">DPDKSTAT_MAX_BUFFER_SIZE<pos:position pos:line="44" pos:column="36"/></name></expr>]<pos:position pos:line="44" pos:column="37"/></index></name></decl>;<pos:position pos:line="44" pos:column="38"/></decl_stmt>

  <comment type="block" pos:line="46" pos:column="3">/* non blocking check on helper logging pipe */</comment>
  <decl_stmt><decl><type><name><name pos:line="47" pos:column="3">struct<pos:position pos:line="47" pos:column="9"/></name> <name pos:line="47" pos:column="10">pollfd<pos:position pos:line="47" pos:column="16"/></name></name></type> <name pos:line="47" pos:column="17">fds<pos:position pos:line="47" pos:column="20"/></name> <init pos:line="47" pos:column="21">= <expr><block pos:line="47" pos:column="23">{
      <expr><operator pos:line="48" pos:column="7">.<pos:position pos:line="48" pos:column="8"/></operator><name pos:line="48" pos:column="8">fd<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">=<pos:position pos:line="48" pos:column="12"/></operator> <name><name pos:line="48" pos:column="13">g_configuration<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">-&gt;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="30">helper_pipes<pos:position pos:line="48" pos:column="42"/></name><index pos:line="48" pos:column="42">[<expr><literal type="number" pos:line="48" pos:column="43">0<pos:position pos:line="48" pos:column="44"/></literal></expr>]<pos:position pos:line="48" pos:column="45"/></index></name></expr>, <expr><operator pos:line="48" pos:column="47">.<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="48">events<pos:position pos:line="48" pos:column="54"/></name> <operator pos:line="48" pos:column="55">=<pos:position pos:line="48" pos:column="56"/></operator> <name pos:line="48" pos:column="57">POLLIN<pos:position pos:line="48" pos:column="63"/></name></expr>,
  }<pos:position pos:line="49" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="49" pos:column="5"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="50" pos:column="3">int<pos:position pos:line="50" pos:column="6"/></name></type> <name pos:line="50" pos:column="7">data_avail<pos:position pos:line="50" pos:column="17"/></name> <init pos:line="50" pos:column="18">= <expr><call><name pos:line="50" pos:column="20">poll<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><operator pos:line="50" pos:column="25">&amp;<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="26">fds<pos:position pos:line="50" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="31">1<pos:position pos:line="50" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="34">0<pos:position pos:line="50" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="50" pos:column="37"/></decl_stmt>
  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><name pos:line="51" pos:column="7">data_avail<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">&lt;<pos:position pos:line="51" pos:column="22"/></operator> <literal type="number" pos:line="51" pos:column="20">0<pos:position pos:line="51" pos:column="21"/></literal></expr>)<pos:position pos:line="51" pos:column="22"/></condition><then pos:line="51" pos:column="22"> <block pos:line="51" pos:column="23">{
    <decl_stmt><decl><type><name pos:line="52" pos:column="5">char<pos:position pos:line="52" pos:column="9"/></name></type> <name><name pos:line="52" pos:column="10">errbuf<pos:position pos:line="52" pos:column="16"/></name><index pos:line="52" pos:column="16">[<expr><name pos:line="52" pos:column="17">ERR_BUF_SIZE<pos:position pos:line="52" pos:column="29"/></name></expr>]<pos:position pos:line="52" pos:column="30"/></index></name></decl>;<pos:position pos:line="52" pos:column="31"/></decl_stmt>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">errno<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">!=<pos:position pos:line="53" pos:column="17"/></operator> <name pos:line="53" pos:column="18">EINTR<pos:position pos:line="53" pos:column="23"/></name> <operator pos:line="53" pos:column="24">||<pos:position pos:line="53" pos:column="26"/></operator> <name pos:line="53" pos:column="27">errno<pos:position pos:line="53" pos:column="32"/></name> <operator pos:line="53" pos:column="33">!=<pos:position pos:line="53" pos:column="35"/></operator> <name pos:line="53" pos:column="36">EAGAIN<pos:position pos:line="53" pos:column="42"/></name></expr>)<pos:position pos:line="53" pos:column="43"/></condition><then pos:line="53" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="7">ERROR<pos:position pos:line="54" pos:column="12"/></name><argument_list pos:line="54" pos:column="12">(<argument><expr><literal type="string" pos:line="54" pos:column="13">"dpdkstats: poll(2) failed: %s"<pos:position pos:line="54" pos:column="44"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="55" pos:column="13">sstrerror<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">(<argument><expr><name pos:line="55" pos:column="23">errno<pos:position pos:line="55" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="30">errbuf<pos:position pos:line="55" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="38">sizeof<argument_list pos:line="55" pos:column="44">(<argument><expr><name pos:line="55" pos:column="45">errbuf<pos:position pos:line="55" pos:column="51"/></name></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="55"/></expr_stmt></block></then></if>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>
  <while pos:line="57" pos:column="3">while <condition pos:line="57" pos:column="9">(<expr><name pos:line="57" pos:column="10">data_avail<pos:position pos:line="57" pos:column="20"/></name></expr>)<pos:position pos:line="57" pos:column="21"/></condition> <block pos:line="57" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="58" pos:column="5">int<pos:position pos:line="58" pos:column="8"/></name></type> <name pos:line="58" pos:column="9">nbytes<pos:position pos:line="58" pos:column="15"/></name> <init pos:line="58" pos:column="16">= <expr><call><name pos:line="58" pos:column="18">read<pos:position pos:line="58" pos:column="22"/></name><argument_list pos:line="58" pos:column="22">(<argument><expr><name><name pos:line="58" pos:column="23">g_configuration<pos:position pos:line="58" pos:column="38"/></name><operator pos:line="58" pos:column="38">-&gt;<pos:position pos:line="58" pos:column="43"/></operator><name pos:line="58" pos:column="40">helper_pipes<pos:position pos:line="58" pos:column="52"/></name><index pos:line="58" pos:column="52">[<expr><literal type="number" pos:line="58" pos:column="53">0<pos:position pos:line="58" pos:column="54"/></literal></expr>]<pos:position pos:line="58" pos:column="55"/></index></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="57">buf<pos:position pos:line="58" pos:column="60"/></name></expr></argument>, <argument><expr><sizeof pos:line="58" pos:column="62">sizeof<argument_list pos:line="58" pos:column="68">(<argument><expr><name pos:line="58" pos:column="69">buf<pos:position pos:line="58" pos:column="72"/></name></expr></argument>)<pos:position pos:line="58" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="58" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="58" pos:column="75"/></decl_stmt>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">nbytes<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">&lt;=<pos:position pos:line="59" pos:column="21"/></operator> <literal type="number" pos:line="59" pos:column="19">0<pos:position pos:line="59" pos:column="20"/></literal></expr>)<pos:position pos:line="59" pos:column="21"/></condition><then pos:line="59" pos:column="21">
      <block type="pseudo"><break pos:line="60" pos:column="7">break;<pos:position pos:line="60" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">ssnprintf<pos:position pos:line="61" pos:column="14"/></name><argument_list pos:line="61" pos:column="14">(<argument><expr><name pos:line="61" pos:column="15">out<pos:position pos:line="61" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="20">nbytes<pos:position pos:line="61" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="28">"%s"<pos:position pos:line="61" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="34">buf<pos:position pos:line="61" pos:column="37"/></name></expr></argument>)<pos:position pos:line="61" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">DEBUG<pos:position pos:line="62" pos:column="10"/></name><argument_list pos:line="62" pos:column="10">(<argument><expr><literal type="string" pos:line="62" pos:column="11">"dpdkstat: helper-proc: %s"<pos:position pos:line="62" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="40">out<pos:position pos:line="62" pos:column="43"/></name></expr></argument>)<pos:position pos:line="62" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="63" pos:column="4"/></block></while>

  <if pos:line="65" pos:column="3">if <condition pos:line="65" pos:column="6">(<expr><name pos:line="65" pos:column="7">respawn_helper<pos:position pos:line="65" pos:column="21"/></name></expr>)<pos:position pos:line="65" pos:column="22"/></condition><then pos:line="65" pos:column="22"> <block pos:line="65" pos:column="23">{
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name><name pos:line="66" pos:column="9">g_configuration<pos:position pos:line="66" pos:column="24"/></name><operator pos:line="66" pos:column="24">-&gt;<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="26">helper_pid<pos:position pos:line="66" pos:column="36"/></name></name></expr>)<pos:position pos:line="66" pos:column="37"/></condition><then pos:line="66" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="7">dpdk_helper_stop<pos:position pos:line="67" pos:column="23"/></name><argument_list pos:line="67" pos:column="23">(<argument><expr><name pos:line="67" pos:column="24">RESET<pos:position pos:line="67" pos:column="29"/></name></expr></argument>)<pos:position pos:line="67" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="31"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">dpdk_helper_spawn<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">DPDK_HELPER_ACTION_COUNT_STATS<pos:position pos:line="68" pos:column="53"/></name></expr></argument>)<pos:position pos:line="68" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="71" pos:column="3">/* Kick helper process through SHM */</comment>
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">sem_post<pos:position pos:line="72" pos:column="11"/></name><argument_list pos:line="72" pos:column="11">(<argument><expr><operator pos:line="72" pos:column="12">&amp;<pos:position pos:line="72" pos:column="17"/></operator><name><name pos:line="72" pos:column="13">g_configuration<pos:position pos:line="72" pos:column="28"/></name><operator pos:line="72" pos:column="28">-&gt;<pos:position pos:line="72" pos:column="33"/></operator><name pos:line="72" pos:column="30">sema_helper_get_stats<pos:position pos:line="72" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="53"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="74" pos:column="3">cdtime_t<pos:position pos:line="74" pos:column="11"/></name></type> <name pos:line="74" pos:column="12">now<pos:position pos:line="74" pos:column="15"/></name> <init pos:line="74" pos:column="16">= <expr><call><name pos:line="74" pos:column="18">cdtime<pos:position pos:line="74" pos:column="24"/></name><argument_list pos:line="74" pos:column="24">()<pos:position pos:line="74" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="74" pos:column="27"/></decl_stmt>
  <expr_stmt><expr><name pos:line="75" pos:column="3">ret<pos:position pos:line="75" pos:column="6"/></name> <operator pos:line="75" pos:column="7">=<pos:position pos:line="75" pos:column="8"/></operator> <call><name pos:line="75" pos:column="9">sem_timedwait<pos:position pos:line="75" pos:column="22"/></name><argument_list pos:line="75" pos:column="22">(<argument><expr><operator pos:line="75" pos:column="23">&amp;<pos:position pos:line="75" pos:column="28"/></operator><name><name pos:line="75" pos:column="24">g_configuration<pos:position pos:line="75" pos:column="39"/></name><operator pos:line="75" pos:column="39">-&gt;<pos:position pos:line="75" pos:column="44"/></operator><name pos:line="75" pos:column="41">sema_stats_in_shm<pos:position pos:line="75" pos:column="58"/></name></name></expr></argument>,
                      <argument><expr><operator pos:line="76" pos:column="23">&amp;<pos:position pos:line="76" pos:column="28"/></operator><call><name pos:line="76" pos:column="24">CDTIME_T_TO_TIMESPEC<pos:position pos:line="76" pos:column="44"/></name><argument_list pos:line="76" pos:column="44">(<argument><expr><name pos:line="76" pos:column="45">now<pos:position pos:line="76" pos:column="48"/></name> <operator pos:line="76" pos:column="49">+<pos:position pos:line="76" pos:column="50"/></operator> <name><name pos:line="76" pos:column="51">g_configuration<pos:position pos:line="76" pos:column="66"/></name><operator pos:line="76" pos:column="66">-&gt;<pos:position pos:line="76" pos:column="71"/></operator><name pos:line="76" pos:column="68">interval<pos:position pos:line="76" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="79"/></expr_stmt>
  <if pos:line="77" pos:column="3">if <condition pos:line="77" pos:column="6">(<expr><name pos:line="77" pos:column="7">ret<pos:position pos:line="77" pos:column="10"/></name> <operator pos:line="77" pos:column="11">==<pos:position pos:line="77" pos:column="13"/></operator> <operator pos:line="77" pos:column="14">-<pos:position pos:line="77" pos:column="15"/></operator><literal type="number" pos:line="77" pos:column="15">1<pos:position pos:line="77" pos:column="16"/></literal></expr>)<pos:position pos:line="77" pos:column="17"/></condition><then pos:line="77" pos:column="17"> <block pos:line="77" pos:column="18">{
    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><name pos:line="78" pos:column="9">errno<pos:position pos:line="78" pos:column="14"/></name> <operator pos:line="78" pos:column="15">==<pos:position pos:line="78" pos:column="17"/></operator> <name pos:line="78" pos:column="18">ETIMEDOUT<pos:position pos:line="78" pos:column="27"/></name></expr>)<pos:position pos:line="78" pos:column="28"/></condition><then pos:line="78" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="7">DEBUG<pos:position pos:line="79" pos:column="12"/></name><argument_list pos:line="79" pos:column="12">(
          <argument><expr><literal type="string" pos:line="80" pos:column="11">"dpdkstat: timeout in collectd thread: is a DPDK Primary running? "<pos:position pos:line="80" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="80"/></expr_stmt></block></then></if>
    <return pos:line="81" pos:column="5">return <expr><literal type="number" pos:line="81" pos:column="12">0<pos:position pos:line="81" pos:column="13"/></literal></expr>;<pos:position pos:line="81" pos:column="14"/></return>
  }<pos:position pos:line="82" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="84" pos:column="3">/* Dispatch the stats.*/</comment>
  <decl_stmt><decl><type><name pos:line="85" pos:column="3">uint32_t<pos:position pos:line="85" pos:column="11"/></name></type> <name pos:line="85" pos:column="12">count<pos:position pos:line="85" pos:column="17"/></name> <init pos:line="85" pos:column="18">= <expr><literal type="number" pos:line="85" pos:column="20">0<pos:position pos:line="85" pos:column="21"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="85" pos:column="23">port_num<pos:position pos:line="85" pos:column="31"/></name> <init pos:line="85" pos:column="32">= <expr><literal type="number" pos:line="85" pos:column="34">0<pos:position pos:line="85" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="85" pos:column="36"/></decl_stmt>

  <for pos:line="87" pos:column="3">for <control pos:line="87" pos:column="7">(<init><decl><type><name pos:line="87" pos:column="8">uint32_t<pos:position pos:line="87" pos:column="16"/></name></type> <name pos:line="87" pos:column="17">i<pos:position pos:line="87" pos:column="18"/></name> <init pos:line="87" pos:column="19">= <expr><literal type="number" pos:line="87" pos:column="21">0<pos:position pos:line="87" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="87" pos:column="23"/></init> <condition><expr><name pos:line="87" pos:column="24">i<pos:position pos:line="87" pos:column="25"/></name> <operator pos:line="87" pos:column="26">&lt;<pos:position pos:line="87" pos:column="30"/></operator> <name><name pos:line="87" pos:column="28">g_configuration<pos:position pos:line="87" pos:column="43"/></name><operator pos:line="87" pos:column="43">-&gt;<pos:position pos:line="87" pos:column="48"/></operator><name pos:line="87" pos:column="45">num_ports<pos:position pos:line="87" pos:column="54"/></name></name></expr>;<pos:position pos:line="87" pos:column="55"/></condition> <incr><expr><name pos:line="87" pos:column="56">i<pos:position pos:line="87" pos:column="57"/></name><operator pos:line="87" pos:column="57">++<pos:position pos:line="87" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="87" pos:column="60"/></control> <block pos:line="87" pos:column="61">{
    <decl_stmt><decl><type><name pos:line="88" pos:column="5">char<pos:position pos:line="88" pos:column="9"/></name></type> <name><name pos:line="88" pos:column="10">dev_name<pos:position pos:line="88" pos:column="18"/></name><index pos:line="88" pos:column="18">[<expr><literal type="number" pos:line="88" pos:column="19">64<pos:position pos:line="88" pos:column="21"/></literal></expr>]<pos:position pos:line="88" pos:column="22"/></index></name></decl>;<pos:position pos:line="88" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="89" pos:column="5">cdtime_t<pos:position pos:line="89" pos:column="13"/></name></type> <name pos:line="89" pos:column="14">port_read_time<pos:position pos:line="89" pos:column="28"/></name> <init pos:line="89" pos:column="29">= <expr><name><name pos:line="89" pos:column="31">g_configuration<pos:position pos:line="89" pos:column="46"/></name><operator pos:line="89" pos:column="46">-&gt;<pos:position pos:line="89" pos:column="51"/></operator><name pos:line="89" pos:column="48">port_read_time<pos:position pos:line="89" pos:column="62"/></name><index pos:line="89" pos:column="62">[<expr><name pos:line="89" pos:column="63">i<pos:position pos:line="89" pos:column="64"/></name></expr>]<pos:position pos:line="89" pos:column="65"/></index></name></expr></init></decl>;<pos:position pos:line="89" pos:column="66"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="90" pos:column="5">uint32_t<pos:position pos:line="90" pos:column="13"/></name></type> <name pos:line="90" pos:column="14">counters_num<pos:position pos:line="90" pos:column="26"/></name> <init pos:line="90" pos:column="27">= <expr><name><name pos:line="90" pos:column="29">g_configuration<pos:position pos:line="90" pos:column="44"/></name><operator pos:line="90" pos:column="44">-&gt;<pos:position pos:line="90" pos:column="49"/></operator><name pos:line="90" pos:column="46">num_stats_in_port<pos:position pos:line="90" pos:column="63"/></name><index pos:line="90" pos:column="63">[<expr><name pos:line="90" pos:column="64">i<pos:position pos:line="90" pos:column="65"/></name></expr>]<pos:position pos:line="90" pos:column="66"/></index></name></expr></init></decl>;<pos:position pos:line="90" pos:column="67"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="91" pos:column="5">size_t<pos:position pos:line="91" pos:column="11"/></name></type> <name pos:line="91" pos:column="12">ports_max<pos:position pos:line="91" pos:column="21"/></name> <init pos:line="91" pos:column="22">= <expr><name pos:line="91" pos:column="24">CHAR_BIT<pos:position pos:line="91" pos:column="32"/></name> <operator pos:line="91" pos:column="33">*<pos:position pos:line="91" pos:column="34"/></operator> <sizeof pos:line="91" pos:column="35">sizeof<argument_list pos:line="91" pos:column="41">(<argument><expr><name><name pos:line="91" pos:column="42">g_configuration<pos:position pos:line="91" pos:column="57"/></name><operator pos:line="91" pos:column="57">-&gt;<pos:position pos:line="91" pos:column="62"/></operator><name pos:line="91" pos:column="59">enabled_port_mask<pos:position pos:line="91" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="77"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="91" pos:column="78"/></decl_stmt>
    <for pos:line="92" pos:column="5">for <control pos:line="92" pos:column="9">(<init><decl><type><name pos:line="92" pos:column="10">size_t<pos:position pos:line="92" pos:column="16"/></name></type> <name pos:line="92" pos:column="17">j<pos:position pos:line="92" pos:column="18"/></name> <init pos:line="92" pos:column="19">= <expr><name pos:line="92" pos:column="21">port_num<pos:position pos:line="92" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="92" pos:column="30"/></init> <condition><expr><name pos:line="92" pos:column="31">j<pos:position pos:line="92" pos:column="32"/></name> <operator pos:line="92" pos:column="33">&lt;<pos:position pos:line="92" pos:column="37"/></operator> <name pos:line="92" pos:column="35">ports_max<pos:position pos:line="92" pos:column="44"/></name></expr>;<pos:position pos:line="92" pos:column="45"/></condition> <incr><expr><name pos:line="92" pos:column="46">j<pos:position pos:line="92" pos:column="47"/></name><operator pos:line="92" pos:column="47">++<pos:position pos:line="92" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="92" pos:column="50"/></control> <block pos:line="92" pos:column="51">{
      <if pos:line="93" pos:column="7">if <condition pos:line="93" pos:column="10">(<expr><operator pos:line="93" pos:column="11">(<pos:position pos:line="93" pos:column="12"/></operator><name><name pos:line="93" pos:column="12">g_configuration<pos:position pos:line="93" pos:column="27"/></name><operator pos:line="93" pos:column="27">-&gt;<pos:position pos:line="93" pos:column="32"/></operator><name pos:line="93" pos:column="29">enabled_port_mask<pos:position pos:line="93" pos:column="46"/></name></name> <operator pos:line="93" pos:column="47">&amp;<pos:position pos:line="93" pos:column="52"/></operator> <operator pos:line="93" pos:column="49">(<pos:position pos:line="93" pos:column="50"/></operator><literal type="number" pos:line="93" pos:column="50">1<pos:position pos:line="93" pos:column="51"/></literal> <operator pos:line="93" pos:column="52">&lt;&lt;<pos:position pos:line="93" pos:column="60"/></operator> <name pos:line="93" pos:column="55">j<pos:position pos:line="93" pos:column="56"/></name><operator pos:line="93" pos:column="56">)<pos:position pos:line="93" pos:column="57"/></operator><operator pos:line="93" pos:column="57">)<pos:position pos:line="93" pos:column="58"/></operator> <operator pos:line="93" pos:column="59">!=<pos:position pos:line="93" pos:column="61"/></operator> <literal type="number" pos:line="93" pos:column="62">0<pos:position pos:line="93" pos:column="63"/></literal></expr>)<pos:position pos:line="93" pos:column="64"/></condition><then pos:line="93" pos:column="64">
        <block type="pseudo"><break pos:line="94" pos:column="9">break;<pos:position pos:line="94" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="95" pos:column="7">port_num<pos:position pos:line="95" pos:column="15"/></name><operator pos:line="95" pos:column="15">++<pos:position pos:line="95" pos:column="17"/></operator></expr>;<pos:position pos:line="95" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="96" pos:column="6"/></block></for>

    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><name><name pos:line="98" pos:column="9">g_configuration<pos:position pos:line="98" pos:column="24"/></name><operator pos:line="98" pos:column="24">-&gt;<pos:position pos:line="98" pos:column="29"/></operator><name pos:line="98" pos:column="26">port_name<pos:position pos:line="98" pos:column="35"/></name><index pos:line="98" pos:column="35">[<expr><name pos:line="98" pos:column="36">i<pos:position pos:line="98" pos:column="37"/></name></expr>]<pos:position pos:line="98" pos:column="38"/></index><index pos:line="98" pos:column="38">[<expr><literal type="number" pos:line="98" pos:column="39">0<pos:position pos:line="98" pos:column="40"/></literal></expr>]<pos:position pos:line="98" pos:column="41"/></index></name> <operator pos:line="98" pos:column="42">!=<pos:position pos:line="98" pos:column="44"/></operator> <literal type="number" pos:line="98" pos:column="45">0<pos:position pos:line="98" pos:column="46"/></literal></expr>)<pos:position pos:line="98" pos:column="47"/></condition><then pos:line="98" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="7">ssnprintf<pos:position pos:line="99" pos:column="16"/></name><argument_list pos:line="99" pos:column="16">(<argument><expr><name pos:line="99" pos:column="17">dev_name<pos:position pos:line="99" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="99" pos:column="27">sizeof<argument_list pos:line="99" pos:column="33">(<argument><expr><name pos:line="99" pos:column="34">dev_name<pos:position pos:line="99" pos:column="42"/></name></expr></argument>)<pos:position pos:line="99" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="45">"%s"<pos:position pos:line="99" pos:column="49"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="100" pos:column="17">g_configuration<pos:position pos:line="100" pos:column="32"/></name><operator pos:line="100" pos:column="32">-&gt;<pos:position pos:line="100" pos:column="37"/></operator><name pos:line="100" pos:column="34">port_name<pos:position pos:line="100" pos:column="43"/></name><index pos:line="100" pos:column="43">[<expr><name pos:line="100" pos:column="44">i<pos:position pos:line="100" pos:column="45"/></name></expr>]<pos:position pos:line="100" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="100" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="48"/></expr_stmt></block></then>
    <else pos:line="101" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="7">ssnprintf<pos:position pos:line="102" pos:column="16"/></name><argument_list pos:line="102" pos:column="16">(<argument><expr><name pos:line="102" pos:column="17">dev_name<pos:position pos:line="102" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="102" pos:column="27">sizeof<argument_list pos:line="102" pos:column="33">(<argument><expr><name pos:line="102" pos:column="34">dev_name<pos:position pos:line="102" pos:column="42"/></name></expr></argument>)<pos:position pos:line="102" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="45">"port.%"<pos:position pos:line="102" pos:column="53"/></literal> <name pos:line="102" pos:column="54">PRIu32<pos:position pos:line="102" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="62">port_num<pos:position pos:line="102" pos:column="70"/></name></expr></argument>)<pos:position pos:line="102" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="72"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="103" pos:column="5">dpdk_submit_xstats<pos:position pos:line="103" pos:column="23"/></name><argument_list pos:line="103" pos:column="23">(<argument><expr><name pos:line="103" pos:column="24">dev_name<pos:position pos:line="103" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="34">count<pos:position pos:line="103" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="41">counters_num<pos:position pos:line="103" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="55">port_read_time<pos:position pos:line="103" pos:column="69"/></name></expr></argument>)<pos:position pos:line="103" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><name pos:line="104" pos:column="5">count<pos:position pos:line="104" pos:column="10"/></name> <operator pos:line="104" pos:column="11">+=<pos:position pos:line="104" pos:column="13"/></operator> <name pos:line="104" pos:column="14">counters_num<pos:position pos:line="104" pos:column="26"/></name></expr>;<pos:position pos:line="104" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="105" pos:column="5">port_num<pos:position pos:line="105" pos:column="13"/></name><operator pos:line="105" pos:column="13">++<pos:position pos:line="105" pos:column="15"/></operator></expr>;<pos:position pos:line="105" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="106" pos:column="4"/></block></for> <comment type="block" pos:line="106" pos:column="5">/* for each port */</comment>
  <return pos:line="107" pos:column="3">return <expr><literal type="number" pos:line="107" pos:column="10">0<pos:position pos:line="107" pos:column="11"/></literal></expr>;<pos:position pos:line="107" pos:column="12"/></return>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

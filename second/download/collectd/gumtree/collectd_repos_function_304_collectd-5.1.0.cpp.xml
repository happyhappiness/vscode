<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_304_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">camqp_setup_queue<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">camqp_config_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conf<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list> <comment type="block" pos:line="1" pos:column="53">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">amqp_queue_declare_ok_t<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">qd_ret<pos:position pos:line="3" pos:column="36"/></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">amqp_basic_consume_ok_t<pos:position pos:line="4" pos:column="28"/></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">cm_ret<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">qd_ret<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">amqp_queue_declare<pos:position pos:line="6" pos:column="32"/></name> <argument_list pos:line="6" pos:column="33">(<argument><expr><name><name pos:line="6" pos:column="34">conf<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">-&gt;<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="40">connection<pos:position pos:line="6" pos:column="50"/></name></name></expr></argument>,
            <comment type="block" pos:line="7" pos:column="13">/* channel     = */</comment> <argument><expr><name pos:line="7" pos:column="33">CAMQP_CHANNEL<pos:position pos:line="7" pos:column="46"/></name></expr></argument>,
            <comment type="block" pos:line="8" pos:column="13">/* queue       = */</comment> <argument><expr><ternary><condition><expr><operator pos:line="8" pos:column="33">(<pos:position pos:line="8" pos:column="34"/></operator><name><name pos:line="8" pos:column="34">conf<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">queue<pos:position pos:line="8" pos:column="45"/></name></name> <operator pos:line="8" pos:column="46">!=<pos:position pos:line="8" pos:column="48"/></operator> <name pos:line="8" pos:column="49">NULL<pos:position pos:line="8" pos:column="53"/></name><operator pos:line="8" pos:column="53">)<pos:position pos:line="8" pos:column="54"/></operator></expr>
            ?<pos:position pos:line="9" pos:column="14"/></condition><then pos:line="9" pos:column="14"> <expr><call><name pos:line="9" pos:column="15">amqp_cstring_bytes<pos:position pos:line="9" pos:column="33"/></name> <argument_list pos:line="9" pos:column="34">(<argument><expr><name><name pos:line="9" pos:column="35">conf<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">queue<pos:position pos:line="9" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>
            <pos:position pos:line="10" pos:column="13"/></then><else pos:line="10" pos:column="13">: <expr><name pos:line="10" pos:column="15">AMQP_EMPTY_BYTES<pos:position pos:line="10" pos:column="31"/></name></expr></else></ternary></expr></argument>,
            <comment type="block" pos:line="11" pos:column="13">/* passive     = */</comment> <argument><expr><literal type="number" pos:line="11" pos:column="33">0<pos:position pos:line="11" pos:column="34"/></literal></expr></argument>,
            <comment type="block" pos:line="12" pos:column="13">/* durable     = */</comment> <argument><expr><literal type="number" pos:line="12" pos:column="33">0<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>,
            <comment type="block" pos:line="13" pos:column="13">/* exclusive   = */</comment> <argument><expr><literal type="number" pos:line="13" pos:column="33">0<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>,
            <comment type="block" pos:line="14" pos:column="13">/* auto_delete = */</comment> <argument><expr><literal type="number" pos:line="14" pos:column="33">1<pos:position pos:line="14" pos:column="34"/></literal></expr></argument>,
            <comment type="block" pos:line="15" pos:column="13">/* arguments   = */</comment> <argument><expr><name pos:line="15" pos:column="33">AMQP_EMPTY_TABLE<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">qd_ret<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">==<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">NULL<pos:position pos:line="16" pos:column="23"/></name></expr>)<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24">
    <block pos:line="17" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ERROR<pos:position pos:line="18" pos:column="14"/></name> <argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="string" pos:line="18" pos:column="16">"amqp plugin: amqp_queue_declare failed."<pos:position pos:line="18" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">camqp_close_connection<pos:position pos:line="19" pos:column="31"/></name> <argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">conf<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><operator pos:line="20" pos:column="16">(<pos:position pos:line="20" pos:column="17"/></operator><operator pos:line="20" pos:column="17">-<pos:position pos:line="20" pos:column="18"/></operator><literal type="number" pos:line="20" pos:column="18">1<pos:position pos:line="20" pos:column="19"/></literal><operator pos:line="20" pos:column="19">)<pos:position pos:line="20" pos:column="20"/></operator></expr>;<pos:position pos:line="20" pos:column="21"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">conf<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">queue<pos:position pos:line="23" pos:column="20"/></name></name> <operator pos:line="23" pos:column="21">==<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">NULL<pos:position pos:line="23" pos:column="28"/></name></expr>)<pos:position pos:line="23" pos:column="29"/></condition><then pos:line="23" pos:column="29">
    <block pos:line="24" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">conf<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">queue<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <call><name pos:line="25" pos:column="23">camqp_bytes_cstring<pos:position pos:line="25" pos:column="42"/></name> <argument_list pos:line="25" pos:column="43">(<argument><expr><operator pos:line="25" pos:column="44">&amp;<pos:position pos:line="25" pos:column="49"/></operator><name><name pos:line="25" pos:column="45">qd_ret<pos:position pos:line="25" pos:column="51"/></name><operator pos:line="25" pos:column="51">-&gt;<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="53">queue<pos:position pos:line="25" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">conf<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">queue<pos:position pos:line="26" pos:column="24"/></name></name> <operator pos:line="26" pos:column="25">==<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="28">NULL<pos:position pos:line="26" pos:column="32"/></name></expr>)<pos:position pos:line="26" pos:column="33"/></condition><then pos:line="26" pos:column="33">
        <block pos:line="27" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">ERROR<pos:position pos:line="28" pos:column="18"/></name> <argument_list pos:line="28" pos:column="19">(<argument><expr><literal type="string" pos:line="28" pos:column="20">"amqp plugin: camqp_bytes_cstring failed."<pos:position pos:line="28" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">camqp_close_connection<pos:position pos:line="29" pos:column="35"/></name> <argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">conf<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="43"/></expr_stmt>
            <return pos:line="30" pos:column="13">return <expr><operator pos:line="30" pos:column="20">(<pos:position pos:line="30" pos:column="21"/></operator><operator pos:line="30" pos:column="21">-<pos:position pos:line="30" pos:column="22"/></operator><literal type="number" pos:line="30" pos:column="22">1<pos:position pos:line="30" pos:column="23"/></literal><operator pos:line="30" pos:column="23">)<pos:position pos:line="30" pos:column="24"/></operator></expr>;<pos:position pos:line="30" pos:column="25"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="33" pos:column="9">INFO<pos:position pos:line="33" pos:column="13"/></name> <argument_list pos:line="33" pos:column="14">(<argument><expr><literal type="string" pos:line="33" pos:column="15">"amqp plugin: Created queue \"%s\"."<pos:position pos:line="33" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="53">conf<pos:position pos:line="33" pos:column="57"/></name><operator pos:line="33" pos:column="57">-&gt;<pos:position pos:line="33" pos:column="62"/></operator><name pos:line="33" pos:column="59">queue<pos:position pos:line="33" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">DEBUG<pos:position pos:line="35" pos:column="10"/></name> <argument_list pos:line="35" pos:column="11">(<argument><expr><literal type="string" pos:line="35" pos:column="12">"amqp plugin: Successfully created queue \"%s\"."<pos:position pos:line="35" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="63">conf<pos:position pos:line="35" pos:column="67"/></name><operator pos:line="35" pos:column="67">-&gt;<pos:position pos:line="35" pos:column="72"/></operator><name pos:line="35" pos:column="69">queue<pos:position pos:line="35" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="76"/></expr_stmt>

    <comment type="block" pos:line="37" pos:column="5">/* bind to an exchange */</comment>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">conf<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">exchange<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">!=<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">NULL<pos:position pos:line="38" pos:column="31"/></name></expr>)<pos:position pos:line="38" pos:column="32"/></condition><then pos:line="38" pos:column="32">
    <block pos:line="39" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="40" pos:column="9">amqp_queue_bind_ok_t<pos:position pos:line="40" pos:column="29"/></name> <modifier pos:line="40" pos:column="30">*<pos:position pos:line="40" pos:column="31"/></modifier></type><name pos:line="40" pos:column="31">qb_ret<pos:position pos:line="40" pos:column="37"/></name></decl>;<pos:position pos:line="40" pos:column="38"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="42" pos:column="9">assert<pos:position pos:line="42" pos:column="15"/></name> <argument_list pos:line="42" pos:column="16">(<argument><expr><name><name pos:line="42" pos:column="17">conf<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">queue<pos:position pos:line="42" pos:column="28"/></name></name> <operator pos:line="42" pos:column="29">!=<pos:position pos:line="42" pos:column="31"/></operator> <name pos:line="42" pos:column="32">NULL<pos:position pos:line="42" pos:column="36"/></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="43" pos:column="9">qb_ret<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <call><name pos:line="43" pos:column="18">amqp_queue_bind<pos:position pos:line="43" pos:column="33"/></name> <argument_list pos:line="43" pos:column="34">(<argument><expr><name><name pos:line="43" pos:column="35">conf<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">-&gt;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="41">connection<pos:position pos:line="43" pos:column="51"/></name></name></expr></argument>,
                <comment type="block" pos:line="44" pos:column="17">/* channel     = */</comment> <argument><expr><name pos:line="44" pos:column="37">CAMQP_CHANNEL<pos:position pos:line="44" pos:column="50"/></name></expr></argument>,
                <comment type="block" pos:line="45" pos:column="17">/* queue       = */</comment> <argument><expr><call><name pos:line="45" pos:column="37">amqp_cstring_bytes<pos:position pos:line="45" pos:column="55"/></name> <argument_list pos:line="45" pos:column="56">(<argument><expr><name><name pos:line="45" pos:column="57">conf<pos:position pos:line="45" pos:column="61"/></name><operator pos:line="45" pos:column="61">-&gt;<pos:position pos:line="45" pos:column="66"/></operator><name pos:line="45" pos:column="63">queue<pos:position pos:line="45" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="69"/></argument_list></call></expr></argument>,
                <comment type="block" pos:line="46" pos:column="17">/* exchange    = */</comment> <argument><expr><call><name pos:line="46" pos:column="37">amqp_cstring_bytes<pos:position pos:line="46" pos:column="55"/></name> <argument_list pos:line="46" pos:column="56">(<argument><expr><name><name pos:line="46" pos:column="57">conf<pos:position pos:line="46" pos:column="61"/></name><operator pos:line="46" pos:column="61">-&gt;<pos:position pos:line="46" pos:column="66"/></operator><name pos:line="46" pos:column="63">exchange<pos:position pos:line="46" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="72"/></argument_list></call></expr></argument>,
                <comment type="block" pos:line="47" pos:column="17">/* routing_key = */</comment> <argument><expr><ternary><condition><expr><operator pos:line="47" pos:column="37">(<pos:position pos:line="47" pos:column="38"/></operator><name><name pos:line="47" pos:column="38">conf<pos:position pos:line="47" pos:column="42"/></name><operator pos:line="47" pos:column="42">-&gt;<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="44">routing_key<pos:position pos:line="47" pos:column="55"/></name></name> <operator pos:line="47" pos:column="56">!=<pos:position pos:line="47" pos:column="58"/></operator> <name pos:line="47" pos:column="59">NULL<pos:position pos:line="47" pos:column="63"/></name><operator pos:line="47" pos:column="63">)<pos:position pos:line="47" pos:column="64"/></operator></expr>
                ?<pos:position pos:line="48" pos:column="18"/></condition><then pos:line="48" pos:column="18"> <expr><call><name pos:line="48" pos:column="19">amqp_cstring_bytes<pos:position pos:line="48" pos:column="37"/></name> <argument_list pos:line="48" pos:column="38">(<argument><expr><name><name pos:line="48" pos:column="39">conf<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">-&gt;<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="45">routing_key<pos:position pos:line="48" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr>
                <pos:position pos:line="49" pos:column="17"/></then><else pos:line="49" pos:column="17">: <expr><name pos:line="49" pos:column="19">AMQP_EMPTY_BYTES<pos:position pos:line="49" pos:column="35"/></name></expr></else></ternary></expr></argument>,
                <comment type="block" pos:line="50" pos:column="17">/* arguments   = */</comment> <argument><expr><name pos:line="50" pos:column="37">AMQP_EMPTY_TABLE<pos:position pos:line="50" pos:column="53"/></name></expr></argument>)<pos:position pos:line="50" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="55"/></expr_stmt>
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">(<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">qb_ret<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">==<pos:position pos:line="51" pos:column="23"/></operator> <name pos:line="51" pos:column="24">NULL<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">)<pos:position pos:line="51" pos:column="29"/></operator> <operator pos:line="51" pos:column="30">&amp;&amp;<pos:position pos:line="51" pos:column="40"/></operator> <call><name pos:line="51" pos:column="33">camqp_is_error<pos:position pos:line="51" pos:column="47"/></name> <argument_list pos:line="51" pos:column="48">(<argument><expr><name pos:line="51" pos:column="49">conf<pos:position pos:line="51" pos:column="53"/></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="55"/></condition><then pos:line="51" pos:column="55">
        <block pos:line="52" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="53" pos:column="13">char<pos:position pos:line="53" pos:column="17"/></name></type> <name><name pos:line="53" pos:column="18">errbuf<pos:position pos:line="53" pos:column="24"/></name><index pos:line="53" pos:column="24">[<expr><literal type="number" pos:line="53" pos:column="25">1024<pos:position pos:line="53" pos:column="29"/></literal></expr>]<pos:position pos:line="53" pos:column="30"/></index></name></decl>;<pos:position pos:line="53" pos:column="31"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">ERROR<pos:position pos:line="54" pos:column="18"/></name> <argument_list pos:line="54" pos:column="19">(<argument><expr><literal type="string" pos:line="54" pos:column="20">"amqp plugin: amqp_queue_bind failed: %s"<pos:position pos:line="54" pos:column="61"/></literal></expr></argument>,
                    <argument><expr><call><name pos:line="55" pos:column="21">camqp_strerror<pos:position pos:line="55" pos:column="35"/></name> <argument_list pos:line="55" pos:column="36">(<argument><expr><name pos:line="55" pos:column="37">conf<pos:position pos:line="55" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="43">errbuf<pos:position pos:line="55" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="51">sizeof <argument_list pos:line="55" pos:column="58">(<argument><expr><name pos:line="55" pos:column="59">errbuf<pos:position pos:line="55" pos:column="65"/></name></expr></argument>)<pos:position pos:line="55" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">camqp_close_connection<pos:position pos:line="56" pos:column="35"/></name> <argument_list pos:line="56" pos:column="36">(<argument><expr><name pos:line="56" pos:column="37">conf<pos:position pos:line="56" pos:column="41"/></name></expr></argument>)<pos:position pos:line="56" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="43"/></expr_stmt>
            <return pos:line="57" pos:column="13">return <expr><operator pos:line="57" pos:column="20">(<pos:position pos:line="57" pos:column="21"/></operator><operator pos:line="57" pos:column="21">-<pos:position pos:line="57" pos:column="22"/></operator><literal type="number" pos:line="57" pos:column="22">1<pos:position pos:line="57" pos:column="23"/></literal><operator pos:line="57" pos:column="23">)<pos:position pos:line="57" pos:column="24"/></operator></expr>;<pos:position pos:line="57" pos:column="25"/></return>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="60" pos:column="9">DEBUG<pos:position pos:line="60" pos:column="14"/></name> <argument_list pos:line="60" pos:column="15">(<argument><expr><literal type="string" pos:line="60" pos:column="16">"amqp plugin: Successfully bound queue \"%s\" to exchange \"%s\"."<pos:position pos:line="60" pos:column="82"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="61" pos:column="17">conf<pos:position pos:line="61" pos:column="21"/></name><operator pos:line="61" pos:column="21">-&gt;<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="23">queue<pos:position pos:line="61" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="30">conf<pos:position pos:line="61" pos:column="34"/></name><operator pos:line="61" pos:column="34">-&gt;<pos:position pos:line="61" pos:column="39"/></operator><name pos:line="61" pos:column="36">exchange<pos:position pos:line="61" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if> <comment type="block" pos:line="62" pos:column="7">/* if (conf-&gt;exchange != NULL) */</comment>

    <expr_stmt><expr><name pos:line="64" pos:column="5">cm_ret<pos:position pos:line="64" pos:column="11"/></name> <operator pos:line="64" pos:column="12">=<pos:position pos:line="64" pos:column="13"/></operator> <call><name pos:line="64" pos:column="14">amqp_basic_consume<pos:position pos:line="64" pos:column="32"/></name> <argument_list pos:line="64" pos:column="33">(<argument><expr><name><name pos:line="64" pos:column="34">conf<pos:position pos:line="64" pos:column="38"/></name><operator pos:line="64" pos:column="38">-&gt;<pos:position pos:line="64" pos:column="43"/></operator><name pos:line="64" pos:column="40">connection<pos:position pos:line="64" pos:column="50"/></name></name></expr></argument>,
            <comment type="block" pos:line="65" pos:column="13">/* channel      = */</comment> <argument><expr><name pos:line="65" pos:column="34">CAMQP_CHANNEL<pos:position pos:line="65" pos:column="47"/></name></expr></argument>,
            <comment type="block" pos:line="66" pos:column="13">/* queue        = */</comment> <argument><expr><call><name pos:line="66" pos:column="34">amqp_cstring_bytes<pos:position pos:line="66" pos:column="52"/></name> <argument_list pos:line="66" pos:column="53">(<argument><expr><name><name pos:line="66" pos:column="54">conf<pos:position pos:line="66" pos:column="58"/></name><operator pos:line="66" pos:column="58">-&gt;<pos:position pos:line="66" pos:column="63"/></operator><name pos:line="66" pos:column="60">queue<pos:position pos:line="66" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="66"/></argument_list></call></expr></argument>,
            <comment type="block" pos:line="67" pos:column="13">/* consumer_tag = */</comment> <argument><expr><name pos:line="67" pos:column="34">AMQP_EMPTY_BYTES<pos:position pos:line="67" pos:column="50"/></name></expr></argument>,
            <comment type="block" pos:line="68" pos:column="13">/* no_local     = */</comment> <argument><expr><literal type="number" pos:line="68" pos:column="34">0<pos:position pos:line="68" pos:column="35"/></literal></expr></argument>,
            <comment type="block" pos:line="69" pos:column="13">/* no_ack       = */</comment> <argument><expr><literal type="number" pos:line="69" pos:column="34">1<pos:position pos:line="69" pos:column="35"/></literal></expr></argument>,
            <comment type="block" pos:line="70" pos:column="13">/* exclusive    = */</comment> <argument><expr><literal type="number" pos:line="70" pos:column="34">0<pos:position pos:line="70" pos:column="35"/></literal></expr></argument>,
            <comment type="block" pos:line="71" pos:column="13">/* arguments    = */</comment> <argument><expr><name pos:line="71" pos:column="34">AMQP_EMPTY_TABLE<pos:position pos:line="71" pos:column="50"/></name></expr></argument>
        )<pos:position pos:line="72" pos:column="10"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="11"/></expr_stmt>
    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><operator pos:line="73" pos:column="9">(<pos:position pos:line="73" pos:column="10"/></operator><name pos:line="73" pos:column="10">cm_ret<pos:position pos:line="73" pos:column="16"/></name> <operator pos:line="73" pos:column="17">==<pos:position pos:line="73" pos:column="19"/></operator> <name pos:line="73" pos:column="20">NULL<pos:position pos:line="73" pos:column="24"/></name><operator pos:line="73" pos:column="24">)<pos:position pos:line="73" pos:column="25"/></operator> <operator pos:line="73" pos:column="26">&amp;&amp;<pos:position pos:line="73" pos:column="36"/></operator> <call><name pos:line="73" pos:column="29">camqp_is_error<pos:position pos:line="73" pos:column="43"/></name> <argument_list pos:line="73" pos:column="44">(<argument><expr><name pos:line="73" pos:column="45">conf<pos:position pos:line="73" pos:column="49"/></name></expr></argument>)<pos:position pos:line="73" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="51"/></condition><then pos:line="73" pos:column="51">
    <block pos:line="74" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="75" pos:column="9">char<pos:position pos:line="75" pos:column="13"/></name></type> <name><name pos:line="75" pos:column="14">errbuf<pos:position pos:line="75" pos:column="20"/></name><index pos:line="75" pos:column="20">[<expr><literal type="number" pos:line="75" pos:column="21">1024<pos:position pos:line="75" pos:column="25"/></literal></expr>]<pos:position pos:line="75" pos:column="26"/></index></name></decl>;<pos:position pos:line="75" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">ERROR<pos:position pos:line="76" pos:column="14"/></name> <argument_list pos:line="76" pos:column="15">(<argument><expr><literal type="string" pos:line="76" pos:column="16">"amqp plugin: amqp_basic_consume failed: %s"<pos:position pos:line="76" pos:column="60"/></literal></expr></argument>,
                    <argument><expr><call><name pos:line="77" pos:column="21">camqp_strerror<pos:position pos:line="77" pos:column="35"/></name> <argument_list pos:line="77" pos:column="36">(<argument><expr><name pos:line="77" pos:column="37">conf<pos:position pos:line="77" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="43">errbuf<pos:position pos:line="77" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="51">sizeof <argument_list pos:line="77" pos:column="58">(<argument><expr><name pos:line="77" pos:column="59">errbuf<pos:position pos:line="77" pos:column="65"/></name></expr></argument>)<pos:position pos:line="77" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="77" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">camqp_close_connection<pos:position pos:line="78" pos:column="31"/></name> <argument_list pos:line="78" pos:column="32">(<argument><expr><name pos:line="78" pos:column="33">conf<pos:position pos:line="78" pos:column="37"/></name></expr></argument>)<pos:position pos:line="78" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="39"/></expr_stmt>
        <return pos:line="79" pos:column="9">return <expr><operator pos:line="79" pos:column="16">(<pos:position pos:line="79" pos:column="17"/></operator><operator pos:line="79" pos:column="17">-<pos:position pos:line="79" pos:column="18"/></operator><literal type="number" pos:line="79" pos:column="18">1<pos:position pos:line="79" pos:column="19"/></literal><operator pos:line="79" pos:column="19">)<pos:position pos:line="79" pos:column="20"/></operator></expr>;<pos:position pos:line="79" pos:column="21"/></return>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>

    <return pos:line="82" pos:column="5">return <expr><operator pos:line="82" pos:column="12">(<pos:position pos:line="82" pos:column="13"/></operator><literal type="number" pos:line="82" pos:column="13">0<pos:position pos:line="82" pos:column="14"/></literal><operator pos:line="82" pos:column="14">)<pos:position pos:line="82" pos:column="15"/></operator></expr>;<pos:position pos:line="82" pos:column="16"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

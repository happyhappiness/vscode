<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_77_collectd-4.0.7.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">foreachfile_callback<pos:position pos:line="2" pos:column="21"/></name> <argument_list pos:line="2" pos:column="22">(<argument><expr><name pos:line="2" pos:column="23">dirname<pos:position pos:line="2" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="32">data1<pos:position pos:line="2" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="39">data2<pos:position pos:line="2" pos:column="44"/></name></expr></argument>)<pos:position pos:line="2" pos:column="45"/></argument_list>
     <name pos:line="3" pos:column="6">char<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier><name pos:line="3" pos:column="12">dirname<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">lt_ptr<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">data1<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="5" pos:column="6">lt_ptr<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">data2<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
<block pos:line="6" pos:column="1">{
  <macro><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name> <argument_list pos:line="7" pos:column="7">(<argument pos:line="7" pos:column="8">*func<pos:position pos:line="7" pos:column="13"/></argument>)<pos:position pos:line="7" pos:column="14"/></argument_list></macro> <expr_stmt><expr><call><name pos:line="7" pos:column="15">LT_PARAMS<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><operator pos:line="7" pos:column="25">(<pos:position pos:line="7" pos:column="26"/></operator><specifier pos:line="7" pos:column="26">const<pos:position pos:line="7" pos:column="31"/></specifier> <name pos:line="7" pos:column="32">char<pos:position pos:line="7" pos:column="36"/></name> <operator pos:line="7" pos:column="37">*<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="38">filename<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">,<pos:position pos:line="7" pos:column="47"/></operator> <name pos:line="7" pos:column="48">lt_ptr<pos:position pos:line="7" pos:column="54"/></name> <name pos:line="7" pos:column="55">data<pos:position pos:line="7" pos:column="59"/></name><operator pos:line="7" pos:column="59">)<pos:position pos:line="7" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call>
	<operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <operator pos:line="8" pos:column="11">(<pos:position pos:line="8" pos:column="12"/></operator><macro><name pos:line="8" pos:column="12">int<pos:position pos:line="8" pos:column="15"/></name> <argument_list pos:line="8" pos:column="16">(<argument pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></argument>)<pos:position pos:line="8" pos:column="19"/></argument_list></macro> <call><name pos:line="8" pos:column="20">LT_PARAMS<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><operator pos:line="8" pos:column="30">(<pos:position pos:line="8" pos:column="31"/></operator><specifier pos:line="8" pos:column="31">const<pos:position pos:line="8" pos:column="36"/></specifier> <name pos:line="8" pos:column="37">char<pos:position pos:line="8" pos:column="41"/></name> <operator pos:line="8" pos:column="42">*<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="43">filename<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">,<pos:position pos:line="8" pos:column="52"/></operator> <name pos:line="8" pos:column="53">lt_ptr<pos:position pos:line="8" pos:column="59"/></name> <name pos:line="8" pos:column="60">data<pos:position pos:line="8" pos:column="64"/></name><operator pos:line="8" pos:column="64">)<pos:position pos:line="8" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call><operator pos:line="8" pos:column="66">)<pos:position pos:line="8" pos:column="67"/></operator> <name pos:line="8" pos:column="68">data1<pos:position pos:line="8" pos:column="73"/></name></expr>;<pos:position pos:line="8" pos:column="74"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type>	  <name pos:line="10" pos:column="11">is_done<pos:position pos:line="10" pos:column="18"/></name>  <init pos:line="10" pos:column="20">= <expr><literal type="number" pos:line="10" pos:column="22">0<pos:position pos:line="10" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name>   <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">argz<pos:position pos:line="11" pos:column="15"/></name>     <init pos:line="11" pos:column="20">= <expr><literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type>  <name pos:line="12" pos:column="11">argz_len<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><literal type="number" pos:line="12" pos:column="22">0<pos:position pos:line="12" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><call><name pos:line="14" pos:column="7">list_files_by_dir<pos:position pos:line="14" pos:column="24"/></name> <argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">dirname<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="35">&amp;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="36">argz<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="42">&amp;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="43">argz_len<pos:position pos:line="14" pos:column="51"/></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call> <operator pos:line="14" pos:column="53">!=<pos:position pos:line="14" pos:column="55"/></operator> <literal type="number" pos:line="14" pos:column="56">0<pos:position pos:line="14" pos:column="57"/></literal></expr>)<pos:position pos:line="14" pos:column="58"/></condition><then pos:line="14" pos:column="58">
    <block type="pseudo"><goto pos:line="15" pos:column="5">goto <name pos:line="15" pos:column="10">cleanup<pos:position pos:line="15" pos:column="17"/></name>;<pos:position pos:line="15" pos:column="18"/></goto></block></then></if>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">!<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">argz<pos:position pos:line="16" pos:column="12"/></name></expr>)<pos:position pos:line="16" pos:column="13"/></condition><then pos:line="16" pos:column="13">
    <block type="pseudo"><goto pos:line="17" pos:column="5">goto <name pos:line="17" pos:column="10">cleanup<pos:position pos:line="17" pos:column="17"/></name>;<pos:position pos:line="17" pos:column="18"/></goto></block></then></if>

  <block pos:line="19" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">char<pos:position pos:line="20" pos:column="9"/></name> <modifier pos:line="20" pos:column="10">*<pos:position pos:line="20" pos:column="11"/></modifier></type><name pos:line="20" pos:column="11">filename<pos:position pos:line="20" pos:column="19"/></name> <init pos:line="20" pos:column="20">= <expr><literal type="number" pos:line="20" pos:column="22">0<pos:position pos:line="20" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="24"/></decl_stmt>
    <while pos:line="21" pos:column="5">while <condition pos:line="21" pos:column="11">(<expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">filename<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <call><name pos:line="21" pos:column="24">argz_next<pos:position pos:line="21" pos:column="33"/></name> <argument_list pos:line="21" pos:column="34">(<argument><expr><name pos:line="21" pos:column="35">argz<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">argz_len<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="51">filename<pos:position pos:line="21" pos:column="59"/></name></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call><operator pos:line="21" pos:column="60">)<pos:position pos:line="21" pos:column="61"/></operator></expr>)<pos:position pos:line="21" pos:column="62"/></condition>
      <block type="pseudo"><if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><operator pos:line="22" pos:column="11">(<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">is_done<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <call pos:line="22" pos:column="22">(<modifier pos:line="22" pos:column="23">*<pos:position pos:line="22" pos:column="24"/></modifier><name pos:line="22" pos:column="24">func<pos:position pos:line="22" pos:column="28"/></name>) <argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">filename<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">data2<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call><operator pos:line="22" pos:column="47">)<pos:position pos:line="22" pos:column="48"/></operator></expr>)<pos:position pos:line="22" pos:column="49"/></condition><then pos:line="22" pos:column="49">
	<block type="pseudo"><break pos:line="23" pos:column="9">break;<pos:position pos:line="23" pos:column="15"/></break></block></then></if></block></while>
  }<pos:position pos:line="24" pos:column="4"/></block>

 <label><name pos:line="26" pos:column="2">cleanup<pos:position pos:line="26" pos:column="9"/></name>:<pos:position pos:line="26" pos:column="10"/></label>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">LT_DLFREE<pos:position pos:line="27" pos:column="12"/></name> <argument_list pos:line="27" pos:column="13">(<argument><expr><name pos:line="27" pos:column="14">argz<pos:position pos:line="27" pos:column="18"/></name></expr></argument>)<pos:position pos:line="27" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt>

  <return pos:line="29" pos:column="3">return <expr><name pos:line="29" pos:column="10">is_done<pos:position pos:line="29" pos:column="17"/></name></expr>;<pos:position pos:line="29" pos:column="18"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_function_100.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">try_dlopen<pos:position pos:line="2" pos:column="11"/></name> <parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">lt_dlhandle<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">phandle<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">filename<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier> <name pos:line="2" pos:column="63">char<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">ext<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
	    <parameter><decl><type><name pos:line="3" pos:column="13">lt_dladvise<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">advise<pos:position pos:line="3" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="32"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type>	<name pos:line="5" pos:column="17">saved_error<pos:position pos:line="5" pos:column="28"/></name>	<init pos:line="5" pos:column="33">= <expr><literal type="number" pos:line="5" pos:column="35">0<pos:position pos:line="5" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type>	<name pos:line="6" pos:column="17">archive_name<pos:position pos:line="6" pos:column="29"/></name>	<init pos:line="6" pos:column="33">= <expr><literal type="number" pos:line="6" pos:column="35">0<pos:position pos:line="6" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type>	<name pos:line="7" pos:column="17">canonical<pos:position pos:line="7" pos:column="26"/></name>	<init pos:line="7" pos:column="33">= <expr><literal type="number" pos:line="7" pos:column="35">0<pos:position pos:line="7" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type>	<name pos:line="8" pos:column="17">base_name<pos:position pos:line="8" pos:column="26"/></name>	<init pos:line="8" pos:column="33">= <expr><literal type="number" pos:line="8" pos:column="35">0<pos:position pos:line="8" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type>	<name pos:line="9" pos:column="17">dir<pos:position pos:line="9" pos:column="20"/></name>		<init pos:line="9" pos:column="33">= <expr><literal type="number" pos:line="9" pos:column="35">0<pos:position pos:line="9" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type>	<name pos:line="10" pos:column="17">name<pos:position pos:line="10" pos:column="21"/></name>		<init pos:line="10" pos:column="33">= <expr><literal type="number" pos:line="10" pos:column="35">0<pos:position pos:line="10" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type>        <name pos:line="11" pos:column="17">attempt<pos:position pos:line="11" pos:column="24"/></name>		<init pos:line="11" pos:column="33">= <expr><literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type>		<name pos:line="12" pos:column="17">errors<pos:position pos:line="12" pos:column="23"/></name>		<init pos:line="12" pos:column="33">= <expr><literal type="number" pos:line="12" pos:column="35">0<pos:position pos:line="12" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">lt_dlhandle<pos:position pos:line="13" pos:column="14"/></name></type>	<name pos:line="13" pos:column="17">newhandle<pos:position pos:line="13" pos:column="26"/></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">assert<pos:position pos:line="15" pos:column="9"/></name> <argument_list pos:line="15" pos:column="10">(<argument><expr><name pos:line="15" pos:column="11">phandle<pos:position pos:line="15" pos:column="18"/></name></expr></argument>)<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">assert<pos:position pos:line="16" pos:column="9"/></name> <argument_list pos:line="16" pos:column="10">(<argument><expr><operator pos:line="16" pos:column="11">*<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">phandle<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">==<pos:position pos:line="16" pos:column="22"/></operator> <literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>

<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">LT_DEBUG_LOADERS<pos:position pos:line="18" pos:column="24"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">fprintf<pos:position pos:line="19" pos:column="10"/></name> <argument_list pos:line="19" pos:column="11">(<argument><expr><name pos:line="19" pos:column="12">stderr<pos:position pos:line="19" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="20">"try_dlopen (%s, %s)\n"<pos:position pos:line="19" pos:column="43"/></literal></expr></argument>,
	   <argument><expr><ternary><condition><expr><name pos:line="20" pos:column="12">filename<pos:position pos:line="20" pos:column="20"/></name></expr> ?<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22"> <expr><name pos:line="20" pos:column="23">filename<pos:position pos:line="20" pos:column="31"/></name></expr> <pos:position pos:line="20" pos:column="32"/></then><else pos:line="20" pos:column="32">: <expr><literal type="string" pos:line="20" pos:column="34">"(null)"<pos:position pos:line="20" pos:column="42"/></literal></expr></else></ternary></expr></argument>,
	   <argument><expr><ternary><condition><expr><name pos:line="21" pos:column="12">ext<pos:position pos:line="21" pos:column="15"/></name></expr> ?<pos:position pos:line="21" pos:column="17"/></condition><then pos:line="21" pos:column="17"> <expr><name pos:line="21" pos:column="18">ext<pos:position pos:line="21" pos:column="21"/></name></expr> <pos:position pos:line="21" pos:column="22"/></then><else pos:line="21" pos:column="22">: <expr><literal type="string" pos:line="21" pos:column="24">"(null)"<pos:position pos:line="21" pos:column="32"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">LT__GETERROR<pos:position pos:line="24" pos:column="15"/></name> <argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">saved_error<pos:position pos:line="24" pos:column="28"/></name></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="26" pos:column="3">/* dlopen self? */</comment>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><operator pos:line="27" pos:column="7">!<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">filename<pos:position pos:line="27" pos:column="16"/></name></expr>)<pos:position pos:line="27" pos:column="17"/></condition><then pos:line="27" pos:column="17">
    <block pos:line="28" pos:column="5">{
      <expr_stmt><expr><operator pos:line="29" pos:column="7">*<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">phandle<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <operator pos:line="29" pos:column="18">(<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">lt_dlhandle<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">)<pos:position pos:line="29" pos:column="31"/></operator> <call><name pos:line="29" pos:column="32">lt__zalloc<pos:position pos:line="29" pos:column="42"/></name> <argument_list pos:line="29" pos:column="43">(<argument><expr><sizeof pos:line="29" pos:column="44">sizeof <argument_list pos:line="29" pos:column="51">(<argument><expr pos:line="29" pos:column="52">struct <name pos:line="29" pos:column="59">lt__handle<pos:position pos:line="29" pos:column="69"/></name></expr></argument>)<pos:position pos:line="29" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="72"/></expr_stmt>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><operator pos:line="30" pos:column="11">*<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">phandle<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">==<pos:position pos:line="30" pos:column="22"/></operator> <literal type="number" pos:line="30" pos:column="23">0<pos:position pos:line="30" pos:column="24"/></literal></expr>)<pos:position pos:line="30" pos:column="25"/></condition><then pos:line="30" pos:column="25">
	<block type="pseudo"><return pos:line="31" pos:column="9">return <expr><literal type="number" pos:line="31" pos:column="16">1<pos:position pos:line="31" pos:column="17"/></literal></expr>;<pos:position pos:line="31" pos:column="18"/></return></block></then></if>

      <expr_stmt><expr><name pos:line="33" pos:column="7">newhandle<pos:position pos:line="33" pos:column="16"/></name>	<operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <operator pos:line="33" pos:column="19">*<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="20">phandle<pos:position pos:line="33" pos:column="27"/></name></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>

      <comment type="block" pos:line="35" pos:column="7">/* lt_dlclose()ing yourself is very bad!  Disallow it.  */</comment>
      <expr_stmt><expr><name><name pos:line="36" pos:column="7">newhandle<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">-&gt;<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="18">info<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">.<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="23">is_resident<pos:position pos:line="36" pos:column="34"/></name></name> <operator pos:line="36" pos:column="35">=<pos:position pos:line="36" pos:column="36"/></operator> <literal type="number" pos:line="36" pos:column="37">1<pos:position pos:line="36" pos:column="38"/></literal></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>

      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><call><name pos:line="38" pos:column="11">tryall_dlopen<pos:position pos:line="38" pos:column="24"/></name> <argument_list pos:line="38" pos:column="25">(<argument><expr><operator pos:line="38" pos:column="26">&amp;<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="27">newhandle<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="38">0<pos:position pos:line="38" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="41">advise<pos:position pos:line="38" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="49">0<pos:position pos:line="38" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></call> <operator pos:line="38" pos:column="52">!=<pos:position pos:line="38" pos:column="54"/></operator> <literal type="number" pos:line="38" pos:column="55">0<pos:position pos:line="38" pos:column="56"/></literal></expr>)<pos:position pos:line="38" pos:column="57"/></condition><then pos:line="38" pos:column="57">
	<block pos:line="39" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="40" pos:column="11">FREE<pos:position pos:line="40" pos:column="15"/></name> <argument_list pos:line="40" pos:column="16">(<argument><expr><operator pos:line="40" pos:column="17">*<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="18">phandle<pos:position pos:line="40" pos:column="25"/></name></expr></argument>)<pos:position pos:line="40" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>
	  <return pos:line="41" pos:column="11">return <expr><literal type="number" pos:line="41" pos:column="18">1<pos:position pos:line="41" pos:column="19"/></literal></expr>;<pos:position pos:line="41" pos:column="20"/></return>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

      <goto pos:line="44" pos:column="7">goto <name pos:line="44" pos:column="12">register_handle<pos:position pos:line="44" pos:column="27"/></name>;<pos:position pos:line="44" pos:column="28"/></goto>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="47" pos:column="3">assert<pos:position pos:line="47" pos:column="9"/></name> <argument_list pos:line="47" pos:column="10">(<argument><expr><name pos:line="47" pos:column="11">filename<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">&amp;&amp;<pos:position pos:line="47" pos:column="30"/></operator> <operator pos:line="47" pos:column="23">*<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="24">filename<pos:position pos:line="47" pos:column="32"/></name></expr></argument>)<pos:position pos:line="47" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="34"/></expr_stmt>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name pos:line="49" pos:column="7">ext<pos:position pos:line="49" pos:column="10"/></name></expr>)<pos:position pos:line="49" pos:column="11"/></condition><then pos:line="49" pos:column="11">
    <block pos:line="50" pos:column="5">{
      <expr_stmt><expr><name pos:line="51" pos:column="7">attempt<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">=<pos:position pos:line="51" pos:column="16"/></operator> <call><name pos:line="51" pos:column="17">MALLOC<pos:position pos:line="51" pos:column="23"/></name> <argument_list pos:line="51" pos:column="24">(<argument><expr><name pos:line="51" pos:column="25">char<pos:position pos:line="51" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="31">LT_STRLEN<pos:position pos:line="51" pos:column="40"/></name> <argument_list pos:line="51" pos:column="41">(<argument><expr><name pos:line="51" pos:column="42">filename<pos:position pos:line="51" pos:column="50"/></name></expr></argument>)<pos:position pos:line="51" pos:column="51"/></argument_list></call> <operator pos:line="51" pos:column="52">+<pos:position pos:line="51" pos:column="53"/></operator> <call><name pos:line="51" pos:column="54">LT_STRLEN<pos:position pos:line="51" pos:column="63"/></name> <argument_list pos:line="51" pos:column="64">(<argument><expr><name pos:line="51" pos:column="65">ext<pos:position pos:line="51" pos:column="68"/></name></expr></argument>)<pos:position pos:line="51" pos:column="69"/></argument_list></call> <operator pos:line="51" pos:column="70">+<pos:position pos:line="51" pos:column="71"/></operator> <literal type="number" pos:line="51" pos:column="72">1<pos:position pos:line="51" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="75"/></expr_stmt>
      <if pos:line="52" pos:column="7">if <condition pos:line="52" pos:column="10">(<expr><operator pos:line="52" pos:column="11">!<pos:position pos:line="52" pos:column="12"/></operator><name pos:line="52" pos:column="12">attempt<pos:position pos:line="52" pos:column="19"/></name></expr>)<pos:position pos:line="52" pos:column="20"/></condition><then pos:line="52" pos:column="20">
	<block type="pseudo"><return pos:line="53" pos:column="9">return <expr><literal type="number" pos:line="53" pos:column="16">1<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></return></block></then></if>

      <expr_stmt><expr><call><name pos:line="55" pos:column="7">sprintf<pos:position pos:line="55" pos:column="14"/></name><argument_list pos:line="55" pos:column="14">(<argument><expr><name pos:line="55" pos:column="15">attempt<pos:position pos:line="55" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="24">"%s%s"<pos:position pos:line="55" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="32">filename<pos:position pos:line="55" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="42">ext<pos:position pos:line="55" pos:column="45"/></name></expr></argument>)<pos:position pos:line="55" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then>
  <else pos:line="57" pos:column="3">else
    <block pos:line="58" pos:column="5">{
      <expr_stmt><expr><name pos:line="59" pos:column="7">attempt<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">=<pos:position pos:line="59" pos:column="16"/></operator> <call><name pos:line="59" pos:column="17">lt__strdup<pos:position pos:line="59" pos:column="27"/></name> <argument_list pos:line="59" pos:column="28">(<argument><expr><name pos:line="59" pos:column="29">filename<pos:position pos:line="59" pos:column="37"/></name></expr></argument>)<pos:position pos:line="59" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="39"/></expr_stmt>
      <if pos:line="60" pos:column="7">if <condition pos:line="60" pos:column="10">(<expr><operator pos:line="60" pos:column="11">!<pos:position pos:line="60" pos:column="12"/></operator><name pos:line="60" pos:column="12">attempt<pos:position pos:line="60" pos:column="19"/></name></expr>)<pos:position pos:line="60" pos:column="20"/></condition><then pos:line="60" pos:column="20">
	<block type="pseudo"><return pos:line="61" pos:column="9">return <expr><literal type="number" pos:line="61" pos:column="16">1<pos:position pos:line="61" pos:column="17"/></literal></expr>;<pos:position pos:line="61" pos:column="18"/></return></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block></else></if>

  <comment type="block" pos:line="64" pos:column="3">/* Doing this immediately allows internal functions to safely
     assume only canonicalized paths are passed.  */</comment>
  <if pos:line="66" pos:column="3">if <condition pos:line="66" pos:column="6">(<expr><call><name pos:line="66" pos:column="7">canonicalize_path<pos:position pos:line="66" pos:column="24"/></name> <argument_list pos:line="66" pos:column="25">(<argument><expr><name pos:line="66" pos:column="26">attempt<pos:position pos:line="66" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="35">&amp;<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="36">canonical<pos:position pos:line="66" pos:column="45"/></name></expr></argument>)<pos:position pos:line="66" pos:column="46"/></argument_list></call> <operator pos:line="66" pos:column="47">!=<pos:position pos:line="66" pos:column="49"/></operator> <literal type="number" pos:line="66" pos:column="50">0<pos:position pos:line="66" pos:column="51"/></literal></expr>)<pos:position pos:line="66" pos:column="52"/></condition><then pos:line="66" pos:column="52">
    <block pos:line="67" pos:column="5">{
      <expr_stmt><expr><operator pos:line="68" pos:column="7">++<pos:position pos:line="68" pos:column="9"/></operator><name pos:line="68" pos:column="9">errors<pos:position pos:line="68" pos:column="15"/></name></expr>;<pos:position pos:line="68" pos:column="16"/></expr_stmt>
      <goto pos:line="69" pos:column="7">goto <name pos:line="69" pos:column="12">cleanup<pos:position pos:line="69" pos:column="19"/></name>;<pos:position pos:line="69" pos:column="20"/></goto>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="72" pos:column="3">/* If the canonical module name is a path (relative or absolute)
     then split it into a directory part and a name part.  */</comment>
  <expr_stmt><expr><name pos:line="74" pos:column="3">base_name<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">=<pos:position pos:line="74" pos:column="14"/></operator> <call><name pos:line="74" pos:column="15">strrchr<pos:position pos:line="74" pos:column="22"/></name> <argument_list pos:line="74" pos:column="23">(<argument><expr><name pos:line="74" pos:column="24">canonical<pos:position pos:line="74" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="74" pos:column="35">'/'<pos:position pos:line="74" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="40"/></expr_stmt>
  <if pos:line="75" pos:column="3">if <condition pos:line="75" pos:column="6">(<expr><name pos:line="75" pos:column="7">base_name<pos:position pos:line="75" pos:column="16"/></name></expr>)<pos:position pos:line="75" pos:column="17"/></condition><then pos:line="75" pos:column="17">
    <block pos:line="76" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="77" pos:column="7">size_t<pos:position pos:line="77" pos:column="13"/></name></type> <name pos:line="77" pos:column="14">dirlen<pos:position pos:line="77" pos:column="20"/></name> <init pos:line="77" pos:column="21">= <expr><operator pos:line="77" pos:column="23">(<pos:position pos:line="77" pos:column="24"/></operator><literal type="number" pos:line="77" pos:column="24">1<pos:position pos:line="77" pos:column="25"/></literal><operator pos:line="77" pos:column="25">+<pos:position pos:line="77" pos:column="26"/></operator> <name pos:line="77" pos:column="27">base_name<pos:position pos:line="77" pos:column="36"/></name><operator pos:line="77" pos:column="36">)<pos:position pos:line="77" pos:column="37"/></operator> <operator pos:line="77" pos:column="38">-<pos:position pos:line="77" pos:column="39"/></operator> <name pos:line="77" pos:column="40">canonical<pos:position pos:line="77" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="77" pos:column="50"/></decl_stmt>

      <expr_stmt><expr><name pos:line="79" pos:column="7">dir<pos:position pos:line="79" pos:column="10"/></name> <operator pos:line="79" pos:column="11">=<pos:position pos:line="79" pos:column="12"/></operator> <call><name pos:line="79" pos:column="13">MALLOC<pos:position pos:line="79" pos:column="19"/></name> <argument_list pos:line="79" pos:column="20">(<argument><expr><name pos:line="79" pos:column="21">char<pos:position pos:line="79" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="27">1<pos:position pos:line="79" pos:column="28"/></literal><operator pos:line="79" pos:column="28">+<pos:position pos:line="79" pos:column="29"/></operator> <name pos:line="79" pos:column="30">dirlen<pos:position pos:line="79" pos:column="36"/></name></expr></argument>)<pos:position pos:line="79" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="38"/></expr_stmt>
      <if pos:line="80" pos:column="7">if <condition pos:line="80" pos:column="10">(<expr><operator pos:line="80" pos:column="11">!<pos:position pos:line="80" pos:column="12"/></operator><name pos:line="80" pos:column="12">dir<pos:position pos:line="80" pos:column="15"/></name></expr>)<pos:position pos:line="80" pos:column="16"/></condition><then pos:line="80" pos:column="16">
	<block pos:line="81" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="82" pos:column="11">++<pos:position pos:line="82" pos:column="13"/></operator><name pos:line="82" pos:column="13">errors<pos:position pos:line="82" pos:column="19"/></name></expr>;<pos:position pos:line="82" pos:column="20"/></expr_stmt>
	  <goto pos:line="83" pos:column="11">goto <name pos:line="83" pos:column="16">cleanup<pos:position pos:line="83" pos:column="23"/></name>;<pos:position pos:line="83" pos:column="24"/></goto>
	}<pos:position pos:line="84" pos:column="10"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="86" pos:column="7">strncpy<pos:position pos:line="86" pos:column="14"/></name> <argument_list pos:line="86" pos:column="15">(<argument><expr><name pos:line="86" pos:column="16">dir<pos:position pos:line="86" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="21">canonical<pos:position pos:line="86" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="32">dirlen<pos:position pos:line="86" pos:column="38"/></name></expr></argument>)<pos:position pos:line="86" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="87" pos:column="7">dir<pos:position pos:line="87" pos:column="10"/></name><index pos:line="87" pos:column="10">[<expr><name pos:line="87" pos:column="11">dirlen<pos:position pos:line="87" pos:column="17"/></name></expr>]<pos:position pos:line="87" pos:column="18"/></index></name> <operator pos:line="87" pos:column="19">=<pos:position pos:line="87" pos:column="20"/></operator> <name pos:line="87" pos:column="21">LT_EOS_CHAR<pos:position pos:line="87" pos:column="32"/></name></expr>;<pos:position pos:line="87" pos:column="33"/></expr_stmt>

      <expr_stmt><expr><operator pos:line="89" pos:column="7">++<pos:position pos:line="89" pos:column="9"/></operator><name pos:line="89" pos:column="9">base_name<pos:position pos:line="89" pos:column="18"/></name></expr>;<pos:position pos:line="89" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then>
  <else pos:line="91" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="5">MEMREASSIGN<pos:position pos:line="92" pos:column="16"/></name> <argument_list pos:line="92" pos:column="17">(<argument><expr><name pos:line="92" pos:column="18">base_name<pos:position pos:line="92" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="29">canonical<pos:position pos:line="92" pos:column="38"/></name></expr></argument>)<pos:position pos:line="92" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="40"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="94" pos:column="3">assert<pos:position pos:line="94" pos:column="9"/></name> <argument_list pos:line="94" pos:column="10">(<argument><expr><name pos:line="94" pos:column="11">base_name<pos:position pos:line="94" pos:column="20"/></name> <operator pos:line="94" pos:column="21">&amp;&amp;<pos:position pos:line="94" pos:column="31"/></operator> <operator pos:line="94" pos:column="24">*<pos:position pos:line="94" pos:column="25"/></operator><name pos:line="94" pos:column="25">base_name<pos:position pos:line="94" pos:column="34"/></name></expr></argument>)<pos:position pos:line="94" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name pos:line="96" pos:column="3">ext<pos:position pos:line="96" pos:column="6"/></name> <operator pos:line="96" pos:column="7">=<pos:position pos:line="96" pos:column="8"/></operator> <call><name pos:line="96" pos:column="9">strrchr<pos:position pos:line="96" pos:column="16"/></name> <argument_list pos:line="96" pos:column="17">(<argument><expr><name pos:line="96" pos:column="18">base_name<pos:position pos:line="96" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="96" pos:column="29">'.'<pos:position pos:line="96" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="34"/></expr_stmt>
  <if pos:line="97" pos:column="3">if <condition pos:line="97" pos:column="6">(<expr><operator pos:line="97" pos:column="7">!<pos:position pos:line="97" pos:column="8"/></operator><name pos:line="97" pos:column="8">ext<pos:position pos:line="97" pos:column="11"/></name></expr>)<pos:position pos:line="97" pos:column="12"/></condition><then pos:line="97" pos:column="12">
    <block pos:line="98" pos:column="5">{
      <expr_stmt><expr><name pos:line="99" pos:column="7">ext<pos:position pos:line="99" pos:column="10"/></name> <operator pos:line="99" pos:column="11">=<pos:position pos:line="99" pos:column="12"/></operator> <name pos:line="99" pos:column="13">base_name<pos:position pos:line="99" pos:column="22"/></name> <operator pos:line="99" pos:column="23">+<pos:position pos:line="99" pos:column="24"/></operator> <call><name pos:line="99" pos:column="25">LT_STRLEN<pos:position pos:line="99" pos:column="34"/></name> <argument_list pos:line="99" pos:column="35">(<argument><expr><name pos:line="99" pos:column="36">base_name<pos:position pos:line="99" pos:column="45"/></name></expr></argument>)<pos:position pos:line="99" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="102" pos:column="3">/* extract the module name from the file name */</comment>
  <expr_stmt><expr><name pos:line="103" pos:column="3">name<pos:position pos:line="103" pos:column="7"/></name> <operator pos:line="103" pos:column="8">=<pos:position pos:line="103" pos:column="9"/></operator> <call><name pos:line="103" pos:column="10">MALLOC<pos:position pos:line="103" pos:column="16"/></name> <argument_list pos:line="103" pos:column="17">(<argument><expr><name pos:line="103" pos:column="18">char<pos:position pos:line="103" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="24">ext<pos:position pos:line="103" pos:column="27"/></name> <operator pos:line="103" pos:column="28">-<pos:position pos:line="103" pos:column="29"/></operator> <name pos:line="103" pos:column="30">base_name<pos:position pos:line="103" pos:column="39"/></name> <operator pos:line="103" pos:column="40">+<pos:position pos:line="103" pos:column="41"/></operator> <literal type="number" pos:line="103" pos:column="42">1<pos:position pos:line="103" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="45"/></expr_stmt>
  <if pos:line="104" pos:column="3">if <condition pos:line="104" pos:column="6">(<expr><operator pos:line="104" pos:column="7">!<pos:position pos:line="104" pos:column="8"/></operator><name pos:line="104" pos:column="8">name<pos:position pos:line="104" pos:column="12"/></name></expr>)<pos:position pos:line="104" pos:column="13"/></condition><then pos:line="104" pos:column="13">
    <block pos:line="105" pos:column="5">{
      <expr_stmt><expr><operator pos:line="106" pos:column="7">++<pos:position pos:line="106" pos:column="9"/></operator><name pos:line="106" pos:column="9">errors<pos:position pos:line="106" pos:column="15"/></name></expr>;<pos:position pos:line="106" pos:column="16"/></expr_stmt>
      <goto pos:line="107" pos:column="7">goto <name pos:line="107" pos:column="12">cleanup<pos:position pos:line="107" pos:column="19"/></name>;<pos:position pos:line="107" pos:column="20"/></goto>
    }<pos:position pos:line="108" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="110" pos:column="3">/* canonicalize the module name */</comment>
  <block pos:line="111" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="112" pos:column="5">int<pos:position pos:line="112" pos:column="8"/></name></type> <name pos:line="112" pos:column="9">i<pos:position pos:line="112" pos:column="10"/></name></decl>;<pos:position pos:line="112" pos:column="11"/></decl_stmt>
    <for pos:line="113" pos:column="5">for <control pos:line="113" pos:column="9">(<init><expr><name pos:line="113" pos:column="10">i<pos:position pos:line="113" pos:column="11"/></name> <operator pos:line="113" pos:column="12">=<pos:position pos:line="113" pos:column="13"/></operator> <literal type="number" pos:line="113" pos:column="14">0<pos:position pos:line="113" pos:column="15"/></literal></expr>;<pos:position pos:line="113" pos:column="16"/></init> <condition><expr><name pos:line="113" pos:column="17">i<pos:position pos:line="113" pos:column="18"/></name> <operator pos:line="113" pos:column="19">&lt;<pos:position pos:line="113" pos:column="23"/></operator> <name pos:line="113" pos:column="21">ext<pos:position pos:line="113" pos:column="24"/></name> <operator pos:line="113" pos:column="25">-<pos:position pos:line="113" pos:column="26"/></operator> <name pos:line="113" pos:column="27">base_name<pos:position pos:line="113" pos:column="36"/></name></expr>;<pos:position pos:line="113" pos:column="37"/></condition> <incr><expr><operator pos:line="113" pos:column="38">++<pos:position pos:line="113" pos:column="40"/></operator><name pos:line="113" pos:column="40">i<pos:position pos:line="113" pos:column="41"/></name></expr></incr>)<pos:position pos:line="113" pos:column="42"/></control>
      <block pos:line="114" pos:column="7">{
	<if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><call><name pos:line="115" pos:column="13">isalnum<pos:position pos:line="115" pos:column="20"/></name> <argument_list pos:line="115" pos:column="21">(<argument><expr><call pos:line="115" pos:column="22">(<name pos:line="115" pos:column="23">unsigned<pos:position pos:line="115" pos:column="31"/></name> <name pos:line="115" pos:column="32">char<pos:position pos:line="115" pos:column="36"/></name>)<argument_list pos:line="115" pos:column="37">(<argument><expr><name><name pos:line="115" pos:column="38">base_name<pos:position pos:line="115" pos:column="47"/></name><index pos:line="115" pos:column="47">[<expr><name pos:line="115" pos:column="48">i<pos:position pos:line="115" pos:column="49"/></name></expr>]<pos:position pos:line="115" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="115" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="115" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="115" pos:column="53"/></condition><then pos:line="115" pos:column="53">
	  <block pos:line="116" pos:column="11">{
	    <expr_stmt><expr><name><name pos:line="117" pos:column="13">name<pos:position pos:line="117" pos:column="17"/></name><index pos:line="117" pos:column="17">[<expr><name pos:line="117" pos:column="18">i<pos:position pos:line="117" pos:column="19"/></name></expr>]<pos:position pos:line="117" pos:column="20"/></index></name> <operator pos:line="117" pos:column="21">=<pos:position pos:line="117" pos:column="22"/></operator> <name><name pos:line="117" pos:column="23">base_name<pos:position pos:line="117" pos:column="32"/></name><index pos:line="117" pos:column="32">[<expr><name pos:line="117" pos:column="33">i<pos:position pos:line="117" pos:column="34"/></name></expr>]<pos:position pos:line="117" pos:column="35"/></index></name></expr>;<pos:position pos:line="117" pos:column="36"/></expr_stmt>
	  }<pos:position pos:line="118" pos:column="12"/></block></then>
	<else pos:line="119" pos:column="9">else
	  <block pos:line="120" pos:column="11">{
	    <expr_stmt><expr><name><name pos:line="121" pos:column="13">name<pos:position pos:line="121" pos:column="17"/></name><index pos:line="121" pos:column="17">[<expr><name pos:line="121" pos:column="18">i<pos:position pos:line="121" pos:column="19"/></name></expr>]<pos:position pos:line="121" pos:column="20"/></index></name> <operator pos:line="121" pos:column="21">=<pos:position pos:line="121" pos:column="22"/></operator> <literal type="char" pos:line="121" pos:column="23">'_'<pos:position pos:line="121" pos:column="26"/></literal></expr>;<pos:position pos:line="121" pos:column="27"/></expr_stmt>
	  }<pos:position pos:line="122" pos:column="12"/></block></else></if>
      }<pos:position pos:line="123" pos:column="8"/></block></for>
    <expr_stmt><expr><name><name pos:line="124" pos:column="5">name<pos:position pos:line="124" pos:column="9"/></name><index pos:line="124" pos:column="9">[<expr><name pos:line="124" pos:column="10">ext<pos:position pos:line="124" pos:column="13"/></name> <operator pos:line="124" pos:column="14">-<pos:position pos:line="124" pos:column="15"/></operator> <name pos:line="124" pos:column="16">base_name<pos:position pos:line="124" pos:column="25"/></name></expr>]<pos:position pos:line="124" pos:column="26"/></index></name> <operator pos:line="124" pos:column="27">=<pos:position pos:line="124" pos:column="28"/></operator> <name pos:line="124" pos:column="29">LT_EOS_CHAR<pos:position pos:line="124" pos:column="40"/></name></expr>;<pos:position pos:line="124" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="125" pos:column="4"/></block>

  <comment type="block" pos:line="127" pos:column="3">/* Before trawling through the filesystem in search of a module,
     check whether we are opening a preloaded module.  */</comment>
  <if pos:line="129" pos:column="3">if <condition pos:line="129" pos:column="6">(<expr><operator pos:line="129" pos:column="7">!<pos:position pos:line="129" pos:column="8"/></operator><name pos:line="129" pos:column="8">dir<pos:position pos:line="129" pos:column="11"/></name></expr>)<pos:position pos:line="129" pos:column="12"/></condition><then pos:line="129" pos:column="12">
    <block pos:line="130" pos:column="5">{
      <decl_stmt><decl><type><specifier pos:line="131" pos:column="7">const<pos:position pos:line="131" pos:column="12"/></specifier> <name pos:line="131" pos:column="13">lt_dlvtable<pos:position pos:line="131" pos:column="24"/></name> <modifier pos:line="131" pos:column="25">*<pos:position pos:line="131" pos:column="26"/></modifier></type><name pos:line="131" pos:column="26">vtable<pos:position pos:line="131" pos:column="32"/></name>	<init pos:line="131" pos:column="33">= <expr><call><name pos:line="131" pos:column="35">lt_dlloader_find<pos:position pos:line="131" pos:column="51"/></name> <argument_list pos:line="131" pos:column="52">(<argument><expr><literal type="string" pos:line="131" pos:column="53">"lt_preopen"<pos:position pos:line="131" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="131" pos:column="67"/></decl_stmt>

      <if pos:line="133" pos:column="7">if <condition pos:line="133" pos:column="10">(<expr><name pos:line="133" pos:column="11">vtable<pos:position pos:line="133" pos:column="17"/></name></expr>)<pos:position pos:line="133" pos:column="18"/></condition><then pos:line="133" pos:column="18">
	<block pos:line="134" pos:column="9">{
	  <comment type="block" pos:line="135" pos:column="11">/* name + "." + libext + NULL */</comment>
	  <expr_stmt><expr><name pos:line="136" pos:column="11">archive_name<pos:position pos:line="136" pos:column="23"/></name> <operator pos:line="136" pos:column="24">=<pos:position pos:line="136" pos:column="25"/></operator> <call><name pos:line="136" pos:column="26">MALLOC<pos:position pos:line="136" pos:column="32"/></name> <argument_list pos:line="136" pos:column="33">(<argument><expr><name pos:line="136" pos:column="34">char<pos:position pos:line="136" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="136" pos:column="40">LT_STRLEN<pos:position pos:line="136" pos:column="49"/></name> <argument_list pos:line="136" pos:column="50">(<argument><expr><name pos:line="136" pos:column="51">name<pos:position pos:line="136" pos:column="55"/></name></expr></argument>)<pos:position pos:line="136" pos:column="56"/></argument_list></call> <operator pos:line="136" pos:column="57">+<pos:position pos:line="136" pos:column="58"/></operator> <call><name pos:line="136" pos:column="59">LT_STRLEN<pos:position pos:line="136" pos:column="68"/></name> <argument_list pos:line="136" pos:column="69">(<argument><expr><name pos:line="136" pos:column="70">libext<pos:position pos:line="136" pos:column="76"/></name></expr></argument>)<pos:position pos:line="136" pos:column="77"/></argument_list></call> <operator pos:line="136" pos:column="78">+<pos:position pos:line="136" pos:column="79"/></operator> <literal type="number" pos:line="136" pos:column="80">2<pos:position pos:line="136" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="83"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="137" pos:column="11">*<pos:position pos:line="137" pos:column="12"/></operator><name pos:line="137" pos:column="12">phandle<pos:position pos:line="137" pos:column="19"/></name> <operator pos:line="137" pos:column="20">=<pos:position pos:line="137" pos:column="21"/></operator> <operator pos:line="137" pos:column="22">(<pos:position pos:line="137" pos:column="23"/></operator><name pos:line="137" pos:column="23">lt_dlhandle<pos:position pos:line="137" pos:column="34"/></name><operator pos:line="137" pos:column="34">)<pos:position pos:line="137" pos:column="35"/></operator> <call><name pos:line="137" pos:column="36">lt__zalloc<pos:position pos:line="137" pos:column="46"/></name> <argument_list pos:line="137" pos:column="47">(<argument><expr><sizeof pos:line="137" pos:column="48">sizeof <argument_list pos:line="137" pos:column="55">(<argument><expr pos:line="137" pos:column="56">struct <name pos:line="137" pos:column="63">lt__handle<pos:position pos:line="137" pos:column="73"/></name></expr></argument>)<pos:position pos:line="137" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="137" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="76"/></expr_stmt>

	  <if pos:line="139" pos:column="11">if <condition pos:line="139" pos:column="14">(<expr><operator pos:line="139" pos:column="15">(<pos:position pos:line="139" pos:column="16"/></operator><operator pos:line="139" pos:column="16">*<pos:position pos:line="139" pos:column="17"/></operator><name pos:line="139" pos:column="17">phandle<pos:position pos:line="139" pos:column="24"/></name> <operator pos:line="139" pos:column="25">==<pos:position pos:line="139" pos:column="27"/></operator> <name pos:line="139" pos:column="28">NULL<pos:position pos:line="139" pos:column="32"/></name><operator pos:line="139" pos:column="32">)<pos:position pos:line="139" pos:column="33"/></operator> <operator pos:line="139" pos:column="34">||<pos:position pos:line="139" pos:column="36"/></operator> <operator pos:line="139" pos:column="37">(<pos:position pos:line="139" pos:column="38"/></operator><name pos:line="139" pos:column="38">archive_name<pos:position pos:line="139" pos:column="50"/></name> <operator pos:line="139" pos:column="51">==<pos:position pos:line="139" pos:column="53"/></operator> <name pos:line="139" pos:column="54">NULL<pos:position pos:line="139" pos:column="58"/></name><operator pos:line="139" pos:column="58">)<pos:position pos:line="139" pos:column="59"/></operator></expr>)<pos:position pos:line="139" pos:column="60"/></condition><then pos:line="139" pos:column="60">
	    <block pos:line="140" pos:column="13">{
	      <expr_stmt><expr><operator pos:line="141" pos:column="15">++<pos:position pos:line="141" pos:column="17"/></operator><name pos:line="141" pos:column="17">errors<pos:position pos:line="141" pos:column="23"/></name></expr>;<pos:position pos:line="141" pos:column="24"/></expr_stmt>
	      <goto pos:line="142" pos:column="15">goto <name pos:line="142" pos:column="20">cleanup<pos:position pos:line="142" pos:column="27"/></name>;<pos:position pos:line="142" pos:column="28"/></goto>
	    }<pos:position pos:line="143" pos:column="14"/></block></then></if>
	  <expr_stmt><expr><name pos:line="144" pos:column="11">newhandle<pos:position pos:line="144" pos:column="20"/></name> <operator pos:line="144" pos:column="21">=<pos:position pos:line="144" pos:column="22"/></operator> <operator pos:line="144" pos:column="23">*<pos:position pos:line="144" pos:column="24"/></operator><name pos:line="144" pos:column="24">phandle<pos:position pos:line="144" pos:column="31"/></name></expr>;<pos:position pos:line="144" pos:column="32"/></expr_stmt>

	  <comment type="block" pos:line="146" pos:column="11">/* Preloaded modules are always named according to their old
	     archive name.  */</comment>
	  <expr_stmt><expr><call><name pos:line="148" pos:column="11">sprintf<pos:position pos:line="148" pos:column="18"/></name> <argument_list pos:line="148" pos:column="19">(<argument><expr><name pos:line="148" pos:column="20">archive_name<pos:position pos:line="148" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="34">"%s.%s"<pos:position pos:line="148" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="148" pos:column="43">name<pos:position pos:line="148" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="49">libext<pos:position pos:line="148" pos:column="55"/></name></expr></argument>)<pos:position pos:line="148" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="57"/></expr_stmt>

	  <if pos:line="150" pos:column="11">if <condition pos:line="150" pos:column="14">(<expr><call><name pos:line="150" pos:column="15">tryall_dlopen<pos:position pos:line="150" pos:column="28"/></name> <argument_list pos:line="150" pos:column="29">(<argument><expr><operator pos:line="150" pos:column="30">&amp;<pos:position pos:line="150" pos:column="35"/></operator><name pos:line="150" pos:column="31">newhandle<pos:position pos:line="150" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="42">archive_name<pos:position pos:line="150" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="56">advise<pos:position pos:line="150" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="64">vtable<pos:position pos:line="150" pos:column="70"/></name></expr></argument>)<pos:position pos:line="150" pos:column="71"/></argument_list></call> <operator pos:line="150" pos:column="72">==<pos:position pos:line="150" pos:column="74"/></operator> <literal type="number" pos:line="150" pos:column="75">0<pos:position pos:line="150" pos:column="76"/></literal></expr>)<pos:position pos:line="150" pos:column="77"/></condition><then pos:line="150" pos:column="77">
	    <block pos:line="151" pos:column="13">{
	      <goto pos:line="152" pos:column="15">goto <name pos:line="152" pos:column="20">register_handle<pos:position pos:line="152" pos:column="35"/></name>;<pos:position pos:line="152" pos:column="36"/></goto>
	    }<pos:position pos:line="153" pos:column="14"/></block></then></if>

	  <comment type="block" pos:line="155" pos:column="11">/* If we're still here, there was no matching preloaded module,
	     so put things back as we found them, and continue searching.  */</comment>
	  <expr_stmt><expr><call><name pos:line="157" pos:column="11">FREE<pos:position pos:line="157" pos:column="15"/></name> <argument_list pos:line="157" pos:column="16">(<argument><expr><operator pos:line="157" pos:column="17">*<pos:position pos:line="157" pos:column="18"/></operator><name pos:line="157" pos:column="18">phandle<pos:position pos:line="157" pos:column="25"/></name></expr></argument>)<pos:position pos:line="157" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="27"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="158" pos:column="11">newhandle<pos:position pos:line="158" pos:column="20"/></name> <operator pos:line="158" pos:column="21">=<pos:position pos:line="158" pos:column="22"/></operator> <name pos:line="158" pos:column="23">NULL<pos:position pos:line="158" pos:column="27"/></name></expr>;<pos:position pos:line="158" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="159" pos:column="10"/></block></then></if>
    }<pos:position pos:line="160" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="162" pos:column="3">/* If we are allowing only preloaded modules, and we didn't find
     anything yet, give up on the search here.  */</comment>
  <if pos:line="164" pos:column="3">if <condition pos:line="164" pos:column="6">(<expr><name pos:line="164" pos:column="7">advise<pos:position pos:line="164" pos:column="13"/></name> <operator pos:line="164" pos:column="14">&amp;&amp;<pos:position pos:line="164" pos:column="24"/></operator> <name><name pos:line="164" pos:column="17">advise<pos:position pos:line="164" pos:column="23"/></name><operator pos:line="164" pos:column="23">-&gt;<pos:position pos:line="164" pos:column="28"/></operator><name pos:line="164" pos:column="25">try_preload_only<pos:position pos:line="164" pos:column="41"/></name></name></expr>)<pos:position pos:line="164" pos:column="42"/></condition><then pos:line="164" pos:column="42">
    <block pos:line="165" pos:column="5">{
      <goto pos:line="166" pos:column="7">goto <name pos:line="166" pos:column="12">cleanup<pos:position pos:line="166" pos:column="19"/></name>;<pos:position pos:line="166" pos:column="20"/></goto>
    }<pos:position pos:line="167" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="169" pos:column="3">/* Check whether we are opening a libtool module (.la extension).  */</comment>
  <if pos:line="170" pos:column="3">if <condition pos:line="170" pos:column="6">(<expr><name pos:line="170" pos:column="7">ext<pos:position pos:line="170" pos:column="10"/></name> <operator pos:line="170" pos:column="11">&amp;&amp;<pos:position pos:line="170" pos:column="21"/></operator> <call><name pos:line="170" pos:column="14">streq<pos:position pos:line="170" pos:column="19"/></name> <argument_list pos:line="170" pos:column="20">(<argument><expr><name pos:line="170" pos:column="21">ext<pos:position pos:line="170" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="26">archive_ext<pos:position pos:line="170" pos:column="37"/></name></expr></argument>)<pos:position pos:line="170" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="170" pos:column="39"/></condition><then pos:line="170" pos:column="39">
    <block pos:line="171" pos:column="5">{
      <comment type="block" pos:line="172" pos:column="7">/* this seems to be a libtool module */</comment>
      <decl_stmt><decl><type><name pos:line="173" pos:column="7">FILE<pos:position pos:line="173" pos:column="11"/></name> <modifier pos:line="173" pos:column="12">*<pos:position pos:line="173" pos:column="13"/></modifier></type>	<name pos:line="173" pos:column="17">file<pos:position pos:line="173" pos:column="21"/></name>	 <init pos:line="173" pos:column="26">= <expr><literal type="number" pos:line="173" pos:column="28">0<pos:position pos:line="173" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="173" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="174" pos:column="7">char<pos:position pos:line="174" pos:column="11"/></name> <modifier pos:line="174" pos:column="12">*<pos:position pos:line="174" pos:column="13"/></modifier></type>	<name pos:line="174" pos:column="17">dlname<pos:position pos:line="174" pos:column="23"/></name>	 <init pos:line="174" pos:column="26">= <expr><literal type="number" pos:line="174" pos:column="28">0<pos:position pos:line="174" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="174" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="175" pos:column="7">char<pos:position pos:line="175" pos:column="11"/></name> <modifier pos:line="175" pos:column="12">*<pos:position pos:line="175" pos:column="13"/></modifier></type>	<name pos:line="175" pos:column="17">old_name<pos:position pos:line="175" pos:column="25"/></name> <init pos:line="175" pos:column="26">= <expr><literal type="number" pos:line="175" pos:column="28">0<pos:position pos:line="175" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="175" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="176" pos:column="7">char<pos:position pos:line="176" pos:column="11"/></name> <modifier pos:line="176" pos:column="12">*<pos:position pos:line="176" pos:column="13"/></modifier></type>	<name pos:line="176" pos:column="17">libdir<pos:position pos:line="176" pos:column="23"/></name>	 <init pos:line="176" pos:column="26">= <expr><literal type="number" pos:line="176" pos:column="28">0<pos:position pos:line="176" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="176" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="177" pos:column="7">char<pos:position pos:line="177" pos:column="11"/></name> <modifier pos:line="177" pos:column="12">*<pos:position pos:line="177" pos:column="13"/></modifier></type>	<name pos:line="177" pos:column="17">deplibs<pos:position pos:line="177" pos:column="24"/></name>	 <init pos:line="177" pos:column="26">= <expr><literal type="number" pos:line="177" pos:column="28">0<pos:position pos:line="177" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="177" pos:column="30"/></decl_stmt>

      <comment type="block" pos:line="179" pos:column="7">/* if we can't find the installed flag, it is probably an
	 installed libtool archive, produced with an old version
	 of libtool */</comment>
      <decl_stmt><decl><type><name pos:line="182" pos:column="7">int<pos:position pos:line="182" pos:column="10"/></name></type>	<name pos:line="182" pos:column="17">installed<pos:position pos:line="182" pos:column="26"/></name> <init pos:line="182" pos:column="27">= <expr><literal type="number" pos:line="182" pos:column="29">1<pos:position pos:line="182" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="182" pos:column="31"/></decl_stmt>

      <comment type="block" pos:line="184" pos:column="7">/* Now try to open the .la file.  If there is no directory name
	 component, try to find it first in user_search_path and then other
	 prescribed paths.  Otherwise (or in any case if the module was not
	 yet found) try opening just the module name as passed.  */</comment>
      <if pos:line="188" pos:column="7">if <condition pos:line="188" pos:column="10">(<expr><operator pos:line="188" pos:column="11">!<pos:position pos:line="188" pos:column="12"/></operator><name pos:line="188" pos:column="12">dir<pos:position pos:line="188" pos:column="15"/></name></expr>)<pos:position pos:line="188" pos:column="16"/></condition><then pos:line="188" pos:column="16">
	<block pos:line="189" pos:column="9">{
	  <decl_stmt><decl><type><specifier pos:line="190" pos:column="11">const<pos:position pos:line="190" pos:column="16"/></specifier> <name pos:line="190" pos:column="17">char<pos:position pos:line="190" pos:column="21"/></name> <modifier pos:line="190" pos:column="22">*<pos:position pos:line="190" pos:column="23"/></modifier></type><name pos:line="190" pos:column="23">search_path<pos:position pos:line="190" pos:column="34"/></name> <init pos:line="190" pos:column="35">= <expr><name pos:line="190" pos:column="37">user_search_path<pos:position pos:line="190" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="190" pos:column="54"/></decl_stmt>

	  <if pos:line="192" pos:column="11">if <condition pos:line="192" pos:column="14">(<expr><name pos:line="192" pos:column="15">search_path<pos:position pos:line="192" pos:column="26"/></name></expr>)<pos:position pos:line="192" pos:column="27"/></condition><then pos:line="192" pos:column="27">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="193" pos:column="13">file<pos:position pos:line="193" pos:column="17"/></name> <operator pos:line="193" pos:column="18">=<pos:position pos:line="193" pos:column="19"/></operator> <call><name pos:line="193" pos:column="20">find_file<pos:position pos:line="193" pos:column="29"/></name> <argument_list pos:line="193" pos:column="30">(<argument><expr><name pos:line="193" pos:column="31">user_search_path<pos:position pos:line="193" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="49">base_name<pos:position pos:line="193" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="193" pos:column="60">&amp;<pos:position pos:line="193" pos:column="65"/></operator><name pos:line="193" pos:column="61">dir<pos:position pos:line="193" pos:column="64"/></name></expr></argument>)<pos:position pos:line="193" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="66"/></expr_stmt></block></then></if>

	  <if pos:line="195" pos:column="11">if <condition pos:line="195" pos:column="14">(<expr><operator pos:line="195" pos:column="15">!<pos:position pos:line="195" pos:column="16"/></operator><name pos:line="195" pos:column="16">file<pos:position pos:line="195" pos:column="20"/></name></expr>)<pos:position pos:line="195" pos:column="21"/></condition><then pos:line="195" pos:column="21">
	    <block pos:line="196" pos:column="13">{
	      <expr_stmt><expr><name pos:line="197" pos:column="15">search_path<pos:position pos:line="197" pos:column="26"/></name> <operator pos:line="197" pos:column="27">=<pos:position pos:line="197" pos:column="28"/></operator> <call><name pos:line="197" pos:column="29">getenv<pos:position pos:line="197" pos:column="35"/></name> <argument_list pos:line="197" pos:column="36">(<argument><expr><name pos:line="197" pos:column="37">LTDL_SEARCHPATH_VAR<pos:position pos:line="197" pos:column="56"/></name></expr></argument>)<pos:position pos:line="197" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="58"/></expr_stmt>
	      <if pos:line="198" pos:column="15">if <condition pos:line="198" pos:column="18">(<expr><name pos:line="198" pos:column="19">search_path<pos:position pos:line="198" pos:column="30"/></name></expr>)<pos:position pos:line="198" pos:column="31"/></condition><then pos:line="198" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="199" pos:column="17">file<pos:position pos:line="199" pos:column="21"/></name> <operator pos:line="199" pos:column="22">=<pos:position pos:line="199" pos:column="23"/></operator> <call><name pos:line="199" pos:column="24">find_file<pos:position pos:line="199" pos:column="33"/></name> <argument_list pos:line="199" pos:column="34">(<argument><expr><name pos:line="199" pos:column="35">search_path<pos:position pos:line="199" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="48">base_name<pos:position pos:line="199" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="199" pos:column="59">&amp;<pos:position pos:line="199" pos:column="64"/></operator><name pos:line="199" pos:column="60">dir<pos:position pos:line="199" pos:column="63"/></name></expr></argument>)<pos:position pos:line="199" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="65"/></expr_stmt></block></then></if>
	    }<pos:position pos:line="200" pos:column="14"/></block></then></if>

<cpp:if pos:line="202" pos:column="1">#<cpp:directive pos:line="202" pos:column="2">if<pos:position pos:line="202" pos:column="4"/></cpp:directive> <expr><call><name pos:line="202" pos:column="5">defined<pos:position pos:line="202" pos:column="12"/></name><argument_list pos:line="202" pos:column="12">(<argument><expr><name pos:line="202" pos:column="13">LT_MODULE_PATH_VAR<pos:position pos:line="202" pos:column="31"/></name></expr></argument>)<pos:position pos:line="202" pos:column="32"/></argument_list></call></expr></cpp:if>
	  <if pos:line="203" pos:column="11">if <condition pos:line="203" pos:column="14">(<expr><operator pos:line="203" pos:column="15">!<pos:position pos:line="203" pos:column="16"/></operator><name pos:line="203" pos:column="16">file<pos:position pos:line="203" pos:column="20"/></name></expr>)<pos:position pos:line="203" pos:column="21"/></condition><then pos:line="203" pos:column="21">
	    <block pos:line="204" pos:column="13">{
	      <expr_stmt><expr><name pos:line="205" pos:column="15">search_path<pos:position pos:line="205" pos:column="26"/></name> <operator pos:line="205" pos:column="27">=<pos:position pos:line="205" pos:column="28"/></operator> <call><name pos:line="205" pos:column="29">getenv<pos:position pos:line="205" pos:column="35"/></name> <argument_list pos:line="205" pos:column="36">(<argument><expr><name pos:line="205" pos:column="37">LT_MODULE_PATH_VAR<pos:position pos:line="205" pos:column="55"/></name></expr></argument>)<pos:position pos:line="205" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="57"/></expr_stmt>
	      <if pos:line="206" pos:column="15">if <condition pos:line="206" pos:column="18">(<expr><name pos:line="206" pos:column="19">search_path<pos:position pos:line="206" pos:column="30"/></name></expr>)<pos:position pos:line="206" pos:column="31"/></condition><then pos:line="206" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="207" pos:column="17">file<pos:position pos:line="207" pos:column="21"/></name> <operator pos:line="207" pos:column="22">=<pos:position pos:line="207" pos:column="23"/></operator> <call><name pos:line="207" pos:column="24">find_file<pos:position pos:line="207" pos:column="33"/></name> <argument_list pos:line="207" pos:column="34">(<argument><expr><name pos:line="207" pos:column="35">search_path<pos:position pos:line="207" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="48">base_name<pos:position pos:line="207" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="207" pos:column="59">&amp;<pos:position pos:line="207" pos:column="64"/></operator><name pos:line="207" pos:column="60">dir<pos:position pos:line="207" pos:column="63"/></name></expr></argument>)<pos:position pos:line="207" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="65"/></expr_stmt></block></then></if>
	    }<pos:position pos:line="208" pos:column="14"/></block></then></if>
<cpp:endif pos:line="209" pos:column="1">#<cpp:directive pos:line="209" pos:column="2">endif<pos:position pos:line="209" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="210" pos:column="1">#<cpp:directive pos:line="210" pos:column="2">if<pos:position pos:line="210" pos:column="4"/></cpp:directive> <expr><call><name pos:line="210" pos:column="5">defined<pos:position pos:line="210" pos:column="12"/></name><argument_list pos:line="210" pos:column="12">(<argument><expr><name pos:line="210" pos:column="13">LT_DLSEARCH_PATH<pos:position pos:line="210" pos:column="29"/></name></expr></argument>)<pos:position pos:line="210" pos:column="30"/></argument_list></call></expr></cpp:if>
	  <if pos:line="211" pos:column="11">if <condition pos:line="211" pos:column="14">(<expr><operator pos:line="211" pos:column="15">!<pos:position pos:line="211" pos:column="16"/></operator><name pos:line="211" pos:column="16">file<pos:position pos:line="211" pos:column="20"/></name> <operator pos:line="211" pos:column="21">&amp;&amp;<pos:position pos:line="211" pos:column="31"/></operator> <operator pos:line="211" pos:column="24">*<pos:position pos:line="211" pos:column="25"/></operator><name pos:line="211" pos:column="25">sys_dlsearch_path<pos:position pos:line="211" pos:column="42"/></name></expr>)<pos:position pos:line="211" pos:column="43"/></condition><then pos:line="211" pos:column="43">
	    <block pos:line="212" pos:column="13">{
	      <expr_stmt><expr><name pos:line="213" pos:column="15">file<pos:position pos:line="213" pos:column="19"/></name> <operator pos:line="213" pos:column="20">=<pos:position pos:line="213" pos:column="21"/></operator> <call><name pos:line="213" pos:column="22">find_file<pos:position pos:line="213" pos:column="31"/></name> <argument_list pos:line="213" pos:column="32">(<argument><expr><name pos:line="213" pos:column="33">sys_dlsearch_path<pos:position pos:line="213" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="52">base_name<pos:position pos:line="213" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="213" pos:column="63">&amp;<pos:position pos:line="213" pos:column="68"/></operator><name pos:line="213" pos:column="64">dir<pos:position pos:line="213" pos:column="67"/></name></expr></argument>)<pos:position pos:line="213" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="69"/></expr_stmt>
	    }<pos:position pos:line="214" pos:column="14"/></block></then></if>
<cpp:endif pos:line="215" pos:column="1">#<cpp:directive pos:line="215" pos:column="2">endif<pos:position pos:line="215" pos:column="7"/></cpp:directive></cpp:endif>
	}<pos:position pos:line="216" pos:column="10"/></block></then>
      <else pos:line="217" pos:column="7">else
	<block pos:line="218" pos:column="9">{
	  <expr_stmt><expr><name pos:line="219" pos:column="11">file<pos:position pos:line="219" pos:column="15"/></name> <operator pos:line="219" pos:column="16">=<pos:position pos:line="219" pos:column="17"/></operator> <call><name pos:line="219" pos:column="18">fopen<pos:position pos:line="219" pos:column="23"/></name> <argument_list pos:line="219" pos:column="24">(<argument><expr><name pos:line="219" pos:column="25">attempt<pos:position pos:line="219" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="34">LT_READTEXT_MODE<pos:position pos:line="219" pos:column="50"/></name></expr></argument>)<pos:position pos:line="219" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="220" pos:column="10"/></block></else></if>

      <comment type="block" pos:line="222" pos:column="7">/* If we didn't find the file by now, it really isn't there.  Set
	 the status flag, and bail out.  */</comment>
      <if pos:line="224" pos:column="7">if <condition pos:line="224" pos:column="10">(<expr><operator pos:line="224" pos:column="11">!<pos:position pos:line="224" pos:column="12"/></operator><name pos:line="224" pos:column="12">file<pos:position pos:line="224" pos:column="16"/></name></expr>)<pos:position pos:line="224" pos:column="17"/></condition><then pos:line="224" pos:column="17">
	<block pos:line="225" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="226" pos:column="11">LT__SETERROR<pos:position pos:line="226" pos:column="23"/></name> <argument_list pos:line="226" pos:column="24">(<argument><expr><name pos:line="226" pos:column="25">FILE_NOT_FOUND<pos:position pos:line="226" pos:column="39"/></name></expr></argument>)<pos:position pos:line="226" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="41"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="227" pos:column="11">++<pos:position pos:line="227" pos:column="13"/></operator><name pos:line="227" pos:column="13">errors<pos:position pos:line="227" pos:column="19"/></name></expr>;<pos:position pos:line="227" pos:column="20"/></expr_stmt>
	  <goto pos:line="228" pos:column="11">goto <name pos:line="228" pos:column="16">cleanup<pos:position pos:line="228" pos:column="23"/></name>;<pos:position pos:line="228" pos:column="24"/></goto>
	}<pos:position pos:line="229" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="231" pos:column="7">/* read the .la file */</comment>
      <if pos:line="232" pos:column="7">if <condition pos:line="232" pos:column="10">(<expr><call><name pos:line="232" pos:column="11">parse_dotla_file<pos:position pos:line="232" pos:column="27"/></name><argument_list pos:line="232" pos:column="27">(<argument><expr><name pos:line="232" pos:column="28">file<pos:position pos:line="232" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="232" pos:column="34">&amp;<pos:position pos:line="232" pos:column="39"/></operator><name pos:line="232" pos:column="35">dlname<pos:position pos:line="232" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="232" pos:column="43">&amp;<pos:position pos:line="232" pos:column="48"/></operator><name pos:line="232" pos:column="44">libdir<pos:position pos:line="232" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="232" pos:column="52">&amp;<pos:position pos:line="232" pos:column="57"/></operator><name pos:line="232" pos:column="53">deplibs<pos:position pos:line="232" pos:column="60"/></name></expr></argument>,
	    <argument><expr><operator pos:line="233" pos:column="13">&amp;<pos:position pos:line="233" pos:column="18"/></operator><name pos:line="233" pos:column="14">old_name<pos:position pos:line="233" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="233" pos:column="24">&amp;<pos:position pos:line="233" pos:column="29"/></operator><name pos:line="233" pos:column="25">installed<pos:position pos:line="233" pos:column="34"/></name></expr></argument>)<pos:position pos:line="233" pos:column="35"/></argument_list></call> <operator pos:line="233" pos:column="36">!=<pos:position pos:line="233" pos:column="38"/></operator> <literal type="number" pos:line="233" pos:column="39">0<pos:position pos:line="233" pos:column="40"/></literal></expr>)<pos:position pos:line="233" pos:column="41"/></condition><then pos:line="233" pos:column="41">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="234" pos:column="9">++<pos:position pos:line="234" pos:column="11"/></operator><name pos:line="234" pos:column="11">errors<pos:position pos:line="234" pos:column="17"/></name></expr>;<pos:position pos:line="234" pos:column="18"/></expr_stmt></block></then></if>

      <expr_stmt><expr><call><name pos:line="236" pos:column="7">fclose<pos:position pos:line="236" pos:column="13"/></name> <argument_list pos:line="236" pos:column="14">(<argument><expr><name pos:line="236" pos:column="15">file<pos:position pos:line="236" pos:column="19"/></name></expr></argument>)<pos:position pos:line="236" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="21"/></expr_stmt>

      <comment type="block" pos:line="238" pos:column="7">/* allocate the handle */</comment>
      <expr_stmt><expr><operator pos:line="239" pos:column="7">*<pos:position pos:line="239" pos:column="8"/></operator><name pos:line="239" pos:column="8">phandle<pos:position pos:line="239" pos:column="15"/></name> <operator pos:line="239" pos:column="16">=<pos:position pos:line="239" pos:column="17"/></operator> <operator pos:line="239" pos:column="18">(<pos:position pos:line="239" pos:column="19"/></operator><name pos:line="239" pos:column="19">lt_dlhandle<pos:position pos:line="239" pos:column="30"/></name><operator pos:line="239" pos:column="30">)<pos:position pos:line="239" pos:column="31"/></operator> <call><name pos:line="239" pos:column="32">lt__zalloc<pos:position pos:line="239" pos:column="42"/></name> <argument_list pos:line="239" pos:column="43">(<argument><expr><sizeof pos:line="239" pos:column="44">sizeof <argument_list pos:line="239" pos:column="51">(<argument><expr pos:line="239" pos:column="52">struct <name pos:line="239" pos:column="59">lt__handle<pos:position pos:line="239" pos:column="69"/></name></expr></argument>)<pos:position pos:line="239" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="239" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="72"/></expr_stmt>
      <if pos:line="240" pos:column="7">if <condition pos:line="240" pos:column="10">(<expr><operator pos:line="240" pos:column="11">*<pos:position pos:line="240" pos:column="12"/></operator><name pos:line="240" pos:column="12">phandle<pos:position pos:line="240" pos:column="19"/></name> <operator pos:line="240" pos:column="20">==<pos:position pos:line="240" pos:column="22"/></operator> <literal type="number" pos:line="240" pos:column="23">0<pos:position pos:line="240" pos:column="24"/></literal></expr>)<pos:position pos:line="240" pos:column="25"/></condition><then pos:line="240" pos:column="25">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="241" pos:column="9">++<pos:position pos:line="241" pos:column="11"/></operator><name pos:line="241" pos:column="11">errors<pos:position pos:line="241" pos:column="17"/></name></expr>;<pos:position pos:line="241" pos:column="18"/></expr_stmt></block></then></if>

      <if pos:line="243" pos:column="7">if <condition pos:line="243" pos:column="10">(<expr><name pos:line="243" pos:column="11">errors<pos:position pos:line="243" pos:column="17"/></name></expr>)<pos:position pos:line="243" pos:column="18"/></condition><then pos:line="243" pos:column="18">
	<block pos:line="244" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="245" pos:column="11">FREE<pos:position pos:line="245" pos:column="15"/></name> <argument_list pos:line="245" pos:column="16">(<argument><expr><name pos:line="245" pos:column="17">dlname<pos:position pos:line="245" pos:column="23"/></name></expr></argument>)<pos:position pos:line="245" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="25"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="246" pos:column="11">FREE<pos:position pos:line="246" pos:column="15"/></name> <argument_list pos:line="246" pos:column="16">(<argument><expr><name pos:line="246" pos:column="17">old_name<pos:position pos:line="246" pos:column="25"/></name></expr></argument>)<pos:position pos:line="246" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="27"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="247" pos:column="11">FREE<pos:position pos:line="247" pos:column="15"/></name> <argument_list pos:line="247" pos:column="16">(<argument><expr><name pos:line="247" pos:column="17">libdir<pos:position pos:line="247" pos:column="23"/></name></expr></argument>)<pos:position pos:line="247" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="25"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="248" pos:column="11">FREE<pos:position pos:line="248" pos:column="15"/></name> <argument_list pos:line="248" pos:column="16">(<argument><expr><name pos:line="248" pos:column="17">deplibs<pos:position pos:line="248" pos:column="24"/></name></expr></argument>)<pos:position pos:line="248" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="26"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="249" pos:column="11">FREE<pos:position pos:line="249" pos:column="15"/></name> <argument_list pos:line="249" pos:column="16">(<argument><expr><operator pos:line="249" pos:column="17">*<pos:position pos:line="249" pos:column="18"/></operator><name pos:line="249" pos:column="18">phandle<pos:position pos:line="249" pos:column="25"/></name></expr></argument>)<pos:position pos:line="249" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="27"/></expr_stmt>
	  <goto pos:line="250" pos:column="11">goto <name pos:line="250" pos:column="16">cleanup<pos:position pos:line="250" pos:column="23"/></name>;<pos:position pos:line="250" pos:column="24"/></goto>
	}<pos:position pos:line="251" pos:column="10"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="253" pos:column="7">assert<pos:position pos:line="253" pos:column="13"/></name> <argument_list pos:line="253" pos:column="14">(<argument><expr><operator pos:line="253" pos:column="15">*<pos:position pos:line="253" pos:column="16"/></operator><name pos:line="253" pos:column="16">phandle<pos:position pos:line="253" pos:column="23"/></name></expr></argument>)<pos:position pos:line="253" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="25"/></expr_stmt>

      <if pos:line="255" pos:column="7">if <condition pos:line="255" pos:column="10">(<expr><call><name pos:line="255" pos:column="11">load_deplibs<pos:position pos:line="255" pos:column="23"/></name> <argument_list pos:line="255" pos:column="24">(<argument><expr><operator pos:line="255" pos:column="25">*<pos:position pos:line="255" pos:column="26"/></operator><name pos:line="255" pos:column="26">phandle<pos:position pos:line="255" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="35">deplibs<pos:position pos:line="255" pos:column="42"/></name></expr></argument>)<pos:position pos:line="255" pos:column="43"/></argument_list></call> <operator pos:line="255" pos:column="44">==<pos:position pos:line="255" pos:column="46"/></operator> <literal type="number" pos:line="255" pos:column="47">0<pos:position pos:line="255" pos:column="48"/></literal></expr>)<pos:position pos:line="255" pos:column="49"/></condition><then pos:line="255" pos:column="49">
	<block pos:line="256" pos:column="9">{
	  <expr_stmt><expr><name pos:line="257" pos:column="11">newhandle<pos:position pos:line="257" pos:column="20"/></name> <operator pos:line="257" pos:column="21">=<pos:position pos:line="257" pos:column="22"/></operator> <operator pos:line="257" pos:column="23">*<pos:position pos:line="257" pos:column="24"/></operator><name pos:line="257" pos:column="24">phandle<pos:position pos:line="257" pos:column="31"/></name></expr>;<pos:position pos:line="257" pos:column="32"/></expr_stmt>
	  <comment type="block" pos:line="258" pos:column="11">/* find_module may replace newhandle */</comment>
	  <if pos:line="259" pos:column="11">if <condition pos:line="259" pos:column="14">(<expr><call><name pos:line="259" pos:column="15">find_module<pos:position pos:line="259" pos:column="26"/></name> <argument_list pos:line="259" pos:column="27">(<argument><expr><operator pos:line="259" pos:column="28">&amp;<pos:position pos:line="259" pos:column="33"/></operator><name pos:line="259" pos:column="29">newhandle<pos:position pos:line="259" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="40">dir<pos:position pos:line="259" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="45">libdir<pos:position pos:line="259" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="53">dlname<pos:position pos:line="259" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="61">old_name<pos:position pos:line="259" pos:column="69"/></name></expr></argument>,
			   <argument><expr><name pos:line="260" pos:column="28">installed<pos:position pos:line="260" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="39">advise<pos:position pos:line="260" pos:column="45"/></name></expr></argument>)<pos:position pos:line="260" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="260" pos:column="47"/></condition><then pos:line="260" pos:column="47">
	    <block pos:line="261" pos:column="13">{
	      <expr_stmt><expr><call><name pos:line="262" pos:column="15">unload_deplibs<pos:position pos:line="262" pos:column="29"/></name> <argument_list pos:line="262" pos:column="30">(<argument><expr><operator pos:line="262" pos:column="31">*<pos:position pos:line="262" pos:column="32"/></operator><name pos:line="262" pos:column="32">phandle<pos:position pos:line="262" pos:column="39"/></name></expr></argument>)<pos:position pos:line="262" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="41"/></expr_stmt>
	      <expr_stmt><expr><operator pos:line="263" pos:column="15">++<pos:position pos:line="263" pos:column="17"/></operator><name pos:line="263" pos:column="17">errors<pos:position pos:line="263" pos:column="23"/></name></expr>;<pos:position pos:line="263" pos:column="24"/></expr_stmt>
	    }<pos:position pos:line="264" pos:column="14"/></block></then></if>
	}<pos:position pos:line="265" pos:column="10"/></block></then>
      <else pos:line="266" pos:column="7">else
	<block pos:line="267" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="268" pos:column="11">++<pos:position pos:line="268" pos:column="13"/></operator><name pos:line="268" pos:column="13">errors<pos:position pos:line="268" pos:column="19"/></name></expr>;<pos:position pos:line="268" pos:column="20"/></expr_stmt>
	}<pos:position pos:line="269" pos:column="10"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="271" pos:column="7">FREE<pos:position pos:line="271" pos:column="11"/></name> <argument_list pos:line="271" pos:column="12">(<argument><expr><name pos:line="271" pos:column="13">dlname<pos:position pos:line="271" pos:column="19"/></name></expr></argument>)<pos:position pos:line="271" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="272" pos:column="7">FREE<pos:position pos:line="272" pos:column="11"/></name> <argument_list pos:line="272" pos:column="12">(<argument><expr><name pos:line="272" pos:column="13">old_name<pos:position pos:line="272" pos:column="21"/></name></expr></argument>)<pos:position pos:line="272" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="273" pos:column="7">FREE<pos:position pos:line="273" pos:column="11"/></name> <argument_list pos:line="273" pos:column="12">(<argument><expr><name pos:line="273" pos:column="13">libdir<pos:position pos:line="273" pos:column="19"/></name></expr></argument>)<pos:position pos:line="273" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="274" pos:column="7">FREE<pos:position pos:line="274" pos:column="11"/></name> <argument_list pos:line="274" pos:column="12">(<argument><expr><name pos:line="274" pos:column="13">deplibs<pos:position pos:line="274" pos:column="20"/></name></expr></argument>)<pos:position pos:line="274" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="22"/></expr_stmt>

      <if pos:line="276" pos:column="7">if <condition pos:line="276" pos:column="10">(<expr><name pos:line="276" pos:column="11">errors<pos:position pos:line="276" pos:column="17"/></name></expr>)<pos:position pos:line="276" pos:column="18"/></condition><then pos:line="276" pos:column="18">
	<block pos:line="277" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="278" pos:column="11">FREE<pos:position pos:line="278" pos:column="15"/></name> <argument_list pos:line="278" pos:column="16">(<argument><expr><operator pos:line="278" pos:column="17">*<pos:position pos:line="278" pos:column="18"/></operator><name pos:line="278" pos:column="18">phandle<pos:position pos:line="278" pos:column="25"/></name></expr></argument>)<pos:position pos:line="278" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="27"/></expr_stmt>
	  <goto pos:line="279" pos:column="11">goto <name pos:line="279" pos:column="16">cleanup<pos:position pos:line="279" pos:column="23"/></name>;<pos:position pos:line="279" pos:column="24"/></goto>
	}<pos:position pos:line="280" pos:column="10"/></block></then></if>

      <if pos:line="282" pos:column="7">if <condition pos:line="282" pos:column="10">(<expr><operator pos:line="282" pos:column="11">*<pos:position pos:line="282" pos:column="12"/></operator><name pos:line="282" pos:column="12">phandle<pos:position pos:line="282" pos:column="19"/></name> <operator pos:line="282" pos:column="20">!=<pos:position pos:line="282" pos:column="22"/></operator> <name pos:line="282" pos:column="23">newhandle<pos:position pos:line="282" pos:column="32"/></name></expr>)<pos:position pos:line="282" pos:column="33"/></condition><then pos:line="282" pos:column="33">
	<block pos:line="283" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="284" pos:column="11">unload_deplibs<pos:position pos:line="284" pos:column="25"/></name> <argument_list pos:line="284" pos:column="26">(<argument><expr><operator pos:line="284" pos:column="27">*<pos:position pos:line="284" pos:column="28"/></operator><name pos:line="284" pos:column="28">phandle<pos:position pos:line="284" pos:column="35"/></name></expr></argument>)<pos:position pos:line="284" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="285" pos:column="10"/></block></then></if>
    }<pos:position pos:line="286" pos:column="6"/></block></then>
  <else pos:line="287" pos:column="3">else
    <block pos:line="288" pos:column="5">{
      <comment type="block" pos:line="289" pos:column="7">/* not a libtool module */</comment>
      <expr_stmt><expr><operator pos:line="290" pos:column="7">*<pos:position pos:line="290" pos:column="8"/></operator><name pos:line="290" pos:column="8">phandle<pos:position pos:line="290" pos:column="15"/></name> <operator pos:line="290" pos:column="16">=<pos:position pos:line="290" pos:column="17"/></operator> <operator pos:line="290" pos:column="18">(<pos:position pos:line="290" pos:column="19"/></operator><name pos:line="290" pos:column="19">lt_dlhandle<pos:position pos:line="290" pos:column="30"/></name><operator pos:line="290" pos:column="30">)<pos:position pos:line="290" pos:column="31"/></operator> <call><name pos:line="290" pos:column="32">lt__zalloc<pos:position pos:line="290" pos:column="42"/></name> <argument_list pos:line="290" pos:column="43">(<argument><expr><sizeof pos:line="290" pos:column="44">sizeof <argument_list pos:line="290" pos:column="51">(<argument><expr pos:line="290" pos:column="52">struct <name pos:line="290" pos:column="59">lt__handle<pos:position pos:line="290" pos:column="69"/></name></expr></argument>)<pos:position pos:line="290" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="290" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="72"/></expr_stmt>
      <if pos:line="291" pos:column="7">if <condition pos:line="291" pos:column="10">(<expr><operator pos:line="291" pos:column="11">*<pos:position pos:line="291" pos:column="12"/></operator><name pos:line="291" pos:column="12">phandle<pos:position pos:line="291" pos:column="19"/></name> <operator pos:line="291" pos:column="20">==<pos:position pos:line="291" pos:column="22"/></operator> <literal type="number" pos:line="291" pos:column="23">0<pos:position pos:line="291" pos:column="24"/></literal></expr>)<pos:position pos:line="291" pos:column="25"/></condition><then pos:line="291" pos:column="25">
	<block pos:line="292" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="293" pos:column="11">++<pos:position pos:line="293" pos:column="13"/></operator><name pos:line="293" pos:column="13">errors<pos:position pos:line="293" pos:column="19"/></name></expr>;<pos:position pos:line="293" pos:column="20"/></expr_stmt>
	  <goto pos:line="294" pos:column="11">goto <name pos:line="294" pos:column="16">cleanup<pos:position pos:line="294" pos:column="23"/></name>;<pos:position pos:line="294" pos:column="24"/></goto>
	}<pos:position pos:line="295" pos:column="10"/></block></then></if>

      <expr_stmt><expr><name pos:line="297" pos:column="7">newhandle<pos:position pos:line="297" pos:column="16"/></name> <operator pos:line="297" pos:column="17">=<pos:position pos:line="297" pos:column="18"/></operator> <operator pos:line="297" pos:column="19">*<pos:position pos:line="297" pos:column="20"/></operator><name pos:line="297" pos:column="20">phandle<pos:position pos:line="297" pos:column="27"/></name></expr>;<pos:position pos:line="297" pos:column="28"/></expr_stmt>

      <comment type="block" pos:line="299" pos:column="7">/* If the module has no directory name component, try to find it
	 first in user_search_path and then other prescribed paths.
	 Otherwise (or in any case if the module was not yet found) try
	 opening just the module name as passed.  */</comment>
      <if pos:line="303" pos:column="7">if <condition pos:line="303" pos:column="10">(<expr><operator pos:line="303" pos:column="11">(<pos:position pos:line="303" pos:column="12"/></operator><name pos:line="303" pos:column="12">dir<pos:position pos:line="303" pos:column="15"/></name> <operator pos:line="303" pos:column="16">||<pos:position pos:line="303" pos:column="18"/></operator> <operator pos:line="303" pos:column="19">(<pos:position pos:line="303" pos:column="20"/></operator><operator pos:line="303" pos:column="20">!<pos:position pos:line="303" pos:column="21"/></operator><call><name pos:line="303" pos:column="21">find_handle<pos:position pos:line="303" pos:column="32"/></name> <argument_list pos:line="303" pos:column="33">(<argument><expr><name pos:line="303" pos:column="34">user_search_path<pos:position pos:line="303" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="303" pos:column="52">base_name<pos:position pos:line="303" pos:column="61"/></name></expr></argument>,
				 <argument><expr><operator pos:line="304" pos:column="34">&amp;<pos:position pos:line="304" pos:column="39"/></operator><name pos:line="304" pos:column="35">newhandle<pos:position pos:line="304" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="304" pos:column="46">advise<pos:position pos:line="304" pos:column="52"/></name></expr></argument>)<pos:position pos:line="304" pos:column="53"/></argument_list></call>
		   <operator pos:line="305" pos:column="20">&amp;&amp;<pos:position pos:line="305" pos:column="30"/></operator> <operator pos:line="305" pos:column="23">!<pos:position pos:line="305" pos:column="24"/></operator><call><name pos:line="305" pos:column="24">find_handle<pos:position pos:line="305" pos:column="35"/></name> <argument_list pos:line="305" pos:column="36">(<argument><expr><call><name pos:line="305" pos:column="37">getenv<pos:position pos:line="305" pos:column="43"/></name> <argument_list pos:line="305" pos:column="44">(<argument><expr><name pos:line="305" pos:column="45">LTDL_SEARCHPATH_VAR<pos:position pos:line="305" pos:column="64"/></name></expr></argument>)<pos:position pos:line="305" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="305" pos:column="67">base_name<pos:position pos:line="305" pos:column="76"/></name></expr></argument>,
				    <argument><expr><operator pos:line="306" pos:column="37">&amp;<pos:position pos:line="306" pos:column="42"/></operator><name pos:line="306" pos:column="38">newhandle<pos:position pos:line="306" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="306" pos:column="49">advise<pos:position pos:line="306" pos:column="55"/></name></expr></argument>)<pos:position pos:line="306" pos:column="56"/></argument_list></call>
<cpp:if pos:line="307" pos:column="1">#<cpp:directive pos:line="307" pos:column="2">if<pos:position pos:line="307" pos:column="4"/></cpp:directive> <expr><call><name pos:line="307" pos:column="5">defined<pos:position pos:line="307" pos:column="12"/></name><argument_list pos:line="307" pos:column="12">(<argument><expr><name pos:line="307" pos:column="13">LT_MODULE_PATH_VAR<pos:position pos:line="307" pos:column="31"/></name></expr></argument>)<pos:position pos:line="307" pos:column="32"/></argument_list></call></expr></cpp:if>
		   <operator pos:line="308" pos:column="20">&amp;&amp;<pos:position pos:line="308" pos:column="30"/></operator> <operator pos:line="308" pos:column="23">!<pos:position pos:line="308" pos:column="24"/></operator><call><name pos:line="308" pos:column="24">find_handle<pos:position pos:line="308" pos:column="35"/></name> <argument_list pos:line="308" pos:column="36">(<argument><expr><call><name pos:line="308" pos:column="37">getenv<pos:position pos:line="308" pos:column="43"/></name> <argument_list pos:line="308" pos:column="44">(<argument><expr><name pos:line="308" pos:column="45">LT_MODULE_PATH_VAR<pos:position pos:line="308" pos:column="63"/></name></expr></argument>)<pos:position pos:line="308" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="308" pos:column="66">base_name<pos:position pos:line="308" pos:column="75"/></name></expr></argument>,
				    <argument><expr><operator pos:line="309" pos:column="37">&amp;<pos:position pos:line="309" pos:column="42"/></operator><name pos:line="309" pos:column="38">newhandle<pos:position pos:line="309" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="49">advise<pos:position pos:line="309" pos:column="55"/></name></expr></argument>)<pos:position pos:line="309" pos:column="56"/></argument_list></call>
<cpp:endif pos:line="310" pos:column="1">#<cpp:directive pos:line="310" pos:column="2">endif<pos:position pos:line="310" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="311" pos:column="1">#<cpp:directive pos:line="311" pos:column="2">if<pos:position pos:line="311" pos:column="4"/></cpp:directive> <expr><call><name pos:line="311" pos:column="5">defined<pos:position pos:line="311" pos:column="12"/></name><argument_list pos:line="311" pos:column="12">(<argument><expr><name pos:line="311" pos:column="13">LT_DLSEARCH_PATH<pos:position pos:line="311" pos:column="29"/></name></expr></argument>)<pos:position pos:line="311" pos:column="30"/></argument_list></call></expr></cpp:if>
		   <operator pos:line="312" pos:column="20">&amp;&amp;<pos:position pos:line="312" pos:column="30"/></operator> <operator pos:line="312" pos:column="23">!<pos:position pos:line="312" pos:column="24"/></operator><call><name pos:line="312" pos:column="24">find_handle<pos:position pos:line="312" pos:column="35"/></name> <argument_list pos:line="312" pos:column="36">(<argument><expr><name pos:line="312" pos:column="37">sys_dlsearch_path<pos:position pos:line="312" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="312" pos:column="56">base_name<pos:position pos:line="312" pos:column="65"/></name></expr></argument>,
				    <argument><expr><operator pos:line="313" pos:column="37">&amp;<pos:position pos:line="313" pos:column="42"/></operator><name pos:line="313" pos:column="38">newhandle<pos:position pos:line="313" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="313" pos:column="49">advise<pos:position pos:line="313" pos:column="55"/></name></expr></argument>)<pos:position pos:line="313" pos:column="56"/></argument_list></call>
<cpp:endif pos:line="314" pos:column="1">#<cpp:directive pos:line="314" pos:column="2">endif<pos:position pos:line="314" pos:column="7"/></cpp:directive></cpp:endif>
		   <operator pos:line="315" pos:column="20">)<pos:position pos:line="315" pos:column="21"/></operator><operator pos:line="315" pos:column="21">)<pos:position pos:line="315" pos:column="22"/></operator></expr>)<pos:position pos:line="315" pos:column="23"/></condition><then pos:line="315" pos:column="23">
	<block pos:line="316" pos:column="9">{
	  <if pos:line="317" pos:column="11">if <condition pos:line="317" pos:column="14">(<expr><call><name pos:line="317" pos:column="15">tryall_dlopen<pos:position pos:line="317" pos:column="28"/></name> <argument_list pos:line="317" pos:column="29">(<argument><expr><operator pos:line="317" pos:column="30">&amp;<pos:position pos:line="317" pos:column="35"/></operator><name pos:line="317" pos:column="31">newhandle<pos:position pos:line="317" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="317" pos:column="42">attempt<pos:position pos:line="317" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="317" pos:column="51">advise<pos:position pos:line="317" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="317" pos:column="59">0<pos:position pos:line="317" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="317" pos:column="61"/></argument_list></call> <operator pos:line="317" pos:column="62">!=<pos:position pos:line="317" pos:column="64"/></operator> <literal type="number" pos:line="317" pos:column="65">0<pos:position pos:line="317" pos:column="66"/></literal></expr>)<pos:position pos:line="317" pos:column="67"/></condition><then pos:line="317" pos:column="67">
	    <block pos:line="318" pos:column="13">{
	      <expr_stmt><expr><name pos:line="319" pos:column="15">newhandle<pos:position pos:line="319" pos:column="24"/></name> <operator pos:line="319" pos:column="25">=<pos:position pos:line="319" pos:column="26"/></operator> <name pos:line="319" pos:column="27">NULL<pos:position pos:line="319" pos:column="31"/></name></expr>;<pos:position pos:line="319" pos:column="32"/></expr_stmt>
	    }<pos:position pos:line="320" pos:column="14"/></block></then></if>
	}<pos:position pos:line="321" pos:column="10"/></block></then></if>

      <if pos:line="323" pos:column="7">if <condition pos:line="323" pos:column="10">(<expr><operator pos:line="323" pos:column="11">!<pos:position pos:line="323" pos:column="12"/></operator><name pos:line="323" pos:column="12">newhandle<pos:position pos:line="323" pos:column="21"/></name></expr>)<pos:position pos:line="323" pos:column="22"/></condition><then pos:line="323" pos:column="22">
	<block pos:line="324" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="325" pos:column="11">FREE<pos:position pos:line="325" pos:column="15"/></name> <argument_list pos:line="325" pos:column="16">(<argument><expr><operator pos:line="325" pos:column="17">*<pos:position pos:line="325" pos:column="18"/></operator><name pos:line="325" pos:column="18">phandle<pos:position pos:line="325" pos:column="25"/></name></expr></argument>)<pos:position pos:line="325" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="325" pos:column="27"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="326" pos:column="11">++<pos:position pos:line="326" pos:column="13"/></operator><name pos:line="326" pos:column="13">errors<pos:position pos:line="326" pos:column="19"/></name></expr>;<pos:position pos:line="326" pos:column="20"/></expr_stmt>
	  <goto pos:line="327" pos:column="11">goto <name pos:line="327" pos:column="16">cleanup<pos:position pos:line="327" pos:column="23"/></name>;<pos:position pos:line="327" pos:column="24"/></goto>
	}<pos:position pos:line="328" pos:column="10"/></block></then></if>
    }<pos:position pos:line="329" pos:column="6"/></block></else></if>

 <label><name pos:line="331" pos:column="2">register_handle<pos:position pos:line="331" pos:column="17"/></name>:<pos:position pos:line="331" pos:column="18"/></label>
  <expr_stmt><expr><call><name pos:line="332" pos:column="3">MEMREASSIGN<pos:position pos:line="332" pos:column="14"/></name> <argument_list pos:line="332" pos:column="15">(<argument><expr><operator pos:line="332" pos:column="16">*<pos:position pos:line="332" pos:column="17"/></operator><name pos:line="332" pos:column="17">phandle<pos:position pos:line="332" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="332" pos:column="26">newhandle<pos:position pos:line="332" pos:column="35"/></name></expr></argument>)<pos:position pos:line="332" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="37"/></expr_stmt>

  <if pos:line="334" pos:column="3">if <condition pos:line="334" pos:column="6">(<expr><name><operator pos:line="334" pos:column="7">(<pos:position pos:line="334" pos:column="8"/></operator><operator pos:line="334" pos:column="8">*<pos:position pos:line="334" pos:column="9"/></operator><name pos:line="334" pos:column="9">phandle<pos:position pos:line="334" pos:column="16"/></name><operator pos:line="334" pos:column="16">)<pos:position pos:line="334" pos:column="17"/></operator><operator pos:line="334" pos:column="17">-&gt;<pos:position pos:line="334" pos:column="22"/></operator><name><name pos:line="334" pos:column="19">info<pos:position pos:line="334" pos:column="23"/></name><operator pos:line="334" pos:column="23">.<pos:position pos:line="334" pos:column="24"/></operator><name pos:line="334" pos:column="24">ref_count<pos:position pos:line="334" pos:column="33"/></name></name></name> <operator pos:line="334" pos:column="34">==<pos:position pos:line="334" pos:column="36"/></operator> <literal type="number" pos:line="334" pos:column="37">0<pos:position pos:line="334" pos:column="38"/></literal></expr>)<pos:position pos:line="334" pos:column="39"/></condition><then pos:line="334" pos:column="39">
    <block pos:line="335" pos:column="5">{
      <expr_stmt><expr><name><operator pos:line="336" pos:column="7">(<pos:position pos:line="336" pos:column="8"/></operator><operator pos:line="336" pos:column="8">*<pos:position pos:line="336" pos:column="9"/></operator><name pos:line="336" pos:column="9">phandle<pos:position pos:line="336" pos:column="16"/></name><operator pos:line="336" pos:column="16">)<pos:position pos:line="336" pos:column="17"/></operator><operator pos:line="336" pos:column="17">-&gt;<pos:position pos:line="336" pos:column="22"/></operator><name><name pos:line="336" pos:column="19">info<pos:position pos:line="336" pos:column="23"/></name><operator pos:line="336" pos:column="23">.<pos:position pos:line="336" pos:column="24"/></operator><name pos:line="336" pos:column="24">ref_count<pos:position pos:line="336" pos:column="33"/></name></name></name>	<operator pos:line="336" pos:column="41">=<pos:position pos:line="336" pos:column="42"/></operator> <literal type="number" pos:line="336" pos:column="43">1<pos:position pos:line="336" pos:column="44"/></literal></expr>;<pos:position pos:line="336" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="337" pos:column="7">MEMREASSIGN<pos:position pos:line="337" pos:column="18"/></name> <argument_list pos:line="337" pos:column="19">(<argument><expr><name><operator pos:line="337" pos:column="20">(<pos:position pos:line="337" pos:column="21"/></operator><operator pos:line="337" pos:column="21">*<pos:position pos:line="337" pos:column="22"/></operator><name pos:line="337" pos:column="22">phandle<pos:position pos:line="337" pos:column="29"/></name><operator pos:line="337" pos:column="29">)<pos:position pos:line="337" pos:column="30"/></operator><operator pos:line="337" pos:column="30">-&gt;<pos:position pos:line="337" pos:column="35"/></operator><name><name pos:line="337" pos:column="32">info<pos:position pos:line="337" pos:column="36"/></name><operator pos:line="337" pos:column="36">.<pos:position pos:line="337" pos:column="37"/></operator><name pos:line="337" pos:column="37">name<pos:position pos:line="337" pos:column="41"/></name></name></name></expr></argument>, <argument><expr><name pos:line="337" pos:column="43">name<pos:position pos:line="337" pos:column="47"/></name></expr></argument>)<pos:position pos:line="337" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="49"/></expr_stmt>

      <expr_stmt><expr><name><operator pos:line="339" pos:column="7">(<pos:position pos:line="339" pos:column="8"/></operator><operator pos:line="339" pos:column="8">*<pos:position pos:line="339" pos:column="9"/></operator><name pos:line="339" pos:column="9">phandle<pos:position pos:line="339" pos:column="16"/></name><operator pos:line="339" pos:column="16">)<pos:position pos:line="339" pos:column="17"/></operator><operator pos:line="339" pos:column="17">-&gt;<pos:position pos:line="339" pos:column="22"/></operator><name pos:line="339" pos:column="19">next<pos:position pos:line="339" pos:column="23"/></name></name>	<operator pos:line="339" pos:column="25">=<pos:position pos:line="339" pos:column="26"/></operator> <name pos:line="339" pos:column="27">handles<pos:position pos:line="339" pos:column="34"/></name></expr>;<pos:position pos:line="339" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="340" pos:column="7">handles<pos:position pos:line="340" pos:column="14"/></name>		<operator pos:line="340" pos:column="25">=<pos:position pos:line="340" pos:column="26"/></operator> <operator pos:line="340" pos:column="27">*<pos:position pos:line="340" pos:column="28"/></operator><name pos:line="340" pos:column="28">phandle<pos:position pos:line="340" pos:column="35"/></name></expr>;<pos:position pos:line="340" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="341" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="343" pos:column="3">LT__SETERRORSTR<pos:position pos:line="343" pos:column="18"/></name> <argument_list pos:line="343" pos:column="19">(<argument><expr><name pos:line="343" pos:column="20">saved_error<pos:position pos:line="343" pos:column="31"/></name></expr></argument>)<pos:position pos:line="343" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="33"/></expr_stmt>

 <label><name pos:line="345" pos:column="2">cleanup<pos:position pos:line="345" pos:column="9"/></name>:<pos:position pos:line="345" pos:column="10"/></label>
  <expr_stmt><expr><call><name pos:line="346" pos:column="3">FREE<pos:position pos:line="346" pos:column="7"/></name> <argument_list pos:line="346" pos:column="8">(<argument><expr><name pos:line="346" pos:column="9">dir<pos:position pos:line="346" pos:column="12"/></name></expr></argument>)<pos:position pos:line="346" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="347" pos:column="3">FREE<pos:position pos:line="347" pos:column="7"/></name> <argument_list pos:line="347" pos:column="8">(<argument><expr><name pos:line="347" pos:column="9">attempt<pos:position pos:line="347" pos:column="16"/></name></expr></argument>)<pos:position pos:line="347" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="348" pos:column="3">FREE<pos:position pos:line="348" pos:column="7"/></name> <argument_list pos:line="348" pos:column="8">(<argument><expr><name pos:line="348" pos:column="9">name<pos:position pos:line="348" pos:column="13"/></name></expr></argument>)<pos:position pos:line="348" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="348" pos:column="15"/></expr_stmt>
  <if pos:line="349" pos:column="3">if <condition pos:line="349" pos:column="6">(<expr><operator pos:line="349" pos:column="7">!<pos:position pos:line="349" pos:column="8"/></operator><name pos:line="349" pos:column="8">canonical<pos:position pos:line="349" pos:column="17"/></name></expr>)<pos:position pos:line="349" pos:column="18"/></condition><then pos:line="349" pos:column="18">		<comment type="block" pos:line="349" pos:column="33">/* was MEMREASSIGNed */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="350" pos:column="5">FREE<pos:position pos:line="350" pos:column="9"/></name> <argument_list pos:line="350" pos:column="10">(<argument><expr><name pos:line="350" pos:column="11">base_name<pos:position pos:line="350" pos:column="20"/></name></expr></argument>)<pos:position pos:line="350" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="22"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="351" pos:column="3">FREE<pos:position pos:line="351" pos:column="7"/></name> <argument_list pos:line="351" pos:column="8">(<argument><expr><name pos:line="351" pos:column="9">canonical<pos:position pos:line="351" pos:column="18"/></name></expr></argument>)<pos:position pos:line="351" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="352" pos:column="3">FREE<pos:position pos:line="352" pos:column="7"/></name> <argument_list pos:line="352" pos:column="8">(<argument><expr><name pos:line="352" pos:column="9">archive_name<pos:position pos:line="352" pos:column="21"/></name></expr></argument>)<pos:position pos:line="352" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="23"/></expr_stmt>

  <return pos:line="354" pos:column="3">return <expr><name pos:line="354" pos:column="10">errors<pos:position pos:line="354" pos:column="16"/></name></expr>;<pos:position pos:line="354" pos:column="17"/></return>
}<pos:position pos:line="355" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1178_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mqtt_write<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">data_set_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">ds<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">value_list_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">vl<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="2" pos:column="5">user_data_t<pos:position pos:line="2" pos:column="16"/></name> <modifier pos:line="2" pos:column="17">*<pos:position pos:line="2" pos:column="18"/></modifier></type><name pos:line="2" pos:column="18">user_data<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">mqtt_client_conf_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">conf<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">topic<pos:position pos:line="5" pos:column="15"/></name><index pos:line="5" pos:column="15">[<expr><name pos:line="5" pos:column="16">MQTT_MAX_TOPIC_SIZE<pos:position pos:line="5" pos:column="35"/></name></expr>]<pos:position pos:line="5" pos:column="36"/></index></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">payload<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><name pos:line="6" pos:column="18">MQTT_MAX_MESSAGE_SIZE<pos:position pos:line="6" pos:column="39"/></name></expr>]<pos:position pos:line="6" pos:column="40"/></index></name></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">status<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">user_data<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">==<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="23">NULL<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">)<pos:position pos:line="9" pos:column="28"/></operator> <operator pos:line="9" pos:column="29">||<pos:position pos:line="9" pos:column="31"/></operator> <operator pos:line="9" pos:column="32">(<pos:position pos:line="9" pos:column="33"/></operator><name><name pos:line="9" pos:column="33">user_data<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">-&gt;<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="44">data<pos:position pos:line="9" pos:column="48"/></name></name> <operator pos:line="9" pos:column="49">==<pos:position pos:line="9" pos:column="51"/></operator> <name pos:line="9" pos:column="52">NULL<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">)<pos:position pos:line="9" pos:column="57"/></operator></expr>)<pos:position pos:line="9" pos:column="58"/></condition><then pos:line="9" pos:column="58">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">EINVAL<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">)<pos:position pos:line="10" pos:column="24"/></operator></expr>;<pos:position pos:line="10" pos:column="25"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="11" pos:column="5">conf<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <name><name pos:line="11" pos:column="12">user_data<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">data<pos:position pos:line="11" pos:column="27"/></name></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">status<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">format_topic<pos:position pos:line="13" pos:column="26"/></name> <argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">topic<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="35">sizeof <argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">topic<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">ds<pos:position pos:line="13" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="55">vl<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="59">conf<pos:position pos:line="13" pos:column="63"/></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">status<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">!=<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21">
    <block pos:line="15" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">ERROR<pos:position pos:line="16" pos:column="14"/></name> <argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="string" pos:line="16" pos:column="16">"mqtt plugin: format_topic failed with status %d."<pos:position pos:line="16" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="68">status<pos:position pos:line="16" pos:column="74"/></name></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="76"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">status<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">)<pos:position pos:line="17" pos:column="24"/></operator></expr>;<pos:position pos:line="17" pos:column="25"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">status<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name pos:line="20" pos:column="14">format_values<pos:position pos:line="20" pos:column="27"/></name> <argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">payload<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="38">sizeof <argument_list pos:line="20" pos:column="45">(<argument><expr><name pos:line="20" pos:column="46">payload<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></sizeof></expr></argument>,
            <argument><expr><name pos:line="21" pos:column="13">ds<pos:position pos:line="21" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="17">vl<pos:position pos:line="21" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="21">conf<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">store_rates<pos:position pos:line="21" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">status<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">!=<pos:position pos:line="22" pos:column="18"/></operator> <literal type="number" pos:line="22" pos:column="19">0<pos:position pos:line="22" pos:column="20"/></literal></expr>)<pos:position pos:line="22" pos:column="21"/></condition><then pos:line="22" pos:column="21">
    <block pos:line="23" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">ERROR<pos:position pos:line="24" pos:column="14"/></name> <argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="string" pos:line="24" pos:column="16">"mqtt plugin: format_values failed with status %d."<pos:position pos:line="24" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="69">status<pos:position pos:line="24" pos:column="75"/></name></expr></argument>)<pos:position pos:line="24" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="77"/></expr_stmt>
        <return pos:line="25" pos:column="9">return <expr><operator pos:line="25" pos:column="16">(<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">status<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">)<pos:position pos:line="25" pos:column="24"/></operator></expr>;<pos:position pos:line="25" pos:column="25"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="28" pos:column="5">status<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">publish<pos:position pos:line="28" pos:column="21"/></name> <argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">conf<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="29">topic<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="36">payload<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="45">strlen<pos:position pos:line="28" pos:column="51"/></name> <argument_list pos:line="28" pos:column="52">(<argument><expr><name pos:line="28" pos:column="53">payload<pos:position pos:line="28" pos:column="60"/></name></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call> <operator pos:line="28" pos:column="62">+<pos:position pos:line="28" pos:column="63"/></operator> <literal type="number" pos:line="28" pos:column="64">1<pos:position pos:line="28" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="67"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">status<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">!=<pos:position pos:line="29" pos:column="18"/></operator> <literal type="number" pos:line="29" pos:column="19">0<pos:position pos:line="29" pos:column="20"/></literal></expr>)<pos:position pos:line="29" pos:column="21"/></condition><then pos:line="29" pos:column="21">
    <block pos:line="30" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">ERROR<pos:position pos:line="31" pos:column="14"/></name> <argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="string" pos:line="31" pos:column="16">"mqtt plugin: publish failed: %s"<pos:position pos:line="31" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="51">mosquitto_strerror<pos:position pos:line="31" pos:column="69"/></name> <argument_list pos:line="31" pos:column="70">(<argument><expr><name pos:line="31" pos:column="71">status<pos:position pos:line="31" pos:column="77"/></name></expr></argument>)<pos:position pos:line="31" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="80"/></expr_stmt>
        <return pos:line="32" pos:column="9">return <expr><operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">status<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">)<pos:position pos:line="32" pos:column="24"/></operator></expr>;<pos:position pos:line="32" pos:column="25"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">(<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">status<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">)<pos:position pos:line="35" pos:column="20"/></operator></expr>;<pos:position pos:line="35" pos:column="21"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1492_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">hddtemp_config<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">key<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">value<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <block pos:line="1" pos:column="63">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><call><name pos:line="2" pos:column="7">strcasecmp<pos:position pos:line="2" pos:column="17"/></name><argument_list pos:line="2" pos:column="17">(<argument><expr><name pos:line="2" pos:column="18">key<pos:position pos:line="2" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="2" pos:column="23">"Host"<pos:position pos:line="2" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="2" pos:column="30"/></argument_list></call> <operator pos:line="2" pos:column="31">==<pos:position pos:line="2" pos:column="33"/></operator> <literal type="number" pos:line="2" pos:column="34">0<pos:position pos:line="2" pos:column="35"/></literal></expr>)<pos:position pos:line="2" pos:column="36"/></condition><then pos:line="2" pos:column="36"> <block pos:line="2" pos:column="37">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">hddtemp_host<pos:position pos:line="3" pos:column="21"/></name> <operator pos:line="3" pos:column="22">!=<pos:position pos:line="3" pos:column="24"/></operator> <name pos:line="3" pos:column="25">NULL<pos:position pos:line="3" pos:column="29"/></name></expr>)<pos:position pos:line="3" pos:column="30"/></condition><then pos:line="3" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="7">free<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">hddtemp_host<pos:position pos:line="4" pos:column="24"/></name></expr></argument>)<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="5" pos:column="5">hddtemp_host<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">=<pos:position pos:line="5" pos:column="19"/></operator> <call><name pos:line="5" pos:column="20">strdup<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">value<pos:position pos:line="5" pos:column="32"/></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="6" pos:column="4"/></block></then> <elseif pos:line="6" pos:column="5">else <if pos:line="6" pos:column="10">if <condition pos:line="6" pos:column="13">(<expr><call><name pos:line="6" pos:column="14">strcasecmp<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">key<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="30">"Port"<pos:position pos:line="6" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call> <operator pos:line="6" pos:column="38">==<pos:position pos:line="6" pos:column="40"/></operator> <literal type="number" pos:line="6" pos:column="41">0<pos:position pos:line="6" pos:column="42"/></literal></expr>)<pos:position pos:line="6" pos:column="43"/></condition><then pos:line="6" pos:column="43"> <block pos:line="6" pos:column="44">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">port<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><call pos:line="7" pos:column="16">(<name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name>)<argument_list pos:line="7" pos:column="21">(<argument><expr><call><name pos:line="7" pos:column="22">atof<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">value<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">port<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">&gt;<pos:position pos:line="8" pos:column="19"/></operator> <literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal><operator pos:line="8" pos:column="18">)<pos:position pos:line="8" pos:column="19"/></operator> <operator pos:line="8" pos:column="20">&amp;&amp;<pos:position pos:line="8" pos:column="30"/></operator> <operator pos:line="8" pos:column="23">(<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">port<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">&lt;=<pos:position pos:line="8" pos:column="34"/></operator> <literal type="number" pos:line="8" pos:column="32">65535<pos:position pos:line="8" pos:column="37"/></literal><operator pos:line="8" pos:column="37">)<pos:position pos:line="8" pos:column="38"/></operator></expr>)<pos:position pos:line="8" pos:column="39"/></condition><then pos:line="8" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="7">ssnprintf<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">hddtemp_port<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="31">sizeof<argument_list pos:line="9" pos:column="37">(<argument><expr><name pos:line="9" pos:column="38">hddtemp_port<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="53">"%i"<pos:position pos:line="9" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="59">port<pos:position pos:line="9" pos:column="63"/></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="65"/></expr_stmt></block></then>
    <else pos:line="10" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="7">sstrncpy<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">hddtemp_port<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="30">value<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="37">sizeof<argument_list pos:line="11" pos:column="43">(<argument><expr><name pos:line="11" pos:column="44">hddtemp_port<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt></block></else></if>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if></elseif> <else pos:line="12" pos:column="5">else <block pos:line="12" pos:column="10">{
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></else></if>

  <return pos:line="16" pos:column="3">return <expr><operator pos:line="16" pos:column="10">(<pos:position pos:line="16" pos:column="11"/></operator><literal type="number" pos:line="16" pos:column="11">0<pos:position pos:line="16" pos:column="12"/></literal><operator pos:line="16" pos:column="12">)<pos:position pos:line="16" pos:column="13"/></operator></expr>;<pos:position pos:line="16" pos:column="14"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2572_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">plugin_update_internal_statistics<pos:position pos:line="1" pos:column="46"/></name> <parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><name pos:line="1" pos:column="48">void<pos:position pos:line="1" pos:column="52"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list> <block pos:line="1" pos:column="54">{ <comment type="block" pos:line="1" pos:column="56">/* {{{ */</comment>
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">derive_t<pos:position pos:line="2" pos:column="17"/></name></type> <name pos:line="2" pos:column="18">copy_write_queue_length<pos:position pos:line="2" pos:column="41"/></name></decl>;<pos:position pos:line="2" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">value_list_t<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">vl<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name pos:line="3" pos:column="27">VALUE_LIST_INIT<pos:position pos:line="3" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">value_t<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">values<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><literal type="number" pos:line="4" pos:column="24">2<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">copy_write_queue_length<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">=<pos:position pos:line="6" pos:column="34"/></operator> <name pos:line="6" pos:column="35">write_queue_length<pos:position pos:line="6" pos:column="53"/></name></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* Initialize `vl' */</comment>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">vl<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">.<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">values<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">values<pos:position pos:line="9" pos:column="27"/></name></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">vl<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">values_len<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <literal type="number" pos:line="10" pos:column="25">2<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">vl<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">time<pos:position pos:line="11" pos:column="16"/></name></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">sstrncpy<pos:position pos:line="12" pos:column="17"/></name> <argument_list pos:line="12" pos:column="18">(<argument><expr><name><name pos:line="12" pos:column="19">vl<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">.<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">host<pos:position pos:line="12" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="28">hostname_g<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="40">sizeof <argument_list pos:line="12" pos:column="47">(<argument><expr><name><name pos:line="12" pos:column="48">vl<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">.<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">host<pos:position pos:line="12" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">sstrncpy<pos:position pos:line="13" pos:column="17"/></name> <argument_list pos:line="13" pos:column="18">(<argument><expr><name><name pos:line="13" pos:column="19">vl<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">.<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">plugin<pos:position pos:line="13" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="30">"collectd"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="42">sizeof <argument_list pos:line="13" pos:column="49">(<argument><expr><name><name pos:line="13" pos:column="50">vl<pos:position pos:line="13" pos:column="52"/></name><operator pos:line="13" pos:column="52">.<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="53">plugin<pos:position pos:line="13" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="62"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="15" pos:column="9">vl<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">.<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">type_instance<pos:position pos:line="15" pos:column="25"/></name><index pos:line="15" pos:column="25">[<expr><literal type="number" pos:line="15" pos:column="26">0<pos:position pos:line="15" pos:column="27"/></literal></expr>]<pos:position pos:line="15" pos:column="28"/></index></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <literal type="number" pos:line="15" pos:column="31">0<pos:position pos:line="15" pos:column="32"/></literal></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">vl<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">.<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">values_len<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>

	<comment type="block" pos:line="18" pos:column="9">/* Write queue */</comment>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">sstrncpy<pos:position pos:line="19" pos:column="17"/></name> <argument_list pos:line="19" pos:column="18">(<argument><expr><name><name pos:line="19" pos:column="19">vl<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">.<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">plugin_instance<pos:position pos:line="19" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="39">"write_queue"<pos:position pos:line="19" pos:column="52"/></literal></expr></argument>,
			<argument><expr><sizeof pos:line="20" pos:column="25">sizeof <argument_list pos:line="20" pos:column="32">(<argument><expr><name><name pos:line="20" pos:column="33">vl<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">.<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">plugin_instance<pos:position pos:line="20" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt>

	<comment type="block" pos:line="22" pos:column="9">/* Write queue : queue length */</comment>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">vl<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">.<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">values<pos:position pos:line="23" pos:column="18"/></name><index pos:line="23" pos:column="18">[<expr><literal type="number" pos:line="23" pos:column="19">0<pos:position pos:line="23" pos:column="20"/></literal></expr>]<pos:position pos:line="23" pos:column="21"/></index></name><operator pos:line="23" pos:column="21">.<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">gauge<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">=<pos:position pos:line="23" pos:column="29"/></operator> <operator pos:line="23" pos:column="30">(<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">gauge_t<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">)<pos:position pos:line="23" pos:column="39"/></operator> <name pos:line="23" pos:column="40">copy_write_queue_length<pos:position pos:line="23" pos:column="63"/></name></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">sstrncpy<pos:position pos:line="24" pos:column="17"/></name> <argument_list pos:line="24" pos:column="18">(<argument><expr><name><name pos:line="24" pos:column="19">vl<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">.<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">type<pos:position pos:line="24" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="28">"queue_length"<pos:position pos:line="24" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="44">sizeof <argument_list pos:line="24" pos:column="51">(<argument><expr><name><name pos:line="24" pos:column="52">vl<pos:position pos:line="24" pos:column="54"/></name><operator pos:line="24" pos:column="54">.<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="55">type<pos:position pos:line="24" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">vl<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">.<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="12">type_instance<pos:position pos:line="25" pos:column="25"/></name><index pos:line="25" pos:column="25">[<expr><literal type="number" pos:line="25" pos:column="26">0<pos:position pos:line="25" pos:column="27"/></literal></expr>]<pos:position pos:line="25" pos:column="28"/></index></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <literal type="number" pos:line="25" pos:column="31">0<pos:position pos:line="25" pos:column="32"/></literal></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">plugin_dispatch_values<pos:position pos:line="26" pos:column="31"/></name> <argument_list pos:line="26" pos:column="32">(<argument><expr><operator pos:line="26" pos:column="33">&amp;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="34">vl<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>

	<comment type="block" pos:line="28" pos:column="9">/* Write queue : Values dropped (queue length &gt; low limit) */</comment>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">vl<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">.<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="12">values<pos:position pos:line="29" pos:column="18"/></name><index pos:line="29" pos:column="18">[<expr><literal type="number" pos:line="29" pos:column="19">0<pos:position pos:line="29" pos:column="20"/></literal></expr>]<pos:position pos:line="29" pos:column="21"/></index></name><operator pos:line="29" pos:column="21">.<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">derive<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">=<pos:position pos:line="29" pos:column="30"/></operator> <operator pos:line="29" pos:column="31">(<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="32">derive_t<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">)<pos:position pos:line="29" pos:column="41"/></operator> <name pos:line="29" pos:column="42">stats_values_dropped<pos:position pos:line="29" pos:column="62"/></name></expr>;<pos:position pos:line="29" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">sstrncpy<pos:position pos:line="30" pos:column="17"/></name> <argument_list pos:line="30" pos:column="18">(<argument><expr><name><name pos:line="30" pos:column="19">vl<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">.<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">type<pos:position pos:line="30" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="28">"derive"<pos:position pos:line="30" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="38">sizeof <argument_list pos:line="30" pos:column="45">(<argument><expr><name><name pos:line="30" pos:column="46">vl<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">.<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="49">type<pos:position pos:line="30" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">sstrncpy<pos:position pos:line="31" pos:column="17"/></name> <argument_list pos:line="31" pos:column="18">(<argument><expr><name><name pos:line="31" pos:column="19">vl<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">.<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">type_instance<pos:position pos:line="31" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="37">"dropped"<pos:position pos:line="31" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="48">sizeof <argument_list pos:line="31" pos:column="55">(<argument><expr><name><name pos:line="31" pos:column="56">vl<pos:position pos:line="31" pos:column="58"/></name><operator pos:line="31" pos:column="58">.<pos:position pos:line="31" pos:column="59"/></operator><name pos:line="31" pos:column="59">type_instance<pos:position pos:line="31" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">plugin_dispatch_values<pos:position pos:line="32" pos:column="31"/></name> <argument_list pos:line="32" pos:column="32">(<argument><expr><operator pos:line="32" pos:column="33">&amp;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="34">vl<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>

	<comment type="block" pos:line="34" pos:column="9">/* Cache */</comment>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">sstrncpy<pos:position pos:line="35" pos:column="17"/></name> <argument_list pos:line="35" pos:column="18">(<argument><expr><name><name pos:line="35" pos:column="19">vl<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">.<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">plugin_instance<pos:position pos:line="35" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="39">"cache"<pos:position pos:line="35" pos:column="46"/></literal></expr></argument>,
			<argument><expr><sizeof pos:line="36" pos:column="25">sizeof <argument_list pos:line="36" pos:column="32">(<argument><expr><name><name pos:line="36" pos:column="33">vl<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">.<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="36">plugin_instance<pos:position pos:line="36" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="54"/></expr_stmt>

	<comment type="block" pos:line="38" pos:column="9">/* Cache : Nb entry in cache tree */</comment>
	<expr_stmt><expr><name><name pos:line="39" pos:column="9">vl<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">.<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">values<pos:position pos:line="39" pos:column="18"/></name><index pos:line="39" pos:column="18">[<expr><literal type="number" pos:line="39" pos:column="19">0<pos:position pos:line="39" pos:column="20"/></literal></expr>]<pos:position pos:line="39" pos:column="21"/></index></name><operator pos:line="39" pos:column="21">.<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">gauge<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <operator pos:line="39" pos:column="30">(<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="31">gauge_t<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">)<pos:position pos:line="39" pos:column="39"/></operator> <call><name pos:line="39" pos:column="40">uc_get_size<pos:position pos:line="39" pos:column="51"/></name><argument_list pos:line="39" pos:column="51">()<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">sstrncpy<pos:position pos:line="40" pos:column="17"/></name> <argument_list pos:line="40" pos:column="18">(<argument><expr><name><name pos:line="40" pos:column="19">vl<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">.<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">type<pos:position pos:line="40" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="28">"cache_size"<pos:position pos:line="40" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="42">sizeof <argument_list pos:line="40" pos:column="49">(<argument><expr><name><name pos:line="40" pos:column="50">vl<pos:position pos:line="40" pos:column="52"/></name><operator pos:line="40" pos:column="52">.<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="53">type<pos:position pos:line="40" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="41" pos:column="9">vl<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">.<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="12">type_instance<pos:position pos:line="41" pos:column="25"/></name><index pos:line="41" pos:column="25">[<expr><literal type="number" pos:line="41" pos:column="26">0<pos:position pos:line="41" pos:column="27"/></literal></expr>]<pos:position pos:line="41" pos:column="28"/></index></name> <operator pos:line="41" pos:column="29">=<pos:position pos:line="41" pos:column="30"/></operator> <literal type="number" pos:line="41" pos:column="31">0<pos:position pos:line="41" pos:column="32"/></literal></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">plugin_dispatch_values<pos:position pos:line="42" pos:column="31"/></name> <argument_list pos:line="42" pos:column="32">(<argument><expr><operator pos:line="42" pos:column="33">&amp;<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="34">vl<pos:position pos:line="42" pos:column="36"/></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>

	<return pos:line="44" pos:column="9">return;<pos:position pos:line="44" pos:column="16"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

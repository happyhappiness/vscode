<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1898_collectd-5.6.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">udb_query_prepare_result<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">udb_query_t<pos:position pos:line="1" pos:column="41"/></name> <specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">q<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="52">/* {{{ */</comment>
                             <parameter><decl><type><name pos:line="2" pos:column="30">udb_query_preparation_area_t<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">prep_area<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
                             <parameter><decl><type><specifier pos:line="3" pos:column="30">const<pos:position pos:line="3" pos:column="35"/></specifier> <name pos:line="3" pos:column="36">char<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">host<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="48">const<pos:position pos:line="3" pos:column="53"/></specifier> <name pos:line="3" pos:column="54">char<pos:position pos:line="3" pos:column="58"/></name> <modifier pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></modifier></type><name pos:line="3" pos:column="60">plugin<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>,
                             <parameter><decl><type><specifier pos:line="4" pos:column="30">const<pos:position pos:line="4" pos:column="35"/></specifier> <name pos:line="4" pos:column="36">char<pos:position pos:line="4" pos:column="40"/></name> <modifier pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></modifier></type><name pos:line="4" pos:column="42">db_name<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="51">char<pos:position pos:line="4" pos:column="55"/></name> <modifier pos:line="4" pos:column="56">*<pos:position pos:line="4" pos:column="57"/></modifier><modifier pos:line="4" pos:column="57">*<pos:position pos:line="4" pos:column="58"/></modifier></type><name pos:line="4" pos:column="58">column_names<pos:position pos:line="4" pos:column="70"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="5" pos:column="30">size_t<pos:position pos:line="5" pos:column="36"/></name></type> <name pos:line="5" pos:column="37">column_num<pos:position pos:line="5" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="49">cdtime_t<pos:position pos:line="5" pos:column="57"/></name></type> <name pos:line="5" pos:column="58">interval<pos:position pos:line="5" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="67"/></parameter_list> <block pos:line="5" pos:column="68">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">udb_result_preparation_area_t<pos:position pos:line="6" pos:column="32"/></name> <modifier pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></modifier></type><name pos:line="6" pos:column="34">r_area<pos:position pos:line="6" pos:column="40"/></name></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">udb_result_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">r<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">status<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">q<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">==<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">NULL<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">)<pos:position pos:line="10" pos:column="18"/></operator> <operator pos:line="10" pos:column="19">||<pos:position pos:line="10" pos:column="21"/></operator> <operator pos:line="10" pos:column="22">(<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">prep_area<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">==<pos:position pos:line="10" pos:column="35"/></operator> <name pos:line="10" pos:column="36">NULL<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">)<pos:position pos:line="10" pos:column="41"/></operator></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">EINVAL<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">)<pos:position pos:line="11" pos:column="21"/></operator></expr>;<pos:position pos:line="11" pos:column="22"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">udb_query_finish_result<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">q<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="30">prep_area<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="15" pos:column="3">prep_area<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">column_num<pos:position pos:line="15" pos:column="24"/></name></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <name pos:line="15" pos:column="27">column_num<pos:position pos:line="15" pos:column="37"/></name></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">prep_area<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">host<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <call><name pos:line="16" pos:column="21">strdup<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">host<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">prep_area<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">plugin<pos:position pos:line="17" pos:column="20"/></name></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <call><name pos:line="17" pos:column="23">strdup<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">plugin<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">prep_area<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">db_name<pos:position pos:line="18" pos:column="21"/></name></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <call><name pos:line="18" pos:column="24">strdup<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">db_name<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="20" pos:column="3">prep_area<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">interval<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">interval<pos:position pos:line="20" pos:column="33"/></name></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">(<pos:position pos:line="22" pos:column="8"/></operator><name><name pos:line="22" pos:column="8">prep_area<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">host<pos:position pos:line="22" pos:column="23"/></name></name> <operator pos:line="22" pos:column="24">==<pos:position pos:line="22" pos:column="26"/></operator> <name pos:line="22" pos:column="27">NULL<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">)<pos:position pos:line="22" pos:column="32"/></operator> <operator pos:line="22" pos:column="33">||<pos:position pos:line="22" pos:column="35"/></operator> <operator pos:line="22" pos:column="36">(<pos:position pos:line="22" pos:column="37"/></operator><name><name pos:line="22" pos:column="37">prep_area<pos:position pos:line="22" pos:column="46"/></name><operator pos:line="22" pos:column="46">-&gt;<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="48">plugin<pos:position pos:line="22" pos:column="54"/></name></name> <operator pos:line="22" pos:column="55">==<pos:position pos:line="22" pos:column="57"/></operator> <name pos:line="22" pos:column="58">NULL<pos:position pos:line="22" pos:column="62"/></name><operator pos:line="22" pos:column="62">)<pos:position pos:line="22" pos:column="63"/></operator> <operator pos:line="22" pos:column="64">||<pos:position pos:line="22" pos:column="66"/></operator>
      <operator pos:line="23" pos:column="7">(<pos:position pos:line="23" pos:column="8"/></operator><name><name pos:line="23" pos:column="8">prep_area<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">db_name<pos:position pos:line="23" pos:column="26"/></name></name> <operator pos:line="23" pos:column="27">==<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">NULL<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">)<pos:position pos:line="23" pos:column="35"/></operator></expr>)<pos:position pos:line="23" pos:column="36"/></condition><then pos:line="23" pos:column="36"> <block pos:line="23" pos:column="37">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">ERROR<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><literal type="string" pos:line="24" pos:column="11">"db query utils: Query `%s': Prepare failed: Out of memory."<pos:position pos:line="24" pos:column="71"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="25" pos:column="11">q<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">name<pos:position pos:line="25" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">udb_query_finish_result<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">q<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="32">prep_area<pos:position pos:line="26" pos:column="41"/></name></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><operator pos:line="27" pos:column="13">-<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">ENOMEM<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">)<pos:position pos:line="27" pos:column="21"/></operator></expr>;<pos:position pos:line="27" pos:column="22"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

<cpp:if pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">if<pos:position pos:line="30" pos:column="4"/></cpp:directive> <expr><call><name pos:line="30" pos:column="5">defined<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><name pos:line="30" pos:column="13">COLLECT_DEBUG<pos:position pos:line="30" pos:column="26"/></name></expr></argument>)<pos:position pos:line="30" pos:column="27"/></argument_list></call> <operator pos:line="30" pos:column="28">&amp;&amp;<pos:position pos:line="30" pos:column="38"/></operator> <name pos:line="30" pos:column="31">COLLECT_DEBUG<pos:position pos:line="30" pos:column="44"/></name></expr></cpp:if>
  <do pos:line="31" pos:column="3">do <block pos:line="31" pos:column="6">{
    <for pos:line="32" pos:column="5">for <control pos:line="32" pos:column="9">(<init><decl><type><name pos:line="32" pos:column="10">size_t<pos:position pos:line="32" pos:column="16"/></name></type> <name pos:line="32" pos:column="17">i<pos:position pos:line="32" pos:column="18"/></name> <init pos:line="32" pos:column="19">= <expr><literal type="number" pos:line="32" pos:column="21">0<pos:position pos:line="32" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="23"/></init> <condition><expr><name pos:line="32" pos:column="24">i<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">&lt;<pos:position pos:line="32" pos:column="30"/></operator> <name pos:line="32" pos:column="28">column_num<pos:position pos:line="32" pos:column="38"/></name></expr>;<pos:position pos:line="32" pos:column="39"/></condition> <incr><expr><name pos:line="32" pos:column="40">i<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">++<pos:position pos:line="32" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="44"/></control> <block pos:line="32" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">DEBUG<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><literal type="string" pos:line="33" pos:column="13">"db query utils: udb_query_prepare_result: "<pos:position pos:line="33" pos:column="57"/></literal>
            <literal type="string" pos:line="34" pos:column="13">"query = %s; column[%zu] = %s;"<pos:position pos:line="34" pos:column="44"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="35" pos:column="13">q<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">-&gt;<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="16">name<pos:position pos:line="35" pos:column="20"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="22">i<pos:position pos:line="35" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="25">column_names<pos:position pos:line="35" pos:column="37"/></name><index pos:line="35" pos:column="37">[<expr><name pos:line="35" pos:column="38">i<pos:position pos:line="35" pos:column="39"/></name></expr>]<pos:position pos:line="35" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></for>
  }<pos:position pos:line="37" pos:column="4"/></block> while <condition pos:line="37" pos:column="11">(<expr><literal type="number" pos:line="37" pos:column="12">0<pos:position pos:line="37" pos:column="13"/></literal></expr>)<pos:position pos:line="37" pos:column="14"/></condition>;<pos:position pos:line="37" pos:column="15"/></do>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="40" pos:column="3">/* Determine the position of the PluginInstance column {{{ */</comment>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name><name pos:line="41" pos:column="7">q<pos:position pos:line="41" pos:column="8"/></name><operator pos:line="41" pos:column="8">-&gt;<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="10">plugin_instance_from<pos:position pos:line="41" pos:column="30"/></name></name> <operator pos:line="41" pos:column="31">!=<pos:position pos:line="41" pos:column="33"/></operator> <name pos:line="41" pos:column="34">NULL<pos:position pos:line="41" pos:column="38"/></name></expr>)<pos:position pos:line="41" pos:column="39"/></condition><then pos:line="41" pos:column="39"> <block pos:line="41" pos:column="40">{
    <decl_stmt><decl><type><name pos:line="42" pos:column="5">size_t<pos:position pos:line="42" pos:column="11"/></name></type> <name pos:line="42" pos:column="12">i<pos:position pos:line="42" pos:column="13"/></name></decl>;<pos:position pos:line="42" pos:column="14"/></decl_stmt>

    <for pos:line="44" pos:column="5">for <control pos:line="44" pos:column="9">(<init><expr><name pos:line="44" pos:column="10">i<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <literal type="number" pos:line="44" pos:column="14">0<pos:position pos:line="44" pos:column="15"/></literal></expr>;<pos:position pos:line="44" pos:column="16"/></init> <condition><expr><name pos:line="44" pos:column="17">i<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">&lt;<pos:position pos:line="44" pos:column="23"/></operator> <name pos:line="44" pos:column="21">column_num<pos:position pos:line="44" pos:column="31"/></name></expr>;<pos:position pos:line="44" pos:column="32"/></condition> <incr><expr><name pos:line="44" pos:column="33">i<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">++<pos:position pos:line="44" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="44" pos:column="37"/></control> <block pos:line="44" pos:column="38">{
      <if pos:line="45" pos:column="7">if <condition pos:line="45" pos:column="10">(<expr><call><name pos:line="45" pos:column="11">strcasecmp<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name><name pos:line="45" pos:column="22">q<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">-&gt;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="25">plugin_instance_from<pos:position pos:line="45" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="47">column_names<pos:position pos:line="45" pos:column="59"/></name><index pos:line="45" pos:column="59">[<expr><name pos:line="45" pos:column="60">i<pos:position pos:line="45" pos:column="61"/></name></expr>]<pos:position pos:line="45" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="45" pos:column="63"/></argument_list></call> <operator pos:line="45" pos:column="64">==<pos:position pos:line="45" pos:column="66"/></operator> <literal type="number" pos:line="45" pos:column="67">0<pos:position pos:line="45" pos:column="68"/></literal></expr>)<pos:position pos:line="45" pos:column="69"/></condition><then pos:line="45" pos:column="69"> <block pos:line="45" pos:column="70">{
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">prep_area<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">-&gt;<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="20">plugin_instance_pos<pos:position pos:line="46" pos:column="39"/></name></name> <operator pos:line="46" pos:column="40">=<pos:position pos:line="46" pos:column="41"/></operator> <name pos:line="46" pos:column="42">i<pos:position pos:line="46" pos:column="43"/></name></expr>;<pos:position pos:line="46" pos:column="44"/></expr_stmt>
        <break pos:line="47" pos:column="9">break;<pos:position pos:line="47" pos:column="15"/></break>
      }<pos:position pos:line="48" pos:column="8"/></block></then></if>
    }<pos:position pos:line="49" pos:column="6"/></block></for>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">i<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">&gt;=<pos:position pos:line="51" pos:column="16"/></operator> <name pos:line="51" pos:column="14">column_num<pos:position pos:line="51" pos:column="24"/></name></expr>)<pos:position pos:line="51" pos:column="25"/></condition><then pos:line="51" pos:column="25"> <block pos:line="51" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">ERROR<pos:position pos:line="52" pos:column="12"/></name><argument_list pos:line="52" pos:column="12">(<argument><expr><literal type="string" pos:line="52" pos:column="13">"db query utils: udb_query_prepare_result: "<pos:position pos:line="52" pos:column="57"/></literal>
            <literal type="string" pos:line="53" pos:column="13">"Column `%s' from `PluginInstanceFrom' could not be found."<pos:position pos:line="53" pos:column="72"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="54" pos:column="13">q<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">-&gt;<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="16">plugin_instance_from<pos:position pos:line="54" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">udb_query_finish_result<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><name pos:line="55" pos:column="31">q<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="34">prep_area<pos:position pos:line="55" pos:column="43"/></name></expr></argument>)<pos:position pos:line="55" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="45"/></expr_stmt>
      <return pos:line="56" pos:column="7">return <expr><operator pos:line="56" pos:column="14">(<pos:position pos:line="56" pos:column="15"/></operator><operator pos:line="56" pos:column="15">-<pos:position pos:line="56" pos:column="16"/></operator><name pos:line="56" pos:column="16">ENOENT<pos:position pos:line="56" pos:column="22"/></name><operator pos:line="56" pos:column="22">)<pos:position pos:line="56" pos:column="23"/></operator></expr>;<pos:position pos:line="56" pos:column="24"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="59" pos:column="3">/* }}} */</comment>

  <for pos:line="61" pos:column="3">for <control pos:line="61" pos:column="7">(<init><expr><name pos:line="61" pos:column="8">r<pos:position pos:line="61" pos:column="9"/></name> <operator pos:line="61" pos:column="10">=<pos:position pos:line="61" pos:column="11"/></operator> <name><name pos:line="61" pos:column="12">q<pos:position pos:line="61" pos:column="13"/></name><operator pos:line="61" pos:column="13">-&gt;<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="15">results<pos:position pos:line="61" pos:column="22"/></name></name></expr><operator pos:line="61" pos:column="22">,<pos:position pos:line="61" pos:column="23"/></operator> <expr><name pos:line="61" pos:column="24">r_area<pos:position pos:line="61" pos:column="30"/></name> <operator pos:line="61" pos:column="31">=<pos:position pos:line="61" pos:column="32"/></operator> <name><name pos:line="61" pos:column="33">prep_area<pos:position pos:line="61" pos:column="42"/></name><operator pos:line="61" pos:column="42">-&gt;<pos:position pos:line="61" pos:column="47"/></operator><name pos:line="61" pos:column="44">result_prep_areas<pos:position pos:line="61" pos:column="61"/></name></name></expr>;<pos:position pos:line="61" pos:column="62"/></init> <condition><expr><name pos:line="61" pos:column="63">r<pos:position pos:line="61" pos:column="64"/></name> <operator pos:line="61" pos:column="65">!=<pos:position pos:line="61" pos:column="67"/></operator> <name pos:line="61" pos:column="68">NULL<pos:position pos:line="61" pos:column="72"/></name></expr>;<pos:position pos:line="61" pos:column="73"/></condition>
       <incr><expr><name pos:line="62" pos:column="8">r<pos:position pos:line="62" pos:column="9"/></name> <operator pos:line="62" pos:column="10">=<pos:position pos:line="62" pos:column="11"/></operator> <name><name pos:line="62" pos:column="12">r<pos:position pos:line="62" pos:column="13"/></name><operator pos:line="62" pos:column="13">-&gt;<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="15">next<pos:position pos:line="62" pos:column="19"/></name></name></expr><operator pos:line="62" pos:column="19">,<pos:position pos:line="62" pos:column="20"/></operator> <expr><name pos:line="62" pos:column="21">r_area<pos:position pos:line="62" pos:column="27"/></name> <operator pos:line="62" pos:column="28">=<pos:position pos:line="62" pos:column="29"/></operator> <name><name pos:line="62" pos:column="30">r_area<pos:position pos:line="62" pos:column="36"/></name><operator pos:line="62" pos:column="36">-&gt;<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="38">next<pos:position pos:line="62" pos:column="42"/></name></name></expr></incr>)<pos:position pos:line="62" pos:column="43"/></control> <block pos:line="62" pos:column="44">{
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><operator pos:line="63" pos:column="9">!<pos:position pos:line="63" pos:column="10"/></operator><name pos:line="63" pos:column="10">r_area<pos:position pos:line="63" pos:column="16"/></name></expr>)<pos:position pos:line="63" pos:column="17"/></condition><then pos:line="63" pos:column="17"> <block pos:line="63" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">ERROR<pos:position pos:line="64" pos:column="12"/></name><argument_list pos:line="64" pos:column="12">(<argument><expr><literal type="string" pos:line="64" pos:column="13">"db query utils: Query `%s': Invalid number of result "<pos:position pos:line="64" pos:column="68"/></literal>
            <literal type="string" pos:line="65" pos:column="13">"preparation areas."<pos:position pos:line="65" pos:column="33"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="66" pos:column="13">q<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">name<pos:position pos:line="66" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">udb_query_finish_result<pos:position pos:line="67" pos:column="30"/></name><argument_list pos:line="67" pos:column="30">(<argument><expr><name pos:line="67" pos:column="31">q<pos:position pos:line="67" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="34">prep_area<pos:position pos:line="67" pos:column="43"/></name></expr></argument>)<pos:position pos:line="67" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="45"/></expr_stmt>
      <return pos:line="68" pos:column="7">return <expr><operator pos:line="68" pos:column="14">(<pos:position pos:line="68" pos:column="15"/></operator><operator pos:line="68" pos:column="15">-<pos:position pos:line="68" pos:column="16"/></operator><name pos:line="68" pos:column="16">EINVAL<pos:position pos:line="68" pos:column="22"/></name><operator pos:line="68" pos:column="22">)<pos:position pos:line="68" pos:column="23"/></operator></expr>;<pos:position pos:line="68" pos:column="24"/></return>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="71" pos:column="5">status<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">=<pos:position pos:line="71" pos:column="13"/></operator> <call><name pos:line="71" pos:column="14">udb_result_prepare_result<pos:position pos:line="71" pos:column="39"/></name><argument_list pos:line="71" pos:column="39">(<argument><expr><name pos:line="71" pos:column="40">r<pos:position pos:line="71" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="43">r_area<pos:position pos:line="71" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="51">column_names<pos:position pos:line="71" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="65">column_num<pos:position pos:line="71" pos:column="75"/></name></expr></argument>)<pos:position pos:line="71" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="77"/></expr_stmt>
    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><name pos:line="72" pos:column="9">status<pos:position pos:line="72" pos:column="15"/></name> <operator pos:line="72" pos:column="16">!=<pos:position pos:line="72" pos:column="18"/></operator> <literal type="number" pos:line="72" pos:column="19">0<pos:position pos:line="72" pos:column="20"/></literal></expr>)<pos:position pos:line="72" pos:column="21"/></condition><then pos:line="72" pos:column="21"> <block pos:line="72" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">udb_query_finish_result<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">(<argument><expr><name pos:line="73" pos:column="31">q<pos:position pos:line="73" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="34">prep_area<pos:position pos:line="73" pos:column="43"/></name></expr></argument>)<pos:position pos:line="73" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="45"/></expr_stmt>
      <return pos:line="74" pos:column="7">return <expr><operator pos:line="74" pos:column="14">(<pos:position pos:line="74" pos:column="15"/></operator><name pos:line="74" pos:column="15">status<pos:position pos:line="74" pos:column="21"/></name><operator pos:line="74" pos:column="21">)<pos:position pos:line="74" pos:column="22"/></operator></expr>;<pos:position pos:line="74" pos:column="23"/></return>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>
  }<pos:position pos:line="76" pos:column="4"/></block></for>

  <return pos:line="78" pos:column="3">return <expr><operator pos:line="78" pos:column="10">(<pos:position pos:line="78" pos:column="11"/></operator><literal type="number" pos:line="78" pos:column="11">0<pos:position pos:line="78" pos:column="12"/></literal><operator pos:line="78" pos:column="12">)<pos:position pos:line="78" pos:column="13"/></operator></expr>;<pos:position pos:line="78" pos:column="14"/></return>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

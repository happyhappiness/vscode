<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_268_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">varnish_monitor<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">priv<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">VSC_point<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier> <specifier pos:line="1" pos:column="66">const<pos:position pos:line="1" pos:column="71"/></specifier></type> <name pos:line="1" pos:column="72">pt<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list> <comment type="block" pos:line="1" pos:column="76">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uint64_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">val<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">user_config_t<pos:position pos:line="4" pos:column="28"/></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">conf<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">class<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">name<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">pt<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">NULL<pos:position pos:line="8" pos:column="23"/></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal><operator pos:line="9" pos:column="26">)<pos:position pos:line="9" pos:column="27"/></operator></expr>;<pos:position pos:line="9" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="11" pos:column="9">conf<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">priv<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>

<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><name pos:line="13" pos:column="5">HAVE_VARNISH_V4<pos:position pos:line="13" pos:column="20"/></name></expr></cpp:if>
	<expr_stmt><expr><name pos:line="14" pos:column="9">class<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <name><name pos:line="14" pos:column="17">pt<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">section<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">fantom<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">-&gt;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="38">type<pos:position pos:line="14" pos:column="42"/></name></name></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">name<pos:position pos:line="15" pos:column="13"/></name>  <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <name><name pos:line="15" pos:column="17">pt<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">-&gt;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="21">desc<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">name<pos:position pos:line="15" pos:column="31"/></name></name></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">strcmp<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">class<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="27">"MAIN"<pos:position pos:line="17" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call> <operator pos:line="17" pos:column="35">!=<pos:position pos:line="17" pos:column="37"/></operator> <literal type="number" pos:line="17" pos:column="38">0<pos:position pos:line="17" pos:column="39"/></literal></expr>)<pos:position pos:line="17" pos:column="40"/></condition><then pos:line="17" pos:column="40">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><operator pos:line="18" pos:column="24">(<pos:position pos:line="18" pos:column="25"/></operator><literal type="number" pos:line="18" pos:column="25">0<pos:position pos:line="18" pos:column="26"/></literal><operator pos:line="18" pos:column="26">)<pos:position pos:line="18" pos:column="27"/></operator></expr>;<pos:position pos:line="18" pos:column="28"/></return></block></then></if>

<cpp:elif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">elif<pos:position pos:line="20" pos:column="6"/></cpp:directive> <expr><name pos:line="20" pos:column="7">HAVE_VARNISH_V3<pos:position pos:line="20" pos:column="22"/></name></expr></cpp:elif>
	<expr_stmt><expr><name pos:line="21" pos:column="9">class<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <name><name pos:line="21" pos:column="17">pt<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">class<pos:position pos:line="21" pos:column="26"/></name></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">name<pos:position pos:line="22" pos:column="13"/></name>  <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name><name pos:line="22" pos:column="17">pt<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">name<pos:position pos:line="22" pos:column="25"/></name></name></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">strcmp<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">class<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="27">""<pos:position pos:line="24" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="30"/></argument_list></call> <operator pos:line="24" pos:column="31">!=<pos:position pos:line="24" pos:column="33"/></operator> <literal type="number" pos:line="24" pos:column="34">0<pos:position pos:line="24" pos:column="35"/></literal></expr>)<pos:position pos:line="24" pos:column="36"/></condition><then pos:line="24" pos:column="36">
		<block type="pseudo"><return pos:line="25" pos:column="17">return <expr><operator pos:line="25" pos:column="24">(<pos:position pos:line="25" pos:column="25"/></operator><literal type="number" pos:line="25" pos:column="25">0<pos:position pos:line="25" pos:column="26"/></literal><operator pos:line="25" pos:column="26">)<pos:position pos:line="25" pos:column="27"/></operator></expr>;<pos:position pos:line="25" pos:column="28"/></return></block></then></if>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="28" pos:column="9">val<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <operator pos:line="28" pos:column="15">*<pos:position pos:line="28" pos:column="16"/></operator><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><specifier pos:line="28" pos:column="17">const<pos:position pos:line="28" pos:column="22"/></specifier> <specifier pos:line="28" pos:column="23">volatile<pos:position pos:line="28" pos:column="31"/></specifier> <name pos:line="28" pos:column="32">uint64_t<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">*<pos:position pos:line="28" pos:column="41"/></operator><operator pos:line="28" pos:column="41">)<pos:position pos:line="28" pos:column="42"/></operator> <name><name pos:line="28" pos:column="43">pt<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">ptr<pos:position pos:line="28" pos:column="50"/></name></name></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">conf<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">collect_cache<pos:position pos:line="30" pos:column="32"/></name></name></expr>)<pos:position pos:line="30" pos:column="33"/></condition><then pos:line="30" pos:column="33">
	<block pos:line="31" pos:column="9">{
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">strcmp<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">name<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="34">"cache_hit"<pos:position pos:line="32" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call> <operator pos:line="32" pos:column="47">==<pos:position pos:line="32" pos:column="49"/></operator> <literal type="number" pos:line="32" pos:column="50">0<pos:position pos:line="32" pos:column="51"/></literal></expr>)<pos:position pos:line="32" pos:column="52"/></condition><then pos:line="32" pos:column="52">
			<block type="pseudo"><return pos:line="33" pos:column="25">return <expr><call><name pos:line="33" pos:column="32">varnish_submit_derive<pos:position pos:line="33" pos:column="53"/></name> <argument_list pos:line="33" pos:column="54">(<argument><expr><name><name pos:line="33" pos:column="55">conf<pos:position pos:line="33" pos:column="59"/></name><operator pos:line="33" pos:column="59">-&gt;<pos:position pos:line="33" pos:column="64"/></operator><name pos:line="33" pos:column="61">instance<pos:position pos:line="33" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="71">"cache"<pos:position pos:line="33" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="80">"cache_result"<pos:position pos:line="33" pos:column="94"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="96">"hit"<pos:position pos:line="33" pos:column="101"/></literal></expr></argument>,     <argument><expr><name pos:line="33" pos:column="107">val<pos:position pos:line="33" pos:column="110"/></name></expr></argument>)<pos:position pos:line="33" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="112"/></return></block></then>
		<elseif pos:line="34" pos:column="17">else <if pos:line="34" pos:column="22">if <condition pos:line="34" pos:column="25">(<expr><call><name pos:line="34" pos:column="26">strcmp<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">name<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="39">"cache_miss"<pos:position pos:line="34" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call> <operator pos:line="34" pos:column="53">==<pos:position pos:line="34" pos:column="55"/></operator> <literal type="number" pos:line="34" pos:column="56">0<pos:position pos:line="34" pos:column="57"/></literal></expr>)<pos:position pos:line="34" pos:column="58"/></condition><then pos:line="34" pos:column="58">
			<block type="pseudo"><return pos:line="35" pos:column="25">return <expr><call><name pos:line="35" pos:column="32">varnish_submit_derive<pos:position pos:line="35" pos:column="53"/></name> <argument_list pos:line="35" pos:column="54">(<argument><expr><name><name pos:line="35" pos:column="55">conf<pos:position pos:line="35" pos:column="59"/></name><operator pos:line="35" pos:column="59">-&gt;<pos:position pos:line="35" pos:column="64"/></operator><name pos:line="35" pos:column="61">instance<pos:position pos:line="35" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="71">"cache"<pos:position pos:line="35" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="80">"cache_result"<pos:position pos:line="35" pos:column="94"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="96">"miss"<pos:position pos:line="35" pos:column="102"/></literal></expr></argument>,    <argument><expr><name pos:line="35" pos:column="107">val<pos:position pos:line="35" pos:column="110"/></name></expr></argument>)<pos:position pos:line="35" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="112"/></return></block></then></if></elseif>
		<elseif pos:line="36" pos:column="17">else <if pos:line="36" pos:column="22">if <condition pos:line="36" pos:column="25">(<expr><call><name pos:line="36" pos:column="26">strcmp<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">name<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="39">"cache_hitpass"<pos:position pos:line="36" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call> <operator pos:line="36" pos:column="56">==<pos:position pos:line="36" pos:column="58"/></operator> <literal type="number" pos:line="36" pos:column="59">0<pos:position pos:line="36" pos:column="60"/></literal></expr>)<pos:position pos:line="36" pos:column="61"/></condition><then pos:line="36" pos:column="61">
			<block type="pseudo"><return pos:line="37" pos:column="25">return <expr><call><name pos:line="37" pos:column="32">varnish_submit_derive<pos:position pos:line="37" pos:column="53"/></name> <argument_list pos:line="37" pos:column="54">(<argument><expr><name><name pos:line="37" pos:column="55">conf<pos:position pos:line="37" pos:column="59"/></name><operator pos:line="37" pos:column="59">-&gt;<pos:position pos:line="37" pos:column="64"/></operator><name pos:line="37" pos:column="61">instance<pos:position pos:line="37" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="71">"cache"<pos:position pos:line="37" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="80">"cache_result"<pos:position pos:line="37" pos:column="94"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="96">"hitpass"<pos:position pos:line="37" pos:column="105"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="107">val<pos:position pos:line="37" pos:column="110"/></name></expr></argument>)<pos:position pos:line="37" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="112"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name><name pos:line="40" pos:column="13">conf<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">-&gt;<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="19">collect_connections<pos:position pos:line="40" pos:column="38"/></name></name></expr>)<pos:position pos:line="40" pos:column="39"/></condition><then pos:line="40" pos:column="39">
	<block pos:line="41" pos:column="9">{
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><call><name pos:line="42" pos:column="21">strcmp<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">name<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="34">"client_conn"<pos:position pos:line="42" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call> <operator pos:line="42" pos:column="49">==<pos:position pos:line="42" pos:column="51"/></operator> <literal type="number" pos:line="42" pos:column="52">0<pos:position pos:line="42" pos:column="53"/></literal></expr>)<pos:position pos:line="42" pos:column="54"/></condition><then pos:line="42" pos:column="54">
			<block type="pseudo"><return pos:line="43" pos:column="25">return <expr><call><name pos:line="43" pos:column="32">varnish_submit_derive<pos:position pos:line="43" pos:column="53"/></name> <argument_list pos:line="43" pos:column="54">(<argument><expr><name><name pos:line="43" pos:column="55">conf<pos:position pos:line="43" pos:column="59"/></name><operator pos:line="43" pos:column="59">-&gt;<pos:position pos:line="43" pos:column="64"/></operator><name pos:line="43" pos:column="61">instance<pos:position pos:line="43" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="71">"connections"<pos:position pos:line="43" pos:column="84"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="86">"connections"<pos:position pos:line="43" pos:column="99"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="101">"accepted"<pos:position pos:line="43" pos:column="111"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="113">val<pos:position pos:line="43" pos:column="116"/></name></expr></argument>)<pos:position pos:line="43" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="118"/></return></block></then>
		<elseif pos:line="44" pos:column="17">else <if pos:line="44" pos:column="22">if <condition pos:line="44" pos:column="25">(<expr><call><name pos:line="44" pos:column="26">strcmp<pos:position pos:line="44" pos:column="32"/></name><argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">name<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="39">"client_drop"<pos:position pos:line="44" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call> <operator pos:line="44" pos:column="54">==<pos:position pos:line="44" pos:column="56"/></operator> <literal type="number" pos:line="44" pos:column="57">0<pos:position pos:line="44" pos:column="58"/></literal></expr>)<pos:position pos:line="44" pos:column="59"/></condition><then pos:line="44" pos:column="59">
			<block type="pseudo"><return pos:line="45" pos:column="25">return <expr><call><name pos:line="45" pos:column="32">varnish_submit_derive<pos:position pos:line="45" pos:column="53"/></name> <argument_list pos:line="45" pos:column="54">(<argument><expr><name><name pos:line="45" pos:column="55">conf<pos:position pos:line="45" pos:column="59"/></name><operator pos:line="45" pos:column="59">-&gt;<pos:position pos:line="45" pos:column="64"/></operator><name pos:line="45" pos:column="61">instance<pos:position pos:line="45" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="71">"connections"<pos:position pos:line="45" pos:column="84"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="86">"connections"<pos:position pos:line="45" pos:column="99"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="101">"dropped"<pos:position pos:line="45" pos:column="110"/></literal></expr></argument> , <argument><expr><name pos:line="45" pos:column="113">val<pos:position pos:line="45" pos:column="116"/></name></expr></argument>)<pos:position pos:line="45" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="118"/></return></block></then></if></elseif>
		<elseif pos:line="46" pos:column="17">else <if pos:line="46" pos:column="22">if <condition pos:line="46" pos:column="25">(<expr><call><name pos:line="46" pos:column="26">strcmp<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name pos:line="46" pos:column="33">name<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="39">"client_req"<pos:position pos:line="46" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call> <operator pos:line="46" pos:column="53">==<pos:position pos:line="46" pos:column="55"/></operator> <literal type="number" pos:line="46" pos:column="56">0<pos:position pos:line="46" pos:column="57"/></literal></expr>)<pos:position pos:line="46" pos:column="58"/></condition><then pos:line="46" pos:column="58">
			<block type="pseudo"><return pos:line="47" pos:column="25">return <expr><call><name pos:line="47" pos:column="32">varnish_submit_derive<pos:position pos:line="47" pos:column="53"/></name> <argument_list pos:line="47" pos:column="54">(<argument><expr><name><name pos:line="47" pos:column="55">conf<pos:position pos:line="47" pos:column="59"/></name><operator pos:line="47" pos:column="59">-&gt;<pos:position pos:line="47" pos:column="64"/></operator><name pos:line="47" pos:column="61">instance<pos:position pos:line="47" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="71">"connections"<pos:position pos:line="47" pos:column="84"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="86">"connections"<pos:position pos:line="47" pos:column="99"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="101">"received"<pos:position pos:line="47" pos:column="111"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="113">val<pos:position pos:line="47" pos:column="116"/></name></expr></argument>)<pos:position pos:line="47" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="118"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>

<cpp:ifdef pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">ifdef<pos:position pos:line="50" pos:column="7"/></cpp:directive> <name pos:line="50" pos:column="8">HAVE_VARNISH_V3<pos:position pos:line="50" pos:column="23"/></name></cpp:ifdef>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name><name pos:line="51" pos:column="13">conf<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">-&gt;<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="19">collect_dirdns<pos:position pos:line="51" pos:column="33"/></name></name></expr>)<pos:position pos:line="51" pos:column="34"/></condition><then pos:line="51" pos:column="34">
	<block pos:line="52" pos:column="9">{
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><call><name pos:line="53" pos:column="21">strcmp<pos:position pos:line="53" pos:column="27"/></name><argument_list pos:line="53" pos:column="27">(<argument><expr><name pos:line="53" pos:column="28">name<pos:position pos:line="53" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="34">"dir_dns_lookups"<pos:position pos:line="53" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></call> <operator pos:line="53" pos:column="53">==<pos:position pos:line="53" pos:column="55"/></operator> <literal type="number" pos:line="53" pos:column="56">0<pos:position pos:line="53" pos:column="57"/></literal></expr>)<pos:position pos:line="53" pos:column="58"/></condition><then pos:line="53" pos:column="58">
			<block type="pseudo"><return pos:line="54" pos:column="25">return <expr><call><name pos:line="54" pos:column="32">varnish_submit_derive<pos:position pos:line="54" pos:column="53"/></name> <argument_list pos:line="54" pos:column="54">(<argument><expr><name><name pos:line="54" pos:column="55">conf<pos:position pos:line="54" pos:column="59"/></name><operator pos:line="54" pos:column="59">-&gt;<pos:position pos:line="54" pos:column="64"/></operator><name pos:line="54" pos:column="61">instance<pos:position pos:line="54" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="71">"dirdns"<pos:position pos:line="54" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="81">"cache_operation"<pos:position pos:line="54" pos:column="98"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="100">"lookups"<pos:position pos:line="54" pos:column="109"/></literal></expr></argument>,    <argument><expr><name pos:line="54" pos:column="114">val<pos:position pos:line="54" pos:column="117"/></name></expr></argument>)<pos:position pos:line="54" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="119"/></return></block></then>
		<elseif pos:line="55" pos:column="17">else <if pos:line="55" pos:column="22">if <condition pos:line="55" pos:column="25">(<expr><call><name pos:line="55" pos:column="26">strcmp<pos:position pos:line="55" pos:column="32"/></name><argument_list pos:line="55" pos:column="32">(<argument><expr><name pos:line="55" pos:column="33">name<pos:position pos:line="55" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="39">"dir_dns_failed"<pos:position pos:line="55" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="56"/></argument_list></call> <operator pos:line="55" pos:column="57">==<pos:position pos:line="55" pos:column="59"/></operator> <literal type="number" pos:line="55" pos:column="60">0<pos:position pos:line="55" pos:column="61"/></literal></expr>)<pos:position pos:line="55" pos:column="62"/></condition><then pos:line="55" pos:column="62">
			<block type="pseudo"><return pos:line="56" pos:column="25">return <expr><call><name pos:line="56" pos:column="32">varnish_submit_derive<pos:position pos:line="56" pos:column="53"/></name> <argument_list pos:line="56" pos:column="54">(<argument><expr><name><name pos:line="56" pos:column="55">conf<pos:position pos:line="56" pos:column="59"/></name><operator pos:line="56" pos:column="59">-&gt;<pos:position pos:line="56" pos:column="64"/></operator><name pos:line="56" pos:column="61">instance<pos:position pos:line="56" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="71">"dirdns"<pos:position pos:line="56" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="81">"cache_result"<pos:position pos:line="56" pos:column="95"/></literal></expr></argument>,    <argument><expr><literal type="string" pos:line="56" pos:column="100">"failed"<pos:position pos:line="56" pos:column="108"/></literal></expr></argument>,     <argument><expr><name pos:line="56" pos:column="114">val<pos:position pos:line="56" pos:column="117"/></name></expr></argument>)<pos:position pos:line="56" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="119"/></return></block></then></if></elseif>
		<elseif pos:line="57" pos:column="17">else <if pos:line="57" pos:column="22">if <condition pos:line="57" pos:column="25">(<expr><call><name pos:line="57" pos:column="26">strcmp<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">name<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="39">"dir_dns_hit"<pos:position pos:line="57" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="53"/></argument_list></call> <operator pos:line="57" pos:column="54">==<pos:position pos:line="57" pos:column="56"/></operator> <literal type="number" pos:line="57" pos:column="57">0<pos:position pos:line="57" pos:column="58"/></literal></expr>)<pos:position pos:line="57" pos:column="59"/></condition><then pos:line="57" pos:column="59">
			<block type="pseudo"><return pos:line="58" pos:column="25">return <expr><call><name pos:line="58" pos:column="32">varnish_submit_derive<pos:position pos:line="58" pos:column="53"/></name> <argument_list pos:line="58" pos:column="54">(<argument><expr><name><name pos:line="58" pos:column="55">conf<pos:position pos:line="58" pos:column="59"/></name><operator pos:line="58" pos:column="59">-&gt;<pos:position pos:line="58" pos:column="64"/></operator><name pos:line="58" pos:column="61">instance<pos:position pos:line="58" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="71">"dirdns"<pos:position pos:line="58" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="81">"cache_result"<pos:position pos:line="58" pos:column="95"/></literal></expr></argument>,    <argument><expr><literal type="string" pos:line="58" pos:column="100">"hits"<pos:position pos:line="58" pos:column="106"/></literal></expr></argument>,       <argument><expr><name pos:line="58" pos:column="114">val<pos:position pos:line="58" pos:column="117"/></name></expr></argument>)<pos:position pos:line="58" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="119"/></return></block></then></if></elseif>
		<elseif pos:line="59" pos:column="17">else <if pos:line="59" pos:column="22">if <condition pos:line="59" pos:column="25">(<expr><call><name pos:line="59" pos:column="26">strcmp<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">name<pos:position pos:line="59" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="39">"dir_dns_cache_full"<pos:position pos:line="59" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="60"/></argument_list></call> <operator pos:line="59" pos:column="61">==<pos:position pos:line="59" pos:column="63"/></operator> <literal type="number" pos:line="59" pos:column="64">0<pos:position pos:line="59" pos:column="65"/></literal></expr>)<pos:position pos:line="59" pos:column="66"/></condition><then pos:line="59" pos:column="66">
			<block type="pseudo"><return pos:line="60" pos:column="25">return <expr><call><name pos:line="60" pos:column="32">varnish_submit_derive<pos:position pos:line="60" pos:column="53"/></name> <argument_list pos:line="60" pos:column="54">(<argument><expr><name><name pos:line="60" pos:column="55">conf<pos:position pos:line="60" pos:column="59"/></name><operator pos:line="60" pos:column="59">-&gt;<pos:position pos:line="60" pos:column="64"/></operator><name pos:line="60" pos:column="61">instance<pos:position pos:line="60" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="71">"dirdns"<pos:position pos:line="60" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="81">"cache_result"<pos:position pos:line="60" pos:column="95"/></literal></expr></argument>,    <argument><expr><literal type="string" pos:line="60" pos:column="100">"cache_full"<pos:position pos:line="60" pos:column="112"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="114">val<pos:position pos:line="60" pos:column="117"/></name></expr></argument>)<pos:position pos:line="60" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="119"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif<pos:position pos:line="62" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name><name pos:line="64" pos:column="13">conf<pos:position pos:line="64" pos:column="17"/></name><operator pos:line="64" pos:column="17">-&gt;<pos:position pos:line="64" pos:column="22"/></operator><name pos:line="64" pos:column="19">collect_esi<pos:position pos:line="64" pos:column="30"/></name></name></expr>)<pos:position pos:line="64" pos:column="31"/></condition><then pos:line="64" pos:column="31">
	<block pos:line="65" pos:column="9">{
		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><call><name pos:line="66" pos:column="21">strcmp<pos:position pos:line="66" pos:column="27"/></name><argument_list pos:line="66" pos:column="27">(<argument><expr><name pos:line="66" pos:column="28">name<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="34">"esi_errors"<pos:position pos:line="66" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="47"/></argument_list></call> <operator pos:line="66" pos:column="48">==<pos:position pos:line="66" pos:column="50"/></operator> <literal type="number" pos:line="66" pos:column="51">0<pos:position pos:line="66" pos:column="52"/></literal></expr>)<pos:position pos:line="66" pos:column="53"/></condition><then pos:line="66" pos:column="53">
			<block type="pseudo"><return pos:line="67" pos:column="25">return <expr><call><name pos:line="67" pos:column="32">varnish_submit_derive<pos:position pos:line="67" pos:column="53"/></name> <argument_list pos:line="67" pos:column="54">(<argument><expr><name><name pos:line="67" pos:column="55">conf<pos:position pos:line="67" pos:column="59"/></name><operator pos:line="67" pos:column="59">-&gt;<pos:position pos:line="67" pos:column="64"/></operator><name pos:line="67" pos:column="61">instance<pos:position pos:line="67" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="71">"esi"<pos:position pos:line="67" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="78">"total_operations"<pos:position pos:line="67" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="98">"error"<pos:position pos:line="67" pos:column="105"/></literal></expr></argument>,   <argument><expr><name pos:line="67" pos:column="109">val<pos:position pos:line="67" pos:column="112"/></name></expr></argument>)<pos:position pos:line="67" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="114"/></return></block></then>
		<elseif pos:line="68" pos:column="17">else <if pos:line="68" pos:column="22">if <condition pos:line="68" pos:column="25">(<expr><call><name pos:line="68" pos:column="26">strcmp<pos:position pos:line="68" pos:column="32"/></name><argument_list pos:line="68" pos:column="32">(<argument><expr><name pos:line="68" pos:column="33">name<pos:position pos:line="68" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="39">"esi_parse"<pos:position pos:line="68" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="51"/></argument_list></call> <operator pos:line="68" pos:column="52">==<pos:position pos:line="68" pos:column="54"/></operator> <literal type="number" pos:line="68" pos:column="55">0<pos:position pos:line="68" pos:column="56"/></literal></expr>)<pos:position pos:line="68" pos:column="57"/></condition><then pos:line="68" pos:column="57">
			<block type="pseudo"><return pos:line="69" pos:column="25">return <expr><call><name pos:line="69" pos:column="32">varnish_submit_derive<pos:position pos:line="69" pos:column="53"/></name> <argument_list pos:line="69" pos:column="54">(<argument><expr><name><name pos:line="69" pos:column="55">conf<pos:position pos:line="69" pos:column="59"/></name><operator pos:line="69" pos:column="59">-&gt;<pos:position pos:line="69" pos:column="64"/></operator><name pos:line="69" pos:column="61">instance<pos:position pos:line="69" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="71">"esi"<pos:position pos:line="69" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="78">"total_operations"<pos:position pos:line="69" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="98">"parsed"<pos:position pos:line="69" pos:column="106"/></literal></expr></argument>,  <argument><expr><name pos:line="69" pos:column="109">val<pos:position pos:line="69" pos:column="112"/></name></expr></argument>)<pos:position pos:line="69" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="114"/></return></block></then></if></elseif>
		<elseif pos:line="70" pos:column="17">else <if pos:line="70" pos:column="22">if <condition pos:line="70" pos:column="25">(<expr><call><name pos:line="70" pos:column="26">strcmp<pos:position pos:line="70" pos:column="32"/></name><argument_list pos:line="70" pos:column="32">(<argument><expr><name pos:line="70" pos:column="33">name<pos:position pos:line="70" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="39">"esi_warnings"<pos:position pos:line="70" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="54"/></argument_list></call> <operator pos:line="70" pos:column="55">==<pos:position pos:line="70" pos:column="57"/></operator> <literal type="number" pos:line="70" pos:column="58">0<pos:position pos:line="70" pos:column="59"/></literal></expr>)<pos:position pos:line="70" pos:column="60"/></condition><then pos:line="70" pos:column="60">
			<block type="pseudo"><return pos:line="71" pos:column="25">return <expr><call><name pos:line="71" pos:column="32">varnish_submit_derive<pos:position pos:line="71" pos:column="53"/></name> <argument_list pos:line="71" pos:column="54">(<argument><expr><name><name pos:line="71" pos:column="55">conf<pos:position pos:line="71" pos:column="59"/></name><operator pos:line="71" pos:column="59">-&gt;<pos:position pos:line="71" pos:column="64"/></operator><name pos:line="71" pos:column="61">instance<pos:position pos:line="71" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="71">"esi"<pos:position pos:line="71" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="78">"total_operations"<pos:position pos:line="71" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="98">"warning"<pos:position pos:line="71" pos:column="107"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="109">val<pos:position pos:line="71" pos:column="112"/></name></expr></argument>)<pos:position pos:line="71" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="114"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="72" pos:column="10"/></block></then></if>

	<if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name><name pos:line="74" pos:column="13">conf<pos:position pos:line="74" pos:column="17"/></name><operator pos:line="74" pos:column="17">-&gt;<pos:position pos:line="74" pos:column="22"/></operator><name pos:line="74" pos:column="19">collect_backend<pos:position pos:line="74" pos:column="34"/></name></name></expr>)<pos:position pos:line="74" pos:column="35"/></condition><then pos:line="74" pos:column="35">
	<block pos:line="75" pos:column="9">{
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><call><name pos:line="76" pos:column="21">strcmp<pos:position pos:line="76" pos:column="27"/></name><argument_list pos:line="76" pos:column="27">(<argument><expr><name pos:line="76" pos:column="28">name<pos:position pos:line="76" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="34">"backend_conn"<pos:position pos:line="76" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="49"/></argument_list></call> <operator pos:line="76" pos:column="50">==<pos:position pos:line="76" pos:column="52"/></operator> <literal type="number" pos:line="76" pos:column="53">0<pos:position pos:line="76" pos:column="54"/></literal></expr>)<pos:position pos:line="76" pos:column="55"/></condition><then pos:line="76" pos:column="55">
			<block type="pseudo"><return pos:line="77" pos:column="25">return <expr><call><name pos:line="77" pos:column="32">varnish_submit_derive<pos:position pos:line="77" pos:column="53"/></name> <argument_list pos:line="77" pos:column="54">(<argument><expr><name><name pos:line="77" pos:column="55">conf<pos:position pos:line="77" pos:column="59"/></name><operator pos:line="77" pos:column="59">-&gt;<pos:position pos:line="77" pos:column="64"/></operator><name pos:line="77" pos:column="61">instance<pos:position pos:line="77" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="71">"backend"<pos:position pos:line="77" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="82">"connections"<pos:position pos:line="77" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="97">"success"<pos:position pos:line="77" pos:column="106"/></literal></expr></argument>,       <argument><expr><name pos:line="77" pos:column="114">val<pos:position pos:line="77" pos:column="117"/></name></expr></argument>)<pos:position pos:line="77" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="119"/></return></block></then>
		<elseif pos:line="78" pos:column="17">else <if pos:line="78" pos:column="22">if <condition pos:line="78" pos:column="25">(<expr><call><name pos:line="78" pos:column="26">strcmp<pos:position pos:line="78" pos:column="32"/></name><argument_list pos:line="78" pos:column="32">(<argument><expr><name pos:line="78" pos:column="33">name<pos:position pos:line="78" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="39">"backend_unhealthy"<pos:position pos:line="78" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="59"/></argument_list></call> <operator pos:line="78" pos:column="60">==<pos:position pos:line="78" pos:column="62"/></operator> <literal type="number" pos:line="78" pos:column="63">0<pos:position pos:line="78" pos:column="64"/></literal></expr>)<pos:position pos:line="78" pos:column="65"/></condition><then pos:line="78" pos:column="65">
			<block type="pseudo"><return pos:line="79" pos:column="25">return <expr><call><name pos:line="79" pos:column="32">varnish_submit_derive<pos:position pos:line="79" pos:column="53"/></name> <argument_list pos:line="79" pos:column="54">(<argument><expr><name><name pos:line="79" pos:column="55">conf<pos:position pos:line="79" pos:column="59"/></name><operator pos:line="79" pos:column="59">-&gt;<pos:position pos:line="79" pos:column="64"/></operator><name pos:line="79" pos:column="61">instance<pos:position pos:line="79" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="71">"backend"<pos:position pos:line="79" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="82">"connections"<pos:position pos:line="79" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="97">"not-attempted"<pos:position pos:line="79" pos:column="112"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="114">val<pos:position pos:line="79" pos:column="117"/></name></expr></argument>)<pos:position pos:line="79" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="119"/></return></block></then></if></elseif>
		<elseif pos:line="80" pos:column="17">else <if pos:line="80" pos:column="22">if <condition pos:line="80" pos:column="25">(<expr><call><name pos:line="80" pos:column="26">strcmp<pos:position pos:line="80" pos:column="32"/></name><argument_list pos:line="80" pos:column="32">(<argument><expr><name pos:line="80" pos:column="33">name<pos:position pos:line="80" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="39">"backend_busy"<pos:position pos:line="80" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="54"/></argument_list></call> <operator pos:line="80" pos:column="55">==<pos:position pos:line="80" pos:column="57"/></operator> <literal type="number" pos:line="80" pos:column="58">0<pos:position pos:line="80" pos:column="59"/></literal></expr>)<pos:position pos:line="80" pos:column="60"/></condition><then pos:line="80" pos:column="60">
			<block type="pseudo"><return pos:line="81" pos:column="25">return <expr><call><name pos:line="81" pos:column="32">varnish_submit_derive<pos:position pos:line="81" pos:column="53"/></name> <argument_list pos:line="81" pos:column="54">(<argument><expr><name><name pos:line="81" pos:column="55">conf<pos:position pos:line="81" pos:column="59"/></name><operator pos:line="81" pos:column="59">-&gt;<pos:position pos:line="81" pos:column="64"/></operator><name pos:line="81" pos:column="61">instance<pos:position pos:line="81" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="71">"backend"<pos:position pos:line="81" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="82">"connections"<pos:position pos:line="81" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="97">"too-many"<pos:position pos:line="81" pos:column="107"/></literal></expr></argument>,      <argument><expr><name pos:line="81" pos:column="114">val<pos:position pos:line="81" pos:column="117"/></name></expr></argument>)<pos:position pos:line="81" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="119"/></return></block></then></if></elseif>
		<elseif pos:line="82" pos:column="17">else <if pos:line="82" pos:column="22">if <condition pos:line="82" pos:column="25">(<expr><call><name pos:line="82" pos:column="26">strcmp<pos:position pos:line="82" pos:column="32"/></name><argument_list pos:line="82" pos:column="32">(<argument><expr><name pos:line="82" pos:column="33">name<pos:position pos:line="82" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="39">"backend_fail"<pos:position pos:line="82" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="54"/></argument_list></call> <operator pos:line="82" pos:column="55">==<pos:position pos:line="82" pos:column="57"/></operator> <literal type="number" pos:line="82" pos:column="58">0<pos:position pos:line="82" pos:column="59"/></literal></expr>)<pos:position pos:line="82" pos:column="60"/></condition><then pos:line="82" pos:column="60">
			<block type="pseudo"><return pos:line="83" pos:column="25">return <expr><call><name pos:line="83" pos:column="32">varnish_submit_derive<pos:position pos:line="83" pos:column="53"/></name> <argument_list pos:line="83" pos:column="54">(<argument><expr><name><name pos:line="83" pos:column="55">conf<pos:position pos:line="83" pos:column="59"/></name><operator pos:line="83" pos:column="59">-&gt;<pos:position pos:line="83" pos:column="64"/></operator><name pos:line="83" pos:column="61">instance<pos:position pos:line="83" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="71">"backend"<pos:position pos:line="83" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="82">"connections"<pos:position pos:line="83" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="97">"failures"<pos:position pos:line="83" pos:column="107"/></literal></expr></argument>,      <argument><expr><name pos:line="83" pos:column="114">val<pos:position pos:line="83" pos:column="117"/></name></expr></argument>)<pos:position pos:line="83" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="119"/></return></block></then></if></elseif>
		<elseif pos:line="84" pos:column="17">else <if pos:line="84" pos:column="22">if <condition pos:line="84" pos:column="25">(<expr><call><name pos:line="84" pos:column="26">strcmp<pos:position pos:line="84" pos:column="32"/></name><argument_list pos:line="84" pos:column="32">(<argument><expr><name pos:line="84" pos:column="33">name<pos:position pos:line="84" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="39">"backend_reuse"<pos:position pos:line="84" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="55"/></argument_list></call> <operator pos:line="84" pos:column="56">==<pos:position pos:line="84" pos:column="58"/></operator> <literal type="number" pos:line="84" pos:column="59">0<pos:position pos:line="84" pos:column="60"/></literal></expr>)<pos:position pos:line="84" pos:column="61"/></condition><then pos:line="84" pos:column="61">
			<block type="pseudo"><return pos:line="85" pos:column="25">return <expr><call><name pos:line="85" pos:column="32">varnish_submit_derive<pos:position pos:line="85" pos:column="53"/></name> <argument_list pos:line="85" pos:column="54">(<argument><expr><name><name pos:line="85" pos:column="55">conf<pos:position pos:line="85" pos:column="59"/></name><operator pos:line="85" pos:column="59">-&gt;<pos:position pos:line="85" pos:column="64"/></operator><name pos:line="85" pos:column="61">instance<pos:position pos:line="85" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="71">"backend"<pos:position pos:line="85" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="82">"connections"<pos:position pos:line="85" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="97">"reuses"<pos:position pos:line="85" pos:column="105"/></literal></expr></argument>,        <argument><expr><name pos:line="85" pos:column="114">val<pos:position pos:line="85" pos:column="117"/></name></expr></argument>)<pos:position pos:line="85" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="119"/></return></block></then></if></elseif>
		<elseif pos:line="86" pos:column="17">else <if pos:line="86" pos:column="22">if <condition pos:line="86" pos:column="25">(<expr><call><name pos:line="86" pos:column="26">strcmp<pos:position pos:line="86" pos:column="32"/></name><argument_list pos:line="86" pos:column="32">(<argument><expr><name pos:line="86" pos:column="33">name<pos:position pos:line="86" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="39">"backend_toolate"<pos:position pos:line="86" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="57"/></argument_list></call> <operator pos:line="86" pos:column="58">==<pos:position pos:line="86" pos:column="60"/></operator> <literal type="number" pos:line="86" pos:column="61">0<pos:position pos:line="86" pos:column="62"/></literal></expr>)<pos:position pos:line="86" pos:column="63"/></condition><then pos:line="86" pos:column="63">
			<block type="pseudo"><return pos:line="87" pos:column="25">return <expr><call><name pos:line="87" pos:column="32">varnish_submit_derive<pos:position pos:line="87" pos:column="53"/></name> <argument_list pos:line="87" pos:column="54">(<argument><expr><name><name pos:line="87" pos:column="55">conf<pos:position pos:line="87" pos:column="59"/></name><operator pos:line="87" pos:column="59">-&gt;<pos:position pos:line="87" pos:column="64"/></operator><name pos:line="87" pos:column="61">instance<pos:position pos:line="87" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="71">"backend"<pos:position pos:line="87" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="82">"connections"<pos:position pos:line="87" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="97">"was-closed"<pos:position pos:line="87" pos:column="109"/></literal></expr></argument>,    <argument><expr><name pos:line="87" pos:column="114">val<pos:position pos:line="87" pos:column="117"/></name></expr></argument>)<pos:position pos:line="87" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="119"/></return></block></then></if></elseif>
		<elseif pos:line="88" pos:column="17">else <if pos:line="88" pos:column="22">if <condition pos:line="88" pos:column="25">(<expr><call><name pos:line="88" pos:column="26">strcmp<pos:position pos:line="88" pos:column="32"/></name><argument_list pos:line="88" pos:column="32">(<argument><expr><name pos:line="88" pos:column="33">name<pos:position pos:line="88" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="39">"backend_recycle"<pos:position pos:line="88" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="57"/></argument_list></call> <operator pos:line="88" pos:column="58">==<pos:position pos:line="88" pos:column="60"/></operator> <literal type="number" pos:line="88" pos:column="61">0<pos:position pos:line="88" pos:column="62"/></literal></expr>)<pos:position pos:line="88" pos:column="63"/></condition><then pos:line="88" pos:column="63">
			<block type="pseudo"><return pos:line="89" pos:column="25">return <expr><call><name pos:line="89" pos:column="32">varnish_submit_derive<pos:position pos:line="89" pos:column="53"/></name> <argument_list pos:line="89" pos:column="54">(<argument><expr><name><name pos:line="89" pos:column="55">conf<pos:position pos:line="89" pos:column="59"/></name><operator pos:line="89" pos:column="59">-&gt;<pos:position pos:line="89" pos:column="64"/></operator><name pos:line="89" pos:column="61">instance<pos:position pos:line="89" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="71">"backend"<pos:position pos:line="89" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="82">"connections"<pos:position pos:line="89" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="97">"recycled"<pos:position pos:line="89" pos:column="107"/></literal></expr></argument>,      <argument><expr><name pos:line="89" pos:column="114">val<pos:position pos:line="89" pos:column="117"/></name></expr></argument>)<pos:position pos:line="89" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="119"/></return></block></then></if></elseif>
		<elseif pos:line="90" pos:column="17">else <if pos:line="90" pos:column="22">if <condition pos:line="90" pos:column="25">(<expr><call><name pos:line="90" pos:column="26">strcmp<pos:position pos:line="90" pos:column="32"/></name><argument_list pos:line="90" pos:column="32">(<argument><expr><name pos:line="90" pos:column="33">name<pos:position pos:line="90" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="39">"backend_unused"<pos:position pos:line="90" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="56"/></argument_list></call> <operator pos:line="90" pos:column="57">==<pos:position pos:line="90" pos:column="59"/></operator> <literal type="number" pos:line="90" pos:column="60">0<pos:position pos:line="90" pos:column="61"/></literal></expr>)<pos:position pos:line="90" pos:column="62"/></condition><then pos:line="90" pos:column="62">
			<block type="pseudo"><return pos:line="91" pos:column="25">return <expr><call><name pos:line="91" pos:column="32">varnish_submit_derive<pos:position pos:line="91" pos:column="53"/></name> <argument_list pos:line="91" pos:column="54">(<argument><expr><name><name pos:line="91" pos:column="55">conf<pos:position pos:line="91" pos:column="59"/></name><operator pos:line="91" pos:column="59">-&gt;<pos:position pos:line="91" pos:column="64"/></operator><name pos:line="91" pos:column="61">instance<pos:position pos:line="91" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="71">"backend"<pos:position pos:line="91" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="82">"connections"<pos:position pos:line="91" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="97">"unused"<pos:position pos:line="91" pos:column="105"/></literal></expr></argument>,        <argument><expr><name pos:line="91" pos:column="114">val<pos:position pos:line="91" pos:column="117"/></name></expr></argument>)<pos:position pos:line="91" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="119"/></return></block></then></if></elseif>
		<elseif pos:line="92" pos:column="17">else <if pos:line="92" pos:column="22">if <condition pos:line="92" pos:column="25">(<expr><call><name pos:line="92" pos:column="26">strcmp<pos:position pos:line="92" pos:column="32"/></name><argument_list pos:line="92" pos:column="32">(<argument><expr><name pos:line="92" pos:column="33">name<pos:position pos:line="92" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="39">"backend_retry"<pos:position pos:line="92" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="55"/></argument_list></call> <operator pos:line="92" pos:column="56">==<pos:position pos:line="92" pos:column="58"/></operator> <literal type="number" pos:line="92" pos:column="59">0<pos:position pos:line="92" pos:column="60"/></literal></expr>)<pos:position pos:line="92" pos:column="61"/></condition><then pos:line="92" pos:column="61">
			<block type="pseudo"><return pos:line="93" pos:column="25">return <expr><call><name pos:line="93" pos:column="32">varnish_submit_derive<pos:position pos:line="93" pos:column="53"/></name> <argument_list pos:line="93" pos:column="54">(<argument><expr><name><name pos:line="93" pos:column="55">conf<pos:position pos:line="93" pos:column="59"/></name><operator pos:line="93" pos:column="59">-&gt;<pos:position pos:line="93" pos:column="64"/></operator><name pos:line="93" pos:column="61">instance<pos:position pos:line="93" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="71">"backend"<pos:position pos:line="93" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="82">"connections"<pos:position pos:line="93" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="97">"retries"<pos:position pos:line="93" pos:column="106"/></literal></expr></argument>,       <argument><expr><name pos:line="93" pos:column="114">val<pos:position pos:line="93" pos:column="117"/></name></expr></argument>)<pos:position pos:line="93" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="119"/></return></block></then></if></elseif>
		<elseif pos:line="94" pos:column="17">else <if pos:line="94" pos:column="22">if <condition pos:line="94" pos:column="25">(<expr><call><name pos:line="94" pos:column="26">strcmp<pos:position pos:line="94" pos:column="32"/></name><argument_list pos:line="94" pos:column="32">(<argument><expr><name pos:line="94" pos:column="33">name<pos:position pos:line="94" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="39">"backend_req"<pos:position pos:line="94" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="53"/></argument_list></call> <operator pos:line="94" pos:column="54">==<pos:position pos:line="94" pos:column="56"/></operator> <literal type="number" pos:line="94" pos:column="57">0<pos:position pos:line="94" pos:column="58"/></literal></expr>)<pos:position pos:line="94" pos:column="59"/></condition><then pos:line="94" pos:column="59">
			<block type="pseudo"><return pos:line="95" pos:column="25">return <expr><call><name pos:line="95" pos:column="32">varnish_submit_derive<pos:position pos:line="95" pos:column="53"/></name> <argument_list pos:line="95" pos:column="54">(<argument><expr><name><name pos:line="95" pos:column="55">conf<pos:position pos:line="95" pos:column="59"/></name><operator pos:line="95" pos:column="59">-&gt;<pos:position pos:line="95" pos:column="64"/></operator><name pos:line="95" pos:column="61">instance<pos:position pos:line="95" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="71">"backend"<pos:position pos:line="95" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="82">"http_requests"<pos:position pos:line="95" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="99">"requests"<pos:position pos:line="95" pos:column="109"/></literal></expr></argument>,    <argument><expr><name pos:line="95" pos:column="114">val<pos:position pos:line="95" pos:column="117"/></name></expr></argument>)<pos:position pos:line="95" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="119"/></return></block></then></if></elseif>
		<elseif pos:line="96" pos:column="17">else <if pos:line="96" pos:column="22">if <condition pos:line="96" pos:column="25">(<expr><call><name pos:line="96" pos:column="26">strcmp<pos:position pos:line="96" pos:column="32"/></name><argument_list pos:line="96" pos:column="32">(<argument><expr><name pos:line="96" pos:column="33">name<pos:position pos:line="96" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="39">"n_backend"<pos:position pos:line="96" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="51"/></argument_list></call> <operator pos:line="96" pos:column="52">==<pos:position pos:line="96" pos:column="54"/></operator> <literal type="number" pos:line="96" pos:column="55">0<pos:position pos:line="96" pos:column="56"/></literal></expr>)<pos:position pos:line="96" pos:column="57"/></condition><then pos:line="96" pos:column="57">
			<block type="pseudo"><return pos:line="97" pos:column="25">return <expr><call><name pos:line="97" pos:column="32">varnish_submit_gauge<pos:position pos:line="97" pos:column="52"/></name>  <argument_list pos:line="97" pos:column="54">(<argument><expr><name><name pos:line="97" pos:column="55">conf<pos:position pos:line="97" pos:column="59"/></name><operator pos:line="97" pos:column="59">-&gt;<pos:position pos:line="97" pos:column="64"/></operator><name pos:line="97" pos:column="61">instance<pos:position pos:line="97" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="71">"backend"<pos:position pos:line="97" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="82">"backends"<pos:position pos:line="97" pos:column="92"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="94">"n_backends"<pos:position pos:line="97" pos:column="106"/></literal></expr></argument>,       <argument><expr><name pos:line="97" pos:column="114">val<pos:position pos:line="97" pos:column="117"/></name></expr></argument>)<pos:position pos:line="97" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="119"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="98" pos:column="10"/></block></then></if>

	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name><name pos:line="100" pos:column="13">conf<pos:position pos:line="100" pos:column="17"/></name><operator pos:line="100" pos:column="17">-&gt;<pos:position pos:line="100" pos:column="22"/></operator><name pos:line="100" pos:column="19">collect_fetch<pos:position pos:line="100" pos:column="32"/></name></name></expr>)<pos:position pos:line="100" pos:column="33"/></condition><then pos:line="100" pos:column="33">
	<block pos:line="101" pos:column="9">{
		<if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><call><name pos:line="102" pos:column="21">strcmp<pos:position pos:line="102" pos:column="27"/></name><argument_list pos:line="102" pos:column="27">(<argument><expr><name pos:line="102" pos:column="28">name<pos:position pos:line="102" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="34">"fetch_head"<pos:position pos:line="102" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="47"/></argument_list></call> <operator pos:line="102" pos:column="48">==<pos:position pos:line="102" pos:column="50"/></operator> <literal type="number" pos:line="102" pos:column="51">0<pos:position pos:line="102" pos:column="52"/></literal></expr>)<pos:position pos:line="102" pos:column="53"/></condition><then pos:line="102" pos:column="53">
			<block type="pseudo"><return pos:line="103" pos:column="25">return <expr><call><name pos:line="103" pos:column="32">varnish_submit_derive<pos:position pos:line="103" pos:column="53"/></name> <argument_list pos:line="103" pos:column="54">(<argument><expr><name><name pos:line="103" pos:column="55">conf<pos:position pos:line="103" pos:column="59"/></name><operator pos:line="103" pos:column="59">-&gt;<pos:position pos:line="103" pos:column="64"/></operator><name pos:line="103" pos:column="61">instance<pos:position pos:line="103" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="71">"fetch"<pos:position pos:line="103" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="80">"http_requests"<pos:position pos:line="103" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="97">"head"<pos:position pos:line="103" pos:column="103"/></literal></expr></argument>,        <argument><expr><name pos:line="103" pos:column="112">val<pos:position pos:line="103" pos:column="115"/></name></expr></argument>)<pos:position pos:line="103" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="117"/></return></block></then>
		<elseif pos:line="104" pos:column="17">else <if pos:line="104" pos:column="22">if <condition pos:line="104" pos:column="25">(<expr><call><name pos:line="104" pos:column="26">strcmp<pos:position pos:line="104" pos:column="32"/></name><argument_list pos:line="104" pos:column="32">(<argument><expr><name pos:line="104" pos:column="33">name<pos:position pos:line="104" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="39">"fetch_length"<pos:position pos:line="104" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="54"/></argument_list></call> <operator pos:line="104" pos:column="55">==<pos:position pos:line="104" pos:column="57"/></operator> <literal type="number" pos:line="104" pos:column="58">0<pos:position pos:line="104" pos:column="59"/></literal></expr>)<pos:position pos:line="104" pos:column="60"/></condition><then pos:line="104" pos:column="60">
			<block type="pseudo"><return pos:line="105" pos:column="25">return <expr><call><name pos:line="105" pos:column="32">varnish_submit_derive<pos:position pos:line="105" pos:column="53"/></name> <argument_list pos:line="105" pos:column="54">(<argument><expr><name><name pos:line="105" pos:column="55">conf<pos:position pos:line="105" pos:column="59"/></name><operator pos:line="105" pos:column="59">-&gt;<pos:position pos:line="105" pos:column="64"/></operator><name pos:line="105" pos:column="61">instance<pos:position pos:line="105" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="71">"fetch"<pos:position pos:line="105" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="80">"http_requests"<pos:position pos:line="105" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="97">"length"<pos:position pos:line="105" pos:column="105"/></literal></expr></argument>,      <argument><expr><name pos:line="105" pos:column="112">val<pos:position pos:line="105" pos:column="115"/></name></expr></argument>)<pos:position pos:line="105" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="106" pos:column="17">else <if pos:line="106" pos:column="22">if <condition pos:line="106" pos:column="25">(<expr><call><name pos:line="106" pos:column="26">strcmp<pos:position pos:line="106" pos:column="32"/></name><argument_list pos:line="106" pos:column="32">(<argument><expr><name pos:line="106" pos:column="33">name<pos:position pos:line="106" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="39">"fetch_chunked"<pos:position pos:line="106" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="55"/></argument_list></call> <operator pos:line="106" pos:column="56">==<pos:position pos:line="106" pos:column="58"/></operator> <literal type="number" pos:line="106" pos:column="59">0<pos:position pos:line="106" pos:column="60"/></literal></expr>)<pos:position pos:line="106" pos:column="61"/></condition><then pos:line="106" pos:column="61">
			<block type="pseudo"><return pos:line="107" pos:column="25">return <expr><call><name pos:line="107" pos:column="32">varnish_submit_derive<pos:position pos:line="107" pos:column="53"/></name> <argument_list pos:line="107" pos:column="54">(<argument><expr><name><name pos:line="107" pos:column="55">conf<pos:position pos:line="107" pos:column="59"/></name><operator pos:line="107" pos:column="59">-&gt;<pos:position pos:line="107" pos:column="64"/></operator><name pos:line="107" pos:column="61">instance<pos:position pos:line="107" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="71">"fetch"<pos:position pos:line="107" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="80">"http_requests"<pos:position pos:line="107" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="97">"chunked"<pos:position pos:line="107" pos:column="106"/></literal></expr></argument>,     <argument><expr><name pos:line="107" pos:column="112">val<pos:position pos:line="107" pos:column="115"/></name></expr></argument>)<pos:position pos:line="107" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="108" pos:column="17">else <if pos:line="108" pos:column="22">if <condition pos:line="108" pos:column="25">(<expr><call><name pos:line="108" pos:column="26">strcmp<pos:position pos:line="108" pos:column="32"/></name><argument_list pos:line="108" pos:column="32">(<argument><expr><name pos:line="108" pos:column="33">name<pos:position pos:line="108" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="39">"fetch_eof"<pos:position pos:line="108" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="51"/></argument_list></call> <operator pos:line="108" pos:column="52">==<pos:position pos:line="108" pos:column="54"/></operator> <literal type="number" pos:line="108" pos:column="55">0<pos:position pos:line="108" pos:column="56"/></literal></expr>)<pos:position pos:line="108" pos:column="57"/></condition><then pos:line="108" pos:column="57">
			<block type="pseudo"><return pos:line="109" pos:column="25">return <expr><call><name pos:line="109" pos:column="32">varnish_submit_derive<pos:position pos:line="109" pos:column="53"/></name> <argument_list pos:line="109" pos:column="54">(<argument><expr><name><name pos:line="109" pos:column="55">conf<pos:position pos:line="109" pos:column="59"/></name><operator pos:line="109" pos:column="59">-&gt;<pos:position pos:line="109" pos:column="64"/></operator><name pos:line="109" pos:column="61">instance<pos:position pos:line="109" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="71">"fetch"<pos:position pos:line="109" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="80">"http_requests"<pos:position pos:line="109" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="97">"eof"<pos:position pos:line="109" pos:column="102"/></literal></expr></argument>,         <argument><expr><name pos:line="109" pos:column="112">val<pos:position pos:line="109" pos:column="115"/></name></expr></argument>)<pos:position pos:line="109" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="110" pos:column="17">else <if pos:line="110" pos:column="22">if <condition pos:line="110" pos:column="25">(<expr><call><name pos:line="110" pos:column="26">strcmp<pos:position pos:line="110" pos:column="32"/></name><argument_list pos:line="110" pos:column="32">(<argument><expr><name pos:line="110" pos:column="33">name<pos:position pos:line="110" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="39">"fetch_bad"<pos:position pos:line="110" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="51"/></argument_list></call> <operator pos:line="110" pos:column="52">==<pos:position pos:line="110" pos:column="54"/></operator> <literal type="number" pos:line="110" pos:column="55">0<pos:position pos:line="110" pos:column="56"/></literal></expr>)<pos:position pos:line="110" pos:column="57"/></condition><then pos:line="110" pos:column="57">
			<block type="pseudo"><return pos:line="111" pos:column="25">return <expr><call><name pos:line="111" pos:column="32">varnish_submit_derive<pos:position pos:line="111" pos:column="53"/></name> <argument_list pos:line="111" pos:column="54">(<argument><expr><name><name pos:line="111" pos:column="55">conf<pos:position pos:line="111" pos:column="59"/></name><operator pos:line="111" pos:column="59">-&gt;<pos:position pos:line="111" pos:column="64"/></operator><name pos:line="111" pos:column="61">instance<pos:position pos:line="111" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="71">"fetch"<pos:position pos:line="111" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="80">"http_requests"<pos:position pos:line="111" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="97">"bad_headers"<pos:position pos:line="111" pos:column="110"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="112">val<pos:position pos:line="111" pos:column="115"/></name></expr></argument>)<pos:position pos:line="111" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="112" pos:column="17">else <if pos:line="112" pos:column="22">if <condition pos:line="112" pos:column="25">(<expr><call><name pos:line="112" pos:column="26">strcmp<pos:position pos:line="112" pos:column="32"/></name><argument_list pos:line="112" pos:column="32">(<argument><expr><name pos:line="112" pos:column="33">name<pos:position pos:line="112" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="39">"fetch_close"<pos:position pos:line="112" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="53"/></argument_list></call> <operator pos:line="112" pos:column="54">==<pos:position pos:line="112" pos:column="56"/></operator> <literal type="number" pos:line="112" pos:column="57">0<pos:position pos:line="112" pos:column="58"/></literal></expr>)<pos:position pos:line="112" pos:column="59"/></condition><then pos:line="112" pos:column="59">
			<block type="pseudo"><return pos:line="113" pos:column="25">return <expr><call><name pos:line="113" pos:column="32">varnish_submit_derive<pos:position pos:line="113" pos:column="53"/></name> <argument_list pos:line="113" pos:column="54">(<argument><expr><name><name pos:line="113" pos:column="55">conf<pos:position pos:line="113" pos:column="59"/></name><operator pos:line="113" pos:column="59">-&gt;<pos:position pos:line="113" pos:column="64"/></operator><name pos:line="113" pos:column="61">instance<pos:position pos:line="113" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="71">"fetch"<pos:position pos:line="113" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="80">"http_requests"<pos:position pos:line="113" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="97">"close"<pos:position pos:line="113" pos:column="104"/></literal></expr></argument>,       <argument><expr><name pos:line="113" pos:column="112">val<pos:position pos:line="113" pos:column="115"/></name></expr></argument>)<pos:position pos:line="113" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="114" pos:column="17">else <if pos:line="114" pos:column="22">if <condition pos:line="114" pos:column="25">(<expr><call><name pos:line="114" pos:column="26">strcmp<pos:position pos:line="114" pos:column="32"/></name><argument_list pos:line="114" pos:column="32">(<argument><expr><name pos:line="114" pos:column="33">name<pos:position pos:line="114" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="39">"fetch_oldhttp"<pos:position pos:line="114" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="55"/></argument_list></call> <operator pos:line="114" pos:column="56">==<pos:position pos:line="114" pos:column="58"/></operator> <literal type="number" pos:line="114" pos:column="59">0<pos:position pos:line="114" pos:column="60"/></literal></expr>)<pos:position pos:line="114" pos:column="61"/></condition><then pos:line="114" pos:column="61">
			<block type="pseudo"><return pos:line="115" pos:column="25">return <expr><call><name pos:line="115" pos:column="32">varnish_submit_derive<pos:position pos:line="115" pos:column="53"/></name> <argument_list pos:line="115" pos:column="54">(<argument><expr><name><name pos:line="115" pos:column="55">conf<pos:position pos:line="115" pos:column="59"/></name><operator pos:line="115" pos:column="59">-&gt;<pos:position pos:line="115" pos:column="64"/></operator><name pos:line="115" pos:column="61">instance<pos:position pos:line="115" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="71">"fetch"<pos:position pos:line="115" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="80">"http_requests"<pos:position pos:line="115" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="97">"oldhttp"<pos:position pos:line="115" pos:column="106"/></literal></expr></argument>,     <argument><expr><name pos:line="115" pos:column="112">val<pos:position pos:line="115" pos:column="115"/></name></expr></argument>)<pos:position pos:line="115" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="116" pos:column="17">else <if pos:line="116" pos:column="22">if <condition pos:line="116" pos:column="25">(<expr><call><name pos:line="116" pos:column="26">strcmp<pos:position pos:line="116" pos:column="32"/></name><argument_list pos:line="116" pos:column="32">(<argument><expr><name pos:line="116" pos:column="33">name<pos:position pos:line="116" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="39">"fetch_zero"<pos:position pos:line="116" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="52"/></argument_list></call> <operator pos:line="116" pos:column="53">==<pos:position pos:line="116" pos:column="55"/></operator> <literal type="number" pos:line="116" pos:column="56">0<pos:position pos:line="116" pos:column="57"/></literal></expr>)<pos:position pos:line="116" pos:column="58"/></condition><then pos:line="116" pos:column="58">
			<block type="pseudo"><return pos:line="117" pos:column="25">return <expr><call><name pos:line="117" pos:column="32">varnish_submit_derive<pos:position pos:line="117" pos:column="53"/></name> <argument_list pos:line="117" pos:column="54">(<argument><expr><name><name pos:line="117" pos:column="55">conf<pos:position pos:line="117" pos:column="59"/></name><operator pos:line="117" pos:column="59">-&gt;<pos:position pos:line="117" pos:column="64"/></operator><name pos:line="117" pos:column="61">instance<pos:position pos:line="117" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="71">"fetch"<pos:position pos:line="117" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="80">"http_requests"<pos:position pos:line="117" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="97">"zero"<pos:position pos:line="117" pos:column="103"/></literal></expr></argument>,        <argument><expr><name pos:line="117" pos:column="112">val<pos:position pos:line="117" pos:column="115"/></name></expr></argument>)<pos:position pos:line="117" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="118" pos:column="17">else <if pos:line="118" pos:column="22">if <condition pos:line="118" pos:column="25">(<expr><call><name pos:line="118" pos:column="26">strcmp<pos:position pos:line="118" pos:column="32"/></name><argument_list pos:line="118" pos:column="32">(<argument><expr><name pos:line="118" pos:column="33">name<pos:position pos:line="118" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="39">"fetch_failed"<pos:position pos:line="118" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="54"/></argument_list></call> <operator pos:line="118" pos:column="55">==<pos:position pos:line="118" pos:column="57"/></operator> <literal type="number" pos:line="118" pos:column="58">0<pos:position pos:line="118" pos:column="59"/></literal></expr>)<pos:position pos:line="118" pos:column="60"/></condition><then pos:line="118" pos:column="60">
			<block type="pseudo"><return pos:line="119" pos:column="25">return <expr><call><name pos:line="119" pos:column="32">varnish_submit_derive<pos:position pos:line="119" pos:column="53"/></name> <argument_list pos:line="119" pos:column="54">(<argument><expr><name><name pos:line="119" pos:column="55">conf<pos:position pos:line="119" pos:column="59"/></name><operator pos:line="119" pos:column="59">-&gt;<pos:position pos:line="119" pos:column="64"/></operator><name pos:line="119" pos:column="61">instance<pos:position pos:line="119" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="71">"fetch"<pos:position pos:line="119" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="80">"http_requests"<pos:position pos:line="119" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="97">"failed"<pos:position pos:line="119" pos:column="105"/></literal></expr></argument>,      <argument><expr><name pos:line="119" pos:column="112">val<pos:position pos:line="119" pos:column="115"/></name></expr></argument>)<pos:position pos:line="119" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="120" pos:column="17">else <if pos:line="120" pos:column="22">if <condition pos:line="120" pos:column="25">(<expr><call><name pos:line="120" pos:column="26">strcmp<pos:position pos:line="120" pos:column="32"/></name><argument_list pos:line="120" pos:column="32">(<argument><expr><name pos:line="120" pos:column="33">name<pos:position pos:line="120" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="39">"fetch_1xx"<pos:position pos:line="120" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="51"/></argument_list></call> <operator pos:line="120" pos:column="52">==<pos:position pos:line="120" pos:column="54"/></operator> <literal type="number" pos:line="120" pos:column="55">0<pos:position pos:line="120" pos:column="56"/></literal></expr>)<pos:position pos:line="120" pos:column="57"/></condition><then pos:line="120" pos:column="57">
			<block type="pseudo"><return pos:line="121" pos:column="25">return <expr><call><name pos:line="121" pos:column="32">varnish_submit_derive<pos:position pos:line="121" pos:column="53"/></name> <argument_list pos:line="121" pos:column="54">(<argument><expr><name><name pos:line="121" pos:column="55">conf<pos:position pos:line="121" pos:column="59"/></name><operator pos:line="121" pos:column="59">-&gt;<pos:position pos:line="121" pos:column="64"/></operator><name pos:line="121" pos:column="61">instance<pos:position pos:line="121" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="71">"fetch"<pos:position pos:line="121" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="80">"http_requests"<pos:position pos:line="121" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="97">"no_body_1xx"<pos:position pos:line="121" pos:column="110"/></literal></expr></argument>, <argument><expr><name pos:line="121" pos:column="112">val<pos:position pos:line="121" pos:column="115"/></name></expr></argument>)<pos:position pos:line="121" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="122" pos:column="17">else <if pos:line="122" pos:column="22">if <condition pos:line="122" pos:column="25">(<expr><call><name pos:line="122" pos:column="26">strcmp<pos:position pos:line="122" pos:column="32"/></name><argument_list pos:line="122" pos:column="32">(<argument><expr><name pos:line="122" pos:column="33">name<pos:position pos:line="122" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="39">"fetch_204"<pos:position pos:line="122" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="51"/></argument_list></call> <operator pos:line="122" pos:column="52">==<pos:position pos:line="122" pos:column="54"/></operator> <literal type="number" pos:line="122" pos:column="55">0<pos:position pos:line="122" pos:column="56"/></literal></expr>)<pos:position pos:line="122" pos:column="57"/></condition><then pos:line="122" pos:column="57">
			<block type="pseudo"><return pos:line="123" pos:column="25">return <expr><call><name pos:line="123" pos:column="32">varnish_submit_derive<pos:position pos:line="123" pos:column="53"/></name> <argument_list pos:line="123" pos:column="54">(<argument><expr><name><name pos:line="123" pos:column="55">conf<pos:position pos:line="123" pos:column="59"/></name><operator pos:line="123" pos:column="59">-&gt;<pos:position pos:line="123" pos:column="64"/></operator><name pos:line="123" pos:column="61">instance<pos:position pos:line="123" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="71">"fetch"<pos:position pos:line="123" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="80">"http_requests"<pos:position pos:line="123" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="97">"no_body_204"<pos:position pos:line="123" pos:column="110"/></literal></expr></argument>, <argument><expr><name pos:line="123" pos:column="112">val<pos:position pos:line="123" pos:column="115"/></name></expr></argument>)<pos:position pos:line="123" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="124" pos:column="17">else <if pos:line="124" pos:column="22">if <condition pos:line="124" pos:column="25">(<expr><call><name pos:line="124" pos:column="26">strcmp<pos:position pos:line="124" pos:column="32"/></name><argument_list pos:line="124" pos:column="32">(<argument><expr><name pos:line="124" pos:column="33">name<pos:position pos:line="124" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="39">"fetch_304"<pos:position pos:line="124" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="51"/></argument_list></call> <operator pos:line="124" pos:column="52">==<pos:position pos:line="124" pos:column="54"/></operator> <literal type="number" pos:line="124" pos:column="55">0<pos:position pos:line="124" pos:column="56"/></literal></expr>)<pos:position pos:line="124" pos:column="57"/></condition><then pos:line="124" pos:column="57">
			<block type="pseudo"><return pos:line="125" pos:column="25">return <expr><call><name pos:line="125" pos:column="32">varnish_submit_derive<pos:position pos:line="125" pos:column="53"/></name> <argument_list pos:line="125" pos:column="54">(<argument><expr><name><name pos:line="125" pos:column="55">conf<pos:position pos:line="125" pos:column="59"/></name><operator pos:line="125" pos:column="59">-&gt;<pos:position pos:line="125" pos:column="64"/></operator><name pos:line="125" pos:column="61">instance<pos:position pos:line="125" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="71">"fetch"<pos:position pos:line="125" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="80">"http_requests"<pos:position pos:line="125" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="97">"no_body_304"<pos:position pos:line="125" pos:column="110"/></literal></expr></argument>, <argument><expr><name pos:line="125" pos:column="112">val<pos:position pos:line="125" pos:column="115"/></name></expr></argument>)<pos:position pos:line="125" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="117"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="126" pos:column="10"/></block></then></if>

	<if pos:line="128" pos:column="9">if <condition pos:line="128" pos:column="12">(<expr><name><name pos:line="128" pos:column="13">conf<pos:position pos:line="128" pos:column="17"/></name><operator pos:line="128" pos:column="17">-&gt;<pos:position pos:line="128" pos:column="22"/></operator><name pos:line="128" pos:column="19">collect_hcb<pos:position pos:line="128" pos:column="30"/></name></name></expr>)<pos:position pos:line="128" pos:column="31"/></condition><then pos:line="128" pos:column="31">
	<block pos:line="129" pos:column="9">{
		<if pos:line="130" pos:column="17">if <condition pos:line="130" pos:column="20">(<expr><call><name pos:line="130" pos:column="21">strcmp<pos:position pos:line="130" pos:column="27"/></name><argument_list pos:line="130" pos:column="27">(<argument><expr><name pos:line="130" pos:column="28">name<pos:position pos:line="130" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="34">"hcb_nolock"<pos:position pos:line="130" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="47"/></argument_list></call> <operator pos:line="130" pos:column="48">==<pos:position pos:line="130" pos:column="50"/></operator> <literal type="number" pos:line="130" pos:column="51">0<pos:position pos:line="130" pos:column="52"/></literal></expr>)<pos:position pos:line="130" pos:column="53"/></condition><then pos:line="130" pos:column="53">
			<block type="pseudo"><return pos:line="131" pos:column="25">return <expr><call><name pos:line="131" pos:column="32">varnish_submit_derive<pos:position pos:line="131" pos:column="53"/></name> <argument_list pos:line="131" pos:column="54">(<argument><expr><name><name pos:line="131" pos:column="55">conf<pos:position pos:line="131" pos:column="59"/></name><operator pos:line="131" pos:column="59">-&gt;<pos:position pos:line="131" pos:column="64"/></operator><name pos:line="131" pos:column="61">instance<pos:position pos:line="131" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="71">"hcb"<pos:position pos:line="131" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="78">"cache_operation"<pos:position pos:line="131" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="97">"lookup_nolock"<pos:position pos:line="131" pos:column="112"/></literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="114">val<pos:position pos:line="131" pos:column="117"/></name></expr></argument>)<pos:position pos:line="131" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="119"/></return></block></then>
		<elseif pos:line="132" pos:column="17">else <if pos:line="132" pos:column="22">if <condition pos:line="132" pos:column="25">(<expr><call><name pos:line="132" pos:column="26">strcmp<pos:position pos:line="132" pos:column="32"/></name><argument_list pos:line="132" pos:column="32">(<argument><expr><name pos:line="132" pos:column="33">name<pos:position pos:line="132" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="39">"hcb_lock"<pos:position pos:line="132" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="50"/></argument_list></call> <operator pos:line="132" pos:column="51">==<pos:position pos:line="132" pos:column="53"/></operator> <literal type="number" pos:line="132" pos:column="54">0<pos:position pos:line="132" pos:column="55"/></literal></expr>)<pos:position pos:line="132" pos:column="56"/></condition><then pos:line="132" pos:column="56">
			<block type="pseudo"><return pos:line="133" pos:column="25">return <expr><call><name pos:line="133" pos:column="32">varnish_submit_derive<pos:position pos:line="133" pos:column="53"/></name> <argument_list pos:line="133" pos:column="54">(<argument><expr><name><name pos:line="133" pos:column="55">conf<pos:position pos:line="133" pos:column="59"/></name><operator pos:line="133" pos:column="59">-&gt;<pos:position pos:line="133" pos:column="64"/></operator><name pos:line="133" pos:column="61">instance<pos:position pos:line="133" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="71">"hcb"<pos:position pos:line="133" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="78">"cache_operation"<pos:position pos:line="133" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="97">"lookup_lock"<pos:position pos:line="133" pos:column="110"/></literal></expr></argument>,   <argument><expr><name pos:line="133" pos:column="114">val<pos:position pos:line="133" pos:column="117"/></name></expr></argument>)<pos:position pos:line="133" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="119"/></return></block></then></if></elseif>
		<elseif pos:line="134" pos:column="17">else <if pos:line="134" pos:column="22">if <condition pos:line="134" pos:column="25">(<expr><call><name pos:line="134" pos:column="26">strcmp<pos:position pos:line="134" pos:column="32"/></name><argument_list pos:line="134" pos:column="32">(<argument><expr><name pos:line="134" pos:column="33">name<pos:position pos:line="134" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="39">"hcb_insert"<pos:position pos:line="134" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="52"/></argument_list></call> <operator pos:line="134" pos:column="53">==<pos:position pos:line="134" pos:column="55"/></operator> <literal type="number" pos:line="134" pos:column="56">0<pos:position pos:line="134" pos:column="57"/></literal></expr>)<pos:position pos:line="134" pos:column="58"/></condition><then pos:line="134" pos:column="58">
			<block type="pseudo"><return pos:line="135" pos:column="25">return <expr><call><name pos:line="135" pos:column="32">varnish_submit_derive<pos:position pos:line="135" pos:column="53"/></name> <argument_list pos:line="135" pos:column="54">(<argument><expr><name><name pos:line="135" pos:column="55">conf<pos:position pos:line="135" pos:column="59"/></name><operator pos:line="135" pos:column="59">-&gt;<pos:position pos:line="135" pos:column="64"/></operator><name pos:line="135" pos:column="61">instance<pos:position pos:line="135" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="71">"hcb"<pos:position pos:line="135" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="78">"cache_operation"<pos:position pos:line="135" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="97">"insert"<pos:position pos:line="135" pos:column="105"/></literal></expr></argument>,        <argument><expr><name pos:line="135" pos:column="114">val<pos:position pos:line="135" pos:column="117"/></name></expr></argument>)<pos:position pos:line="135" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="119"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="136" pos:column="10"/></block></then></if>

	<if pos:line="138" pos:column="9">if <condition pos:line="138" pos:column="12">(<expr><name><name pos:line="138" pos:column="13">conf<pos:position pos:line="138" pos:column="17"/></name><operator pos:line="138" pos:column="17">-&gt;<pos:position pos:line="138" pos:column="22"/></operator><name pos:line="138" pos:column="19">collect_objects<pos:position pos:line="138" pos:column="34"/></name></name></expr>)<pos:position pos:line="138" pos:column="35"/></condition><then pos:line="138" pos:column="35">
	<block pos:line="139" pos:column="9">{
		<if pos:line="140" pos:column="17">if <condition pos:line="140" pos:column="20">(<expr><call><name pos:line="140" pos:column="21">strcmp<pos:position pos:line="140" pos:column="27"/></name><argument_list pos:line="140" pos:column="27">(<argument><expr><name pos:line="140" pos:column="28">name<pos:position pos:line="140" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="34">"n_expired"<pos:position pos:line="140" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="46"/></argument_list></call> <operator pos:line="140" pos:column="47">==<pos:position pos:line="140" pos:column="49"/></operator> <literal type="number" pos:line="140" pos:column="50">0<pos:position pos:line="140" pos:column="51"/></literal></expr>)<pos:position pos:line="140" pos:column="52"/></condition><then pos:line="140" pos:column="52">
			<block type="pseudo"><return pos:line="141" pos:column="25">return <expr><call><name pos:line="141" pos:column="32">varnish_submit_derive<pos:position pos:line="141" pos:column="53"/></name> <argument_list pos:line="141" pos:column="54">(<argument><expr><name><name pos:line="141" pos:column="55">conf<pos:position pos:line="141" pos:column="59"/></name><operator pos:line="141" pos:column="59">-&gt;<pos:position pos:line="141" pos:column="64"/></operator><name pos:line="141" pos:column="61">instance<pos:position pos:line="141" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="71">"objects"<pos:position pos:line="141" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="82">"total_objects"<pos:position pos:line="141" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="99">"expired"<pos:position pos:line="141" pos:column="108"/></literal></expr></argument>,            <argument><expr><name pos:line="141" pos:column="121">val<pos:position pos:line="141" pos:column="124"/></name></expr></argument>)<pos:position pos:line="141" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="126"/></return></block></then>
		<elseif pos:line="142" pos:column="17">else <if pos:line="142" pos:column="22">if <condition pos:line="142" pos:column="25">(<expr><call><name pos:line="142" pos:column="26">strcmp<pos:position pos:line="142" pos:column="32"/></name><argument_list pos:line="142" pos:column="32">(<argument><expr><name pos:line="142" pos:column="33">name<pos:position pos:line="142" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="39">"n_lru_nuked"<pos:position pos:line="142" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="53"/></argument_list></call> <operator pos:line="142" pos:column="54">==<pos:position pos:line="142" pos:column="56"/></operator> <literal type="number" pos:line="142" pos:column="57">0<pos:position pos:line="142" pos:column="58"/></literal></expr>)<pos:position pos:line="142" pos:column="59"/></condition><then pos:line="142" pos:column="59">
			<block type="pseudo"><return pos:line="143" pos:column="25">return <expr><call><name pos:line="143" pos:column="32">varnish_submit_derive<pos:position pos:line="143" pos:column="53"/></name> <argument_list pos:line="143" pos:column="54">(<argument><expr><name><name pos:line="143" pos:column="55">conf<pos:position pos:line="143" pos:column="59"/></name><operator pos:line="143" pos:column="59">-&gt;<pos:position pos:line="143" pos:column="64"/></operator><name pos:line="143" pos:column="61">instance<pos:position pos:line="143" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="71">"objects"<pos:position pos:line="143" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="82">"total_objects"<pos:position pos:line="143" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="99">"lru_nuked"<pos:position pos:line="143" pos:column="110"/></literal></expr></argument>,          <argument><expr><name pos:line="143" pos:column="121">val<pos:position pos:line="143" pos:column="124"/></name></expr></argument>)<pos:position pos:line="143" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="126"/></return></block></then></if></elseif>
		<elseif pos:line="144" pos:column="17">else <if pos:line="144" pos:column="22">if <condition pos:line="144" pos:column="25">(<expr><call><name pos:line="144" pos:column="26">strcmp<pos:position pos:line="144" pos:column="32"/></name><argument_list pos:line="144" pos:column="32">(<argument><expr><name pos:line="144" pos:column="33">name<pos:position pos:line="144" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="39">"n_lru_saved"<pos:position pos:line="144" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="53"/></argument_list></call> <operator pos:line="144" pos:column="54">==<pos:position pos:line="144" pos:column="56"/></operator> <literal type="number" pos:line="144" pos:column="57">0<pos:position pos:line="144" pos:column="58"/></literal></expr>)<pos:position pos:line="144" pos:column="59"/></condition><then pos:line="144" pos:column="59">
			<block type="pseudo"><return pos:line="145" pos:column="25">return <expr><call><name pos:line="145" pos:column="32">varnish_submit_derive<pos:position pos:line="145" pos:column="53"/></name> <argument_list pos:line="145" pos:column="54">(<argument><expr><name><name pos:line="145" pos:column="55">conf<pos:position pos:line="145" pos:column="59"/></name><operator pos:line="145" pos:column="59">-&gt;<pos:position pos:line="145" pos:column="64"/></operator><name pos:line="145" pos:column="61">instance<pos:position pos:line="145" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="71">"objects"<pos:position pos:line="145" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="82">"total_objects"<pos:position pos:line="145" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="99">"lru_saved"<pos:position pos:line="145" pos:column="110"/></literal></expr></argument>,          <argument><expr><name pos:line="145" pos:column="121">val<pos:position pos:line="145" pos:column="124"/></name></expr></argument>)<pos:position pos:line="145" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="126"/></return></block></then></if></elseif>
		<elseif pos:line="146" pos:column="17">else <if pos:line="146" pos:column="22">if <condition pos:line="146" pos:column="25">(<expr><call><name pos:line="146" pos:column="26">strcmp<pos:position pos:line="146" pos:column="32"/></name><argument_list pos:line="146" pos:column="32">(<argument><expr><name pos:line="146" pos:column="33">name<pos:position pos:line="146" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="39">"n_lru_moved"<pos:position pos:line="146" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="53"/></argument_list></call> <operator pos:line="146" pos:column="54">==<pos:position pos:line="146" pos:column="56"/></operator> <literal type="number" pos:line="146" pos:column="57">0<pos:position pos:line="146" pos:column="58"/></literal></expr>)<pos:position pos:line="146" pos:column="59"/></condition><then pos:line="146" pos:column="59">
			<block type="pseudo"><return pos:line="147" pos:column="25">return <expr><call><name pos:line="147" pos:column="32">varnish_submit_derive<pos:position pos:line="147" pos:column="53"/></name> <argument_list pos:line="147" pos:column="54">(<argument><expr><name><name pos:line="147" pos:column="55">conf<pos:position pos:line="147" pos:column="59"/></name><operator pos:line="147" pos:column="59">-&gt;<pos:position pos:line="147" pos:column="64"/></operator><name pos:line="147" pos:column="61">instance<pos:position pos:line="147" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="71">"objects"<pos:position pos:line="147" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="82">"total_objects"<pos:position pos:line="147" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="99">"lru_moved"<pos:position pos:line="147" pos:column="110"/></literal></expr></argument>,          <argument><expr><name pos:line="147" pos:column="121">val<pos:position pos:line="147" pos:column="124"/></name></expr></argument>)<pos:position pos:line="147" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="126"/></return></block></then></if></elseif>
		<elseif pos:line="148" pos:column="17">else <if pos:line="148" pos:column="22">if <condition pos:line="148" pos:column="25">(<expr><call><name pos:line="148" pos:column="26">strcmp<pos:position pos:line="148" pos:column="32"/></name><argument_list pos:line="148" pos:column="32">(<argument><expr><name pos:line="148" pos:column="33">name<pos:position pos:line="148" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="39">"n_deathrow"<pos:position pos:line="148" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="52"/></argument_list></call> <operator pos:line="148" pos:column="53">==<pos:position pos:line="148" pos:column="55"/></operator> <literal type="number" pos:line="148" pos:column="56">0<pos:position pos:line="148" pos:column="57"/></literal></expr>)<pos:position pos:line="148" pos:column="58"/></condition><then pos:line="148" pos:column="58">
			<block type="pseudo"><return pos:line="149" pos:column="25">return <expr><call><name pos:line="149" pos:column="32">varnish_submit_derive<pos:position pos:line="149" pos:column="53"/></name> <argument_list pos:line="149" pos:column="54">(<argument><expr><name><name pos:line="149" pos:column="55">conf<pos:position pos:line="149" pos:column="59"/></name><operator pos:line="149" pos:column="59">-&gt;<pos:position pos:line="149" pos:column="64"/></operator><name pos:line="149" pos:column="61">instance<pos:position pos:line="149" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="71">"objects"<pos:position pos:line="149" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="82">"total_objects"<pos:position pos:line="149" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="99">"deathrow"<pos:position pos:line="149" pos:column="109"/></literal></expr></argument>,           <argument><expr><name pos:line="149" pos:column="121">val<pos:position pos:line="149" pos:column="124"/></name></expr></argument>)<pos:position pos:line="149" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="126"/></return></block></then></if></elseif>
		<elseif pos:line="150" pos:column="17">else <if pos:line="150" pos:column="22">if <condition pos:line="150" pos:column="25">(<expr><call><name pos:line="150" pos:column="26">strcmp<pos:position pos:line="150" pos:column="32"/></name><argument_list pos:line="150" pos:column="32">(<argument><expr><name pos:line="150" pos:column="33">name<pos:position pos:line="150" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="39">"losthdr"<pos:position pos:line="150" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="49"/></argument_list></call> <operator pos:line="150" pos:column="50">==<pos:position pos:line="150" pos:column="52"/></operator> <literal type="number" pos:line="150" pos:column="53">0<pos:position pos:line="150" pos:column="54"/></literal></expr>)<pos:position pos:line="150" pos:column="55"/></condition><then pos:line="150" pos:column="55">
			<block type="pseudo"><return pos:line="151" pos:column="25">return <expr><call><name pos:line="151" pos:column="32">varnish_submit_derive<pos:position pos:line="151" pos:column="53"/></name> <argument_list pos:line="151" pos:column="54">(<argument><expr><name><name pos:line="151" pos:column="55">conf<pos:position pos:line="151" pos:column="59"/></name><operator pos:line="151" pos:column="59">-&gt;<pos:position pos:line="151" pos:column="64"/></operator><name pos:line="151" pos:column="61">instance<pos:position pos:line="151" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="71">"objects"<pos:position pos:line="151" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="82">"total_objects"<pos:position pos:line="151" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="99">"header_overflow"<pos:position pos:line="151" pos:column="116"/></literal></expr></argument>,    <argument><expr><name pos:line="151" pos:column="121">val<pos:position pos:line="151" pos:column="124"/></name></expr></argument>)<pos:position pos:line="151" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="126"/></return></block></then></if></elseif>
		<elseif pos:line="152" pos:column="17">else <if pos:line="152" pos:column="22">if <condition pos:line="152" pos:column="25">(<expr><call><name pos:line="152" pos:column="26">strcmp<pos:position pos:line="152" pos:column="32"/></name><argument_list pos:line="152" pos:column="32">(<argument><expr><name pos:line="152" pos:column="33">name<pos:position pos:line="152" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="39">"n_obj_purged"<pos:position pos:line="152" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="54"/></argument_list></call> <operator pos:line="152" pos:column="55">==<pos:position pos:line="152" pos:column="57"/></operator> <literal type="number" pos:line="152" pos:column="58">0<pos:position pos:line="152" pos:column="59"/></literal></expr>)<pos:position pos:line="152" pos:column="60"/></condition><then pos:line="152" pos:column="60">
			<block type="pseudo"><return pos:line="153" pos:column="25">return <expr><call><name pos:line="153" pos:column="32">varnish_submit_derive<pos:position pos:line="153" pos:column="53"/></name> <argument_list pos:line="153" pos:column="54">(<argument><expr><name><name pos:line="153" pos:column="55">conf<pos:position pos:line="153" pos:column="59"/></name><operator pos:line="153" pos:column="59">-&gt;<pos:position pos:line="153" pos:column="64"/></operator><name pos:line="153" pos:column="61">instance<pos:position pos:line="153" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="71">"objects"<pos:position pos:line="153" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="82">"total_objects"<pos:position pos:line="153" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="99">"purged"<pos:position pos:line="153" pos:column="107"/></literal></expr></argument>,             <argument><expr><name pos:line="153" pos:column="121">val<pos:position pos:line="153" pos:column="124"/></name></expr></argument>)<pos:position pos:line="153" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="126"/></return></block></then></if></elseif>
		<elseif pos:line="154" pos:column="17">else <if pos:line="154" pos:column="22">if <condition pos:line="154" pos:column="25">(<expr><call><name pos:line="154" pos:column="26">strcmp<pos:position pos:line="154" pos:column="32"/></name><argument_list pos:line="154" pos:column="32">(<argument><expr><name pos:line="154" pos:column="33">name<pos:position pos:line="154" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="39">"n_objsendfile"<pos:position pos:line="154" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="55"/></argument_list></call> <operator pos:line="154" pos:column="56">==<pos:position pos:line="154" pos:column="58"/></operator> <literal type="number" pos:line="154" pos:column="59">0<pos:position pos:line="154" pos:column="60"/></literal></expr>)<pos:position pos:line="154" pos:column="61"/></condition><then pos:line="154" pos:column="61">
			<block type="pseudo"><return pos:line="155" pos:column="25">return <expr><call><name pos:line="155" pos:column="32">varnish_submit_derive<pos:position pos:line="155" pos:column="53"/></name> <argument_list pos:line="155" pos:column="54">(<argument><expr><name><name pos:line="155" pos:column="55">conf<pos:position pos:line="155" pos:column="59"/></name><operator pos:line="155" pos:column="59">-&gt;<pos:position pos:line="155" pos:column="64"/></operator><name pos:line="155" pos:column="61">instance<pos:position pos:line="155" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="71">"objects"<pos:position pos:line="155" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="82">"total_objects"<pos:position pos:line="155" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="99">"sent_sendfile"<pos:position pos:line="155" pos:column="114"/></literal></expr></argument>,      <argument><expr><name pos:line="155" pos:column="121">val<pos:position pos:line="155" pos:column="124"/></name></expr></argument>)<pos:position pos:line="155" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="126"/></return></block></then></if></elseif>
		<elseif pos:line="156" pos:column="17">else <if pos:line="156" pos:column="22">if <condition pos:line="156" pos:column="25">(<expr><call><name pos:line="156" pos:column="26">strcmp<pos:position pos:line="156" pos:column="32"/></name><argument_list pos:line="156" pos:column="32">(<argument><expr><name pos:line="156" pos:column="33">name<pos:position pos:line="156" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="39">"n_objwrite"<pos:position pos:line="156" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="52"/></argument_list></call> <operator pos:line="156" pos:column="53">==<pos:position pos:line="156" pos:column="55"/></operator> <literal type="number" pos:line="156" pos:column="56">0<pos:position pos:line="156" pos:column="57"/></literal></expr>)<pos:position pos:line="156" pos:column="58"/></condition><then pos:line="156" pos:column="58">
			<block type="pseudo"><return pos:line="157" pos:column="25">return <expr><call><name pos:line="157" pos:column="32">varnish_submit_derive<pos:position pos:line="157" pos:column="53"/></name> <argument_list pos:line="157" pos:column="54">(<argument><expr><name><name pos:line="157" pos:column="55">conf<pos:position pos:line="157" pos:column="59"/></name><operator pos:line="157" pos:column="59">-&gt;<pos:position pos:line="157" pos:column="64"/></operator><name pos:line="157" pos:column="61">instance<pos:position pos:line="157" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="71">"objects"<pos:position pos:line="157" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="82">"total_objects"<pos:position pos:line="157" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="99">"sent_write"<pos:position pos:line="157" pos:column="111"/></literal></expr></argument>,         <argument><expr><name pos:line="157" pos:column="121">val<pos:position pos:line="157" pos:column="124"/></name></expr></argument>)<pos:position pos:line="157" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="126"/></return></block></then></if></elseif>
		<elseif pos:line="158" pos:column="17">else <if pos:line="158" pos:column="22">if <condition pos:line="158" pos:column="25">(<expr><call><name pos:line="158" pos:column="26">strcmp<pos:position pos:line="158" pos:column="32"/></name><argument_list pos:line="158" pos:column="32">(<argument><expr><name pos:line="158" pos:column="33">name<pos:position pos:line="158" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="39">"n_objoverflow"<pos:position pos:line="158" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="55"/></argument_list></call> <operator pos:line="158" pos:column="56">==<pos:position pos:line="158" pos:column="58"/></operator> <literal type="number" pos:line="158" pos:column="59">0<pos:position pos:line="158" pos:column="60"/></literal></expr>)<pos:position pos:line="158" pos:column="61"/></condition><then pos:line="158" pos:column="61">
			<block type="pseudo"><return pos:line="159" pos:column="25">return <expr><call><name pos:line="159" pos:column="32">varnish_submit_derive<pos:position pos:line="159" pos:column="53"/></name> <argument_list pos:line="159" pos:column="54">(<argument><expr><name><name pos:line="159" pos:column="55">conf<pos:position pos:line="159" pos:column="59"/></name><operator pos:line="159" pos:column="59">-&gt;<pos:position pos:line="159" pos:column="64"/></operator><name pos:line="159" pos:column="61">instance<pos:position pos:line="159" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="71">"objects"<pos:position pos:line="159" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="82">"total_objects"<pos:position pos:line="159" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="99">"workspace_overflow"<pos:position pos:line="159" pos:column="119"/></literal></expr></argument>, <argument><expr><name pos:line="159" pos:column="121">val<pos:position pos:line="159" pos:column="124"/></name></expr></argument>)<pos:position pos:line="159" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="126"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="160" pos:column="10"/></block></then></if>

<cpp:if pos:line="162" pos:column="1">#<cpp:directive pos:line="162" pos:column="2">if<pos:position pos:line="162" pos:column="4"/></cpp:directive> <expr><name pos:line="162" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="162" pos:column="20"/></name></expr></cpp:if>
	<if pos:line="163" pos:column="9">if <condition pos:line="163" pos:column="12">(<expr><name><name pos:line="163" pos:column="13">conf<pos:position pos:line="163" pos:column="17"/></name><operator pos:line="163" pos:column="17">-&gt;<pos:position pos:line="163" pos:column="22"/></operator><name pos:line="163" pos:column="19">collect_ban<pos:position pos:line="163" pos:column="30"/></name></name></expr>)<pos:position pos:line="163" pos:column="31"/></condition><then pos:line="163" pos:column="31">
	<block pos:line="164" pos:column="9">{
		<if pos:line="165" pos:column="17">if <condition pos:line="165" pos:column="20">(<expr><call><name pos:line="165" pos:column="21">strcmp<pos:position pos:line="165" pos:column="27"/></name><argument_list pos:line="165" pos:column="27">(<argument><expr><name pos:line="165" pos:column="28">name<pos:position pos:line="165" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="34">"n_ban"<pos:position pos:line="165" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="165" pos:column="42"/></argument_list></call> <operator pos:line="165" pos:column="43">==<pos:position pos:line="165" pos:column="45"/></operator> <literal type="number" pos:line="165" pos:column="46">0<pos:position pos:line="165" pos:column="47"/></literal></expr>)<pos:position pos:line="165" pos:column="48"/></condition><then pos:line="165" pos:column="48">
			<block type="pseudo"><return pos:line="166" pos:column="25">return <expr><call><name pos:line="166" pos:column="32">varnish_submit_derive<pos:position pos:line="166" pos:column="53"/></name> <argument_list pos:line="166" pos:column="54">(<argument><expr><name><name pos:line="166" pos:column="55">conf<pos:position pos:line="166" pos:column="59"/></name><operator pos:line="166" pos:column="59">-&gt;<pos:position pos:line="166" pos:column="64"/></operator><name pos:line="166" pos:column="61">instance<pos:position pos:line="166" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="71">"ban"<pos:position pos:line="166" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="78">"total_operations"<pos:position pos:line="166" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="98">"total"<pos:position pos:line="166" pos:column="105"/></literal></expr></argument>,          <argument><expr><name pos:line="166" pos:column="116">val<pos:position pos:line="166" pos:column="119"/></name></expr></argument>)<pos:position pos:line="166" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="121"/></return></block></then>
		<elseif pos:line="167" pos:column="17">else <if pos:line="167" pos:column="22">if <condition pos:line="167" pos:column="25">(<expr><call><name pos:line="167" pos:column="26">strcmp<pos:position pos:line="167" pos:column="32"/></name><argument_list pos:line="167" pos:column="32">(<argument><expr><name pos:line="167" pos:column="33">name<pos:position pos:line="167" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="39">"n_ban_add"<pos:position pos:line="167" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="51"/></argument_list></call> <operator pos:line="167" pos:column="52">==<pos:position pos:line="167" pos:column="54"/></operator> <literal type="number" pos:line="167" pos:column="55">0<pos:position pos:line="167" pos:column="56"/></literal></expr>)<pos:position pos:line="167" pos:column="57"/></condition><then pos:line="167" pos:column="57">
			<block type="pseudo"><return pos:line="168" pos:column="25">return <expr><call><name pos:line="168" pos:column="32">varnish_submit_derive<pos:position pos:line="168" pos:column="53"/></name> <argument_list pos:line="168" pos:column="54">(<argument><expr><name><name pos:line="168" pos:column="55">conf<pos:position pos:line="168" pos:column="59"/></name><operator pos:line="168" pos:column="59">-&gt;<pos:position pos:line="168" pos:column="64"/></operator><name pos:line="168" pos:column="61">instance<pos:position pos:line="168" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="71">"ban"<pos:position pos:line="168" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="78">"total_operations"<pos:position pos:line="168" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="98">"added"<pos:position pos:line="168" pos:column="105"/></literal></expr></argument>,          <argument><expr><name pos:line="168" pos:column="116">val<pos:position pos:line="168" pos:column="119"/></name></expr></argument>)<pos:position pos:line="168" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="169" pos:column="17">else <if pos:line="169" pos:column="22">if <condition pos:line="169" pos:column="25">(<expr><call><name pos:line="169" pos:column="26">strcmp<pos:position pos:line="169" pos:column="32"/></name><argument_list pos:line="169" pos:column="32">(<argument><expr><name pos:line="169" pos:column="33">name<pos:position pos:line="169" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="39">"n_ban_retire"<pos:position pos:line="169" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="54"/></argument_list></call> <operator pos:line="169" pos:column="55">==<pos:position pos:line="169" pos:column="57"/></operator> <literal type="number" pos:line="169" pos:column="58">0<pos:position pos:line="169" pos:column="59"/></literal></expr>)<pos:position pos:line="169" pos:column="60"/></condition><then pos:line="169" pos:column="60">
			<block type="pseudo"><return pos:line="170" pos:column="25">return <expr><call><name pos:line="170" pos:column="32">varnish_submit_derive<pos:position pos:line="170" pos:column="53"/></name> <argument_list pos:line="170" pos:column="54">(<argument><expr><name><name pos:line="170" pos:column="55">conf<pos:position pos:line="170" pos:column="59"/></name><operator pos:line="170" pos:column="59">-&gt;<pos:position pos:line="170" pos:column="64"/></operator><name pos:line="170" pos:column="61">instance<pos:position pos:line="170" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="71">"ban"<pos:position pos:line="170" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="78">"total_operations"<pos:position pos:line="170" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="98">"deleted"<pos:position pos:line="170" pos:column="107"/></literal></expr></argument>,        <argument><expr><name pos:line="170" pos:column="116">val<pos:position pos:line="170" pos:column="119"/></name></expr></argument>)<pos:position pos:line="170" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="171" pos:column="17">else <if pos:line="171" pos:column="22">if <condition pos:line="171" pos:column="25">(<expr><call><name pos:line="171" pos:column="26">strcmp<pos:position pos:line="171" pos:column="32"/></name><argument_list pos:line="171" pos:column="32">(<argument><expr><name pos:line="171" pos:column="33">name<pos:position pos:line="171" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="39">"n_ban_obj_test"<pos:position pos:line="171" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="56"/></argument_list></call> <operator pos:line="171" pos:column="57">==<pos:position pos:line="171" pos:column="59"/></operator> <literal type="number" pos:line="171" pos:column="60">0<pos:position pos:line="171" pos:column="61"/></literal></expr>)<pos:position pos:line="171" pos:column="62"/></condition><then pos:line="171" pos:column="62">
			<block type="pseudo"><return pos:line="172" pos:column="25">return <expr><call><name pos:line="172" pos:column="32">varnish_submit_derive<pos:position pos:line="172" pos:column="53"/></name> <argument_list pos:line="172" pos:column="54">(<argument><expr><name><name pos:line="172" pos:column="55">conf<pos:position pos:line="172" pos:column="59"/></name><operator pos:line="172" pos:column="59">-&gt;<pos:position pos:line="172" pos:column="64"/></operator><name pos:line="172" pos:column="61">instance<pos:position pos:line="172" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="71">"ban"<pos:position pos:line="172" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="78">"total_operations"<pos:position pos:line="172" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="98">"objects_tested"<pos:position pos:line="172" pos:column="114"/></literal></expr></argument>, <argument><expr><name pos:line="172" pos:column="116">val<pos:position pos:line="172" pos:column="119"/></name></expr></argument>)<pos:position pos:line="172" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="173" pos:column="17">else <if pos:line="173" pos:column="22">if <condition pos:line="173" pos:column="25">(<expr><call><name pos:line="173" pos:column="26">strcmp<pos:position pos:line="173" pos:column="32"/></name><argument_list pos:line="173" pos:column="32">(<argument><expr><name pos:line="173" pos:column="33">name<pos:position pos:line="173" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="173" pos:column="39">"n_ban_re_test"<pos:position pos:line="173" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="173" pos:column="55"/></argument_list></call> <operator pos:line="173" pos:column="56">==<pos:position pos:line="173" pos:column="58"/></operator> <literal type="number" pos:line="173" pos:column="59">0<pos:position pos:line="173" pos:column="60"/></literal></expr>)<pos:position pos:line="173" pos:column="61"/></condition><then pos:line="173" pos:column="61">
			<block type="pseudo"><return pos:line="174" pos:column="25">return <expr><call><name pos:line="174" pos:column="32">varnish_submit_derive<pos:position pos:line="174" pos:column="53"/></name> <argument_list pos:line="174" pos:column="54">(<argument><expr><name><name pos:line="174" pos:column="55">conf<pos:position pos:line="174" pos:column="59"/></name><operator pos:line="174" pos:column="59">-&gt;<pos:position pos:line="174" pos:column="64"/></operator><name pos:line="174" pos:column="61">instance<pos:position pos:line="174" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="71">"ban"<pos:position pos:line="174" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="78">"total_operations"<pos:position pos:line="174" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="98">"regexps_tested"<pos:position pos:line="174" pos:column="114"/></literal></expr></argument>, <argument><expr><name pos:line="174" pos:column="116">val<pos:position pos:line="174" pos:column="119"/></name></expr></argument>)<pos:position pos:line="174" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="175" pos:column="17">else <if pos:line="175" pos:column="22">if <condition pos:line="175" pos:column="25">(<expr><call><name pos:line="175" pos:column="26">strcmp<pos:position pos:line="175" pos:column="32"/></name><argument_list pos:line="175" pos:column="32">(<argument><expr><name pos:line="175" pos:column="33">name<pos:position pos:line="175" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="39">"n_ban_dups"<pos:position pos:line="175" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="52"/></argument_list></call> <operator pos:line="175" pos:column="53">==<pos:position pos:line="175" pos:column="55"/></operator> <literal type="number" pos:line="175" pos:column="56">0<pos:position pos:line="175" pos:column="57"/></literal></expr>)<pos:position pos:line="175" pos:column="58"/></condition><then pos:line="175" pos:column="58">
			<block type="pseudo"><return pos:line="176" pos:column="25">return <expr><call><name pos:line="176" pos:column="32">varnish_submit_derive<pos:position pos:line="176" pos:column="53"/></name> <argument_list pos:line="176" pos:column="54">(<argument><expr><name><name pos:line="176" pos:column="55">conf<pos:position pos:line="176" pos:column="59"/></name><operator pos:line="176" pos:column="59">-&gt;<pos:position pos:line="176" pos:column="64"/></operator><name pos:line="176" pos:column="61">instance<pos:position pos:line="176" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="71">"ban"<pos:position pos:line="176" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="78">"total_operations"<pos:position pos:line="176" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="98">"duplicate"<pos:position pos:line="176" pos:column="109"/></literal></expr></argument>,      <argument><expr><name pos:line="176" pos:column="116">val<pos:position pos:line="176" pos:column="119"/></name></expr></argument>)<pos:position pos:line="176" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="121"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="177" pos:column="10"/></block></then></if>
<cpp:endif pos:line="178" pos:column="1">#<cpp:directive pos:line="178" pos:column="2">endif<pos:position pos:line="178" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="179" pos:column="1">#<cpp:directive pos:line="179" pos:column="2">if<pos:position pos:line="179" pos:column="4"/></cpp:directive> <expr><name pos:line="179" pos:column="5">HAVE_VARNISH_V4<pos:position pos:line="179" pos:column="20"/></name></expr></cpp:if>
	<if pos:line="180" pos:column="9">if <condition pos:line="180" pos:column="12">(<expr><name><name pos:line="180" pos:column="13">conf<pos:position pos:line="180" pos:column="17"/></name><operator pos:line="180" pos:column="17">-&gt;<pos:position pos:line="180" pos:column="22"/></operator><name pos:line="180" pos:column="19">collect_ban<pos:position pos:line="180" pos:column="30"/></name></name></expr>)<pos:position pos:line="180" pos:column="31"/></condition><then pos:line="180" pos:column="31">
	<block pos:line="181" pos:column="9">{
		<if pos:line="182" pos:column="17">if <condition pos:line="182" pos:column="20">(<expr><call><name pos:line="182" pos:column="21">strcmp<pos:position pos:line="182" pos:column="27"/></name><argument_list pos:line="182" pos:column="27">(<argument><expr><name pos:line="182" pos:column="28">name<pos:position pos:line="182" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="34">"bans"<pos:position pos:line="182" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="41"/></argument_list></call> <operator pos:line="182" pos:column="42">==<pos:position pos:line="182" pos:column="44"/></operator> <literal type="number" pos:line="182" pos:column="45">0<pos:position pos:line="182" pos:column="46"/></literal></expr>)<pos:position pos:line="182" pos:column="47"/></condition><then pos:line="182" pos:column="47">
			<block type="pseudo"><return pos:line="183" pos:column="25">return <expr><call><name pos:line="183" pos:column="32">varnish_submit_derive<pos:position pos:line="183" pos:column="53"/></name> <argument_list pos:line="183" pos:column="54">(<argument><expr><name><name pos:line="183" pos:column="55">conf<pos:position pos:line="183" pos:column="59"/></name><operator pos:line="183" pos:column="59">-&gt;<pos:position pos:line="183" pos:column="64"/></operator><name pos:line="183" pos:column="61">instance<pos:position pos:line="183" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="183" pos:column="71">"ban"<pos:position pos:line="183" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="183" pos:column="78">"total_operations"<pos:position pos:line="183" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="183" pos:column="98">"total"<pos:position pos:line="183" pos:column="105"/></literal></expr></argument>,     <argument><expr><name pos:line="183" pos:column="111">val<pos:position pos:line="183" pos:column="114"/></name></expr></argument>)<pos:position pos:line="183" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="116"/></return></block></then>
		<elseif pos:line="184" pos:column="17">else <if pos:line="184" pos:column="22">if <condition pos:line="184" pos:column="25">(<expr><call><name pos:line="184" pos:column="26">strcmp<pos:position pos:line="184" pos:column="32"/></name><argument_list pos:line="184" pos:column="32">(<argument><expr><name pos:line="184" pos:column="33">name<pos:position pos:line="184" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="39">"bans_added"<pos:position pos:line="184" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="52"/></argument_list></call> <operator pos:line="184" pos:column="53">==<pos:position pos:line="184" pos:column="55"/></operator> <literal type="number" pos:line="184" pos:column="56">0<pos:position pos:line="184" pos:column="57"/></literal></expr>)<pos:position pos:line="184" pos:column="58"/></condition><then pos:line="184" pos:column="58">
			<block type="pseudo"><return pos:line="185" pos:column="25">return <expr><call><name pos:line="185" pos:column="32">varnish_submit_derive<pos:position pos:line="185" pos:column="53"/></name> <argument_list pos:line="185" pos:column="54">(<argument><expr><name><name pos:line="185" pos:column="55">conf<pos:position pos:line="185" pos:column="59"/></name><operator pos:line="185" pos:column="59">-&gt;<pos:position pos:line="185" pos:column="64"/></operator><name pos:line="185" pos:column="61">instance<pos:position pos:line="185" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="185" pos:column="71">"ban"<pos:position pos:line="185" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="185" pos:column="78">"total_operations"<pos:position pos:line="185" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="185" pos:column="98">"added"<pos:position pos:line="185" pos:column="105"/></literal></expr></argument>,     <argument><expr><name pos:line="185" pos:column="111">val<pos:position pos:line="185" pos:column="114"/></name></expr></argument>)<pos:position pos:line="185" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="116"/></return></block></then></if></elseif>
		<elseif pos:line="186" pos:column="17">else <if pos:line="186" pos:column="22">if <condition pos:line="186" pos:column="25">(<expr><call><name pos:line="186" pos:column="26">strcmp<pos:position pos:line="186" pos:column="32"/></name><argument_list pos:line="186" pos:column="32">(<argument><expr><name pos:line="186" pos:column="33">name<pos:position pos:line="186" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="186" pos:column="39">"bans_obj"<pos:position pos:line="186" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="186" pos:column="50"/></argument_list></call> <operator pos:line="186" pos:column="51">==<pos:position pos:line="186" pos:column="53"/></operator> <literal type="number" pos:line="186" pos:column="54">0<pos:position pos:line="186" pos:column="55"/></literal></expr>)<pos:position pos:line="186" pos:column="56"/></condition><then pos:line="186" pos:column="56">
			<block type="pseudo"><return pos:line="187" pos:column="25">return <expr><call><name pos:line="187" pos:column="32">varnish_submit_derive<pos:position pos:line="187" pos:column="53"/></name> <argument_list pos:line="187" pos:column="54">(<argument><expr><name><name pos:line="187" pos:column="55">conf<pos:position pos:line="187" pos:column="59"/></name><operator pos:line="187" pos:column="59">-&gt;<pos:position pos:line="187" pos:column="64"/></operator><name pos:line="187" pos:column="61">instance<pos:position pos:line="187" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="187" pos:column="71">"ban"<pos:position pos:line="187" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="187" pos:column="78">"total_operations"<pos:position pos:line="187" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="187" pos:column="98">"obj"<pos:position pos:line="187" pos:column="103"/></literal></expr></argument>,       <argument><expr><name pos:line="187" pos:column="111">val<pos:position pos:line="187" pos:column="114"/></name></expr></argument>)<pos:position pos:line="187" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="116"/></return></block></then></if></elseif>
		<elseif pos:line="188" pos:column="17">else <if pos:line="188" pos:column="22">if <condition pos:line="188" pos:column="25">(<expr><call><name pos:line="188" pos:column="26">strcmp<pos:position pos:line="188" pos:column="32"/></name><argument_list pos:line="188" pos:column="32">(<argument><expr><name pos:line="188" pos:column="33">name<pos:position pos:line="188" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="188" pos:column="39">"bans_req"<pos:position pos:line="188" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="50"/></argument_list></call> <operator pos:line="188" pos:column="51">==<pos:position pos:line="188" pos:column="53"/></operator> <literal type="number" pos:line="188" pos:column="54">0<pos:position pos:line="188" pos:column="55"/></literal></expr>)<pos:position pos:line="188" pos:column="56"/></condition><then pos:line="188" pos:column="56">
			<block type="pseudo"><return pos:line="189" pos:column="25">return <expr><call><name pos:line="189" pos:column="32">varnish_submit_derive<pos:position pos:line="189" pos:column="53"/></name> <argument_list pos:line="189" pos:column="54">(<argument><expr><name><name pos:line="189" pos:column="55">conf<pos:position pos:line="189" pos:column="59"/></name><operator pos:line="189" pos:column="59">-&gt;<pos:position pos:line="189" pos:column="64"/></operator><name pos:line="189" pos:column="61">instance<pos:position pos:line="189" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="189" pos:column="71">"ban"<pos:position pos:line="189" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="189" pos:column="78">"total_operations"<pos:position pos:line="189" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="189" pos:column="98">"req"<pos:position pos:line="189" pos:column="103"/></literal></expr></argument>,       <argument><expr><name pos:line="189" pos:column="111">val<pos:position pos:line="189" pos:column="114"/></name></expr></argument>)<pos:position pos:line="189" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="116"/></return></block></then></if></elseif>
		<elseif pos:line="190" pos:column="17">else <if pos:line="190" pos:column="22">if <condition pos:line="190" pos:column="25">(<expr><call><name pos:line="190" pos:column="26">strcmp<pos:position pos:line="190" pos:column="32"/></name><argument_list pos:line="190" pos:column="32">(<argument><expr><name pos:line="190" pos:column="33">name<pos:position pos:line="190" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="190" pos:column="39">"bans_completed"<pos:position pos:line="190" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="56"/></argument_list></call> <operator pos:line="190" pos:column="57">==<pos:position pos:line="190" pos:column="59"/></operator> <literal type="number" pos:line="190" pos:column="60">0<pos:position pos:line="190" pos:column="61"/></literal></expr>)<pos:position pos:line="190" pos:column="62"/></condition><then pos:line="190" pos:column="62">
			<block type="pseudo"><return pos:line="191" pos:column="25">return <expr><call><name pos:line="191" pos:column="32">varnish_submit_derive<pos:position pos:line="191" pos:column="53"/></name> <argument_list pos:line="191" pos:column="54">(<argument><expr><name><name pos:line="191" pos:column="55">conf<pos:position pos:line="191" pos:column="59"/></name><operator pos:line="191" pos:column="59">-&gt;<pos:position pos:line="191" pos:column="64"/></operator><name pos:line="191" pos:column="61">instance<pos:position pos:line="191" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="71">"ban"<pos:position pos:line="191" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="78">"total_operations"<pos:position pos:line="191" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="98">"completed"<pos:position pos:line="191" pos:column="109"/></literal></expr></argument>, <argument><expr><name pos:line="191" pos:column="111">val<pos:position pos:line="191" pos:column="114"/></name></expr></argument>)<pos:position pos:line="191" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="116"/></return></block></then></if></elseif>
		<elseif pos:line="192" pos:column="17">else <if pos:line="192" pos:column="22">if <condition pos:line="192" pos:column="25">(<expr><call><name pos:line="192" pos:column="26">strcmp<pos:position pos:line="192" pos:column="32"/></name><argument_list pos:line="192" pos:column="32">(<argument><expr><name pos:line="192" pos:column="33">name<pos:position pos:line="192" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="39">"bans_deleted"<pos:position pos:line="192" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="54"/></argument_list></call> <operator pos:line="192" pos:column="55">==<pos:position pos:line="192" pos:column="57"/></operator> <literal type="number" pos:line="192" pos:column="58">0<pos:position pos:line="192" pos:column="59"/></literal></expr>)<pos:position pos:line="192" pos:column="60"/></condition><then pos:line="192" pos:column="60">
			<block type="pseudo"><return pos:line="193" pos:column="25">return <expr><call><name pos:line="193" pos:column="32">varnish_submit_derive<pos:position pos:line="193" pos:column="53"/></name> <argument_list pos:line="193" pos:column="54">(<argument><expr><name><name pos:line="193" pos:column="55">conf<pos:position pos:line="193" pos:column="59"/></name><operator pos:line="193" pos:column="59">-&gt;<pos:position pos:line="193" pos:column="64"/></operator><name pos:line="193" pos:column="61">instance<pos:position pos:line="193" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="71">"ban"<pos:position pos:line="193" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="78">"total_operations"<pos:position pos:line="193" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="98">"deleted"<pos:position pos:line="193" pos:column="107"/></literal></expr></argument>,   <argument><expr><name pos:line="193" pos:column="111">val<pos:position pos:line="193" pos:column="114"/></name></expr></argument>)<pos:position pos:line="193" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="116"/></return></block></then></if></elseif>
		<elseif pos:line="194" pos:column="17">else <if pos:line="194" pos:column="22">if <condition pos:line="194" pos:column="25">(<expr><call><name pos:line="194" pos:column="26">strcmp<pos:position pos:line="194" pos:column="32"/></name><argument_list pos:line="194" pos:column="32">(<argument><expr><name pos:line="194" pos:column="33">name<pos:position pos:line="194" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="194" pos:column="39">"bans_tested"<pos:position pos:line="194" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="194" pos:column="53"/></argument_list></call> <operator pos:line="194" pos:column="54">==<pos:position pos:line="194" pos:column="56"/></operator> <literal type="number" pos:line="194" pos:column="57">0<pos:position pos:line="194" pos:column="58"/></literal></expr>)<pos:position pos:line="194" pos:column="59"/></condition><then pos:line="194" pos:column="59">
			<block type="pseudo"><return pos:line="195" pos:column="25">return <expr><call><name pos:line="195" pos:column="32">varnish_submit_derive<pos:position pos:line="195" pos:column="53"/></name> <argument_list pos:line="195" pos:column="54">(<argument><expr><name><name pos:line="195" pos:column="55">conf<pos:position pos:line="195" pos:column="59"/></name><operator pos:line="195" pos:column="59">-&gt;<pos:position pos:line="195" pos:column="64"/></operator><name pos:line="195" pos:column="61">instance<pos:position pos:line="195" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="195" pos:column="71">"ban"<pos:position pos:line="195" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="195" pos:column="78">"total_operations"<pos:position pos:line="195" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="195" pos:column="98">"tested"<pos:position pos:line="195" pos:column="106"/></literal></expr></argument>,    <argument><expr><name pos:line="195" pos:column="111">val<pos:position pos:line="195" pos:column="114"/></name></expr></argument>)<pos:position pos:line="195" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="116"/></return></block></then></if></elseif>
		<elseif pos:line="196" pos:column="17">else <if pos:line="196" pos:column="22">if <condition pos:line="196" pos:column="25">(<expr><call><name pos:line="196" pos:column="26">strcmp<pos:position pos:line="196" pos:column="32"/></name><argument_list pos:line="196" pos:column="32">(<argument><expr><name pos:line="196" pos:column="33">name<pos:position pos:line="196" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="39">"bans_dups"<pos:position pos:line="196" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="51"/></argument_list></call> <operator pos:line="196" pos:column="52">==<pos:position pos:line="196" pos:column="54"/></operator> <literal type="number" pos:line="196" pos:column="55">0<pos:position pos:line="196" pos:column="56"/></literal></expr>)<pos:position pos:line="196" pos:column="57"/></condition><then pos:line="196" pos:column="57">
			<block type="pseudo"><return pos:line="197" pos:column="25">return <expr><call><name pos:line="197" pos:column="32">varnish_submit_derive<pos:position pos:line="197" pos:column="53"/></name> <argument_list pos:line="197" pos:column="54">(<argument><expr><name><name pos:line="197" pos:column="55">conf<pos:position pos:line="197" pos:column="59"/></name><operator pos:line="197" pos:column="59">-&gt;<pos:position pos:line="197" pos:column="64"/></operator><name pos:line="197" pos:column="61">instance<pos:position pos:line="197" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="197" pos:column="71">"ban"<pos:position pos:line="197" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="197" pos:column="78">"total_operations"<pos:position pos:line="197" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="197" pos:column="98">"duplicate"<pos:position pos:line="197" pos:column="109"/></literal></expr></argument>, <argument><expr><name pos:line="197" pos:column="111">val<pos:position pos:line="197" pos:column="114"/></name></expr></argument>)<pos:position pos:line="197" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="116"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="198" pos:column="10"/></block></then></if>
<cpp:endif pos:line="199" pos:column="1">#<cpp:directive pos:line="199" pos:column="2">endif<pos:position pos:line="199" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="201" pos:column="9">if <condition pos:line="201" pos:column="12">(<expr><name><name pos:line="201" pos:column="13">conf<pos:position pos:line="201" pos:column="17"/></name><operator pos:line="201" pos:column="17">-&gt;<pos:position pos:line="201" pos:column="22"/></operator><name pos:line="201" pos:column="19">collect_session<pos:position pos:line="201" pos:column="34"/></name></name></expr>)<pos:position pos:line="201" pos:column="35"/></condition><then pos:line="201" pos:column="35">
	<block pos:line="202" pos:column="9">{
		<if pos:line="203" pos:column="17">if <condition pos:line="203" pos:column="20">(<expr><call><name pos:line="203" pos:column="21">strcmp<pos:position pos:line="203" pos:column="27"/></name><argument_list pos:line="203" pos:column="27">(<argument><expr><name pos:line="203" pos:column="28">name<pos:position pos:line="203" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="203" pos:column="34">"sess_closed"<pos:position pos:line="203" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="48"/></argument_list></call> <operator pos:line="203" pos:column="49">==<pos:position pos:line="203" pos:column="51"/></operator> <literal type="number" pos:line="203" pos:column="52">0<pos:position pos:line="203" pos:column="53"/></literal></expr>)<pos:position pos:line="203" pos:column="54"/></condition><then pos:line="203" pos:column="54">
			<block type="pseudo"><return pos:line="204" pos:column="25">return <expr><call><name pos:line="204" pos:column="32">varnish_submit_derive<pos:position pos:line="204" pos:column="53"/></name> <argument_list pos:line="204" pos:column="54">(<argument><expr><name><name pos:line="204" pos:column="55">conf<pos:position pos:line="204" pos:column="59"/></name><operator pos:line="204" pos:column="59">-&gt;<pos:position pos:line="204" pos:column="64"/></operator><name pos:line="204" pos:column="61">instance<pos:position pos:line="204" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="204" pos:column="71">"session"<pos:position pos:line="204" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="204" pos:column="82">"total_operations"<pos:position pos:line="204" pos:column="100"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="204" pos:column="102">"closed"<pos:position pos:line="204" pos:column="110"/></literal></expr></argument>,    <argument><expr><name pos:line="204" pos:column="115">val<pos:position pos:line="204" pos:column="118"/></name></expr></argument>)<pos:position pos:line="204" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="120"/></return></block></then>
		<elseif pos:line="205" pos:column="17">else <if pos:line="205" pos:column="22">if <condition pos:line="205" pos:column="25">(<expr><call><name pos:line="205" pos:column="26">strcmp<pos:position pos:line="205" pos:column="32"/></name><argument_list pos:line="205" pos:column="32">(<argument><expr><name pos:line="205" pos:column="33">name<pos:position pos:line="205" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="205" pos:column="39">"sess_pipeline"<pos:position pos:line="205" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="205" pos:column="55"/></argument_list></call> <operator pos:line="205" pos:column="56">==<pos:position pos:line="205" pos:column="58"/></operator> <literal type="number" pos:line="205" pos:column="59">0<pos:position pos:line="205" pos:column="60"/></literal></expr>)<pos:position pos:line="205" pos:column="61"/></condition><then pos:line="205" pos:column="61">
			<block type="pseudo"><return pos:line="206" pos:column="25">return <expr><call><name pos:line="206" pos:column="32">varnish_submit_derive<pos:position pos:line="206" pos:column="53"/></name> <argument_list pos:line="206" pos:column="54">(<argument><expr><name><name pos:line="206" pos:column="55">conf<pos:position pos:line="206" pos:column="59"/></name><operator pos:line="206" pos:column="59">-&gt;<pos:position pos:line="206" pos:column="64"/></operator><name pos:line="206" pos:column="61">instance<pos:position pos:line="206" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="206" pos:column="71">"session"<pos:position pos:line="206" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="206" pos:column="82">"total_operations"<pos:position pos:line="206" pos:column="100"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="206" pos:column="102">"pipeline"<pos:position pos:line="206" pos:column="112"/></literal></expr></argument>,  <argument><expr><name pos:line="206" pos:column="115">val<pos:position pos:line="206" pos:column="118"/></name></expr></argument>)<pos:position pos:line="206" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="120"/></return></block></then></if></elseif>
		<elseif pos:line="207" pos:column="17">else <if pos:line="207" pos:column="22">if <condition pos:line="207" pos:column="25">(<expr><call><name pos:line="207" pos:column="26">strcmp<pos:position pos:line="207" pos:column="32"/></name><argument_list pos:line="207" pos:column="32">(<argument><expr><name pos:line="207" pos:column="33">name<pos:position pos:line="207" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="207" pos:column="39">"sess_readahead"<pos:position pos:line="207" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="207" pos:column="56"/></argument_list></call> <operator pos:line="207" pos:column="57">==<pos:position pos:line="207" pos:column="59"/></operator> <literal type="number" pos:line="207" pos:column="60">0<pos:position pos:line="207" pos:column="61"/></literal></expr>)<pos:position pos:line="207" pos:column="62"/></condition><then pos:line="207" pos:column="62">
			<block type="pseudo"><return pos:line="208" pos:column="25">return <expr><call><name pos:line="208" pos:column="32">varnish_submit_derive<pos:position pos:line="208" pos:column="53"/></name> <argument_list pos:line="208" pos:column="54">(<argument><expr><name><name pos:line="208" pos:column="55">conf<pos:position pos:line="208" pos:column="59"/></name><operator pos:line="208" pos:column="59">-&gt;<pos:position pos:line="208" pos:column="64"/></operator><name pos:line="208" pos:column="61">instance<pos:position pos:line="208" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="71">"session"<pos:position pos:line="208" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="82">"total_operations"<pos:position pos:line="208" pos:column="100"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="102">"readahead"<pos:position pos:line="208" pos:column="113"/></literal></expr></argument>, <argument><expr><name pos:line="208" pos:column="115">val<pos:position pos:line="208" pos:column="118"/></name></expr></argument>)<pos:position pos:line="208" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="120"/></return></block></then></if></elseif>
		<elseif pos:line="209" pos:column="17">else <if pos:line="209" pos:column="22">if <condition pos:line="209" pos:column="25">(<expr><call><name pos:line="209" pos:column="26">strcmp<pos:position pos:line="209" pos:column="32"/></name><argument_list pos:line="209" pos:column="32">(<argument><expr><name pos:line="209" pos:column="33">name<pos:position pos:line="209" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="209" pos:column="39">"sess_conn"<pos:position pos:line="209" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="209" pos:column="51"/></argument_list></call> <operator pos:line="209" pos:column="52">==<pos:position pos:line="209" pos:column="54"/></operator> <literal type="number" pos:line="209" pos:column="55">0<pos:position pos:line="209" pos:column="56"/></literal></expr>)<pos:position pos:line="209" pos:column="57"/></condition><then pos:line="209" pos:column="57">
			<block type="pseudo"><return pos:line="210" pos:column="25">return <expr><call><name pos:line="210" pos:column="32">varnish_submit_derive<pos:position pos:line="210" pos:column="53"/></name> <argument_list pos:line="210" pos:column="54">(<argument><expr><name><name pos:line="210" pos:column="55">conf<pos:position pos:line="210" pos:column="59"/></name><operator pos:line="210" pos:column="59">-&gt;<pos:position pos:line="210" pos:column="64"/></operator><name pos:line="210" pos:column="61">instance<pos:position pos:line="210" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="210" pos:column="71">"session"<pos:position pos:line="210" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="210" pos:column="82">"total_operations"<pos:position pos:line="210" pos:column="100"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="210" pos:column="102">"accepted"<pos:position pos:line="210" pos:column="112"/></literal></expr></argument>,  <argument><expr><name pos:line="210" pos:column="115">val<pos:position pos:line="210" pos:column="118"/></name></expr></argument>)<pos:position pos:line="210" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="120"/></return></block></then></if></elseif>
		<elseif pos:line="211" pos:column="17">else <if pos:line="211" pos:column="22">if <condition pos:line="211" pos:column="25">(<expr><call><name pos:line="211" pos:column="26">strcmp<pos:position pos:line="211" pos:column="32"/></name><argument_list pos:line="211" pos:column="32">(<argument><expr><name pos:line="211" pos:column="33">name<pos:position pos:line="211" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="211" pos:column="39">"sess_drop"<pos:position pos:line="211" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="211" pos:column="51"/></argument_list></call> <operator pos:line="211" pos:column="52">==<pos:position pos:line="211" pos:column="54"/></operator> <literal type="number" pos:line="211" pos:column="55">0<pos:position pos:line="211" pos:column="56"/></literal></expr>)<pos:position pos:line="211" pos:column="57"/></condition><then pos:line="211" pos:column="57">
			<block type="pseudo"><return pos:line="212" pos:column="25">return <expr><call><name pos:line="212" pos:column="32">varnish_submit_derive<pos:position pos:line="212" pos:column="53"/></name> <argument_list pos:line="212" pos:column="54">(<argument><expr><name><name pos:line="212" pos:column="55">conf<pos:position pos:line="212" pos:column="59"/></name><operator pos:line="212" pos:column="59">-&gt;<pos:position pos:line="212" pos:column="64"/></operator><name pos:line="212" pos:column="61">instance<pos:position pos:line="212" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="212" pos:column="71">"session"<pos:position pos:line="212" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="212" pos:column="82">"total_operations"<pos:position pos:line="212" pos:column="100"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="212" pos:column="102">"dropped"<pos:position pos:line="212" pos:column="111"/></literal></expr></argument>,   <argument><expr><name pos:line="212" pos:column="115">val<pos:position pos:line="212" pos:column="118"/></name></expr></argument>)<pos:position pos:line="212" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="120"/></return></block></then></if></elseif>
		<elseif pos:line="213" pos:column="17">else <if pos:line="213" pos:column="22">if <condition pos:line="213" pos:column="25">(<expr><call><name pos:line="213" pos:column="26">strcmp<pos:position pos:line="213" pos:column="32"/></name><argument_list pos:line="213" pos:column="32">(<argument><expr><name pos:line="213" pos:column="33">name<pos:position pos:line="213" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="213" pos:column="39">"sess_fail"<pos:position pos:line="213" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="51"/></argument_list></call> <operator pos:line="213" pos:column="52">==<pos:position pos:line="213" pos:column="54"/></operator> <literal type="number" pos:line="213" pos:column="55">0<pos:position pos:line="213" pos:column="56"/></literal></expr>)<pos:position pos:line="213" pos:column="57"/></condition><then pos:line="213" pos:column="57">
			<block type="pseudo"><return pos:line="214" pos:column="25">return <expr><call><name pos:line="214" pos:column="32">varnish_submit_derive<pos:position pos:line="214" pos:column="53"/></name> <argument_list pos:line="214" pos:column="54">(<argument><expr><name><name pos:line="214" pos:column="55">conf<pos:position pos:line="214" pos:column="59"/></name><operator pos:line="214" pos:column="59">-&gt;<pos:position pos:line="214" pos:column="64"/></operator><name pos:line="214" pos:column="61">instance<pos:position pos:line="214" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="214" pos:column="71">"session"<pos:position pos:line="214" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="214" pos:column="82">"total_operations"<pos:position pos:line="214" pos:column="100"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="214" pos:column="102">"failed"<pos:position pos:line="214" pos:column="110"/></literal></expr></argument>,    <argument><expr><name pos:line="214" pos:column="115">val<pos:position pos:line="214" pos:column="118"/></name></expr></argument>)<pos:position pos:line="214" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="120"/></return></block></then></if></elseif>
		<elseif pos:line="215" pos:column="17">else <if pos:line="215" pos:column="22">if <condition pos:line="215" pos:column="25">(<expr><call><name pos:line="215" pos:column="26">strcmp<pos:position pos:line="215" pos:column="32"/></name><argument_list pos:line="215" pos:column="32">(<argument><expr><name pos:line="215" pos:column="33">name<pos:position pos:line="215" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="215" pos:column="39">"sess_pipe_overflow"<pos:position pos:line="215" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="60"/></argument_list></call> <operator pos:line="215" pos:column="61">==<pos:position pos:line="215" pos:column="63"/></operator> <literal type="number" pos:line="215" pos:column="64">0<pos:position pos:line="215" pos:column="65"/></literal></expr>)<pos:position pos:line="215" pos:column="66"/></condition><then pos:line="215" pos:column="66">
			<block type="pseudo"><return pos:line="216" pos:column="25">return <expr><call><name pos:line="216" pos:column="32">varnish_submit_derive<pos:position pos:line="216" pos:column="53"/></name> <argument_list pos:line="216" pos:column="54">(<argument><expr><name><name pos:line="216" pos:column="55">conf<pos:position pos:line="216" pos:column="59"/></name><operator pos:line="216" pos:column="59">-&gt;<pos:position pos:line="216" pos:column="64"/></operator><name pos:line="216" pos:column="61">instance<pos:position pos:line="216" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="216" pos:column="71">"session"<pos:position pos:line="216" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="216" pos:column="82">"total_operations"<pos:position pos:line="216" pos:column="100"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="216" pos:column="102">"overflow"<pos:position pos:line="216" pos:column="112"/></literal></expr></argument>,  <argument><expr><name pos:line="216" pos:column="115">val<pos:position pos:line="216" pos:column="118"/></name></expr></argument>)<pos:position pos:line="216" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="120"/></return></block></then></if></elseif>
		<elseif pos:line="217" pos:column="17">else <if pos:line="217" pos:column="22">if <condition pos:line="217" pos:column="25">(<expr><call><name pos:line="217" pos:column="26">strcmp<pos:position pos:line="217" pos:column="32"/></name><argument_list pos:line="217" pos:column="32">(<argument><expr><name pos:line="217" pos:column="33">name<pos:position pos:line="217" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="217" pos:column="39">"sess_queued"<pos:position pos:line="217" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="53"/></argument_list></call> <operator pos:line="217" pos:column="54">==<pos:position pos:line="217" pos:column="56"/></operator> <literal type="number" pos:line="217" pos:column="57">0<pos:position pos:line="217" pos:column="58"/></literal></expr>)<pos:position pos:line="217" pos:column="59"/></condition><then pos:line="217" pos:column="59">
			<block type="pseudo"><return pos:line="218" pos:column="25">return <expr><call><name pos:line="218" pos:column="32">varnish_submit_derive<pos:position pos:line="218" pos:column="53"/></name> <argument_list pos:line="218" pos:column="54">(<argument><expr><name><name pos:line="218" pos:column="55">conf<pos:position pos:line="218" pos:column="59"/></name><operator pos:line="218" pos:column="59">-&gt;<pos:position pos:line="218" pos:column="64"/></operator><name pos:line="218" pos:column="61">instance<pos:position pos:line="218" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="218" pos:column="71">"session"<pos:position pos:line="218" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="218" pos:column="82">"total_operations"<pos:position pos:line="218" pos:column="100"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="218" pos:column="102">"queued"<pos:position pos:line="218" pos:column="110"/></literal></expr></argument>,    <argument><expr><name pos:line="218" pos:column="115">val<pos:position pos:line="218" pos:column="118"/></name></expr></argument>)<pos:position pos:line="218" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="120"/></return></block></then></if></elseif>
		<elseif pos:line="219" pos:column="17">else <if pos:line="219" pos:column="22">if <condition pos:line="219" pos:column="25">(<expr><call><name pos:line="219" pos:column="26">strcmp<pos:position pos:line="219" pos:column="32"/></name><argument_list pos:line="219" pos:column="32">(<argument><expr><name pos:line="219" pos:column="33">name<pos:position pos:line="219" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="219" pos:column="39">"sess_linger"<pos:position pos:line="219" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="219" pos:column="53"/></argument_list></call> <operator pos:line="219" pos:column="54">==<pos:position pos:line="219" pos:column="56"/></operator> <literal type="number" pos:line="219" pos:column="57">0<pos:position pos:line="219" pos:column="58"/></literal></expr>)<pos:position pos:line="219" pos:column="59"/></condition><then pos:line="219" pos:column="59">
			<block type="pseudo"><return pos:line="220" pos:column="25">return <expr><call><name pos:line="220" pos:column="32">varnish_submit_derive<pos:position pos:line="220" pos:column="53"/></name> <argument_list pos:line="220" pos:column="54">(<argument><expr><name><name pos:line="220" pos:column="55">conf<pos:position pos:line="220" pos:column="59"/></name><operator pos:line="220" pos:column="59">-&gt;<pos:position pos:line="220" pos:column="64"/></operator><name pos:line="220" pos:column="61">instance<pos:position pos:line="220" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="220" pos:column="71">"session"<pos:position pos:line="220" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="220" pos:column="82">"total_operations"<pos:position pos:line="220" pos:column="100"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="220" pos:column="102">"linger"<pos:position pos:line="220" pos:column="110"/></literal></expr></argument>,    <argument><expr><name pos:line="220" pos:column="115">val<pos:position pos:line="220" pos:column="118"/></name></expr></argument>)<pos:position pos:line="220" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="120"/></return></block></then></if></elseif>
		<elseif pos:line="221" pos:column="17">else <if pos:line="221" pos:column="22">if <condition pos:line="221" pos:column="25">(<expr><call><name pos:line="221" pos:column="26">strcmp<pos:position pos:line="221" pos:column="32"/></name><argument_list pos:line="221" pos:column="32">(<argument><expr><name pos:line="221" pos:column="33">name<pos:position pos:line="221" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="221" pos:column="39">"sess_herd"<pos:position pos:line="221" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="221" pos:column="51"/></argument_list></call> <operator pos:line="221" pos:column="52">==<pos:position pos:line="221" pos:column="54"/></operator> <literal type="number" pos:line="221" pos:column="55">0<pos:position pos:line="221" pos:column="56"/></literal></expr>)<pos:position pos:line="221" pos:column="57"/></condition><then pos:line="221" pos:column="57">
			<block type="pseudo"><return pos:line="222" pos:column="25">return <expr><call><name pos:line="222" pos:column="32">varnish_submit_derive<pos:position pos:line="222" pos:column="53"/></name> <argument_list pos:line="222" pos:column="54">(<argument><expr><name><name pos:line="222" pos:column="55">conf<pos:position pos:line="222" pos:column="59"/></name><operator pos:line="222" pos:column="59">-&gt;<pos:position pos:line="222" pos:column="64"/></operator><name pos:line="222" pos:column="61">instance<pos:position pos:line="222" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="71">"session"<pos:position pos:line="222" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="82">"total_operations"<pos:position pos:line="222" pos:column="100"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="102">"herd"<pos:position pos:line="222" pos:column="108"/></literal></expr></argument>,      <argument><expr><name pos:line="222" pos:column="115">val<pos:position pos:line="222" pos:column="118"/></name></expr></argument>)<pos:position pos:line="222" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="120"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="223" pos:column="10"/></block></then></if>

	<if pos:line="225" pos:column="9">if <condition pos:line="225" pos:column="12">(<expr><name><name pos:line="225" pos:column="13">conf<pos:position pos:line="225" pos:column="17"/></name><operator pos:line="225" pos:column="17">-&gt;<pos:position pos:line="225" pos:column="22"/></operator><name pos:line="225" pos:column="19">collect_shm<pos:position pos:line="225" pos:column="30"/></name></name></expr>)<pos:position pos:line="225" pos:column="31"/></condition><then pos:line="225" pos:column="31">
	<block pos:line="226" pos:column="9">{
		<if pos:line="227" pos:column="17">if <condition pos:line="227" pos:column="20">(<expr><call><name pos:line="227" pos:column="21">strcmp<pos:position pos:line="227" pos:column="27"/></name><argument_list pos:line="227" pos:column="27">(<argument><expr><name pos:line="227" pos:column="28">name<pos:position pos:line="227" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="227" pos:column="34">"shm_records"<pos:position pos:line="227" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="227" pos:column="48"/></argument_list></call> <operator pos:line="227" pos:column="49">==<pos:position pos:line="227" pos:column="51"/></operator> <literal type="number" pos:line="227" pos:column="52">0<pos:position pos:line="227" pos:column="53"/></literal></expr>)<pos:position pos:line="227" pos:column="54"/></condition><then pos:line="227" pos:column="54">
			<block type="pseudo"><return pos:line="228" pos:column="25">return <expr><call><name pos:line="228" pos:column="32">varnish_submit_derive<pos:position pos:line="228" pos:column="53"/></name> <argument_list pos:line="228" pos:column="54">(<argument><expr><name><name pos:line="228" pos:column="55">conf<pos:position pos:line="228" pos:column="59"/></name><operator pos:line="228" pos:column="59">-&gt;<pos:position pos:line="228" pos:column="64"/></operator><name pos:line="228" pos:column="61">instance<pos:position pos:line="228" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="228" pos:column="71">"shm"<pos:position pos:line="228" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="228" pos:column="78">"total_operations"<pos:position pos:line="228" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="228" pos:column="98">"records"<pos:position pos:line="228" pos:column="107"/></literal></expr></argument>,    <argument><expr><name pos:line="228" pos:column="112">val<pos:position pos:line="228" pos:column="115"/></name></expr></argument>)<pos:position pos:line="228" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="117"/></return></block></then>
		<elseif pos:line="229" pos:column="17">else <if pos:line="229" pos:column="22">if <condition pos:line="229" pos:column="25">(<expr><call><name pos:line="229" pos:column="26">strcmp<pos:position pos:line="229" pos:column="32"/></name><argument_list pos:line="229" pos:column="32">(<argument><expr><name pos:line="229" pos:column="33">name<pos:position pos:line="229" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="229" pos:column="39">"shm_writes"<pos:position pos:line="229" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="229" pos:column="52"/></argument_list></call> <operator pos:line="229" pos:column="53">==<pos:position pos:line="229" pos:column="55"/></operator> <literal type="number" pos:line="229" pos:column="56">0<pos:position pos:line="229" pos:column="57"/></literal></expr>)<pos:position pos:line="229" pos:column="58"/></condition><then pos:line="229" pos:column="58">
			<block type="pseudo"><return pos:line="230" pos:column="25">return <expr><call><name pos:line="230" pos:column="32">varnish_submit_derive<pos:position pos:line="230" pos:column="53"/></name> <argument_list pos:line="230" pos:column="54">(<argument><expr><name><name pos:line="230" pos:column="55">conf<pos:position pos:line="230" pos:column="59"/></name><operator pos:line="230" pos:column="59">-&gt;<pos:position pos:line="230" pos:column="64"/></operator><name pos:line="230" pos:column="61">instance<pos:position pos:line="230" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="71">"shm"<pos:position pos:line="230" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="78">"total_operations"<pos:position pos:line="230" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="98">"writes"<pos:position pos:line="230" pos:column="106"/></literal></expr></argument>,     <argument><expr><name pos:line="230" pos:column="112">val<pos:position pos:line="230" pos:column="115"/></name></expr></argument>)<pos:position pos:line="230" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="231" pos:column="17">else <if pos:line="231" pos:column="22">if <condition pos:line="231" pos:column="25">(<expr><call><name pos:line="231" pos:column="26">strcmp<pos:position pos:line="231" pos:column="32"/></name><argument_list pos:line="231" pos:column="32">(<argument><expr><name pos:line="231" pos:column="33">name<pos:position pos:line="231" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="231" pos:column="39">"shm_flushes"<pos:position pos:line="231" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="231" pos:column="53"/></argument_list></call> <operator pos:line="231" pos:column="54">==<pos:position pos:line="231" pos:column="56"/></operator> <literal type="number" pos:line="231" pos:column="57">0<pos:position pos:line="231" pos:column="58"/></literal></expr>)<pos:position pos:line="231" pos:column="59"/></condition><then pos:line="231" pos:column="59">
			<block type="pseudo"><return pos:line="232" pos:column="25">return <expr><call><name pos:line="232" pos:column="32">varnish_submit_derive<pos:position pos:line="232" pos:column="53"/></name> <argument_list pos:line="232" pos:column="54">(<argument><expr><name><name pos:line="232" pos:column="55">conf<pos:position pos:line="232" pos:column="59"/></name><operator pos:line="232" pos:column="59">-&gt;<pos:position pos:line="232" pos:column="64"/></operator><name pos:line="232" pos:column="61">instance<pos:position pos:line="232" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="232" pos:column="71">"shm"<pos:position pos:line="232" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="232" pos:column="78">"total_operations"<pos:position pos:line="232" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="232" pos:column="98">"flushes"<pos:position pos:line="232" pos:column="107"/></literal></expr></argument>,    <argument><expr><name pos:line="232" pos:column="112">val<pos:position pos:line="232" pos:column="115"/></name></expr></argument>)<pos:position pos:line="232" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="233" pos:column="17">else <if pos:line="233" pos:column="22">if <condition pos:line="233" pos:column="25">(<expr><call><name pos:line="233" pos:column="26">strcmp<pos:position pos:line="233" pos:column="32"/></name><argument_list pos:line="233" pos:column="32">(<argument><expr><name pos:line="233" pos:column="33">name<pos:position pos:line="233" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="233" pos:column="39">"shm_cont"<pos:position pos:line="233" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="233" pos:column="50"/></argument_list></call> <operator pos:line="233" pos:column="51">==<pos:position pos:line="233" pos:column="53"/></operator> <literal type="number" pos:line="233" pos:column="54">0<pos:position pos:line="233" pos:column="55"/></literal></expr>)<pos:position pos:line="233" pos:column="56"/></condition><then pos:line="233" pos:column="56">
			<block type="pseudo"><return pos:line="234" pos:column="25">return <expr><call><name pos:line="234" pos:column="32">varnish_submit_derive<pos:position pos:line="234" pos:column="53"/></name> <argument_list pos:line="234" pos:column="54">(<argument><expr><name><name pos:line="234" pos:column="55">conf<pos:position pos:line="234" pos:column="59"/></name><operator pos:line="234" pos:column="59">-&gt;<pos:position pos:line="234" pos:column="64"/></operator><name pos:line="234" pos:column="61">instance<pos:position pos:line="234" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="234" pos:column="71">"shm"<pos:position pos:line="234" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="234" pos:column="78">"total_operations"<pos:position pos:line="234" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="234" pos:column="98">"contention"<pos:position pos:line="234" pos:column="110"/></literal></expr></argument>, <argument><expr><name pos:line="234" pos:column="112">val<pos:position pos:line="234" pos:column="115"/></name></expr></argument>)<pos:position pos:line="234" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="235" pos:column="17">else <if pos:line="235" pos:column="22">if <condition pos:line="235" pos:column="25">(<expr><call><name pos:line="235" pos:column="26">strcmp<pos:position pos:line="235" pos:column="32"/></name><argument_list pos:line="235" pos:column="32">(<argument><expr><name pos:line="235" pos:column="33">name<pos:position pos:line="235" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="235" pos:column="39">"shm_cycles"<pos:position pos:line="235" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="235" pos:column="52"/></argument_list></call> <operator pos:line="235" pos:column="53">==<pos:position pos:line="235" pos:column="55"/></operator> <literal type="number" pos:line="235" pos:column="56">0<pos:position pos:line="235" pos:column="57"/></literal></expr>)<pos:position pos:line="235" pos:column="58"/></condition><then pos:line="235" pos:column="58">
			<block type="pseudo"><return pos:line="236" pos:column="25">return <expr><call><name pos:line="236" pos:column="32">varnish_submit_derive<pos:position pos:line="236" pos:column="53"/></name> <argument_list pos:line="236" pos:column="54">(<argument><expr><name><name pos:line="236" pos:column="55">conf<pos:position pos:line="236" pos:column="59"/></name><operator pos:line="236" pos:column="59">-&gt;<pos:position pos:line="236" pos:column="64"/></operator><name pos:line="236" pos:column="61">instance<pos:position pos:line="236" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="236" pos:column="71">"shm"<pos:position pos:line="236" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="236" pos:column="78">"total_operations"<pos:position pos:line="236" pos:column="96"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="236" pos:column="98">"cycles"<pos:position pos:line="236" pos:column="106"/></literal></expr></argument>,     <argument><expr><name pos:line="236" pos:column="112">val<pos:position pos:line="236" pos:column="115"/></name></expr></argument>)<pos:position pos:line="236" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="117"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="237" pos:column="10"/></block></then></if>

	<if pos:line="239" pos:column="9">if <condition pos:line="239" pos:column="12">(<expr><name><name pos:line="239" pos:column="13">conf<pos:position pos:line="239" pos:column="17"/></name><operator pos:line="239" pos:column="17">-&gt;<pos:position pos:line="239" pos:column="22"/></operator><name pos:line="239" pos:column="19">collect_sms<pos:position pos:line="239" pos:column="30"/></name></name></expr>)<pos:position pos:line="239" pos:column="31"/></condition><then pos:line="239" pos:column="31">
	<block pos:line="240" pos:column="9">{
		<if pos:line="241" pos:column="17">if <condition pos:line="241" pos:column="20">(<expr><call><name pos:line="241" pos:column="21">strcmp<pos:position pos:line="241" pos:column="27"/></name><argument_list pos:line="241" pos:column="27">(<argument><expr><name pos:line="241" pos:column="28">name<pos:position pos:line="241" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="241" pos:column="34">"sms_nreq"<pos:position pos:line="241" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="241" pos:column="45"/></argument_list></call> <operator pos:line="241" pos:column="46">==<pos:position pos:line="241" pos:column="48"/></operator> <literal type="number" pos:line="241" pos:column="49">0<pos:position pos:line="241" pos:column="50"/></literal></expr>)<pos:position pos:line="241" pos:column="51"/></condition><then pos:line="241" pos:column="51">
			<block type="pseudo"><return pos:line="242" pos:column="25">return <expr><call><name pos:line="242" pos:column="32">varnish_submit_derive<pos:position pos:line="242" pos:column="53"/></name> <argument_list pos:line="242" pos:column="54">(<argument><expr><name><name pos:line="242" pos:column="55">conf<pos:position pos:line="242" pos:column="59"/></name><operator pos:line="242" pos:column="59">-&gt;<pos:position pos:line="242" pos:column="64"/></operator><name pos:line="242" pos:column="61">instance<pos:position pos:line="242" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="242" pos:column="71">"sms"<pos:position pos:line="242" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="242" pos:column="78">"total_requests"<pos:position pos:line="242" pos:column="94"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="242" pos:column="96">"allocator"<pos:position pos:line="242" pos:column="107"/></literal></expr></argument>, <argument><expr><name pos:line="242" pos:column="109">val<pos:position pos:line="242" pos:column="112"/></name></expr></argument>)<pos:position pos:line="242" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="114"/></return></block></then>
		<elseif pos:line="243" pos:column="17">else <if pos:line="243" pos:column="22">if <condition pos:line="243" pos:column="25">(<expr><call><name pos:line="243" pos:column="26">strcmp<pos:position pos:line="243" pos:column="32"/></name><argument_list pos:line="243" pos:column="32">(<argument><expr><name pos:line="243" pos:column="33">name<pos:position pos:line="243" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="243" pos:column="39">"sms_nobj"<pos:position pos:line="243" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="243" pos:column="50"/></argument_list></call> <operator pos:line="243" pos:column="51">==<pos:position pos:line="243" pos:column="53"/></operator> <literal type="number" pos:line="243" pos:column="54">0<pos:position pos:line="243" pos:column="55"/></literal></expr>)<pos:position pos:line="243" pos:column="56"/></condition><then pos:line="243" pos:column="56">
			<block type="pseudo"><return pos:line="244" pos:column="25">return <expr><call><name pos:line="244" pos:column="32">varnish_submit_gauge<pos:position pos:line="244" pos:column="52"/></name> <argument_list pos:line="244" pos:column="53">(<argument><expr><name><name pos:line="244" pos:column="54">conf<pos:position pos:line="244" pos:column="58"/></name><operator pos:line="244" pos:column="58">-&gt;<pos:position pos:line="244" pos:column="63"/></operator><name pos:line="244" pos:column="60">instance<pos:position pos:line="244" pos:column="68"/></name></name></expr></argument>,  <argument><expr><literal type="string" pos:line="244" pos:column="71">"sms"<pos:position pos:line="244" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="244" pos:column="78">"requests"<pos:position pos:line="244" pos:column="88"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="244" pos:column="90">"outstanding"<pos:position pos:line="244" pos:column="103"/></literal></expr></argument>,     <argument><expr><name pos:line="244" pos:column="109">val<pos:position pos:line="244" pos:column="112"/></name></expr></argument>)<pos:position pos:line="244" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="114"/></return></block></then></if></elseif>
		<elseif pos:line="245" pos:column="17">else <if pos:line="245" pos:column="22">if <condition pos:line="245" pos:column="25">(<expr><call><name pos:line="245" pos:column="26">strcmp<pos:position pos:line="245" pos:column="32"/></name><argument_list pos:line="245" pos:column="32">(<argument><expr><name pos:line="245" pos:column="33">name<pos:position pos:line="245" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="245" pos:column="39">"sms_nbytes"<pos:position pos:line="245" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="245" pos:column="52"/></argument_list></call> <operator pos:line="245" pos:column="53">==<pos:position pos:line="245" pos:column="55"/></operator> <literal type="number" pos:line="245" pos:column="56">0<pos:position pos:line="245" pos:column="57"/></literal></expr>)<pos:position pos:line="245" pos:column="58"/></condition><then pos:line="245" pos:column="58">
			<block type="pseudo"><return pos:line="246" pos:column="25">return <expr><call><name pos:line="246" pos:column="32">varnish_submit_gauge<pos:position pos:line="246" pos:column="52"/></name> <argument_list pos:line="246" pos:column="53">(<argument><expr><name><name pos:line="246" pos:column="54">conf<pos:position pos:line="246" pos:column="58"/></name><operator pos:line="246" pos:column="58">-&gt;<pos:position pos:line="246" pos:column="63"/></operator><name pos:line="246" pos:column="60">instance<pos:position pos:line="246" pos:column="68"/></name></name></expr></argument>,  <argument><expr><literal type="string" pos:line="246" pos:column="71">"sms"<pos:position pos:line="246" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="246" pos:column="78">"bytes"<pos:position pos:line="246" pos:column="85"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="246" pos:column="87">"outstanding"<pos:position pos:line="246" pos:column="100"/></literal></expr></argument>,        <argument><expr><name pos:line="246" pos:column="109">val<pos:position pos:line="246" pos:column="112"/></name></expr></argument>)<pos:position pos:line="246" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="114"/></return></block></then></if></elseif>
		<elseif pos:line="247" pos:column="17">else <if pos:line="247" pos:column="22">if <condition pos:line="247" pos:column="25">(<expr><call><name pos:line="247" pos:column="26">strcmp<pos:position pos:line="247" pos:column="32"/></name><argument_list pos:line="247" pos:column="32">(<argument><expr><name pos:line="247" pos:column="33">name<pos:position pos:line="247" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="247" pos:column="39">"sms_balloc"<pos:position pos:line="247" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="247" pos:column="52"/></argument_list></call> <operator pos:line="247" pos:column="53">==<pos:position pos:line="247" pos:column="55"/></operator> <literal type="number" pos:line="247" pos:column="56">0<pos:position pos:line="247" pos:column="57"/></literal></expr>)<pos:position pos:line="247" pos:column="58"/></condition><then pos:line="247" pos:column="58">
			<block type="pseudo"><return pos:line="248" pos:column="25">return <expr><call><name pos:line="248" pos:column="32">varnish_submit_derive<pos:position pos:line="248" pos:column="53"/></name> <argument_list pos:line="248" pos:column="54">(<argument><expr><name><name pos:line="248" pos:column="55">conf<pos:position pos:line="248" pos:column="59"/></name><operator pos:line="248" pos:column="59">-&gt;<pos:position pos:line="248" pos:column="64"/></operator><name pos:line="248" pos:column="61">instance<pos:position pos:line="248" pos:column="69"/></name></name></expr></argument>,  <argument><expr><literal type="string" pos:line="248" pos:column="72">"sms"<pos:position pos:line="248" pos:column="77"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="248" pos:column="79">"total_bytes"<pos:position pos:line="248" pos:column="92"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="248" pos:column="94">"allocated"<pos:position pos:line="248" pos:column="105"/></literal></expr></argument>,   <argument><expr><name pos:line="248" pos:column="109">val<pos:position pos:line="248" pos:column="112"/></name></expr></argument>)<pos:position pos:line="248" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="114"/></return></block></then></if></elseif>
		<elseif pos:line="249" pos:column="17">else <if pos:line="249" pos:column="22">if <condition pos:line="249" pos:column="25">(<expr><call><name pos:line="249" pos:column="26">strcmp<pos:position pos:line="249" pos:column="32"/></name><argument_list pos:line="249" pos:column="32">(<argument><expr><name pos:line="249" pos:column="33">name<pos:position pos:line="249" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="249" pos:column="39">"sms_bfree"<pos:position pos:line="249" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="249" pos:column="51"/></argument_list></call> <operator pos:line="249" pos:column="52">==<pos:position pos:line="249" pos:column="54"/></operator> <literal type="number" pos:line="249" pos:column="55">0<pos:position pos:line="249" pos:column="56"/></literal></expr>)<pos:position pos:line="249" pos:column="57"/></condition><then pos:line="249" pos:column="57">
			<block type="pseudo"><return pos:line="250" pos:column="25">return <expr><call><name pos:line="250" pos:column="32">varnish_submit_derive<pos:position pos:line="250" pos:column="53"/></name> <argument_list pos:line="250" pos:column="54">(<argument><expr><name><name pos:line="250" pos:column="55">conf<pos:position pos:line="250" pos:column="59"/></name><operator pos:line="250" pos:column="59">-&gt;<pos:position pos:line="250" pos:column="64"/></operator><name pos:line="250" pos:column="61">instance<pos:position pos:line="250" pos:column="69"/></name></name></expr></argument>,  <argument><expr><literal type="string" pos:line="250" pos:column="72">"sms"<pos:position pos:line="250" pos:column="77"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="250" pos:column="79">"total_bytes"<pos:position pos:line="250" pos:column="92"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="250" pos:column="94">"free"<pos:position pos:line="250" pos:column="100"/></literal></expr></argument>,        <argument><expr><name pos:line="250" pos:column="109">val<pos:position pos:line="250" pos:column="112"/></name></expr></argument>)<pos:position pos:line="250" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="114"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="251" pos:column="10"/></block></then></if>

	<if pos:line="253" pos:column="9">if <condition pos:line="253" pos:column="12">(<expr><name><name pos:line="253" pos:column="13">conf<pos:position pos:line="253" pos:column="17"/></name><operator pos:line="253" pos:column="17">-&gt;<pos:position pos:line="253" pos:column="22"/></operator><name pos:line="253" pos:column="19">collect_struct<pos:position pos:line="253" pos:column="33"/></name></name></expr>)<pos:position pos:line="253" pos:column="34"/></condition><then pos:line="253" pos:column="34">
	<block pos:line="254" pos:column="9">{
		<if pos:line="255" pos:column="17">if <condition pos:line="255" pos:column="20">(<expr><call><name pos:line="255" pos:column="21">strcmp<pos:position pos:line="255" pos:column="27"/></name><argument_list pos:line="255" pos:column="27">(<argument><expr><name pos:line="255" pos:column="28">name<pos:position pos:line="255" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="34">"n_sess_mem"<pos:position pos:line="255" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="255" pos:column="47"/></argument_list></call> <operator pos:line="255" pos:column="48">==<pos:position pos:line="255" pos:column="50"/></operator> <literal type="number" pos:line="255" pos:column="51">0<pos:position pos:line="255" pos:column="52"/></literal></expr>)<pos:position pos:line="255" pos:column="53"/></condition><then pos:line="255" pos:column="53">
			<block type="pseudo"><return pos:line="256" pos:column="25">return <expr><call><name pos:line="256" pos:column="32">varnish_submit_gauge<pos:position pos:line="256" pos:column="52"/></name> <argument_list pos:line="256" pos:column="53">(<argument><expr><name><name pos:line="256" pos:column="54">conf<pos:position pos:line="256" pos:column="58"/></name><operator pos:line="256" pos:column="58">-&gt;<pos:position pos:line="256" pos:column="63"/></operator><name pos:line="256" pos:column="60">instance<pos:position pos:line="256" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="256" pos:column="70">"struct"<pos:position pos:line="256" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="256" pos:column="80">"current_sessions"<pos:position pos:line="256" pos:column="98"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="256" pos:column="100">"sess_mem"<pos:position pos:line="256" pos:column="110"/></literal></expr></argument>,  <argument><expr><name pos:line="256" pos:column="113">val<pos:position pos:line="256" pos:column="116"/></name></expr></argument>)<pos:position pos:line="256" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="118"/></return></block></then>
		<elseif pos:line="257" pos:column="17">else <if pos:line="257" pos:column="22">if <condition pos:line="257" pos:column="25">(<expr><call><name pos:line="257" pos:column="26">strcmp<pos:position pos:line="257" pos:column="32"/></name><argument_list pos:line="257" pos:column="32">(<argument><expr><name pos:line="257" pos:column="33">name<pos:position pos:line="257" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="257" pos:column="39">"n_sess"<pos:position pos:line="257" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="48"/></argument_list></call> <operator pos:line="257" pos:column="49">==<pos:position pos:line="257" pos:column="51"/></operator> <literal type="number" pos:line="257" pos:column="52">0<pos:position pos:line="257" pos:column="53"/></literal></expr>)<pos:position pos:line="257" pos:column="54"/></condition><then pos:line="257" pos:column="54">
			<block type="pseudo"><return pos:line="258" pos:column="25">return <expr><call><name pos:line="258" pos:column="32">varnish_submit_gauge<pos:position pos:line="258" pos:column="52"/></name> <argument_list pos:line="258" pos:column="53">(<argument><expr><name><name pos:line="258" pos:column="54">conf<pos:position pos:line="258" pos:column="58"/></name><operator pos:line="258" pos:column="58">-&gt;<pos:position pos:line="258" pos:column="63"/></operator><name pos:line="258" pos:column="60">instance<pos:position pos:line="258" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="258" pos:column="70">"struct"<pos:position pos:line="258" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="258" pos:column="80">"current_sessions"<pos:position pos:line="258" pos:column="98"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="258" pos:column="100">"sess"<pos:position pos:line="258" pos:column="106"/></literal></expr></argument>,      <argument><expr><name pos:line="258" pos:column="113">val<pos:position pos:line="258" pos:column="116"/></name></expr></argument>)<pos:position pos:line="258" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="118"/></return></block></then></if></elseif>
		<elseif pos:line="259" pos:column="17">else <if pos:line="259" pos:column="22">if <condition pos:line="259" pos:column="25">(<expr><call><name pos:line="259" pos:column="26">strcmp<pos:position pos:line="259" pos:column="32"/></name><argument_list pos:line="259" pos:column="32">(<argument><expr><name pos:line="259" pos:column="33">name<pos:position pos:line="259" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="259" pos:column="39">"n_object"<pos:position pos:line="259" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="259" pos:column="50"/></argument_list></call> <operator pos:line="259" pos:column="51">==<pos:position pos:line="259" pos:column="53"/></operator> <literal type="number" pos:line="259" pos:column="54">0<pos:position pos:line="259" pos:column="55"/></literal></expr>)<pos:position pos:line="259" pos:column="56"/></condition><then pos:line="259" pos:column="56">
			<block type="pseudo"><return pos:line="260" pos:column="25">return <expr><call><name pos:line="260" pos:column="32">varnish_submit_gauge<pos:position pos:line="260" pos:column="52"/></name> <argument_list pos:line="260" pos:column="53">(<argument><expr><name><name pos:line="260" pos:column="54">conf<pos:position pos:line="260" pos:column="58"/></name><operator pos:line="260" pos:column="58">-&gt;<pos:position pos:line="260" pos:column="63"/></operator><name pos:line="260" pos:column="60">instance<pos:position pos:line="260" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="260" pos:column="70">"struct"<pos:position pos:line="260" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="260" pos:column="80">"objects"<pos:position pos:line="260" pos:column="89"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="260" pos:column="91">"object"<pos:position pos:line="260" pos:column="99"/></literal></expr></argument>,             <argument><expr><name pos:line="260" pos:column="113">val<pos:position pos:line="260" pos:column="116"/></name></expr></argument>)<pos:position pos:line="260" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="118"/></return></block></then></if></elseif>
		<elseif pos:line="261" pos:column="17">else <if pos:line="261" pos:column="22">if <condition pos:line="261" pos:column="25">(<expr><call><name pos:line="261" pos:column="26">strcmp<pos:position pos:line="261" pos:column="32"/></name><argument_list pos:line="261" pos:column="32">(<argument><expr><name pos:line="261" pos:column="33">name<pos:position pos:line="261" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="261" pos:column="39">"n_vampireobject"<pos:position pos:line="261" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="261" pos:column="57"/></argument_list></call> <operator pos:line="261" pos:column="58">==<pos:position pos:line="261" pos:column="60"/></operator> <literal type="number" pos:line="261" pos:column="61">0<pos:position pos:line="261" pos:column="62"/></literal></expr>)<pos:position pos:line="261" pos:column="63"/></condition><then pos:line="261" pos:column="63">
			<block type="pseudo"><return pos:line="262" pos:column="25">return <expr><call><name pos:line="262" pos:column="32">varnish_submit_gauge<pos:position pos:line="262" pos:column="52"/></name> <argument_list pos:line="262" pos:column="53">(<argument><expr><name><name pos:line="262" pos:column="54">conf<pos:position pos:line="262" pos:column="58"/></name><operator pos:line="262" pos:column="58">-&gt;<pos:position pos:line="262" pos:column="63"/></operator><name pos:line="262" pos:column="60">instance<pos:position pos:line="262" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="262" pos:column="70">"struct"<pos:position pos:line="262" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="262" pos:column="80">"objects"<pos:position pos:line="262" pos:column="89"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="262" pos:column="91">"vampireobject"<pos:position pos:line="262" pos:column="106"/></literal></expr></argument>,      <argument><expr><name pos:line="262" pos:column="113">val<pos:position pos:line="262" pos:column="116"/></name></expr></argument>)<pos:position pos:line="262" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="118"/></return></block></then></if></elseif>
		<elseif pos:line="263" pos:column="17">else <if pos:line="263" pos:column="22">if <condition pos:line="263" pos:column="25">(<expr><call><name pos:line="263" pos:column="26">strcmp<pos:position pos:line="263" pos:column="32"/></name><argument_list pos:line="263" pos:column="32">(<argument><expr><name pos:line="263" pos:column="33">name<pos:position pos:line="263" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="263" pos:column="39">"n_objectcore"<pos:position pos:line="263" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="263" pos:column="54"/></argument_list></call> <operator pos:line="263" pos:column="55">==<pos:position pos:line="263" pos:column="57"/></operator> <literal type="number" pos:line="263" pos:column="58">0<pos:position pos:line="263" pos:column="59"/></literal></expr>)<pos:position pos:line="263" pos:column="60"/></condition><then pos:line="263" pos:column="60">
			<block type="pseudo"><return pos:line="264" pos:column="25">return <expr><call><name pos:line="264" pos:column="32">varnish_submit_gauge<pos:position pos:line="264" pos:column="52"/></name> <argument_list pos:line="264" pos:column="53">(<argument><expr><name><name pos:line="264" pos:column="54">conf<pos:position pos:line="264" pos:column="58"/></name><operator pos:line="264" pos:column="58">-&gt;<pos:position pos:line="264" pos:column="63"/></operator><name pos:line="264" pos:column="60">instance<pos:position pos:line="264" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="264" pos:column="70">"struct"<pos:position pos:line="264" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="264" pos:column="80">"objects"<pos:position pos:line="264" pos:column="89"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="264" pos:column="91">"objectcore"<pos:position pos:line="264" pos:column="103"/></literal></expr></argument>,         <argument><expr><name pos:line="264" pos:column="113">val<pos:position pos:line="264" pos:column="116"/></name></expr></argument>)<pos:position pos:line="264" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="118"/></return></block></then></if></elseif>
		<elseif pos:line="265" pos:column="17">else <if pos:line="265" pos:column="22">if <condition pos:line="265" pos:column="25">(<expr><call><name pos:line="265" pos:column="26">strcmp<pos:position pos:line="265" pos:column="32"/></name><argument_list pos:line="265" pos:column="32">(<argument><expr><name pos:line="265" pos:column="33">name<pos:position pos:line="265" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="265" pos:column="39">"n_waitinglist"<pos:position pos:line="265" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="265" pos:column="55"/></argument_list></call> <operator pos:line="265" pos:column="56">==<pos:position pos:line="265" pos:column="58"/></operator> <literal type="number" pos:line="265" pos:column="59">0<pos:position pos:line="265" pos:column="60"/></literal></expr>)<pos:position pos:line="265" pos:column="61"/></condition><then pos:line="265" pos:column="61">
			<block type="pseudo"><return pos:line="266" pos:column="25">return <expr><call><name pos:line="266" pos:column="32">varnish_submit_gauge<pos:position pos:line="266" pos:column="52"/></name> <argument_list pos:line="266" pos:column="53">(<argument><expr><name><name pos:line="266" pos:column="54">conf<pos:position pos:line="266" pos:column="58"/></name><operator pos:line="266" pos:column="58">-&gt;<pos:position pos:line="266" pos:column="63"/></operator><name pos:line="266" pos:column="60">instance<pos:position pos:line="266" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="266" pos:column="70">"struct"<pos:position pos:line="266" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="266" pos:column="80">"objects"<pos:position pos:line="266" pos:column="89"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="266" pos:column="91">"waitinglist"<pos:position pos:line="266" pos:column="104"/></literal></expr></argument>,        <argument><expr><name pos:line="266" pos:column="113">val<pos:position pos:line="266" pos:column="116"/></name></expr></argument>)<pos:position pos:line="266" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="118"/></return></block></then></if></elseif>
		<elseif pos:line="267" pos:column="17">else <if pos:line="267" pos:column="22">if <condition pos:line="267" pos:column="25">(<expr><call><name pos:line="267" pos:column="26">strcmp<pos:position pos:line="267" pos:column="32"/></name><argument_list pos:line="267" pos:column="32">(<argument><expr><name pos:line="267" pos:column="33">name<pos:position pos:line="267" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="267" pos:column="39">"n_objecthead"<pos:position pos:line="267" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="267" pos:column="54"/></argument_list></call> <operator pos:line="267" pos:column="55">==<pos:position pos:line="267" pos:column="57"/></operator> <literal type="number" pos:line="267" pos:column="58">0<pos:position pos:line="267" pos:column="59"/></literal></expr>)<pos:position pos:line="267" pos:column="60"/></condition><then pos:line="267" pos:column="60">
			<block type="pseudo"><return pos:line="268" pos:column="25">return <expr><call><name pos:line="268" pos:column="32">varnish_submit_gauge<pos:position pos:line="268" pos:column="52"/></name> <argument_list pos:line="268" pos:column="53">(<argument><expr><name><name pos:line="268" pos:column="54">conf<pos:position pos:line="268" pos:column="58"/></name><operator pos:line="268" pos:column="58">-&gt;<pos:position pos:line="268" pos:column="63"/></operator><name pos:line="268" pos:column="60">instance<pos:position pos:line="268" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="268" pos:column="70">"struct"<pos:position pos:line="268" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="268" pos:column="80">"objects"<pos:position pos:line="268" pos:column="89"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="268" pos:column="91">"objecthead"<pos:position pos:line="268" pos:column="103"/></literal></expr></argument>,         <argument><expr><name pos:line="268" pos:column="113">val<pos:position pos:line="268" pos:column="116"/></name></expr></argument>)<pos:position pos:line="268" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="118"/></return></block></then></if></elseif>
		<elseif pos:line="269" pos:column="17">else <if pos:line="269" pos:column="22">if <condition pos:line="269" pos:column="25">(<expr><call><name pos:line="269" pos:column="26">strcmp<pos:position pos:line="269" pos:column="32"/></name><argument_list pos:line="269" pos:column="32">(<argument><expr><name pos:line="269" pos:column="33">name<pos:position pos:line="269" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="269" pos:column="39">"n_smf"<pos:position pos:line="269" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="269" pos:column="47"/></argument_list></call> <operator pos:line="269" pos:column="48">==<pos:position pos:line="269" pos:column="50"/></operator> <literal type="number" pos:line="269" pos:column="51">0<pos:position pos:line="269" pos:column="52"/></literal></expr>)<pos:position pos:line="269" pos:column="53"/></condition><then pos:line="269" pos:column="53">
			<block type="pseudo"><return pos:line="270" pos:column="25">return <expr><call><name pos:line="270" pos:column="32">varnish_submit_gauge<pos:position pos:line="270" pos:column="52"/></name> <argument_list pos:line="270" pos:column="53">(<argument><expr><name><name pos:line="270" pos:column="54">conf<pos:position pos:line="270" pos:column="58"/></name><operator pos:line="270" pos:column="58">-&gt;<pos:position pos:line="270" pos:column="63"/></operator><name pos:line="270" pos:column="60">instance<pos:position pos:line="270" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="270" pos:column="70">"struct"<pos:position pos:line="270" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="270" pos:column="80">"objects"<pos:position pos:line="270" pos:column="89"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="270" pos:column="91">"smf"<pos:position pos:line="270" pos:column="96"/></literal></expr></argument>,                <argument><expr><name pos:line="270" pos:column="113">val<pos:position pos:line="270" pos:column="116"/></name></expr></argument>)<pos:position pos:line="270" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="118"/></return></block></then></if></elseif>
		<elseif pos:line="271" pos:column="17">else <if pos:line="271" pos:column="22">if <condition pos:line="271" pos:column="25">(<expr><call><name pos:line="271" pos:column="26">strcmp<pos:position pos:line="271" pos:column="32"/></name><argument_list pos:line="271" pos:column="32">(<argument><expr><name pos:line="271" pos:column="33">name<pos:position pos:line="271" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="271" pos:column="39">"n_smf_frag"<pos:position pos:line="271" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="271" pos:column="52"/></argument_list></call> <operator pos:line="271" pos:column="53">==<pos:position pos:line="271" pos:column="55"/></operator> <literal type="number" pos:line="271" pos:column="56">0<pos:position pos:line="271" pos:column="57"/></literal></expr>)<pos:position pos:line="271" pos:column="58"/></condition><then pos:line="271" pos:column="58">
			<block type="pseudo"><return pos:line="272" pos:column="25">return <expr><call><name pos:line="272" pos:column="32">varnish_submit_gauge<pos:position pos:line="272" pos:column="52"/></name> <argument_list pos:line="272" pos:column="53">(<argument><expr><name><name pos:line="272" pos:column="54">conf<pos:position pos:line="272" pos:column="58"/></name><operator pos:line="272" pos:column="58">-&gt;<pos:position pos:line="272" pos:column="63"/></operator><name pos:line="272" pos:column="60">instance<pos:position pos:line="272" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="272" pos:column="70">"struct"<pos:position pos:line="272" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="272" pos:column="80">"objects"<pos:position pos:line="272" pos:column="89"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="272" pos:column="91">"smf_frag"<pos:position pos:line="272" pos:column="101"/></literal></expr></argument>,           <argument><expr><name pos:line="272" pos:column="113">val<pos:position pos:line="272" pos:column="116"/></name></expr></argument>)<pos:position pos:line="272" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="118"/></return></block></then></if></elseif>
		<elseif pos:line="273" pos:column="17">else <if pos:line="273" pos:column="22">if <condition pos:line="273" pos:column="25">(<expr><call><name pos:line="273" pos:column="26">strcmp<pos:position pos:line="273" pos:column="32"/></name><argument_list pos:line="273" pos:column="32">(<argument><expr><name pos:line="273" pos:column="33">name<pos:position pos:line="273" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="273" pos:column="39">"n_smf_large"<pos:position pos:line="273" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="273" pos:column="53"/></argument_list></call> <operator pos:line="273" pos:column="54">==<pos:position pos:line="273" pos:column="56"/></operator> <literal type="number" pos:line="273" pos:column="57">0<pos:position pos:line="273" pos:column="58"/></literal></expr>)<pos:position pos:line="273" pos:column="59"/></condition><then pos:line="273" pos:column="59">
			<block type="pseudo"><return pos:line="274" pos:column="25">return <expr><call><name pos:line="274" pos:column="32">varnish_submit_gauge<pos:position pos:line="274" pos:column="52"/></name> <argument_list pos:line="274" pos:column="53">(<argument><expr><name><name pos:line="274" pos:column="54">conf<pos:position pos:line="274" pos:column="58"/></name><operator pos:line="274" pos:column="58">-&gt;<pos:position pos:line="274" pos:column="63"/></operator><name pos:line="274" pos:column="60">instance<pos:position pos:line="274" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="274" pos:column="70">"struct"<pos:position pos:line="274" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="274" pos:column="80">"objects"<pos:position pos:line="274" pos:column="89"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="274" pos:column="91">"smf_large"<pos:position pos:line="274" pos:column="102"/></literal></expr></argument>,          <argument><expr><name pos:line="274" pos:column="113">val<pos:position pos:line="274" pos:column="116"/></name></expr></argument>)<pos:position pos:line="274" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="118"/></return></block></then></if></elseif>
		<elseif pos:line="275" pos:column="17">else <if pos:line="275" pos:column="22">if <condition pos:line="275" pos:column="25">(<expr><call><name pos:line="275" pos:column="26">strcmp<pos:position pos:line="275" pos:column="32"/></name><argument_list pos:line="275" pos:column="32">(<argument><expr><name pos:line="275" pos:column="33">name<pos:position pos:line="275" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="275" pos:column="39">"n_vbe_conn"<pos:position pos:line="275" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="275" pos:column="52"/></argument_list></call> <operator pos:line="275" pos:column="53">==<pos:position pos:line="275" pos:column="55"/></operator> <literal type="number" pos:line="275" pos:column="56">0<pos:position pos:line="275" pos:column="57"/></literal></expr>)<pos:position pos:line="275" pos:column="58"/></condition><then pos:line="275" pos:column="58">
			<block type="pseudo"><return pos:line="276" pos:column="25">return <expr><call><name pos:line="276" pos:column="32">varnish_submit_gauge<pos:position pos:line="276" pos:column="52"/></name> <argument_list pos:line="276" pos:column="53">(<argument><expr><name><name pos:line="276" pos:column="54">conf<pos:position pos:line="276" pos:column="58"/></name><operator pos:line="276" pos:column="58">-&gt;<pos:position pos:line="276" pos:column="63"/></operator><name pos:line="276" pos:column="60">instance<pos:position pos:line="276" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="276" pos:column="70">"struct"<pos:position pos:line="276" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="276" pos:column="80">"objects"<pos:position pos:line="276" pos:column="89"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="276" pos:column="91">"vbe_conn"<pos:position pos:line="276" pos:column="101"/></literal></expr></argument>,           <argument><expr><name pos:line="276" pos:column="113">val<pos:position pos:line="276" pos:column="116"/></name></expr></argument>)<pos:position pos:line="276" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="118"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="277" pos:column="10"/></block></then></if>

	<if pos:line="279" pos:column="9">if <condition pos:line="279" pos:column="12">(<expr><name><name pos:line="279" pos:column="13">conf<pos:position pos:line="279" pos:column="17"/></name><operator pos:line="279" pos:column="17">-&gt;<pos:position pos:line="279" pos:column="22"/></operator><name pos:line="279" pos:column="19">collect_totals<pos:position pos:line="279" pos:column="33"/></name></name></expr>)<pos:position pos:line="279" pos:column="34"/></condition><then pos:line="279" pos:column="34">
	<block pos:line="280" pos:column="9">{
		<if pos:line="281" pos:column="17">if <condition pos:line="281" pos:column="20">(<expr><call><name pos:line="281" pos:column="21">strcmp<pos:position pos:line="281" pos:column="27"/></name><argument_list pos:line="281" pos:column="27">(<argument><expr><name pos:line="281" pos:column="28">name<pos:position pos:line="281" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="281" pos:column="34">"s_sess"<pos:position pos:line="281" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="281" pos:column="43"/></argument_list></call> <operator pos:line="281" pos:column="44">==<pos:position pos:line="281" pos:column="46"/></operator> <literal type="number" pos:line="281" pos:column="47">0<pos:position pos:line="281" pos:column="48"/></literal></expr>)<pos:position pos:line="281" pos:column="49"/></condition><then pos:line="281" pos:column="49">
			<block type="pseudo"><return pos:line="282" pos:column="25">return <expr><call><name pos:line="282" pos:column="32">varnish_submit_derive<pos:position pos:line="282" pos:column="53"/></name> <argument_list pos:line="282" pos:column="54">(<argument><expr><name><name pos:line="282" pos:column="55">conf<pos:position pos:line="282" pos:column="59"/></name><operator pos:line="282" pos:column="59">-&gt;<pos:position pos:line="282" pos:column="64"/></operator><name pos:line="282" pos:column="61">instance<pos:position pos:line="282" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="282" pos:column="71">"totals"<pos:position pos:line="282" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="282" pos:column="81">"total_sessions"<pos:position pos:line="282" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="282" pos:column="99">"sessions"<pos:position pos:line="282" pos:column="109"/></literal></expr></argument>,  <argument><expr><name pos:line="282" pos:column="112">val<pos:position pos:line="282" pos:column="115"/></name></expr></argument>)<pos:position pos:line="282" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="117"/></return></block></then>
		<elseif pos:line="283" pos:column="17">else <if pos:line="283" pos:column="22">if <condition pos:line="283" pos:column="25">(<expr><call><name pos:line="283" pos:column="26">strcmp<pos:position pos:line="283" pos:column="32"/></name><argument_list pos:line="283" pos:column="32">(<argument><expr><name pos:line="283" pos:column="33">name<pos:position pos:line="283" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="283" pos:column="39">"s_req"<pos:position pos:line="283" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="283" pos:column="47"/></argument_list></call> <operator pos:line="283" pos:column="48">==<pos:position pos:line="283" pos:column="50"/></operator> <literal type="number" pos:line="283" pos:column="51">0<pos:position pos:line="283" pos:column="52"/></literal></expr>)<pos:position pos:line="283" pos:column="53"/></condition><then pos:line="283" pos:column="53">
			<block type="pseudo"><return pos:line="284" pos:column="25">return <expr><call><name pos:line="284" pos:column="32">varnish_submit_derive<pos:position pos:line="284" pos:column="53"/></name> <argument_list pos:line="284" pos:column="54">(<argument><expr><name><name pos:line="284" pos:column="55">conf<pos:position pos:line="284" pos:column="59"/></name><operator pos:line="284" pos:column="59">-&gt;<pos:position pos:line="284" pos:column="64"/></operator><name pos:line="284" pos:column="61">instance<pos:position pos:line="284" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="284" pos:column="71">"totals"<pos:position pos:line="284" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="284" pos:column="81">"total_requests"<pos:position pos:line="284" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="284" pos:column="99">"requests"<pos:position pos:line="284" pos:column="109"/></literal></expr></argument>,  <argument><expr><name pos:line="284" pos:column="112">val<pos:position pos:line="284" pos:column="115"/></name></expr></argument>)<pos:position pos:line="284" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="285" pos:column="17">else <if pos:line="285" pos:column="22">if <condition pos:line="285" pos:column="25">(<expr><call><name pos:line="285" pos:column="26">strcmp<pos:position pos:line="285" pos:column="32"/></name><argument_list pos:line="285" pos:column="32">(<argument><expr><name pos:line="285" pos:column="33">name<pos:position pos:line="285" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="285" pos:column="39">"s_pipe"<pos:position pos:line="285" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="285" pos:column="48"/></argument_list></call> <operator pos:line="285" pos:column="49">==<pos:position pos:line="285" pos:column="51"/></operator> <literal type="number" pos:line="285" pos:column="52">0<pos:position pos:line="285" pos:column="53"/></literal></expr>)<pos:position pos:line="285" pos:column="54"/></condition><then pos:line="285" pos:column="54">
			<block type="pseudo"><return pos:line="286" pos:column="25">return <expr><call><name pos:line="286" pos:column="32">varnish_submit_derive<pos:position pos:line="286" pos:column="53"/></name> <argument_list pos:line="286" pos:column="54">(<argument><expr><name><name pos:line="286" pos:column="55">conf<pos:position pos:line="286" pos:column="59"/></name><operator pos:line="286" pos:column="59">-&gt;<pos:position pos:line="286" pos:column="64"/></operator><name pos:line="286" pos:column="61">instance<pos:position pos:line="286" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="286" pos:column="71">"totals"<pos:position pos:line="286" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="286" pos:column="81">"total_operations"<pos:position pos:line="286" pos:column="99"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="286" pos:column="101">"pipe"<pos:position pos:line="286" pos:column="107"/></literal></expr></argument>,    <argument><expr><name pos:line="286" pos:column="112">val<pos:position pos:line="286" pos:column="115"/></name></expr></argument>)<pos:position pos:line="286" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="287" pos:column="17">else <if pos:line="287" pos:column="22">if <condition pos:line="287" pos:column="25">(<expr><call><name pos:line="287" pos:column="26">strcmp<pos:position pos:line="287" pos:column="32"/></name><argument_list pos:line="287" pos:column="32">(<argument><expr><name pos:line="287" pos:column="33">name<pos:position pos:line="287" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="287" pos:column="39">"s_pass"<pos:position pos:line="287" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="287" pos:column="48"/></argument_list></call> <operator pos:line="287" pos:column="49">==<pos:position pos:line="287" pos:column="51"/></operator> <literal type="number" pos:line="287" pos:column="52">0<pos:position pos:line="287" pos:column="53"/></literal></expr>)<pos:position pos:line="287" pos:column="54"/></condition><then pos:line="287" pos:column="54">
			<block type="pseudo"><return pos:line="288" pos:column="25">return <expr><call><name pos:line="288" pos:column="32">varnish_submit_derive<pos:position pos:line="288" pos:column="53"/></name> <argument_list pos:line="288" pos:column="54">(<argument><expr><name><name pos:line="288" pos:column="55">conf<pos:position pos:line="288" pos:column="59"/></name><operator pos:line="288" pos:column="59">-&gt;<pos:position pos:line="288" pos:column="64"/></operator><name pos:line="288" pos:column="61">instance<pos:position pos:line="288" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="288" pos:column="71">"totals"<pos:position pos:line="288" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="288" pos:column="81">"total_operations"<pos:position pos:line="288" pos:column="99"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="288" pos:column="101">"pass"<pos:position pos:line="288" pos:column="107"/></literal></expr></argument>,    <argument><expr><name pos:line="288" pos:column="112">val<pos:position pos:line="288" pos:column="115"/></name></expr></argument>)<pos:position pos:line="288" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="289" pos:column="17">else <if pos:line="289" pos:column="22">if <condition pos:line="289" pos:column="25">(<expr><call><name pos:line="289" pos:column="26">strcmp<pos:position pos:line="289" pos:column="32"/></name><argument_list pos:line="289" pos:column="32">(<argument><expr><name pos:line="289" pos:column="33">name<pos:position pos:line="289" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="289" pos:column="39">"s_fetch"<pos:position pos:line="289" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="289" pos:column="49"/></argument_list></call> <operator pos:line="289" pos:column="50">==<pos:position pos:line="289" pos:column="52"/></operator> <literal type="number" pos:line="289" pos:column="53">0<pos:position pos:line="289" pos:column="54"/></literal></expr>)<pos:position pos:line="289" pos:column="55"/></condition><then pos:line="289" pos:column="55">
			<block type="pseudo"><return pos:line="290" pos:column="25">return <expr><call><name pos:line="290" pos:column="32">varnish_submit_derive<pos:position pos:line="290" pos:column="53"/></name> <argument_list pos:line="290" pos:column="54">(<argument><expr><name><name pos:line="290" pos:column="55">conf<pos:position pos:line="290" pos:column="59"/></name><operator pos:line="290" pos:column="59">-&gt;<pos:position pos:line="290" pos:column="64"/></operator><name pos:line="290" pos:column="61">instance<pos:position pos:line="290" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="290" pos:column="71">"totals"<pos:position pos:line="290" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="290" pos:column="81">"total_operations"<pos:position pos:line="290" pos:column="99"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="290" pos:column="101">"fetches"<pos:position pos:line="290" pos:column="110"/></literal></expr></argument>, <argument><expr><name pos:line="290" pos:column="112">val<pos:position pos:line="290" pos:column="115"/></name></expr></argument>)<pos:position pos:line="290" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="291" pos:column="17">else <if pos:line="291" pos:column="22">if <condition pos:line="291" pos:column="25">(<expr><call><name pos:line="291" pos:column="26">strcmp<pos:position pos:line="291" pos:column="32"/></name><argument_list pos:line="291" pos:column="32">(<argument><expr><name pos:line="291" pos:column="33">name<pos:position pos:line="291" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="291" pos:column="39">"s_synth"<pos:position pos:line="291" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="291" pos:column="49"/></argument_list></call> <operator pos:line="291" pos:column="50">==<pos:position pos:line="291" pos:column="52"/></operator> <literal type="number" pos:line="291" pos:column="53">0<pos:position pos:line="291" pos:column="54"/></literal></expr>)<pos:position pos:line="291" pos:column="55"/></condition><then pos:line="291" pos:column="55">
			<block type="pseudo"><return pos:line="292" pos:column="25">return <expr><call><name pos:line="292" pos:column="32">varnish_submit_derive<pos:position pos:line="292" pos:column="53"/></name> <argument_list pos:line="292" pos:column="54">(<argument><expr><name><name pos:line="292" pos:column="55">conf<pos:position pos:line="292" pos:column="59"/></name><operator pos:line="292" pos:column="59">-&gt;<pos:position pos:line="292" pos:column="64"/></operator><name pos:line="292" pos:column="61">instance<pos:position pos:line="292" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="71">"totals"<pos:position pos:line="292" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="81">"total_bytes"<pos:position pos:line="292" pos:column="94"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="96">"synth"<pos:position pos:line="292" pos:column="103"/></literal></expr></argument>,        <argument><expr><name pos:line="292" pos:column="112">val<pos:position pos:line="292" pos:column="115"/></name></expr></argument>)<pos:position pos:line="292" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="293" pos:column="17">else <if pos:line="293" pos:column="22">if <condition pos:line="293" pos:column="25">(<expr><call><name pos:line="293" pos:column="26">strcmp<pos:position pos:line="293" pos:column="32"/></name><argument_list pos:line="293" pos:column="32">(<argument><expr><name pos:line="293" pos:column="33">name<pos:position pos:line="293" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="293" pos:column="39">"s_req_hdrbytes"<pos:position pos:line="293" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="293" pos:column="56"/></argument_list></call> <operator pos:line="293" pos:column="57">==<pos:position pos:line="293" pos:column="59"/></operator> <literal type="number" pos:line="293" pos:column="60">0<pos:position pos:line="293" pos:column="61"/></literal></expr>)<pos:position pos:line="293" pos:column="62"/></condition><then pos:line="293" pos:column="62">
			<block type="pseudo"><return pos:line="294" pos:column="25">return <expr><call><name pos:line="294" pos:column="32">varnish_submit_derive<pos:position pos:line="294" pos:column="53"/></name> <argument_list pos:line="294" pos:column="54">(<argument><expr><name><name pos:line="294" pos:column="55">conf<pos:position pos:line="294" pos:column="59"/></name><operator pos:line="294" pos:column="59">-&gt;<pos:position pos:line="294" pos:column="64"/></operator><name pos:line="294" pos:column="61">instance<pos:position pos:line="294" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="294" pos:column="71">"totals"<pos:position pos:line="294" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="294" pos:column="81">"total_bytes"<pos:position pos:line="294" pos:column="94"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="294" pos:column="96">"req_header"<pos:position pos:line="294" pos:column="108"/></literal></expr></argument>,   <argument><expr><name pos:line="294" pos:column="112">val<pos:position pos:line="294" pos:column="115"/></name></expr></argument>)<pos:position pos:line="294" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="295" pos:column="17">else <if pos:line="295" pos:column="22">if <condition pos:line="295" pos:column="25">(<expr><call><name pos:line="295" pos:column="26">strcmp<pos:position pos:line="295" pos:column="32"/></name><argument_list pos:line="295" pos:column="32">(<argument><expr><name pos:line="295" pos:column="33">name<pos:position pos:line="295" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="295" pos:column="39">"s_req_bodybytes"<pos:position pos:line="295" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="295" pos:column="57"/></argument_list></call> <operator pos:line="295" pos:column="58">==<pos:position pos:line="295" pos:column="60"/></operator> <literal type="number" pos:line="295" pos:column="61">0<pos:position pos:line="295" pos:column="62"/></literal></expr>)<pos:position pos:line="295" pos:column="63"/></condition><then pos:line="295" pos:column="63">
			<block type="pseudo"><return pos:line="296" pos:column="25">return <expr><call><name pos:line="296" pos:column="32">varnish_submit_derive<pos:position pos:line="296" pos:column="53"/></name> <argument_list pos:line="296" pos:column="54">(<argument><expr><name><name pos:line="296" pos:column="55">conf<pos:position pos:line="296" pos:column="59"/></name><operator pos:line="296" pos:column="59">-&gt;<pos:position pos:line="296" pos:column="64"/></operator><name pos:line="296" pos:column="61">instance<pos:position pos:line="296" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="296" pos:column="71">"totals"<pos:position pos:line="296" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="296" pos:column="81">"total_bytes"<pos:position pos:line="296" pos:column="94"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="296" pos:column="96">"req_body"<pos:position pos:line="296" pos:column="106"/></literal></expr></argument>,     <argument><expr><name pos:line="296" pos:column="112">val<pos:position pos:line="296" pos:column="115"/></name></expr></argument>)<pos:position pos:line="296" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="297" pos:column="17">else <if pos:line="297" pos:column="22">if <condition pos:line="297" pos:column="25">(<expr><call><name pos:line="297" pos:column="26">strcmp<pos:position pos:line="297" pos:column="32"/></name><argument_list pos:line="297" pos:column="32">(<argument><expr><name pos:line="297" pos:column="33">name<pos:position pos:line="297" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="297" pos:column="39">"s_resp_hdrbytes"<pos:position pos:line="297" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="297" pos:column="57"/></argument_list></call> <operator pos:line="297" pos:column="58">==<pos:position pos:line="297" pos:column="60"/></operator> <literal type="number" pos:line="297" pos:column="61">0<pos:position pos:line="297" pos:column="62"/></literal></expr>)<pos:position pos:line="297" pos:column="63"/></condition><then pos:line="297" pos:column="63">
			<block type="pseudo"><return pos:line="298" pos:column="25">return <expr><call><name pos:line="298" pos:column="32">varnish_submit_derive<pos:position pos:line="298" pos:column="53"/></name> <argument_list pos:line="298" pos:column="54">(<argument><expr><name><name pos:line="298" pos:column="55">conf<pos:position pos:line="298" pos:column="59"/></name><operator pos:line="298" pos:column="59">-&gt;<pos:position pos:line="298" pos:column="64"/></operator><name pos:line="298" pos:column="61">instance<pos:position pos:line="298" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="298" pos:column="71">"totals"<pos:position pos:line="298" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="298" pos:column="81">"total_bytes"<pos:position pos:line="298" pos:column="94"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="298" pos:column="96">"resp_header"<pos:position pos:line="298" pos:column="109"/></literal></expr></argument>,  <argument><expr><name pos:line="298" pos:column="112">val<pos:position pos:line="298" pos:column="115"/></name></expr></argument>)<pos:position pos:line="298" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="299" pos:column="17">else <if pos:line="299" pos:column="22">if <condition pos:line="299" pos:column="25">(<expr><call><name pos:line="299" pos:column="26">strcmp<pos:position pos:line="299" pos:column="32"/></name><argument_list pos:line="299" pos:column="32">(<argument><expr><name pos:line="299" pos:column="33">name<pos:position pos:line="299" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="299" pos:column="39">"s_resp_bodybytes"<pos:position pos:line="299" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="299" pos:column="58"/></argument_list></call> <operator pos:line="299" pos:column="59">==<pos:position pos:line="299" pos:column="61"/></operator> <literal type="number" pos:line="299" pos:column="62">0<pos:position pos:line="299" pos:column="63"/></literal></expr>)<pos:position pos:line="299" pos:column="64"/></condition><then pos:line="299" pos:column="64">
			<block type="pseudo"><return pos:line="300" pos:column="25">return <expr><call><name pos:line="300" pos:column="32">varnish_submit_derive<pos:position pos:line="300" pos:column="53"/></name> <argument_list pos:line="300" pos:column="54">(<argument><expr><name><name pos:line="300" pos:column="55">conf<pos:position pos:line="300" pos:column="59"/></name><operator pos:line="300" pos:column="59">-&gt;<pos:position pos:line="300" pos:column="64"/></operator><name pos:line="300" pos:column="61">instance<pos:position pos:line="300" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="300" pos:column="71">"totals"<pos:position pos:line="300" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="300" pos:column="81">"total_bytes"<pos:position pos:line="300" pos:column="94"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="300" pos:column="96">"resp_body"<pos:position pos:line="300" pos:column="107"/></literal></expr></argument>,    <argument><expr><name pos:line="300" pos:column="112">val<pos:position pos:line="300" pos:column="115"/></name></expr></argument>)<pos:position pos:line="300" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="301" pos:column="17">else <if pos:line="301" pos:column="22">if <condition pos:line="301" pos:column="25">(<expr><call><name pos:line="301" pos:column="26">strcmp<pos:position pos:line="301" pos:column="32"/></name><argument_list pos:line="301" pos:column="32">(<argument><expr><name pos:line="301" pos:column="33">name<pos:position pos:line="301" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="301" pos:column="39">"s_pipe_hdrbytes"<pos:position pos:line="301" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="301" pos:column="57"/></argument_list></call> <operator pos:line="301" pos:column="58">==<pos:position pos:line="301" pos:column="60"/></operator> <literal type="number" pos:line="301" pos:column="61">0<pos:position pos:line="301" pos:column="62"/></literal></expr>)<pos:position pos:line="301" pos:column="63"/></condition><then pos:line="301" pos:column="63">
			<block type="pseudo"><return pos:line="302" pos:column="25">return <expr><call><name pos:line="302" pos:column="32">varnish_submit_derive<pos:position pos:line="302" pos:column="53"/></name> <argument_list pos:line="302" pos:column="54">(<argument><expr><name><name pos:line="302" pos:column="55">conf<pos:position pos:line="302" pos:column="59"/></name><operator pos:line="302" pos:column="59">-&gt;<pos:position pos:line="302" pos:column="64"/></operator><name pos:line="302" pos:column="61">instance<pos:position pos:line="302" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="302" pos:column="71">"totals"<pos:position pos:line="302" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="302" pos:column="81">"total_bytes"<pos:position pos:line="302" pos:column="94"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="302" pos:column="96">"pipe_header"<pos:position pos:line="302" pos:column="109"/></literal></expr></argument>,  <argument><expr><name pos:line="302" pos:column="112">val<pos:position pos:line="302" pos:column="115"/></name></expr></argument>)<pos:position pos:line="302" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="303" pos:column="17">else <if pos:line="303" pos:column="22">if <condition pos:line="303" pos:column="25">(<expr><call><name pos:line="303" pos:column="26">strcmp<pos:position pos:line="303" pos:column="32"/></name><argument_list pos:line="303" pos:column="32">(<argument><expr><name pos:line="303" pos:column="33">name<pos:position pos:line="303" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="303" pos:column="39">"s_pipe_in"<pos:position pos:line="303" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="303" pos:column="51"/></argument_list></call> <operator pos:line="303" pos:column="52">==<pos:position pos:line="303" pos:column="54"/></operator> <literal type="number" pos:line="303" pos:column="55">0<pos:position pos:line="303" pos:column="56"/></literal></expr>)<pos:position pos:line="303" pos:column="57"/></condition><then pos:line="303" pos:column="57">
			<block type="pseudo"><return pos:line="304" pos:column="25">return <expr><call><name pos:line="304" pos:column="32">varnish_submit_derive<pos:position pos:line="304" pos:column="53"/></name> <argument_list pos:line="304" pos:column="54">(<argument><expr><name><name pos:line="304" pos:column="55">conf<pos:position pos:line="304" pos:column="59"/></name><operator pos:line="304" pos:column="59">-&gt;<pos:position pos:line="304" pos:column="64"/></operator><name pos:line="304" pos:column="61">instance<pos:position pos:line="304" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="304" pos:column="71">"totals"<pos:position pos:line="304" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="304" pos:column="81">"total_bytes"<pos:position pos:line="304" pos:column="94"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="304" pos:column="96">"pipe_in"<pos:position pos:line="304" pos:column="105"/></literal></expr></argument>,      <argument><expr><name pos:line="304" pos:column="112">val<pos:position pos:line="304" pos:column="115"/></name></expr></argument>)<pos:position pos:line="304" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="305" pos:column="17">else <if pos:line="305" pos:column="22">if <condition pos:line="305" pos:column="25">(<expr><call><name pos:line="305" pos:column="26">strcmp<pos:position pos:line="305" pos:column="32"/></name><argument_list pos:line="305" pos:column="32">(<argument><expr><name pos:line="305" pos:column="33">name<pos:position pos:line="305" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="305" pos:column="39">"s_pipe_out"<pos:position pos:line="305" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="305" pos:column="52"/></argument_list></call> <operator pos:line="305" pos:column="53">==<pos:position pos:line="305" pos:column="55"/></operator> <literal type="number" pos:line="305" pos:column="56">0<pos:position pos:line="305" pos:column="57"/></literal></expr>)<pos:position pos:line="305" pos:column="58"/></condition><then pos:line="305" pos:column="58">
			<block type="pseudo"><return pos:line="306" pos:column="25">return <expr><call><name pos:line="306" pos:column="32">varnish_submit_derive<pos:position pos:line="306" pos:column="53"/></name> <argument_list pos:line="306" pos:column="54">(<argument><expr><name><name pos:line="306" pos:column="55">conf<pos:position pos:line="306" pos:column="59"/></name><operator pos:line="306" pos:column="59">-&gt;<pos:position pos:line="306" pos:column="64"/></operator><name pos:line="306" pos:column="61">instance<pos:position pos:line="306" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="306" pos:column="71">"totals"<pos:position pos:line="306" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="306" pos:column="81">"total_bytes"<pos:position pos:line="306" pos:column="94"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="306" pos:column="96">"pipe_out"<pos:position pos:line="306" pos:column="106"/></literal></expr></argument>,     <argument><expr><name pos:line="306" pos:column="112">val<pos:position pos:line="306" pos:column="115"/></name></expr></argument>)<pos:position pos:line="306" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="307" pos:column="17">else <if pos:line="307" pos:column="22">if <condition pos:line="307" pos:column="25">(<expr><call><name pos:line="307" pos:column="26">strcmp<pos:position pos:line="307" pos:column="32"/></name><argument_list pos:line="307" pos:column="32">(<argument><expr><name pos:line="307" pos:column="33">name<pos:position pos:line="307" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="307" pos:column="39">"n_purges"<pos:position pos:line="307" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="307" pos:column="50"/></argument_list></call> <operator pos:line="307" pos:column="51">==<pos:position pos:line="307" pos:column="53"/></operator> <literal type="number" pos:line="307" pos:column="54">0<pos:position pos:line="307" pos:column="55"/></literal></expr>)<pos:position pos:line="307" pos:column="56"/></condition><then pos:line="307" pos:column="56">
			<block type="pseudo"><return pos:line="308" pos:column="25">return <expr><call><name pos:line="308" pos:column="32">varnish_submit_derive<pos:position pos:line="308" pos:column="53"/></name> <argument_list pos:line="308" pos:column="54">(<argument><expr><name><name pos:line="308" pos:column="55">conf<pos:position pos:line="308" pos:column="59"/></name><operator pos:line="308" pos:column="59">-&gt;<pos:position pos:line="308" pos:column="64"/></operator><name pos:line="308" pos:column="61">instance<pos:position pos:line="308" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="308" pos:column="71">"totals"<pos:position pos:line="308" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="308" pos:column="81">"total_operations"<pos:position pos:line="308" pos:column="99"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="308" pos:column="101">"purges"<pos:position pos:line="308" pos:column="109"/></literal></expr></argument>,  <argument><expr><name pos:line="308" pos:column="112">val<pos:position pos:line="308" pos:column="115"/></name></expr></argument>)<pos:position pos:line="308" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="309" pos:column="17">else <if pos:line="309" pos:column="22">if <condition pos:line="309" pos:column="25">(<expr><call><name pos:line="309" pos:column="26">strcmp<pos:position pos:line="309" pos:column="32"/></name><argument_list pos:line="309" pos:column="32">(<argument><expr><name pos:line="309" pos:column="33">name<pos:position pos:line="309" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="309" pos:column="39">"s_hdrbytes"<pos:position pos:line="309" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="309" pos:column="52"/></argument_list></call> <operator pos:line="309" pos:column="53">==<pos:position pos:line="309" pos:column="55"/></operator> <literal type="number" pos:line="309" pos:column="56">0<pos:position pos:line="309" pos:column="57"/></literal></expr>)<pos:position pos:line="309" pos:column="58"/></condition><then pos:line="309" pos:column="58">
			<block type="pseudo"><return pos:line="310" pos:column="25">return <expr><call><name pos:line="310" pos:column="32">varnish_submit_derive<pos:position pos:line="310" pos:column="53"/></name> <argument_list pos:line="310" pos:column="54">(<argument><expr><name><name pos:line="310" pos:column="55">conf<pos:position pos:line="310" pos:column="59"/></name><operator pos:line="310" pos:column="59">-&gt;<pos:position pos:line="310" pos:column="64"/></operator><name pos:line="310" pos:column="61">instance<pos:position pos:line="310" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="310" pos:column="71">"totals"<pos:position pos:line="310" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="310" pos:column="81">"total_bytes"<pos:position pos:line="310" pos:column="94"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="310" pos:column="96">"header-bytes"<pos:position pos:line="310" pos:column="110"/></literal></expr></argument>, <argument><expr><name pos:line="310" pos:column="112">val<pos:position pos:line="310" pos:column="115"/></name></expr></argument>)<pos:position pos:line="310" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="311" pos:column="17">else <if pos:line="311" pos:column="22">if <condition pos:line="311" pos:column="25">(<expr><call><name pos:line="311" pos:column="26">strcmp<pos:position pos:line="311" pos:column="32"/></name><argument_list pos:line="311" pos:column="32">(<argument><expr><name pos:line="311" pos:column="33">name<pos:position pos:line="311" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="311" pos:column="39">"s_bodybytes"<pos:position pos:line="311" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="311" pos:column="53"/></argument_list></call> <operator pos:line="311" pos:column="54">==<pos:position pos:line="311" pos:column="56"/></operator> <literal type="number" pos:line="311" pos:column="57">0<pos:position pos:line="311" pos:column="58"/></literal></expr>)<pos:position pos:line="311" pos:column="59"/></condition><then pos:line="311" pos:column="59">
			<block type="pseudo"><return pos:line="312" pos:column="25">return <expr><call><name pos:line="312" pos:column="32">varnish_submit_derive<pos:position pos:line="312" pos:column="53"/></name> <argument_list pos:line="312" pos:column="54">(<argument><expr><name><name pos:line="312" pos:column="55">conf<pos:position pos:line="312" pos:column="59"/></name><operator pos:line="312" pos:column="59">-&gt;<pos:position pos:line="312" pos:column="64"/></operator><name pos:line="312" pos:column="61">instance<pos:position pos:line="312" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="312" pos:column="71">"totals"<pos:position pos:line="312" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="312" pos:column="81">"total_bytes"<pos:position pos:line="312" pos:column="94"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="312" pos:column="96">"body-bytes"<pos:position pos:line="312" pos:column="108"/></literal></expr></argument>,   <argument><expr><name pos:line="312" pos:column="112">val<pos:position pos:line="312" pos:column="115"/></name></expr></argument>)<pos:position pos:line="312" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="313" pos:column="17">else <if pos:line="313" pos:column="22">if <condition pos:line="313" pos:column="25">(<expr><call><name pos:line="313" pos:column="26">strcmp<pos:position pos:line="313" pos:column="32"/></name><argument_list pos:line="313" pos:column="32">(<argument><expr><name pos:line="313" pos:column="33">name<pos:position pos:line="313" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="313" pos:column="39">"n_gzip"<pos:position pos:line="313" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="313" pos:column="48"/></argument_list></call> <operator pos:line="313" pos:column="49">==<pos:position pos:line="313" pos:column="51"/></operator> <literal type="number" pos:line="313" pos:column="52">0<pos:position pos:line="313" pos:column="53"/></literal></expr>)<pos:position pos:line="313" pos:column="54"/></condition><then pos:line="313" pos:column="54">
			<block type="pseudo"><return pos:line="314" pos:column="25">return <expr><call><name pos:line="314" pos:column="32">varnish_submit_derive<pos:position pos:line="314" pos:column="53"/></name> <argument_list pos:line="314" pos:column="54">(<argument><expr><name><name pos:line="314" pos:column="55">conf<pos:position pos:line="314" pos:column="59"/></name><operator pos:line="314" pos:column="59">-&gt;<pos:position pos:line="314" pos:column="64"/></operator><name pos:line="314" pos:column="61">instance<pos:position pos:line="314" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="314" pos:column="71">"totals"<pos:position pos:line="314" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="314" pos:column="81">"total_operations"<pos:position pos:line="314" pos:column="99"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="314" pos:column="101">"gzip"<pos:position pos:line="314" pos:column="107"/></literal></expr></argument>,    <argument><expr><name pos:line="314" pos:column="112">val<pos:position pos:line="314" pos:column="115"/></name></expr></argument>)<pos:position pos:line="314" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="117"/></return></block></then></if></elseif>
		<elseif pos:line="315" pos:column="17">else <if pos:line="315" pos:column="22">if <condition pos:line="315" pos:column="25">(<expr><call><name pos:line="315" pos:column="26">strcmp<pos:position pos:line="315" pos:column="32"/></name><argument_list pos:line="315" pos:column="32">(<argument><expr><name pos:line="315" pos:column="33">name<pos:position pos:line="315" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="315" pos:column="39">"n_gunzip"<pos:position pos:line="315" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="315" pos:column="50"/></argument_list></call> <operator pos:line="315" pos:column="51">==<pos:position pos:line="315" pos:column="53"/></operator> <literal type="number" pos:line="315" pos:column="54">0<pos:position pos:line="315" pos:column="55"/></literal></expr>)<pos:position pos:line="315" pos:column="56"/></condition><then pos:line="315" pos:column="56">
			<block type="pseudo"><return pos:line="316" pos:column="25">return <expr><call><name pos:line="316" pos:column="32">varnish_submit_derive<pos:position pos:line="316" pos:column="53"/></name> <argument_list pos:line="316" pos:column="54">(<argument><expr><name><name pos:line="316" pos:column="55">conf<pos:position pos:line="316" pos:column="59"/></name><operator pos:line="316" pos:column="59">-&gt;<pos:position pos:line="316" pos:column="64"/></operator><name pos:line="316" pos:column="61">instance<pos:position pos:line="316" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="316" pos:column="71">"totals"<pos:position pos:line="316" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="316" pos:column="81">"total_operations"<pos:position pos:line="316" pos:column="99"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="316" pos:column="101">"gunzip"<pos:position pos:line="316" pos:column="109"/></literal></expr></argument>,  <argument><expr><name pos:line="316" pos:column="112">val<pos:position pos:line="316" pos:column="115"/></name></expr></argument>)<pos:position pos:line="316" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="117"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="317" pos:column="10"/></block></then></if>

	<if pos:line="319" pos:column="9">if <condition pos:line="319" pos:column="12">(<expr><name><name pos:line="319" pos:column="13">conf<pos:position pos:line="319" pos:column="17"/></name><operator pos:line="319" pos:column="17">-&gt;<pos:position pos:line="319" pos:column="22"/></operator><name pos:line="319" pos:column="19">collect_uptime<pos:position pos:line="319" pos:column="33"/></name></name></expr>)<pos:position pos:line="319" pos:column="34"/></condition><then pos:line="319" pos:column="34">
	<block pos:line="320" pos:column="9">{
		<if pos:line="321" pos:column="17">if <condition pos:line="321" pos:column="20">(<expr><call><name pos:line="321" pos:column="21">strcmp<pos:position pos:line="321" pos:column="27"/></name><argument_list pos:line="321" pos:column="27">(<argument><expr><name pos:line="321" pos:column="28">name<pos:position pos:line="321" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="321" pos:column="34">"uptime"<pos:position pos:line="321" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="321" pos:column="43"/></argument_list></call> <operator pos:line="321" pos:column="44">==<pos:position pos:line="321" pos:column="46"/></operator> <literal type="number" pos:line="321" pos:column="47">0<pos:position pos:line="321" pos:column="48"/></literal></expr>)<pos:position pos:line="321" pos:column="49"/></condition><then pos:line="321" pos:column="49">
			<block type="pseudo"><return pos:line="322" pos:column="25">return <expr><call><name pos:line="322" pos:column="32">varnish_submit_gauge<pos:position pos:line="322" pos:column="52"/></name> <argument_list pos:line="322" pos:column="53">(<argument><expr><name><name pos:line="322" pos:column="54">conf<pos:position pos:line="322" pos:column="58"/></name><operator pos:line="322" pos:column="58">-&gt;<pos:position pos:line="322" pos:column="63"/></operator><name pos:line="322" pos:column="60">instance<pos:position pos:line="322" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="322" pos:column="70">"uptime"<pos:position pos:line="322" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="322" pos:column="80">"uptime"<pos:position pos:line="322" pos:column="88"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="322" pos:column="90">"client_uptime"<pos:position pos:line="322" pos:column="105"/></literal></expr></argument>, <argument><expr><name pos:line="322" pos:column="107">val<pos:position pos:line="322" pos:column="110"/></name></expr></argument>)<pos:position pos:line="322" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="112"/></return></block></then></if>
	}<pos:position pos:line="323" pos:column="10"/></block></then></if>

	<if pos:line="325" pos:column="9">if <condition pos:line="325" pos:column="12">(<expr><name><name pos:line="325" pos:column="13">conf<pos:position pos:line="325" pos:column="17"/></name><operator pos:line="325" pos:column="17">-&gt;<pos:position pos:line="325" pos:column="22"/></operator><name pos:line="325" pos:column="19">collect_vcl<pos:position pos:line="325" pos:column="30"/></name></name></expr>)<pos:position pos:line="325" pos:column="31"/></condition><then pos:line="325" pos:column="31">
	<block pos:line="326" pos:column="9">{
		<if pos:line="327" pos:column="17">if <condition pos:line="327" pos:column="20">(<expr><call><name pos:line="327" pos:column="21">strcmp<pos:position pos:line="327" pos:column="27"/></name><argument_list pos:line="327" pos:column="27">(<argument><expr><name pos:line="327" pos:column="28">name<pos:position pos:line="327" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="327" pos:column="34">"n_vcl"<pos:position pos:line="327" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="327" pos:column="42"/></argument_list></call> <operator pos:line="327" pos:column="43">==<pos:position pos:line="327" pos:column="45"/></operator> <literal type="number" pos:line="327" pos:column="46">0<pos:position pos:line="327" pos:column="47"/></literal></expr>)<pos:position pos:line="327" pos:column="48"/></condition><then pos:line="327" pos:column="48">
			<block type="pseudo"><return pos:line="328" pos:column="25">return <expr><call><name pos:line="328" pos:column="32">varnish_submit_gauge<pos:position pos:line="328" pos:column="52"/></name> <argument_list pos:line="328" pos:column="53">(<argument><expr><name><name pos:line="328" pos:column="54">conf<pos:position pos:line="328" pos:column="58"/></name><operator pos:line="328" pos:column="58">-&gt;<pos:position pos:line="328" pos:column="63"/></operator><name pos:line="328" pos:column="60">instance<pos:position pos:line="328" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="328" pos:column="70">"vcl"<pos:position pos:line="328" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="328" pos:column="77">"vcl"<pos:position pos:line="328" pos:column="82"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="328" pos:column="84">"total_vcl"<pos:position pos:line="328" pos:column="95"/></literal></expr></argument>,     <argument><expr><name pos:line="328" pos:column="101">val<pos:position pos:line="328" pos:column="104"/></name></expr></argument>)<pos:position pos:line="328" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="106"/></return></block></then>
		<elseif pos:line="329" pos:column="17">else <if pos:line="329" pos:column="22">if <condition pos:line="329" pos:column="25">(<expr><call><name pos:line="329" pos:column="26">strcmp<pos:position pos:line="329" pos:column="32"/></name><argument_list pos:line="329" pos:column="32">(<argument><expr><name pos:line="329" pos:column="33">name<pos:position pos:line="329" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="329" pos:column="39">"n_vcl_avail"<pos:position pos:line="329" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="329" pos:column="53"/></argument_list></call> <operator pos:line="329" pos:column="54">==<pos:position pos:line="329" pos:column="56"/></operator> <literal type="number" pos:line="329" pos:column="57">0<pos:position pos:line="329" pos:column="58"/></literal></expr>)<pos:position pos:line="329" pos:column="59"/></condition><then pos:line="329" pos:column="59">
			<block type="pseudo"><return pos:line="330" pos:column="25">return <expr><call><name pos:line="330" pos:column="32">varnish_submit_gauge<pos:position pos:line="330" pos:column="52"/></name> <argument_list pos:line="330" pos:column="53">(<argument><expr><name><name pos:line="330" pos:column="54">conf<pos:position pos:line="330" pos:column="58"/></name><operator pos:line="330" pos:column="58">-&gt;<pos:position pos:line="330" pos:column="63"/></operator><name pos:line="330" pos:column="60">instance<pos:position pos:line="330" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="330" pos:column="70">"vcl"<pos:position pos:line="330" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="330" pos:column="77">"vcl"<pos:position pos:line="330" pos:column="82"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="330" pos:column="84">"avail_vcl"<pos:position pos:line="330" pos:column="95"/></literal></expr></argument>,     <argument><expr><name pos:line="330" pos:column="101">val<pos:position pos:line="330" pos:column="104"/></name></expr></argument>)<pos:position pos:line="330" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="106"/></return></block></then></if></elseif>
		<elseif pos:line="331" pos:column="17">else <if pos:line="331" pos:column="22">if <condition pos:line="331" pos:column="25">(<expr><call><name pos:line="331" pos:column="26">strcmp<pos:position pos:line="331" pos:column="32"/></name><argument_list pos:line="331" pos:column="32">(<argument><expr><name pos:line="331" pos:column="33">name<pos:position pos:line="331" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="331" pos:column="39">"n_vcl_discard"<pos:position pos:line="331" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="331" pos:column="55"/></argument_list></call> <operator pos:line="331" pos:column="56">==<pos:position pos:line="331" pos:column="58"/></operator> <literal type="number" pos:line="331" pos:column="59">0<pos:position pos:line="331" pos:column="60"/></literal></expr>)<pos:position pos:line="331" pos:column="61"/></condition><then pos:line="331" pos:column="61">
			<block type="pseudo"><return pos:line="332" pos:column="25">return <expr><call><name pos:line="332" pos:column="32">varnish_submit_gauge<pos:position pos:line="332" pos:column="52"/></name> <argument_list pos:line="332" pos:column="53">(<argument><expr><name><name pos:line="332" pos:column="54">conf<pos:position pos:line="332" pos:column="58"/></name><operator pos:line="332" pos:column="58">-&gt;<pos:position pos:line="332" pos:column="63"/></operator><name pos:line="332" pos:column="60">instance<pos:position pos:line="332" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="332" pos:column="70">"vcl"<pos:position pos:line="332" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="332" pos:column="77">"vcl"<pos:position pos:line="332" pos:column="82"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="332" pos:column="84">"discarded_vcl"<pos:position pos:line="332" pos:column="99"/></literal></expr></argument>, <argument><expr><name pos:line="332" pos:column="101">val<pos:position pos:line="332" pos:column="104"/></name></expr></argument>)<pos:position pos:line="332" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="106"/></return></block></then></if></elseif>
		<elseif pos:line="333" pos:column="17">else <if pos:line="333" pos:column="22">if <condition pos:line="333" pos:column="25">(<expr><call><name pos:line="333" pos:column="26">strcmp<pos:position pos:line="333" pos:column="32"/></name><argument_list pos:line="333" pos:column="32">(<argument><expr><name pos:line="333" pos:column="33">name<pos:position pos:line="333" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="333" pos:column="39">"vmods"<pos:position pos:line="333" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="333" pos:column="47"/></argument_list></call> <operator pos:line="333" pos:column="48">==<pos:position pos:line="333" pos:column="50"/></operator> <literal type="number" pos:line="333" pos:column="51">0<pos:position pos:line="333" pos:column="52"/></literal></expr>)<pos:position pos:line="333" pos:column="53"/></condition><then pos:line="333" pos:column="53">
			<block type="pseudo"><return pos:line="334" pos:column="25">return <expr><call><name pos:line="334" pos:column="32">varnish_submit_gauge<pos:position pos:line="334" pos:column="52"/></name> <argument_list pos:line="334" pos:column="53">(<argument><expr><name><name pos:line="334" pos:column="54">conf<pos:position pos:line="334" pos:column="58"/></name><operator pos:line="334" pos:column="58">-&gt;<pos:position pos:line="334" pos:column="63"/></operator><name pos:line="334" pos:column="60">instance<pos:position pos:line="334" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="334" pos:column="70">"vcl"<pos:position pos:line="334" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="334" pos:column="77">"objects"<pos:position pos:line="334" pos:column="86"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="334" pos:column="88">"vmod"<pos:position pos:line="334" pos:column="94"/></literal></expr></argument>,      <argument><expr><name pos:line="334" pos:column="101">val<pos:position pos:line="334" pos:column="104"/></name></expr></argument>)<pos:position pos:line="334" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="106"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="335" pos:column="10"/></block></then></if>

	<if pos:line="337" pos:column="9">if <condition pos:line="337" pos:column="12">(<expr><name><name pos:line="337" pos:column="13">conf<pos:position pos:line="337" pos:column="17"/></name><operator pos:line="337" pos:column="17">-&gt;<pos:position pos:line="337" pos:column="22"/></operator><name pos:line="337" pos:column="19">collect_workers<pos:position pos:line="337" pos:column="34"/></name></name></expr>)<pos:position pos:line="337" pos:column="35"/></condition><then pos:line="337" pos:column="35">
	<block pos:line="338" pos:column="9">{
		<if pos:line="339" pos:column="17">if <condition pos:line="339" pos:column="20">(<expr><call><name pos:line="339" pos:column="21">strcmp<pos:position pos:line="339" pos:column="27"/></name><argument_list pos:line="339" pos:column="27">(<argument><expr><name pos:line="339" pos:column="28">name<pos:position pos:line="339" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="339" pos:column="34">"threads"<pos:position pos:line="339" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="339" pos:column="44"/></argument_list></call> <operator pos:line="339" pos:column="45">==<pos:position pos:line="339" pos:column="47"/></operator> <literal type="number" pos:line="339" pos:column="48">0<pos:position pos:line="339" pos:column="49"/></literal></expr>)<pos:position pos:line="339" pos:column="50"/></condition><then pos:line="339" pos:column="50">
			<block type="pseudo"><return pos:line="340" pos:column="25">return <expr><call><name pos:line="340" pos:column="32">varnish_submit_gauge<pos:position pos:line="340" pos:column="52"/></name> <argument_list pos:line="340" pos:column="53">(<argument><expr><name><name pos:line="340" pos:column="54">conf<pos:position pos:line="340" pos:column="58"/></name><operator pos:line="340" pos:column="58">-&gt;<pos:position pos:line="340" pos:column="63"/></operator><name pos:line="340" pos:column="60">instance<pos:position pos:line="340" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="340" pos:column="70">"workers"<pos:position pos:line="340" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="340" pos:column="81">"threads"<pos:position pos:line="340" pos:column="90"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="340" pos:column="92">"worker"<pos:position pos:line="340" pos:column="100"/></literal></expr></argument>,               <argument><expr><name pos:line="340" pos:column="116">val<pos:position pos:line="340" pos:column="119"/></name></expr></argument>)<pos:position pos:line="340" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="121"/></return></block></then>
		<elseif pos:line="341" pos:column="17">else <if pos:line="341" pos:column="22">if <condition pos:line="341" pos:column="25">(<expr><call><name pos:line="341" pos:column="26">strcmp<pos:position pos:line="341" pos:column="32"/></name><argument_list pos:line="341" pos:column="32">(<argument><expr><name pos:line="341" pos:column="33">name<pos:position pos:line="341" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="341" pos:column="39">"threads_created"<pos:position pos:line="341" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="341" pos:column="57"/></argument_list></call> <operator pos:line="341" pos:column="58">==<pos:position pos:line="341" pos:column="60"/></operator> <literal type="number" pos:line="341" pos:column="61">0<pos:position pos:line="341" pos:column="62"/></literal></expr>)<pos:position pos:line="341" pos:column="63"/></condition><then pos:line="341" pos:column="63">
			<block type="pseudo"><return pos:line="342" pos:column="25">return <expr><call><name pos:line="342" pos:column="32">varnish_submit_derive<pos:position pos:line="342" pos:column="53"/></name> <argument_list pos:line="342" pos:column="54">(<argument><expr><name><name pos:line="342" pos:column="55">conf<pos:position pos:line="342" pos:column="59"/></name><operator pos:line="342" pos:column="59">-&gt;<pos:position pos:line="342" pos:column="64"/></operator><name pos:line="342" pos:column="61">instance<pos:position pos:line="342" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="342" pos:column="71">"workers"<pos:position pos:line="342" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="342" pos:column="82">"total_threads"<pos:position pos:line="342" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="342" pos:column="99">"created"<pos:position pos:line="342" pos:column="108"/></literal></expr></argument>,       <argument><expr><name pos:line="342" pos:column="116">val<pos:position pos:line="342" pos:column="119"/></name></expr></argument>)<pos:position pos:line="342" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="342" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="343" pos:column="17">else <if pos:line="343" pos:column="22">if <condition pos:line="343" pos:column="25">(<expr><call><name pos:line="343" pos:column="26">strcmp<pos:position pos:line="343" pos:column="32"/></name><argument_list pos:line="343" pos:column="32">(<argument><expr><name pos:line="343" pos:column="33">name<pos:position pos:line="343" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="343" pos:column="39">"threads_failed"<pos:position pos:line="343" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="343" pos:column="56"/></argument_list></call> <operator pos:line="343" pos:column="57">==<pos:position pos:line="343" pos:column="59"/></operator> <literal type="number" pos:line="343" pos:column="60">0<pos:position pos:line="343" pos:column="61"/></literal></expr>)<pos:position pos:line="343" pos:column="62"/></condition><then pos:line="343" pos:column="62">
			<block type="pseudo"><return pos:line="344" pos:column="25">return <expr><call><name pos:line="344" pos:column="32">varnish_submit_derive<pos:position pos:line="344" pos:column="53"/></name> <argument_list pos:line="344" pos:column="54">(<argument><expr><name><name pos:line="344" pos:column="55">conf<pos:position pos:line="344" pos:column="59"/></name><operator pos:line="344" pos:column="59">-&gt;<pos:position pos:line="344" pos:column="64"/></operator><name pos:line="344" pos:column="61">instance<pos:position pos:line="344" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="344" pos:column="71">"workers"<pos:position pos:line="344" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="344" pos:column="82">"total_threads"<pos:position pos:line="344" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="344" pos:column="99">"failed"<pos:position pos:line="344" pos:column="107"/></literal></expr></argument>,        <argument><expr><name pos:line="344" pos:column="116">val<pos:position pos:line="344" pos:column="119"/></name></expr></argument>)<pos:position pos:line="344" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="344" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="345" pos:column="17">else <if pos:line="345" pos:column="22">if <condition pos:line="345" pos:column="25">(<expr><call><name pos:line="345" pos:column="26">strcmp<pos:position pos:line="345" pos:column="32"/></name><argument_list pos:line="345" pos:column="32">(<argument><expr><name pos:line="345" pos:column="33">name<pos:position pos:line="345" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="345" pos:column="39">"threads_limited"<pos:position pos:line="345" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="345" pos:column="57"/></argument_list></call> <operator pos:line="345" pos:column="58">==<pos:position pos:line="345" pos:column="60"/></operator> <literal type="number" pos:line="345" pos:column="61">0<pos:position pos:line="345" pos:column="62"/></literal></expr>)<pos:position pos:line="345" pos:column="63"/></condition><then pos:line="345" pos:column="63">
			<block type="pseudo"><return pos:line="346" pos:column="25">return <expr><call><name pos:line="346" pos:column="32">varnish_submit_derive<pos:position pos:line="346" pos:column="53"/></name> <argument_list pos:line="346" pos:column="54">(<argument><expr><name><name pos:line="346" pos:column="55">conf<pos:position pos:line="346" pos:column="59"/></name><operator pos:line="346" pos:column="59">-&gt;<pos:position pos:line="346" pos:column="64"/></operator><name pos:line="346" pos:column="61">instance<pos:position pos:line="346" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="346" pos:column="71">"workers"<pos:position pos:line="346" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="346" pos:column="82">"total_threads"<pos:position pos:line="346" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="346" pos:column="99">"limited"<pos:position pos:line="346" pos:column="108"/></literal></expr></argument>,       <argument><expr><name pos:line="346" pos:column="116">val<pos:position pos:line="346" pos:column="119"/></name></expr></argument>)<pos:position pos:line="346" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="347" pos:column="17">else <if pos:line="347" pos:column="22">if <condition pos:line="347" pos:column="25">(<expr><call><name pos:line="347" pos:column="26">strcmp<pos:position pos:line="347" pos:column="32"/></name><argument_list pos:line="347" pos:column="32">(<argument><expr><name pos:line="347" pos:column="33">name<pos:position pos:line="347" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="347" pos:column="39">"threads_destroyed"<pos:position pos:line="347" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="347" pos:column="59"/></argument_list></call> <operator pos:line="347" pos:column="60">==<pos:position pos:line="347" pos:column="62"/></operator> <literal type="number" pos:line="347" pos:column="63">0<pos:position pos:line="347" pos:column="64"/></literal></expr>)<pos:position pos:line="347" pos:column="65"/></condition><then pos:line="347" pos:column="65">
			<block type="pseudo"><return pos:line="348" pos:column="25">return <expr><call><name pos:line="348" pos:column="32">varnish_submit_derive<pos:position pos:line="348" pos:column="53"/></name> <argument_list pos:line="348" pos:column="54">(<argument><expr><name><name pos:line="348" pos:column="55">conf<pos:position pos:line="348" pos:column="59"/></name><operator pos:line="348" pos:column="59">-&gt;<pos:position pos:line="348" pos:column="64"/></operator><name pos:line="348" pos:column="61">instance<pos:position pos:line="348" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="348" pos:column="71">"workers"<pos:position pos:line="348" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="348" pos:column="82">"total_threads"<pos:position pos:line="348" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="348" pos:column="99">"dropped"<pos:position pos:line="348" pos:column="108"/></literal></expr></argument>,       <argument><expr><name pos:line="348" pos:column="116">val<pos:position pos:line="348" pos:column="119"/></name></expr></argument>)<pos:position pos:line="348" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="348" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="349" pos:column="17">else <if pos:line="349" pos:column="22">if <condition pos:line="349" pos:column="25">(<expr><call><name pos:line="349" pos:column="26">strcmp<pos:position pos:line="349" pos:column="32"/></name><argument_list pos:line="349" pos:column="32">(<argument><expr><name pos:line="349" pos:column="33">name<pos:position pos:line="349" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="349" pos:column="39">"thread_queue_len"<pos:position pos:line="349" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="349" pos:column="58"/></argument_list></call> <operator pos:line="349" pos:column="59">==<pos:position pos:line="349" pos:column="61"/></operator> <literal type="number" pos:line="349" pos:column="62">0<pos:position pos:line="349" pos:column="63"/></literal></expr>)<pos:position pos:line="349" pos:column="64"/></condition><then pos:line="349" pos:column="64">
			<block type="pseudo"><return pos:line="350" pos:column="25">return <expr><call><name pos:line="350" pos:column="32">varnish_submit_derive<pos:position pos:line="350" pos:column="53"/></name> <argument_list pos:line="350" pos:column="54">(<argument><expr><name><name pos:line="350" pos:column="55">conf<pos:position pos:line="350" pos:column="59"/></name><operator pos:line="350" pos:column="59">-&gt;<pos:position pos:line="350" pos:column="64"/></operator><name pos:line="350" pos:column="61">instance<pos:position pos:line="350" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="350" pos:column="71">"workers"<pos:position pos:line="350" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="350" pos:column="82">"queue_length"<pos:position pos:line="350" pos:column="96"/></literal></expr></argument>,  <argument><expr><literal type="string" pos:line="350" pos:column="99">"threads"<pos:position pos:line="350" pos:column="108"/></literal></expr></argument>,       <argument><expr><name pos:line="350" pos:column="116">val<pos:position pos:line="350" pos:column="119"/></name></expr></argument>)<pos:position pos:line="350" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="351" pos:column="17">else <if pos:line="351" pos:column="22">if <condition pos:line="351" pos:column="25">(<expr><call><name pos:line="351" pos:column="26">strcmp<pos:position pos:line="351" pos:column="32"/></name><argument_list pos:line="351" pos:column="32">(<argument><expr><name pos:line="351" pos:column="33">name<pos:position pos:line="351" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="351" pos:column="39">"n_wrk"<pos:position pos:line="351" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="351" pos:column="47"/></argument_list></call> <operator pos:line="351" pos:column="48">==<pos:position pos:line="351" pos:column="50"/></operator> <literal type="number" pos:line="351" pos:column="51">0<pos:position pos:line="351" pos:column="52"/></literal></expr>)<pos:position pos:line="351" pos:column="53"/></condition><then pos:line="351" pos:column="53">
			<block type="pseudo"><return pos:line="352" pos:column="25">return <expr><call><name pos:line="352" pos:column="32">varnish_submit_gauge<pos:position pos:line="352" pos:column="52"/></name> <argument_list pos:line="352" pos:column="53">(<argument><expr><name><name pos:line="352" pos:column="54">conf<pos:position pos:line="352" pos:column="58"/></name><operator pos:line="352" pos:column="58">-&gt;<pos:position pos:line="352" pos:column="63"/></operator><name pos:line="352" pos:column="60">instance<pos:position pos:line="352" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="352" pos:column="70">"workers"<pos:position pos:line="352" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="352" pos:column="81">"threads"<pos:position pos:line="352" pos:column="90"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="352" pos:column="92">"worker"<pos:position pos:line="352" pos:column="100"/></literal></expr></argument>,               <argument><expr><name pos:line="352" pos:column="116">val<pos:position pos:line="352" pos:column="119"/></name></expr></argument>)<pos:position pos:line="352" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="353" pos:column="17">else <if pos:line="353" pos:column="22">if <condition pos:line="353" pos:column="25">(<expr><call><name pos:line="353" pos:column="26">strcmp<pos:position pos:line="353" pos:column="32"/></name><argument_list pos:line="353" pos:column="32">(<argument><expr><name pos:line="353" pos:column="33">name<pos:position pos:line="353" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="353" pos:column="39">"n_wrk_create"<pos:position pos:line="353" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="353" pos:column="54"/></argument_list></call> <operator pos:line="353" pos:column="55">==<pos:position pos:line="353" pos:column="57"/></operator> <literal type="number" pos:line="353" pos:column="58">0<pos:position pos:line="353" pos:column="59"/></literal></expr>)<pos:position pos:line="353" pos:column="60"/></condition><then pos:line="353" pos:column="60">
			<block type="pseudo"><return pos:line="354" pos:column="25">return <expr><call><name pos:line="354" pos:column="32">varnish_submit_derive<pos:position pos:line="354" pos:column="53"/></name> <argument_list pos:line="354" pos:column="54">(<argument><expr><name><name pos:line="354" pos:column="55">conf<pos:position pos:line="354" pos:column="59"/></name><operator pos:line="354" pos:column="59">-&gt;<pos:position pos:line="354" pos:column="64"/></operator><name pos:line="354" pos:column="61">instance<pos:position pos:line="354" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="354" pos:column="71">"workers"<pos:position pos:line="354" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="354" pos:column="82">"total_threads"<pos:position pos:line="354" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="354" pos:column="99">"created"<pos:position pos:line="354" pos:column="108"/></literal></expr></argument>,       <argument><expr><name pos:line="354" pos:column="116">val<pos:position pos:line="354" pos:column="119"/></name></expr></argument>)<pos:position pos:line="354" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="355" pos:column="17">else <if pos:line="355" pos:column="22">if <condition pos:line="355" pos:column="25">(<expr><call><name pos:line="355" pos:column="26">strcmp<pos:position pos:line="355" pos:column="32"/></name><argument_list pos:line="355" pos:column="32">(<argument><expr><name pos:line="355" pos:column="33">name<pos:position pos:line="355" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="355" pos:column="39">"n_wrk_failed"<pos:position pos:line="355" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="355" pos:column="54"/></argument_list></call> <operator pos:line="355" pos:column="55">==<pos:position pos:line="355" pos:column="57"/></operator> <literal type="number" pos:line="355" pos:column="58">0<pos:position pos:line="355" pos:column="59"/></literal></expr>)<pos:position pos:line="355" pos:column="60"/></condition><then pos:line="355" pos:column="60">
			<block type="pseudo"><return pos:line="356" pos:column="25">return <expr><call><name pos:line="356" pos:column="32">varnish_submit_derive<pos:position pos:line="356" pos:column="53"/></name> <argument_list pos:line="356" pos:column="54">(<argument><expr><name><name pos:line="356" pos:column="55">conf<pos:position pos:line="356" pos:column="59"/></name><operator pos:line="356" pos:column="59">-&gt;<pos:position pos:line="356" pos:column="64"/></operator><name pos:line="356" pos:column="61">instance<pos:position pos:line="356" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="356" pos:column="71">"workers"<pos:position pos:line="356" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="356" pos:column="82">"total_threads"<pos:position pos:line="356" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="356" pos:column="99">"failed"<pos:position pos:line="356" pos:column="107"/></literal></expr></argument>,        <argument><expr><name pos:line="356" pos:column="116">val<pos:position pos:line="356" pos:column="119"/></name></expr></argument>)<pos:position pos:line="356" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="357" pos:column="17">else <if pos:line="357" pos:column="22">if <condition pos:line="357" pos:column="25">(<expr><call><name pos:line="357" pos:column="26">strcmp<pos:position pos:line="357" pos:column="32"/></name><argument_list pos:line="357" pos:column="32">(<argument><expr><name pos:line="357" pos:column="33">name<pos:position pos:line="357" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="357" pos:column="39">"n_wrk_max"<pos:position pos:line="357" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="357" pos:column="51"/></argument_list></call> <operator pos:line="357" pos:column="52">==<pos:position pos:line="357" pos:column="54"/></operator> <literal type="number" pos:line="357" pos:column="55">0<pos:position pos:line="357" pos:column="56"/></literal></expr>)<pos:position pos:line="357" pos:column="57"/></condition><then pos:line="357" pos:column="57">
			<block type="pseudo"><return pos:line="358" pos:column="25">return <expr><call><name pos:line="358" pos:column="32">varnish_submit_derive<pos:position pos:line="358" pos:column="53"/></name> <argument_list pos:line="358" pos:column="54">(<argument><expr><name><name pos:line="358" pos:column="55">conf<pos:position pos:line="358" pos:column="59"/></name><operator pos:line="358" pos:column="59">-&gt;<pos:position pos:line="358" pos:column="64"/></operator><name pos:line="358" pos:column="61">instance<pos:position pos:line="358" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="358" pos:column="71">"workers"<pos:position pos:line="358" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="358" pos:column="82">"total_threads"<pos:position pos:line="358" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="358" pos:column="99">"limited"<pos:position pos:line="358" pos:column="108"/></literal></expr></argument>,       <argument><expr><name pos:line="358" pos:column="116">val<pos:position pos:line="358" pos:column="119"/></name></expr></argument>)<pos:position pos:line="358" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="358" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="359" pos:column="17">else <if pos:line="359" pos:column="22">if <condition pos:line="359" pos:column="25">(<expr><call><name pos:line="359" pos:column="26">strcmp<pos:position pos:line="359" pos:column="32"/></name><argument_list pos:line="359" pos:column="32">(<argument><expr><name pos:line="359" pos:column="33">name<pos:position pos:line="359" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="359" pos:column="39">"n_wrk_drop"<pos:position pos:line="359" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="359" pos:column="52"/></argument_list></call> <operator pos:line="359" pos:column="53">==<pos:position pos:line="359" pos:column="55"/></operator> <literal type="number" pos:line="359" pos:column="56">0<pos:position pos:line="359" pos:column="57"/></literal></expr>)<pos:position pos:line="359" pos:column="58"/></condition><then pos:line="359" pos:column="58">
			<block type="pseudo"><return pos:line="360" pos:column="25">return <expr><call><name pos:line="360" pos:column="32">varnish_submit_derive<pos:position pos:line="360" pos:column="53"/></name> <argument_list pos:line="360" pos:column="54">(<argument><expr><name><name pos:line="360" pos:column="55">conf<pos:position pos:line="360" pos:column="59"/></name><operator pos:line="360" pos:column="59">-&gt;<pos:position pos:line="360" pos:column="64"/></operator><name pos:line="360" pos:column="61">instance<pos:position pos:line="360" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="360" pos:column="71">"workers"<pos:position pos:line="360" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="360" pos:column="82">"total_threads"<pos:position pos:line="360" pos:column="97"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="360" pos:column="99">"dropped"<pos:position pos:line="360" pos:column="108"/></literal></expr></argument>,       <argument><expr><name pos:line="360" pos:column="116">val<pos:position pos:line="360" pos:column="119"/></name></expr></argument>)<pos:position pos:line="360" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="360" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="361" pos:column="17">else <if pos:line="361" pos:column="22">if <condition pos:line="361" pos:column="25">(<expr><call><name pos:line="361" pos:column="26">strcmp<pos:position pos:line="361" pos:column="32"/></name><argument_list pos:line="361" pos:column="32">(<argument><expr><name pos:line="361" pos:column="33">name<pos:position pos:line="361" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="361" pos:column="39">"n_wrk_queue"<pos:position pos:line="361" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="361" pos:column="53"/></argument_list></call> <operator pos:line="361" pos:column="54">==<pos:position pos:line="361" pos:column="56"/></operator> <literal type="number" pos:line="361" pos:column="57">0<pos:position pos:line="361" pos:column="58"/></literal></expr>)<pos:position pos:line="361" pos:column="59"/></condition><then pos:line="361" pos:column="59">
			<block type="pseudo"><return pos:line="362" pos:column="25">return <expr><call><name pos:line="362" pos:column="32">varnish_submit_derive<pos:position pos:line="362" pos:column="53"/></name> <argument_list pos:line="362" pos:column="54">(<argument><expr><name><name pos:line="362" pos:column="55">conf<pos:position pos:line="362" pos:column="59"/></name><operator pos:line="362" pos:column="59">-&gt;<pos:position pos:line="362" pos:column="64"/></operator><name pos:line="362" pos:column="61">instance<pos:position pos:line="362" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="362" pos:column="71">"workers"<pos:position pos:line="362" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="362" pos:column="82">"total_requests"<pos:position pos:line="362" pos:column="98"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="362" pos:column="100">"queued"<pos:position pos:line="362" pos:column="108"/></literal></expr></argument>,       <argument><expr><name pos:line="362" pos:column="116">val<pos:position pos:line="362" pos:column="119"/></name></expr></argument>)<pos:position pos:line="362" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="362" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="363" pos:column="17">else <if pos:line="363" pos:column="22">if <condition pos:line="363" pos:column="25">(<expr><call><name pos:line="363" pos:column="26">strcmp<pos:position pos:line="363" pos:column="32"/></name><argument_list pos:line="363" pos:column="32">(<argument><expr><name pos:line="363" pos:column="33">name<pos:position pos:line="363" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="363" pos:column="39">"n_wrk_overflow"<pos:position pos:line="363" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="363" pos:column="56"/></argument_list></call> <operator pos:line="363" pos:column="57">==<pos:position pos:line="363" pos:column="59"/></operator> <literal type="number" pos:line="363" pos:column="60">0<pos:position pos:line="363" pos:column="61"/></literal></expr>)<pos:position pos:line="363" pos:column="62"/></condition><then pos:line="363" pos:column="62">
			<block type="pseudo"><return pos:line="364" pos:column="25">return <expr><call><name pos:line="364" pos:column="32">varnish_submit_derive<pos:position pos:line="364" pos:column="53"/></name> <argument_list pos:line="364" pos:column="54">(<argument><expr><name><name pos:line="364" pos:column="55">conf<pos:position pos:line="364" pos:column="59"/></name><operator pos:line="364" pos:column="59">-&gt;<pos:position pos:line="364" pos:column="64"/></operator><name pos:line="364" pos:column="61">instance<pos:position pos:line="364" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="364" pos:column="71">"workers"<pos:position pos:line="364" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="364" pos:column="82">"total_requests"<pos:position pos:line="364" pos:column="98"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="364" pos:column="100">"overflowed"<pos:position pos:line="364" pos:column="112"/></literal></expr></argument>,   <argument><expr><name pos:line="364" pos:column="116">val<pos:position pos:line="364" pos:column="119"/></name></expr></argument>)<pos:position pos:line="364" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="365" pos:column="17">else <if pos:line="365" pos:column="22">if <condition pos:line="365" pos:column="25">(<expr><call><name pos:line="365" pos:column="26">strcmp<pos:position pos:line="365" pos:column="32"/></name><argument_list pos:line="365" pos:column="32">(<argument><expr><name pos:line="365" pos:column="33">name<pos:position pos:line="365" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="365" pos:column="39">"n_wrk_queued"<pos:position pos:line="365" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="365" pos:column="54"/></argument_list></call> <operator pos:line="365" pos:column="55">==<pos:position pos:line="365" pos:column="57"/></operator> <literal type="number" pos:line="365" pos:column="58">0<pos:position pos:line="365" pos:column="59"/></literal></expr>)<pos:position pos:line="365" pos:column="60"/></condition><then pos:line="365" pos:column="60">
			<block type="pseudo"><return pos:line="366" pos:column="25">return <expr><call><name pos:line="366" pos:column="32">varnish_submit_derive<pos:position pos:line="366" pos:column="53"/></name> <argument_list pos:line="366" pos:column="54">(<argument><expr><name><name pos:line="366" pos:column="55">conf<pos:position pos:line="366" pos:column="59"/></name><operator pos:line="366" pos:column="59">-&gt;<pos:position pos:line="366" pos:column="64"/></operator><name pos:line="366" pos:column="61">instance<pos:position pos:line="366" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="366" pos:column="71">"workers"<pos:position pos:line="366" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="366" pos:column="82">"total_requests"<pos:position pos:line="366" pos:column="98"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="366" pos:column="100">"queued"<pos:position pos:line="366" pos:column="108"/></literal></expr></argument>,       <argument><expr><name pos:line="366" pos:column="116">val<pos:position pos:line="366" pos:column="119"/></name></expr></argument>)<pos:position pos:line="366" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="121"/></return></block></then></if></elseif>
		<elseif pos:line="367" pos:column="17">else <if pos:line="367" pos:column="22">if <condition pos:line="367" pos:column="25">(<expr><call><name pos:line="367" pos:column="26">strcmp<pos:position pos:line="367" pos:column="32"/></name><argument_list pos:line="367" pos:column="32">(<argument><expr><name pos:line="367" pos:column="33">name<pos:position pos:line="367" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="367" pos:column="39">"n_wrk_lqueue"<pos:position pos:line="367" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="367" pos:column="54"/></argument_list></call> <operator pos:line="367" pos:column="55">==<pos:position pos:line="367" pos:column="57"/></operator> <literal type="number" pos:line="367" pos:column="58">0<pos:position pos:line="367" pos:column="59"/></literal></expr>)<pos:position pos:line="367" pos:column="60"/></condition><then pos:line="367" pos:column="60">
			<block type="pseudo"><return pos:line="368" pos:column="25">return <expr><call><name pos:line="368" pos:column="32">varnish_submit_derive<pos:position pos:line="368" pos:column="53"/></name> <argument_list pos:line="368" pos:column="54">(<argument><expr><name><name pos:line="368" pos:column="55">conf<pos:position pos:line="368" pos:column="59"/></name><operator pos:line="368" pos:column="59">-&gt;<pos:position pos:line="368" pos:column="64"/></operator><name pos:line="368" pos:column="61">instance<pos:position pos:line="368" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="368" pos:column="71">"workers"<pos:position pos:line="368" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="368" pos:column="82">"total_requests"<pos:position pos:line="368" pos:column="98"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="368" pos:column="100">"queue_length"<pos:position pos:line="368" pos:column="114"/></literal></expr></argument>, <argument><expr><name pos:line="368" pos:column="116">val<pos:position pos:line="368" pos:column="119"/></name></expr></argument>)<pos:position pos:line="368" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="368" pos:column="121"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="369" pos:column="10"/></block></then></if>

<cpp:if pos:line="371" pos:column="1">#<cpp:directive pos:line="371" pos:column="2">if<pos:position pos:line="371" pos:column="4"/></cpp:directive> <expr><name pos:line="371" pos:column="5">HAVE_VARNISH_V4<pos:position pos:line="371" pos:column="20"/></name></expr></cpp:if>
	<if pos:line="372" pos:column="9">if <condition pos:line="372" pos:column="12">(<expr><name><name pos:line="372" pos:column="13">conf<pos:position pos:line="372" pos:column="17"/></name><operator pos:line="372" pos:column="17">-&gt;<pos:position pos:line="372" pos:column="22"/></operator><name pos:line="372" pos:column="19">collect_vsm<pos:position pos:line="372" pos:column="30"/></name></name></expr>)<pos:position pos:line="372" pos:column="31"/></condition><then pos:line="372" pos:column="31">
	<block pos:line="373" pos:column="9">{
		<if pos:line="374" pos:column="17">if <condition pos:line="374" pos:column="20">(<expr><call><name pos:line="374" pos:column="21">strcmp<pos:position pos:line="374" pos:column="27"/></name><argument_list pos:line="374" pos:column="27">(<argument><expr><name pos:line="374" pos:column="28">name<pos:position pos:line="374" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="374" pos:column="34">"vsm_free"<pos:position pos:line="374" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="374" pos:column="45"/></argument_list></call> <operator pos:line="374" pos:column="46">==<pos:position pos:line="374" pos:column="48"/></operator> <literal type="number" pos:line="374" pos:column="49">0<pos:position pos:line="374" pos:column="50"/></literal></expr>)<pos:position pos:line="374" pos:column="51"/></condition><then pos:line="374" pos:column="51">
			<block type="pseudo"><return pos:line="375" pos:column="25">return <expr><call><name pos:line="375" pos:column="32">varnish_submit_gauge<pos:position pos:line="375" pos:column="52"/></name> <argument_list pos:line="375" pos:column="53">(<argument><expr><name><name pos:line="375" pos:column="54">conf<pos:position pos:line="375" pos:column="58"/></name><operator pos:line="375" pos:column="58">-&gt;<pos:position pos:line="375" pos:column="63"/></operator><name pos:line="375" pos:column="60">instance<pos:position pos:line="375" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="375" pos:column="70">"vsm"<pos:position pos:line="375" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="375" pos:column="77">"bytes"<pos:position pos:line="375" pos:column="84"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="375" pos:column="86">"free"<pos:position pos:line="375" pos:column="92"/></literal></expr></argument>,              <argument><expr><name pos:line="375" pos:column="107">val<pos:position pos:line="375" pos:column="110"/></name></expr></argument>)<pos:position pos:line="375" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="375" pos:column="112"/></return></block></then>
		<elseif pos:line="376" pos:column="17">else <if pos:line="376" pos:column="22">if <condition pos:line="376" pos:column="25">(<expr><call><name pos:line="376" pos:column="26">strcmp<pos:position pos:line="376" pos:column="32"/></name><argument_list pos:line="376" pos:column="32">(<argument><expr><name pos:line="376" pos:column="33">name<pos:position pos:line="376" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="376" pos:column="39">"vsm_used"<pos:position pos:line="376" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="376" pos:column="50"/></argument_list></call> <operator pos:line="376" pos:column="51">==<pos:position pos:line="376" pos:column="53"/></operator> <literal type="number" pos:line="376" pos:column="54">0<pos:position pos:line="376" pos:column="55"/></literal></expr>)<pos:position pos:line="376" pos:column="56"/></condition><then pos:line="376" pos:column="56">
			<block type="pseudo"><return pos:line="377" pos:column="25">return <expr><call><name pos:line="377" pos:column="32">varnish_submit_gauge<pos:position pos:line="377" pos:column="52"/></name> <argument_list pos:line="377" pos:column="53">(<argument><expr><name><name pos:line="377" pos:column="54">conf<pos:position pos:line="377" pos:column="58"/></name><operator pos:line="377" pos:column="58">-&gt;<pos:position pos:line="377" pos:column="63"/></operator><name pos:line="377" pos:column="60">instance<pos:position pos:line="377" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="377" pos:column="70">"vsm"<pos:position pos:line="377" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="377" pos:column="77">"bytes"<pos:position pos:line="377" pos:column="84"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="377" pos:column="86">"used"<pos:position pos:line="377" pos:column="92"/></literal></expr></argument>,              <argument><expr><name pos:line="377" pos:column="107">val<pos:position pos:line="377" pos:column="110"/></name></expr></argument>)<pos:position pos:line="377" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="377" pos:column="112"/></return></block></then></if></elseif>
		<elseif pos:line="378" pos:column="17">else <if pos:line="378" pos:column="22">if <condition pos:line="378" pos:column="25">(<expr><call><name pos:line="378" pos:column="26">strcmp<pos:position pos:line="378" pos:column="32"/></name><argument_list pos:line="378" pos:column="32">(<argument><expr><name pos:line="378" pos:column="33">name<pos:position pos:line="378" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="378" pos:column="39">"vsm_cooling"<pos:position pos:line="378" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="378" pos:column="53"/></argument_list></call> <operator pos:line="378" pos:column="54">==<pos:position pos:line="378" pos:column="56"/></operator> <literal type="number" pos:line="378" pos:column="57">0<pos:position pos:line="378" pos:column="58"/></literal></expr>)<pos:position pos:line="378" pos:column="59"/></condition><then pos:line="378" pos:column="59">
			<block type="pseudo"><return pos:line="379" pos:column="25">return <expr><call><name pos:line="379" pos:column="32">varnish_submit_gauge<pos:position pos:line="379" pos:column="52"/></name> <argument_list pos:line="379" pos:column="53">(<argument><expr><name><name pos:line="379" pos:column="54">conf<pos:position pos:line="379" pos:column="58"/></name><operator pos:line="379" pos:column="58">-&gt;<pos:position pos:line="379" pos:column="63"/></operator><name pos:line="379" pos:column="60">instance<pos:position pos:line="379" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="379" pos:column="70">"vsm"<pos:position pos:line="379" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="379" pos:column="77">"bytes"<pos:position pos:line="379" pos:column="84"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="379" pos:column="86">"cooling"<pos:position pos:line="379" pos:column="95"/></literal></expr></argument>,           <argument><expr><name pos:line="379" pos:column="107">val<pos:position pos:line="379" pos:column="110"/></name></expr></argument>)<pos:position pos:line="379" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="379" pos:column="112"/></return></block></then></if></elseif>
		<elseif pos:line="380" pos:column="17">else <if pos:line="380" pos:column="22">if <condition pos:line="380" pos:column="25">(<expr><call><name pos:line="380" pos:column="26">strcmp<pos:position pos:line="380" pos:column="32"/></name><argument_list pos:line="380" pos:column="32">(<argument><expr><name pos:line="380" pos:column="33">name<pos:position pos:line="380" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="380" pos:column="39">"vsm_overflow"<pos:position pos:line="380" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="380" pos:column="54"/></argument_list></call> <operator pos:line="380" pos:column="55">==<pos:position pos:line="380" pos:column="57"/></operator> <literal type="number" pos:line="380" pos:column="58">0<pos:position pos:line="380" pos:column="59"/></literal></expr>)<pos:position pos:line="380" pos:column="60"/></condition><then pos:line="380" pos:column="60">
			<block type="pseudo"><return pos:line="381" pos:column="25">return <expr><call><name pos:line="381" pos:column="32">varnish_submit_gauge<pos:position pos:line="381" pos:column="52"/></name> <argument_list pos:line="381" pos:column="53">(<argument><expr><name><name pos:line="381" pos:column="54">conf<pos:position pos:line="381" pos:column="58"/></name><operator pos:line="381" pos:column="58">-&gt;<pos:position pos:line="381" pos:column="63"/></operator><name pos:line="381" pos:column="60">instance<pos:position pos:line="381" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="381" pos:column="70">"vsm"<pos:position pos:line="381" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="381" pos:column="77">"bytes"<pos:position pos:line="381" pos:column="84"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="381" pos:column="86">"overflow"<pos:position pos:line="381" pos:column="96"/></literal></expr></argument>,          <argument><expr><name pos:line="381" pos:column="107">val<pos:position pos:line="381" pos:column="110"/></name></expr></argument>)<pos:position pos:line="381" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="381" pos:column="112"/></return></block></then></if></elseif>
		<elseif pos:line="382" pos:column="17">else <if pos:line="382" pos:column="22">if <condition pos:line="382" pos:column="25">(<expr><call><name pos:line="382" pos:column="26">strcmp<pos:position pos:line="382" pos:column="32"/></name><argument_list pos:line="382" pos:column="32">(<argument><expr><name pos:line="382" pos:column="33">name<pos:position pos:line="382" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="382" pos:column="39">"vsm_overflowed"<pos:position pos:line="382" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="382" pos:column="56"/></argument_list></call> <operator pos:line="382" pos:column="57">==<pos:position pos:line="382" pos:column="59"/></operator> <literal type="number" pos:line="382" pos:column="60">0<pos:position pos:line="382" pos:column="61"/></literal></expr>)<pos:position pos:line="382" pos:column="62"/></condition><then pos:line="382" pos:column="62">
			<block type="pseudo"><return pos:line="383" pos:column="25">return <expr><call><name pos:line="383" pos:column="32">varnish_submit_derive<pos:position pos:line="383" pos:column="53"/></name> <argument_list pos:line="383" pos:column="54">(<argument><expr><name><name pos:line="383" pos:column="55">conf<pos:position pos:line="383" pos:column="59"/></name><operator pos:line="383" pos:column="59">-&gt;<pos:position pos:line="383" pos:column="64"/></operator><name pos:line="383" pos:column="61">instance<pos:position pos:line="383" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="383" pos:column="71">"vsm"<pos:position pos:line="383" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="383" pos:column="78">"total_bytes"<pos:position pos:line="383" pos:column="91"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="383" pos:column="93">"overflowed"<pos:position pos:line="383" pos:column="105"/></literal></expr></argument>, <argument><expr><name pos:line="383" pos:column="107">val<pos:position pos:line="383" pos:column="110"/></name></expr></argument>)<pos:position pos:line="383" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="112"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="384" pos:column="10"/></block></then></if>
<cpp:endif pos:line="385" pos:column="1">#<cpp:directive pos:line="385" pos:column="2">endif<pos:position pos:line="385" pos:column="7"/></cpp:directive></cpp:endif>

	<return pos:line="387" pos:column="9">return <expr><operator pos:line="387" pos:column="16">(<pos:position pos:line="387" pos:column="17"/></operator><literal type="number" pos:line="387" pos:column="17">0<pos:position pos:line="387" pos:column="18"/></literal><operator pos:line="387" pos:column="18">)<pos:position pos:line="387" pos:column="19"/></operator></expr>;<pos:position pos:line="387" pos:column="20"/></return>

}<pos:position pos:line="389" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_962_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">staging_entry_t<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">staging_entry_get<pos:position pos:line="1" pos:column="42"/></name> <parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">host<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="62">/* {{{ */</comment>
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">char<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">name<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">type<pos:position pos:line="3" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="23">const<pos:position pos:line="3" pos:column="28"/></specifier> <name pos:line="3" pos:column="29">char<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">type_instance<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">values_len<pos:position pos:line="4" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="20"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">key<pos:position pos:line="6" pos:column="11"/></name><index pos:line="6" pos:column="11">[<expr><literal type="number" pos:line="6" pos:column="12">2<pos:position pos:line="6" pos:column="13"/></literal> <operator pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">DATA_MAX_NAME_LEN<pos:position pos:line="6" pos:column="33"/></name></expr>]<pos:position pos:line="6" pos:column="34"/></index></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">staging_entry_t<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">se<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">status<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">staging_tree<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">==<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">NULL<pos:position pos:line="10" pos:column="27"/></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">NULL<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">)<pos:position pos:line="11" pos:column="18"/></operator></expr>;<pos:position pos:line="11" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">ssnprintf<pos:position pos:line="13" pos:column="12"/></name> <argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">key<pos:position pos:line="13" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="19">sizeof <argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">key<pos:position pos:line="13" pos:column="30"/></name></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="33">"%s/%s/%s"<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">host<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">type<pos:position pos:line="13" pos:column="55"/></name></expr></argument>,
      <argument><expr><ternary><condition><expr><operator pos:line="14" pos:column="7">(<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">type_instance<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">!=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">NULL<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">)<pos:position pos:line="14" pos:column="30"/></operator></expr> ?<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32"> <expr><name pos:line="14" pos:column="33">type_instance<pos:position pos:line="14" pos:column="46"/></name></expr> <pos:position pos:line="14" pos:column="47"/></then><else pos:line="14" pos:column="47">: <expr><literal type="string" pos:line="14" pos:column="49">""<pos:position pos:line="14" pos:column="51"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">se<pos:position pos:line="16" pos:column="5"/></name> <operator pos:line="16" pos:column="6">=<pos:position pos:line="16" pos:column="7"/></operator> <name pos:line="16" pos:column="8">NULL<pos:position pos:line="16" pos:column="12"/></name></expr>;<pos:position pos:line="16" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">status<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <call><name pos:line="17" pos:column="12">c_avl_get<pos:position pos:line="17" pos:column="21"/></name> <argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">staging_tree<pos:position pos:line="17" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="37">key<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="42">(<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">void<pos:position pos:line="17" pos:column="47"/></name> <operator pos:line="17" pos:column="48">*<pos:position pos:line="17" pos:column="49"/></operator><operator pos:line="17" pos:column="49">)<pos:position pos:line="17" pos:column="50"/></operator> <operator pos:line="17" pos:column="51">&amp;<pos:position pos:line="17" pos:column="56"/></operator><name pos:line="17" pos:column="52">se<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">status<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">==<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">se<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return></block></then></if>

  <comment type="block" pos:line="21" pos:column="3">/* insert new entry */</comment>
  <expr_stmt><expr><name pos:line="22" pos:column="3">se<pos:position pos:line="22" pos:column="5"/></name> <operator pos:line="22" pos:column="6">=<pos:position pos:line="22" pos:column="7"/></operator> <operator pos:line="22" pos:column="8">(<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">staging_entry_t<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">*<pos:position pos:line="22" pos:column="26"/></operator><operator pos:line="22" pos:column="26">)<pos:position pos:line="22" pos:column="27"/></operator> <call><name pos:line="22" pos:column="28">malloc<pos:position pos:line="22" pos:column="34"/></name> <argument_list pos:line="22" pos:column="35">(<argument><expr><sizeof pos:line="22" pos:column="36">sizeof <argument_list pos:line="22" pos:column="43">(<argument><expr><operator pos:line="22" pos:column="44">*<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="45">se<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">se<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">==<pos:position pos:line="23" pos:column="12"/></operator> <name pos:line="23" pos:column="13">NULL<pos:position pos:line="23" pos:column="17"/></name></expr>)<pos:position pos:line="23" pos:column="18"/></condition><then pos:line="23" pos:column="18">
    <block type="pseudo"><return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">NULL<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">)<pos:position pos:line="24" pos:column="18"/></operator></expr>;<pos:position pos:line="24" pos:column="19"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">memset<pos:position pos:line="25" pos:column="9"/></name> <argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">se<pos:position pos:line="25" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="15">0<pos:position pos:line="25" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="18">sizeof <argument_list pos:line="25" pos:column="25">(<argument><expr><operator pos:line="25" pos:column="26">*<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="27">se<pos:position pos:line="25" pos:column="29"/></name></expr></argument>)<pos:position pos:line="25" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">sstrncpy<pos:position pos:line="27" pos:column="11"/></name> <argument_list pos:line="27" pos:column="12">(<argument><expr><name><name pos:line="27" pos:column="13">se<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">key<pos:position pos:line="27" pos:column="20"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="22">key<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="27">sizeof <argument_list pos:line="27" pos:column="34">(<argument><expr><name><name pos:line="27" pos:column="35">se<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">key<pos:position pos:line="27" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">se<pos:position pos:line="28" pos:column="5"/></name><operator pos:line="28" pos:column="5">-&gt;<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="7">flags<pos:position pos:line="28" pos:column="12"/></name></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <literal type="number" pos:line="28" pos:column="15">0<pos:position pos:line="28" pos:column="16"/></literal></expr>;<pos:position pos:line="28" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="30" pos:column="3">se<pos:position pos:line="30" pos:column="5"/></name><operator pos:line="30" pos:column="5">-&gt;<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="7">vl<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">.<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">values<pos:position pos:line="30" pos:column="16"/></name></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <operator pos:line="30" pos:column="19">(<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">value_t<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">*<pos:position pos:line="30" pos:column="29"/></operator><operator pos:line="30" pos:column="29">)<pos:position pos:line="30" pos:column="30"/></operator> <call><name pos:line="30" pos:column="31">calloc<pos:position pos:line="30" pos:column="37"/></name> <argument_list pos:line="30" pos:column="38">(<argument><expr><name pos:line="30" pos:column="39">values_len<pos:position pos:line="30" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="51">sizeof <argument_list pos:line="30" pos:column="58">(<argument><expr><operator pos:line="30" pos:column="59">*<pos:position pos:line="30" pos:column="60"/></operator><name><name pos:line="30" pos:column="60">se<pos:position pos:line="30" pos:column="62"/></name><operator pos:line="30" pos:column="62">-&gt;<pos:position pos:line="30" pos:column="67"/></operator><name pos:line="30" pos:column="64">vl<pos:position pos:line="30" pos:column="66"/></name><operator pos:line="30" pos:column="66">.<pos:position pos:line="30" pos:column="67"/></operator><name pos:line="30" pos:column="67">values<pos:position pos:line="30" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="76"/></expr_stmt>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name><name pos:line="31" pos:column="7">se<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">vl<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">.<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">values<pos:position pos:line="31" pos:column="20"/></name></name> <operator pos:line="31" pos:column="21">==<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="24">NULL<pos:position pos:line="31" pos:column="28"/></name></expr>)<pos:position pos:line="31" pos:column="29"/></condition><then pos:line="31" pos:column="29">
  <block pos:line="32" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">sfree<pos:position pos:line="33" pos:column="10"/></name> <argument_list pos:line="33" pos:column="11">(<argument><expr><name pos:line="33" pos:column="12">se<pos:position pos:line="33" pos:column="14"/></name></expr></argument>)<pos:position pos:line="33" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="16"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="13">NULL<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">)<pos:position pos:line="34" pos:column="18"/></operator></expr>;<pos:position pos:line="34" pos:column="19"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="36" pos:column="3">se<pos:position pos:line="36" pos:column="5"/></name><operator pos:line="36" pos:column="5">-&gt;<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="7">vl<pos:position pos:line="36" pos:column="9"/></name><operator pos:line="36" pos:column="9">.<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">values_len<pos:position pos:line="36" pos:column="20"/></name></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">values_len<pos:position pos:line="36" pos:column="33"/></name></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="38" pos:column="3">se<pos:position pos:line="38" pos:column="5"/></name><operator pos:line="38" pos:column="5">-&gt;<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="7">vl<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">.<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">time<pos:position pos:line="38" pos:column="14"/></name></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <literal type="number" pos:line="38" pos:column="17">0<pos:position pos:line="38" pos:column="18"/></literal></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">se<pos:position pos:line="39" pos:column="5"/></name><operator pos:line="39" pos:column="5">-&gt;<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="7">vl<pos:position pos:line="39" pos:column="9"/></name><operator pos:line="39" pos:column="9">.<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">interval<pos:position pos:line="39" pos:column="18"/></name></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <literal type="number" pos:line="39" pos:column="21">0<pos:position pos:line="39" pos:column="22"/></literal></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">sstrncpy<pos:position pos:line="40" pos:column="11"/></name> <argument_list pos:line="40" pos:column="12">(<argument><expr><name><name pos:line="40" pos:column="13">se<pos:position pos:line="40" pos:column="15"/></name><operator pos:line="40" pos:column="15">-&gt;<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="17">vl<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">.<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">host<pos:position pos:line="40" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="26">host<pos:position pos:line="40" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="32">sizeof <argument_list pos:line="40" pos:column="39">(<argument><expr><name><name pos:line="40" pos:column="40">se<pos:position pos:line="40" pos:column="42"/></name><operator pos:line="40" pos:column="42">-&gt;<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="44">vl<pos:position pos:line="40" pos:column="46"/></name><operator pos:line="40" pos:column="46">.<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="47">host<pos:position pos:line="40" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">sstrncpy<pos:position pos:line="41" pos:column="11"/></name> <argument_list pos:line="41" pos:column="12">(<argument><expr><name><name pos:line="41" pos:column="13">se<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">vl<pos:position pos:line="41" pos:column="19"/></name><operator pos:line="41" pos:column="19">.<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="20">plugin<pos:position pos:line="41" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="28">"gmond"<pos:position pos:line="41" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="37">sizeof <argument_list pos:line="41" pos:column="44">(<argument><expr><name><name pos:line="41" pos:column="45">se<pos:position pos:line="41" pos:column="47"/></name><operator pos:line="41" pos:column="47">-&gt;<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="49">vl<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">.<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="52">plugin<pos:position pos:line="41" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">sstrncpy<pos:position pos:line="42" pos:column="11"/></name> <argument_list pos:line="42" pos:column="12">(<argument><expr><name><name pos:line="42" pos:column="13">se<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">-&gt;<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="17">vl<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">type<pos:position pos:line="42" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="26">type<pos:position pos:line="42" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="32">sizeof <argument_list pos:line="42" pos:column="39">(<argument><expr><name><name pos:line="42" pos:column="40">se<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">-&gt;<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="44">vl<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">.<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="47">type<pos:position pos:line="42" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>
  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><name pos:line="43" pos:column="7">type_instance<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">!=<pos:position pos:line="43" pos:column="23"/></operator> <name pos:line="43" pos:column="24">NULL<pos:position pos:line="43" pos:column="28"/></name></expr>)<pos:position pos:line="43" pos:column="29"/></condition><then pos:line="43" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="5">sstrncpy<pos:position pos:line="44" pos:column="13"/></name> <argument_list pos:line="44" pos:column="14">(<argument><expr><name><name pos:line="44" pos:column="15">se<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">-&gt;<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="19">vl<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">.<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">type_instance<pos:position pos:line="44" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="37">type_instance<pos:position pos:line="44" pos:column="50"/></name></expr></argument>,
        <argument><expr><sizeof pos:line="45" pos:column="9">sizeof <argument_list pos:line="45" pos:column="16">(<argument><expr><name><name pos:line="45" pos:column="17">se<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">-&gt;<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="21">vl<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">.<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">type_instance<pos:position pos:line="45" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="40"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="47" pos:column="3">status<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">=<pos:position pos:line="47" pos:column="11"/></operator> <call><name pos:line="47" pos:column="12">c_avl_insert<pos:position pos:line="47" pos:column="24"/></name> <argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">staging_tree<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="40">se<pos:position pos:line="47" pos:column="42"/></name><operator pos:line="47" pos:column="42">-&gt;<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="44">key<pos:position pos:line="47" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="49">se<pos:position pos:line="47" pos:column="51"/></name></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="53"/></expr_stmt>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name pos:line="48" pos:column="7">status<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">!=<pos:position pos:line="48" pos:column="16"/></operator> <literal type="number" pos:line="48" pos:column="17">0<pos:position pos:line="48" pos:column="18"/></literal></expr>)<pos:position pos:line="48" pos:column="19"/></condition><then pos:line="48" pos:column="19">
  <block pos:line="49" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">ERROR<pos:position pos:line="50" pos:column="10"/></name> <argument_list pos:line="50" pos:column="11">(<argument><expr><literal type="string" pos:line="50" pos:column="12">"gmond plugin: c_avl_insert failed."<pos:position pos:line="50" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">sfree<pos:position pos:line="51" pos:column="10"/></name> <argument_list pos:line="51" pos:column="11">(<argument><expr><name><name pos:line="51" pos:column="12">se<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">-&gt;<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="16">vl<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">.<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="19">values<pos:position pos:line="51" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">sfree<pos:position pos:line="52" pos:column="10"/></name> <argument_list pos:line="52" pos:column="11">(<argument><expr><name pos:line="52" pos:column="12">se<pos:position pos:line="52" pos:column="14"/></name></expr></argument>)<pos:position pos:line="52" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="16"/></expr_stmt>
    <return pos:line="53" pos:column="5">return <expr><operator pos:line="53" pos:column="12">(<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="13">NULL<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">)<pos:position pos:line="53" pos:column="18"/></operator></expr>;<pos:position pos:line="53" pos:column="19"/></return>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>

  <return pos:line="56" pos:column="3">return <expr><operator pos:line="56" pos:column="10">(<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="11">se<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">)<pos:position pos:line="56" pos:column="14"/></operator></expr>;<pos:position pos:line="56" pos:column="15"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

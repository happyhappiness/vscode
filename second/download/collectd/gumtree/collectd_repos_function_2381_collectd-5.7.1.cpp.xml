<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2381_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nb_add_values<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier><modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">ret_buffer<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="45">/* {{{ */</comment>
                         <parameter><decl><type><name pos:line="2" pos:column="26">size_t<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">ret_buffer_len<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <name pos:line="2" pos:column="56">lcc_value_list_t<pos:position pos:line="2" pos:column="72"/></name> <modifier pos:line="2" pos:column="73">*<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="74">vl<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list> <block pos:line="2" pos:column="78">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">packet_ptr<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">packet_len<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">uint16_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">pkg_type<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">uint16_t<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">pkg_length<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">uint16_t<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">pkg_num_values<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">uint8_t<pos:position pos:line="9" pos:column="10"/></name></type> <name><name pos:line="9" pos:column="11">pkg_values_types<pos:position pos:line="9" pos:column="27"/></name><index pos:line="9" pos:column="27">[<expr><name><name pos:line="9" pos:column="28">vl<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">values_len<pos:position pos:line="9" pos:column="42"/></name></name></expr>]<pos:position pos:line="9" pos:column="43"/></index></name></decl>;<pos:position pos:line="9" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">value_t<pos:position pos:line="10" pos:column="10"/></name></type> <name><name pos:line="10" pos:column="11">pkg_values<pos:position pos:line="10" pos:column="21"/></name><index pos:line="10" pos:column="21">[<expr><name><name pos:line="10" pos:column="22">vl<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">values_len<pos:position pos:line="10" pos:column="36"/></name></name></expr>]<pos:position pos:line="10" pos:column="37"/></index></name></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">offset<pos:position pos:line="12" pos:column="16"/></name></decl>;<pos:position pos:line="12" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">packet_len<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <sizeof pos:line="14" pos:column="16">sizeof<argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">pkg_type<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></sizeof> <operator pos:line="14" pos:column="33">+<pos:position pos:line="14" pos:column="34"/></operator> <sizeof pos:line="14" pos:column="35">sizeof<argument_list pos:line="14" pos:column="41">(<argument><expr><name pos:line="14" pos:column="42">pkg_length<pos:position pos:line="14" pos:column="52"/></name></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></sizeof> <operator pos:line="14" pos:column="54">+<pos:position pos:line="14" pos:column="55"/></operator> <sizeof pos:line="14" pos:column="56">sizeof<argument_list pos:line="14" pos:column="62">(<argument><expr><name pos:line="14" pos:column="63">pkg_num_values<pos:position pos:line="14" pos:column="77"/></name></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></sizeof> <operator pos:line="14" pos:column="79">+<pos:position pos:line="14" pos:column="80"/></operator>
               <sizeof pos:line="15" pos:column="16">sizeof<argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">pkg_values_types<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></sizeof> <operator pos:line="15" pos:column="41">+<pos:position pos:line="15" pos:column="42"/></operator> <sizeof pos:line="15" pos:column="43">sizeof<argument_list pos:line="15" pos:column="49">(<argument><expr><name pos:line="15" pos:column="50">pkg_values<pos:position pos:line="15" pos:column="60"/></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></sizeof></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">*<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">ret_buffer_len<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">&lt;<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="25">packet_len<pos:position pos:line="17" pos:column="35"/></name></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">ENOMEM<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">)<pos:position pos:line="18" pos:column="20"/></operator></expr>;<pos:position pos:line="18" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="20" pos:column="3">pkg_type<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name pos:line="20" pos:column="14">htons<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">TYPE_VALUES<pos:position pos:line="20" pos:column="31"/></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">pkg_length<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">htons<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><operator pos:line="21" pos:column="22">(<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">uint16_t<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">)<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="32">packet_len<pos:position pos:line="21" pos:column="42"/></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">pkg_num_values<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <call><name pos:line="22" pos:column="20">htons<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><operator pos:line="22" pos:column="26">(<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">uint16_t<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">)<pos:position pos:line="22" pos:column="36"/></operator><name><name pos:line="22" pos:column="36">vl<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">values_len<pos:position pos:line="22" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>

  <for pos:line="24" pos:column="3">for <control pos:line="24" pos:column="7">(<init><decl><type><name pos:line="24" pos:column="8">size_t<pos:position pos:line="24" pos:column="14"/></name></type> <name pos:line="24" pos:column="15">i<pos:position pos:line="24" pos:column="16"/></name> <init pos:line="24" pos:column="17">= <expr><literal type="number" pos:line="24" pos:column="19">0<pos:position pos:line="24" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="21"/></init> <condition><expr><name pos:line="24" pos:column="22">i<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">&lt;<pos:position pos:line="24" pos:column="28"/></operator> <name><name pos:line="24" pos:column="26">vl<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">-&gt;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="30">values_len<pos:position pos:line="24" pos:column="40"/></name></name></expr>;<pos:position pos:line="24" pos:column="41"/></condition> <incr><expr><name pos:line="24" pos:column="42">i<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">++<pos:position pos:line="24" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="46"/></control> <block pos:line="24" pos:column="47">{
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">pkg_values_types<pos:position pos:line="25" pos:column="21"/></name><index pos:line="25" pos:column="21">[<expr><name pos:line="25" pos:column="22">i<pos:position pos:line="25" pos:column="23"/></name></expr>]<pos:position pos:line="25" pos:column="24"/></index></name> <operator pos:line="25" pos:column="25">=<pos:position pos:line="25" pos:column="26"/></operator> <operator pos:line="25" pos:column="27">(<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">uint8_t<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">)<pos:position pos:line="25" pos:column="36"/></operator><name><name pos:line="25" pos:column="36">vl<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">values_types<pos:position pos:line="25" pos:column="52"/></name><index pos:line="25" pos:column="52">[<expr><name pos:line="25" pos:column="53">i<pos:position pos:line="25" pos:column="54"/></name></expr>]<pos:position pos:line="25" pos:column="55"/></index></name></expr>;<pos:position pos:line="25" pos:column="56"/></expr_stmt>
    <switch pos:line="26" pos:column="5">switch <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">vl<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">values_types<pos:position pos:line="26" pos:column="29"/></name><index pos:line="26" pos:column="29">[<expr><name pos:line="26" pos:column="30">i<pos:position pos:line="26" pos:column="31"/></name></expr>]<pos:position pos:line="26" pos:column="32"/></index></name></expr>)<pos:position pos:line="26" pos:column="33"/></condition> <block pos:line="26" pos:column="34">{
    <case pos:line="27" pos:column="5">case <expr><name pos:line="27" pos:column="10">LCC_TYPE_COUNTER<pos:position pos:line="27" pos:column="26"/></name></expr>:<pos:position pos:line="27" pos:column="27"/></case>
      <expr_stmt><expr><name><name pos:line="28" pos:column="7">pkg_values<pos:position pos:line="28" pos:column="17"/></name><index pos:line="28" pos:column="17">[<expr><name pos:line="28" pos:column="18">i<pos:position pos:line="28" pos:column="19"/></name></expr>]<pos:position pos:line="28" pos:column="20"/></index></name><operator pos:line="28" pos:column="20">.<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">counter<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <operator pos:line="28" pos:column="31">(<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="32">counter_t<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">)<pos:position pos:line="28" pos:column="42"/></operator><call><name pos:line="28" pos:column="42">htonll<pos:position pos:line="28" pos:column="48"/></name><argument_list pos:line="28" pos:column="48">(<argument><expr><name><name pos:line="28" pos:column="49">vl<pos:position pos:line="28" pos:column="51"/></name><operator pos:line="28" pos:column="51">-&gt;<pos:position pos:line="28" pos:column="56"/></operator><name pos:line="28" pos:column="53">values<pos:position pos:line="28" pos:column="59"/></name><index pos:line="28" pos:column="59">[<expr><name pos:line="28" pos:column="60">i<pos:position pos:line="28" pos:column="61"/></name></expr>]<pos:position pos:line="28" pos:column="62"/></index></name><operator pos:line="28" pos:column="62">.<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="63">counter<pos:position pos:line="28" pos:column="70"/></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="72"/></expr_stmt>
      <break pos:line="29" pos:column="7">break;<pos:position pos:line="29" pos:column="13"/></break>

    <case pos:line="31" pos:column="5">case <expr><name pos:line="31" pos:column="10">LCC_TYPE_GAUGE<pos:position pos:line="31" pos:column="24"/></name></expr>:<pos:position pos:line="31" pos:column="25"/></case>
      <expr_stmt><expr><name><name pos:line="32" pos:column="7">pkg_values<pos:position pos:line="32" pos:column="17"/></name><index pos:line="32" pos:column="17">[<expr><name pos:line="32" pos:column="18">i<pos:position pos:line="32" pos:column="19"/></name></expr>]<pos:position pos:line="32" pos:column="20"/></index></name><operator pos:line="32" pos:column="20">.<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">gauge<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">=<pos:position pos:line="32" pos:column="28"/></operator> <operator pos:line="32" pos:column="29">(<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">gauge_t<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">)<pos:position pos:line="32" pos:column="38"/></operator><call><name pos:line="32" pos:column="38">htond<pos:position pos:line="32" pos:column="43"/></name><argument_list pos:line="32" pos:column="43">(<argument><expr><name><name pos:line="32" pos:column="44">vl<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">-&gt;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="48">values<pos:position pos:line="32" pos:column="54"/></name><index pos:line="32" pos:column="54">[<expr><name pos:line="32" pos:column="55">i<pos:position pos:line="32" pos:column="56"/></name></expr>]<pos:position pos:line="32" pos:column="57"/></index></name><operator pos:line="32" pos:column="57">.<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="58">gauge<pos:position pos:line="32" pos:column="63"/></name></expr></argument>)<pos:position pos:line="32" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="65"/></expr_stmt>
      <break pos:line="33" pos:column="7">break;<pos:position pos:line="33" pos:column="13"/></break>

    <case pos:line="35" pos:column="5">case <expr><name pos:line="35" pos:column="10">LCC_TYPE_DERIVE<pos:position pos:line="35" pos:column="25"/></name></expr>:<pos:position pos:line="35" pos:column="26"/></case>
      <expr_stmt><expr><name><name pos:line="36" pos:column="7">pkg_values<pos:position pos:line="36" pos:column="17"/></name><index pos:line="36" pos:column="17">[<expr><name pos:line="36" pos:column="18">i<pos:position pos:line="36" pos:column="19"/></name></expr>]<pos:position pos:line="36" pos:column="20"/></index></name><operator pos:line="36" pos:column="20">.<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">derive<pos:position pos:line="36" pos:column="27"/></name> <operator pos:line="36" pos:column="28">=<pos:position pos:line="36" pos:column="29"/></operator> <operator pos:line="36" pos:column="30">(<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="31">derive_t<pos:position pos:line="36" pos:column="39"/></name><operator pos:line="36" pos:column="39">)<pos:position pos:line="36" pos:column="40"/></operator><call><name pos:line="36" pos:column="40">htonll<pos:position pos:line="36" pos:column="46"/></name><argument_list pos:line="36" pos:column="46">(<argument><expr><name><name pos:line="36" pos:column="47">vl<pos:position pos:line="36" pos:column="49"/></name><operator pos:line="36" pos:column="49">-&gt;<pos:position pos:line="36" pos:column="54"/></operator><name pos:line="36" pos:column="51">values<pos:position pos:line="36" pos:column="57"/></name><index pos:line="36" pos:column="57">[<expr><name pos:line="36" pos:column="58">i<pos:position pos:line="36" pos:column="59"/></name></expr>]<pos:position pos:line="36" pos:column="60"/></index></name><operator pos:line="36" pos:column="60">.<pos:position pos:line="36" pos:column="61"/></operator><name pos:line="36" pos:column="61">derive<pos:position pos:line="36" pos:column="67"/></name></expr></argument>)<pos:position pos:line="36" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="69"/></expr_stmt>
      <break pos:line="37" pos:column="7">break;<pos:position pos:line="37" pos:column="13"/></break>

    <case pos:line="39" pos:column="5">case <expr><name pos:line="39" pos:column="10">LCC_TYPE_ABSOLUTE<pos:position pos:line="39" pos:column="27"/></name></expr>:<pos:position pos:line="39" pos:column="28"/></case>
      <expr_stmt><expr><name><name pos:line="40" pos:column="7">pkg_values<pos:position pos:line="40" pos:column="17"/></name><index pos:line="40" pos:column="17">[<expr><name pos:line="40" pos:column="18">i<pos:position pos:line="40" pos:column="19"/></name></expr>]<pos:position pos:line="40" pos:column="20"/></index></name><operator pos:line="40" pos:column="20">.<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">absolute<pos:position pos:line="40" pos:column="29"/></name> <operator pos:line="40" pos:column="30">=<pos:position pos:line="40" pos:column="31"/></operator> <operator pos:line="40" pos:column="32">(<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="33">absolute_t<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">)<pos:position pos:line="40" pos:column="44"/></operator><call><name pos:line="40" pos:column="44">htonll<pos:position pos:line="40" pos:column="50"/></name><argument_list pos:line="40" pos:column="50">(<argument><expr><name><name pos:line="40" pos:column="51">vl<pos:position pos:line="40" pos:column="53"/></name><operator pos:line="40" pos:column="53">-&gt;<pos:position pos:line="40" pos:column="58"/></operator><name pos:line="40" pos:column="55">values<pos:position pos:line="40" pos:column="61"/></name><index pos:line="40" pos:column="61">[<expr><name pos:line="40" pos:column="62">i<pos:position pos:line="40" pos:column="63"/></name></expr>]<pos:position pos:line="40" pos:column="64"/></index></name><operator pos:line="40" pos:column="64">.<pos:position pos:line="40" pos:column="65"/></operator><name pos:line="40" pos:column="65">absolute<pos:position pos:line="40" pos:column="73"/></name></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="75"/></expr_stmt>
      <break pos:line="41" pos:column="7">break;<pos:position pos:line="41" pos:column="13"/></break>

    <default pos:line="43" pos:column="5">default:<pos:position pos:line="43" pos:column="13"/></default>
      <return pos:line="44" pos:column="7">return <expr><operator pos:line="44" pos:column="14">(<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">EINVAL<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">)<pos:position pos:line="44" pos:column="22"/></operator></expr>;<pos:position pos:line="44" pos:column="23"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></switch> <comment type="block" pos:line="45" pos:column="7">/* switch (vl-&gt;values_types[i]) */</comment>
  }<pos:position pos:line="46" pos:column="4"/></block></for>   <comment type="block" pos:line="46" pos:column="7">/* for (vl-&gt;values_len) */</comment>

  <comment type="block" pos:line="48" pos:column="3">/*
   * Use `memcpy' to write everything to the buffer, because the pointer
   * may be unaligned and some architectures, such as SPARC, can't handle
   * that.
   */</comment>
  <expr_stmt><expr><name pos:line="53" pos:column="3">packet_ptr<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <operator pos:line="53" pos:column="16">*<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="17">ret_buffer<pos:position pos:line="53" pos:column="27"/></name></expr>;<pos:position pos:line="53" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="54" pos:column="3">offset<pos:position pos:line="54" pos:column="9"/></name> <operator pos:line="54" pos:column="10">=<pos:position pos:line="54" pos:column="11"/></operator> <literal type="number" pos:line="54" pos:column="12">0<pos:position pos:line="54" pos:column="13"/></literal></expr>;<pos:position pos:line="54" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">memcpy<pos:position pos:line="55" pos:column="9"/></name><argument_list pos:line="55" pos:column="9">(<argument><expr><name pos:line="55" pos:column="10">packet_ptr<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">+<pos:position pos:line="55" pos:column="22"/></operator> <name pos:line="55" pos:column="23">offset<pos:position pos:line="55" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="31">&amp;<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="32">pkg_type<pos:position pos:line="55" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="42">sizeof<argument_list pos:line="55" pos:column="48">(<argument><expr><name pos:line="55" pos:column="49">pkg_type<pos:position pos:line="55" pos:column="57"/></name></expr></argument>)<pos:position pos:line="55" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><name pos:line="56" pos:column="3">offset<pos:position pos:line="56" pos:column="9"/></name> <operator pos:line="56" pos:column="10">+=<pos:position pos:line="56" pos:column="12"/></operator> <sizeof pos:line="56" pos:column="13">sizeof<argument_list pos:line="56" pos:column="19">(<argument><expr><name pos:line="56" pos:column="20">pkg_type<pos:position pos:line="56" pos:column="28"/></name></expr></argument>)<pos:position pos:line="56" pos:column="29"/></argument_list></sizeof></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">memcpy<pos:position pos:line="57" pos:column="9"/></name><argument_list pos:line="57" pos:column="9">(<argument><expr><name pos:line="57" pos:column="10">packet_ptr<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">+<pos:position pos:line="57" pos:column="22"/></operator> <name pos:line="57" pos:column="23">offset<pos:position pos:line="57" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="31">&amp;<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="32">pkg_length<pos:position pos:line="57" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="44">sizeof<argument_list pos:line="57" pos:column="50">(<argument><expr><name pos:line="57" pos:column="51">pkg_length<pos:position pos:line="57" pos:column="61"/></name></expr></argument>)<pos:position pos:line="57" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><name pos:line="58" pos:column="3">offset<pos:position pos:line="58" pos:column="9"/></name> <operator pos:line="58" pos:column="10">+=<pos:position pos:line="58" pos:column="12"/></operator> <sizeof pos:line="58" pos:column="13">sizeof<argument_list pos:line="58" pos:column="19">(<argument><expr><name pos:line="58" pos:column="20">pkg_length<pos:position pos:line="58" pos:column="30"/></name></expr></argument>)<pos:position pos:line="58" pos:column="31"/></argument_list></sizeof></expr>;<pos:position pos:line="58" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="59" pos:column="3">memcpy<pos:position pos:line="59" pos:column="9"/></name><argument_list pos:line="59" pos:column="9">(<argument><expr><name pos:line="59" pos:column="10">packet_ptr<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">+<pos:position pos:line="59" pos:column="22"/></operator> <name pos:line="59" pos:column="23">offset<pos:position pos:line="59" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="31">&amp;<pos:position pos:line="59" pos:column="36"/></operator><name pos:line="59" pos:column="32">pkg_num_values<pos:position pos:line="59" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="48">sizeof<argument_list pos:line="59" pos:column="54">(<argument><expr><name pos:line="59" pos:column="55">pkg_num_values<pos:position pos:line="59" pos:column="69"/></name></expr></argument>)<pos:position pos:line="59" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="59" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><name pos:line="60" pos:column="3">offset<pos:position pos:line="60" pos:column="9"/></name> <operator pos:line="60" pos:column="10">+=<pos:position pos:line="60" pos:column="12"/></operator> <sizeof pos:line="60" pos:column="13">sizeof<argument_list pos:line="60" pos:column="19">(<argument><expr><name pos:line="60" pos:column="20">pkg_num_values<pos:position pos:line="60" pos:column="34"/></name></expr></argument>)<pos:position pos:line="60" pos:column="35"/></argument_list></sizeof></expr>;<pos:position pos:line="60" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="61" pos:column="3">memcpy<pos:position pos:line="61" pos:column="9"/></name><argument_list pos:line="61" pos:column="9">(<argument><expr><name pos:line="61" pos:column="10">packet_ptr<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">+<pos:position pos:line="61" pos:column="22"/></operator> <name pos:line="61" pos:column="23">offset<pos:position pos:line="61" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="31">pkg_values_types<pos:position pos:line="61" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="49">sizeof<argument_list pos:line="61" pos:column="55">(<argument><expr><name pos:line="61" pos:column="56">pkg_values_types<pos:position pos:line="61" pos:column="72"/></name></expr></argument>)<pos:position pos:line="61" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="61" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="75"/></expr_stmt>
  <expr_stmt><expr><name pos:line="62" pos:column="3">offset<pos:position pos:line="62" pos:column="9"/></name> <operator pos:line="62" pos:column="10">+=<pos:position pos:line="62" pos:column="12"/></operator> <sizeof pos:line="62" pos:column="13">sizeof<argument_list pos:line="62" pos:column="19">(<argument><expr><name pos:line="62" pos:column="20">pkg_values_types<pos:position pos:line="62" pos:column="36"/></name></expr></argument>)<pos:position pos:line="62" pos:column="37"/></argument_list></sizeof></expr>;<pos:position pos:line="62" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="63" pos:column="3">memcpy<pos:position pos:line="63" pos:column="9"/></name><argument_list pos:line="63" pos:column="9">(<argument><expr><name pos:line="63" pos:column="10">packet_ptr<pos:position pos:line="63" pos:column="20"/></name> <operator pos:line="63" pos:column="21">+<pos:position pos:line="63" pos:column="22"/></operator> <name pos:line="63" pos:column="23">offset<pos:position pos:line="63" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="31">pkg_values<pos:position pos:line="63" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="63" pos:column="43">sizeof<argument_list pos:line="63" pos:column="49">(<argument><expr><name pos:line="63" pos:column="50">pkg_values<pos:position pos:line="63" pos:column="60"/></name></expr></argument>)<pos:position pos:line="63" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="63" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><name pos:line="64" pos:column="3">offset<pos:position pos:line="64" pos:column="9"/></name> <operator pos:line="64" pos:column="10">+=<pos:position pos:line="64" pos:column="12"/></operator> <sizeof pos:line="64" pos:column="13">sizeof<argument_list pos:line="64" pos:column="19">(<argument><expr><name pos:line="64" pos:column="20">pkg_values<pos:position pos:line="64" pos:column="30"/></name></expr></argument>)<pos:position pos:line="64" pos:column="31"/></argument_list></sizeof></expr>;<pos:position pos:line="64" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="66" pos:column="3">assert<pos:position pos:line="66" pos:column="9"/></name><argument_list pos:line="66" pos:column="9">(<argument><expr><name pos:line="66" pos:column="10">offset<pos:position pos:line="66" pos:column="16"/></name> <operator pos:line="66" pos:column="17">==<pos:position pos:line="66" pos:column="19"/></operator> <name pos:line="66" pos:column="20">packet_len<pos:position pos:line="66" pos:column="30"/></name></expr></argument>)<pos:position pos:line="66" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="68" pos:column="3">*<pos:position pos:line="68" pos:column="4"/></operator><name pos:line="68" pos:column="4">ret_buffer<pos:position pos:line="68" pos:column="14"/></name> <operator pos:line="68" pos:column="15">=<pos:position pos:line="68" pos:column="16"/></operator> <name pos:line="68" pos:column="17">packet_ptr<pos:position pos:line="68" pos:column="27"/></name> <operator pos:line="68" pos:column="28">+<pos:position pos:line="68" pos:column="29"/></operator> <name pos:line="68" pos:column="30">packet_len<pos:position pos:line="68" pos:column="40"/></name></expr>;<pos:position pos:line="68" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="69" pos:column="3">*<pos:position pos:line="69" pos:column="4"/></operator><name pos:line="69" pos:column="4">ret_buffer_len<pos:position pos:line="69" pos:column="18"/></name> <operator pos:line="69" pos:column="19">-=<pos:position pos:line="69" pos:column="21"/></operator> <name pos:line="69" pos:column="22">packet_len<pos:position pos:line="69" pos:column="32"/></name></expr>;<pos:position pos:line="69" pos:column="33"/></expr_stmt>
  <return pos:line="70" pos:column="3">return <expr><operator pos:line="70" pos:column="10">(<pos:position pos:line="70" pos:column="11"/></operator><literal type="number" pos:line="70" pos:column="11">0<pos:position pos:line="70" pos:column="12"/></literal><operator pos:line="70" pos:column="12">)<pos:position pos:line="70" pos:column="13"/></operator></expr>;<pos:position pos:line="70" pos:column="14"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

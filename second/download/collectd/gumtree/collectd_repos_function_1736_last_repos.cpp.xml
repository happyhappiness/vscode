<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1736_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ovs_db_table_update_cb<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">ovs_db_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">pdb<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">yajl_val<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">jnode<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list> <block pos:line="1" pos:column="66">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">ovs_callback_t<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">cb<pos:position pos:line="2" pos:column="21"/></name> <init pos:line="2" pos:column="22">= <expr><name pos:line="2" pos:column="24">NULL<pos:position pos:line="2" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">yajl_val<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">jvalue<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">yajl_val<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">jparams<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">yajl_val<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">jtable_updates<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name><name pos:line="6" pos:column="15">params_path<pos:position pos:line="6" pos:column="26"/></name><index pos:line="6" pos:column="26">[]<pos:position pos:line="6" pos:column="28"/></index></name> <init pos:line="6" pos:column="29">= <expr><block pos:line="6" pos:column="31">{<expr><literal type="string" pos:line="6" pos:column="32">"params"<pos:position pos:line="6" pos:column="40"/></literal></expr>, <expr><name pos:line="6" pos:column="42">NULL<pos:position pos:line="6" pos:column="46"/></name></expr>}<pos:position pos:line="6" pos:column="47"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name><name pos:line="7" pos:column="15">id_path<pos:position pos:line="7" pos:column="22"/></name><index pos:line="7" pos:column="22">[]<pos:position pos:line="7" pos:column="24"/></index></name> <init pos:line="7" pos:column="25">= <expr><block pos:line="7" pos:column="27">{<expr><literal type="string" pos:line="7" pos:column="28">"id"<pos:position pos:line="7" pos:column="32"/></literal></expr>, <expr><name pos:line="7" pos:column="34">NULL<pos:position pos:line="7" pos:column="38"/></name></expr>}<pos:position pos:line="7" pos:column="39"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* check &amp; get request attributes */</comment>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">jparams<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <call><name pos:line="10" pos:column="18">yajl_tree_get<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">jnode<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">params_path<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">yajl_t_array<pos:position pos:line="10" pos:column="64"/></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call><operator pos:line="10" pos:column="65">)<pos:position pos:line="10" pos:column="66"/></operator> <operator pos:line="10" pos:column="67">==<pos:position pos:line="10" pos:column="69"/></operator> <name pos:line="10" pos:column="70">NULL<pos:position pos:line="10" pos:column="74"/></name> <operator pos:line="10" pos:column="75">||<pos:position pos:line="10" pos:column="77"/></operator>
      <operator pos:line="11" pos:column="7">(<pos:position pos:line="11" pos:column="8"/></operator><call><name pos:line="11" pos:column="8">yajl_tree_get<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">jnode<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="29">id_path<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="38">yajl_t_null<pos:position pos:line="11" pos:column="49"/></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call> <operator pos:line="11" pos:column="51">==<pos:position pos:line="11" pos:column="53"/></operator> <name pos:line="11" pos:column="54">NULL<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">)<pos:position pos:line="11" pos:column="59"/></operator></expr>)<pos:position pos:line="11" pos:column="60"/></condition><then pos:line="11" pos:column="60"> <block pos:line="11" pos:column="61">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">OVS_ERROR<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><literal type="string" pos:line="12" pos:column="15">"invalid OVS DB request received"<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="16" pos:column="3">/* check array length: [&lt;json-value&gt;, &lt;table-updates&gt;] */</comment>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><call><name pos:line="17" pos:column="8">YAJL_GET_ARRAY<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">jparams<pos:position pos:line="17" pos:column="30"/></name></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call> <operator pos:line="17" pos:column="32">==<pos:position pos:line="17" pos:column="34"/></operator> <name pos:line="17" pos:column="35">NULL<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">)<pos:position pos:line="17" pos:column="40"/></operator> <operator pos:line="17" pos:column="41">||<pos:position pos:line="17" pos:column="43"/></operator>
      <operator pos:line="18" pos:column="7">(<pos:position pos:line="18" pos:column="8"/></operator><call><name pos:line="18" pos:column="8">YAJL_GET_ARRAY<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">jparams<pos:position pos:line="18" pos:column="30"/></name></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">len<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">!=<pos:position pos:line="18" pos:column="39"/></operator> <literal type="number" pos:line="18" pos:column="40">2<pos:position pos:line="18" pos:column="41"/></literal><operator pos:line="18" pos:column="41">)<pos:position pos:line="18" pos:column="42"/></operator></expr>)<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43"> <block pos:line="18" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">OVS_ERROR<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><literal type="string" pos:line="19" pos:column="15">"invalid OVS DB request received"<pos:position pos:line="19" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">-<pos:position pos:line="20" pos:column="13"/></operator><literal type="number" pos:line="20" pos:column="13">1<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="23" pos:column="3">jvalue<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <call><name pos:line="23" pos:column="12">YAJL_GET_ARRAY<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">jparams<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call><operator pos:line="23" pos:column="35">-&gt;<pos:position pos:line="23" pos:column="40"/></operator><name><name pos:line="23" pos:column="37">values<pos:position pos:line="23" pos:column="43"/></name><index pos:line="23" pos:column="43">[<expr><literal type="number" pos:line="23" pos:column="44">0<pos:position pos:line="23" pos:column="45"/></literal></expr>]<pos:position pos:line="23" pos:column="46"/></index></name></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name pos:line="24" pos:column="3">jtable_updates<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <call><name pos:line="24" pos:column="20">YAJL_GET_ARRAY<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">jparams<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call><operator pos:line="24" pos:column="43">-&gt;<pos:position pos:line="24" pos:column="48"/></operator><name><name pos:line="24" pos:column="45">values<pos:position pos:line="24" pos:column="51"/></name><index pos:line="24" pos:column="51">[<expr><literal type="number" pos:line="24" pos:column="52">1<pos:position pos:line="24" pos:column="53"/></literal></expr>]<pos:position pos:line="24" pos:column="54"/></index></name></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><operator pos:line="25" pos:column="7">(<pos:position pos:line="25" pos:column="8"/></operator><operator pos:line="25" pos:column="8">!<pos:position pos:line="25" pos:column="9"/></operator><call><name pos:line="25" pos:column="9">YAJL_IS_OBJECT<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name pos:line="25" pos:column="24">jtable_updates<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call><operator pos:line="25" pos:column="39">)<pos:position pos:line="25" pos:column="40"/></operator> <operator pos:line="25" pos:column="41">||<pos:position pos:line="25" pos:column="43"/></operator> <operator pos:line="25" pos:column="44">(<pos:position pos:line="25" pos:column="45"/></operator><operator pos:line="25" pos:column="45">!<pos:position pos:line="25" pos:column="46"/></operator><call><name pos:line="25" pos:column="46">YAJL_IS_STRING<pos:position pos:line="25" pos:column="60"/></name><argument_list pos:line="25" pos:column="60">(<argument><expr><name pos:line="25" pos:column="61">jvalue<pos:position pos:line="25" pos:column="67"/></name></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call><operator pos:line="25" pos:column="68">)<pos:position pos:line="25" pos:column="69"/></operator></expr>)<pos:position pos:line="25" pos:column="70"/></condition><then pos:line="25" pos:column="70"> <block pos:line="25" pos:column="71">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">OVS_ERROR<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><literal type="string" pos:line="26" pos:column="15">"invalid OVS DB request id or table update received"<pos:position pos:line="26" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="69"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">-<pos:position pos:line="27" pos:column="13"/></operator><literal type="number" pos:line="27" pos:column="13">1<pos:position pos:line="27" pos:column="14"/></literal></expr>;<pos:position pos:line="27" pos:column="15"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/* find registered callback based on &lt;json-value&gt; */</comment>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">pthread_mutex_lock<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><operator pos:line="31" pos:column="22">&amp;<pos:position pos:line="31" pos:column="27"/></operator><name><name pos:line="31" pos:column="23">pdb<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">-&gt;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="28">mutex<pos:position pos:line="31" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="32" pos:column="3">cb<pos:position pos:line="32" pos:column="5"/></name> <operator pos:line="32" pos:column="6">=<pos:position pos:line="32" pos:column="7"/></operator> <call><name pos:line="32" pos:column="8">ovs_db_table_callback_get<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">pdb<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="39">jvalue<pos:position pos:line="32" pos:column="45"/></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="47"/></expr_stmt>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name pos:line="33" pos:column="7">cb<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">==<pos:position pos:line="33" pos:column="12"/></operator> <name pos:line="33" pos:column="13">NULL<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">||<pos:position pos:line="33" pos:column="20"/></operator> <name><name pos:line="33" pos:column="21">cb<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">-&gt;<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="25">table<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">.<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="31">call<pos:position pos:line="33" pos:column="35"/></name></name> <operator pos:line="33" pos:column="36">==<pos:position pos:line="33" pos:column="38"/></operator> <name pos:line="33" pos:column="39">NULL<pos:position pos:line="33" pos:column="43"/></name></expr>)<pos:position pos:line="33" pos:column="44"/></condition><then pos:line="33" pos:column="44"> <block pos:line="33" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">OVS_ERROR<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><literal type="string" pos:line="34" pos:column="15">"No OVS DB table update callback found"<pos:position pos:line="34" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">pthread_mutex_unlock<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><operator pos:line="35" pos:column="26">&amp;<pos:position pos:line="35" pos:column="31"/></operator><name><name pos:line="35" pos:column="27">pdb<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">-&gt;<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="32">mutex<pos:position pos:line="35" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">-<pos:position pos:line="36" pos:column="13"/></operator><literal type="number" pos:line="36" pos:column="13">1<pos:position pos:line="36" pos:column="14"/></literal></expr>;<pos:position pos:line="36" pos:column="15"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="39" pos:column="3">/* call registered callback */</comment>
  <expr_stmt><expr><call><name><name pos:line="40" pos:column="3">cb<pos:position pos:line="40" pos:column="5"/></name><operator pos:line="40" pos:column="5">-&gt;<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="7">table<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">.<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">call<pos:position pos:line="40" pos:column="17"/></name></name><argument_list pos:line="40" pos:column="17">(<argument><expr><name pos:line="40" pos:column="18">jtable_updates<pos:position pos:line="40" pos:column="32"/></name></expr></argument>)<pos:position pos:line="40" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">pthread_mutex_unlock<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><operator pos:line="41" pos:column="24">&amp;<pos:position pos:line="41" pos:column="29"/></operator><name><name pos:line="41" pos:column="25">pdb<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">-&gt;<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="30">mutex<pos:position pos:line="41" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>
  <return pos:line="42" pos:column="3">return <expr><literal type="number" pos:line="42" pos:column="10">0<pos:position pos:line="42" pos:column="11"/></literal></expr>;<pos:position pos:line="42" pos:column="12"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_410_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">numa_init<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list> <comment type="block" pos:line="1" pos:column="29">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* Determine the number of nodes on this machine. */</comment>
  <while pos:line="4" pos:column="3">while <condition pos:line="4" pos:column="9">(<expr><literal type="number" pos:line="4" pos:column="10">42<pos:position pos:line="4" pos:column="12"/></literal></expr>)<pos:position pos:line="4" pos:column="13"/></condition>
  <block pos:line="5" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">path<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><name pos:line="6" pos:column="15">PATH_MAX<pos:position pos:line="6" pos:column="23"/></name></expr>]<pos:position pos:line="6" pos:column="24"/></index></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">stat<pos:position pos:line="7" pos:column="16"/></name></name></type> <name pos:line="7" pos:column="17">statbuf<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">status<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ssnprintf<pos:position pos:line="10" pos:column="14"/></name> <argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">path<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="22">sizeof <argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">path<pos:position pos:line="10" pos:column="34"/></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="10" pos:column="37">NUMA_ROOT_DIR<pos:position pos:line="10" pos:column="50"/></name> <literal type="string" pos:line="10" pos:column="51">"/node%i"<pos:position pos:line="10" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="62">max_node<pos:position pos:line="10" pos:column="70"/></name> <operator pos:line="10" pos:column="71">+<pos:position pos:line="10" pos:column="72"/></operator> <literal type="number" pos:line="10" pos:column="73">1<pos:position pos:line="10" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">memset<pos:position pos:line="11" pos:column="11"/></name> <argument_list pos:line="11" pos:column="12">(<argument><expr><operator pos:line="11" pos:column="13">&amp;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="14">statbuf<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="26">sizeof <argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">statbuf<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">status<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">stat<pos:position pos:line="13" pos:column="18"/></name> <argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">path<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="26">&amp;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="27">statbuf<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">status<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">==<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21">
    <block pos:line="15" pos:column="5">{
      <expr_stmt><expr><name pos:line="16" pos:column="7">max_node<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">++<pos:position pos:line="16" pos:column="17"/></operator></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>
      <continue pos:line="17" pos:column="7">continue;<pos:position pos:line="17" pos:column="16"/></continue>
    }<pos:position pos:line="18" pos:column="6"/></block></then>
    <elseif pos:line="19" pos:column="5">else <if pos:line="19" pos:column="10">if <condition pos:line="19" pos:column="13">(<expr><name pos:line="19" pos:column="14">errno<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">==<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">ENOENT<pos:position pos:line="19" pos:column="29"/></name></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30">
    <block pos:line="20" pos:column="5">{
      <break pos:line="21" pos:column="7">break;<pos:position pos:line="21" pos:column="13"/></break>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if></elseif>
    <else pos:line="23" pos:column="5">else <comment type="block" pos:line="23" pos:column="10">/* ((status != 0) &amp;&amp; (errno != ENOENT)) */</comment>
    <block pos:line="24" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="25" pos:column="7">char<pos:position pos:line="25" pos:column="11"/></name></type> <name><name pos:line="25" pos:column="12">errbuf<pos:position pos:line="25" pos:column="18"/></name><index pos:line="25" pos:column="18">[<expr><literal type="number" pos:line="25" pos:column="19">1024<pos:position pos:line="25" pos:column="23"/></literal></expr>]<pos:position pos:line="25" pos:column="24"/></index></name></decl>;<pos:position pos:line="25" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">ERROR<pos:position pos:line="26" pos:column="12"/></name> <argument_list pos:line="26" pos:column="13">(<argument><expr><literal type="string" pos:line="26" pos:column="14">"numa plugin: stat(%s) failed: %s"<pos:position pos:line="26" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="50">path<pos:position pos:line="26" pos:column="54"/></name></expr></argument>,
          <argument><expr><call><name pos:line="27" pos:column="11">sstrerror<pos:position pos:line="27" pos:column="20"/></name> <argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">errno<pos:position pos:line="27" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="29">errbuf<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="37">sizeof <argument_list pos:line="27" pos:column="44">(<argument><expr><name pos:line="27" pos:column="45">errbuf<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>
      <return pos:line="28" pos:column="7">return <expr><operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><operator pos:line="28" pos:column="15">-<pos:position pos:line="28" pos:column="16"/></operator><literal type="number" pos:line="28" pos:column="16">1<pos:position pos:line="28" pos:column="17"/></literal><operator pos:line="28" pos:column="17">)<pos:position pos:line="28" pos:column="18"/></operator></expr>;<pos:position pos:line="28" pos:column="19"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></else></if>
  }<pos:position pos:line="30" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">DEBUG<pos:position pos:line="32" pos:column="8"/></name> <argument_list pos:line="32" pos:column="9">(<argument><expr><literal type="string" pos:line="32" pos:column="10">"numa plugin: Found %i nodes."<pos:position pos:line="32" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">max_node<pos:position pos:line="32" pos:column="50"/></name> <operator pos:line="32" pos:column="51">+<pos:position pos:line="32" pos:column="52"/></operator> <literal type="number" pos:line="32" pos:column="53">1<pos:position pos:line="32" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="56"/></expr_stmt>
  <return pos:line="33" pos:column="3">return <expr><operator pos:line="33" pos:column="10">(<pos:position pos:line="33" pos:column="11"/></operator><literal type="number" pos:line="33" pos:column="11">0<pos:position pos:line="33" pos:column="12"/></literal><operator pos:line="33" pos:column="12">)<pos:position pos:line="33" pos:column="13"/></operator></expr>;<pos:position pos:line="33" pos:column="14"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

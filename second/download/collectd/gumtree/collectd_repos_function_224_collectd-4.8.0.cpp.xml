<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_224_collectd-4.8.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">apcups_shutdown<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uint16_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">packet_size<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><literal type="number" pos:line="3" pos:column="32">0<pos:position pos:line="3" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">global_sockfd<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">&lt;<pos:position pos:line="5" pos:column="31"/></operator> <literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr>)<pos:position pos:line="5" pos:column="31"/></condition><then pos:line="5" pos:column="31">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal><operator pos:line="6" pos:column="26">)<pos:position pos:line="6" pos:column="27"/></operator></expr>;<pos:position pos:line="6" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">DEBUG<pos:position pos:line="8" pos:column="14"/></name> <argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="string" pos:line="8" pos:column="16">"Gracefully shutting down socket %i."<pos:position pos:line="8" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="55">global_sockfd<pos:position pos:line="8" pos:column="68"/></name></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* send EOF sentinel */</comment>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">swrite<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">global_sockfd<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="32">(<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">void<pos:position pos:line="11" pos:column="37"/></name> <operator pos:line="11" pos:column="38">*<pos:position pos:line="11" pos:column="39"/></operator><operator pos:line="11" pos:column="39">)<pos:position pos:line="11" pos:column="40"/></operator> <operator pos:line="11" pos:column="41">&amp;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="42">packet_size<pos:position pos:line="11" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="55">sizeof <argument_list pos:line="11" pos:column="62">(<argument><expr><name pos:line="11" pos:column="63">packet_size<pos:position pos:line="11" pos:column="74"/></name></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="77"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">close<pos:position pos:line="13" pos:column="14"/></name> <argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">global_sockfd<pos:position pos:line="13" pos:column="29"/></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">global_sockfd<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>

	<return pos:line="16" pos:column="9">return <expr><operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><literal type="number" pos:line="16" pos:column="17">0<pos:position pos:line="16" pos:column="18"/></literal><operator pos:line="16" pos:column="18">)<pos:position pos:line="16" pos:column="19"/></operator></expr>;<pos:position pos:line="16" pos:column="20"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>
